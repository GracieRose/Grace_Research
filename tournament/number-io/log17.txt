Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[13.346267751992457 -57] -43.65373224800754]
Train Case:   1 | Input/Output: [[-45.694769965736334 -91] -136.69476996573633]
Train Case:   2 | Input/Output: [[-87.51441089637872 33] -54.51441089637872]
Train Case:   3 | Input/Output: [[-21.39397336600102 26] 4.6060266339989795]
Train Case:   4 | Input/Output: [[-9.749075416432177 91] 81.25092458356782]
Train Case:   5 | Input/Output: [[42.261254152037424 -67] -24.738745847962576]
Train Case:   6 | Input/Output: [[77.40132558257031 -75] 2.4013255825703084]
Train Case:   7 | Input/Output: [[57.82805919863296 80] 137.82805919863296]
Train Case:   8 | Input/Output: [[50.615471273504255 -47] 3.615471273504255]
Train Case:   9 | Input/Output: [[98.83199930343488 44] 142.83199930343488]
Train Case:  10 | Input/Output: [[-29.273384984137536 -78] -107.27338498413754]
Train Case:  11 | Input/Output: [[26.405944849897594 -74] -47.594055150102406]
Train Case:  12 | Input/Output: [[-40.86182190097605 -6] -46.86182190097605]
Train Case:  13 | Input/Output: [[22.03681785612504 89] 111.03681785612504]
Train Case:  14 | Input/Output: [[84.65438199142542 -45] 39.654381991425424]
Train Case:  15 | Input/Output: [[80.90010022461965 81] 161.90010022461965]
Train Case:  16 | Input/Output: [[-57.42593824571986 48] -9.425938245719863]
Train Case:  17 | Input/Output: [[-81.47907257829863 37] -44.47907257829863]
Train Case:  18 | Input/Output: [[27.2414035608399 14] 41.2414035608399]
Train Case:  19 | Input/Output: [[98.1536429927842 -34] 64.1536429927842]
Train Case:  20 | Input/Output: [[10.57950480561452 10] 20.57950480561452]
Train Case:  21 | Input/Output: [[61.70057685666504 -93] -31.299423143334963]
Train Case:  22 | Input/Output: [[26.873066125056027 31] 57.87306612505603]
Train Case:  23 | Input/Output: [[-85.74642996323263 -67] -152.74642996323263]
Train Case:  24 | Input/Output: [[93.40748279860819 -89] 4.407482798608186]
Test Case:   0 | Input/Output: [[88.21514718806384 88] 176.21514718806384]
Test Case:   1 | Input/Output: [[-10.079151105000534 -58] -68.07915110500053]
Test Case:   2 | Input/Output: [[41.53557364435051 -81] -39.46442635564949]
Test Case:   3 | Input/Output: [[9.823703932175974 -53] -43.176296067824026]
Test Case:   4 | Input/Output: [[82.14208619086656 10] 92.14208619086656]
Test Case:   5 | Input/Output: [[-47.52832444653576 30] -17.528324446535763]
Test Case:   6 | Input/Output: [[-50.11929998286866 -53] -103.11929998286865]
Test Case:   7 | Input/Output: [[72.09372974915166 -26] 46.09372974915166]
Test Case:   8 | Input/Output: [[54.12065898032117 -1] 53.12065898032117]
Test Case:   9 | Input/Output: [[-50.07026628903564 -11] -61.07026628903564]
Test Case:  10 | Input/Output: [[75.48934129798363 -42] 33.48934129798363]
Test Case:  11 | Input/Output: [[69.70181815525657 -5] 64.70181815525657]
Test Case:  12 | Input/Output: [[-68.90591577535845 -81] -149.90591577535844]
Test Case:  13 | Input/Output: [[-53.48967835454319 -14] -67.48967835454319]
Test Case:  14 | Input/Output: [[0.9110093002546762 55] 55.911009300254676]
Test Case:  15 | Input/Output: [[52.654831139671245 -14] 38.654831139671245]
Test Case:  16 | Input/Output: [[63.34578870724346 -42] 21.345788707243457]
Test Case:  17 | Input/Output: [[-18.839859671699514 26] 7.160140328300486]
Test Case:  18 | Input/Output: [[43.99756539774404 20] 63.99756539774404]
Test Case:  19 | Input/Output: [[93.8547403883963 -13] 80.8547403883963]
Test Case:  20 | Input/Output: [[-72.10048426820654 -70] -142.10048426820654]
Test Case:  21 | Input/Output: [[65.852678303619 -10] 55.852678303619]
Test Case:  22 | Input/Output: [[55.962626008300475 36] 91.96262600830048]
Test Case:  23 | Input/Output: [[-11.494132427454844 -18] -29.494132427454844]
Test Case:  24 | Input/Output: [[-80.64723921005364 99] 18.35276078994636]
Test Case:  25 | Input/Output: [[-62.22070281656147 32] -30.22070281656147]
Test Case:  26 | Input/Output: [[63.591824104132996 -38] 25.591824104132996]
Test Case:  27 | Input/Output: [[-77.08525311048946 -38] -115.08525311048946]
Test Case:  28 | Input/Output: [[87.67612229230738 84] 171.67612229230738]
Test Case:  29 | Input/Output: [[-58.283735382361535 -67] -125.28373538236153]
Test Case:  30 | Input/Output: [[57.950888064738336 -68] -10.049111935261664]
Test Case:  31 | Input/Output: [[31.97892635149526 16] 47.97892635149526]
Test Case:  32 | Input/Output: [[-98.59152546265977 50] -48.591525462659774]
Test Case:  33 | Input/Output: [[-68.61063977648263 -8] -76.61063977648263]
Test Case:  34 | Input/Output: [[50.25211897673495 -47] 3.2521189767349483]
Test Case:  35 | Input/Output: [[-91.64623971120858 -79] -170.64623971120858]
Test Case:  36 | Input/Output: [[11.511316519461559 22] 33.51131651946156]
Test Case:  37 | Input/Output: [[-12.063750291035376 -66] -78.06375029103538]
Test Case:  38 | Input/Output: [[-20.998506670249256 -85] -105.99850667024926]
Test Case:  39 | Input/Output: [[3.181966035258071 -29] -25.81803396474193]
Test Case:  40 | Input/Output: [[-73.58713834662103 26] -47.58713834662103]
Test Case:  41 | Input/Output: [[-97.33797031280358 -45] -142.33797031280358]
Test Case:  42 | Input/Output: [[-52.31178349180692 -93] -145.31178349180692]
Test Case:  43 | Input/Output: [[-46.56261464553033 -75] -121.56261464553033]
Test Case:  44 | Input/Output: [[-17.17984869592597 -69] -86.17984869592597]
Test Case:  45 | Input/Output: [[91.0898073303529 58] 149.0898073303529]
Test Case:  46 | Input/Output: [[45.70043672448608 -26] 19.70043672448608]
Test Case:  47 | Input/Output: [[22.66842889346472 94] 116.66842889346472]
Test Case:  48 | Input/Output: [[88.15306226663449 -32] 56.15306226663449]
Test Case:  49 | Input/Output: [[-63.032433711397104 65] 1.967566288602896]
Test Case:  50 | Input/Output: [[-83.4621139775136 92] 8.537886022486404]
Test Case:  51 | Input/Output: [[-18.157698791120012 46] 27.842301208879988]
Test Case:  52 | Input/Output: [[66.3485259295885 -51] 15.348525929588504]
Test Case:  53 | Input/Output: [[-7.010688033001429 -23] -30.01068803300143]
Test Case:  54 | Input/Output: [[-90.88977368551411 44] -46.889773685514115]
Test Case:  55 | Input/Output: [[-77.65311224581777 9] -68.65311224581777]
Test Case:  56 | Input/Output: [[67.68267266946162 -63] 4.682672669461624]
Test Case:  57 | Input/Output: [[37.09541637691325 -15] 22.09541637691325]
Test Case:  58 | Input/Output: [[-9.920737666632533 41] 31.079262333367467]
Test Case:  59 | Input/Output: [[47.62347481974726 71] 118.62347481974726]
Test Case:  60 | Input/Output: [[-72.75093761310005 -3] -75.75093761310005]
Test Case:  61 | Input/Output: [[85.18042228703226 -67] 18.180422287032258]
Test Case:  62 | Input/Output: [[-71.32831403652543 -43] -114.32831403652543]
Test Case:  63 | Input/Output: [[26.73834315254399 -93] -66.26165684745601]
Test Case:  64 | Input/Output: [[-22.05760653732645 38] 15.94239346267355]
Test Case:  65 | Input/Output: [[4.192673102038839 -55] -50.80732689796116]
Test Case:  66 | Input/Output: [[24.901018325691822 -78] -53.09898167430818]
Test Case:  67 | Input/Output: [[53.65285277882006 -81] -27.347147221179938]
Test Case:  68 | Input/Output: [[43.27575554850813 54] 97.27575554850813]
Test Case:  69 | Input/Output: [[32.43657698256558 -57] -24.563423017434417]
Test Case:  70 | Input/Output: [[-31.998322972316885 -16] -47.998322972316885]
Test Case:  71 | Input/Output: [[80.8590985253067 5] 85.8590985253067]
Test Case:  72 | Input/Output: [[46.580042879673954 -85] -38.419957120326046]
Test Case:  73 | Input/Output: [[91.3490230565302 70] 161.3490230565302]
Test Case:  74 | Input/Output: [[-31.931985173604872 -40] -71.93198517360487]
Test Case:  75 | Input/Output: [[39.26676207442861 -80] -40.73323792557139]
Test Case:  76 | Input/Output: [[24.17338543034853 -4] 20.17338543034853]
Test Case:  77 | Input/Output: [[25.10020325219952 93] 118.10020325219952]
Test Case:  78 | Input/Output: [[80.21308251646698 -50] 30.213082516466983]
Test Case:  79 | Input/Output: [[-7.506166184356928 -64] -71.50616618435693]
Test Case:  80 | Input/Output: [[64.13970011904695 -41] 23.13970011904695]
Test Case:  81 | Input/Output: [[-79.61165804724155 67] -12.611658047241548]
Test Case:  82 | Input/Output: [[-39.87571592715795 -5] -44.87571592715795]
Test Case:  83 | Input/Output: [[-30.104503558634917 -68] -98.10450355863492]
Test Case:  84 | Input/Output: [[27.19897164365159 77] 104.19897164365159]
Test Case:  85 | Input/Output: [[-41.069174254690545 48] 6.9308257453094555]
Test Case:  86 | Input/Output: [[-92.95279257451232 37] -55.952792574512316]
Test Case:  87 | Input/Output: [[-9.324303693241617 96] 86.67569630675838]
Test Case:  88 | Input/Output: [[51.156012578401686 -79] -27.843987421598314]
Test Case:  89 | Input/Output: [[12.354699781477962 -99] -86.64530021852204]
Test Case:  90 | Input/Output: [[55.68222533403855 49] 104.68222533403855]
Test Case:  91 | Input/Output: [[-4.842766226319668 88] 83.15723377368033]
Test Case:  92 | Input/Output: [[0.41764584417083483 -28] -27.582354155829165]
Test Case:  93 | Input/Output: [[-57.591571711919734 -85] -142.59157171191973]
Test Case:  94 | Input/Output: [[-35.22154713336076 27] -8.221547133360758]
Test Case:  95 | Input/Output: [[-65.16001904133267 -75] -140.16001904133267]
Test Case:  96 | Input/Output: [[-26.080642810351435 77] 50.919357189648565]
Test Case:  97 | Input/Output: [[95.88115430584295 48] 143.88115430584295]
Test Case:  98 | Input/Output: [[-82.65409613465029 -55] -137.65409613465027]
Test Case:  99 | Input/Output: [[-87.63042643805032 -7] -94.63042643805032]
Test Case: 100 | Input/Output: [[-71.92138950377736 -6] -77.92138950377736]
Test Case: 101 | Input/Output: [[-9.90481671474268 -59] -68.90481671474268]
Test Case: 102 | Input/Output: [[10.180693134943581 7] 17.18069313494358]
Test Case: 103 | Input/Output: [[81.34339110120129 -36] 45.34339110120129]
Test Case: 104 | Input/Output: [[49.96919002341443 -47] 2.969190023414427]
Test Case: 105 | Input/Output: [[5.773252489085536 26] 31.773252489085536]
Test Case: 106 | Input/Output: [[-21.25410691604357 -70] -91.25410691604357]
Test Case: 107 | Input/Output: [[58.0336871676827 78] 136.0336871676827]
Test Case: 108 | Input/Output: [[-26.148277300945082 13] -13.148277300945082]
Test Case: 109 | Input/Output: [[-21.243400352297968 7] -14.243400352297968]
Test Case: 110 | Input/Output: [[85.2415061481511 57] 142.2415061481511]
Test Case: 111 | Input/Output: [[68.19674662361581 -37] 31.19674662361581]
Test Case: 112 | Input/Output: [[-44.309387123554785 80] 35.690612876445215]
Test Case: 113 | Input/Output: [[38.67623203156219 -88] -49.32376796843781]
Test Case: 114 | Input/Output: [[-59.24909324383745 -85] -144.24909324383745]
Test Case: 115 | Input/Output: [[8.656065113456762 5] 13.656065113456762]
Test Case: 116 | Input/Output: [[90.84839968065552 -29] 61.84839968065552]
Test Case: 117 | Input/Output: [[-9.691682845817311 -50] -59.69168284581731]
Test Case: 118 | Input/Output: [[45.390795777592274 -13] 32.390795777592274]
Test Case: 119 | Input/Output: [[8.315703103531803 -43] -34.6842968964682]
Test Case: 120 | Input/Output: [[-78.49039785821077 -43] -121.49039785821077]
Test Case: 121 | Input/Output: [[-24.847529962456363 -92] -116.84752996245636]
Test Case: 122 | Input/Output: [[35.698961374699934 -62] -26.301038625300066]
Test Case: 123 | Input/Output: [[-11.176446181812082 -47] -58.17644618181208]
Test Case: 124 | Input/Output: [[-50.24830336103374 -87] -137.24830336103375]
Test Case: 125 | Input/Output: [[54.35805709506195 76] 130.35805709506195]
Test Case: 126 | Input/Output: [[68.77736546299798 91] 159.77736546299798]
Test Case: 127 | Input/Output: [[-74.89372976234696 -29] -103.89372976234696]
Test Case: 128 | Input/Output: [[50.08188408891405 -30] 20.08188408891405]
Test Case: 129 | Input/Output: [[92.61664028519894 -5] 87.61664028519894]
Test Case: 130 | Input/Output: [[-98.24137054745239 31] -67.24137054745239]
Test Case: 131 | Input/Output: [[-69.69037726677278 96] 26.309622733227215]
Test Case: 132 | Input/Output: [[-82.08367412435848 12] -70.08367412435848]
Test Case: 133 | Input/Output: [[-36.50102572533105 -67] -103.50102572533105]
Test Case: 134 | Input/Output: [[48.76387247425913 -71] -22.23612752574087]
Test Case: 135 | Input/Output: [[-38.707373286908144 -78] -116.70737328690814]
Test Case: 136 | Input/Output: [[-58.643937263735154 -9] -67.64393726373515]
Test Case: 137 | Input/Output: [[61.90539595624702 68] 129.90539595624702]
Test Case: 138 | Input/Output: [[79.24458408163667 85] 164.24458408163667]
Test Case: 139 | Input/Output: [[40.32066102292694 -25] 15.320661022926942]
Test Case: 140 | Input/Output: [[-24.3051672649149 -81] -105.3051672649149]
Test Case: 141 | Input/Output: [[87.55934961727985 50] 137.55934961727985]
Test Case: 142 | Input/Output: [[-85.7417507580806 -92] -177.7417507580806]
Test Case: 143 | Input/Output: [[-0.6874365368057909 -39] -39.68743653680579]
Test Case: 144 | Input/Output: [[62.933491787733544 -48] 14.933491787733544]
Test Case: 145 | Input/Output: [[15.768524936658679 58] 73.76852493665868]
Test Case: 146 | Input/Output: [[83.84425580515054 12] 95.84425580515054]
Test Case: 147 | Input/Output: [[-43.1147382784925 -17] -60.1147382784925]
Test Case: 148 | Input/Output: [[69.07885685951226 -19] 50.07885685951226]
Test Case: 149 | Input/Output: [[16.82037539484608 -34] -17.17962460515392]
Test Case: 150 | Input/Output: [[68.3646603814098 41] 109.3646603814098]
Test Case: 151 | Input/Output: [[-88.98518531784492 -47] -135.98518531784492]
Test Case: 152 | Input/Output: [[72.76669020638641 -14] 58.766690206386414]
Test Case: 153 | Input/Output: [[-32.536214702820416 -91] -123.53621470282042]
Test Case: 154 | Input/Output: [[28.840506326873708 49] 77.84050632687371]
Test Case: 155 | Input/Output: [[43.52480280955652 34] 77.52480280955652]
Test Case: 156 | Input/Output: [[0.22787682992850478 69] 69.2278768299285]
Test Case: 157 | Input/Output: [[-74.95708228006669 -23] -97.95708228006669]
Test Case: 158 | Input/Output: [[-83.62617804723848 74] -9.626178047238483]
Test Case: 159 | Input/Output: [[98.01762005550131 -59] 39.01762005550131]
Test Case: 160 | Input/Output: [[-2.5813074490278893 71] 68.41869255097211]
Test Case: 161 | Input/Output: [[4.080427795598027 -33] -28.919572204401973]
Test Case: 162 | Input/Output: [[56.84232004506103 3] 59.84232004506103]
Test Case: 163 | Input/Output: [[-66.84861627256329 95] 28.15138372743671]
Test Case: 164 | Input/Output: [[-45.00733808991968 -32] -77.00733808991967]
Test Case: 165 | Input/Output: [[-4.772990978289698 15] 10.227009021710302]
Test Case: 166 | Input/Output: [[39.89096117649868 -1] 38.89096117649868]
Test Case: 167 | Input/Output: [[-59.72755485862369 39] -20.72755485862369]
Test Case: 168 | Input/Output: [[27.86895964580833 15] 42.86895964580833]
Test Case: 169 | Input/Output: [[-14.136469059553079 35] 20.86353094044692]
Test Case: 170 | Input/Output: [[73.2462099849945 -73] 0.24620998499449342]
Test Case: 171 | Input/Output: [[-0.5456621986561032 4] 3.454337801343897]
Test Case: 172 | Input/Output: [[59.48101332592984 -20] 39.48101332592984]
Test Case: 173 | Input/Output: [[18.235557787918964 17] 35.235557787918964]
Test Case: 174 | Input/Output: [[-6.179167475098851 2] -4.179167475098851]
Test Case: 175 | Input/Output: [[-64.31463217028005 5] -59.31463217028005]
Test Case: 176 | Input/Output: [[62.688936265411144 -4] 58.688936265411144]
Test Case: 177 | Input/Output: [[-99.50777953766863 -81] -180.50777953766863]
Test Case: 178 | Input/Output: [[34.27149759132803 17] 51.27149759132803]
Test Case: 179 | Input/Output: [[76.46791802532255 80] 156.46791802532255]
Test Case: 180 | Input/Output: [[50.66248811635228 50] 100.66248811635228]
Test Case: 181 | Input/Output: [[20.777172326317014 46] 66.77717232631701]
Test Case: 182 | Input/Output: [[41.422181509993464 -38] 3.4221815099934645]
Test Case: 183 | Input/Output: [[60.257382501049676 44] 104.25738250104968]
Test Case: 184 | Input/Output: [[-6.834515228737459 48] 41.16548477126254]
Test Case: 185 | Input/Output: [[-76.60959874481044 28] -48.60959874481044]
Test Case: 186 | Input/Output: [[-2.2879770539006046 8] 5.712022946099395]
Test Case: 187 | Input/Output: [[-35.562331979196756 -71] -106.56233197919676]
Test Case: 188 | Input/Output: [[-89.40861048928465 93] 3.591389510715345]
Test Case: 189 | Input/Output: [[96.40734499042483 67] 163.40734499042483]
Test Case: 190 | Input/Output: [[19.29181474428674 9] 28.29181474428674]
Test Case: 191 | Input/Output: [[-58.26100500883222 -46] -104.26100500883223]
Test Case: 192 | Input/Output: [[-54.65199855756908 80] 25.34800144243092]
Test Case: 193 | Input/Output: [[41.54306751612117 37] 78.54306751612117]
Test Case: 194 | Input/Output: [[2.230393501168095 -21] -18.769606498831905]
Test Case: 195 | Input/Output: [[5.9246963894352405 57] 62.92469638943524]
Test Case: 196 | Input/Output: [[-4.642637065125641 -55] -59.64263706512564]
Test Case: 197 | Input/Output: [[44.9106914584078 92] 136.9106914584078]
Test Case: 198 | Input/Output: [[60.70215943436165 94] 154.70215943436165]
Test Case: 199 | Input/Output: [[88.26997071551781 -70] 18.269970715517815]
Test Case: 200 | Input/Output: [[-6.434997697938357 58] 51.56500230206164]
Test Case: 201 | Input/Output: [[-81.47333445350664 75] -6.473334453506638]
Test Case: 202 | Input/Output: [[20.568659985252722 20] 40.56865998525272]
Test Case: 203 | Input/Output: [[66.48544910518973 -9] 57.48544910518973]
Test Case: 204 | Input/Output: [[93.33542204248252 -50] 43.33542204248252]
Test Case: 205 | Input/Output: [[75.27718966680172 -59] 16.277189666801718]
Test Case: 206 | Input/Output: [[4.686152628646639 -19] -14.313847371353361]
Test Case: 207 | Input/Output: [[-55.21709531586716 98] 42.78290468413284]
Test Case: 208 | Input/Output: [[52.968604983683065 93] 145.96860498368306]
Test Case: 209 | Input/Output: [[52.63016552785248 -59] -6.369834472147517]
Test Case: 210 | Input/Output: [[-31.746890627149654 24] -7.746890627149654]
Test Case: 211 | Input/Output: [[-25.34899755945834 82] 56.65100244054166]
Test Case: 212 | Input/Output: [[-28.511296266286436 2] -26.511296266286436]
Test Case: 213 | Input/Output: [[37.90433838105457 49] 86.90433838105457]
Test Case: 214 | Input/Output: [[-23.646014521860252 87] 63.35398547813975]
Test Case: 215 | Input/Output: [[65.76549685382889 -98] -32.23450314617111]
Test Case: 216 | Input/Output: [[42.38315946839134 59] 101.38315946839134]
Test Case: 217 | Input/Output: [[-60.35385709627725 60] -0.3538570962772525]
Test Case: 218 | Input/Output: [[6.306874174125539 45] 51.30687417412554]
Test Case: 219 | Input/Output: [[-14.607266787158807 32] 17.392733212841193]
Test Case: 220 | Input/Output: [[-47.80340158027574 -43] -90.80340158027573]
Test Case: 221 | Input/Output: [[43.28152416047493 -36] 7.28152416047493]
Test Case: 222 | Input/Output: [[-69.1902853651982 50] -19.190285365198207]
Test Case: 223 | Input/Output: [[-4.930074158916668 -7] -11.930074158916668]
Test Case: 224 | Input/Output: [[38.31758958165966 -9] 29.31758958165966]
Test Case: 225 | Input/Output: [[-57.550886706091454 -44] -101.55088670609146]
Test Case: 226 | Input/Output: [[-39.8201143208883 31] -8.820114320888301]
Test Case: 227 | Input/Output: [[70.39763636110135 45] 115.39763636110135]
Test Case: 228 | Input/Output: [[69.74046263871634 -89] -19.259537361283662]
Test Case: 229 | Input/Output: [[33.85329128582538 -83] -49.14670871417462]
Test Case: 230 | Input/Output: [[40.172969795265374 -31] 9.172969795265374]
Test Case: 231 | Input/Output: [[-42.34531601563227 -67] -109.34531601563228]
Test Case: 232 | Input/Output: [[12.636576256199831 28] 40.63657625619983]
Test Case: 233 | Input/Output: [[-24.198580666300543 82] 57.80141933369946]
Test Case: 234 | Input/Output: [[-2.977023737074518 69] 66.02297626292548]
Test Case: 235 | Input/Output: [[23.733334965877617 37] 60.73333496587762]
Test Case: 236 | Input/Output: [[75.19613989380017 58] 133.19613989380017]
Test Case: 237 | Input/Output: [[62.33698475016902 -38] 24.336984750169023]
Test Case: 238 | Input/Output: [[-60.709718113023435 -38] -98.70971811302343]
Test Case: 239 | Input/Output: [[22.583316380475196 -20] 2.583316380475196]
Test Case: 240 | Input/Output: [[-54.94387934270208 -1] -55.94387934270208]
Test Case: 241 | Input/Output: [[77.95440140508805 43] 120.95440140508805]
Test Case: 242 | Input/Output: [[96.20489890261581 51] 147.2048989026158]
Test Case: 243 | Input/Output: [[-76.4584929267368 90] 13.541507073263205]
Test Case: 244 | Input/Output: [[-28.89001871289092 -45] -73.89001871289092]
Test Case: 245 | Input/Output: [[-10.939127670541637 -62] -72.93912767054164]
Test Case: 246 | Input/Output: [[-32.11653330607123 31] -1.1165333060712328]
Test Case: 247 | Input/Output: [[77.95091736324582 -5] 72.95091736324582]
Test Case: 248 | Input/Output: [[-30.84561020391139 -95] -125.84561020391139]
Test Case: 249 | Input/Output: [[-55.16684489156412 -59] -114.16684489156412]
Test Case: 250 | Input/Output: [[-92.84259114180016 -68] -160.84259114180014]
Test Case: 251 | Input/Output: [[15.520856976572858 52] 67.52085697657286]
Test Case: 252 | Input/Output: [[48.17427616631997 3] 51.17427616631997]
Test Case: 253 | Input/Output: [[-25.971055595041292 95] 69.02894440495871]
Test Case: 254 | Input/Output: [[-93.04709810353214 -73] -166.04709810353214]
Test Case: 255 | Input/Output: [[55.78972798544848 62] 117.78972798544848]
Test Case: 256 | Input/Output: [[53.70569278186616 49] 102.70569278186616]
Test Case: 257 | Input/Output: [[87.37924665023559 89] 176.3792466502356]
Test Case: 258 | Input/Output: [[1.9495336893794217 -66] -64.05046631062058]
Test Case: 259 | Input/Output: [[19.568474894360847 -77] -57.43152510563915]
Test Case: 260 | Input/Output: [[-65.86543859135719 20] -45.86543859135719]
Test Case: 261 | Input/Output: [[88.8825709290881 -58] 30.882570929088104]
Test Case: 262 | Input/Output: [[99.78820942298691 -3] 96.78820942298691]
Test Case: 263 | Input/Output: [[-50.992033653205596 77] 26.007966346794404]
Test Case: 264 | Input/Output: [[68.81287411552825 52] 120.81287411552825]
Test Case: 265 | Input/Output: [[4.661391705817252 28] 32.66139170581725]
Test Case: 266 | Input/Output: [[24.898272812461713 94] 118.89827281246171]
Test Case: 267 | Input/Output: [[62.04461291160521 3] 65.04461291160521]
Test Case: 268 | Input/Output: [[31.78588724552486 -34] -2.2141127544751384]
Test Case: 269 | Input/Output: [[21.116096529166157 -54] -32.88390347083384]
Test Case: 270 | Input/Output: [[-63.098362436070346 -75] -138.09836243607035]
Test Case: 271 | Input/Output: [[-91.12500163854043 57] -34.125001638540425]
Test Case: 272 | Input/Output: [[99.8509589788375 74] 173.8509589788375]
Test Case: 273 | Input/Output: [[-17.782271994987184 48] 30.217728005012816]
Test Case: 274 | Input/Output: [[89.00236388410602 86] 175.00236388410602]
Test Case: 275 | Input/Output: [[-80.03316119994146 -47] -127.03316119994146]
Test Case: 276 | Input/Output: [[-19.818524635061507 95] 75.18147536493849]
Test Case: 277 | Input/Output: [[60.37653851015895 -79] -18.62346148984105]
Test Case: 278 | Input/Output: [[-41.16058985384443 -67] -108.16058985384443]
Test Case: 279 | Input/Output: [[-70.89779337831354 -15] -85.89779337831354]
Test Case: 280 | Input/Output: [[-93.85897333315253 -81] -174.85897333315253]
Test Case: 281 | Input/Output: [[-58.08019492453409 -81] -139.08019492453408]
Test Case: 282 | Input/Output: [[35.376521140325565 89] 124.37652114032556]
Test Case: 283 | Input/Output: [[30.276711452297008 -24] 6.2767114522970076]
Test Case: 284 | Input/Output: [[20.554375018606464 -38] -17.445624981393536]
Test Case: 285 | Input/Output: [[14.215247890666433 27] 41.21524789066643]
Test Case: 286 | Input/Output: [[85.85186218950852 99] 184.85186218950852]
Test Case: 287 | Input/Output: [[-83.73178758746194 -53] -136.73178758746195]
Test Case: 288 | Input/Output: [[57.2381090195891 -56] 1.2381090195891034]
Test Case: 289 | Input/Output: [[-76.86160686647104 -54] -130.86160686647105]
Test Case: 290 | Input/Output: [[5.425111015752378 13] 18.42511101575238]
Test Case: 291 | Input/Output: [[86.22392129185593 17] 103.22392129185593]
Test Case: 292 | Input/Output: [[5.068297247363091 24] 29.06829724736309]
Test Case: 293 | Input/Output: [[58.09592690403045 -63] -4.904073095969551]
Test Case: 294 | Input/Output: [[16.761850420990697 -43] -26.238149579009303]
Test Case: 295 | Input/Output: [[29.197576860678026 -3] 26.197576860678026]
Test Case: 296 | Input/Output: [[-93.84853246912238 49] -44.848532469122375]
Test Case: 297 | Input/Output: [[-14.257797446573335 -91] -105.25779744657333]
Test Case: 298 | Input/Output: [[85.73969713573808 -12] 73.73969713573808]
Test Case: 299 | Input/Output: [[27.50338687444112 -69] -41.49661312555888]
Test Case: 300 | Input/Output: [[54.18304251902924 49] 103.18304251902924]
Test Case: 301 | Input/Output: [[-77.21619444706383 -96] -173.21619444706383]
Test Case: 302 | Input/Output: [[-76.79900921660716 -91] -167.79900921660715]
Test Case: 303 | Input/Output: [[97.22158798076828 -58] 39.22158798076828]
Test Case: 304 | Input/Output: [[72.37180916256924 -1] 71.37180916256924]
Test Case: 305 | Input/Output: [[95.77616933490583 60] 155.77616933490583]
Test Case: 306 | Input/Output: [[-29.54487965481978 -94] -123.54487965481978]
Test Case: 307 | Input/Output: [[-98.48684221816382 20] -78.48684221816382]
Test Case: 308 | Input/Output: [[6.201483281250276 -27] -20.798516718749724]
Test Case: 309 | Input/Output: [[26.964225202985645 -33] -6.035774797014355]
Test Case: 310 | Input/Output: [[-7.601904464571277 76] 68.39809553542872]
Test Case: 311 | Input/Output: [[44.66980991460409 -63] -18.330190085395913]
Test Case: 312 | Input/Output: [[-28.043144593324868 -61] -89.04314459332487]
Test Case: 313 | Input/Output: [[-42.65873719439113 -27] -69.65873719439114]
Test Case: 314 | Input/Output: [[40.85702494992839 -51] -10.142975050071612]
Test Case: 315 | Input/Output: [[-92.73120052018982 18] -74.73120052018982]
Test Case: 316 | Input/Output: [[37.93867543381046 43] 80.93867543381046]
Test Case: 317 | Input/Output: [[96.29676298587626 81] 177.29676298587626]
Test Case: 318 | Input/Output: [[38.787030088170894 33] 71.7870300881709]
Test Case: 319 | Input/Output: [[94.83188970879027 -61] 33.83188970879027]
Test Case: 320 | Input/Output: [[16.450080962593702 -5] 11.450080962593702]
Test Case: 321 | Input/Output: [[35.84381756399344 -37] -1.15618243600656]
Test Case: 322 | Input/Output: [[12.983149484908111 -92] -79.01685051509189]
Test Case: 323 | Input/Output: [[70.83109076082093 3] 73.83109076082093]
Test Case: 324 | Input/Output: [[50.87040925777757 96] 146.87040925777757]
Test Case: 325 | Input/Output: [[36.81796656337869 57] 93.81796656337869]
Test Case: 326 | Input/Output: [[-35.66560717347285 -61] -96.66560717347285]
Test Case: 327 | Input/Output: [[2.25619507823815 60] 62.25619507823815]
Test Case: 328 | Input/Output: [[33.54352227971958 -98] -64.45647772028042]
Test Case: 329 | Input/Output: [[-94.61728444947602 -79] -173.61728444947602]
Test Case: 330 | Input/Output: [[-57.10900388999889 -28] -85.10900388999889]
Test Case: 331 | Input/Output: [[-23.40311812809854 70] 46.59688187190146]
Test Case: 332 | Input/Output: [[17.9383597609486 23] 40.9383597609486]
Test Case: 333 | Input/Output: [[77.12202521131616 16] 93.12202521131616]
Test Case: 334 | Input/Output: [[-83.87483882740588 -76] -159.87483882740588]
Test Case: 335 | Input/Output: [[-53.31861668651019 38] -15.31861668651019]
Test Case: 336 | Input/Output: [[-52.363699432971586 -24] -76.36369943297159]
Test Case: 337 | Input/Output: [[-3.14047719711472 26] 22.85952280288528]
Test Case: 338 | Input/Output: [[-21.547558734387934 87] 65.45244126561207]
Test Case: 339 | Input/Output: [[60.121751836424465 -26] 34.121751836424465]
Test Case: 340 | Input/Output: [[-11.618178054346927 60] 48.38182194565307]
Test Case: 341 | Input/Output: [[-0.4428804944101188 -45] -45.44288049441012]
Test Case: 342 | Input/Output: [[11.350401232369677 44] 55.35040123236968]
Test Case: 343 | Input/Output: [[-28.37154897186109 -12] -40.37154897186109]
Test Case: 344 | Input/Output: [[24.812485501660063 -78] -53.18751449833994]
Test Case: 345 | Input/Output: [[-84.64238090116238 72] -12.642380901162383]
Test Case: 346 | Input/Output: [[-66.59654334304167 -74] -140.59654334304167]
Test Case: 347 | Input/Output: [[-74.23897296476183 -35] -109.23897296476183]
Test Case: 348 | Input/Output: [[58.78409293175628 -10] 48.78409293175628]
Test Case: 349 | Input/Output: [[50.89737142830103 23] 73.89737142830103]
Test Case: 350 | Input/Output: [[45.74598147783465 25] 70.74598147783465]
Test Case: 351 | Input/Output: [[-44.061770519813635 8] -36.061770519813635]
Test Case: 352 | Input/Output: [[-99.84154422702596 -35] -134.84154422702596]
Test Case: 353 | Input/Output: [[-29.000508434588966 0] -29.000508434588966]
Test Case: 354 | Input/Output: [[-49.056478819144104 -28] -77.0564788191441]
Test Case: 355 | Input/Output: [[94.85683805833662 56] 150.85683805833662]
Test Case: 356 | Input/Output: [[77.46063654385787 35] 112.46063654385787]
Test Case: 357 | Input/Output: [[-98.02716518447427 -44] -142.02716518447426]
Test Case: 358 | Input/Output: [[2.377502684944716 -45] -42.622497315055284]
Test Case: 359 | Input/Output: [[-47.98120456064554 6] -41.98120456064554]
Test Case: 360 | Input/Output: [[-61.49864979649826 21] -40.49864979649826]
Test Case: 361 | Input/Output: [[54.72379502025254 90] 144.72379502025254]
Test Case: 362 | Input/Output: [[82.6457386209897 -16] 66.6457386209897]
Test Case: 363 | Input/Output: [[87.3635821275511 -93] -5.636417872448902]
Test Case: 364 | Input/Output: [[70.45171480839235 -46] 24.451714808392353]
Test Case: 365 | Input/Output: [[-32.382225115602935 -7] -39.382225115602935]
Test Case: 366 | Input/Output: [[-49.95514370777367 -83] -132.9551437077737]
Test Case: 367 | Input/Output: [[-88.70870663232716 -24] -112.70870663232716]
Test Case: 368 | Input/Output: [[33.39936529956876 -10] 23.399365299568757]
Test Case: 369 | Input/Output: [[-87.82502559840802 61] -26.82502559840802]
Test Case: 370 | Input/Output: [[-10.054479171213828 98] 87.94552082878617]
Test Case: 371 | Input/Output: [[-79.2430505659247 32] -47.243050565924705]
Test Case: 372 | Input/Output: [[-56.53181510702392 -80] -136.53181510702393]
Test Case: 373 | Input/Output: [[82.0581473407398 -31] 51.058147340739794]
Test Case: 374 | Input/Output: [[83.2857009335118 -97] -13.714299066488195]
Test Case: 375 | Input/Output: [[21.77494336995632 -61] -39.22505663004368]
Test Case: 376 | Input/Output: [[-42.08772131414689 -98] -140.0877213141469]
Test Case: 377 | Input/Output: [[83.71848240898112 42] 125.71848240898112]
Test Case: 378 | Input/Output: [[-32.64889689788539 -39] -71.6488968978854]
Test Case: 379 | Input/Output: [[-16.277163234363996 -70] -86.277163234364]
Test Case: 380 | Input/Output: [[79.91028493560557 -16] 63.910284935605574]
Test Case: 381 | Input/Output: [[-6.325771223227989 40] 33.67422877677201]
Test Case: 382 | Input/Output: [[-82.50424139129532 -57] -139.50424139129532]
Test Case: 383 | Input/Output: [[-84.86421898699095 -83] -167.86421898699095]
Test Case: 384 | Input/Output: [[63.614621635010224 -31] 32.614621635010224]
Test Case: 385 | Input/Output: [[20.33954436112711 6] 26.33954436112711]
Test Case: 386 | Input/Output: [[19.29684860624228 14] 33.29684860624228]
Test Case: 387 | Input/Output: [[23.806240993214672 5] 28.806240993214672]
Test Case: 388 | Input/Output: [[-93.38711663736328 44] -49.38711663736328]
Test Case: 389 | Input/Output: [[-90.64699056250905 -13] -103.64699056250905]
Test Case: 390 | Input/Output: [[42.13531762922159 79] 121.13531762922159]
Test Case: 391 | Input/Output: [[-91.32129343104403 -31] -122.32129343104403]
Test Case: 392 | Input/Output: [[23.162054172058433 -58] -34.83794582794157]
Test Case: 393 | Input/Output: [[-89.89203085944729 -77] -166.8920308594473]
Test Case: 394 | Input/Output: [[-64.45723368265129 -39] -103.45723368265129]
Test Case: 395 | Input/Output: [[-35.403634622625674 -98] -133.40363462262567]
Test Case: 396 | Input/Output: [[20.913740791386303 60] 80.9137407913863]
Test Case: 397 | Input/Output: [[-12.165241353897386 -23] -35.165241353897386]
Test Case: 398 | Input/Output: [[-39.94435393308009 78] 38.05564606691991]
Test Case: 399 | Input/Output: [[-43.701266506293 -86] -129.701266506293]
Test Case: 400 | Input/Output: [[-16.086239457380742 65] 48.91376054261926]
Test Case: 401 | Input/Output: [[-74.60892544933706 -85] -159.60892544933705]
Test Case: 402 | Input/Output: [[-85.85867252916475 56] -29.85867252916475]
Test Case: 403 | Input/Output: [[16.595833589313713 55] 71.59583358931371]
Test Case: 404 | Input/Output: [[33.56076311007243 -48] -14.439236889927571]
Test Case: 405 | Input/Output: [[-55.0719517906771 8] -47.0719517906771]
Test Case: 406 | Input/Output: [[73.68139963900447 44] 117.68139963900447]
Test Case: 407 | Input/Output: [[-18.43090960021756 -80] -98.43090960021756]
Test Case: 408 | Input/Output: [[-4.72921961599728 66] 61.27078038400272]
Test Case: 409 | Input/Output: [[-91.4849442657028 86] -5.484944265702794]
Test Case: 410 | Input/Output: [[53.840558599214575 77] 130.84055859921457]
Test Case: 411 | Input/Output: [[-15.046216469861818 -93] -108.04621646986182]
Test Case: 412 | Input/Output: [[-19.355447857842265 11] -8.355447857842265]
Test Case: 413 | Input/Output: [[-78.76587142998179 34] -44.765871429981786]
Test Case: 414 | Input/Output: [[-27.06407648362314 -28] -55.06407648362314]
Test Case: 415 | Input/Output: [[75.87432092552632 30] 105.87432092552632]
Test Case: 416 | Input/Output: [[-42.93149430607217 -59] -101.93149430607217]
Test Case: 417 | Input/Output: [[14.22904993460881 -47] -32.77095006539119]
Test Case: 418 | Input/Output: [[-7.910884421365381 57] 49.08911557863462]
Test Case: 419 | Input/Output: [[-13.414786209359207 -27] -40.41478620935921]
Test Case: 420 | Input/Output: [[13.469349631554081 -66] -52.53065036844592]
Test Case: 421 | Input/Output: [[-4.4880969133609625 6] 1.5119030866390375]
Test Case: 422 | Input/Output: [[-15.177559287826313 -18] -33.17755928782631]
Test Case: 423 | Input/Output: [[2.7485573101845944 13] 15.748557310184594]
Test Case: 424 | Input/Output: [[89.9556604668355 0] 89.9556604668355]
Test Case: 425 | Input/Output: [[34.642085232758774 -27] 7.642085232758774]
Test Case: 426 | Input/Output: [[49.68818530676461 73] 122.68818530676461]
Test Case: 427 | Input/Output: [[-45.12244627322948 -11] -56.12244627322948]
Test Case: 428 | Input/Output: [[82.69355144417133 61] 143.69355144417133]
Test Case: 429 | Input/Output: [[-41.280478880929316 21] -20.280478880929316]
Test Case: 430 | Input/Output: [[21.35292607803747 22] 43.35292607803747]
Test Case: 431 | Input/Output: [[-65.84736466724088 27] -38.84736466724088]
Test Case: 432 | Input/Output: [[-7.086126426392951 -98] -105.08612642639295]
Test Case: 433 | Input/Output: [[-14.726341864641014 18] 3.2736581353589855]
Test Case: 434 | Input/Output: [[81.41885768611402 18] 99.41885768611402]
Test Case: 435 | Input/Output: [[-68.32656192710978 99] 30.67343807289022]
Test Case: 436 | Input/Output: [[-26.28492074071471 29] 2.7150792592852895]
Test Case: 437 | Input/Output: [[74.08121320107537 -4] 70.08121320107537]
Test Case: 438 | Input/Output: [[58.13337320523695 51] 109.13337320523695]
Test Case: 439 | Input/Output: [[82.1177371908841 -25] 57.1177371908841]
Test Case: 440 | Input/Output: [[-44.37645783690911 -63] -107.37645783690911]
Test Case: 441 | Input/Output: [[-33.260049006860044 46] 12.739950993139956]
Test Case: 442 | Input/Output: [[84.27353658955431 -93] -8.726463410445689]
Test Case: 443 | Input/Output: [[11.181080566124635 -49] -37.818919433875365]
Test Case: 444 | Input/Output: [[-72.37670038154869 -100] -172.3767003815487]
Test Case: 445 | Input/Output: [[-8.745328263306249 42] 33.25467173669375]
Test Case: 446 | Input/Output: [[-19.686822050718007 -7] -26.686822050718007]
Test Case: 447 | Input/Output: [[99.23588739050095 27] 126.23588739050095]
Test Case: 448 | Input/Output: [[-11.118841075749344 27] 15.881158924250656]
Test Case: 449 | Input/Output: [[-48.09255349366386 31] -17.092553493663857]
Test Case: 450 | Input/Output: [[15.375414127858207 -72] -56.62458587214179]
Test Case: 451 | Input/Output: [[72.35812105723895 96] 168.35812105723895]
Test Case: 452 | Input/Output: [[-37.15274762869858 -8] -45.15274762869858]
Test Case: 453 | Input/Output: [[-42.7047865591337 -62] -104.70478655913371]
Test Case: 454 | Input/Output: [[25.19539357071352 65] 90.19539357071352]
Test Case: 455 | Input/Output: [[-17.992950084207607 -47] -64.9929500842076]
Test Case: 456 | Input/Output: [[56.16493425020133 7] 63.16493425020133]
Test Case: 457 | Input/Output: [[-27.005264606947605 -45] -72.0052646069476]
Test Case: 458 | Input/Output: [[-63.80853013787133 62] -1.8085301378713297]
Test Case: 459 | Input/Output: [[6.4099834277345735 -70] -63.59001657226543]
Test Case: 460 | Input/Output: [[-91.63340533468691 56] -35.63340533468691]
Test Case: 461 | Input/Output: [[7.918120120633816 -44] -36.081879879366184]
Test Case: 462 | Input/Output: [[70.5155667317905 -45] 25.5155667317905]
Test Case: 463 | Input/Output: [[-90.30883602451136 -87] -177.30883602451138]
Test Case: 464 | Input/Output: [[-80.04679607014869 24] -56.04679607014869]
Test Case: 465 | Input/Output: [[44.837391397578955 91] 135.83739139757895]
Test Case: 466 | Input/Output: [[68.99184967294508 73] 141.99184967294508]
Test Case: 467 | Input/Output: [[45.764470971738206 -58] -12.235529028261794]
Test Case: 468 | Input/Output: [[78.97907828105457 -73] 5.979078281054569]
Test Case: 469 | Input/Output: [[60.984756049452784 35] 95.98475604945278]
Test Case: 470 | Input/Output: [[-11.647020717812822 -87] -98.64702071781282]
Test Case: 471 | Input/Output: [[38.557340719266534 89] 127.55734071926653]
Test Case: 472 | Input/Output: [[-67.12103183192838 -97] -164.12103183192838]
Test Case: 473 | Input/Output: [[-11.651246146436137 -10] -21.651246146436137]
Test Case: 474 | Input/Output: [[-23.582809197042124 -23] -46.582809197042124]
Test Case: 475 | Input/Output: [[46.13803331166926 -22] 24.13803331166926]
Test Case: 476 | Input/Output: [[24.39426381298189 57] 81.39426381298189]
Test Case: 477 | Input/Output: [[-60.86707907017963 -10] -70.86707907017963]
Test Case: 478 | Input/Output: [[87.70114441481093 7] 94.70114441481093]
Test Case: 479 | Input/Output: [[-25.830863058238606 45] 19.169136941761394]
Test Case: 480 | Input/Output: [[14.28983690095076 19] 33.28983690095076]
Test Case: 481 | Input/Output: [[-39.57775557971574 -23] -62.57775557971574]
Test Case: 482 | Input/Output: [[-87.56413051325463 -59] -146.5641305132546]
Test Case: 483 | Input/Output: [[37.503867458325374 14] 51.503867458325374]
Test Case: 484 | Input/Output: [[84.91138886977504 -63] 21.91138886977504]
Test Case: 485 | Input/Output: [[51.86828546468391 54] 105.86828546468391]
Test Case: 486 | Input/Output: [[10.253247763702333 -5] 5.253247763702333]
Test Case: 487 | Input/Output: [[82.99106500491607 -30] 52.99106500491607]
Test Case: 488 | Input/Output: [[-26.72589488969149 2] -24.72589488969149]
Test Case: 489 | Input/Output: [[-33.86893810954304 50] 16.131061890456962]
Test Case: 490 | Input/Output: [[75.37677218185019 -23] 52.376772181850185]
Test Case: 491 | Input/Output: [[1.8942091190836408 -57] -55.10579088091636]
Test Case: 492 | Input/Output: [[-55.573247353610334 -13] -68.57324735361033]
Test Case: 493 | Input/Output: [[11.975999426966922 -57] -45.02400057303308]
Test Case: 494 | Input/Output: [[-18.032628639683864 79] 60.967371360316136]
Test Case: 495 | Input/Output: [[82.97850718031526 99] 181.97850718031526]
Test Case: 496 | Input/Output: [[48.49145474162549 -55] -6.508545258374511]
Test Case: 497 | Input/Output: [[83.00267928414678 100] 183.00267928414678]
Test Case: 498 | Input/Output: [[93.75552657356897 -100] -6.244473426431028]
Test Case: 499 | Input/Output: [[-75.4857195555723 40] -35.4857195555723]
Test Case: 500 | Input/Output: [[4.803879698061991 65] 69.80387969806199]
Test Case: 501 | Input/Output: [[22.954487247232876 -26] -3.0455127527671237]
Test Case: 502 | Input/Output: [[12.888216785804275 -19] -6.111783214195725]
Test Case: 503 | Input/Output: [[-4.683324755584422 52] 47.31667524441558]
Test Case: 504 | Input/Output: [[75.12104783834184 30] 105.12104783834184]
Test Case: 505 | Input/Output: [[-52.855335694239834 -68] -120.85533569423984]
Test Case: 506 | Input/Output: [[-11.851412988598753 13] 1.148587011401247]
Test Case: 507 | Input/Output: [[55.70292752559584 89] 144.70292752559584]
Test Case: 508 | Input/Output: [[-28.071862185894815 42] 13.928137814105185]
Test Case: 509 | Input/Output: [[56.23756933946186 -57] -0.7624306605381435]
Test Case: 510 | Input/Output: [[69.23092534715337 56] 125.23092534715337]
Test Case: 511 | Input/Output: [[87.23948364537154 -34] 53.239483645371536]
Test Case: 512 | Input/Output: [[21.925435244309924 -82] -60.074564755690076]
Test Case: 513 | Input/Output: [[-75.43612315343765 4] -71.43612315343765]
Test Case: 514 | Input/Output: [[61.53127098059346 -5] 56.53127098059346]
Test Case: 515 | Input/Output: [[74.09830137922975 36] 110.09830137922975]
Test Case: 516 | Input/Output: [[54.68881074995562 40] 94.68881074995562]
Test Case: 517 | Input/Output: [[-6.956073044921226 -70] -76.95607304492123]
Test Case: 518 | Input/Output: [[19.803890626032057 -24] -4.196109373967943]
Test Case: 519 | Input/Output: [[-20.537998442215752 -97] -117.53799844221575]
Test Case: 520 | Input/Output: [[73.66172872263576 -14] 59.66172872263576]
Test Case: 521 | Input/Output: [[20.997347982824905 43] 63.997347982824905]
Test Case: 522 | Input/Output: [[33.27162451271414 67] 100.27162451271414]
Test Case: 523 | Input/Output: [[21.354291590231128 30] 51.35429159023113]
Test Case: 524 | Input/Output: [[-2.2493089410772455 -83] -85.24930894107725]
Test Case: 525 | Input/Output: [[75.83832605204077 -24] 51.83832605204077]
Test Case: 526 | Input/Output: [[31.18730570713194 -21] 10.18730570713194]
Test Case: 527 | Input/Output: [[-71.04805315358203 -55] -126.04805315358203]
Test Case: 528 | Input/Output: [[30.66542959242281 4] 34.66542959242281]
Test Case: 529 | Input/Output: [[-7.535359365094635 5] -2.535359365094635]
Test Case: 530 | Input/Output: [[-1.3078755535398443 -97] -98.30787555353984]
Test Case: 531 | Input/Output: [[-8.841467199658524 48] 39.158532800341476]
Test Case: 532 | Input/Output: [[-46.19015756006346 -99] -145.19015756006345]
Test Case: 533 | Input/Output: [[-50.16578583336943 65] 14.834214166630566]
Test Case: 534 | Input/Output: [[-63.26293504036784 3] -60.26293504036784]
Test Case: 535 | Input/Output: [[-18.26485047690616 -35] -53.26485047690616]
Test Case: 536 | Input/Output: [[-61.30480898885089 -96] -157.30480898885088]
Test Case: 537 | Input/Output: [[-37.96170325199788 79] 41.03829674800212]
Test Case: 538 | Input/Output: [[49.406615566707785 -68] -18.593384433292215]
Test Case: 539 | Input/Output: [[84.43770658003427 -100] -15.562293419965727]
Test Case: 540 | Input/Output: [[-91.20921979201391 -69] -160.20921979201393]
Test Case: 541 | Input/Output: [[81.1514513042087 98] 179.1514513042087]
Test Case: 542 | Input/Output: [[-6.226417100436393 -65] -71.2264171004364]
Test Case: 543 | Input/Output: [[65.92800489401117 -17] 48.92800489401117]
Test Case: 544 | Input/Output: [[10.441134564035508 2] 12.441134564035508]
Test Case: 545 | Input/Output: [[44.36098033899444 -69] -24.639019661005563]
Test Case: 546 | Input/Output: [[44.55273145193573 66] 110.55273145193573]
Test Case: 547 | Input/Output: [[-79.90862750578123 64] -15.908627505781226]
Test Case: 548 | Input/Output: [[97.265610954001 13] 110.265610954001]
Test Case: 549 | Input/Output: [[97.28744516691557 -62] 35.287445166915575]
Test Case: 550 | Input/Output: [[-77.38930147240055 58] -19.389301472400547]
Test Case: 551 | Input/Output: [[17.19405834576537 53] 70.19405834576537]
Test Case: 552 | Input/Output: [[-40.51047456936614 -22] -62.51047456936614]
Test Case: 553 | Input/Output: [[-80.97167761638171 -24] -104.97167761638171]
Test Case: 554 | Input/Output: [[-51.46678353409237 -21] -72.46678353409237]
Test Case: 555 | Input/Output: [[-30.50779641849985 -64] -94.50779641849985]
Test Case: 556 | Input/Output: [[-94.21586380360148 42] -52.21586380360148]
Test Case: 557 | Input/Output: [[75.35053917532662 45] 120.35053917532662]
Test Case: 558 | Input/Output: [[14.929395182505218 -75] -60.07060481749478]
Test Case: 559 | Input/Output: [[56.2154547068709 10] 66.2154547068709]
Test Case: 560 | Input/Output: [[37.23536166400777 35] 72.23536166400777]
Test Case: 561 | Input/Output: [[83.88690015332142 -56] 27.88690015332142]
Test Case: 562 | Input/Output: [[0.5850556795827799 -38] -37.41494432041722]
Test Case: 563 | Input/Output: [[64.71307868954702 -37] 27.713078689547018]
Test Case: 564 | Input/Output: [[33.949570365072674 -23] 10.949570365072674]
Test Case: 565 | Input/Output: [[-51.64736814242667 -5] -56.64736814242667]
Test Case: 566 | Input/Output: [[15.711738155005236 -6] 9.711738155005236]
Test Case: 567 | Input/Output: [[61.83180199999879 13] 74.83180199999879]
Test Case: 568 | Input/Output: [[-1.2487068297128303 -57] -58.24870682971283]
Test Case: 569 | Input/Output: [[-13.58683971543529 39] 25.41316028456471]
Test Case: 570 | Input/Output: [[33.74369675144047 7] 40.74369675144047]
Test Case: 571 | Input/Output: [[72.7630158189798 45] 117.7630158189798]
Test Case: 572 | Input/Output: [[-31.413290136373334 -67] -98.41329013637333]
Test Case: 573 | Input/Output: [[-5.92719434232707 20] 14.07280565767293]
Test Case: 574 | Input/Output: [[-20.14289840121846 -67] -87.14289840121846]
Test Case: 575 | Input/Output: [[-34.236109434666446 -2] -36.236109434666446]
Test Case: 576 | Input/Output: [[67.65383507512067 65] 132.65383507512067]
Test Case: 577 | Input/Output: [[-92.44932091728985 -76] -168.44932091728987]
Test Case: 578 | Input/Output: [[-98.19150289286523 80] -18.19150289286523]
Test Case: 579 | Input/Output: [[98.54270132512596 -29] 69.54270132512596]
Test Case: 580 | Input/Output: [[-3.2859842797560646 -98] -101.28598427975606]
Test Case: 581 | Input/Output: [[11.76072626106675 -77] -65.23927373893325]
Test Case: 582 | Input/Output: [[49.12232972908862 -47] 2.1223297290886194]
Test Case: 583 | Input/Output: [[-20.04894944469096 18] -2.0489494446909617]
Test Case: 584 | Input/Output: [[43.94134065095304 13] 56.94134065095304]
Test Case: 585 | Input/Output: [[25.64817042488525 8] 33.64817042488525]
Test Case: 586 | Input/Output: [[41.054753836036355 19] 60.054753836036355]
Test Case: 587 | Input/Output: [[65.27167326988027 34] 99.27167326988027]
Test Case: 588 | Input/Output: [[27.963199545306594 35] 62.963199545306594]
Test Case: 589 | Input/Output: [[38.13521661863959 46] 84.13521661863959]
Test Case: 590 | Input/Output: [[-40.407599861594946 -86] -126.40759986159495]
Test Case: 591 | Input/Output: [[-36.87505102054702 -7] -43.87505102054702]
Test Case: 592 | Input/Output: [[-8.352958414012761 -23] -31.35295841401276]
Test Case: 593 | Input/Output: [[98.65741295655229 52] 150.6574129565523]
Test Case: 594 | Input/Output: [[29.911421762858936 -62] -32.088578237141064]
Test Case: 595 | Input/Output: [[57.32247245653494 43] 100.32247245653494]
Test Case: 596 | Input/Output: [[74.53780824522732 -85] -10.462191754772675]
Test Case: 597 | Input/Output: [[-71.26879058381411 -38] -109.26879058381411]
Test Case: 598 | Input/Output: [[-59.88772882019102 33] -26.887728820191022]
Test Case: 599 | Input/Output: [[-49.41553425300012 -51] -100.41553425300012]
Test Case: 600 | Input/Output: [[54.18848903287994 -3] 51.18848903287994]
Test Case: 601 | Input/Output: [[28.772396077216086 49] 77.77239607721609]
Test Case: 602 | Input/Output: [[64.7598889947283 77] 141.7598889947283]
Test Case: 603 | Input/Output: [[80.6367994195499 -28] 52.6367994195499]
Test Case: 604 | Input/Output: [[39.55610204044609 -52] -12.443897959553908]
Test Case: 605 | Input/Output: [[95.32019671225757 -19] 76.32019671225757]
Test Case: 606 | Input/Output: [[-42.586148332623594 41] -1.5861483326235941]
Test Case: 607 | Input/Output: [[-16.11973469618877 59] 42.88026530381123]
Test Case: 608 | Input/Output: [[-34.14658687314727 -72] -106.14658687314727]
Test Case: 609 | Input/Output: [[-18.735532783599226 91] 72.26446721640077]
Test Case: 610 | Input/Output: [[-51.47806519831957 39] -12.47806519831957]
Test Case: 611 | Input/Output: [[91.03036254685534 0] 91.03036254685534]
Test Case: 612 | Input/Output: [[-53.073490138624216 -82] -135.0734901386242]
Test Case: 613 | Input/Output: [[46.93954399872939 -6] 40.93954399872939]
Test Case: 614 | Input/Output: [[61.09924414056729 -8] 53.09924414056729]
Test Case: 615 | Input/Output: [[69.05049433501108 -28] 41.05049433501108]
Test Case: 616 | Input/Output: [[-16.80216911353574 -94] -110.80216911353574]
Test Case: 617 | Input/Output: [[-51.37644284067173 56] 4.623557159328271]
Test Case: 618 | Input/Output: [[26.175670902498013 59] 85.17567090249801]
Test Case: 619 | Input/Output: [[56.93173263048706 -57] -0.0682673695129381]
Test Case: 620 | Input/Output: [[23.731494961676987 -83] -59.26850503832301]
Test Case: 621 | Input/Output: [[-40.178151771376 -67] -107.17815177137601]
Test Case: 622 | Input/Output: [[23.0770104894048 52] 75.0770104894048]
Test Case: 623 | Input/Output: [[7.6198966253172955 90] 97.6198966253173]
Test Case: 624 | Input/Output: [[-31.086773213073144 -38] -69.08677321307314]
Test Case: 625 | Input/Output: [[68.84917912878211 -57] 11.849179128782112]
Test Case: 626 | Input/Output: [[-31.369396452505455 75] 43.630603547494545]
Test Case: 627 | Input/Output: [[71.55608201027286 -29] 42.55608201027286]
Test Case: 628 | Input/Output: [[56.46935718932926 56] 112.46935718932926]
Test Case: 629 | Input/Output: [[-64.43167929377107 24] -40.43167929377107]
Test Case: 630 | Input/Output: [[99.44520362065472 56] 155.44520362065472]
Test Case: 631 | Input/Output: [[-4.8711270612031115 -55] -59.87112706120311]
Test Case: 632 | Input/Output: [[44.28746095573061 -86] -41.71253904426939]
Test Case: 633 | Input/Output: [[83.3050007769177 52] 135.3050007769177]
Test Case: 634 | Input/Output: [[-71.425623265902 66] -5.425623265902004]
Test Case: 635 | Input/Output: [[91.29194166787505 9] 100.29194166787505]
Test Case: 636 | Input/Output: [[-91.03321682186876 1] -90.03321682186876]
Test Case: 637 | Input/Output: [[-62.743984165703836 -3] -65.74398416570384]
Test Case: 638 | Input/Output: [[-34.37579010240354 34] -0.37579010240354194]
Test Case: 639 | Input/Output: [[94.88266850478794 -41] 53.882668504787944]
Test Case: 640 | Input/Output: [[9.774847415523084 -2] 7.774847415523084]
Test Case: 641 | Input/Output: [[-24.657357052373243 -93] -117.65735705237324]
Test Case: 642 | Input/Output: [[-17.077386609808116 94] 76.92261339019188]
Test Case: 643 | Input/Output: [[81.75685005949666 100] 181.75685005949666]
Test Case: 644 | Input/Output: [[93.5825969797443 8] 101.5825969797443]
Test Case: 645 | Input/Output: [[-4.590292314735535 -6] -10.590292314735535]
Test Case: 646 | Input/Output: [[-90.79481268544791 -50] -140.7948126854479]
Test Case: 647 | Input/Output: [[39.50014521796584 25] 64.50014521796584]
Test Case: 648 | Input/Output: [[-58.980797236900194 -44] -102.9807972369002]
Test Case: 649 | Input/Output: [[22.401475216900323 -25] -2.598524783099677]
Test Case: 650 | Input/Output: [[37.23304163386308 81] 118.23304163386308]
Test Case: 651 | Input/Output: [[-40.517942521819414 -8] -48.517942521819414]
Test Case: 652 | Input/Output: [[-10.939637002701488 -91] -101.93963700270149]
Test Case: 653 | Input/Output: [[77.91236576960137 41] 118.91236576960137]
Test Case: 654 | Input/Output: [[11.530504519799607 -40] -28.469495480200393]
Test Case: 655 | Input/Output: [[-84.39382681101219 8] -76.39382681101219]
Test Case: 656 | Input/Output: [[86.2790796325292 -22] 64.2790796325292]
Test Case: 657 | Input/Output: [[-86.81859890925476 65] -21.81859890925476]
Test Case: 658 | Input/Output: [[-28.901662139581717 3] -25.901662139581717]
Test Case: 659 | Input/Output: [[-35.52853918124836 65] 29.471460818751638]
Test Case: 660 | Input/Output: [[68.78963051067245 -94] -25.210369489327547]
Test Case: 661 | Input/Output: [[30.037807856399525 -76] -45.962192143600475]
Test Case: 662 | Input/Output: [[-89.16577368140999 -2] -91.16577368140999]
Test Case: 663 | Input/Output: [[-2.1593338907352972 86] 83.8406661092647]
Test Case: 664 | Input/Output: [[-53.88223624142721 17] -36.88223624142721]
Test Case: 665 | Input/Output: [[58.83835256904456 -40] 18.83835256904456]
Test Case: 666 | Input/Output: [[-51.721136266043 91] 39.278863733957]
Test Case: 667 | Input/Output: [[-70.4649823552025 -28] -98.4649823552025]
Test Case: 668 | Input/Output: [[-40.605507155149056 -93] -133.60550715514904]
Test Case: 669 | Input/Output: [[-4.430247479531118 -33] -37.43024747953112]
Test Case: 670 | Input/Output: [[-85.90475541167963 73] -12.90475541167963]
Test Case: 671 | Input/Output: [[96.92230277484038 90] 186.92230277484038]
Test Case: 672 | Input/Output: [[72.9527439091332 -62] 10.952743909133204]
Test Case: 673 | Input/Output: [[-6.8307516552419685 47] 40.16924834475803]
Test Case: 674 | Input/Output: [[-29.818257125820253 16] -13.818257125820253]
Test Case: 675 | Input/Output: [[-23.56624753288348 24] 0.4337524671165198]
Test Case: 676 | Input/Output: [[24.067735612081222 81] 105.06773561208122]
Test Case: 677 | Input/Output: [[53.64320538814579 56] 109.64320538814579]
Test Case: 678 | Input/Output: [[-81.73356672136862 -30] -111.73356672136862]
Test Case: 679 | Input/Output: [[-57.53789403298113 42] -15.537894032981129]
Test Case: 680 | Input/Output: [[11.09005587624398 -79] -67.90994412375602]
Test Case: 681 | Input/Output: [[62.24620525248247 -71] -8.753794747517532]
Test Case: 682 | Input/Output: [[-39.96207058047931 9] -30.962070580479313]
Test Case: 683 | Input/Output: [[-69.67119679493794 -88] -157.67119679493794]
Test Case: 684 | Input/Output: [[-36.10729056473305 -29] -65.10729056473305]
Test Case: 685 | Input/Output: [[40.196514771457146 -92] -51.803485228542854]
Test Case: 686 | Input/Output: [[6.970402168851095 35] 41.970402168851095]
Test Case: 687 | Input/Output: [[61.357905499440136 12] 73.35790549944014]
Test Case: 688 | Input/Output: [[-21.14876135875079 -86] -107.14876135875079]
Test Case: 689 | Input/Output: [[-45.006818869260236 -81] -126.00681886926023]
Test Case: 690 | Input/Output: [[22.729554298027125 97] 119.72955429802713]
Test Case: 691 | Input/Output: [[-82.05709802689171 -41] -123.05709802689171]
Test Case: 692 | Input/Output: [[-85.85101407753015 2] -83.85101407753015]
Test Case: 693 | Input/Output: [[-19.483262343972157 -60] -79.48326234397216]
Test Case: 694 | Input/Output: [[-88.49399157949813 -82] -170.49399157949813]
Test Case: 695 | Input/Output: [[82.19199846747284 79] 161.19199846747284]
Test Case: 696 | Input/Output: [[-60.06217015230138 -37] -97.06217015230138]
Test Case: 697 | Input/Output: [[-54.738955096555976 59] 4.261044903444024]
Test Case: 698 | Input/Output: [[-96.04679278794217 -38] -134.04679278794217]
Test Case: 699 | Input/Output: [[-69.72054352191175 61] -8.72054352191175]
Test Case: 700 | Input/Output: [[30.738280668565267 -15] 15.738280668565267]
Test Case: 701 | Input/Output: [[25.637115518281135 -61] -35.362884481718865]
Test Case: 702 | Input/Output: [[12.984317925587803 -7] 5.984317925587803]
Test Case: 703 | Input/Output: [[-60.59197583638915 60] -0.5919758363891532]
Test Case: 704 | Input/Output: [[-94.17152881447831 -38] -132.1715288144783]
Test Case: 705 | Input/Output: [[99.24504156764789 -55] 44.24504156764789]
Test Case: 706 | Input/Output: [[10.111232620234588 -85] -74.88876737976541]
Test Case: 707 | Input/Output: [[-80.74245263990092 21] -59.74245263990092]
Test Case: 708 | Input/Output: [[-49.84757648565208 -36] -85.84757648565207]
Test Case: 709 | Input/Output: [[-23.951176130815526 86] 62.048823869184474]
Test Case: 710 | Input/Output: [[-15.180653461462228 61] 45.81934653853777]
Test Case: 711 | Input/Output: [[21.549313181500906 -60] -38.45068681849909]
Test Case: 712 | Input/Output: [[46.32699585271962 53] 99.32699585271962]
Test Case: 713 | Input/Output: [[-49.59219783875535 6] -43.59219783875535]
Test Case: 714 | Input/Output: [[4.828288046901946 83] 87.82828804690195]
Test Case: 715 | Input/Output: [[10.615868429820935 49] 59.615868429820935]
Test Case: 716 | Input/Output: [[-75.74668376370755 7] -68.74668376370755]
Test Case: 717 | Input/Output: [[-98.37422252333275 -14] -112.37422252333275]
Test Case: 718 | Input/Output: [[-12.726584489248907 -48] -60.72658448924891]
Test Case: 719 | Input/Output: [[49.73760684167627 -71] -21.262393158323732]
Test Case: 720 | Input/Output: [[3.2359136777192106 -1] 2.2359136777192106]
Test Case: 721 | Input/Output: [[-47.42426230475314 -42] -89.42426230475314]
Test Case: 722 | Input/Output: [[40.26475515695617 -18] 22.26475515695617]
Test Case: 723 | Input/Output: [[-64.90709687904257 -44] -108.90709687904257]
Test Case: 724 | Input/Output: [[23.35430448621905 6] 29.35430448621905]
Test Case: 725 | Input/Output: [[-94.90181493665287 46] -48.90181493665287]
Test Case: 726 | Input/Output: [[-60.08941215801418 -86] -146.08941215801417]
Test Case: 727 | Input/Output: [[39.71272869868744 -66] -26.287271301312558]
Test Case: 728 | Input/Output: [[60.43516137713439 -97] -36.56483862286561]
Test Case: 729 | Input/Output: [[-29.939055686274102 27] -2.939055686274102]
Test Case: 730 | Input/Output: [[-29.98944354415613 -75] -104.98944354415613]
Test Case: 731 | Input/Output: [[88.32998988672543 -41] 47.32998988672543]
Test Case: 732 | Input/Output: [[7.729526267801191 -82] -74.27047373219881]
Test Case: 733 | Input/Output: [[82.08361921292334 49] 131.08361921292334]
Test Case: 734 | Input/Output: [[-34.63450127870303 19] -15.634501278703027]
Test Case: 735 | Input/Output: [[17.309971586221096 60] 77.3099715862211]
Test Case: 736 | Input/Output: [[-63.328279280793254 -56] -119.32827928079325]
Test Case: 737 | Input/Output: [[58.592957273445194 38] 96.5929572734452]
Test Case: 738 | Input/Output: [[87.06425762322473 37] 124.06425762322473]
Test Case: 739 | Input/Output: [[6.496246924922815 -44] -37.503753075077185]
Test Case: 740 | Input/Output: [[11.505739810105297 -55] -43.4942601898947]
Test Case: 741 | Input/Output: [[59.80711131890948 -37] 22.807111318909477]
Test Case: 742 | Input/Output: [[31.256753717859965 64] 95.25675371785997]
Test Case: 743 | Input/Output: [[-6.091457137582012 -24] -30.09145713758201]
Test Case: 744 | Input/Output: [[-22.568321564318026 94] 71.43167843568197]
Test Case: 745 | Input/Output: [[78.14494810364866 -28] 50.14494810364866]
Test Case: 746 | Input/Output: [[95.76215367284902 91] 186.76215367284902]
Test Case: 747 | Input/Output: [[87.48554421728988 -83] 4.485544217289885]
Test Case: 748 | Input/Output: [[-45.02637097586448 68] 22.97362902413552]
Test Case: 749 | Input/Output: [[79.03647852020882 64] 143.03647852020882]
Test Case: 750 | Input/Output: [[56.47220885380574 64] 120.47220885380574]
Test Case: 751 | Input/Output: [[-51.423310392520904 4] -47.423310392520904]
Test Case: 752 | Input/Output: [[86.46675800156603 -58] 28.466758001566035]
Test Case: 753 | Input/Output: [[-24.21776478316589 26] 1.7822352168341098]
Test Case: 754 | Input/Output: [[-41.067052886949895 -81] -122.0670528869499]
Test Case: 755 | Input/Output: [[62.1747509666433 60] 122.1747509666433]
Test Case: 756 | Input/Output: [[-81.95896217196355 5] -76.95896217196355]
Test Case: 757 | Input/Output: [[-12.29952289256056 49] 36.70047710743944]
Test Case: 758 | Input/Output: [[-65.835498352422 -96] -161.835498352422]
Test Case: 759 | Input/Output: [[78.43493189866561 13] 91.43493189866561]
Test Case: 760 | Input/Output: [[-75.52986836039948 -21] -96.52986836039948]
Test Case: 761 | Input/Output: [[5.363906940268649 -43] -37.63609305973135]
Test Case: 762 | Input/Output: [[31.350785060400426 -56] -24.649214939599574]
Test Case: 763 | Input/Output: [[30.0294281442973 8] 38.0294281442973]
Test Case: 764 | Input/Output: [[36.42557302133798 92] 128.42557302133798]
Test Case: 765 | Input/Output: [[78.29853471481735 -48] 30.29853471481735]
Test Case: 766 | Input/Output: [[-83.5927263597375 52] -31.592726359737497]
Test Case: 767 | Input/Output: [[63.2634102394955 82] 145.2634102394955]
Test Case: 768 | Input/Output: [[-42.57057207135506 -97] -139.57057207135506]
Test Case: 769 | Input/Output: [[-99.63872629816449 85] -14.638726298164485]
Test Case: 770 | Input/Output: [[37.96461620649649 -99] -61.03538379350351]
Test Case: 771 | Input/Output: [[37.02573696036799 -66] -28.974263039632007]
Test Case: 772 | Input/Output: [[-19.841307398661073 45] 25.158692601338927]
Test Case: 773 | Input/Output: [[0.23327948161326617 -2] -1.7667205183867338]
Test Case: 774 | Input/Output: [[-11.977833896045695 18] 6.022166103954305]
Test Case: 775 | Input/Output: [[-32.163467479044556 -60] -92.16346747904456]
Test Case: 776 | Input/Output: [[37.48603696017557 -39] -1.5139630398244321]
Test Case: 777 | Input/Output: [[-69.15569645696863 6] -63.15569645696863]
Test Case: 778 | Input/Output: [[45.43321470679396 62] 107.43321470679396]
Test Case: 779 | Input/Output: [[21.260340908976858 -20] 1.2603409089768576]
Test Case: 780 | Input/Output: [[-86.9298879239499 39] -47.929887923949906]
Test Case: 781 | Input/Output: [[-3.5513025901756237 76] 72.44869740982438]
Test Case: 782 | Input/Output: [[-96.83336980595863 -46] -142.83336980595863]
Test Case: 783 | Input/Output: [[41.37060867740513 43] 84.37060867740513]
Test Case: 784 | Input/Output: [[4.199275944143935 -27] -22.800724055856065]
Test Case: 785 | Input/Output: [[-6.7833327284643445 -31] -37.783332728464345]
Test Case: 786 | Input/Output: [[99.62346493770943 -3] 96.62346493770943]
Test Case: 787 | Input/Output: [[-42.61353354664019 -47] -89.61353354664018]
Test Case: 788 | Input/Output: [[49.382022412758346 -70] -20.617977587241654]
Test Case: 789 | Input/Output: [[-31.465943461516545 66] 34.534056538483455]
Test Case: 790 | Input/Output: [[-34.925062948132094 55] 20.074937051867906]
Test Case: 791 | Input/Output: [[10.692984894709838 -28] -17.307015105290162]
Test Case: 792 | Input/Output: [[54.52918213602257 -94] -39.47081786397743]
Test Case: 793 | Input/Output: [[-96.81546477527922 79] -17.815464775279224]
Test Case: 794 | Input/Output: [[-99.49607524002246 -7] -106.49607524002246]
Test Case: 795 | Input/Output: [[52.68033719822256 45] 97.68033719822256]
Test Case: 796 | Input/Output: [[89.38346872023988 -74] 15.383468720239875]
Test Case: 797 | Input/Output: [[34.19056997995361 16] 50.19056997995361]
Test Case: 798 | Input/Output: [[-59.10851713066372 -51] -110.10851713066373]
Test Case: 799 | Input/Output: [[-62.46009215556989 -67] -129.4600921555699]
Test Case: 800 | Input/Output: [[-59.295832485804524 42] -17.295832485804524]
Test Case: 801 | Input/Output: [[11.491011716014427 -3] 8.491011716014427]
Test Case: 802 | Input/Output: [[91.65475191842387 96] 187.65475191842387]
Test Case: 803 | Input/Output: [[-73.62255230279521 -14] -87.62255230279521]
Test Case: 804 | Input/Output: [[-12.745467802961358 81] 68.25453219703864]
Test Case: 805 | Input/Output: [[97.60591041559505 100] 197.60591041559505]
Test Case: 806 | Input/Output: [[-38.808802438559574 50] 11.191197561440426]
Test Case: 807 | Input/Output: [[-81.63716190324794 -79] -160.63716190324794]
Test Case: 808 | Input/Output: [[24.701119604065752 -73] -48.29888039593425]
Test Case: 809 | Input/Output: [[93.11419228785806 -69] 24.11419228785806]
Test Case: 810 | Input/Output: [[68.59381629675255 -60] 8.59381629675255]
Test Case: 811 | Input/Output: [[89.00469270378653 -18] 71.00469270378653]
Test Case: 812 | Input/Output: [[70.63457150965598 28] 98.63457150965598]
Test Case: 813 | Input/Output: [[41.169075955283176 30] 71.16907595528318]
Test Case: 814 | Input/Output: [[7.145620819714367 7] 14.145620819714367]
Test Case: 815 | Input/Output: [[-23.264759197629445 4] -19.264759197629445]
Test Case: 816 | Input/Output: [[-79.22691015549661 21] -58.22691015549661]
Test Case: 817 | Input/Output: [[-60.54737778554424 31] -29.547377785544242]
Test Case: 818 | Input/Output: [[52.703565820427826 -23] 29.703565820427826]
Test Case: 819 | Input/Output: [[-68.00415075909089 69] 0.9958492409091093]
Test Case: 820 | Input/Output: [[25.921330673545313 -84] -58.07866932645469]
Test Case: 821 | Input/Output: [[36.354187950453735 24] 60.354187950453735]
Test Case: 822 | Input/Output: [[7.0715831593225715 -27] -19.92841684067743]
Test Case: 823 | Input/Output: [[-88.70911526532623 -63] -151.70911526532623]
Test Case: 824 | Input/Output: [[29.1810740788751 33] 62.1810740788751]
Test Case: 825 | Input/Output: [[-59.62192511098616 -59] -118.62192511098615]
Test Case: 826 | Input/Output: [[-13.76562435160524 -83] -96.76562435160524]
Test Case: 827 | Input/Output: [[-3.5689849703737053 -28] -31.568984970373705]
Test Case: 828 | Input/Output: [[26.61126449839628 39] 65.61126449839628]
Test Case: 829 | Input/Output: [[89.2375264699441 -54] 35.2375264699441]
Test Case: 830 | Input/Output: [[-98.01727376178464 -78] -176.01727376178462]
Test Case: 831 | Input/Output: [[2.2257686748430956 -83] -80.7742313251569]
Test Case: 832 | Input/Output: [[20.95611276464446 66] 86.95611276464446]
Test Case: 833 | Input/Output: [[-92.66510950379134 38] -54.66510950379134]
Test Case: 834 | Input/Output: [[73.04831186552178 80] 153.04831186552178]
Test Case: 835 | Input/Output: [[-93.48816598069021 42] -51.48816598069021]
Test Case: 836 | Input/Output: [[-49.402494768292684 -10] -59.402494768292684]
Test Case: 837 | Input/Output: [[-36.662489973800064 -33] -69.66248997380006]
Test Case: 838 | Input/Output: [[-47.6444967077916 100] 52.3555032922084]
Test Case: 839 | Input/Output: [[-36.17294235630286 75] 38.82705764369714]
Test Case: 840 | Input/Output: [[7.290392906573402 -49] -41.7096070934266]
Test Case: 841 | Input/Output: [[60.30797805908625 16] 76.30797805908625]
Test Case: 842 | Input/Output: [[24.12478788235724 -6] 18.12478788235724]
Test Case: 843 | Input/Output: [[64.33911560386275 -54] 10.339115603862751]
Test Case: 844 | Input/Output: [[-82.83081869824599 -66] -148.830818698246]
Test Case: 845 | Input/Output: [[89.66407088167944 -92] -2.335929118320564]
Test Case: 846 | Input/Output: [[-43.531046264859974 14] -29.531046264859974]
Test Case: 847 | Input/Output: [[14.169031040226798 -1] 13.169031040226798]
Test Case: 848 | Input/Output: [[64.18450250713349 59] 123.18450250713349]
Test Case: 849 | Input/Output: [[-64.452137256618 -47] -111.452137256618]
Test Case: 850 | Input/Output: [[-14.223131524643179 -23] -37.22313152464318]
Test Case: 851 | Input/Output: [[-49.003412971579465 -96] -145.00341297157945]
Test Case: 852 | Input/Output: [[9.022107814205654 0] 9.022107814205654]
Test Case: 853 | Input/Output: [[-4.554864515882983 26] 21.445135484117017]
Test Case: 854 | Input/Output: [[72.10953565048345 61] 133.10953565048345]
Test Case: 855 | Input/Output: [[-50.945947859210186 -7] -57.945947859210186]
Test Case: 856 | Input/Output: [[-20.064512290445037 89] 68.93548770955496]
Test Case: 857 | Input/Output: [[-49.862811046226426 -38] -87.86281104622643]
Test Case: 858 | Input/Output: [[71.30124960329755 -29] 42.30124960329755]
Test Case: 859 | Input/Output: [[-40.489662754174205 -10] -50.489662754174205]
Test Case: 860 | Input/Output: [[-95.20002860943401 -73] -168.200028609434]
Test Case: 861 | Input/Output: [[-93.09960998038261 51] -42.09960998038261]
Test Case: 862 | Input/Output: [[92.88093316750482 75] 167.88093316750482]
Test Case: 863 | Input/Output: [[-24.433158524347192 -22] -46.43315852434719]
Test Case: 864 | Input/Output: [[90.28053218572887 14] 104.28053218572887]
Test Case: 865 | Input/Output: [[-60.53866540779804 -62] -122.53866540779805]
Test Case: 866 | Input/Output: [[-53.37005644806301 77] 23.62994355193699]
Test Case: 867 | Input/Output: [[-6.1591194493682195 36] 29.84088055063178]
Test Case: 868 | Input/Output: [[54.82160127915296 -71] -16.178398720847042]
Test Case: 869 | Input/Output: [[54.642566258880805 -24] 30.642566258880805]
Test Case: 870 | Input/Output: [[-54.89523264730498 -31] -85.89523264730498]
Test Case: 871 | Input/Output: [[31.622536652949663 4] 35.62253665294966]
Test Case: 872 | Input/Output: [[29.05363246182563 85] 114.05363246182563]
Test Case: 873 | Input/Output: [[75.50602110947949 -78] -2.493978890520509]
Test Case: 874 | Input/Output: [[91.70615440079445 12] 103.70615440079445]
Test Case: 875 | Input/Output: [[66.54535614905996 -63] 3.5453561490599554]
Test Case: 876 | Input/Output: [[64.22700773110839 -65] -0.7729922688916133]
Test Case: 877 | Input/Output: [[37.30337483771879 56] 93.30337483771879]
Test Case: 878 | Input/Output: [[-33.77323107917786 -78] -111.77323107917786]
Test Case: 879 | Input/Output: [[-22.27366374527766 49] 26.72633625472234]
Test Case: 880 | Input/Output: [[75.74048067769192 -21] 54.74048067769192]
Test Case: 881 | Input/Output: [[10.782127764433298 -1] 9.782127764433298]
Test Case: 882 | Input/Output: [[-35.25380456657071 -47] -82.25380456657071]
Test Case: 883 | Input/Output: [[-92.0826789330013 -50] -142.08267893300132]
Test Case: 884 | Input/Output: [[-39.597490882505056 31] -8.597490882505056]
Test Case: 885 | Input/Output: [[98.95066182074237 24] 122.95066182074237]
Test Case: 886 | Input/Output: [[98.81291625789223 87] 185.81291625789223]
Test Case: 887 | Input/Output: [[-49.82349471231578 -15] -64.82349471231578]
Test Case: 888 | Input/Output: [[40.00634208524082 89] 129.00634208524082]
Test Case: 889 | Input/Output: [[10.831789984303668 -32] -21.16821001569633]
Test Case: 890 | Input/Output: [[56.664387277914955 53] 109.66438727791495]
Test Case: 891 | Input/Output: [[99.92904040657746 25] 124.92904040657746]
Test Case: 892 | Input/Output: [[32.02958108602783 -22] 10.029581086027832]
Test Case: 893 | Input/Output: [[1.9123400705219495 -57] -55.08765992947805]
Test Case: 894 | Input/Output: [[-42.03943380376918 80] 37.96056619623082]
Test Case: 895 | Input/Output: [[34.10165281511445 15] 49.10165281511445]
Test Case: 896 | Input/Output: [[36.49346708203248 -68] -31.50653291796752]
Test Case: 897 | Input/Output: [[-89.57064514729626 10] -79.57064514729626]
Test Case: 898 | Input/Output: [[11.782027451619754 13] 24.782027451619754]
Test Case: 899 | Input/Output: [[-37.07739320581358 -76] -113.07739320581358]
Test Case: 900 | Input/Output: [[-6.848759200868187 83] 76.15124079913181]
Test Case: 901 | Input/Output: [[-72.78680508831275 54] -18.786805088312747]
Test Case: 902 | Input/Output: [[-66.02244514281077 -60] -126.02244514281077]
Test Case: 903 | Input/Output: [[-36.20269001968814 4] -32.20269001968814]
Test Case: 904 | Input/Output: [[18.403312486294794 -37] -18.596687513705206]
Test Case: 905 | Input/Output: [[33.448880907283524 -85] -51.551119092716476]
Test Case: 906 | Input/Output: [[23.475356807559436 59] 82.47535680755944]
Test Case: 907 | Input/Output: [[52.88219616440665 90] 142.88219616440665]
Test Case: 908 | Input/Output: [[57.212025390420706 93] 150.2120253904207]
Test Case: 909 | Input/Output: [[54.000650307354675 -51] 3.0006503073546753]
Test Case: 910 | Input/Output: [[-67.60736457363888 67] -0.6073645736388755]
Test Case: 911 | Input/Output: [[-13.3266787386207 42] 28.6733212613793]
Test Case: 912 | Input/Output: [[-60.849724683434815 25] -35.849724683434815]
Test Case: 913 | Input/Output: [[-24.752727211172783 57] 32.24727278882722]
Test Case: 914 | Input/Output: [[3.2531866081975522 -19] -15.746813391802448]
Test Case: 915 | Input/Output: [[31.108683778905004 -78] -46.891316221094996]
Test Case: 916 | Input/Output: [[40.655472275143666 -73] -32.344527724856334]
Test Case: 917 | Input/Output: [[-6.439398268748334 35] 28.560601731251666]
Test Case: 918 | Input/Output: [[-64.03087108732812 -58] -122.03087108732812]
Test Case: 919 | Input/Output: [[-48.598624834875295 -32] -80.5986248348753]
Test Case: 920 | Input/Output: [[-35.46354428511958 37] 1.536455714880418]
Test Case: 921 | Input/Output: [[-3.719104239928541 83] 79.28089576007146]
Test Case: 922 | Input/Output: [[58.132458462513796 35] 93.1324584625138]
Test Case: 923 | Input/Output: [[-34.2661980322608 22] -12.266198032260803]
Test Case: 924 | Input/Output: [[6.918670343228129 18] 24.91867034322813]
Test Case: 925 | Input/Output: [[81.90119101353298 89] 170.90119101353298]
Test Case: 926 | Input/Output: [[-7.895809662401703 -96] -103.8958096624017]
Test Case: 927 | Input/Output: [[14.09764765085228 -3] 11.09764765085228]
Test Case: 928 | Input/Output: [[-9.17773887143845 -80] -89.17773887143845]
Test Case: 929 | Input/Output: [[-79.01367604035205 -61] -140.01367604035204]
Test Case: 930 | Input/Output: [[-53.515792205589904 -11] -64.5157922055899]
Test Case: 931 | Input/Output: [[-92.32679048822614 92] -0.32679048822613765]
Test Case: 932 | Input/Output: [[95.69346212715985 29] 124.69346212715985]
Test Case: 933 | Input/Output: [[79.85565922078902 -68] 11.855659220789022]
Test Case: 934 | Input/Output: [[54.92820613156266 68] 122.92820613156266]
Test Case: 935 | Input/Output: [[80.01932614908483 3] 83.01932614908483]
Test Case: 936 | Input/Output: [[-52.68955139838629 -70] -122.6895513983863]
Test Case: 937 | Input/Output: [[13.972838801012188 -98] -84.02716119898781]
Test Case: 938 | Input/Output: [[-30.724497325380298 -36] -66.7244973253803]
Test Case: 939 | Input/Output: [[-61.54451895939306 65] 3.4554810406069407]
Test Case: 940 | Input/Output: [[-47.55799292499277 -99] -146.55799292499276]
Test Case: 941 | Input/Output: [[44.89561185480096 -11] 33.89561185480096]
Test Case: 942 | Input/Output: [[18.014536221447685 -25] -6.985463778552315]
Test Case: 943 | Input/Output: [[-24.00657037876374 -97] -121.00657037876374]
Test Case: 944 | Input/Output: [[-57.918860763482 36] -21.918860763482]
Test Case: 945 | Input/Output: [[-92.72092013618334 67] -25.720920136183338]
Test Case: 946 | Input/Output: [[64.86558892405097 -83] -18.134411075949032]
Test Case: 947 | Input/Output: [[6.004458256835136 -22] -15.995541743164864]
Test Case: 948 | Input/Output: [[-6.118386526585255 84] 77.88161347341475]
Test Case: 949 | Input/Output: [[-84.12242428063212 89] 4.877575719367883]
Test Case: 950 | Input/Output: [[71.99448687012494 -86] -14.005513129875055]
Test Case: 951 | Input/Output: [[-6.652191674779544 16] 9.347808325220456]
Test Case: 952 | Input/Output: [[80.77807610675976 71] 151.77807610675976]
Test Case: 953 | Input/Output: [[93.79619280355658 -80] 13.796192803556579]
Test Case: 954 | Input/Output: [[2.533726792217678 -49] -46.46627320778232]
Test Case: 955 | Input/Output: [[82.13869824766391 -16] 66.13869824766391]
Test Case: 956 | Input/Output: [[-77.42974319855497 52] -25.429743198554974]
Test Case: 957 | Input/Output: [[41.603364772730515 -83] -41.396635227269485]
Test Case: 958 | Input/Output: [[89.26827537394789 -43] 46.26827537394789]
Test Case: 959 | Input/Output: [[-42.52597173331114 44] 1.4740282666888618]
Test Case: 960 | Input/Output: [[40.74058707621933 15] 55.74058707621933]
Test Case: 961 | Input/Output: [[97.30936294506259 34] 131.3093629450626]
Test Case: 962 | Input/Output: [[43.2980490744979 12] 55.2980490744979]
Test Case: 963 | Input/Output: [[86.86888992608556 -91] -4.131110073914442]
Test Case: 964 | Input/Output: [[35.84967347829465 -63] -27.150326521705352]
Test Case: 965 | Input/Output: [[-41.81429753297301 6] -35.81429753297301]
Test Case: 966 | Input/Output: [[59.334932323904894 23] 82.3349323239049]
Test Case: 967 | Input/Output: [[-20.36778621492175 25] 4.63221378507825]
Test Case: 968 | Input/Output: [[68.80394530378726 75] 143.80394530378726]
Test Case: 969 | Input/Output: [[-43.39519220812311 -46] -89.39519220812312]
Test Case: 970 | Input/Output: [[-8.980875620637164 58] 49.019124379362836]
Test Case: 971 | Input/Output: [[-61.316620957535825 -64] -125.31662095753583]
Test Case: 972 | Input/Output: [[98.70734913662713 -25] 73.70734913662713]
Test Case: 973 | Input/Output: [[-44.15946085748714 -62] -106.15946085748715]
Test Case: 974 | Input/Output: [[-43.317783155882 -99] -142.317783155882]
Test Case: 975 | Input/Output: [[21.405346890223356 78] 99.40534689022336]
Test Case: 976 | Input/Output: [[-29.08345095745493 -68] -97.08345095745493]
Test Case: 977 | Input/Output: [[11.82244553634466 49] 60.82244553634466]
Test Case: 978 | Input/Output: [[28.418910460459017 -76] -47.58108953954098]
Test Case: 979 | Input/Output: [[16.948976755671467 -66] -49.05102324432853]
Test Case: 980 | Input/Output: [[-9.105013611990586 31] 21.894986388009414]
Test Case: 981 | Input/Output: [[15.18514623476743 27] 42.18514623476743]
Test Case: 982 | Input/Output: [[-88.99571234025309 96] 7.0042876597469075]
Test Case: 983 | Input/Output: [[32.711141771793194 -83] -50.288858228206806]
Test Case: 984 | Input/Output: [[93.40191118999022 35] 128.40191118999022]
Test Case: 985 | Input/Output: [[98.71972317961803 4] 102.71972317961803]
Test Case: 986 | Input/Output: [[1.5008076466475728 -36] -34.49919235335243]
Test Case: 987 | Input/Output: [[-2.1803686364281845 54] 51.819631363571816]
Test Case: 988 | Input/Output: [[-17.323851588380307 -22] -39.32385158838031]
Test Case: 989 | Input/Output: [[58.90215603094657 79] 137.90215603094657]
Test Case: 990 | Input/Output: [[10.159947071341463 10] 20.159947071341463]
Test Case: 991 | Input/Output: [[-10.699579275238207 64] 53.30042072476179]
Test Case: 992 | Input/Output: [[-16.804523495117124 -75] -91.80452349511712]
Test Case: 993 | Input/Output: [[4.45252674903584 -67] -62.54747325096416]
Test Case: 994 | Input/Output: [[-14.718020259923108 96] 81.28197974007689]
Test Case: 995 | Input/Output: [[86.20313026325616 -26] 60.203130263256156]
Test Case: 996 | Input/Output: [[-68.74804176602217 0] -68.74804176602217]
Test Case: 997 | Input/Output: [[-86.05870196652421 -55] -141.0587019665242]
Test Case: 998 | Input/Output: [[51.25780436539344 -55] -3.74219563460656]
Test Case: 999 | Input/Output: [[-82.89154051331403 -24] -106.89154051331403]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 59 2 57 -54 48 123 -88 125 49 -77 -71 -40 -21 -4 -87 -58
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction integer_min} {:instruction float_dup_items} {:instruction tagged_770} {:instruction integer_flush} {:instruction print_integer} {:instruction float_dup_items} {:instruction float_mod} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_stackdepth} {:instruction in2} {:instruction float_add} {:instruction tag_integer_761} {:instruction integer_yankdup} {:instruction float_tan})
Best program: (integer_max integer_add in1 float_min integer_min float_dup_items tagged_770 integer_flush print_integer float_dup_items float_mod integer_mult integer_add integer_yank integer_inc float_sub print_float float_stackdepth in2 float_add tag_integer_761 integer_yankdup float_tan)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 18140.5845448
Median total errors in population: 25334.0
Error averages by case: (705.9939160000008 12.917 734.6754182000036 14.172 711.1211766999982 13.255 699.874253800001 11.526 718.5142874999995 12.979 705.7849688999992 13.051 707.0547366000025 11.651 724.6822091000018 13.156 701.015289199999 11.685 723.9636147000023 13.284 728.6143061999977 13.976 709.082163599999 13.679 708.4414112999988 12.289 717.5620398000001 13.258 708.4131940999998 12.525 730.9916231 13.283 705.7309895999997 12.415 709.5615861999999 13.228 699.1411447000022 12.348 711.9663031999991 12.468 692.9724634999991 12.344 711.9027785000003 13.885 703.6277958000001 12.392 739.0923051999969 14.078 709.3265692999972 11.634)
Error minima by case: (0.6537 8 16.6948 2 1.4856 2 1.2897 7 0.3316 8 0.2613 7 0.4013 2 20.0 1 0.3223 2 1.168 2 5.2734 2 0.5941 9 0.1382 1 11.0 2 1.2845 2 19.0 2 0.0816 2 1.4791 2 0.2414 2 0.1536 2 0.0078 1 2.2994 8 1.1269 2 15.4836 2 1.1144 2)
Average genome size in population (length): 48.787
Average program size in population (points): 49.787
Average percent parens in population: 0.046
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.306
Error (vector) diversity:			 0.331
Behavioral diversity:				 0.35
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1223625
--- Timings ---
Current time: 1529614885025 milliseconds
Total Time:           3.4 seconds
Initialization:       0.1 seconds,  3.3%
Reproduction:         0.6 seconds, 16.7%
Fitness Testing:      2.7 seconds, 80.0%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction integer_dup_times} {:instruction in1} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dup_times} {:instruction in1} {:instruction -34.80463471819142} {:instruction -67.97109130139842} {:instruction float_mult} {:instruction float_frominteger} {:instruction float_mod} {:instruction integer_dup} {:instruction integer_div} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_add} {:instruction in1} {:instruction integer_sub} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_swap} {:instruction tagged_775} {:instruction float_stackdepth} {:instruction integer_div} {:instruction float_tan} {:instruction float_max} {:instruction float_sin})
Best program: (float_flush integer_dup_times in1 float_div print_float integer_yankdup float_dec float_dup_times in1 -34.80463471819142 -67.97109130139842 float_mult float_frominteger float_mod integer_dup integer_div integer_max integer_pop integer_add in1 integer_sub integer_dup float_flush integer_swap tagged_775 float_stackdepth integer_div float_tan float_max float_sin)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 6355.612615999989
Median total errors in population: 1867.1784000000002
Error averages by case: (231.0813190999996 11.601 291.5118642999991 11.507 239.3863448999982 10.647 210.49381070000004 11.036 251.8214206000005 11.911 233.7426723999999 12.078 233.90827929999935 9.322 268.9616633000021 10.268 221.12229990000165 9.34 268.0033899999986 10.594 272.19622350000145 11.083 239.6007520999998 12.45 231.44475750000163 9.542 257.1635880000007 10.602 237.6840529 10.037 283.95515400000005 10.617 225.07937570000038 9.826 235.964334899999 10.546 208.3412944999998 9.66 245.33338219999902 9.894 198.42393490000015 9.577 246.70659369999996 12.883 219.7965257999992 9.705 296.65481570000117 11.254 242.0277661000003 9.227)
Error minima by case: (0.6447 8 21.6948 2 1.4856 2 1.2897 7 0.7491 8 0.2613 7 0.4013 2 3.8281 1 0.3223 2 8.832 2 5.2734 2 4.5941 8 3.8618 1 11.0 2 1.2845 2 12.8015 2 0.0816 2 1.4791 2 0.5398 2 0.1536 2 0.0078 1 2.2994 8 1.1269 1 15.4836 2 0.0474 1)
Average genome size in population (length): 55.833
Average program size in population (points): 56.833
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.509
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.775
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.775
Total error diversity:				 0.272
Error (vector) diversity:			 0.297
Behavioral diversity:				 0.319
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2623050
--- Timings ---
Current time: 1529614890009 milliseconds
Total Time:           8.6 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         3.3 seconds, 38.8%
Fitness Testing:      4.6 seconds, 53.4%
Report:               0.6 seconds,  6.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_add} {:instruction float_rot} {:instruction integer_min} {:instruction tag_integer_89} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (integer_max float_inc print_float integer_stackdepth integer_yank integer_dec integer_mult integer_add float_rot integer_min tag_integer_89 float_dup_items float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 4581.569428799986
Median total errors in population: 1536.0
Error averages by case: (170.69917390000035 10.733 204.6586985999997 6.711 164.25492129999932 5.989 148.73935670000003 12.056 196.34226379999944 11.449 180.89101990000043 11.84 190.43546159999974 5.443 194.1532444000007 5.642 167.24539480000064 5.312 174.4980286999995 6.282 192.38913390000056 6.552 184.59890320000048 12.386 141.24594520000005 4.801 195.03547060000017 6.268 171.39223509999997 5.627 198.7754737999999 6.297 169.36015640000022 5.537 166.55848359999965 5.913 140.1033818999999 5.481 166.14863119999978 5.52 132.57172940000052 4.994 202.1375731000004 12.918 152.63327599999965 5.471 193.42063030000043 6.17 202.62384140000012 5.265)
Error minima by case: (12.3463 8 44.6948 2 16.0652 2 1.2897 8 7.2179 9 8.7387 9 0.4013 2 49.3593 2 1.6155 2 43.0 3 28.2734 2 25.4059 9 4.0 1 21.0368 2 9.4108 2 73.4313 2 1.0652 2 12.0652 2 13.0 2 0.0975 2 2.2904 1 22.2994 10 6.1831 1 65.0 2 1.4882 1)
Average genome size in population (length): 49.663
Average program size in population (points): 50.663
Average percent parens in population: 0.025
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.0245
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.66
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.66
Total error diversity:				 0.113
Error (vector) diversity:			 0.127
Behavioral diversity:				 0.134
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3865850
--- Timings ---
Current time: 1529614893951 milliseconds
Total Time:          12.5 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.3 seconds, 42.3%
Fitness Testing:      6.2 seconds, 49.4%
Report:               0.9 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction integer_shove} {:instruction float_rot} {:instruction in2} {:instruction integer_fromfloat} {:instruction float_add} {:instruction integer_swap} {:instruction float_max} {:instruction integer_stackdepth} {:instruction -91} {:instruction integer_dec} {:instruction float_dup_times} {:instruction tag_float_553} {:instruction float_mod} {:instruction integer_dup_times} {:instruction in1} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_add} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_mod} {:instruction integer_min} {:instruction integer_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction float_dup} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_pop} {:instruction tagged_936} {:instruction integer_min} {:instruction float_mod} {:instruction tag_integer_299} {:instruction integer_min} {:instruction float_add} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_shove})
Best program: (float_frominteger integer_shove float_rot in2 integer_fromfloat float_add integer_swap float_max integer_stackdepth -91 integer_dec float_dup_times tag_float_553 float_mod integer_dup_times in1 integer_inc float_sub print_float integer_swap integer_fromfloat in2 float_add float_frominteger integer_add float_mod integer_min integer_dec in2 integer_inc integer_dup_times integer_shove float_dup float_mod float_sub float_dup_items float_pop tagged_936 integer_min float_mod tag_integer_299 integer_min float_add integer_dup_items float_flush integer_mod float_yank integer_stackdepth float_dup float_dup_times float_dup_times float_shove)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3721.2262947999993
Median total errors in population: 1515.0
Error averages by case: (143.6686691 10.461 175.50786440000002 4.189 123.18741630000001 3.219 116.5765758 12.265 175.4020537 10.564 152.7358922 11.466 160.0127181 3.086 164.8984583 3.203 134.6793542 3.086 132.64343540000002 4.078 163.6625883 4.185 159.0499816 12.387 98.56922609999998 2.23 172.7849229 4.05 133.0497238 3.133 165.96562450000002 4.071 136.51498020000002 3.178 126.74721589999999 3.242 105.02045059999999 3.128 123.21807980000001 3.133 101.2895908 2.269 176.25941529999997 12.539 120.3857455 3.142 153.9899101 3.325 172.69440190000003 3.083)
Error minima by case: (7.9659 9 45.6948 2 2.8948 2 4.606 9 9.7491 10 23.75 8 1.4933 2 20.0 1 3.2726 2 43.0 2 29.2734 2 4.0256 9 4.7578 1 11.0 2 39.4866 2 19.0 2 8.6569 2 7.1405 2 13.0 2 33.0 2 9.0 1 20.3202 11 25.8731 1 66.0 2 4.4075 1)
Average genome size in population (length): 36.91
Average program size in population (points): 37.91
Average percent parens in population: 0.031
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.51825
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 63
Genome diversity (% unique Plush genomes):	 0.541
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 63
Syntactic diversity (% unique Push programs):	 0.541
Total error diversity:				 0.033
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4789087
--- Timings ---
Current time: 1529614897648 milliseconds
Total Time:          16.0 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.0 seconds, 43.6%
Fitness Testing:      7.7 seconds, 47.8%
Report:               1.3 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_add} {:instruction in2} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_inc} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in1} {:instruction print_float} {:instruction float_dec} {:instruction float_dup} {:instruction integer_max} {:instruction float_div} {:instruction float_pop} {:instruction integer_add} {:instruction integer_flush} {:instruction float_min} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_pop})
Best program: (float_shove integer_shove float_dec float_add in2 float_inc in1 in2 -35 integer_mod float_dup_items float_inc integer_add float_yankdup integer_mod in1 print_float float_dec float_dup integer_max float_div float_pop integer_add integer_flush float_min float_add integer_mod float_swap integer_pop)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 3522.3395433
Median total errors in population: 1515.0
Error averages by case: (136.1049829 10.405 167.3958247 4.1 114.38695560000001 3.107 107.8759614 12.185 167.41742570000002 10.461 145.18789280000001 11.361 152.46108619999998 2.973 157.7940149 3.081 126.98818659999999 2.978 125.14239569999998 3.991 155.38614810000004 4.098 151.57997400000002 12.348 89.7826216 2.107 165.77710700000003 3.993 125.4219873 3.02 158.8704786 3.989 127.90097019999999 3.063 117.9968519 3.121 97.19157729999999 3.017 115.58303260000002 3.023 93.41440460000001 2.124 168.8551066 12.431 112.74301580000001 3.034 145.7145141 3.172 165.2140271 2.971)
Error minima by case: (13.3463 9 36.6948 3 32.0 2 3.606 9 9.7491 10 23.1534 10 1.4013 2 57.8281 2 2.6155 2 43.0 3 7.2734 3 26.4059 11 6.0 1 22.0368 3 38.6544 2 80.0 2 8.5901 2 36.0 2 13.0 2 34.0 2 9.0 1 29.7921 11 26.8731 1 52.7464 2 3.4075 1)
Average genome size in population (length): 34.807
Average program size in population (points): 35.807
Average percent parens in population: 0.033
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 6.070875
Median age in population: 6.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 55
Genome diversity (% unique Plush genomes):	 0.597
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.597
Total error diversity:				 0.023
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5659762
--- Timings ---
Current time: 1529614901254 milliseconds
Total Time:          19.9 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.9 seconds, 44.6%
Fitness Testing:      9.1 seconds, 45.8%
Report:               1.8 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_sin} {:instruction float_pop} {:instruction print_float} {:instruction float_dup} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_add} {:instruction float_rot} {:instruction integer_min} {:instruction tag_integer_89} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_max integer_fromfloat float_dup_times integer_swap integer_mod integer_pop float_sin float_pop print_float float_dup integer_dec integer_mult integer_add float_rot integer_min tag_integer_89 float_dup_items float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 3910.6063381000004
Median total errors in population: 1515.0
Error averages by case: (151.2236635 10.481 182.96763380000002 4.254 130.8009577 3.258 124.372256 12.272 182.83596999999997 10.564 160.1482306 11.447 167.3563124 3.11 172.3561276 3.208 142.2458852 3.104 140.16166970000003 4.115 171.1976331 4.254 166.4477862 12.431 106.57504979999999 2.255 180.2751262 4.111 140.6326583 3.151 173.3718469 4.111 144.1052562 3.216 134.35478999999998 3.278 112.80178049999999 3.144 130.8882728 3.148 109.1042613 2.264 183.46312719999997 12.526 128.0999022 3.168 161.5926365 3.327 179.9245044 3.106)
Error minima by case: (26.5927 9 66.4483 3 15.7321 2 3.606 9 71.5018 10 17.5225 11 1.4013 2 79.0 2 2.1769 2 43.0 3 37.0269 3 21.1881 11 6.0 1 88.0 3 38.6544 2 80.0 2 8.1579 2 25.7674 2 13.0 2 34.0 2 9.0 1 30.4012 8 30.0 1 67.0 2 3.4075 1)
Average genome size in population (length): 33.669
Average program size in population (points): 34.669
Average percent parens in population: 0.033
Minimum age in population: 5.0
Maximum age in population: 9.3125
Average age in population: 7.581875
Median age in population: 7.625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 42
Genome diversity (% unique Plush genomes):	 0.658
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 42
Syntactic diversity (% unique Push programs):	 0.658
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6502062
--- Timings ---
Current time: 1529614904486 milliseconds
Total Time:          23.1 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.4 seconds, 44.9%
Fitness Testing:     10.5 seconds, 45.5%
Report:               2.1 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_pop} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction integer_dup} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_div} {:instruction integer_min} {:instruction float_inc} {:instruction float_sin} {:instruction integer_max} {:instruction integer_add} {:instruction integer_pop} {:instruction integer_div} {:instruction integer_sub} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dec} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction float_dup_items})
Best program: (float_max integer_fromfloat float_dup_times integer_swap print_integer integer_pop in2 integer_dup_times integer_dup_items integer_dup float_rot float_inc integer_dup_times integer_mult integer_mult in1 print_float float_div integer_inc integer_mult float_sub float_dup integer_div integer_min float_inc float_sin integer_max integer_add integer_pop integer_div integer_sub integer_swap float_dup_items float_dup_items float_dup float_dec float_rot integer_fromfloat float_sin float_dup_items)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3726.6089962
Median total errors in population: 1515.0
Error averages by case: (143.7139393 10.445 176.59310639999998 4.139 123.98702420000001 3.146 117.47306400000001 12.248 176.41167599999997 10.51 152.71842729999997 11.411 159.8845385 3.017 164.8686444 3.122 134.5431165 3.016 132.33580920000003 4.026 164.7487118 4.134 159.11530330000002 12.396 99.5545432 2.14 172.9040558 4.026 132.84230359999998 3.052 165.87758419999997 4.026 137.3332978 3.11 127.5543266 3.175 104.82831839999999 3.062 122.9585436 3.052 101.11179179999999 2.178 176.2506446 12.487 120.2711766 3.084 154.95259399999998 3.202 172.5584551 3.014)
Error minima by case: (43.6428 10 90.0 2 33.0 2 3.926 9 81.2509 10 24.7387 11 2.4013 2 80.0 2 3.2505 2 44.0 3 77.0 2 47.5941 11 5.0 1 89.0 2 39.6544 2 81.0 3 7.223 2 37.0 2 14.0 2 33.0 2 10.0 1 28.1726 10 31.0 2 66.0 2 4.4075 2)
Average genome size in population (length): 32.482
Average program size in population (points): 33.482
Average percent parens in population: 0.034
Minimum age in population: 7.0
Maximum age in population: 10.9375
Average age in population: 9.0806875
Median age in population: 9.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.696
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.696
Total error diversity:				 0.02
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7314587
--- Timings ---
Current time: 1529614907830 milliseconds
Total Time:          26.4 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.0 seconds, 45.3%
Fitness Testing:     11.9 seconds, 45.1%
Report:               2.4 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction float_add} {:instruction float_div} {:instruction integer_min} {:instruction integer_sub} {:instruction float_yank} {:instruction in1} {:instruction integer_rot} {:instruction integer_shove} {:instruction in1} {:instruction integer_sub} {:instruction print_float} {:instruction float_mult} {:instruction float_yank} {:instruction float_frominteger} {:instruction float_sin} {:instruction float_shove} {:instruction 19.129143349546297} {:instruction -42.62123843721297} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_div} {:instruction float_mod} {:instruction float_tan} {:instruction float_add} {:instruction tagged_938})
Best program: (integer_add float_add float_div integer_min integer_sub float_yank in1 integer_rot integer_shove in1 integer_sub print_float float_mult float_yank float_frominteger float_sin float_shove 19.129143349546297 -42.62123843721297 float_dup_times integer_swap integer_inc integer_mult float_div float_mod float_tan float_add tagged_938)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 4217.122
Median total errors in population: 1515.0
Error averages by case: (163.559 10.517 194.626 4.359 143.238 3.365 137.036 12.278 194.626 10.595 172.429 11.481 179.525 3.211 183.96 3.336 154.689 3.209 152.028 4.218 183.108 4.355 178.638 12.469 119.316 2.364 191.943 4.219 152.915 3.256 184.847 4.218 156.528 3.322 146.782 3.395 125.418 3.255 143.158 3.256 121.87 2.401 195.491 12.577 140.497 3.285 173.362 3.442 191.943 3.207)
Error minima by case: (56.0 9 90.0 2 32.0 2 25.0 11 90.0 10 66.0 11 74.0 2 79.0 2 46.0 2 43.0 3 77.0 2 73.0 11 5.0 1 88.0 2 44.0 2 80.0 2 47.0 2 36.0 2 13.0 2 33.0 2 9.0 1 92.0 12 30.0 1 66.0 2 88.0 1)
Average genome size in population (length): 31.315
Average program size in population (points): 32.315
Average percent parens in population: 0.035
Minimum age in population: 8.0625
Maximum age in population: 12.59375
Average age in population: 10.590078125
Median age in population: 10.65625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.718
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.718
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 8097912
--- Timings ---
Current time: 1529614911055 milliseconds
Total Time:          29.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.5 seconds, 45.5%
Fitness Testing:     13.3 seconds, 44.9%
Report:               2.7 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction integer_dup_times} {:instruction in1} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dup_times} {:instruction in1} {:instruction float_shove} {:instruction integer_swap} {:instruction float_div} {:instruction float_sub} {:instruction tagged_193} {:instruction integer_dup_items} {:instruction float_yank} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_pop} {:instruction integer_add} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_min} {:instruction integer_add} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_add} {:instruction tagged_306} {:instruction in1} {:instruction float_cos} {:instruction integer_flush} {:instruction float_min} {:instruction 23} {:instruction integer_dup_items} {:instruction float_min} {:instruction integer_sub} {:instruction float_pop} {:instruction in1})
Best program: (float_flush integer_dup_times in1 float_div print_float integer_yankdup float_dec float_dup_times in1 float_shove integer_swap float_div float_sub tagged_193 integer_dup_items float_yank float_mod integer_inc integer_stackdepth float_dup_items integer_pop integer_pop integer_add integer_stackdepth integer_mult integer_min integer_add integer_inc float_sin integer_dec integer_inc float_add tagged_306 in1 float_cos integer_flush float_min 23 integer_dup_items float_min integer_sub float_pop in1)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 3366.7762819
Median total errors in population: 1515.0
Error averages by case: (129.31538849999998 10.36 162.98186040000002 3.988 109.4967356 2.996 102.8733428 12.16 162.78492239999997 10.41 138.47755859999998 11.323 145.79572989999997 2.871 150.9198873 2.963 120.04301489999999 2.871 117.9739108 3.881 150.9431748 3.986 144.9632695 12.313 84.6961252 1.994 159.0031396 3.881 118.4192484 2.914 151.98031939999998 3.878 123.07138160000001 2.956 113.1245944 3.005 89.8843672 2.907 108.4462437 2.914 86.0963958 2.003 162.41067999999999 12.372 105.5561573 2.923 141.03806680000002 3.056 158.68776699999998 2.868)
Error minima by case: (41.7016 9 75.7016 2 32.0 2 3.606 8 80.2509 10 25.1184 11 1.4013 2 79.0 2 2.6155 2 43.0 3 62.7016 2 47.9737 11 5.0 1 88.0 2 29.7016 2 80.0 2 9.4259 2 36.0 2 13.0 2 18.7016 2 9.0 1 31.679 11 30.0 1 51.7016 2 3.4075 1)
Average genome size in population (length): 30.218
Average program size in population (points): 31.218
Average percent parens in population: 0.036
Minimum age in population: 9.625
Maximum age in population: 13.9453125
Average age in population: 12.034875
Median age in population: 12.046875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 8853662
--- Timings ---
Current time: 1529614914204 milliseconds
Total Time:          32.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.9 seconds, 45.5%
Fitness Testing:     14.7 seconds, 44.9%
Report:               3.0 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction in1} {:instruction float_div} {:instruction in1} {:instruction integer_rot} {:instruction integer_shove} {:instruction in1} {:instruction integer_sub} {:instruction print_float} {:instruction 97} {:instruction float_yank} {:instruction float_frominteger} {:instruction float_sin} {:instruction float_shove} {:instruction 19.129143349546297} {:instruction -42.62123843721297} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_div} {:instruction float_mod} {:instruction float_tan} {:instruction float_add} {:instruction tagged_1002})
Best program: (integer_yankdup integer_dup_times in1 float_div in1 integer_rot integer_shove in1 integer_sub print_float 97 float_yank float_frominteger float_sin float_shove 19.129143349546297 -42.62123843721297 float_dup_times integer_swap integer_inc integer_mult float_div float_mod float_tan float_add tagged_1002)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 3864.2233403000005
Median total errors in population: 1515.0
Error averages by case: (150.3436537 10.475 181.0366948 4.228 127.7875144 3.229 121.430606 12.266 180.07225089999997 10.554 159.32473869999998 11.441 166.5024013 3.076 170.2178281 3.186 141.3036155 3.077 137.78866399999998 4.101 169.3072734 4.225 165.6475941 12.424 104.4468618 2.227 178.30003680000002 4.091 139.5396544 3.12 171.1429001 4.089 141.25742590000002 3.185 131.3814791 3.251 110.6552414 3.117 129.66299999999998 3.13 107.03057949999999 2.235 182.7312994 12.525 125.98887309999999 3.139 159.4527464 3.3 179.1044075 3.075)
Error minima by case: (43.6537 9 90.0 2 32.0 2 4.606 9 81.2509 10 24.7387 11 2.4013 2 79.0 2 3.6155 2 43.0 3 77.0 2 47.5941 11 5.0 1 88.0 2 39.6544 2 80.0 2 9.4259 2 36.0 2 13.0 2 32.8464 2 9.0 1 31.2994 12 30.0 1 66.0 2 4.4075 1)
Average genome size in population (length): 29.404
Average program size in population (points): 30.404
Average percent parens in population: 0.037
Minimum age in population: 11.1875
Maximum age in population: 15.31640625
Average age in population: 13.50294921875
Median age in population: 13.52734375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.685
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.685
Total error diversity:				 0.018
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 9589087
--- Timings ---
Current time: 1529614917603 milliseconds
Total Time:          36.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.6 seconds, 45.9%
Fitness Testing:     16.1 seconds, 44.4%
Report:               3.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_774} {:instruction in1} {:instruction 98} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_min} {:instruction float_dec} {:instruction integer_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_max} {:instruction float_mult} {:instruction integer_stackdepth} {:instruction integer_min} {:instruction integer_shove} {:instruction tag_float_810} {:instruction in1} {:instruction float_yank} {:instruction float_tan} {:instruction float_swap} {:instruction float_min})
Best program: (tag_integer_774 in1 98 float_inc integer_swap integer_mod integer_add integer_inc integer_mod integer_yankdup float_min float_dec integer_yankdup print_float integer_fromfloat integer_max float_mult integer_stackdepth integer_min integer_shove tag_float_810 in1 float_yank float_tan float_swap float_min)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 3053.6575131
Median total errors in population: 1515.0
Error averages by case: (117.42035 10.284 150.2587396 3.789 96.09140769999999 2.792 89.3736499 12.129 150.0186499 10.328 126.76035009999998 11.255 134.27325520000002 2.704 139.12896220000002 2.773 108.1261118 2.707 105.70664190000001 3.704 138.07089689999998 3.789 133.2983501 12.246 70.8437973 1.791 147.4097971 3.71 106.4022675 2.732 140.1572503 3.704 109.9165595 2.763 99.7832665 2.807 77.37261550000001 2.733 96.2262645 2.736 73.5779679 1.808 151.04435009999997 12.302 93.22339600000001 2.745 127.9363357 2.841 147.35727989999998 2.707)
Error minima by case: (28.9749 9 45.3052 2 33.0 2 5.5771 9 17.7491 10 10.0599 8 3.3724 2 22.1719 2 4.5866 2 43.832 3 48.7266 2 32.9152 9 5.0 1 12.0368 2 40.6255 2 0.0999 3 5.2529 2 29.8003 2 13.2414 2 33.0 2 0.5795 1 16.6206 10 4.1269 2 18.7464 2 5.3786 2)
Average genome size in population (length): 28.876
Average program size in population (points): 29.876
Average percent parens in population: 0.038
Minimum age in population: 12.21875
Maximum age in population: 16.76953125
Average age in population: 14.99412109375
Median age in population: 15.0185546875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.016
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 10311362
--- Timings ---
Current time: 1529614921098 milliseconds
Total Time:          39.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.3 seconds, 46.3%
Fitness Testing:     17.5 seconds, 44.1%
Report:               3.7 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction print_float} {:instruction integer_div} {:instruction integer_min} {:instruction float_inc} {:instruction float_sin})
Best program: (integer_max float_inc print_float integer_stackdepth integer_yank integer_dec float_rot float_inc integer_dup_times integer_mult integer_mult in1 print_float float_div integer_inc integer_mult float_sub print_float integer_div integer_min float_inc float_sin)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 3375.20865
Median total errors in population: 1515.0
Error averages by case: (130.5288655 10.391 161.99494760000002 3.958 108.4685869 2.956 101.927654 12.237 161.8809438 10.447 139.6910355 11.363 147.00524459999997 2.862 151.8740981 2.933 121.24767289999998 2.864 118.764106 3.857 149.9761048 3.957 146.1767462 12.355 83.6152817 1.961 160.1005156 3.86 119.47975070000001 2.894 152.8422422 3.859 122.1784099 2.93 112.12851619999999 2.978 90.96092480000002 2.885 109.4087492 2.89 87.22960099999999 1.979 163.6241569 12.436 106.6341881 2.911 139.9470509 3.011 159.88925690000002 2.86)
Error minima by case: (43.2118 9 91.0 3 32.0 2 3.606 9 80.2509 10 24.2968 10 1.4013 2 79.0 2 2.6155 2 43.0 3 78.0 3 47.1521 11 6.0 1 88.0 3 38.6544 2 80.0 2 8.984 2 36.0 2 13.0 2 34.0 2 9.0 1 30.8575 11 30.0 1 67.0 2 3.4075 1)
Average genome size in population (length): 28.262
Average program size in population (points): 29.262
Average percent parens in population: 0.039
Minimum age in population: 14.03125
Maximum age in population: 18.2509765625
Average age in population: 16.4982470703125
Median age in population: 16.54931640625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.688
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.688
Total error diversity:				 0.02
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 11018312
--- Timings ---
Current time: 1529614924152 milliseconds
Total Time:          42.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.7 seconds, 46.2%
Fitness Testing:     18.8 seconds, 44.0%
Report:               4.1 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mod} {:instruction integer_pop} {:instruction in2} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_dup} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_div} {:instruction integer_min} {:instruction float_rot} {:instruction float_sin} {:instruction integer_max} {:instruction integer_add} {:instruction integer_pop} {:instruction integer_div} {:instruction integer_sub} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dec} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction float_dup_items})
Best program: (float_max integer_fromfloat float_dup_times integer_swap integer_mod integer_pop in2 print_float integer_dup_items integer_dup float_rot float_inc integer_dup_times integer_mult integer_mult in1 print_float float_div integer_inc integer_mult float_sub float_dup integer_div integer_min float_rot float_sin integer_max integer_add integer_pop integer_div integer_sub integer_swap float_dup_items float_dup_items float_dup float_dec float_rot integer_fromfloat float_sin float_dup_items)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3281.2780341
Median total errors in population: 1515.0
Error averages by case: (126.75830739999999 10.391 158.3603896 3.931 104.7110576 2.932 98.02099989999999 12.259 158.2240036 10.453 135.9604774 11.378 143.30380259999998 2.842 148.30831229999998 2.905 117.434231 2.843 115.136328 3.829 146.2895468 3.932 142.47418820000001 12.361 79.6407236 1.937 156.4991472 3.826 115.6583088 2.863 149.3266004 3.826 118.3907037 2.918 108.3669163 2.962 87.06996559999999 2.86 105.54330720000002 2.862 83.299318 1.96 159.99759880000002 12.452 102.81049229999999 2.887 136.2164928 2.982 156.243815 2.842)
Error minima by case: (44.6537 9 91.0 3 32.0 2 3.606 9 71.5018 10 25.7387 11 1.4013 2 79.0 2 2.6155 2 43.0 3 78.0 3 48.5941 11 6.0 1 88.0 3 38.6544 2 80.0 2 10.4259 2 36.0 2 13.0 2 34.0 2 9.0 1 32.2994 12 30.0 1 67.0 2 3.4075 1)
Average genome size in population (length): 27.966
Average program size in population (points): 28.966
Average percent parens in population: 0.039
Minimum age in population: 15.5458984375
Maximum age in population: 19.74560546875
Average age in population: 17.9570205078125
Median age in population: 18.0322265625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.694
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.694
Total error diversity:				 0.013
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 11717937
--- Timings ---
Current time: 1529614927300 milliseconds
Total Time:          45.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.2 seconds, 46.2%
Fitness Testing:     20.2 seconds, 44.0%
Report:               4.4 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_add} {:instruction in2} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float} {:instruction float_min} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_max} {:instruction integer_min} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_min} {:instruction float_tan} {:instruction float_stackdepth} {:instruction float_max} {:instruction in1} {:instruction float_tan} {:instruction integer_div})
Best program: (float_shove integer_shove float_dec float_add in2 float_inc in1 in2 -35 print_float float_min integer_fromfloat in1 float_max integer_min integer_pop integer_shove integer_min float_tan float_stackdepth float_max in1 float_tan integer_div)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 3203.6544061000004
Median total errors in population: 1515.0
Error averages by case: (122.9697019 10.311 156.51945059999997 3.87 102.64271090000001 2.873 96.10833290000001 12.144 156.45968580000002 10.358 132.2524387 11.281 139.7345395 2.773 144.7518983 2.852 113.7553624 2.773 111.43684520000001 3.784 144.42329320000002 3.873 138.74720750000003 12.269 77.6279427 1.878 152.9761062 3.783 112.0431132 2.804 145.7745638 3.783 116.4691338 2.838 106.326564 2.89 83.25044070000001 2.805 101.93292339999999 2.808 79.4634196 1.89 156.3805243 12.328 99.0583281 2.823 134.32633370000002 2.925 152.7345457 2.773)
Error minima by case: (20.7015 9 91.0 3 31.5621 2 5.7746 11 90.0 10 1.7865 10 3.3832 2 79.0 2 4.5638 2 43.0 3 78.0 3 24.6418 9 6.0 1 88.0 3 40.1978 2 80.0 2 8.6075 2 21.5268 2 13.0 2 34.0 2 9.0 1 8.3472 10 30.0 1 67.0 2 5.371 1)
Average genome size in population (length): 27.442
Average program size in population (points): 28.442
Average percent parens in population: 0.040
Minimum age in population: 16.91015625
Maximum age in population: 21.3994140625
Average age in population: 19.37820336914062
Median age in population: 19.412841796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.664
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.664
Total error diversity:				 0.016
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 12404412
--- Timings ---
Current time: 1529614930507 milliseconds
Total Time:          49.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.7 seconds, 46.2%
Fitness Testing:     21.6 seconds, 44.0%
Report:               4.7 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_mult} {:instruction float_flush} {:instruction float_sub} {:instruction tagged_350} {:instruction in2} {:instruction integer_shove} {:instruction in1} {:instruction -73} {:instruction float_inc} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_add} {:instruction float_rot} {:instruction integer_min} {:instruction tag_integer_89} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_dup_items integer_stackdepth float_pop float_min integer_mult float_flush float_sub tagged_350 in2 integer_shove in1 -73 float_inc float_pop integer_stackdepth integer_yank integer_dec integer_mult integer_add float_rot integer_min tag_integer_89 float_dup_items float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 3185.3045049
Median total errors in population: 1515.0
Error averages by case: (122.9675828 10.32 154.68815519999998 3.86 100.7264435 2.859 94.1947472 12.16 154.6796819 10.364 132.2186678 11.293 139.61513309999998 2.761 144.6524134 2.839 113.6627756 2.764 111.29542509999999 3.77 142.54889110000002 3.859 138.7305233 12.282 75.6937909 1.864 152.9150395 3.769 111.9168923 2.797 145.65162940000002 3.768 114.58635500000001 2.832 104.4244083 2.876 83.1806533 2.79 101.79339 2.797 79.4106676 1.88 156.3272285 12.351 98.9895484 2.813 132.4883101 2.915 152.5991516 2.764)
Error minima by case: (38.2754 10 54.7656 2 27.4147 2 3.606 9 80.2509 9 24.7387 11 1.4013 2 78.0 2 2.6155 2 42.0 2 25.3443 2 34.3351 12 6.0 1 87.0 3 38.6544 2 79.0 3 9.4259 2 35.0 2 12.0 2 34.0 2 8.0 1 31.2994 9 29.0 2 67.0 2 3.4075 2)
Average genome size in population (length): 26.615
Average program size in population (points): 27.615
Average percent parens in population: 0.041
Minimum age in population: 17.91015625
Maximum age in population: 22.623046875
Average age in population: 20.85218981933594
Median age in population: 20.90472412109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.667
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.667
Total error diversity:				 0.014
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 13070312
--- Timings ---
Current time: 1529614933639 milliseconds
Total Time:          52.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.2 seconds, 46.3%
Fitness Testing:     22.9 seconds, 43.9%
Report:               5.0 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction float_max} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dup} {:instruction integer_pop} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction integer_dup} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction print_float} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_add} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_mod} {:instruction integer_min} {:instruction integer_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_frominteger} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_add} {:instruction integer_pop} {:instruction integer_div} {:instruction integer_min} {:instruction float_tan} {:instruction float_stackdepth} {:instruction float_max} {:instruction in1} {:instruction float_tan})
Best program: (integer_add float_max float_dup_items float_dup_times integer_swap float_dup integer_pop in2 integer_dup_times integer_dup_items integer_dup float_rot float_inc integer_dup_times integer_mult integer_mult in1 print_float float_div integer_inc integer_mult float_sub print_float integer_swap integer_fromfloat in2 float_add float_frominteger integer_add float_mod integer_min integer_dec in2 integer_inc float_frominteger float_dup integer_fromfloat float_sin integer_add integer_pop integer_div integer_min float_tan float_stackdepth float_max in1 float_tan)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2958.1751983999998
Median total errors in population: 1515.0
Error averages by case: (114.44171380000002 10.271 146.5397992 3.754 91.1409278 2.742 84.3713366 12.124 145.42786459999996 10.306 123.7605 11.24 131.2067892 2.665 135.3483966 2.727 105.0047762 2.668 101.7123116 3.664 134.2837754 3.751 130.3621002 12.229 66.7924894 1.759 143.65823859999998 3.665 103.277282 2.698 136.3830088 3.659 105.01316560000001 2.716 94.8483182 2.762 73.252248 2.681 93.08099859999999 2.702 69.4331474 1.761 148.10978899999998 12.287 89.21352100000001 2.696 124.191581 2.806 144.3221196 2.666)
Error minima by case: (13.3463 9 45.6948 2 32.0 2 3.606 9 9.7491 10 23.75 8 1.4013 2 57.8281 2 2.6155 2 43.0 3 29.2734 2 26.4059 10 5.0 1 22.0368 2 38.6544 2 80.0 2 8.6569 2 36.0 2 13.0 2 33.0 2 9.0 1 30.3945 11 26.8731 1 66.0 2 3.4075 1)
Average genome size in population (length): 26.272
Average program size in population (points): 27.272
Average percent parens in population: 0.041
Minimum age in population: 18.91015625
Maximum age in population: 24.3382568359375
Average age in population: 22.37042401123047
Median age in population: 22.41873168945312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.653
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.653
Total error diversity:				 0.015
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 13727612
--- Timings ---
Current time: 1529614936758 milliseconds
Total Time:          55.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.6 seconds, 46.3%
Fitness Testing:     24.3 seconds, 43.9%
Report:               5.3 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction tag_integer_209} {:instruction float_pop} {:instruction integer_div} {:instruction tagged_954} {:instruction print_integer} {:instruction print_integer} {:instruction tag_integer_567} {:instruction integer_mult} {:instruction -23} {:instruction print_float} {:instruction tagged_222} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction in1} {:instruction integer_dup} {:instruction integer_inc} {:instruction print_float} {:instruction float_dup_times})
Best program: (integer_add tag_integer_209 float_pop integer_div tagged_954 print_integer print_integer tag_integer_567 integer_mult -23 print_float tagged_222 in1 integer_flush float_pop in1 integer_dup integer_inc print_float float_dup_times)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2672.7583387000004
Median total errors in population: 1515.0
Error averages by case: (103.13747670000001 10.264 135.6485999 3.589 79.4450588 2.595 72.71730249999999 12.205 134.6322372 10.315 112.5808635 11.258 120.1426884 2.545 124.3629687 2.57 93.6023309 2.547 90.2139804 3.524 123.2363358 3.593 119.26529769999999 12.251 54.799101 1.599 132.8235949 3.524 91.8144476 2.554 125.38418469999999 3.523 93.5955507 2.592 83.2109528 2.613 61.4392086 2.55 81.4599454 2.553 57.5812229 1.62 137.2354242 12.321 77.62210370000001 2.57 112.9447548 2.623 133.4207069 2.544)
Error minima by case: (8.8491 9 91.0 2 19.7098 2 3.2858 9 79.9307 8 10.0659 9 1.0811 2 78.0 2 2.2953 2 42.0 2 72.4688 2 12.7894 11 6.0 1 87.0 3 38.3342 2 79.0 2 10.4259 2 9.6744 2 12.0 2 34.0 2 8.0 1 3.5052 10 29.0 1 67.0 2 3.0873 1)
Average genome size in population (length): 25.73
Average program size in population (points): 26.73
Average percent parens in population: 0.042
Minimum age in population: 19.91015625
Maximum age in population: 25.80972290039062
Average age in population: 23.83828625488281
Median age in population: 23.84196472167969
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.017
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 14371312
--- Timings ---
Current time: 1529614939791 milliseconds
Total Time:          58.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.0 seconds, 46.2%
Fitness Testing:     25.7 seconds, 43.9%
Report:               5.7 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_cos} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_add} {:instruction float_rot} {:instruction integer_min} {:instruction tag_integer_89} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (integer_max float_cos print_float integer_stackdepth integer_yank integer_dec integer_mult integer_add float_rot integer_min tag_integer_89 float_dup_items float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 3139.1581217
Median total errors in population: 1515.0
Error averages by case: (121.1324182 10.347 153.1713395 3.882 98.97532860000001 2.885 92.17880040000001 12.195 152.67412489999998 10.393 130.2755979 11.324 137.5393736 2.795 142.8184369 2.866 111.6159578 2.796 109.5158128 3.793 140.9592947 3.884 136.89809820000002 12.307 73.9231764 1.888 150.9943174 3.788 109.91000300000002 2.823 143.89107339999998 3.79 112.5927234 2.864 102.61882279999998 2.913 81.2108883 2.817 99.8231023 2.825 77.4268814 1.913 154.39157500000002 12.385 97.01893059999999 2.836 131.04601399999999 2.941 150.5130302 2.793)
Error minima by case: (44.3569 9 90.0 2 32.0 2 3.606 9 3.5635 9 23.75 8 1.4013 2 53.0136 2 2.6155 2 43.0 3 77.0 2 48.3573 9 5.0 1 26.2224 2 38.6544 2 77.0857 2 8.6569 2 36.0 2 13.0 2 20.6608 2 9.0 1 30.3945 10 26.9414 1 66.0 2 3.4075 1)
Average genome size in population (length): 25.018
Average program size in population (points): 26.018
Average percent parens in population: 0.043
Minimum age in population: 22.5435791015625
Maximum age in population: 27.19479370117188
Average age in population: 25.36613679504395
Median age in population: 25.44846343994141
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.648
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.648
Total error diversity:				 0.019
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 14997112
--- Timings ---
Current time: 1529614942856 milliseconds
Total Time:          61.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.5 seconds, 46.3%
Fitness Testing:     27.0 seconds, 43.9%
Report:               6.0 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_min} {:instruction integer_add} {:instruction float_yank} {:instruction integer_mult} {:instruction float_shove} {:instruction float_rot} {:instruction integer_min} {:instruction tag_integer_89} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction tag_float_553} {:instruction float_mod} {:instruction float_mod} {:instruction integer_dup_times} {:instruction in1} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_max integer_min integer_add float_yank integer_mult float_shove float_rot integer_min tag_integer_89 float_dup_items float_frominteger in1 -73 tag_float_553 float_mod float_mod integer_dup_times in1 integer_inc float_sub print_float integer_swap integer_fromfloat)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2981.5000789
Median total errors in population: 1515.0
Error averages by case: (114.4876317 10.291 146.5934517 3.754 93.01845430000002 2.763 86.32270000000001 12.168 147.3273958 10.342 123.7931729 11.271 131.2103252 2.675 137.2064331 2.741 105.00316289999999 2.676 103.5603718 3.677 134.3311059 3.755 130.413762 12.262 66.7577555 1.763 145.54697570000002 3.674 103.2417044 2.696 138.22017940000003 3.673 106.9044283 2.737 96.7277762 2.786 75.2125089 2.697 93.0191757 2.697 71.4092244 1.781 148.14073560000003 12.332 91.1610851 2.716 124.1716378 2.798 144.3209246 2.673)
Error minima by case: (44.3569 9 91.0 3 32.0 2 3.926 9 80.9323 9 23.75 8 1.4933 2 79.0 2 2.6398 2 43.0 3 78.0 3 48.3573 10 6.0 1 88.0 3 39.4866 2 80.0 2 8.223 2 36.0 2 13.0 2 34.0 2 9.0 1 29.1726 10 30.0 1 67.0 2 4.2485 1)
Average genome size in population (length): 24.743
Average program size in population (points): 25.743
Average percent parens in population: 0.044
Minimum age in population: 23.5435791015625
Maximum age in population: 28.91974639892578
Average age in population: 26.85135650634766
Median age in population: 26.94286346435547
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.627
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.627
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 15615962
--- Timings ---
Current time: 1529614945925 milliseconds
Total Time:          64.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.9 seconds, 46.3%
Fitness Testing:     28.3 seconds, 43.9%
Report:               6.2 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_add} {:instruction integer_max} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float} {:instruction integer_max} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_max} {:instruction integer_min} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_min} {:instruction float_tan} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_div} {:instruction integer_min} {:instruction float_inc} {:instruction float_sin} {:instruction float_mult} {:instruction integer_add} {:instruction integer_pop} {:instruction integer_div} {:instruction integer_dup_items} {:instruction integer_dup})
Best program: (float_shove integer_shove float_dec float_add integer_max float_inc in1 in2 -35 print_float integer_max integer_fromfloat in1 float_max integer_min integer_pop integer_shove integer_min float_tan float_div integer_inc integer_mult float_sub float_dup integer_div integer_min float_inc float_sin float_mult integer_add integer_pop integer_div integer_dup_items integer_dup)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2921.7790439
Median total errors in population: 1515.0
Error averages by case: (112.5824901 10.283 144.63066229999998 3.721 90.12864909999999 2.721 83.4415534 12.167 144.54340889999997 10.33 121.9807864 11.263 129.5043733 2.644 134.3150815 2.703 103.1865744 2.643 100.55732769999999 3.643 132.3774115 3.721 128.5612585 12.266 64.7209103 1.72 142.7025656 3.643 101.3789162 2.665 135.30138939999998 3.642 104.13827309999999 2.703 93.86855030000001 2.742 72.2132629 2.661 91.08796870000002 2.665 68.4180177 1.745 146.4205386 12.329 88.1925095 2.683 122.1511053 2.76 142.6684592 2.644)
Error minima by case: (13.3463 10 45.6948 3 33.0 2 6.1594 9 9.7491 10 25.5251 11 1.972 2 57.8281 2 2.9589 2 44.0 3 29.2734 3 26.4059 11 6.0 1 22.0368 3 39.2618 2 80.9001 3 8.8472 2 37.0 2 14.0 2 34.0 2 10.0 1 31.838 11 26.8731 2 67.0 2 4.0517 2)
Average genome size in population (length): 24.449
Average program size in population (points): 25.449
Average percent parens in population: 0.044
Minimum age in population: 24.5435791015625
Maximum age in population: 30.4910774230957
Average age in population: 28.35068783187866
Median age in population: 28.3986644744873
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.008
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 16227387
--- Timings ---
Current time: 1529614949019 milliseconds
Total Time:          67.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.4 seconds, 46.4%
Fitness Testing:     29.7 seconds, 43.8%
Report:               6.5 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_mod} {:instruction tagged_843} {:instruction print_integer} {:instruction print_integer} {:instruction tag_integer_567} {:instruction integer_mult} {:instruction float_rot} {:instruction print_float} {:instruction tagged_222} {:instruction in1} {:instruction integer_flush} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_max integer_fromfloat float_dup_times integer_min integer_mod tagged_843 print_integer print_integer tag_integer_567 integer_mult float_rot print_float tagged_222 in1 integer_flush -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 3186.8824007000003
Median total errors in population: 1515.0
Error averages by case: (123.06474930000002 10.319 154.8150505 3.867 100.8642026 2.867 94.28051300000001 12.153 154.62292190000002 10.361 132.2852274 11.282 139.6466333 2.769 144.6270932 2.849 113.7216268 2.771 111.3130585 3.772 142.66119579999997 3.868 138.81488300000004 12.283 75.8444834 1.871 152.85493160000001 3.774 111.9418797 2.797 145.65104330000003 3.773 114.6628215 2.839 104.5478978 2.89 83.24036269999999 2.797 101.8057381 2.802 79.4968124 1.893 156.3744326 12.35 99.0154992 2.818 132.65704460000003 2.921 152.6162985 2.77)
Error minima by case: (44.3569 10 40.9561 2 33.0 2 3.606 9 17.7491 10 23.75 7 1.4013 2 38.8281 2 2.6155 2 43.832 3 11.5347 2 48.1447 10 5.0 1 12.0368 2 38.6544 2 62.9001 3 8.6569 2 37.0 2 14.0 2 33.0 2 10.0 1 30.3945 11 31.0 2 57.0077 2 3.4075 2)
Average genome size in population (length): 24.116
Average program size in population (points): 25.116
Average percent parens in population: 0.045
Minimum age in population: 26.24737548828125
Maximum age in population: 31.73371315002441
Average age in population: 29.82383802986145
Median age in population: 29.88800048828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.641
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.641
Total error diversity:				 0.009
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 16830587
--- Timings ---
Current time: 1529614952082 milliseconds
Total Time:          70.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        32.8 seconds, 46.4%
Fitness Testing:     31.0 seconds, 43.8%
Report:               6.8 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction integer_min} {:instruction float_dup_items} {:instruction tagged_770} {:instruction integer_flush} {:instruction print_integer} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_div} {:instruction integer_add} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_stackdepth} {:instruction in2} {:instruction float_add} {:instruction tag_integer_761} {:instruction integer_yankdup} {:instruction float_tan})
Best program: (integer_max integer_add in1 float_min integer_min float_dup_items tagged_770 integer_flush print_integer float_dup_items float_mod float_div integer_add integer_yank integer_inc float_sub print_float float_stackdepth in2 float_add tag_integer_761 integer_yankdup float_tan)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 3280.8604516000005
Median total errors in population: 1515.0
Error averages by case: (126.8230995 10.374 158.4842226 3.894 104.7716815 2.898 98.1305322 12.245 158.1788873 10.436 135.9963545 11.356 143.3057369 2.812 148.1723459 2.876 117.4605228 2.809 114.9593577 3.801 146.3969585 3.894 142.52592049999998 12.35 79.75972370000001 1.9 156.3989721 3.794 115.6608249 2.83 149.167562 3.798 118.5114161 2.879 108.44157549999998 2.923 86.9938969 2.827 105.5593226 2.829 83.31455880000001 1.923 160.01403649999997 12.437 102.7054809 2.853 136.3803775 2.942 156.2550842 2.812)
Error minima by case: (42.6537 10 90.0 2 33.0 2 5.606 9 11.6364 10 23.7387 11 3.3356 2 80.0 2 4.6155 2 44.0 3 77.0 2 46.5941 11 5.0 1 49.9353 2 40.6544 2 81.0 3 8.4259 2 37.0 2 14.0 2 33.0 2 10.0 1 30.2994 10 1.6078 2 66.0 2 5.4075 2)
Average genome size in population (length): 24.124
Average program size in population (points): 25.124
Average percent parens in population: 0.044
Minimum age in population: 27.24737548828125
Maximum age in population: 33.30899524688721
Average age in population: 31.33072301483154
Median age in population: 31.41083860397339
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.631
Total error diversity:				 0.014
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 17433912
--- Timings ---
Current time: 1529614955102 milliseconds
Total Time:          73.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        34.2 seconds, 46.4%
Fitness Testing:     32.3 seconds, 43.8%
Report:               7.1 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction integer_dup_times} {:instruction in1} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_div} {:instruction float_max} {:instruction float_inc} {:instruction float_sin} {:instruction integer_max} {:instruction integer_add} {:instruction float_shove} {:instruction integer_div} {:instruction integer_sub} {:instruction -80.44638031448872})
Best program: (float_flush integer_dup_times in1 float_div print_float integer_yankdup integer_inc integer_mult float_sub float_dup integer_div float_max float_inc float_sin integer_max integer_add float_shove integer_div integer_sub -80.44638031448872)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 3350.469
Median total errors in population: 1515.0
Error averages by case: (129.61 10.344 160.992 3.937 107.46 2.937 100.999 12.151 160.994 10.391 138.84 11.308 146.224 2.822 150.841 2.921 120.38 2.825 117.613 3.85 148.993 3.935 145.301 12.295 82.537 1.936 159.148 3.848 118.534 2.866 151.764 3.847 121.305 2.897 111.152 2.951 89.923 2.865 108.381 2.866 86.231 1.952 162.838 12.366 105.614 2.88 138.84 2.994 159.146 2.825)
Error minima by case: (56.0 10 90.0 2 33.0 2 26.0 11 91.0 10 66.0 11 74.0 2 80.0 2 46.0 2 44.0 3 77.0 2 73.0 12 5.0 1 89.0 2 44.0 2 81.0 3 48.0 2 37.0 2 14.0 2 33.0 2 10.0 1 92.0 12 31.0 2 66.0 2 88.0 2)
Average genome size in population (length): 24.075
Average program size in population (points): 25.075
Average percent parens in population: 0.045
Minimum age in population: 29.76474380493164
Maximum age in population: 34.64202690124512
Average age in population: 32.83475314855576
Median age in population: 32.88416886329651
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.013
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 18036137
--- Timings ---
Current time: 1529614958233 milliseconds
Total Time:          76.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.7 seconds, 46.4%
Fitness Testing:     33.7 seconds, 43.8%
Report:               7.4 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_div} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_sin} {:instruction float_pop} {:instruction print_float} {:instruction 62} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction float_pop} {:instruction integer_add} {:instruction integer_flush} {:instruction float_min} {:instruction float_add} {:instruction 4.088545740177935} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_min} {:instruction float_tan} {:instruction float_stackdepth} {:instruction float_max} {:instruction in1} {:instruction float_tan} {:instruction integer_dup})
Best program: (integer_max float_div integer_stackdepth integer_dec integer_yankdup float_sin float_pop print_float 62 integer_fromfloat float_swap integer_mult integer_mult in1 print_float float_div float_pop integer_add integer_flush float_min float_add 4.088545740177935 integer_pop integer_shove integer_min float_tan float_stackdepth float_max in1 float_tan integer_dup)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 3472.2764813
Median total errors in population: 1515.0
Error averages by case: (134.3276721 10.405 165.77333279999996 4.034 112.5374724 3.04 105.867433 12.224 165.3541988 10.456 143.41006650000003 11.375 150.6516229 2.923 155.5508532 3.008 125.0619071 2.926 122.7442878 3.922 153.76982590000003 4.033 149.87707550000002 12.365 87.80330919999999 2.039 163.62618300000003 3.918 123.343949 2.956 156.58279050000002 3.919 126.0217688 3.01 116.14337509999999 3.065 94.9902365 2.95 113.36318270000001 2.959 91.2801427 2.062 167.1943237 12.453 110.543788 2.978 143.96512890000002 3.099 163.4525552 2.921)
Error minima by case: (13.3463 10 45.6948 2 33.0 2 3.606 9 9.7491 10 24.5891 11 1.4013 2 39.8281 2 2.6155 2 44.0 3 29.2734 2 26.4059 10 5.0 1 13.0368 2 38.6544 2 63.9001 3 10.0652 2 37.0 2 14.0 2 33.0 2 10.0 1 31.7249 11 26.8731 2 66.0 2 3.4075 2)
Average genome size in population (length): 24.078
Average program size in population (points): 25.078
Average percent parens in population: 0.044
Minimum age in population: 30.77243900299072
Maximum age in population: 36.36680126190186
Average age in population: 34.34657793855667
Median age in population: 34.38248109817505
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.651
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.651
Total error diversity:				 0.013
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 18638487
--- Timings ---
Current time: 1529614961405 milliseconds
Total Time:          80.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.2 seconds, 46.5%
Fitness Testing:     35.0 seconds, 43.8%
Report:               7.7 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_shove} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction integer_dup} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_dup} {:instruction integer_min} {:instruction float_inc} {:instruction float_sin} {:instruction integer_div} {:instruction float_max} {:instruction float_inc} {:instruction float_sin} {:instruction float_cos} {:instruction integer_add} {:instruction integer_pop} {:instruction float_cos} {:instruction integer_sub} {:instruction -80.44638031448872})
Best program: (float_shove integer_shove float_dec float_add float_shove integer_dup_times integer_dup_items integer_dup float_rot float_inc integer_dup_times integer_rot integer_mult in1 print_float float_div integer_inc integer_mult float_sub float_dup integer_dup integer_min float_inc float_sin integer_div float_max float_inc float_sin float_cos integer_add integer_pop float_cos integer_sub -80.44638031448872)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2954.4240258
Median total errors in population: 1515.0
Error averages by case: (113.56665369999999 10.289 146.5411362 3.741 92.03291429999999 2.743 85.3704345 12.166 146.42855780000002 10.329 122.9377387 11.274 130.4254013 2.654 135.25782809999998 2.714 104.1346155 2.655 101.458832 3.653 134.3005634 3.74 129.53359410000002 12.265 66.71672339999999 1.744 143.6820368 3.652 102.2926544 2.677 136.2209001 3.653 105.9972114 2.721 95.7609372 2.76 73.1872414 2.675 91.9881536 2.677 69.41057950000001 1.753 147.3582994 12.328 89.1668731 2.694 124.0847384 2.784 143.5734075 2.655)
Error minima by case: (44.6537 10 90.0 2 33.0 2 3.606 9 80.2509 10 25.7387 11 1.4013 2 80.0 2 2.6155 2 44.0 3 77.0 2 48.5941 12 5.0 1 89.0 2 38.6544 2 81.0 3 9.7855 2 37.0 2 14.0 2 33.0 2 10.0 1 32.2994 12 31.0 2 66.0 2 3.4075 2)
Average genome size in population (length): 23.713
Average program size in population (points): 24.713
Average percent parens in population: 0.045
Minimum age in population: 33.19700622558594
Maximum age in population: 37.67650735378265
Average age in population: 35.81486806595325
Median age in population: 35.84211641550064
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.647
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.647
Total error diversity:				 0.011
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 19231662
--- Timings ---
Current time: 1529614964475 milliseconds
Total Time:          83.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.6 seconds, 46.5%
Fitness Testing:     36.3 seconds, 43.7%
Report:               8.0 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_div} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove in1 print_float float_div integer_inc integer_mult float_sub float_dup integer_div float_yankdup print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 3481.6220944999995
Median total errors in population: 1515.0
Error averages by case: (135.202989 10.367 167.45879019999998 4.018 112.4480576 3.022 105.812 12.165 165.352 10.42 144.34860550000002 11.33 151.6645752 2.897 154.8029685 2.995 126.07732789999999 2.898 122.036992 3.91 155.4895394 4.016 150.7432606 12.321 89.6574261 2.015 162.8412208 3.912 124.4660966 2.94 155.85840059999998 3.91 126.00770360000001 2.981 116.07191639999999 3.041 94.09744839999999 2.934 114.55796310000001 2.939 90.329477 2.038 168.1038732 12.39 109.68423849999999 2.955 145.650663 3.077 164.4715613 2.896)
Error minima by case: (13.3463 9 45.6948 3 32.0 2 2.606 9 9.7491 10 25.7387 11 0.4013 2 57.8281 2 1.6155 2 43.0 3 29.2734 3 26.4059 11 6.0 1 22.0368 3 37.6544 2 80.0 2 10.4259 2 36.0 2 13.0 2 34.0 2 9.0 1 29.1726 11 26.8731 1 67.0 2 2.4075 1)
Average genome size in population (length): 23.763
Average program size in population (points): 24.763
Average percent parens in population: 0.044
Minimum age in population: 34.40101528167725
Maximum age in population: 39.22762107849121
Average age in population: 37.34138078826666
Median age in population: 37.37212786078453
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.656
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.656
Total error diversity:				 0.016
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 19826012
--- Timings ---
Current time: 1529614967468 milliseconds
Total Time:          86.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.1 seconds, 46.5%
Fitness Testing:     37.7 seconds, 43.7%
Report:               8.3 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mod} {:instruction integer_pop} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_inc} {:instruction float_max} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_div} {:instruction float_max} {:instruction float_inc} {:instruction float_tan} {:instruction float_flush})
Best program: (float_max integer_fromfloat float_dup_times integer_swap integer_mod integer_pop in2 integer_dup_times integer_dup integer_fromfloat float_yank float_rot integer_yank integer_yank float_inc float_max integer_mult integer_mult in1 print_float float_div integer_inc integer_mult float_sub float_dup integer_div float_max float_inc float_tan float_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 3601.7381170999997
Median total errors in population: 1515.0
Error averages by case: (138.9754412 10.398 172.2197274 4.101 118.3167784 3.103 111.5947119 12.178 170.9217822 10.449 148.0109388 11.345 155.32019770000002 2.966 159.953585 3.073 129.91173129999999 2.976 127.505541 3.982 160.2665326 4.095 154.39005110000002 12.342 94.75319149999999 2.107 167.7875419 3.983 128.4914752 3.018 161.1262035 3.981 131.60258130000003 3.065 121.87390619999998 3.129 99.29222279999999 3.007 118.7764939 3.023 95.4583274 2.128 171.61215629999998 12.42 114.82674300000001 3.035 150.6407427 3.171 168.0595128 2.975)
Error minima by case: (30.7276 10 90.0 2 32.4856 2 3.606 9 71.914 10 18.439 8 1.4013 2 80.0 2 2.6155 2 44.0 3 77.0 2 21.9507 10 5.0 1 89.0 2 38.6544 2 81.0 3 8.6569 2 36.5209 2 14.0 2 33.0 2 10.0 1 30.3945 11 31.0 2 66.0 2 3.4075 2)
Average genome size in population (length): 23.431
Average program size in population (points): 24.431
Average percent parens in population: 0.045
Minimum age in population: 36.52455675601959
Maximum age in population: 40.67733174562454
Average age in population: 38.79589912080765
Median age in population: 38.84234447777271
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.019
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 20412137
--- Timings ---
Current time: 1529614970424 milliseconds
Total Time:          89.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.4 seconds, 46.5%
Fitness Testing:     39.0 seconds, 43.8%
Report:               8.5 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction float_flush} {:instruction in1} {:instruction integer_sub} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dup_times} {:instruction in1} {:instruction float_dec} {:instruction float_dup} {:instruction integer_max} {:instruction float_div} {:instruction float_pop} {:instruction integer_add} {:instruction integer_flush} {:instruction float_min} {:instruction float_add} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_pop})
Best program: (float_flush float_flush in1 integer_sub print_float integer_yankdup float_dec float_dup_times in1 float_dec float_dup integer_max float_div float_pop integer_add integer_flush float_min float_add integer_mod integer_yank integer_pop)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 3268.3681007000005
Median total errors in population: 1515.0
Error averages by case: (125.80184599999998 10.399 158.4585367 3.912 104.7419431 2.916 98.0380104 12.296 158.1525578 10.469 135.0350765 11.391 142.494137 2.836 147.5259499 2.884 116.59739370000001 2.831 114.4348976 3.811 146.34555600000002 3.908 141.50145569999998 12.38 79.7224259 1.92 155.64322190000001 3.812 114.964111 2.846 148.5888535 3.808 118.43606330000001 2.902 108.4018953 2.943 86.2255538 2.843 104.93538860000001 2.846 82.4221153 1.943 159.0617466 12.479 101.9643341 2.873 136.3859087 2.957 155.4541223 2.83)
Error minima by case: (30.3075 9 91.0 3 32.0 2 3.8285 9 9.7491 10 17.5225 10 2.963 2 57.8281 2 2.6814 2 43.0 3 78.0 3 21.1881 10 6.0 1 22.0368 3 38.6688 2 80.0 2 9.7855 2 36.0 2 13.0 2 34.0 2 9.0 1 29.1726 11 26.8731 1 67.0 2 3.9685 1)
Average genome size in population (length): 23.137
Average program size in population (points): 24.137
Average percent parens in population: 0.046
Minimum age in population: 38.0362061560154
Maximum age in population: 42.40902426838875
Average age in population: 40.25022625172138
Median age in population: 40.28164179623127
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.637
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.637
Total error diversity:				 0.016
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 20990962
--- Timings ---
Current time: 1529614973436 milliseconds
Total Time:          92.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.8 seconds, 46.4%
Fitness Testing:     40.4 seconds, 43.8%
Report:               8.8 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_pop} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction integer_rot} {:instruction -35} {:instruction print_float} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_max} {:instruction integer_min} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_min} {:instruction float_tan} {:instruction float_sub} {:instruction float_max} {:instruction in1} {:instruction float_tan} {:instruction float_dup_items})
Best program: (integer_stackdepth float_cos integer_mod integer_pop in2 float_dup_times integer_add in1 integer_rot -35 print_float float_dup_times integer_fromfloat in1 float_max integer_min integer_pop integer_shove integer_min float_tan float_sub float_max in1 float_tan float_dup_items)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 3385.9701222
Median total errors in population: 1515.0
Error averages by case: (130.51630730000002 10.344 162.9967792 3.97 109.4820576 2.974 102.857424 12.13 162.7690036 10.379 139.65847730000002 11.301 146.96140789999998 2.851 152.2039685 2.954 121.2646929 2.855 119.25799200000002 3.873 150.95809359999998 3.971 146.13018830000001 12.289 84.69244719999999 1.976 160.2872208 3.872 119.6449264 2.902 153.2644006 3.871 123.0567036 2.934 113.10991639999999 2.989 91.16844839999999 2.89 109.6939217 2.899 87.371477 1.989 163.5395988 12.352 106.8402385 2.91 141.05298560000003 3.04 159.825445 2.851)
Error minima by case: (43.6537 9 90.0 2 32.0 2 3.606 9 80.2509 10 24.7387 11 1.4013 2 79.0 2 2.6155 2 43.0 3 77.0 2 47.5941 11 5.0 1 88.0 2 38.6544 2 80.0 2 9.4259 2 36.0 2 13.0 2 33.0 2 9.0 1 31.2994 12 30.0 1 66.0 2 3.4075 1)
Average genome size in population (length): 22.861
Average program size in population (points): 23.861
Average percent parens in population: 0.047
Minimum age in population: 39.31105995178223
Maximum age in population: 43.51469320058823
Average age in population: 41.7497623501718
Median age in population: 41.78922716900706
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.656
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.656
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 21562887
--- Timings ---
Current time: 1529614976420 milliseconds
Total Time:          95.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.2 seconds, 46.5%
Fitness Testing:     41.7 seconds, 43.8%
Report:               9.1 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_pop} {:instruction float_dec} {:instruction float_add} {:instruction in2} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_max} {:instruction integer_min} {:instruction float_shove} {:instruction integer_shove} {:instruction integer_min} {:instruction float_tan} {:instruction float_stackdepth} {:instruction float_max} {:instruction in1} {:instruction float_tan} {:instruction integer_div})
Best program: (float_shove float_pop float_dec float_add in2 float_inc in1 in2 -35 print_float integer_dup integer_fromfloat in1 float_max integer_min float_shove integer_shove integer_min float_tan float_stackdepth float_max in1 float_tan integer_div)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 3696.7455471999997
Median total errors in population: 1515.0
Error averages by case: (142.8597387 10.422 174.89996199999996 4.12 122.13610689999999 3.126 115.59363789999999 12.21 174.506336 10.465 151.87319079999997 11.39 159.0657146 3.001 164.079268 3.096 133.72972399999998 2.999 131.59897370000002 4.003 163.03011800000002 4.111 158.254626 12.374 97.69993639999998 2.126 172.0426255 4.004 132.0630004 3.042 165.1257345 4.007 135.5182085 3.087 125.7124745 3.147 103.98296889999999 3.037 122.20355110000001 3.041 100.2784034 2.153 175.41364519999996 12.452 119.4008639 3.063 153.26680290000002 3.193 171.73993539999998 3.001)
Error minima by case: (44.6537 9 90.0 2 32.0 2 3.606 9 1.8874 9 25.7387 10 1.4013 2 54.6898 2 2.6155 2 43.0 3 77.0 2 48.5941 9 5.0 1 27.8985 2 37.8989 2 78.7618 2 10.4259 2 36.0 2 13.0 2 18.9846 2 9.0 1 32.2075 10 25.2652 1 66.0 2 0.5746 1)
Average genome size in population (length): 22.824
Average program size in population (points): 23.824
Average percent parens in population: 0.046
Minimum age in population: 41.1804266422987
Maximum age in population: 44.97007633000612
Average age in population: 43.21434378003329
Median age in population: 43.26907908730209
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.665
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.665
Total error diversity:				 0.016
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 22133762
--- Timings ---
Current time: 1529614979490 milliseconds
Total Time:          98.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.7 seconds, 46.5%
Fitness Testing:     43.0 seconds, 43.8%
Report:               9.4 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mod} {:instruction in1} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_min} {:instruction float_inc} {:instruction float_sin})
Best program: (float_max integer_fromfloat float_dup_times integer_swap integer_mod in1 float_rot float_inc integer_dup_times integer_yankdup integer_mult in1 print_float float_div integer_inc integer_mult float_sub float_dup integer_swap integer_min float_inc float_sin)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2994.3332072999997
Median total errors in population: 1515.0
Error averages by case: (115.4279502 10.301 147.50309539999998 3.797 93.02002649999999 2.796 86.32213800000001 12.147 147.3280889 10.341 124.7268217 11.279 132.1333712 2.705 137.20915029999998 2.78 105.9544815 2.707 103.55973660000001 3.715 135.25126600000002 3.794 131.3370428 12.263 67.7515643 1.797 145.5470647 3.712 104.1931334 2.737 138.2206922 3.713 106.90807480000001 2.765 96.7296424 2.813 75.21440059999999 2.735 93.9805022 2.737 71.4084754 1.813 149.04777140000002 12.323 91.1634614 2.748 125.10291660000001 2.842 145.2283388 2.704)
Error minima by case: (43.6537 9 90.0 2 32.0 2 3.606 9 80.2509 10 24.7387 11 1.4013 2 79.0 2 2.6155 2 43.0 3 77.0 2 47.5941 11 5.0 1 88.0 2 38.6544 2 80.0 2 8.223 2 36.0 2 13.0 2 33.0 2 9.0 1 29.1726 11 30.0 1 66.0 2 3.4075 1)
Average genome size in population (length): 22.286
Average program size in population (points): 23.286
Average percent parens in population: 0.047
Minimum age in population: 42.36179479956627
Maximum age in population: 46.50820732861757
Average age in population: 44.70057649081387
Median age in population: 44.71992453373969
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.645
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.645
Total error diversity:				 0.015
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 22691087
--- Timings ---
Current time: 1529614982519 milliseconds
Total Time:         101.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.1 seconds, 46.5%
Fitness Testing:     44.3 seconds, 43.8%
Report:               9.7 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float})
Best program: (float_shove integer_shove float_dec float_add in2 float_min in1 in2 -35 print_float)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 10
Size: 11
Percent parens: 0.091
--- Population Statistics ---
Average total errors in population: 3633.3372195999996
Median total errors in population: 1515.0
Error averages by case: (140.8505892 10.335 171.948969 4.091 118.64712660000002 3.099 111.84652490000002 12.06 171.6704907 10.367 149.8202762 11.273 157.03757249999998 2.936 162.224747 3.072 131.6471337 2.943 129.6788781 3.982 159.90939390000003 4.091 156.2577768 12.261 93.7262208 2.106 170.21031230000003 3.985 130.05335119999998 3.007 163.2755519 3.977 132.0833119 3.038 122.2445836 3.109 101.9153485 2.999 120.2248024 3.006 98.14534889999999 2.106 173.4144965 12.312 117.39853160000001 3.011 150.0718394 3.179 169.750042 2.939)
Error minima by case: (31.0107 9 90.0 2 32.0 2 3.606 9 71.1832 10 18.5112 8 1.4013 2 79.0 2 2.6155 2 43.0 3 77.0 2 22.1442 10 5.0 1 88.0 2 38.6544 2 80.0 2 8.6569 2 36.0 2 13.0 2 33.0 2 9.0 1 30.3945 11 30.0 1 66.0 2 3.4075 1)
Average genome size in population (length): 22.277
Average program size in population (points): 23.277
Average percent parens in population: 0.048
Minimum age in population: 43.80305902659893
Maximum age in population: 47.92332498915493
Average age in population: 46.19922762904782
Median age in population: 46.25287293689325
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.659
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.659
Total error diversity:				 0.017
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 23248212
--- Timings ---
Current time: 1529614985483 milliseconds
Total Time:         104.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.5 seconds, 46.6%
Fitness Testing:     45.6 seconds, 43.8%
Report:               9.9 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_shove} {:instruction float_mult} {:instruction float_dec} {:instruction float_add} {:instruction in2} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction integer_dup_items} {:instruction float_shove} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_flush} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction tagged_672} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_shove} {:instruction 14.208604971029231})
Best program: (integer_sub float_shove float_mult float_dec float_add in2 float_inc in1 in2 integer_dup_items float_shove float_rot float_inc integer_dup_times float_flush integer_mult in1 print_float float_div integer_inc integer_mult float_sub tagged_672 float_stackdepth float_pop float_shove 14.208604971029231)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 3303.7931886
Median total errors in population: 1515.0
Error averages by case: (127.6679251 10.312 159.26841149999998 3.905 105.6690402 2.903 99.02395329999999 12.109 159.08389750000003 10.34 136.9079764 11.272 144.3778155 2.793 149.11367349999998 2.883 118.48025069999998 2.793 115.9836741 3.812 147.2105809 3.904 143.3759621 12.261 80.66974809999999 1.91 157.367119 3.811 116.70232060000001 2.836 150.0848126 3.81 119.42086929999999 2.855 109.35297039999999 2.909 88.0165195 2.834 106.61031740000001 2.836 84.26925349999999 1.923 160.93198379999998 12.314 103.7267834 2.848 137.2155045 2.967 157.3318257 2.79)
Error minima by case: (12.3463 9 90.0 2 32.0 2 3.5593 8 10.7491 10 25.7151 11 1.4142 2 79.0 2 2.6352 2 43.0 3 77.0 2 25.4059 11 5.0 1 88.0 2 38.6662 2 80.0 2 10.4434 2 36.0 2 13.0 2 33.0 2 9.0 1 32.2832 11 30.0 1 66.0 2 3.4182 1)
Average genome size in population (length): 22.224
Average program size in population (points): 23.224
Average percent parens in population: 0.047
Minimum age in population: 44.80305902659893
Maximum age in population: 49.62799033429474
Average age in population: 47.70966391444299
Median age in population: 47.76804429059848
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.632
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.632
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 23804162
--- Timings ---
Current time: 1529614988456 milliseconds
Total Time:         107.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.9 seconds, 46.6%
Fitness Testing:     46.9 seconds, 43.8%
Report:              10.2 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction in1} {:instruction integer_dup} {:instruction integer_inc} {:instruction print_float} {:instruction print_float} {:instruction integer_flush})
Best program: (float_pop in1 integer_dup integer_inc print_float print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 7
Size: 8
Percent parens: 0.125
--- Population Statistics ---
Average total errors in population: 3431.2538536
Median total errors in population: 1515.0
Error averages by case: (132.43407390000002 10.345 164.8062191 3.987 111.42315020000001 2.985 104.8510497 12.137 164.5669652 10.391 141.5529454 11.304 148.8126923 2.865 153.7370266 2.968 123.13537419999999 2.865 120.73561289999999 3.885 152.8013897 3.985 148.0371664 12.299 86.669688 1.988 161.912941 3.883 121.3530097 2.908 154.7305685 3.885 125.02619849999999 2.94 115.05676609999999 3.006 92.9302769 2.908 111.33837860000001 2.905 89.2094401 2.005 165.40589509999998 12.359 108.57333770000001 2.923 142.8620403 3.049 161.6516475 2.865)
Error minima by case: (43.6537 9 91.0 3 32.0 2 3.926 9 49.1272 10 24.7387 10 2.4013 2 79.0 2 3.2505 2 43.0 3 78.0 3 47.5941 11 6.0 1 78.9131 3 7.5307 2 80.0 2 8.223 2 36.0 2 9.1177 2 32.03 2 9.0 1 29.1726 11 25.7494 1 67.0 2 4.4075 1)
Average genome size in population (length): 22.15
Average program size in population (points): 23.15
Average percent parens in population: 0.048
Minimum age in population: 46.02000781148672
Maximum age in population: 51.25205382704735
Average age in population: 49.17873010480916
Median age in population: 49.2025366446469
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.64
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.64
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 24358087
--- Timings ---
Current time: 1529614991313 milliseconds
Total Time:         110.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.3 seconds, 46.6%
Fitness Testing:     48.2 seconds, 43.8%
Report:              10.5 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mod} {:instruction float_pop} {:instruction float_rot} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_flush} {:instruction float_yankdup} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction in1} {:instruction integer_dup} {:instruction float_frominteger} {:instruction print_float} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction integer_dup})
Best program: (float_max integer_fromfloat float_dup_times integer_swap integer_mod float_pop float_rot float_dup integer_fromfloat float_swap integer_sub float_inc integer_flush float_yankdup in1 integer_flush float_pop in1 integer_dup float_frominteger print_float float_tan float_add float_dup_times integer_add integer_fromfloat integer_dup)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 3388.2379677
Median total errors in population: 1515.0
Error averages by case: (130.4736185 10.36 162.0694762 3.979 109.4598794 2.993 102.90532160000001 12.187 162.824084 10.417 139.5861843 11.33 146.85489909999998 2.869 153.0329053 2.97 121.18194220000001 2.868 120.0795012 3.888 150.0316303 3.978 146.0728719 12.312 83.71891249999999 1.983 161.1441049 3.893 119.530249 2.906 154.0681294 3.885 123.0620585 2.958 113.09470639999998 3.014 92.09399739999999 2.911 109.5127348 2.909 88.551725 2.014 163.4466413 12.389 107.7476384 2.926 140.13972280000002 3.045 159.70203329999998 2.869)
Error minima by case: (24.3174 9 68.7237 3 13.4567 2 3.606 9 80.0067 9 24.7122 10 1.3884 2 79.0 2 1.5289 2 43.0 3 39.3023 3 20.377 8 6.0 1 88.0 3 38.6426 2 80.0 2 6.253 2 23.492 2 13.0 2 11.1594 2 9.0 1 30.0552 9 30.0 1 67.0 2 3.3968 1)
Average genome size in population (length): 22.08
Average program size in population (points): 23.08
Average percent parens in population: 0.048
Minimum age in population: 47.02000781148672
Maximum age in population: 52.87857501220424
Average age in population: 50.64405573050492
Median age in population: 50.67340302484808
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.622
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.622
Total error diversity:				 0.018
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 24910212
--- Timings ---
Current time: 1529614994328 milliseconds
Total Time:         113.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.7 seconds, 46.6%
Fitness Testing:     49.5 seconds, 43.8%
Report:              10.7 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mod} {:instruction float_pop} {:instruction float_rot} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_sub} {:instruction integer_inc} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_mult} {:instruction integer_div} {:instruction float_max} {:instruction float_inc} {:instruction float_tan})
Best program: (float_max integer_fromfloat float_dup_times integer_swap integer_mod float_pop float_rot float_dup integer_fromfloat float_swap integer_sub integer_inc in1 print_float float_div integer_inc integer_mult float_sub integer_mult integer_div float_max float_inc float_tan)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 3509.0653680999994
Median total errors in population: 1515.0
Error averages by case: (136.1225941 10.353 167.58796429999998 4.076 113.4148758 3.08 106.75789189999999 12.095 166.4542893 10.389 145.11463530000003 11.293 152.2759124 2.926 156.90662820000003 3.058 126.8335419 2.936 124.22655879999996 3.972 155.5686763 4.065 151.59580179999998 12.286 89.7782704 2.074 164.8753051 3.974 125.2681644 2.988 158.0115284 3.971 126.77693660000001 3.031 116.99019569999999 3.1 96.14013279999999 2.99 115.44237870000002 2.989 92.34238460000002 2.092 168.7816064 12.345 111.7259326 3.005 145.887901 3.147 165.0192613 2.931)
Error minima by case: (43.6537 10 48.7755 3 33.0 2 3.606 9 79.9323 10 23.75 8 0.4933 2 80.0 2 2.2726 2 44.0 3 19.3541 3 40.3252 10 6.0 1 89.0 3 38.4866 2 81.0 3 8.6569 2 37.0 2 14.0 2 34.0 2 10.0 1 30.3945 9 31.0 2 64.8272 2 3.4075 2)
Average genome size in population (length): 21.935
Average program size in population (points): 22.935
Average percent parens in population: 0.048
Minimum age in population: 48.95247322134674
Maximum age in population: 54.20209172059549
Average age in population: 52.12859411033994
Median age in population: 52.16988180470071
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.628
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.628
Total error diversity:				 0.015
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 25458587
--- Timings ---
Current time: 1529614997252 milliseconds
Total Time:         115.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.0 seconds, 46.6%
Fitness Testing:     50.8 seconds, 43.8%
Report:              11.0 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_rot} {:instruction integer_mod} {:instruction integer_pop} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction integer_dup} {:instruction float_rot} {:instruction float_inc} {:instruction float_mod} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction float_div} {:instruction integer_rot} {:instruction float_swap} {:instruction integer_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_max} {:instruction float_mult} {:instruction integer_stackdepth} {:instruction integer_yank})
Best program: (float_shove float_max integer_fromfloat float_dup_times integer_rot integer_mod integer_pop in2 integer_dup_times integer_dup_items integer_dup float_rot float_inc float_mod integer_mult integer_mult in1 print_float float_div integer_rot float_swap integer_yankdup print_float integer_fromfloat integer_max float_mult integer_stackdepth integer_yank)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 3123.5704382
Median total errors in population: 1515.0
Error averages by case: (120.1686922 10.308 152.9094106 3.833 98.7999472 2.834 92.18909430000001 12.154 152.7925194 10.356 129.4826168 11.281 136.9358646 2.738 141.96702039999997 2.814 110.87075399999999 2.739 108.5405604 3.745 140.7538335 3.832 135.99821659999998 12.273 73.6737236 1.839 150.2251472 3.745 109.15362 2.768 142.9982965 3.744 112.6568799 2.803 102.4993642 2.856 80.27178319999999 2.768 99.01034800000001 2.77 76.4709696 1.854 153.6799683 12.334 96.13534870000001 2.784 130.6149679 2.882 149.97849109999999 2.739)
Error minima by case: (44.3569 10 91.0 3 33.0 2 3.926 9 80.9323 10 23.75 8 1.4933 2 80.0 2 3.2505 2 44.0 3 78.0 3 48.5501 10 6.0 1 89.0 3 39.4866 2 81.0 3 8.223 2 37.0 2 14.0 2 34.0 2 10.0 1 29.1726 11 31.0 2 67.0 2 5.1523 2)
Average genome size in population (length): 21.898
Average program size in population (points): 22.898
Average percent parens in population: 0.048
Minimum age in population: 50.74054864281788
Maximum age in population: 55.57503312538029
Average age in population: 53.61809925982432
Median age in population: 53.67879614792764
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.626
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.626
Total error diversity:				 0.012
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 26006037
--- Timings ---
Current time: 1529615000363 milliseconds
Total Time:         118.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.4 seconds, 46.6%
Fitness Testing:     52.2 seconds, 43.9%
Report:              11.2 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_inc} {:instruction float_div} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction integer_dup} {:instruction integer_div} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_add} {:instruction in1} {:instruction in2} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_swap} {:instruction tagged_703} {:instruction float_stackdepth} {:instruction float_yank} {:instruction float_tan} {:instruction integer_shove} {:instruction float_sin})
Best program: (integer_inc float_div in1 in2 -35 print_float float_min integer_fromfloat float_mod integer_dup integer_div integer_max integer_pop integer_add in1 in2 integer_dup float_flush integer_swap tagged_703 float_stackdepth float_yank float_tan integer_shove float_sin)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 3277.6565899
Median total errors in population: 1515.0
Error averages by case: (126.7823245 10.274 159.2200411 3.888 104.5805071 2.894 98.0556057 12.059 158.2568764 10.308 136.0496011 11.224 143.482066 2.762 147.43272489999998 2.87 117.5848707 2.762 114.18513939999998 3.799 147.1792724 3.89 142.5031692 12.22 80.5900319 1.892 155.6699757 3.798 115.844702 2.814 148.4294833 3.798 118.4095484 2.842 108.270412 2.906 86.15969129999999 2.81 105.7434423 2.812 82.4025728 1.895 160.0935697 12.26 101.91722859999999 2.824 137.06066989999997 2.953 156.4380635 2.761)
Error minima by case: (44.632 10 91.0 3 33.0 2 5.6057 10 81.8764 9 24.0786 11 2.2633 2 80.0 2 2.6398 2 44.0 3 78.0 3 48.3573 10 6.0 1 89.0 3 40.3932 2 81.0 3 9.5484 2 37.0 2 14.0 2 34.0 2 10.0 1 31.1685 10 31.0 2 67.0 2 4.2485 2)
Average genome size in population (length): 21.422
Average program size in population (points): 22.422
Average percent parens in population: 0.050
Minimum age in population: 52.25460660617682
Maximum age in population: 56.92014974878111
Average age in population: 55.04185130281048
Median age in population: 55.10483319036575
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.621
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.621
Total error diversity:				 0.009
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 26541587
--- Timings ---
Current time: 1529615003273 milliseconds
Total Time:         121.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.8 seconds, 46.6%
Fitness Testing:     53.4 seconds, 43.8%
Report:              11.6 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_add} {:instruction float_rot} {:instruction float_sub} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (integer_add integer_dec integer_mult integer_add float_rot float_sub float_mod integer_dup_times float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 3119.6328824
Median total errors in population: 1515.0
Error averages by case: (119.3784922 10.307 153.0555798 3.853 98.8656224 2.853 91.5542883 12.138 151.7668876 10.343 129.4067723 11.276 136.7908263 2.752 142.0792167 2.833 110.78104669999999 2.753 108.7283894 3.762 140.7752735 3.849 135.720067 12.27 73.7973506 1.853 149.66466690000001 3.756 109.1403506 2.788 143.1593006 3.762 112.5418076 2.82 102.5228895 2.875 80.05581149999999 2.783 99.0660883 2.788 75.58979289999999 1.873 153.556429 12.328 95.8860006 2.804 130.8711707 2.897 149.8067614 2.756)
Error minima by case: (44.6428 10 91.0 3 33.0 2 3.606 9 4.0445 7 25.7387 11 1.4013 2 80.0 2 2.6155 2 44.0 3 78.0 3 48.5941 11 6.0 1 89.0 3 38.6544 2 81.0 3 8.223 2 37.0 2 14.0 2 33.0838 2 10.0 1 29.1726 11 31.0 2 67.0 2 3.4075 2)
Average genome size in population (length): 21.59
Average program size in population (points): 22.59
Average percent parens in population: 0.049
Minimum age in population: 53.73207800314412
Maximum age in population: 58.70456661962817
Average age in population: 56.55946129333963
Median age in population: 56.62333657804265
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.012
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 27081362
--- Timings ---
Current time: 1529615006260 milliseconds
Total Time:         124.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.3 seconds, 46.6%
Fitness Testing:     54.7 seconds, 43.8%
Report:              11.8 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction in2} {:instruction integer_mod} {:instruction integer_pop} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_max integer_fromfloat float_sub in2 integer_mod integer_pop in2 integer_dup_times integer_pop float_max integer_fromfloat float_dup_times float_dup_items float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2875.5098977000002
Median total errors in population: 1515.0
Error averages by case: (110.772323 10.233 143.1314497 3.705 88.3172899 2.712 81.4903453 12.075 142.6888013 10.26 120.05835619999999 11.202 127.4470325 2.62 132.6398585 2.695 101.18551259999998 2.623 98.8970877 3.639 130.7902946 3.708 126.7386687 12.194 62.951500499999995 1.714 140.9499931 3.636 99.4193269 2.654 133.69765460000002 3.636 102.16175779999999 2.676 92.01921669999999 2.723 70.34632760000001 2.649 89.174514 2.657 66.5338901 1.719 144.4799483 12.232 86.3418936 2.663 120.6989531 2.752 140.5839014 2.617)
Error minima by case: (41.5071 8 91.0 3 33.0 2 3.2669 8 8.0138 9 23.9641 10 1.4013 2 48.5633 2 2.6155 2 44.0 3 78.0 3 46.5091 10 6.0 1 21.7721 3 38.6544 2 72.6354 3 8.6512 2 37.0 2 14.0 2 25.1111 2 10.0 1 30.5247 10 31.0 2 67.0 2 3.4075 2)
Average genome size in population (length): 21.576
Average program size in population (points): 22.576
Average percent parens in population: 0.049
Minimum age in population: 55.52863807005633
Maximum age in population: 59.90925338866145
Average age in population: 58.07439439663439
Median age in population: 58.11777046001953
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.631
Total error diversity:				 0.013
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 27620812
--- Timings ---
Current time: 1529615009250 milliseconds
Total Time:         127.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.7 seconds, 46.7%
Fitness Testing:     56.0 seconds, 43.8%
Report:              12.1 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_774} {:instruction -42} {:instruction 98} {:instruction float_inc} {:instruction in1} {:instruction integer_inc} {:instruction -35} {:instruction print_float} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_max} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_max} {:instruction in1} {:instruction float_tan} {:instruction integer_div})
Best program: (tag_integer_774 -42 98 float_inc in1 integer_inc -35 print_float integer_min integer_fromfloat in1 float_max integer_inc integer_pop integer_mult integer_dup_items float_sub float_max in1 float_tan integer_div)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 3089.143974
Median total errors in population: 1515.0
Error averages by case: (119.1558734 10.291 151.1338033 3.824 96.96945029999999 2.829 90.21110420000001 12.125 150.83883360000002 10.331 128.4261926 11.262 135.78914469999998 2.724 140.9150243 2.803 109.72327899999999 2.723 107.5381695 3.74 138.93833550000002 3.82 134.9898113 12.251 71.8077572 1.832 149.12509240000003 3.728 108.01187979999999 2.757 141.93947070000002 3.736 110.72357849999999 2.794 100.6454679 2.843 79.1699556 2.749 97.9366441 2.76 75.37089719999999 1.83 152.6001624 12.307 95.02879420000001 2.763 128.94737139999998 2.879 148.78988089999999 2.717)
Error minima by case: (12.3463 9 46.6948 3 32.0 2 4.55 7 10.7491 10 24.5891 11 2.397 2 56.8281 2 0.7058 2 43.0 3 30.2734 3 25.4059 11 6.0 1 21.0368 3 1.2942 2 79.9001 2 9.4337 2 36.0 2 13.0 2 34.0 2 9.0 1 31.3062 11 25.8731 1 67.0 2 3.5885 1)
Average genome size in population (length): 21.582
Average program size in population (points): 22.582
Average percent parens in population: 0.049
Minimum age in population: 56.96950486299465
Maximum age in population: 61.45790310648226
Average age in population: 59.5878200754181
Median age in population: 59.60817639008656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.635
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.635
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 28160412
--- Timings ---
Current time: 1529615012174 milliseconds
Total Time:         130.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.0 seconds, 46.6%
Fitness Testing:     57.3 seconds, 43.8%
Report:              12.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction in2} {:instruction integer_mod} {:instruction integer_pop} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_max integer_fromfloat float_sub in2 integer_mod integer_pop in2 integer_dup_times integer_pop float_max integer_fromfloat float_dup_times float_dup_items float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 3196.5422619
Median total errors in population: 1515.0
Error averages by case: (123.0547107 10.288 154.85321789999998 3.863 101.80705799999998 2.871 95.16801799999999 12.098 155.43014499999998 10.324 132.2673279 11.243 139.61047399999998 2.745 145.410157 2.857 113.6526672 2.751 112.0867379 3.785 142.7442271 3.861 138.8240012 12.24 75.7901042 1.861 153.66496730000003 3.787 111.8368104 2.792 146.4072322 3.788 115.5592431 2.832 105.4818859 2.887 84.0902357 2.799 101.6112976 2.791 80.5906687 1.889 156.3877923 12.288 99.8473504 2.815 132.651351 2.92 152.58958120000003 2.75)
Error minima by case: (44.265 10 90.0 2 33.0 2 3.606 9 2.8874 9 24.7122 9 1.4013 2 53.6898 2 1.5289 2 44.0 3 77.0 2 46.6748 11 5.0 1 26.8985 2 38.6544 2 77.7618 3 6.253 2 37.0 2 14.0 2 11.1594 2 10.0 1 30.0552 9 26.2652 2 66.0 2 3.4075 2)
Average genome size in population (length): 21.394
Average program size in population (points): 22.394
Average percent parens in population: 0.049
Minimum age in population: 58.41590677080967
Maximum age in population: 63.2193470743232
Average age in population: 61.06479190050296
Median age in population: 61.10915337195229
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.01
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 28695262
--- Timings ---
Current time: 1529615015365 milliseconds
Total Time:         134.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.4 seconds, 46.6%
Fitness Testing:     58.8 seconds, 43.9%
Report:              12.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction float_frominteger} {:instruction float_sub} {:instruction -73} {:instruction tag_float_553} {:instruction float_mod} {:instruction float_mod} {:instruction integer_dup_times} {:instruction in1} {:instruction integer_inc} {:instruction integer_swap} {:instruction print_float} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_shove in1 integer_yankdup float_sin float_frominteger float_sub -73 tag_float_553 float_mod float_mod integer_dup_times in1 integer_inc integer_swap print_float integer_swap integer_fromfloat)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 3111.4414613
Median total errors in population: 1515.0
Error averages by case: (120.3667792 10.307 153.26490239999998 3.847 97.2051719 2.839 89.6941316 12.142 149.8048355 10.344 130.2807509 11.289 137.50614769999999 2.75 141.11070120000002 2.823 111.6034782 2.757 107.8517193 3.756 141.0184775 3.844 136.63128379999998 12.271 74.00318350000002 1.851 148.55173019999998 3.754 109.8591877 2.786 142.25624789999998 3.744 110.70243450000001 2.805 100.8226559 2.857 78.94210040000002 2.764 99.7767015 2.781 74.5319565 1.854 154.36852580000001 12.342 94.7178857 2.786 131.1684582 2.902 150.45601430000002 2.751)
Error minima by case: (43.5791 9 91.0 3 32.0 2 1.4392 9 22.1999 9 24.5891 11 2.4013 2 78.777 2 2.4298 2 43.0 3 78.0 3 47.5563 11 6.0 1 51.9858 3 19.3966 2 80.0 2 8.223 2 36.0 2 13.0 2 5.1026 2 9.0 1 29.1726 11 1.178 1 67.0 2 1.6377 1)
Average genome size in population (length): 21.722
Average program size in population (points): 22.722
Average percent parens in population: 0.048
Minimum age in population: 60.21036522991562
Maximum age in population: 64.62397765753258
Average age in population: 62.60295931361463
Median age in population: 62.63856028446025
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.634
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.634
Total error diversity:				 0.019
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 29238387
--- Timings ---
Current time: 1529615018471 milliseconds
Total Time:         137.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.9 seconds, 46.6%
Fitness Testing:     60.1 seconds, 43.9%
Report:              13.0 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction integer_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_add} {:instruction float_rot} {:instruction integer_min} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_swap} {:instruction integer_shove} {:instruction float_yankdup} {:instruction float_dup} {:instruction float_stackdepth} {:instruction float_tan} {:instruction integer_sub} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_max} {:instruction float_cos} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction integer_swap} {:instruction float_inc})
Best program: (float_yank integer_inc print_float integer_stackdepth float_dec integer_dec integer_mult integer_add float_rot integer_min float_dec float_dup_items integer_swap integer_shove float_yankdup float_dup float_stackdepth float_tan integer_sub integer_yankdup integer_dec integer_max float_cos integer_mult in1 print_float integer_swap float_inc)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2801.7655658999997
Median total errors in population: 1515.0
Error averages by case: (107.9383463 10.254 140.9700844 3.678 85.2805144 2.678 78.620606 12.13 140.05725089999999 10.293 117.3972613 11.234 124.97920389999999 2.604 128.8654843 2.662 98.5508465 2.603 95.004496 3.608 128.6488202 3.674 123.9824059 12.223 60.7678618 1.68 137.2541104 3.607 96.7709632 2.631 129.8787003 3.607 99.3954259 2.653 89.0464791 2.69 66.4697242 2.624 86.4604608 2.63 62.6437385 1.694 141.9347006 12.279 82.51661929999999 2.636 118.43423920000001 2.723 138.2012225 2.601)
Error minima by case: (13.3463 9 45.6948 2 18.4856 2 3.606 9 9.7491 10 25.7387 10 1.4013 2 20.0 1 2.6155 2 43.0 2 29.2734 2 25.4059 11 5.0 1 11.0 2 38.6544 2 19.0 2 10.4259 2 28.5209 2 13.0 2 33.0 2 9.0 1 32.2994 11 26.8731 1 66.0 2 3.4075 1)
Average genome size in population (length): 21.437
Average program size in population (points): 22.437
Average percent parens in population: 0.049
Minimum age in population: 61.48935312998674
Maximum age in population: 66.2083564074128
Average age in population: 64.09029973452378
Median age in population: 64.15808070454989
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.618
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.618
Total error diversity:				 0.017
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 29774412
--- Timings ---
Current time: 1529615021445 milliseconds
Total Time:         140.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.3 seconds, 46.6%
Fitness Testing:     61.4 seconds, 43.9%
Report:              13.2 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_yank} {:instruction tagged_914} {:instruction float_min} {:instruction in1} {:instruction in2} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float} {:instruction float_dup_times})
Best program: (float_shove integer_shove float_dec float_yank tagged_914 float_min in1 in2 in1 in2 -35 print_float float_dup_times)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 2517.9713087
Median total errors in population: 1515.0
Error averages by case: (96.5316774 10.186 129.4561338 3.558 73.7464871 2.567 66.77526819999999 12.05 129.1143125 10.203 105.93644430000002 11.155 113.41050999999999 2.49 118.98101630000001 2.552 86.7623533 2.492 84.7409967 3.503 116.9054241 3.559 112.73953529999999 12.148 47.998144399999994 1.57 127.3892441 3.504 85.07476980000001 2.521 120.0791154 3.503 87.75474610000002 2.537 77.49404009999998 2.577 55.5695759 2.516 74.75062670000001 2.526 51.6393202 1.571 130.7278847 12.177 71.85323870000002 2.524 106.7062415 2.605 126.7522021 2.488)
Error minima by case: (43.9519 9 91.0 3 32.0 2 3.606 9 80.2509 10 23.75 8 1.3884 2 79.0 2 2.5957 2 43.0 3 78.0 3 47.8922 10 6.0 1 88.0 3 38.6426 2 80.0 2 8.6569 2 36.0 2 13.0 2 34.0 2 9.0 1 30.3945 11 30.0 1 67.0 2 3.3968 1)
Average genome size in population (length): 21.126
Average program size in population (points): 22.126
Average percent parens in population: 0.049
Minimum age in population: 62.89026375751382
Maximum age in population: 67.59029318644059
Average age in population: 65.60108627112022
Median age in population: 65.59454249158483
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.584
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.584
Total error diversity:				 0.013
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 30302612
--- Timings ---
Current time: 1529615024522 milliseconds
Total Time:         143.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.8 seconds, 46.7%
Fitness Testing:     62.8 seconds, 43.8%
Report:              13.5 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float} {:instruction float_max} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_max} {:instruction integer_min} {:instruction float_shove} {:instruction integer_shove} {:instruction integer_min})
Best program: (float_shove float_inc in1 in2 -35 print_float float_max integer_fromfloat in1 float_max integer_min float_shove integer_shove integer_min)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 3031.4794908
Median total errors in population: 1515.0
Error averages by case: (116.37795630000002 10.293 149.5462102 3.825 95.1960212 2.831 88.33432800000001 12.137 148.97406890000002 10.335 125.60719189999999 11.261 132.9813122 2.736 138.56555799999995 2.812 106.97451090000001 2.738 105.32152980000001 3.742 137.27616240000003 3.828 132.1812474 12.243 69.71448379999998 1.832 146.59963810000005 3.741 105.3851156 2.773 139.7564186 3.743 108.79577199999999 2.798 98.83841299999999 2.848 76.54174929999999 2.764 95.33470080000001 2.772 72.9092894 1.845 149.78026189999997 12.303 92.41443239999998 2.782 127.46702819999999 2.885 146.00209049999998 2.737)
Error minima by case: (13.3463 9 45.6948 3 16.4856 2 3.6528 9 3.8874 9 23.75 8 1.3884 2 52.6898 2 1.5289 2 43.0 3 29.2734 3 23.4059 10 6.0 1 22.0368 3 6.1652 2 76.7618 2 6.253 2 26.5209 2 7.7522 2 11.1594 2 9.0 1 30.0552 9 24.3839 1 67.0 2 3.3968 1)
Average genome size in population (length): 20.822
Average program size in population (points): 21.822
Average percent parens in population: 0.050
Minimum age in population: 64.7438593609379
Maximum age in population: 68.98378046868311
Average age in population: 67.07343071122133
Median age in population: 67.11595886149291
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.623
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.623
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 30823237
--- Timings ---
Current time: 1529615027690 milliseconds
Total Time:         146.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.3 seconds, 46.7%
Fitness Testing:     64.1 seconds, 43.8%
Report:              13.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction tag_float_205} {:instruction integer_max} {:instruction float_inc} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_rot} {:instruction float_rot} {:instruction integer_min} {:instruction tag_integer_89} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_dup tag_float_205 integer_max float_inc float_cos integer_fromfloat integer_stackdepth integer_min integer_dec integer_mult integer_rot float_rot integer_min tag_integer_89 integer_dup_times float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 3305.2300009
Median total errors in population: 1515.0
Error averages by case: (127.6020464 10.333 159.17434379999997 3.928 105.59389809999999 2.929 99.10496499999999 12.157 159.20103679999997 10.386 136.8357173 11.299 144.23659279999998 2.819 149.3505192 2.906 118.45077309999999 2.82 116.2875284 3.83 147.0712717 3.925 143.25695960000002 12.293 80.70684089999999 1.928 157.4921373 3.829 116.791428 2.856 150.3937824 3.828 119.3618623 2.893 109.26766380000001 2.949 88.21939569999999 2.853 106.7815313 2.855 84.43603860000002 1.947 160.7669993 12.358 103.9293763 2.869 137.1898063 2.983 157.1384865 2.816)
Error minima by case: (13.3463 9 45.6948 3 18.4856 2 3.926 9 9.7491 10 24.5891 10 2.8203 2 57.8281 2 2.6761 2 43.0 3 29.2734 3 25.4059 10 6.0 1 22.0368 3 39.8246 2 80.0 2 8.223 2 28.5209 2 13.0 2 34.0 2 9.0 1 29.1726 11 26.8731 1 67.0 2 3.7402 1)
Average genome size in population (length): 20.78
Average program size in population (points): 21.78
Average percent parens in population: 0.050
Minimum age in population: 65.90324960321959
Maximum age in population: 70.36777363989228
Average age in population: 68.54038671734709
Median age in population: 68.57473329098629
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.642
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.642
Total error diversity:				 0.015
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 31342812
--- Timings ---
Current time: 1529615030722 milliseconds
Total Time:         149.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.7 seconds, 46.7%
Fitness Testing:     65.4 seconds, 43.8%
Report:              14.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_yank} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction float_rot} {:instruction integer_min} {:instruction tag_integer_89} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float})
Best program: (float_shove integer_shove float_yank float_dup integer_yank float_sub float_rot integer_min tag_integer_89 float_dup_items in1 in2 -35 print_float)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 3137.1893534
Median total errors in population: 1515.0
Error averages by case: (121.0587167 10.295 153.0402902 3.855 98.86503460000002 2.858 92.1255598 12.107 152.7634101 10.328 130.23250349999998 11.257 137.5363986 2.754 142.84791129999996 2.842 111.58563190000001 2.755 109.5023335 3.772 140.8428359 3.855 136.8372036 12.248 73.795949 1.86 151.05857939999999 3.772 109.91354089999999 2.794 143.8958136 3.772 112.54372190000001 2.822 102.52279829999999 2.874 81.18370420000001 2.786 99.8392795 2.792 77.37326190000002 1.874 154.367836 12.297 97.02550500000001 2.806 130.8731254 2.91 150.5244086 2.749)
Error minima by case: (42.879 10 91.0 3 33.0 2 3.606 8 80.2509 9 23.9641 10 1.4013 2 80.0 2 2.6155 2 44.0 3 78.0 3 46.8194 10 6.0 1 89.0 3 38.6544 2 81.0 3 8.6512 2 37.0 2 14.0 2 34.0 2 10.0 1 30.5247 10 31.0 2 67.0 2 3.4075 2)
Average genome size in population (length): 20.55
Average program size in population (points): 21.55
Average percent parens in population: 0.050
Minimum age in population: 67.76208035017777
Maximum age in population: 71.93893571156966
Average age in population: 69.99960607464428
Median age in population: 70.05284469927847
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.627
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.627
Total error diversity:				 0.012
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 31856562
--- Timings ---
Current time: 1529615033811 milliseconds
Total Time:         152.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.3 seconds, 46.8%
Fitness Testing:     66.7 seconds, 43.7%
Report:              14.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction integer_shove} {:instruction float_rot} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_add} {:instruction float_rot} {:instruction integer_min} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_max integer_fromfloat float_yank integer_shove float_rot float_max integer_fromfloat integer_max integer_yank integer_dec integer_mult integer_add float_rot integer_min integer_swap integer_dec float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 3126.1187807
Median total errors in population: 1515.0
Error averages by case: (121.1700776 10.298 153.0472447 3.832 97.96016250000001 2.83 91.24399030000001 12.116 151.7843125 10.329 130.4145656 11.264 137.7638742 2.736 141.7805061 2.817 111.7480238 2.737 108.3476709 3.75 140.86485009999998 3.829 136.9794415 12.256 73.7986815 1.83 150.0409175 3.747 109.9271331 2.77 142.81444589999998 3.75 111.7114361 2.792 101.6354649 2.847 80.1739739 2.77 99.7303746 2.771 76.4087711 1.856 154.57078289999998 12.311 96.0085687 2.785 130.7827323 2.879 150.76977839999998 2.739)
Error minima by case: (44.6428 10 91.0 3 33.0 2 2.926 9 1.8874 10 31.3443 10 3.5686 2 54.6898 2 2.2505 2 44.0 3 78.0 3 50.8546 10 6.0 1 27.8985 3 38.8246 2 78.7618 3 8.223 2 37.0 2 14.0 2 18.9846 2 10.0 1 29.1726 10 25.2652 2 67.0 2 4.5238 2)
Average genome size in population (length): 20.26
Average program size in population (points): 21.26
Average percent parens in population: 0.051
Minimum age in population: 69.20916412961333
Maximum age in population: 73.3747928288613
Average age in population: 71.47119157380126
Median age in population: 71.49610656107188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.601
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.601
Total error diversity:				 0.013
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 32363062
--- Timings ---
Current time: 1529615036841 milliseconds
Total Time:         155.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.8 seconds, 46.8%
Fitness Testing:     68.0 seconds, 43.7%
Report:              14.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_min} {:instruction float_max} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_add} {:instruction float_rot} {:instruction float_shove} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_shove} {:instruction float_dec} {:instruction tagged_631} {:instruction integer_mult} {:instruction in1} {:instruction float_yankdup} {:instruction float_dup} {:instruction float_stackdepth} {:instruction float_tan} {:instruction integer_dup_times} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_max} {:instruction float_cos} {:instruction integer_yankdup} {:instruction in1} {:instruction print_float})
Best program: (float_max integer_min float_max integer_dec integer_mult integer_add float_rot float_shove float_max integer_fromfloat float_dup_times integer_rot float_flush integer_shove float_dec tagged_631 integer_mult in1 float_yankdup float_dup float_stackdepth float_tan integer_dup_times integer_yankdup integer_dec integer_max float_cos integer_yankdup in1 print_float)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 3232.8246858
Median total errors in population: 1515.0
Error averages by case: (124.9015467 10.311 156.6253865 3.898 102.8323113 2.904 96.1372607 12.108 156.2618865 10.338 134.1120783 11.268 141.4659256 2.788 146.3042921 2.883 115.56751630000001 2.789 113.09771040000001 3.812 144.5093536 3.897 140.6342123 12.26 77.8108783 1.899 154.5057515 3.811 113.7913086 2.833 147.3241224 3.811 116.5260871 2.858 106.49211030000001 2.917 85.0927109 2.825 103.66554950000001 2.83 81.3602543 1.915 158.1757289 12.312 100.81661659999999 2.843 134.53817010000003 2.96 154.41991700000003 2.786)
Error minima by case: (14.3463 10 44.6948 2 33.0 2 3.606 9 6.0101 6 24.0786 11 1.4013 2 50.5671 2 2.6155 2 44.0 3 28.2734 2 27.4059 10 5.0 1 23.0368 2 38.6544 2 74.6391 3 9.5484 2 37.0 2 14.0 2 23.1073 2 10.0 1 31.1685 10 27.8731 2 66.0 2 3.4075 2)
Average genome size in population (length): 19.864
Average program size in population (points): 20.864
Average percent parens in population: 0.052
Minimum age in population: 70.20916412961333
Maximum age in population: 75.10905264511052
Average age in population: 72.94616872448978
Median age in population: 73.00303062464197
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.584
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.584
Total error diversity:				 0.013
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 32859662
--- Timings ---
Current time: 1529615039867 milliseconds
Total Time:         158.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.2 seconds, 46.8%
Fitness Testing:     69.3 seconds, 43.7%
Report:              14.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_shove} {:instruction integer_div} {:instruction float_shove} {:instruction float_shove} {:instruction in1} {:instruction integer_add} {:instruction float_div} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float} {:instruction float_min} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction -14} {:instruction float_cos} {:instruction float_max} {:instruction integer_dec} {:instruction float_inc} {:instruction float_tan} {:instruction integer_pop} {:instruction tag_integer_390})
Best program: (float_shove integer_shove float_shove integer_div float_shove float_shove in1 integer_add float_div float_inc in1 in2 -35 print_float float_min integer_fromfloat in1 integer_add integer_fromfloat -14 float_cos float_max integer_dec float_inc float_tan integer_pop tag_integer_390)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2670.1228606000004
Median total errors in population: 1515.0
Error averages by case: (102.29113820000002 10.203 135.71491740000002 3.599 80.6521959 2.59 73.7729262 12.082 135.36963649999998 10.229 111.8011382 11.184 119.41194099999998 2.517 124.229174 2.583 92.78636919999998 2.519 90.1571897 3.527 123.29923189999998 3.597 118.4581383 12.171 54.9455855 1.592 132.64500890000002 3.535 90.95644709999999 2.546 125.2724621 3.527 94.72184200000001 2.566 84.4120546 2.6 61.4246211 2.54 80.5444455 2.546 57.5852973 1.604 136.5271383 12.21 77.55688440000002 2.563 113.07512400000002 2.632 132.7299533 2.52)
Error minima by case: (27.6925 10 90.0 2 33.0 2 3.606 9 1.8874 10 25.7387 10 1.4013 2 54.6898 2 2.6155 2 44.0 3 57.5468 2 48.5941 12 5.0 1 27.8985 2 38.6544 2 78.7618 3 10.4259 2 37.0 2 14.0 2 18.9846 2 10.0 1 32.2994 10 25.2652 2 66.0 2 3.4075 2)
Average genome size in population (length): 19.478
Average program size in population (points): 20.478
Average percent parens in population: 0.054
Minimum age in population: 71.20916412961333
Maximum age in population: 76.3916572424302
Average age in population: 74.47319095903099
Median age in population: 74.5360694801501
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.585
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.585
Total error diversity:				 0.012
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 33346612
--- Timings ---
Current time: 1529615042836 milliseconds
Total Time:         161.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.6 seconds, 46.8%
Fitness Testing:     70.6 seconds, 43.7%
Report:              15.2 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction print_float} {:instruction float_dup} {:instruction integer_dec} {:instruction float_frominteger} {:instruction float_mult} {:instruction integer_dup})
Best program: (float_shove float_sin float_dec in1 in2 -35 print_float float_dup integer_dec float_frominteger float_mult integer_dup)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 2993.2816456
Median total errors in population: 1515.0
Error averages by case: (115.42930309999998 10.234 147.4995877 3.771 93.020549 2.775 86.3200142 12.033 147.32558899999998 10.253 124.7239158 11.191 132.1327561 2.663 137.2121165 2.762 105.9536934 2.664 103.5646361 3.697 135.25383680000002 3.773 131.3341432 12.182 67.7540273 1.78 145.5446128 3.698 104.1926514 2.711 138.216177 3.691 106.9106298 2.73 96.7307765 2.782 75.2118291 2.711 93.980694 2.711 71.4088255 1.785 149.0523618 12.213 91.1556355 2.719 125.1054878 2.831 145.2257962 2.662)
Error minima by case: (43.4462 9 91.0 3 32.0 2 2.8285 9 79.3069 9 25.4899 10 1.4013 2 79.0 2 1.6814 2 43.0 3 78.0 3 46.948 9 6.0 1 88.0 3 37.6688 2 80.0 2 10.4184 2 36.0 2 13.0 2 34.0 2 9.0 1 31.7716 11 30.0 1 67.0 2 2.9685 1)
Average genome size in population (length): 19.387
Average program size in population (points): 20.387
Average percent parens in population: 0.054
Minimum age in population: 72.20916412961333
Maximum age in population: 77.8249968353846
Average age in population: 75.96697548763694
Median age in population: 75.98185434941556
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.593
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.593
Total error diversity:				 0.009
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 33831287
--- Timings ---
Current time: 1529615045836 milliseconds
Total Time:         164.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.0 seconds, 46.8%
Fitness Testing:     71.9 seconds, 43.7%
Report:              15.5 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction integer_sub} {:instruction float_add} {:instruction float_flush} {:instruction integer_dup_times} {:instruction in1} {:instruction float_div} {:instruction print_float} {:instruction float_min} {:instruction integer_inc} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction float_max} {:instruction integer_min} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_shove integer_sub float_add float_flush integer_dup_times in1 float_div print_float float_min integer_inc float_stackdepth integer_fromfloat integer_pop float_max integer_min print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2969.9694902
Median total errors in population: 1515.0
Error averages by case: (114.48266439999999 10.227 146.5840944 3.734 92.11697840000001 2.736 85.38383160000001 12.039 146.4204341 10.247 123.8212499 11.186 131.3572959 2.634 136.2935264 2.727 105.0975036 2.638 102.61448779999999 3.666 134.32966110000004 3.735 130.4067383 12.181 66.7556066 1.737 144.6381561 3.666 103.3297953 2.681 137.3034045 3.663 106.0505088 2.694 95.8386382 2.744 74.2278654 2.676 93.0861529 2.679 70.41365319999998 1.748 148.2026055 12.209 90.18963360000001 2.684 124.1700369 2.79 144.4969673 2.637)
Error minima by case: (31.0107 9 91.0 3 33.0 2 5.606 10 71.1832 10 18.5112 11 3.4013 2 80.0 2 4.6155 2 44.0 3 78.0 3 22.1442 11 6.0 1 89.0 3 40.6544 2 81.0 3 8.4259 2 37.0 2 14.0 2 34.0 2 10.0 1 30.2994 11 31.0 2 67.0 2 5.4075 2)
Average genome size in population (length): 19.3
Average program size in population (points): 20.3
Average percent parens in population: 0.054
Minimum age in population: 74.86664560343439
Maximum age in population: 79.496872930337
Average age in population: 77.42829301499528
Median age in population: 77.49454714193989
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.581
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.581
Total error diversity:				 0.01
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 34313787
--- Timings ---
Current time: 1529615049032 milliseconds
Total Time:         167.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        78.5 seconds, 46.8%
Fitness Testing:     73.2 seconds, 43.7%
Report:              15.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction tagged_431} {:instruction integer_stackdepth} {:instruction -91} {:instruction -73} {:instruction tag_float_553} {:instruction float_mod} {:instruction float_mod} {:instruction float_inc} {:instruction in1} {:instruction integer_inc} {:instruction integer_add} {:instruction print_float} {:instruction integer_pop})
Best program: (in2 integer_fromfloat float_mod integer_fromfloat tagged_431 integer_stackdepth -91 -73 tag_float_553 float_mod float_mod float_inc in1 integer_inc integer_add print_float integer_pop)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 3025.0794703
Median total errors in population: 1515.0
Error averages by case: (116.3896302 10.238 149.26575820000002 3.757 94.9296069 2.76 88.29628000000001 12.053 149.1628763 10.268 125.69626339999999 11.197 133.12892560000003 2.657 138.0724013 2.748 106.9514063 2.657 104.42489690000001 3.685 137.06582559999998 3.76 132.28998439999998 12.189 69.6969093 1.765 146.43271589999998 3.687 105.154255 2.699 139.0575773 3.684 108.84777679999999 2.719 98.6452386 2.772 76.16787079999999 2.7 94.91923519999999 2.703 72.38398450000001 1.774 150.0189095 12.227 92.09596960000002 2.707 126.8844159 2.813 146.2247568 2.657)
Error minima by case: (44.3569 9 91.0 3 32.0 2 5.1683 9 80.9323 10 23.75 8 1.4323 2 79.0 2 2.1337 2 43.0 3 78.0 3 48.5501 10 6.0 1 88.0 3 38.7684 2 80.0 2 8.1199 2 36.0 2 13.0 2 34.0 2 9.0 1 30.3945 11 30.0 1 67.0 2 3.6045 1)
Average genome size in population (length): 18.792
Average program size in population (points): 19.792
Average percent parens in population: 0.055
Minimum age in population: 75.86664560343439
Maximum age in population: 80.87438076198788
Average age in population: 78.91306643766838
Median age in population: 78.99564952086276
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.587
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.587
Total error diversity:				 0.011
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 34783637
--- Timings ---
Current time: 1529615051942 milliseconds
Total Time:         170.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.8 seconds, 46.8%
Fitness Testing:     74.5 seconds, 43.7%
Report:              16.1 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction tagged_313} {:instruction -73} {:instruction tag_float_553} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_pop} {:instruction tag_integer_89} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_shove float_dec float_add float_inc float_inc float_dup tagged_313 -73 tag_float_553 float_dup integer_yankdup float_pop tag_integer_89 float_dup_items float_frominteger in1 -73 integer_flush print_float integer_flush)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2713.0681112
Median total errors in population: 1515.0
Error averages by case: (104.196792 10.214 136.8386122 3.648 81.8701094 2.654 74.76795640000002 12.083 136.1753892 10.24 113.6606157 11.193 121.40213829999999 2.577 126.20200209999999 2.631 94.7851383 2.579 92.38834169999998 3.584 124.4065053 3.647 120.2827323 12.178 56.13220369999999 1.655 134.57304570000002 3.577 93.036977 2.608 127.34036219999999 3.577 95.7018419 2.63 85.59057569999999 2.668 63.526103899999995 2.606 82.6944507 2.608 59.7007284 1.665 138.2697371 12.226 79.58201129999999 2.605 114.3386024 2.697 134.67413829999998 2.581)
Error minima by case: (1.0 1 45.3052 3 33.0 2 3.606 8 1.0 1 23.7387 10 2.4013 2 22.1719 2 3.6155 2 44.0 3 48.7266 3 1.0 1 6.0 1 27.8985 2 35.3456 2 0.0999 3 9.4259 2 37.0 2 13.2414 2 10.8464 2 0.5795 1 30.2994 10 4.1269 2 18.7464 2 4.4075 2)
Average genome size in population (length): 18.717
Average program size in population (points): 19.717
Average percent parens in population: 0.055
Minimum age in population: 77.87545916817506
Maximum age in population: 82.36448539746279
Average age in population: 80.41439152530371
Median age in population: 80.47537732895191
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.59
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.59
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 35251637
--- Timings ---
Current time: 1529615054978 milliseconds
Total Time:         173.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.3 seconds, 46.8%
Fitness Testing:     75.8 seconds, 43.6%
Report:              16.4 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 53089.0
Test mean error for best: 26.54450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 13.346267752  
Correct output: -136.6947699657 | Program output: -45.6947699657
Correct output: -54.5144108964 | Program output: -87.5144108964
Correct output: 4.606026634    | Program output: -21.393973366 
Correct output: 81.2509245836  | Program output: -9.7490754164 
Correct output: -24.738745848  | Program output: 42.261254152  
Correct output: 2.4013255826   | Program output: 77.4013255826 
Correct output: 137.8280591986 | Program output: 57.8280591986 
Correct output: 3.6154712735   | Program output: 50.6154712735 
Correct output: 142.8319993034 | Program output: 98.8319993034 
Correct output: -107.2733849841 | Program output: -29.2733849841
Correct output: -47.5940551501 | Program output: 26.4059448499 
Correct output: -46.861821901  | Program output: -40.861821901 
Correct output: 111.0368178561 | Program output: 22.0368178561 
Correct output: 39.6543819914  | Program output: 84.6543819914 
Correct output: 161.9001002246 | Program output: 80.9001002246 
Correct output: -9.4259382457  | Program output: -57.4259382457
Correct output: -44.4790725783 | Program output: -81.4790725783
Correct output: 41.2414035608  | Program output: 27.2414035608 
Correct output: 64.1536429928  | Program output: 98.1536429928 
Correct output: 20.5795048056  | Program output: 10.5795048056 
Correct output: -31.2994231433 | Program output: 61.7005768567 
Correct output: 57.8730661251  | Program output: 26.8730661251 
Correct output: -152.7464299632 | Program output: -85.7464299632
Correct output: 4.4074827986   | Program output: 93.4074827986 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction float_rot} {:instruction integer_mod} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_mod} {:instruction float_rot} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction -73} {:instruction integer_flush} {:instruction print_float})
Best program: (integer_rot float_rot integer_mod integer_stackdepth integer_yank integer_dec integer_mult float_mod float_rot integer_min float_dup_times float_dup_items float_frominteger in1 -73 integer_flush print_float)
Errors: [57.0 10 91.0 3 33.0 2 26.0 12 91.0 10 67.0 11 75.0 2 80.0 2 47.0 2 44.0 3 78.0 3 74.0 12 6.0 1 89.0 3 45.0 2 81.0 3 48.0 2 37.0 2 14.0 2 34.0 2 10.0 1 93.0 12 31.0 2 67.0 2 89.0 2]
Total: 1515.0
Mean: 30.3
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 3183.5324177
Median total errors in population: 1515.0
Error averages by case: (122.97135579999998 10.292 154.6503969 3.842 100.6862165 2.843 94.1839039 12.106 154.6455488 10.326 132.24355910000003 11.249 139.7026992 2.738 144.48312589999998 2.83 113.69191339999999 2.737 111.0441299 3.763 142.5439755 3.841 138.76829619999998 12.252 75.5955639 1.843 152.8173347 3.761 111.86995230000001 2.777 145.436198 3.762 114.60787189999999 2.803 104.3921812 2.855 83.0725393 2.777 101.6754515 2.777 79.3358774 1.857 156.40300150000002 12.295 98.882171 2.792 132.3704485 2.894 152.7107054 2.736)
Error minima by case: (18.3558 10 91.0 3 29.2165 2 26.0 11 91.0 10 0.5591 9 27.6992 2 80.0 2 28.9134 2 44.0 3 78.0 3 22.2962 11 6.0 1 89.0 3 45.0 2 81.0 3 15.8719 2 19.1812 2 14.0 2 34.0 2 10.0 1 6.0015 10 31.0 2 67.0 2 29.7054 2)
Average genome size in population (length): 18.713
Average program size in population (points): 19.713
Average percent parens in population: 0.055
Minimum age in population: 79.52641453656643
Maximum age in population: 83.97998977236763
Average age in population: 81.9281959573517
Median age in population: 81.96868720580551
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.606
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.606
Total error diversity:				 0.008
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 35719512
--- Timings ---
Current time: 1529615058032 milliseconds
Total Time:         176.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        82.9 seconds, 46.9%
Fitness Testing:     77.1 seconds, 43.6%
Report:              16.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 60614.622299999966
Test mean error for best: 30.30731
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 8.73133876    
Correct output: -136.6947699657 | Program output: -0.6104600685 
Correct output: -54.5144108964 | Program output: -55.5144108964
Correct output: 4.606026634    | Program output: -17.787946732 
Correct output: 81.2509245836  | Program output: -7.4907541643 
Correct output: -24.738745848  | Program output: 16.5225083041 
Correct output: 2.4013255826   | Program output: 1.4013255826  
Correct output: 137.8280591986 | Program output: 21.1719408014 
Correct output: 3.6154712735   | Program output: 2.6154712735  
Correct output: 142.8319993034 | Program output: 43.0          
Correct output: -107.2733849841 | Program output: -20.4532300317
Correct output: -47.5940551501 | Program output: 4.2178345497  
Correct output: -46.861821901  | Program output: -7.0          
Correct output: 111.0368178561 | Program output: 21.8895464316 
Correct output: 39.6543819914  | Program output: 38.6543819914 
Correct output: 161.9001002246 | Program output: 80.0          
Correct output: -9.4259382457  | Program output: -10.4259382457
Correct output: -44.4790725783 | Program output: -45.4790725783
Correct output: 41.2414035608  | Program output: 13.0          
Correct output: 64.1536429928  | Program output: 63.1536429928 
Correct output: 20.5795048056  | Program output: 9.0           
Correct output: -31.2994231433 | Program output: 29.4011537133 
Correct output: 57.8730661251  | Program output: 3.1269338749  
Correct output: -152.7464299632 | Program output: -68.0         
Correct output: 4.4074827986   | Program output: 3.4074827986  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_sub} {:instruction float_div} {:instruction in2} {:instruction integer_dec} {:instruction float_frominteger} {:instruction in1} {:instruction float_mod} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_dup float_yank float_dup integer_yank float_sub integer_sub float_div in2 integer_dec float_frominteger in1 float_mod integer_flush print_float integer_flush)
Errors: [52.3851 10 136.0843 10 1.0 1 22.394 10 88.7417 10 41.2613 12 1.0 1 116.6561 12 1.0 1 99.832 11 86.8202 11 51.8119 12 39.8618 10 89.1473 12 1.0 1 81.9001 12 1.0 2 1.0 1 28.2414 10 1.0 1 11.5795 11 60.7006 10 54.7461 12 84.7464 13 1.0 1]
Total: 1351.9098000000001
Mean: 27.038197
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 3280.4191814
Median total errors in population: 1515.0
Error averages by case: (126.7055343 10.291 158.24334180000002 3.933 104.6684998 2.932 98.11287209999999 12.07 158.2388456 10.327 135.97060209999998 11.24 143.38194559999997 2.805 148.2190313 2.929 117.51396460000001 2.806 115.1312818 3.849 146.1498876 3.935 142.4048653 12.231 79.7102338 1.941 156.4375646 3.852 115.8118347 2.86 149.15496169999997 3.846 118.4374526 2.88 108.34436949999998 2.942 87.11265249999998 2.866 105.74607419999998 2.858 83.34221019999998 1.954 160.0014492 12.268 102.81958 2.876 136.1341772 3.005 156.3259493 2.804)
Error minima by case: (14.3463 9 44.6948 3 1.0 1 5.6057 9 8.7491 9 24.0786 10 1.0 1 22.1719 2 1.0 1 43.0 3 28.2734 3 20.8843 10 6.0 1 23.0368 3 1.0 1 0.0999 2 1.0 2 1.0 1 13.0 2 1.0 1 0.5795 1 31.1685 10 4.1269 1 18.7464 2 1.0 1)
Average genome size in population (length): 18.617
Average program size in population (points): 19.617
Average percent parens in population: 0.056
Minimum age in population: 80.63920277290441
Maximum age in population: 85.29705547444514
Average age in population: 83.40910830514808
Median age in population: 83.45492626827912
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.586
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.586
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 36184987
--- Timings ---
Current time: 1529615060992 milliseconds
Total Time:         179.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.3 seconds, 46.9%
Fitness Testing:     78.3 seconds, 43.6%
Report:              16.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 60614.622299999966
Test mean error for best: 30.30731
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 8.73133876    
Correct output: -136.6947699657 | Program output: -0.6104600685 
Correct output: -54.5144108964 | Program output: -55.5144108964
Correct output: 4.606026634    | Program output: -17.787946732 
Correct output: 81.2509245836  | Program output: -7.4907541643 
Correct output: -24.738745848  | Program output: 16.5225083041 
Correct output: 2.4013255826   | Program output: 1.4013255826  
Correct output: 137.8280591986 | Program output: 21.1719408014 
Correct output: 3.6154712735   | Program output: 2.6154712735  
Correct output: 142.8319993034 | Program output: 43.0          
Correct output: -107.2733849841 | Program output: -20.4532300317
Correct output: -47.5940551501 | Program output: 4.2178345497  
Correct output: -46.861821901  | Program output: -7.0          
Correct output: 111.0368178561 | Program output: 21.8895464316 
Correct output: 39.6543819914  | Program output: 38.6543819914 
Correct output: 161.9001002246 | Program output: 80.0          
Correct output: -9.4259382457  | Program output: -10.4259382457
Correct output: -44.4790725783 | Program output: -45.4790725783
Correct output: 41.2414035608  | Program output: 13.0          
Correct output: 64.1536429928  | Program output: 63.1536429928 
Correct output: 20.5795048056  | Program output: 9.0           
Correct output: -31.2994231433 | Program output: 29.4011537133 
Correct output: 57.8730661251  | Program output: 3.1269338749  
Correct output: -152.7464299632 | Program output: -68.0         
Correct output: 4.4074827986   | Program output: 3.4074827986  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_dup} {:instruction integer_flush} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_sub} {:instruction float_div} {:instruction in2} {:instruction integer_dec} {:instruction float_frominteger} {:instruction in1} {:instruction float_mod} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_dup integer_flush float_dup integer_yank float_sub integer_sub float_div in2 integer_dec float_frominteger in1 float_mod integer_flush print_float integer_flush)
Errors: [52.3851 10 136.0843 10 1.0 1 22.394 10 88.7417 10 41.2613 12 1.0 1 116.6561 12 1.0 1 99.832 11 86.8202 11 51.8119 12 39.8618 10 89.1473 12 1.0 1 81.9001 12 1.0 2 1.0 1 28.2414 10 1.0 1 11.5795 11 60.7006 10 54.7461 12 84.7464 13 1.0 1]
Total: 1351.9098000000001
Mean: 27.038197
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2550.7908434
Median total errors in population: 1515.0
Error averages by case: (97.5573936 10.211 130.53877409999998 3.59 75.6275005 2.569 68.35770509999999 12.097 130.8264927 10.236 106.9185081 11.191 114.27428660000001 2.498 120.73322579999999 2.582 87.7031005 2.5 86.53875039999998 3.534 117.9053493 3.589 113.70747290000001 12.18 49.1338816 1.597 129.0865727 3.533 85.91682009999998 2.522 121.67274720000002 3.535 89.68214909999999 2.548 79.3836079 2.578 56.82810280000001 2.548 75.550456 2.524 52.71824999999999 1.607 131.68469269999997 12.218 73.50906760000001 2.564 107.68739270000002 2.638 127.5635434 2.496)
Error minima by case: (43.6537 10 91.0 3 1.0 1 4.606 9 6.6539 10 24.5891 11 1.0 1 49.9232 2 1.0 1 44.0 3 78.0 3 47.4628 9 6.0 1 23.132 3 1.0 1 73.9952 3 1.0 2 1.0 1 14.0 2 1.0 1 10.0 1 31.2994 10 30.0318 2 67.0 2 1.0 1)
Average genome size in population (length): 18.459
Average program size in population (points): 19.459
Average percent parens in population: 0.056
Minimum age in population: 81.63920277290441
Maximum age in population: 87.01623523449628
Average age in population: 84.9125433035268
Median age in population: 84.94436019254545
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.573
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.573
Total error diversity:				 0.012
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 36646537
--- Timings ---
Current time: 1529615063869 milliseconds
Total Time:         182.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        85.7 seconds, 46.9%
Fitness Testing:     79.6 seconds, 43.6%
Report:              17.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 60614.622299999966
Test mean error for best: 30.30731
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 8.73133876    
Correct output: -136.6947699657 | Program output: -0.6104600685 
Correct output: -54.5144108964 | Program output: -55.5144108964
Correct output: 4.606026634    | Program output: -17.787946732 
Correct output: 81.2509245836  | Program output: -7.4907541643 
Correct output: -24.738745848  | Program output: 16.5225083041 
Correct output: 2.4013255826   | Program output: 1.4013255826  
Correct output: 137.8280591986 | Program output: 21.1719408014 
Correct output: 3.6154712735   | Program output: 2.6154712735  
Correct output: 142.8319993034 | Program output: 43.0          
Correct output: -107.2733849841 | Program output: -20.4532300317
Correct output: -47.5940551501 | Program output: 4.2178345497  
Correct output: -46.861821901  | Program output: -7.0          
Correct output: 111.0368178561 | Program output: 21.8895464316 
Correct output: 39.6543819914  | Program output: 38.6543819914 
Correct output: 161.9001002246 | Program output: 80.0          
Correct output: -9.4259382457  | Program output: -10.4259382457
Correct output: -44.4790725783 | Program output: -45.4790725783
Correct output: 41.2414035608  | Program output: 13.0          
Correct output: 64.1536429928  | Program output: 63.1536429928 
Correct output: 20.5795048056  | Program output: 9.0           
Correct output: -31.2994231433 | Program output: 29.4011537133 
Correct output: 57.8730661251  | Program output: 3.1269338749  
Correct output: -152.7464299632 | Program output: -68.0         
Correct output: 4.4074827986   | Program output: 3.4074827986  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_sub} {:instruction float_div} {:instruction in2} {:instruction integer_dec} {:instruction float_frominteger} {:instruction in1} {:instruction float_mod} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_dup float_yank float_dup integer_yank float_sub integer_sub float_div in2 integer_dec float_frominteger in1 float_mod integer_flush print_float integer_flush)
Errors: [52.3851 10 136.0843 10 1.0 1 22.394 10 88.7417 10 41.2613 12 1.0 1 116.6561 12 1.0 1 99.832 11 86.8202 11 51.8119 12 39.8618 10 89.1473 12 1.0 1 81.9001 12 1.0 2 1.0 1 28.2414 10 1.0 1 11.5795 11 60.7006 10 54.7461 12 84.7464 13 1.0 1]
Total: 1351.9098000000001
Mean: 27.038197
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 3228.2857056
Median total errors in population: 1515.0
Error averages by case: (124.70886789999999 10.311 157.57572809999994 4.064 102.0074927 2.879 95.97483629999999 12.077 156.2832423000001 10.354 133.4334986 11.298 139.6816972 2.767 147.23344479999992 3.107 114.43111909999999 2.771 114.46845579999994 3.987 144.62679909999997 4.085 140.0378179 12.263 78.50428969999997 2.111 154.59458080000005 4.013 112.7714498 2.811 147.43200689999998 4.009 115.35593460000001 2.866 105.57511729999999 2.897 85.41365899999997 3.01 102.9483065 2.812 81.33956120000005 2.149 157.34580770000002 12.271 101.38966700000005 3.075 134.86095050000006 3.215 152.3193748 2.77)
Error minima by case: (14.3463 10 44.6948 3 1.0 1 3.606 9 8.7491 10 23.75 8 1.0 1 58.8281 2 1.0 1 44.0 3 28.2734 3 27.4059 10 6.0 1 23.0368 3 1.0 1 81.0 3 1.0 2 1.0 1 14.0 2 1.0 1 10.0 1 30.3945 10 27.8731 2 67.0 2 1.0 1)
Average genome size in population (length): 17.988
Average program size in population (points): 18.988
Average percent parens in population: 0.058
Minimum age in population: 83.7881332891367
Maximum age in population: 88.5154588203145
Average age in population: 86.43848866672487
Median age in population: 86.48987131994313
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.012
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 37096387
--- Timings ---
Current time: 1529615066887 milliseconds
Total Time:         185.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.2 seconds, 47.0%
Fitness Testing:     80.9 seconds, 43.6%
Report:              17.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 60614.622299999966
Test mean error for best: 30.30731
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: 8.73133876    
Correct output: -136.6947699657 | Program output: -0.6104600685 
Correct output: -54.5144108964 | Program output: -55.5144108964
Correct output: 4.606026634    | Program output: -17.787946732 
Correct output: 81.2509245836  | Program output: -7.4907541643 
Correct output: -24.738745848  | Program output: 16.5225083041 
Correct output: 2.4013255826   | Program output: 1.4013255826  
Correct output: 137.8280591986 | Program output: 21.1719408014 
Correct output: 3.6154712735   | Program output: 2.6154712735  
Correct output: 142.8319993034 | Program output: 43.0          
Correct output: -107.2733849841 | Program output: -20.4532300317
Correct output: -47.5940551501 | Program output: 4.2178345497  
Correct output: -46.861821901  | Program output: -7.0          
Correct output: 111.0368178561 | Program output: 21.8895464316 
Correct output: 39.6543819914  | Program output: 38.6543819914 
Correct output: 161.9001002246 | Program output: 80.0          
Correct output: -9.4259382457  | Program output: -10.4259382457
Correct output: -44.4790725783 | Program output: -45.4790725783
Correct output: 41.2414035608  | Program output: 13.0          
Correct output: 64.1536429928  | Program output: 63.1536429928 
Correct output: 20.5795048056  | Program output: 9.0           
Correct output: -31.2994231433 | Program output: 29.4011537133 
Correct output: 57.8730661251  | Program output: 3.1269338749  
Correct output: -152.7464299632 | Program output: -68.0         
Correct output: 4.4074827986   | Program output: 3.4074827986  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_sub} {:instruction float_div} {:instruction in2} {:instruction integer_dec} {:instruction float_frominteger} {:instruction in1} {:instruction float_mod} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_dup float_yank float_dup integer_yank float_sub integer_sub float_div in2 integer_dec float_frominteger in1 float_mod integer_flush print_float integer_flush)
Errors: [52.3851 10 136.0843 10 1.0 1 22.394 10 88.7417 10 41.2613 12 1.0 1 116.6561 12 1.0 1 99.832 11 86.8202 11 51.8119 12 39.8618 10 89.1473 12 1.0 1 81.9001 12 1.0 2 1.0 1 28.2414 10 1.0 1 11.5795 11 60.7006 10 54.7461 12 84.7464 13 1.0 1]
Total: 1351.9098000000001
Mean: 27.038197
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2644.5846429999992
Median total errors in population: 1515.0
Error averages by case: (101.48214029999994 10.23 140.38969080000004 4.541 75.96639710000001 2.567 72.13861560000002 11.838 134.1328701999999 10.258 108.24997569999982 11.32 109.8988614 2.484 129.17301869999955 3.889 86.86727560000001 2.487 97.80415489999983 4.579 123.51165060000015 4.646 115.43399540000007 12.191 58.26882489999989 2.77 132.90362569999974 4.704 85.6920311 2.52 126.21800319999986 4.7 87.75530440000001 2.661 79.12765959999999 2.579 63.39136459999991 3.587 76.95663479999999 2.519 57.85225959999998 2.901 132.01729519999967 11.997 80.68094859999994 3.858 114.86717530000033 4.052 121.44586970000002 2.481)
Error minima by case: (14.3463 10 44.6948 2 0.0 0 3.606 9 8.7491 10 0.5591 9 0.0 0 58.8281 2 0.0 0 44.0 3 28.2734 2 22.2962 10 5.0 1 23.0368 2 0.0 0 81.0 3 0.0 0 0.0 0 14.0 2 0.0 0 10.0 1 6.0015 9 27.8731 2 66.0 2 0.0 0)
Average genome size in population (length): 17.468
Average program size in population (points): 18.468
Average percent parens in population: 0.059
Minimum age in population: 84.7881332891367
Maximum age in population: 89.96949823213166
Average age in population: 87.9560522792139
Median age in population: 88.0185220805431
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 57
Genome diversity (% unique Plush genomes):	 0.535
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 57
Syntactic diversity (% unique Push programs):	 0.535
Total error diversity:				 0.019
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 37533187
--- Timings ---
Current time: 1529615070026 milliseconds
Total Time:         188.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        88.9 seconds, 47.1%
Fitness Testing:     82.1 seconds, 43.5%
Report:              17.6 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 2140.0
Test mean error for best: 1.07000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: -44.653732248 
Correct output: -136.6947699657 | Program output: -137.6947699657
Correct output: -54.5144108964 | Program output: -55.5144108964
Correct output: 4.606026634    | Program output: 3.606026634   
Correct output: 81.2509245836  | Program output: 80.2509245836 
Correct output: -24.738745848  | Program output: -25.738745848 
Correct output: 2.4013255826   | Program output: 1.4013255826  
Correct output: 137.8280591986 | Program output: 136.8280591986
Correct output: 3.6154712735   | Program output: 2.6154712735  
Correct output: 142.8319993034 | Program output: 141.8319993034
Correct output: -107.2733849841 | Program output: -108.2733849841
Correct output: -47.5940551501 | Program output: -48.5940551501
Correct output: -46.861821901  | Program output: -47.861821901 
Correct output: 111.0368178561 | Program output: 110.0368178561
Correct output: 39.6543819914  | Program output: 38.6543819914 
Correct output: 161.9001002246 | Program output: 160.9001002246
Correct output: -9.4259382457  | Program output: -10.4259382457
Correct output: -44.4790725783 | Program output: -45.4790725783
Correct output: 41.2414035608  | Program output: 40.2414035608 
Correct output: 64.1536429928  | Program output: 63.1536429928 
Correct output: 20.5795048056  | Program output: 19.5795048056 
Correct output: -31.2994231433 | Program output: -32.2994231433
Correct output: 57.8730661251  | Program output: 56.8730661251 
Correct output: -152.7464299632 | Program output: -153.7464299632
Correct output: 4.4074827986   | Program output: 3.4074827986  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_dup} {:instruction integer_flush} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_sub} {:instruction float_div} {:instruction in2} {:instruction integer_dec} {:instruction float_frominteger} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_dup integer_flush float_dup integer_yank float_sub integer_sub float_div in2 integer_dec float_frominteger in1 float_add integer_flush print_float integer_flush)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 52.0
Mean: 1.04
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2497.558694900007
Median total errors in population: 1351.9098000000001
Error averages by case: (96.22280649999978 10.168 156.0543089999999 7.498 59.3259777 2.097 67.6949771000001 10.879 129.53078749999938 10.177 94.51956169999923 11.668 75.75664369999998 1.996 141.50213249999797 8.108 64.5062319 2.005 118.23351379999914 7.926 124.14403210000069 8.011 103.12256420000031 12.114 69.57569469999953 6.548 129.93365649999882 8.495 64.0287708 2.039 123.8407574999995 8.478 64.947359 2.6 60.84410969999998 2.101 66.32930699999962 6.949 59.8322693 2.037 55.0174832999999 7.091 115.65026539999862 11.016 87.6507423999997 8.057 119.11302460000147 8.706 81.430717 1.987)
Error minima by case: (1.0 1 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 1.0 1 0.0 0)
Average genome size in population (length): 16.748
Average program size in population (points): 17.748
Average percent parens in population: 0.059
Minimum age in population: 86.11138699597726
Maximum age in population: 91.32945039051683
Average age in population: 89.52640861673211
Median age in population: 89.53096141634977
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 223
Genome diversity (% unique Plush genomes):	 0.44
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 223
Syntactic diversity (% unique Push programs):	 0.44
Total error diversity:				 0.02
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 37951912
--- Timings ---
Current time: 1529615073068 milliseconds
Total Time:         191.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        90.3 seconds, 47.1%
Fitness Testing:     83.4 seconds, 43.5%
Report:              17.9 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 2140.0
Test mean error for best: 1.07000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: -44.653732248 
Correct output: -136.6947699657 | Program output: -137.6947699657
Correct output: -54.5144108964 | Program output: -55.5144108964
Correct output: 4.606026634    | Program output: 3.606026634   
Correct output: 81.2509245836  | Program output: 80.2509245836 
Correct output: -24.738745848  | Program output: -25.738745848 
Correct output: 2.4013255826   | Program output: 1.4013255826  
Correct output: 137.8280591986 | Program output: 136.8280591986
Correct output: 3.6154712735   | Program output: 2.6154712735  
Correct output: 142.8319993034 | Program output: 141.8319993034
Correct output: -107.2733849841 | Program output: -108.2733849841
Correct output: -47.5940551501 | Program output: -48.5940551501
Correct output: -46.861821901  | Program output: -47.861821901 
Correct output: 111.0368178561 | Program output: 110.0368178561
Correct output: 39.6543819914  | Program output: 38.6543819914 
Correct output: 161.9001002246 | Program output: 160.9001002246
Correct output: -9.4259382457  | Program output: -10.4259382457
Correct output: -44.4790725783 | Program output: -45.4790725783
Correct output: 41.2414035608  | Program output: 40.2414035608 
Correct output: 64.1536429928  | Program output: 63.1536429928 
Correct output: 20.5795048056  | Program output: 19.5795048056 
Correct output: -31.2994231433 | Program output: -32.2994231433
Correct output: 57.8730661251  | Program output: 56.8730661251 
Correct output: -152.7464299632 | Program output: -153.7464299632
Correct output: 4.4074827986   | Program output: 3.4074827986  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_dup} {:instruction integer_flush} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_sub} {:instruction float_div} {:instruction in2} {:instruction integer_dec} {:instruction float_frominteger} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_dup integer_flush float_dup integer_yank float_sub integer_sub float_div in2 integer_dec float_frominteger in1 float_add integer_flush print_float integer_flush)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 52.0
Mean: 1.04
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2166.4028439000144
Median total errors in population: 1351.9098000000001
Error averages by case: (84.06447529999961 10.05 162.53098869999877 9.983 36.4886273 1.572 55.48416400000019 10.018 118.65216519999898 10.05 74.17956939999878 11.924 37.362581600000006 1.51 144.69318339999612 11.748 36.4774055 1.505 128.50932859999764 10.831 116.72249780000112 10.882 84.06986190000052 11.976 71.42090009999916 9.813 119.29161149999798 11.759 36.8103686 1.549 113.24718579999919 11.761 36.50105609999999 2.463 36.511996100000005 1.574 60.783143999999375 9.84 36.72673100000001 1.549 45.100989899999846 10.746 92.92562879999774 10.133 85.7669694999999 11.693 115.11081500000248 12.709 37.83159880000001 1.501)
Error minima by case: (1.0 1 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 1.0 1 0.0 0)
Average genome size in population (length): 16.014
Average program size in population (points): 17.014
Average percent parens in population: 0.060
Minimum age in population: 88.3823089182144
Maximum age in population: 92.92318319509344
Average age in population: 91.13053123044261
Median age in population: 91.16435874188566
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 329
Genome diversity (% unique Plush genomes):	 0.264
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 329
Syntactic diversity (% unique Push programs):	 0.264
Total error diversity:				 0.014
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 38352262
--- Timings ---
Current time: 1529615076056 milliseconds
Total Time:         194.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        91.8 seconds, 47.2%
Fitness Testing:     84.5 seconds, 43.4%
Report:              18.2 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 2140.0
Test mean error for best: 1.07000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: -44.653732248 
Correct output: -136.6947699657 | Program output: -137.6947699657
Correct output: -54.5144108964 | Program output: -55.5144108964
Correct output: 4.606026634    | Program output: 3.606026634   
Correct output: 81.2509245836  | Program output: 80.2509245836 
Correct output: -24.738745848  | Program output: -25.738745848 
Correct output: 2.4013255826   | Program output: 1.4013255826  
Correct output: 137.8280591986 | Program output: 136.8280591986
Correct output: 3.6154712735   | Program output: 2.6154712735  
Correct output: 142.8319993034 | Program output: 141.8319993034
Correct output: -107.2733849841 | Program output: -108.2733849841
Correct output: -47.5940551501 | Program output: -48.5940551501
Correct output: -46.861821901  | Program output: -47.861821901 
Correct output: 111.0368178561 | Program output: 110.0368178561
Correct output: 39.6543819914  | Program output: 38.6543819914 
Correct output: 161.9001002246 | Program output: 160.9001002246
Correct output: -9.4259382457  | Program output: -10.4259382457
Correct output: -44.4790725783 | Program output: -45.4790725783
Correct output: 41.2414035608  | Program output: 40.2414035608 
Correct output: 64.1536429928  | Program output: 63.1536429928 
Correct output: 20.5795048056  | Program output: 19.5795048056 
Correct output: -31.2994231433 | Program output: -32.2994231433
Correct output: 57.8730661251  | Program output: 56.8730661251 
Correct output: -152.7464299632 | Program output: -153.7464299632
Correct output: 4.4074827986   | Program output: 3.4074827986  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_sub} {:instruction float_div} {:instruction in2} {:instruction integer_dec} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove integer_dup float_yank float_dup integer_yank float_sub integer_sub float_div in2 integer_dec float_frominteger float_frominteger in1 float_add integer_flush print_float integer_flush)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 52.0
Mean: 1.04
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 2271.3971036000125
Median total errors in population: 1351.9098000000001
Error averages by case: (87.92315639999963 9.789 162.60564639999947 9.714 43.1626173 1.717 60.65959530000019 9.758 120.82965479999902 9.796 78.7217259999988 11.573 44.0165586 1.644 145.86165029999665 11.369 42.864012499999994 1.631 130.67216889999816 10.494 119.14136270000104 10.555 88.07736470000046 11.637 75.79563599999918 9.496 121.63628909999812 11.387 43.427445799999994 1.69 116.5015926999992 11.383 43.04024249999999 2.583 43.1493103 1.717 65.70942659999939 9.537 43.43594290000001 1.69 50.71169199999985 10.429 96.72870709999799 9.885 89.47566339999943 11.31 117.91118490000233 12.277 44.64345640000001 1.634)
Error minima by case: (1.0 1 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 1.0 1 0.0 0)
Average genome size in population (length): 16.149
Average program size in population (points): 17.149
Average percent parens in population: 0.060
Minimum age in population: 89.95461490829436
Maximum age in population: 94.47037568454881
Average age in population: 92.60188848305526
Median age in population: 92.65959711021152
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 284
Genome diversity (% unique Plush genomes):	 0.313
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 284
Syntactic diversity (% unique Push programs):	 0.313
Total error diversity:				 0.019
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 38755987
--- Timings ---
Current time: 1529615079039 milliseconds
Total Time:         197.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        93.3 seconds, 47.2%
Fitness Testing:     85.7 seconds, 43.4%
Report:              18.5 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: -43.653732248 
Correct output: -136.6947699657 | Program output: -136.6947699657
Correct output: -54.5144108964 | Program output: -54.5144108964
Correct output: 4.606026634    | Program output: 4.606026634   
Correct output: 81.2509245836  | Program output: 81.2509245836 
Correct output: -24.738745848  | Program output: -24.738745848 
Correct output: 2.4013255826   | Program output: 2.4013255826  
Correct output: 137.8280591986 | Program output: 137.8280591986
Correct output: 3.6154712735   | Program output: 3.6154712735  
Correct output: 142.8319993034 | Program output: 142.8319993034
Correct output: -107.2733849841 | Program output: -107.2733849841
Correct output: -47.5940551501 | Program output: -47.5940551501
Correct output: -46.861821901  | Program output: -46.861821901 
Correct output: 111.0368178561 | Program output: 111.0368178561
Correct output: 39.6543819914  | Program output: 39.6543819914 
Correct output: 161.9001002246 | Program output: 161.9001002246
Correct output: -9.4259382457  | Program output: -9.4259382457 
Correct output: -44.4790725783 | Program output: -44.4790725783
Correct output: 41.2414035608  | Program output: 41.2414035608 
Correct output: 64.1536429928  | Program output: 64.1536429928 
Correct output: 20.5795048056  | Program output: 20.5795048056 
Correct output: -31.2994231433 | Program output: -31.2994231433
Correct output: 57.8730661251  | Program output: 57.8730661251 
Correct output: -152.7464299632 | Program output: -152.7464299632
Correct output: 4.4074827986   | Program output: 4.4074827986  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_dup} {:instruction integer_flush} {:instruction float_dup} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_sub} {:instruction float_div} {:instruction in2} {:instruction integer_mod} {:instruction float_frominteger} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush})
Best program: (float_shove float_shove integer_dup integer_flush float_dup integer_yank float_sub integer_sub float_div in2 integer_mod float_frominteger in1 float_add integer_flush print_float integer_flush)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 1914.6790103000105
Median total errors in population: 1351.9098000000001
Error averages by case: (74.06161109999972 7.989 133.33840160000094 7.884 38.8360165 1.615 52.10620880000015 7.97 100.44076339999926 7.985 67.04407629999913 9.395 39.709091099999995 1.541 119.70064839999795 9.153 38.7144137 1.544 107.28577399999915 8.479 99.0357848000007 8.557 74.55541200000036 9.455 63.64243539999943 7.689 100.94876439999871 9.171 39.03843669999999 1.581 96.32458599999943 9.161 38.7744132 2.502 38.8454813 1.623 55.68888749999958 7.722 38.91865860000001 1.588 43.62823269999988 8.603 81.32208239999858 8.096 74.87496069999935 9.102 97.79072880000166 9.875 40.235140900000005 1.538)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 16.475
Average program size in population (points): 17.475
Average percent parens in population: 0.058
Minimum age in population: 90.95461490829436
Maximum age in population: 96.21136704248404
Average age in population: 93.9976826229771
Median age in population: 93.99304887003015
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 209
Genome diversity (% unique Plush genomes):	 0.311
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 209
Syntactic diversity (% unique Push programs):	 0.311
Total error diversity:				 0.018
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 39167862
--- Timings ---
Current time: 1529615081847 milliseconds
Total Time:         200.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        94.6 seconds, 47.2%
Fitness Testing:     86.8 seconds, 43.3%
Report:              18.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 63
Successful program: (float_shove float_shove integer_dup integer_flush float_dup integer_yank float_sub integer_sub float_div in2 integer_mod float_frominteger in1 float_add integer_flush print_float integer_flush)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 18


Auto-simplifying with starting size: 18
step: 0
program: (float_shove float_shove integer_dup integer_flush float_dup integer_yank float_sub integer_sub float_div in2 integer_mod float_frominteger in1 float_add integer_flush print_float integer_flush)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 18

step: 500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -43.653732248  | Program output: -43.653732248 
Correct output: -136.6947699657 | Program output: -136.6947699657
Correct output: -54.5144108964 | Program output: -54.5144108964
Correct output: 4.606026634    | Program output: 4.606026634   
Correct output: 81.2509245836  | Program output: 81.2509245836 
Correct output: -24.738745848  | Program output: -24.738745848 
Correct output: 2.4013255826   | Program output: 2.4013255826  
Correct output: 137.8280591986 | Program output: 137.8280591986
Correct output: 3.6154712735   | Program output: 3.6154712735  
Correct output: 142.8319993034 | Program output: 142.8319993034
Correct output: -107.2733849841 | Program output: -107.2733849841
Correct output: -47.5940551501 | Program output: -47.5940551501
Correct output: -46.861821901  | Program output: -46.861821901 
Correct output: 111.0368178561 | Program output: 111.0368178561
Correct output: 39.6543819914  | Program output: 39.6543819914 
Correct output: 161.9001002246 | Program output: 161.9001002246
Correct output: -9.4259382457  | Program output: -9.4259382457 
Correct output: -44.4790725783 | Program output: -44.4790725783
Correct output: 41.2414035608  | Program output: 41.2414035608 
Correct output: 64.1536429928  | Program output: 64.1536429928 
Correct output: 20.5795048056  | Program output: 20.5795048056 
Correct output: -31.2994231433 | Program output: -31.2994231433
Correct output: 57.8730661251  | Program output: 57.8730661251 
Correct output: -152.7464299632 | Program output: -152.7464299632
Correct output: 4.4074827986   | Program output: 4.4074827986  
;;******************************
