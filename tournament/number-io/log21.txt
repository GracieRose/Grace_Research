Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-3.9072066345454175 97] 93.09279336545458]
Train Case:   1 | Input/Output: [[-32.25314658341635 86] 53.74685341658365]
Train Case:   2 | Input/Output: [[-46.837289170705844 20] -26.837289170705844]
Train Case:   3 | Input/Output: [[-62.944833261383025 47] -15.944833261383025]
Train Case:   4 | Input/Output: [[-82.53133612125671 35] -47.531336121256714]
Train Case:   5 | Input/Output: [[97.91339755127174 -29] 68.91339755127174]
Train Case:   6 | Input/Output: [[56.673562547347984 38] 94.67356254734798]
Train Case:   7 | Input/Output: [[34.02059432652959 -58] -23.97940567347041]
Train Case:   8 | Input/Output: [[-16.659617512974904 -29] -45.659617512974904]
Train Case:   9 | Input/Output: [[93.30523093795205 -75] 18.305230937952047]
Train Case:  10 | Input/Output: [[-21.467235525530043 -30] -51.46723552553004]
Train Case:  11 | Input/Output: [[7.386332099747747 -77] -69.61366790025225]
Train Case:  12 | Input/Output: [[-85.58608817126985 -75] -160.58608817126986]
Train Case:  13 | Input/Output: [[1.5792162397415268 25] 26.579216239741527]
Train Case:  14 | Input/Output: [[47.67883779816111 20] 67.67883779816111]
Train Case:  15 | Input/Output: [[25.960284310634506 73] 98.9602843106345]
Train Case:  16 | Input/Output: [[28.367801755157274 -50] -21.632198244842726]
Train Case:  17 | Input/Output: [[-99.77300661522341 -36] -135.7730066152234]
Train Case:  18 | Input/Output: [[61.14102341644784 46] 107.14102341644784]
Train Case:  19 | Input/Output: [[80.2956833760461 -53] 27.2956833760461]
Train Case:  20 | Input/Output: [[99.45422796562121 17] 116.45422796562121]
Train Case:  21 | Input/Output: [[-35.85619732096946 -15] -50.85619732096946]
Train Case:  22 | Input/Output: [[42.17626200971435 93] 135.17626200971435]
Train Case:  23 | Input/Output: [[5.222815791657197 9] 14.222815791657197]
Train Case:  24 | Input/Output: [[95.41033024911653 51] 146.41033024911653]
Test Case:   0 | Input/Output: [[-83.36835128992888 81] -2.3683512899288814]
Test Case:   1 | Input/Output: [[15.382202739554415 -42] -26.617797260445585]
Test Case:   2 | Input/Output: [[-20.56632678472377 -17] -37.56632678472377]
Test Case:   3 | Input/Output: [[13.721610743116102 -77] -63.2783892568839]
Test Case:   4 | Input/Output: [[-33.5738869399914 67] 33.4261130600086]
Test Case:   5 | Input/Output: [[-86.59044713337111 -84] -170.59044713337113]
Test Case:   6 | Input/Output: [[-1.275836740836155 -97] -98.27583674083616]
Test Case:   7 | Input/Output: [[24.05654325190443 -6] 18.05654325190443]
Test Case:   8 | Input/Output: [[74.95647524274 94] 168.95647524274]
Test Case:   9 | Input/Output: [[-1.8251026780996256 0] -1.8251026780996256]
Test Case:  10 | Input/Output: [[-8.667496097394192 16] 7.332503902605808]
Test Case:  11 | Input/Output: [[-76.58781513094462 56] -20.58781513094462]
Test Case:  12 | Input/Output: [[33.857260162682394 -69] -35.142739837317606]
Test Case:  13 | Input/Output: [[-54.86670372529914 -18] -72.86670372529915]
Test Case:  14 | Input/Output: [[-64.61559979867403 94] 29.384400201325974]
Test Case:  15 | Input/Output: [[-29.21289722392038 -41] -70.21289722392038]
Test Case:  16 | Input/Output: [[78.12602609409828 90] 168.12602609409828]
Test Case:  17 | Input/Output: [[33.03815214929614 33] 66.03815214929614]
Test Case:  18 | Input/Output: [[-46.72436009583871 -9] -55.72436009583871]
Test Case:  19 | Input/Output: [[73.54655220111064 -68] 5.546552201110643]
Test Case:  20 | Input/Output: [[90.30536548763274 -21] 69.30536548763274]
Test Case:  21 | Input/Output: [[47.441193253152306 -58] -10.558806746847694]
Test Case:  22 | Input/Output: [[33.736330385701365 -20] 13.736330385701365]
Test Case:  23 | Input/Output: [[87.69717243335651 65] 152.6971724333565]
Test Case:  24 | Input/Output: [[-39.33827430080095 -22] -61.33827430080095]
Test Case:  25 | Input/Output: [[5.101778556604145 -34] -28.898221443395855]
Test Case:  26 | Input/Output: [[-56.61412854245646 -32] -88.61412854245646]
Test Case:  27 | Input/Output: [[64.34290419311449 -56] 8.342904193114492]
Test Case:  28 | Input/Output: [[84.54986400293421 50] 134.5498640029342]
Test Case:  29 | Input/Output: [[58.1007499051822 8] 66.1007499051822]
Test Case:  30 | Input/Output: [[-92.24886288476333 22] -70.24886288476333]
Test Case:  31 | Input/Output: [[15.597843441994172 79] 94.59784344199417]
Test Case:  32 | Input/Output: [[-85.60950766571129 -42] -127.60950766571129]
Test Case:  33 | Input/Output: [[-86.98423961140955 35] -51.98423961140955]
Test Case:  34 | Input/Output: [[56.179060739955645 97] 153.17906073995564]
Test Case:  35 | Input/Output: [[-0.08620418717512734 -83] -83.08620418717513]
Test Case:  36 | Input/Output: [[-8.852010212724949 -21] -29.85201021272495]
Test Case:  37 | Input/Output: [[66.23780957049087 -66] 0.23780957049086737]
Test Case:  38 | Input/Output: [[46.599352862344375 -65] -18.400647137655625]
Test Case:  39 | Input/Output: [[-16.03949817211077 -85] -101.03949817211077]
Test Case:  40 | Input/Output: [[80.00601147773997 -33] 47.006011477739975]
Test Case:  41 | Input/Output: [[32.07535616705678 36] 68.07535616705678]
Test Case:  42 | Input/Output: [[52.023536720647826 -90] -37.976463279352174]
Test Case:  43 | Input/Output: [[54.56556539162088 86] 140.56556539162088]
Test Case:  44 | Input/Output: [[84.08612105080374 82] 166.08612105080374]
Test Case:  45 | Input/Output: [[-74.99441399601938 34] -40.994413996019375]
Test Case:  46 | Input/Output: [[45.66459991511792 -19] 26.66459991511792]
Test Case:  47 | Input/Output: [[-38.188234306553646 18] -20.188234306553646]
Test Case:  48 | Input/Output: [[-94.68506397852536 -90] -184.68506397852536]
Test Case:  49 | Input/Output: [[-5.311832666807732 -80] -85.31183266680773]
Test Case:  50 | Input/Output: [[40.16810922859284 -10] 30.16810922859284]
Test Case:  51 | Input/Output: [[1.6004419343698117 -56] -54.39955806563019]
Test Case:  52 | Input/Output: [[72.24661347405069 -31] 41.24661347405069]
Test Case:  53 | Input/Output: [[13.288208445204532 -1] 12.288208445204532]
Test Case:  54 | Input/Output: [[-85.31094044039287 -10] -95.31094044039287]
Test Case:  55 | Input/Output: [[-58.64056040394034 -58] -116.64056040394034]
Test Case:  56 | Input/Output: [[21.07893831924146 -30] -8.921061680758541]
Test Case:  57 | Input/Output: [[38.211444536689044 18] 56.211444536689044]
Test Case:  58 | Input/Output: [[-96.32713538497796 -9] -105.32713538497796]
Test Case:  59 | Input/Output: [[-74.01178906216448 -57] -131.0117890621645]
Test Case:  60 | Input/Output: [[76.8229606853584 -65] 11.822960685358396]
Test Case:  61 | Input/Output: [[26.363680771070236 18] 44.363680771070236]
Test Case:  62 | Input/Output: [[-0.04586138744502932 4] 3.9541386125549707]
Test Case:  63 | Input/Output: [[-26.327423171404433 -85] -111.32742317140443]
Test Case:  64 | Input/Output: [[6.312702167457303 -92] -85.6872978325427]
Test Case:  65 | Input/Output: [[-41.875005648378696 -28] -69.8750056483787]
Test Case:  66 | Input/Output: [[-76.75215202295183 -99] -175.75215202295183]
Test Case:  67 | Input/Output: [[-31.478391724167338 -67] -98.47839172416734]
Test Case:  68 | Input/Output: [[65.92563760238806 85] 150.92563760238806]
Test Case:  69 | Input/Output: [[63.00804574061587 -57] 6.00804574061587]
Test Case:  70 | Input/Output: [[6.235957202942856 -9] -2.7640427970571437]
Test Case:  71 | Input/Output: [[-73.72917335582432 -34] -107.72917335582432]
Test Case:  72 | Input/Output: [[66.67501322465588 34] 100.67501322465588]
Test Case:  73 | Input/Output: [[16.542928349967838 -59] -42.45707165003216]
Test Case:  74 | Input/Output: [[76.09645075597211 89] 165.0964507559721]
Test Case:  75 | Input/Output: [[-65.9882773579855 28] -37.988277357985496]
Test Case:  76 | Input/Output: [[28.68573046941421 -65] -36.31426953058579]
Test Case:  77 | Input/Output: [[60.07433508015029 81] 141.0743350801503]
Test Case:  78 | Input/Output: [[94.9562735268139 -1] 93.9562735268139]
Test Case:  79 | Input/Output: [[-78.79504672225241 58] -20.79504672225241]
Test Case:  80 | Input/Output: [[21.59686977789579 11] 32.59686977789579]
Test Case:  81 | Input/Output: [[17.13165862007027 -91] -73.86834137992973]
Test Case:  82 | Input/Output: [[33.615372922758326 -32] 1.6153729227583256]
Test Case:  83 | Input/Output: [[-5.4771403118047886 37] 31.52285968819521]
Test Case:  84 | Input/Output: [[-53.073659031957135 69] 15.926340968042865]
Test Case:  85 | Input/Output: [[80.35191777230168 46] 126.35191777230168]
Test Case:  86 | Input/Output: [[16.62918314199277 66] 82.62918314199277]
Test Case:  87 | Input/Output: [[-88.53307662563105 -43] -131.53307662563105]
Test Case:  88 | Input/Output: [[-73.95539364139182 72] -1.9553936413918223]
Test Case:  89 | Input/Output: [[-40.594180770547304 -98] -138.5941807705473]
Test Case:  90 | Input/Output: [[-67.04347690938036 14] -53.04347690938036]
Test Case:  91 | Input/Output: [[-92.03200295976251 -38] -130.0320029597625]
Test Case:  92 | Input/Output: [[19.754062175680318 30] 49.75406217568032]
Test Case:  93 | Input/Output: [[42.18073668063039 -85] -42.81926331936961]
Test Case:  94 | Input/Output: [[-75.71818246017612 71] -4.7181824601761235]
Test Case:  95 | Input/Output: [[93.52240622058977 80] 173.52240622058977]
Test Case:  96 | Input/Output: [[-11.662808562061826 -86] -97.66280856206183]
Test Case:  97 | Input/Output: [[11.889488805036905 -76] -64.1105111949631]
Test Case:  98 | Input/Output: [[41.57505679274297 1] 42.57505679274297]
Test Case:  99 | Input/Output: [[92.85206069805704 70] 162.85206069805704]
Test Case: 100 | Input/Output: [[72.70432704165148 -72] 0.7043270416514815]
Test Case: 101 | Input/Output: [[85.18636554763711 -74] 11.18636554763711]
Test Case: 102 | Input/Output: [[96.19694220561234 -33] 63.196942205612345]
Test Case: 103 | Input/Output: [[95.05828673825084 2] 97.05828673825084]
Test Case: 104 | Input/Output: [[53.42051299388325 -86] -32.57948700611675]
Test Case: 105 | Input/Output: [[70.5467275171427 -28] 42.5467275171427]
Test Case: 106 | Input/Output: [[-82.93050080332534 91] 8.069499196674656]
Test Case: 107 | Input/Output: [[35.11873680445825 -34] 1.1187368044582513]
Test Case: 108 | Input/Output: [[-58.60806996957149 -60] -118.60806996957149]
Test Case: 109 | Input/Output: [[3.9731381118289733 -21] -17.026861888171027]
Test Case: 110 | Input/Output: [[-22.6855604841341 11] -11.6855604841341]
Test Case: 111 | Input/Output: [[-39.7596627498545 48] 8.240337250145501]
Test Case: 112 | Input/Output: [[-11.191341792303817 -61] -72.19134179230382]
Test Case: 113 | Input/Output: [[-24.941948714453005 -26] -50.941948714453005]
Test Case: 114 | Input/Output: [[95.65473886230563 -38] 57.654738862305635]
Test Case: 115 | Input/Output: [[-69.17465220199668 -81] -150.17465220199668]
Test Case: 116 | Input/Output: [[68.36029164528102 6] 74.36029164528102]
Test Case: 117 | Input/Output: [[-94.72452346182855 -70] -164.72452346182854]
Test Case: 118 | Input/Output: [[38.76302521835652 -40] -1.2369747816434824]
Test Case: 119 | Input/Output: [[-30.66003914520104 -58] -88.66003914520104]
Test Case: 120 | Input/Output: [[68.44697813630677 -30] 38.44697813630677]
Test Case: 121 | Input/Output: [[-90.59281236548176 59] -31.592812365481763]
Test Case: 122 | Input/Output: [[63.36631857185276 -52] 11.366318571852759]
Test Case: 123 | Input/Output: [[20.055256267658322 -55] -34.94474373234168]
Test Case: 124 | Input/Output: [[-95.24822714323437 -67] -162.24822714323437]
Test Case: 125 | Input/Output: [[26.70312228543345 -83] -56.29687771456655]
Test Case: 126 | Input/Output: [[-5.58421910364612 68] 62.41578089635388]
Test Case: 127 | Input/Output: [[91.15985052851283 74] 165.15985052851283]
Test Case: 128 | Input/Output: [[-78.89583688094422 19] -59.895836880944216]
Test Case: 129 | Input/Output: [[-76.10965282503075 -94] -170.10965282503076]
Test Case: 130 | Input/Output: [[-44.19242086587734 6] -38.19242086587734]
Test Case: 131 | Input/Output: [[41.38242037478594 -58] -16.617579625214063]
Test Case: 132 | Input/Output: [[-47.03446404037825 5] -42.03446404037825]
Test Case: 133 | Input/Output: [[-8.296417326837087 15] 6.703582673162913]
Test Case: 134 | Input/Output: [[13.867417132623402 5] 18.8674171326234]
Test Case: 135 | Input/Output: [[9.437243913968118 33] 42.43724391396812]
Test Case: 136 | Input/Output: [[-82.81758896892248 83] 0.1824110310775211]
Test Case: 137 | Input/Output: [[77.6372112979567 6] 83.6372112979567]
Test Case: 138 | Input/Output: [[-13.941612227094353 87] 73.05838777290565]
Test Case: 139 | Input/Output: [[-11.982067511879862 -66] -77.98206751187986]
Test Case: 140 | Input/Output: [[20.003633854083887 -50] -29.996366145916113]
Test Case: 141 | Input/Output: [[11.596109770758162 58] 69.59610977075816]
Test Case: 142 | Input/Output: [[23.976667492066667 -50] -26.023332507933333]
Test Case: 143 | Input/Output: [[76.0707336213651 6] 82.0707336213651]
Test Case: 144 | Input/Output: [[-16.902623507979996 78] 61.097376492020004]
Test Case: 145 | Input/Output: [[17.463707725895745 -49] -31.536292274104255]
Test Case: 146 | Input/Output: [[34.90003694122436 -46] -11.099963058775643]
Test Case: 147 | Input/Output: [[-38.50137088636176 -98] -136.50137088636177]
Test Case: 148 | Input/Output: [[-64.62014514006796 0] -64.62014514006796]
Test Case: 149 | Input/Output: [[68.18841173796196 72] 140.18841173796196]
Test Case: 150 | Input/Output: [[-1.4737476412019106 -40] -41.47374764120191]
Test Case: 151 | Input/Output: [[51.866369844134624 -45] 6.866369844134624]
Test Case: 152 | Input/Output: [[-73.94528540602954 -38] -111.94528540602954]
Test Case: 153 | Input/Output: [[-46.244911336596275 65] 18.755088663403725]
Test Case: 154 | Input/Output: [[49.65840067137873 -32] 17.65840067137873]
Test Case: 155 | Input/Output: [[43.36118606310686 87] 130.36118606310686]
Test Case: 156 | Input/Output: [[-16.219019395217643 -84] -100.21901939521764]
Test Case: 157 | Input/Output: [[37.424567850102505 -18] 19.424567850102505]
Test Case: 158 | Input/Output: [[18.601514068391367 22] 40.60151406839137]
Test Case: 159 | Input/Output: [[34.92491817111235 -37] -2.0750818288876474]
Test Case: 160 | Input/Output: [[11.028262146287204 99] 110.0282621462872]
Test Case: 161 | Input/Output: [[70.26711427925576 -63] 7.267114279255765]
Test Case: 162 | Input/Output: [[-68.21737225589084 -48] -116.21737225589084]
Test Case: 163 | Input/Output: [[15.399794339899458 -58] -42.60020566010054]
Test Case: 164 | Input/Output: [[-99.94486535467698 -43] -142.94486535467698]
Test Case: 165 | Input/Output: [[50.09429228372818 76] 126.09429228372818]
Test Case: 166 | Input/Output: [[-67.75192962184093 41] -26.75192962184093]
Test Case: 167 | Input/Output: [[-34.723595560330594 83] 48.276404439669406]
Test Case: 168 | Input/Output: [[90.28522355067341 65] 155.2852235506734]
Test Case: 169 | Input/Output: [[43.9129163507466 13] 56.9129163507466]
Test Case: 170 | Input/Output: [[30.647631540022417 77] 107.64763154002242]
Test Case: 171 | Input/Output: [[77.67258816380999 87] 164.67258816381]
Test Case: 172 | Input/Output: [[-16.85278165046722 -84] -100.85278165046722]
Test Case: 173 | Input/Output: [[-34.925189485569035 -12] -46.925189485569035]
Test Case: 174 | Input/Output: [[12.407030585313322 -22] -9.592969414686678]
Test Case: 175 | Input/Output: [[-15.140113633461198 25] 9.859886366538802]
Test Case: 176 | Input/Output: [[3.9923259199357233 -17] -13.007674080064277]
Test Case: 177 | Input/Output: [[-6.840327578106127 62] 55.15967242189387]
Test Case: 178 | Input/Output: [[69.85801638814903 -14] 55.858016388149025]
Test Case: 179 | Input/Output: [[95.03160481882932 -5] 90.03160481882932]
Test Case: 180 | Input/Output: [[-37.718370860386166 22] -15.718370860386166]
Test Case: 181 | Input/Output: [[-35.99497408948086 82] 46.00502591051914]
Test Case: 182 | Input/Output: [[15.997678500364358 75] 90.99767850036436]
Test Case: 183 | Input/Output: [[-95.37627712798518 74] -21.376277127985176]
Test Case: 184 | Input/Output: [[-71.34095204234771 -57] -128.3409520423477]
Test Case: 185 | Input/Output: [[-98.88245888552795 35] -63.88245888552795]
Test Case: 186 | Input/Output: [[-36.026628410589744 -53] -89.02662841058975]
Test Case: 187 | Input/Output: [[20.084552132557405 -35] -14.915447867442595]
Test Case: 188 | Input/Output: [[-7.252374328096664 74] 66.74762567190334]
Test Case: 189 | Input/Output: [[-91.17667082928841 -23] -114.17667082928841]
Test Case: 190 | Input/Output: [[-25.254093879981426 -10] -35.254093879981426]
Test Case: 191 | Input/Output: [[-83.35159466435769 96] 12.648405335642309]
Test Case: 192 | Input/Output: [[-64.06459435815815 45] -19.064594358158146]
Test Case: 193 | Input/Output: [[36.60325668724204 72] 108.60325668724204]
Test Case: 194 | Input/Output: [[73.89983538985149 6] 79.89983538985149]
Test Case: 195 | Input/Output: [[94.62349882717231 66] 160.6234988271723]
Test Case: 196 | Input/Output: [[-69.67078646242774 -61] -130.67078646242774]
Test Case: 197 | Input/Output: [[-34.39015737926712 -55] -89.39015737926712]
Test Case: 198 | Input/Output: [[67.47513042098771 -6] 61.47513042098771]
Test Case: 199 | Input/Output: [[43.80012743017346 -71] -27.19987256982654]
Test Case: 200 | Input/Output: [[80.9736485061417 -53] 27.9736485061417]
Test Case: 201 | Input/Output: [[24.851161920370117 -11] 13.851161920370117]
Test Case: 202 | Input/Output: [[36.05490620095122 59] 95.05490620095122]
Test Case: 203 | Input/Output: [[6.06505192421794 -81] -74.93494807578206]
Test Case: 204 | Input/Output: [[-29.316291148639124 -15] -44.316291148639124]
Test Case: 205 | Input/Output: [[87.72388042313756 9] 96.72388042313756]
Test Case: 206 | Input/Output: [[5.699431073471885 -82] -76.30056892652811]
Test Case: 207 | Input/Output: [[-20.981316064437962 29] 8.018683935562038]
Test Case: 208 | Input/Output: [[96.67526301402017 -64] 32.675263014020175]
Test Case: 209 | Input/Output: [[55.95751746903264 71] 126.95751746903264]
Test Case: 210 | Input/Output: [[75.69868744456846 92] 167.69868744456846]
Test Case: 211 | Input/Output: [[92.62852204061693 82] 174.62852204061693]
Test Case: 212 | Input/Output: [[53.03114432022829 0] 53.03114432022829]
Test Case: 213 | Input/Output: [[17.76936518746193 26] 43.76936518746193]
Test Case: 214 | Input/Output: [[-52.99270966612095 73] 20.007290333879048]
Test Case: 215 | Input/Output: [[-20.675844052666292 -77] -97.67584405266629]
Test Case: 216 | Input/Output: [[20.418692168217305 -89] -68.5813078317827]
Test Case: 217 | Input/Output: [[78.11979455846262 12] 90.11979455846262]
Test Case: 218 | Input/Output: [[39.375102040570056 -97] -57.624897959429944]
Test Case: 219 | Input/Output: [[20.788236524684464 46] 66.78823652468446]
Test Case: 220 | Input/Output: [[-52.75612547283384 41] -11.756125472833837]
Test Case: 221 | Input/Output: [[-75.88439994785759 81] 5.115600052142412]
Test Case: 222 | Input/Output: [[11.058873599384668 -45] -33.94112640061533]
Test Case: 223 | Input/Output: [[-22.703666011584687 40] 17.296333988415313]
Test Case: 224 | Input/Output: [[-79.95966752731569 88] 8.040332472684312]
Test Case: 225 | Input/Output: [[-13.82772420481409 -96] -109.82772420481409]
Test Case: 226 | Input/Output: [[-63.0505313996383 -2] -65.0505313996383]
Test Case: 227 | Input/Output: [[2.404336479404904 -41] -38.595663520595096]
Test Case: 228 | Input/Output: [[78.6387319540064 -9] 69.6387319540064]
Test Case: 229 | Input/Output: [[25.629114839962114 51] 76.62911483996211]
Test Case: 230 | Input/Output: [[-60.708113592043425 33] -27.708113592043425]
Test Case: 231 | Input/Output: [[-50.10745190247097 36] -14.10745190247097]
Test Case: 232 | Input/Output: [[-70.0221176056615 -78] -148.0221176056615]
Test Case: 233 | Input/Output: [[67.99326818625065 6] 73.99326818625065]
Test Case: 234 | Input/Output: [[-19.335786436999868 75] 55.66421356300013]
Test Case: 235 | Input/Output: [[-70.69425978056589 74] 3.3057402194341137]
Test Case: 236 | Input/Output: [[-41.2522779909285 -1] -42.2522779909285]
Test Case: 237 | Input/Output: [[-56.766206426891344 83] 26.233793573108656]
Test Case: 238 | Input/Output: [[65.98636432112392 -52] 13.986364321123915]
Test Case: 239 | Input/Output: [[54.41710686692974 34] 88.41710686692974]
Test Case: 240 | Input/Output: [[16.817561813332603 43] 59.8175618133326]
Test Case: 241 | Input/Output: [[-60.89720662113667 -81] -141.89720662113666]
Test Case: 242 | Input/Output: [[-91.53938766927227 9] -82.53938766927227]
Test Case: 243 | Input/Output: [[68.81288916404688 -61] 7.812889164046879]
Test Case: 244 | Input/Output: [[-71.89873097843872 -93] -164.89873097843872]
Test Case: 245 | Input/Output: [[67.95526447896222 -52] 15.95526447896222]
Test Case: 246 | Input/Output: [[-56.145589128935725 11] -45.145589128935725]
Test Case: 247 | Input/Output: [[27.817966181432922 -12] 15.817966181432922]
Test Case: 248 | Input/Output: [[-69.50916177151277 -39] -108.50916177151277]
Test Case: 249 | Input/Output: [[98.55367650081894 -66] 32.55367650081894]
Test Case: 250 | Input/Output: [[-10.778019267031013 -7] -17.778019267031013]
Test Case: 251 | Input/Output: [[-73.8042292237115 -61] -134.8042292237115]
Test Case: 252 | Input/Output: [[-42.29633209354968 46] 3.7036679064503204]
Test Case: 253 | Input/Output: [[-11.207194074535451 43] 31.79280592546455]
Test Case: 254 | Input/Output: [[57.24656538367438 -4] 53.24656538367438]
Test Case: 255 | Input/Output: [[1.5025653441622637 -96] -94.49743465583774]
Test Case: 256 | Input/Output: [[64.8570206226101 58] 122.8570206226101]
Test Case: 257 | Input/Output: [[-48.87559928876672 -63] -111.87559928876672]
Test Case: 258 | Input/Output: [[-48.47028929980157 -95] -143.47028929980158]
Test Case: 259 | Input/Output: [[98.40323753804086 82] 180.40323753804086]
Test Case: 260 | Input/Output: [[-62.90667521589539 -96] -158.9066752158954]
Test Case: 261 | Input/Output: [[29.173330941164124 -94] -64.82666905883588]
Test Case: 262 | Input/Output: [[-48.600940454141565 10] -38.600940454141565]
Test Case: 263 | Input/Output: [[-34.49196446459635 1] -33.49196446459635]
Test Case: 264 | Input/Output: [[-98.97779222620764 80] -18.97779222620764]
Test Case: 265 | Input/Output: [[-74.51789389194283 84] 9.482106108057167]
Test Case: 266 | Input/Output: [[-20.511768498035494 -57] -77.5117684980355]
Test Case: 267 | Input/Output: [[72.27992895071773 55] 127.27992895071773]
Test Case: 268 | Input/Output: [[68.91137640790339 -71] -2.08862359209661]
Test Case: 269 | Input/Output: [[-81.4802455308455 -60] -141.48024553084548]
Test Case: 270 | Input/Output: [[97.77081695993598 -100] -2.229183040064015]
Test Case: 271 | Input/Output: [[40.87988557789802 31] 71.87988557789802]
Test Case: 272 | Input/Output: [[2.93422607870923 -21] -18.06577392129077]
Test Case: 273 | Input/Output: [[62.24459796322958 -73] -10.75540203677042]
Test Case: 274 | Input/Output: [[60.48449156065743 62] 122.48449156065743]
Test Case: 275 | Input/Output: [[-20.813184033214753 86] 65.18681596678525]
Test Case: 276 | Input/Output: [[-48.49607264228097 23] -25.49607264228097]
Test Case: 277 | Input/Output: [[7.696992532062822 -91] -83.30300746793718]
Test Case: 278 | Input/Output: [[36.084198602437425 14] 50.084198602437425]
Test Case: 279 | Input/Output: [[9.099398217416962 -4] 5.099398217416962]
Test Case: 280 | Input/Output: [[-52.682590175440346 45] -7.682590175440346]
Test Case: 281 | Input/Output: [[-1.4891867250324253 -5] -6.489186725032425]
Test Case: 282 | Input/Output: [[9.391007790227903 21] 30.391007790227903]
Test Case: 283 | Input/Output: [[78.18227957892378 -48] 30.182279578923783]
Test Case: 284 | Input/Output: [[85.18565249965548 49] 134.18565249965548]
Test Case: 285 | Input/Output: [[64.9823980339194 -87] -22.017601966080605]
Test Case: 286 | Input/Output: [[-28.864912580440432 -14] -42.86491258044043]
Test Case: 287 | Input/Output: [[26.17401287086551 -36] -9.82598712913449]
Test Case: 288 | Input/Output: [[7.873002958417686 -39] -31.126997041582314]
Test Case: 289 | Input/Output: [[23.262204459334896 59] 82.2622044593349]
Test Case: 290 | Input/Output: [[-18.288914732276112 9] -9.288914732276112]
Test Case: 291 | Input/Output: [[33.04466104521296 69] 102.04466104521296]
Test Case: 292 | Input/Output: [[-85.30974550344727 63] -22.309745503447274]
Test Case: 293 | Input/Output: [[42.631642835887305 -41] 1.6316428358873054]
Test Case: 294 | Input/Output: [[59.623707609673005 64] 123.623707609673]
Test Case: 295 | Input/Output: [[98.06543227689414 36] 134.06543227689414]
Test Case: 296 | Input/Output: [[-21.40959844921268 13] -8.40959844921268]
Test Case: 297 | Input/Output: [[-88.2096367451209 -89] -177.20963674512092]
Test Case: 298 | Input/Output: [[28.833119894919747 -93] -64.16688010508025]
Test Case: 299 | Input/Output: [[21.193325970047923 99] 120.19332597004792]
Test Case: 300 | Input/Output: [[-47.702115793912455 -60] -107.70211579391245]
Test Case: 301 | Input/Output: [[58.141836318060825 24] 82.14183631806083]
Test Case: 302 | Input/Output: [[-75.78109486616961 31] -44.78109486616961]
Test Case: 303 | Input/Output: [[51.72539222287037 51] 102.72539222287037]
Test Case: 304 | Input/Output: [[-66.95674790587674 -30] -96.95674790587674]
Test Case: 305 | Input/Output: [[41.53341343371713 46] 87.53341343371713]
Test Case: 306 | Input/Output: [[-83.11873404364522 -45] -128.11873404364522]
Test Case: 307 | Input/Output: [[32.56905592347377 67] 99.56905592347377]
Test Case: 308 | Input/Output: [[36.2547507098231 -10] 26.2547507098231]
Test Case: 309 | Input/Output: [[80.83166938993529 24] 104.83166938993529]
Test Case: 310 | Input/Output: [[66.54953221189587 -99] -32.450467788104135]
Test Case: 311 | Input/Output: [[-65.2860715319587 -41] -106.2860715319587]
Test Case: 312 | Input/Output: [[-47.689759709237414 91] 43.310240290762586]
Test Case: 313 | Input/Output: [[40.55550508950671 27] 67.55550508950671]
Test Case: 314 | Input/Output: [[-17.94474429733104 29] 11.055255702668958]
Test Case: 315 | Input/Output: [[28.917410472842477 -20] 8.917410472842477]
Test Case: 316 | Input/Output: [[15.130506926351003 -12] 3.1305069263510035]
Test Case: 317 | Input/Output: [[51.96099194711246 51] 102.96099194711246]
Test Case: 318 | Input/Output: [[31.07770897325085 23] 54.07770897325085]
Test Case: 319 | Input/Output: [[72.17579766661683 -71] 1.1757976666168304]
Test Case: 320 | Input/Output: [[-66.22926162513691 -67] -133.22926162513693]
Test Case: 321 | Input/Output: [[2.772451292835072 90] 92.77245129283507]
Test Case: 322 | Input/Output: [[30.414310025600287 -15] 15.414310025600287]
Test Case: 323 | Input/Output: [[-58.80421429485576 -18] -76.80421429485577]
Test Case: 324 | Input/Output: [[-47.43226437494796 -33] -80.43226437494796]
Test Case: 325 | Input/Output: [[-89.39024110604907 -7] -96.39024110604907]
Test Case: 326 | Input/Output: [[-68.11756895781087 91] 22.882431042189125]
Test Case: 327 | Input/Output: [[70.0878822319292 94] 164.0878822319292]
Test Case: 328 | Input/Output: [[50.99866353906174 50] 100.99866353906174]
Test Case: 329 | Input/Output: [[-15.257865502059033 -24] -39.25786550205903]
Test Case: 330 | Input/Output: [[-17.050489484396863 18] 0.9495105156031372]
Test Case: 331 | Input/Output: [[6.611707180324402 -15] -8.388292819675598]
Test Case: 332 | Input/Output: [[24.07055252533135 58] 82.07055252533135]
Test Case: 333 | Input/Output: [[-46.28079144433641 -73] -119.28079144433642]
Test Case: 334 | Input/Output: [[-21.827413719423674 63] 41.172586280576326]
Test Case: 335 | Input/Output: [[-34.591919709377294 -42] -76.5919197093773]
Test Case: 336 | Input/Output: [[-51.72703391076568 -11] -62.72703391076568]
Test Case: 337 | Input/Output: [[14.262596291037283 -15] -0.7374037089627166]
Test Case: 338 | Input/Output: [[97.57700287003789 46] 143.5770028700379]
Test Case: 339 | Input/Output: [[1.8077930434071305 -59] -57.19220695659287]
Test Case: 340 | Input/Output: [[78.37955589259226 75] 153.37955589259226]
Test Case: 341 | Input/Output: [[-85.22483354236563 -78] -163.22483354236562]
Test Case: 342 | Input/Output: [[-14.745389111670207 -72] -86.7453891116702]
Test Case: 343 | Input/Output: [[-4.211614282369382 7] 2.788385717630618]
Test Case: 344 | Input/Output: [[-20.74331909434015 24] 3.2566809056598487]
Test Case: 345 | Input/Output: [[4.716434894934281 -19] -14.283565105065719]
Test Case: 346 | Input/Output: [[-67.86520543975081 -65] -132.8652054397508]
Test Case: 347 | Input/Output: [[70.47209572324823 0] 70.47209572324823]
Test Case: 348 | Input/Output: [[2.6039319225894815 0] 2.6039319225894815]
Test Case: 349 | Input/Output: [[-55.7941788495816 37] -18.7941788495816]
Test Case: 350 | Input/Output: [[-34.393746836372856 -34] -68.39374683637286]
Test Case: 351 | Input/Output: [[8.92824120222322 87] 95.92824120222322]
Test Case: 352 | Input/Output: [[18.16799791904498 94] 112.16799791904498]
Test Case: 353 | Input/Output: [[-44.2731512344396 39] -5.273151234439602]
Test Case: 354 | Input/Output: [[27.836552739341002 32] 59.836552739341]
Test Case: 355 | Input/Output: [[-84.64364983056043 -21] -105.64364983056043]
Test Case: 356 | Input/Output: [[96.80755163694042 20] 116.80755163694042]
Test Case: 357 | Input/Output: [[-93.9658699206126 89] -4.9658699206126045]
Test Case: 358 | Input/Output: [[74.04764859914391 -66] 8.047648599143912]
Test Case: 359 | Input/Output: [[18.101208505422406 -14] 4.101208505422406]
Test Case: 360 | Input/Output: [[-47.15272709450535 78] 30.84727290549465]
Test Case: 361 | Input/Output: [[-31.77285841271282 78] 46.22714158728718]
Test Case: 362 | Input/Output: [[32.52175214424554 -7] 25.52175214424554]
Test Case: 363 | Input/Output: [[-43.2378700929235 -68] -111.2378700929235]
Test Case: 364 | Input/Output: [[13.294409275464943 -19] -5.705590724535057]
Test Case: 365 | Input/Output: [[-39.06335379741319 -14] -53.06335379741319]
Test Case: 366 | Input/Output: [[85.53274923521644 90] 175.53274923521644]
Test Case: 367 | Input/Output: [[63.9460883063534 -57] 6.946088306353403]
Test Case: 368 | Input/Output: [[-63.15942830618268 -82] -145.1594283061827]
Test Case: 369 | Input/Output: [[74.53782532754164 -45] 29.53782532754164]
Test Case: 370 | Input/Output: [[-1.4980386506364312 79] 77.50196134936357]
Test Case: 371 | Input/Output: [[35.144884784807545 35] 70.14488478480754]
Test Case: 372 | Input/Output: [[-92.9541185921189 -16] -108.9541185921189]
Test Case: 373 | Input/Output: [[83.49429817736251 64] 147.4942981773625]
Test Case: 374 | Input/Output: [[-33.92431288635147 82] 48.07568711364853]
Test Case: 375 | Input/Output: [[57.33788606144486 -84] -26.662113938555137]
Test Case: 376 | Input/Output: [[-41.75645592820425 27] -14.756455928204247]
Test Case: 377 | Input/Output: [[18.905106274556232 -86] -67.09489372544377]
Test Case: 378 | Input/Output: [[14.94596877184864 -57] -42.05403122815136]
Test Case: 379 | Input/Output: [[-6.873153618951022 7] 0.12684638104897772]
Test Case: 380 | Input/Output: [[1.6200137026112884 55] 56.62001370261129]
Test Case: 381 | Input/Output: [[79.57645955323011 46] 125.57645955323011]
Test Case: 382 | Input/Output: [[-65.48501961905313 23] -42.48501961905313]
Test Case: 383 | Input/Output: [[16.37506814170122 66] 82.37506814170122]
Test Case: 384 | Input/Output: [[61.003833684113374 41] 102.00383368411337]
Test Case: 385 | Input/Output: [[-97.87288397230259 -41] -138.8728839723026]
Test Case: 386 | Input/Output: [[-65.23520939059868 -46] -111.23520939059868]
Test Case: 387 | Input/Output: [[-82.18422515641672 -49] -131.18422515641672]
Test Case: 388 | Input/Output: [[18.884642247096608 -93] -74.11535775290339]
Test Case: 389 | Input/Output: [[48.09744611444157 -82] -33.90255388555843]
Test Case: 390 | Input/Output: [[-33.29009338846541 74] 40.70990661153459]
Test Case: 391 | Input/Output: [[-99.05978538605311 -17] -116.05978538605311]
Test Case: 392 | Input/Output: [[-76.89302704075907 -5] -81.89302704075907]
Test Case: 393 | Input/Output: [[99.18324609646564 43] 142.18324609646564]
Test Case: 394 | Input/Output: [[-48.12822364084184 -97] -145.12822364084184]
Test Case: 395 | Input/Output: [[-89.42668353181756 -100] -189.42668353181756]
Test Case: 396 | Input/Output: [[99.93353498901232 67] 166.93353498901232]
Test Case: 397 | Input/Output: [[38.069415520681275 14] 52.069415520681275]
Test Case: 398 | Input/Output: [[-91.09516427613814 -17] -108.09516427613814]
Test Case: 399 | Input/Output: [[59.708622291208826 -76] -16.291377708791174]
Test Case: 400 | Input/Output: [[-9.398302251664603 87] 77.6016977483354]
Test Case: 401 | Input/Output: [[52.32064233304337 85] 137.32064233304337]
Test Case: 402 | Input/Output: [[94.3183703313733 15] 109.3183703313733]
Test Case: 403 | Input/Output: [[-99.56333345686612 27] -72.56333345686612]
Test Case: 404 | Input/Output: [[-55.62790975497776 -53] -108.62790975497776]
Test Case: 405 | Input/Output: [[51.65188216757187 45] 96.65188216757187]
Test Case: 406 | Input/Output: [[1.3556826121046868 -19] -17.644317387895313]
Test Case: 407 | Input/Output: [[25.030651026464355 -20] 5.030651026464355]
Test Case: 408 | Input/Output: [[17.45913258856713 59] 76.45913258856713]
Test Case: 409 | Input/Output: [[-92.20767759214962 22] -70.20767759214962]
Test Case: 410 | Input/Output: [[48.69786355367427 53] 101.69786355367427]
Test Case: 411 | Input/Output: [[71.95743470455525 -70] 1.9574347045552543]
Test Case: 412 | Input/Output: [[2.3557783217550394 1] 3.3557783217550394]
Test Case: 413 | Input/Output: [[13.810305481798807 -32] -18.189694518201193]
Test Case: 414 | Input/Output: [[-41.41635829853738 -33] -74.41635829853738]
Test Case: 415 | Input/Output: [[-80.89271316705482 29] -51.89271316705482]
Test Case: 416 | Input/Output: [[97.41511669062129 -33] 64.41511669062129]
Test Case: 417 | Input/Output: [[-98.65115649379777 43] -55.65115649379777]
Test Case: 418 | Input/Output: [[98.9510720424307 -32] 66.9510720424307]
Test Case: 419 | Input/Output: [[-25.625593728711763 46] 20.374406271288237]
Test Case: 420 | Input/Output: [[56.393241206998624 -52] 4.393241206998624]
Test Case: 421 | Input/Output: [[-58.503567250166725 69] 10.496432749833275]
Test Case: 422 | Input/Output: [[10.183881373649697 -31] -20.816118626350303]
Test Case: 423 | Input/Output: [[58.81875029067848 38] 96.81875029067848]
Test Case: 424 | Input/Output: [[51.86672185184051 18] 69.86672185184051]
Test Case: 425 | Input/Output: [[-60.6518769642969 -99] -159.6518769642969]
Test Case: 426 | Input/Output: [[-64.62159335373786 -58] -122.62159335373786]
Test Case: 427 | Input/Output: [[-63.16616354528419 -20] -83.16616354528419]
Test Case: 428 | Input/Output: [[-56.147488084201356 13] -43.147488084201356]
Test Case: 429 | Input/Output: [[-2.7883894093647683 63] 60.21161059063523]
Test Case: 430 | Input/Output: [[-71.79571797803095 61] -10.79571797803095]
Test Case: 431 | Input/Output: [[-9.483460166425857 29] 19.516539833574143]
Test Case: 432 | Input/Output: [[-65.67054113103931 54] -11.670541131039315]
Test Case: 433 | Input/Output: [[55.83959150928848 55] 110.83959150928848]
Test Case: 434 | Input/Output: [[75.92813226926395 -73] 2.928132269263955]
Test Case: 435 | Input/Output: [[-86.76062150586395 -26] -112.76062150586395]
Test Case: 436 | Input/Output: [[-74.5019520166027 -94] -168.5019520166027]
Test Case: 437 | Input/Output: [[-97.64158540105781 92] -5.64158540105781]
Test Case: 438 | Input/Output: [[96.30913512471051 -7] 89.30913512471051]
Test Case: 439 | Input/Output: [[-92.51369923401194 -10] -102.51369923401194]
Test Case: 440 | Input/Output: [[31.52941205728885 -50] -18.47058794271115]
Test Case: 441 | Input/Output: [[-86.34794670574529 23] -63.34794670574529]
Test Case: 442 | Input/Output: [[-21.282590078583084 -57] -78.28259007858308]
Test Case: 443 | Input/Output: [[33.57001192469443 80] 113.57001192469443]
Test Case: 444 | Input/Output: [[45.559805179166204 -43] 2.5598051791662044]
Test Case: 445 | Input/Output: [[-89.30819606103337 92] 2.691803938966629]
Test Case: 446 | Input/Output: [[-90.37326298118518 -47] -137.37326298118518]
Test Case: 447 | Input/Output: [[-7.692199978651672 -33] -40.69219997865167]
Test Case: 448 | Input/Output: [[-23.52697911556922 51] 27.47302088443078]
Test Case: 449 | Input/Output: [[84.41495655148557 77] 161.41495655148557]
Test Case: 450 | Input/Output: [[-43.424215996137505 93] 49.575784003862495]
Test Case: 451 | Input/Output: [[-44.12514372764625 -98] -142.12514372764625]
Test Case: 452 | Input/Output: [[1.2011345824073345 -73] -71.79886541759267]
Test Case: 453 | Input/Output: [[2.5326324933815982 -30] -27.4673675066184]
Test Case: 454 | Input/Output: [[99.40797148067867 -32] 67.40797148067867]
Test Case: 455 | Input/Output: [[-27.797169047509 -18] -45.797169047509]
Test Case: 456 | Input/Output: [[-90.25468908759183 -97] -187.25468908759183]
Test Case: 457 | Input/Output: [[63.28490883019066 52] 115.28490883019066]
Test Case: 458 | Input/Output: [[-59.465930204203275 -36] -95.46593020420327]
Test Case: 459 | Input/Output: [[-72.8531786109824 -54] -126.8531786109824]
Test Case: 460 | Input/Output: [[26.15809760668442 -50] -23.84190239331558]
Test Case: 461 | Input/Output: [[67.48005527321425 69] 136.48005527321425]
Test Case: 462 | Input/Output: [[-71.02693117023098 -81] -152.02693117023097]
Test Case: 463 | Input/Output: [[9.209234930255178 -89] -79.79076506974482]
Test Case: 464 | Input/Output: [[-89.7584221707894 -47] -136.7584221707894]
Test Case: 465 | Input/Output: [[-51.851438610901354 11] -40.851438610901354]
Test Case: 466 | Input/Output: [[-8.067466301944705 38] 29.932533698055295]
Test Case: 467 | Input/Output: [[33.063918405452455 73] 106.06391840545245]
Test Case: 468 | Input/Output: [[-81.79036749306682 -11] -92.79036749306682]
Test Case: 469 | Input/Output: [[-85.81702211714574 -34] -119.81702211714574]
Test Case: 470 | Input/Output: [[63.336055406020506 -42] 21.336055406020506]
Test Case: 471 | Input/Output: [[72.69295461159962 17] 89.69295461159962]
Test Case: 472 | Input/Output: [[-71.46562310862151 84] 12.534376891378486]
Test Case: 473 | Input/Output: [[72.02401074206597 -37] 35.02401074206597]
Test Case: 474 | Input/Output: [[-26.947677628105836 -12] -38.947677628105836]
Test Case: 475 | Input/Output: [[-23.207729048330577 -90] -113.20772904833058]
Test Case: 476 | Input/Output: [[17.368856120126424 73] 90.36885612012642]
Test Case: 477 | Input/Output: [[74.4472649931563 76] 150.4472649931563]
Test Case: 478 | Input/Output: [[-1.935540098465765 -48] -49.935540098465765]
Test Case: 479 | Input/Output: [[-88.94036807375477 -81] -169.94036807375477]
Test Case: 480 | Input/Output: [[57.60769325279466 -53] 4.607693252794661]
Test Case: 481 | Input/Output: [[-50.558925882629666 -34] -84.55892588262967]
Test Case: 482 | Input/Output: [[-8.461491415959841 62] 53.53850858404016]
Test Case: 483 | Input/Output: [[55.44490974439597 96] 151.44490974439597]
Test Case: 484 | Input/Output: [[34.213166727661985 4] 38.213166727661985]
Test Case: 485 | Input/Output: [[-65.68823565836843 28] -37.68823565836843]
Test Case: 486 | Input/Output: [[-55.970851371472506 -40] -95.9708513714725]
Test Case: 487 | Input/Output: [[84.55577149496406 43] 127.55577149496406]
Test Case: 488 | Input/Output: [[42.44858806473053 31] 73.44858806473053]
Test Case: 489 | Input/Output: [[45.39777563241361 47] 92.39777563241361]
Test Case: 490 | Input/Output: [[29.64127063739116 52] 81.64127063739116]
Test Case: 491 | Input/Output: [[-91.51283788441218 61] -30.51283788441218]
Test Case: 492 | Input/Output: [[95.08801037529608 31] 126.08801037529608]
Test Case: 493 | Input/Output: [[66.08661635048384 14] 80.08661635048384]
Test Case: 494 | Input/Output: [[-18.400102356192406 57] 38.599897643807594]
Test Case: 495 | Input/Output: [[55.84661547634394 12] 67.84661547634394]
Test Case: 496 | Input/Output: [[66.2014186027503 -32] 34.201418602750294]
Test Case: 497 | Input/Output: [[95.09850378763477 85] 180.09850378763477]
Test Case: 498 | Input/Output: [[-62.14219151874747 29] -33.14219151874747]
Test Case: 499 | Input/Output: [[3.45620813949634 -15] -11.54379186050366]
Test Case: 500 | Input/Output: [[32.05825794870702 68] 100.05825794870702]
Test Case: 501 | Input/Output: [[4.854407988926624 -19] -14.145592011073376]
Test Case: 502 | Input/Output: [[35.04153241114952 -86] -50.95846758885048]
Test Case: 503 | Input/Output: [[-88.7529125682851 33] -55.7529125682851]
Test Case: 504 | Input/Output: [[-13.191963904090514 23] 9.808036095909486]
Test Case: 505 | Input/Output: [[-54.1062951331293 -57] -111.1062951331293]
Test Case: 506 | Input/Output: [[-10.610370517846263 -95] -105.61037051784626]
Test Case: 507 | Input/Output: [[-6.531670650723882 52] 45.46832934927612]
Test Case: 508 | Input/Output: [[-60.829107758289226 54] -6.829107758289226]
Test Case: 509 | Input/Output: [[90.78773397576262 -79] 11.78773397576262]
Test Case: 510 | Input/Output: [[-46.79884576879145 -41] -87.79884576879145]
Test Case: 511 | Input/Output: [[97.62348632169306 -1] 96.62348632169306]
Test Case: 512 | Input/Output: [[58.6651305564651 74] 132.6651305564651]
Test Case: 513 | Input/Output: [[85.53108984663163 89] 174.53108984663163]
Test Case: 514 | Input/Output: [[-73.06343028426423 8] -65.06343028426423]
Test Case: 515 | Input/Output: [[20.264090349545683 60] 80.26409034954568]
Test Case: 516 | Input/Output: [[-81.50949266032535 25] -56.50949266032535]
Test Case: 517 | Input/Output: [[-78.49523480024388 -48] -126.49523480024388]
Test Case: 518 | Input/Output: [[-96.36454174070224 -28] -124.36454174070224]
Test Case: 519 | Input/Output: [[86.66690915861338 85] 171.66690915861338]
Test Case: 520 | Input/Output: [[88.50811536225513 34] 122.50811536225513]
Test Case: 521 | Input/Output: [[37.97659570095192 -66] -28.02340429904808]
Test Case: 522 | Input/Output: [[-11.597067967707304 37] 25.402932032292696]
Test Case: 523 | Input/Output: [[21.099129975157354 -86] -64.90087002484265]
Test Case: 524 | Input/Output: [[-97.22365806507813 -11] -108.22365806507813]
Test Case: 525 | Input/Output: [[-72.56408122851661 -28] -100.56408122851661]
Test Case: 526 | Input/Output: [[74.5829891341358 -42] 32.5829891341358]
Test Case: 527 | Input/Output: [[16.846517574656474 82] 98.84651757465647]
Test Case: 528 | Input/Output: [[21.673227124800064 13] 34.673227124800064]
Test Case: 529 | Input/Output: [[89.35022534310377 59] 148.35022534310377]
Test Case: 530 | Input/Output: [[76.48344566457831 14] 90.48344566457831]
Test Case: 531 | Input/Output: [[77.73603339435908 59] 136.73603339435908]
Test Case: 532 | Input/Output: [[76.45388507370086 45] 121.45388507370086]
Test Case: 533 | Input/Output: [[88.51744535086988 78] 166.51744535086988]
Test Case: 534 | Input/Output: [[5.021075120282248 94] 99.02107512028225]
Test Case: 535 | Input/Output: [[30.593787716478772 -13] 17.593787716478772]
Test Case: 536 | Input/Output: [[-39.36807743143744 -46] -85.36807743143744]
Test Case: 537 | Input/Output: [[47.56643462088584 29] 76.56643462088584]
Test Case: 538 | Input/Output: [[27.468319316064665 14] 41.468319316064665]
Test Case: 539 | Input/Output: [[82.53780270270408 -58] 24.537802702704084]
Test Case: 540 | Input/Output: [[73.9290778392353 50] 123.9290778392353]
Test Case: 541 | Input/Output: [[-53.88497092830793 25] -28.88497092830793]
Test Case: 542 | Input/Output: [[-47.898216797771994 -79] -126.898216797772]
Test Case: 543 | Input/Output: [[-69.09541731039386 -91] -160.09541731039386]
Test Case: 544 | Input/Output: [[61.51403653428832 24] 85.51403653428832]
Test Case: 545 | Input/Output: [[1.572380858481992 -36] -34.42761914151801]
Test Case: 546 | Input/Output: [[70.34318739120113 76] 146.34318739120113]
Test Case: 547 | Input/Output: [[-73.63046513374765 -90] -163.63046513374763]
Test Case: 548 | Input/Output: [[59.50059082961067 34] 93.50059082961067]
Test Case: 549 | Input/Output: [[-91.96479813204088 52] -39.96479813204088]
Test Case: 550 | Input/Output: [[66.8221375870886 4] 70.8221375870886]
Test Case: 551 | Input/Output: [[-19.639555262260515 -9] -28.639555262260515]
Test Case: 552 | Input/Output: [[-94.513697713628 -36] -130.513697713628]
Test Case: 553 | Input/Output: [[-48.782209226974736 78] 29.217790773025264]
Test Case: 554 | Input/Output: [[79.96004544833937 16] 95.96004544833937]
Test Case: 555 | Input/Output: [[25.20140070727166 32] 57.20140070727166]
Test Case: 556 | Input/Output: [[-11.911490446944924 61] 49.088509553055076]
Test Case: 557 | Input/Output: [[64.29481115627837 90] 154.29481115627837]
Test Case: 558 | Input/Output: [[99.37981440930736 -30] 69.37981440930736]
Test Case: 559 | Input/Output: [[-14.556173169408467 67] 52.44382683059153]
Test Case: 560 | Input/Output: [[-45.88297132695842 -67] -112.88297132695843]
Test Case: 561 | Input/Output: [[89.85411146871019 -24] 65.85411146871019]
Test Case: 562 | Input/Output: [[-30.885146970499818 49] 18.114853029500182]
Test Case: 563 | Input/Output: [[7.970965636355018 -82] -74.02903436364498]
Test Case: 564 | Input/Output: [[44.32623185492895 63] 107.32623185492895]
Test Case: 565 | Input/Output: [[87.41835734501342 10] 97.41835734501342]
Test Case: 566 | Input/Output: [[-79.4978282960652 -25] -104.4978282960652]
Test Case: 567 | Input/Output: [[-35.44854138150512 -7] -42.44854138150512]
Test Case: 568 | Input/Output: [[-2.704711983520383 -70] -72.70471198352038]
Test Case: 569 | Input/Output: [[-54.128941783167804 52] -2.1289417831678037]
Test Case: 570 | Input/Output: [[-6.438762421426404 31] 24.561237578573596]
Test Case: 571 | Input/Output: [[-38.50915428280297 -31] -69.50915428280297]
Test Case: 572 | Input/Output: [[45.66829131408659 95] 140.6682913140866]
Test Case: 573 | Input/Output: [[74.66452095395806 -77] -2.3354790460419395]
Test Case: 574 | Input/Output: [[56.66543030594582 -62] -5.334569694054181]
Test Case: 575 | Input/Output: [[-19.597444535440147 37] 17.402555464559853]
Test Case: 576 | Input/Output: [[-41.159231484608895 -59] -100.1592314846089]
Test Case: 577 | Input/Output: [[-80.05776967213853 -91] -171.05776967213853]
Test Case: 578 | Input/Output: [[-26.35190991652989 -68] -94.35190991652989]
Test Case: 579 | Input/Output: [[61.90549233230155 6] 67.90549233230155]
Test Case: 580 | Input/Output: [[13.549432819535994 -55] -41.450567180464006]
Test Case: 581 | Input/Output: [[85.07213025293962 -35] 50.072130252939616]
Test Case: 582 | Input/Output: [[-1.3179543380286844 2] 0.6820456619713156]
Test Case: 583 | Input/Output: [[-55.34506267913215 31] -24.34506267913215]
Test Case: 584 | Input/Output: [[-58.34326321100956 -87] -145.34326321100957]
Test Case: 585 | Input/Output: [[30.92201841646167 57] 87.92201841646167]
Test Case: 586 | Input/Output: [[63.094143381042215 -9] 54.094143381042215]
Test Case: 587 | Input/Output: [[77.61418347396574 31] 108.61418347396574]
Test Case: 588 | Input/Output: [[-45.4174222405731 83] 37.5825777594269]
Test Case: 589 | Input/Output: [[-45.78729167977493 85] 39.21270832022507]
Test Case: 590 | Input/Output: [[-65.20359614209971 -57] -122.20359614209971]
Test Case: 591 | Input/Output: [[76.89894050897911 85] 161.8989405089791]
Test Case: 592 | Input/Output: [[-32.6797079400484 42] 9.320292059951598]
Test Case: 593 | Input/Output: [[48.66005803074182 -66] -17.339941969258177]
Test Case: 594 | Input/Output: [[-23.08880099834036 56] 32.91119900165964]
Test Case: 595 | Input/Output: [[-30.11872620122766 -79] -109.11872620122766]
Test Case: 596 | Input/Output: [[15.615648916217225 -34] -18.384351083782775]
Test Case: 597 | Input/Output: [[92.17233957790077 99] 191.17233957790077]
Test Case: 598 | Input/Output: [[67.86385596265978 -58] 9.863855962659784]
Test Case: 599 | Input/Output: [[-43.668245294255684 6] -37.668245294255684]
Test Case: 600 | Input/Output: [[-93.18589606399001 -23] -116.18589606399001]
Test Case: 601 | Input/Output: [[-8.757694433943783 -71] -79.75769443394378]
Test Case: 602 | Input/Output: [[46.00222733627629 -41] 5.002227336276292]
Test Case: 603 | Input/Output: [[45.980222661873796 21] 66.9802226618738]
Test Case: 604 | Input/Output: [[91.1753822033107 -7] 84.1753822033107]
Test Case: 605 | Input/Output: [[26.58174226417738 40] 66.58174226417738]
Test Case: 606 | Input/Output: [[-28.36572392307444 -7] -35.36572392307444]
Test Case: 607 | Input/Output: [[43.29695046489829 41] 84.29695046489829]
Test Case: 608 | Input/Output: [[-79.13051625595708 -28] -107.13051625595708]
Test Case: 609 | Input/Output: [[7.434551159610336 -86] -78.56544884038966]
Test Case: 610 | Input/Output: [[28.987305659533547 20] 48.98730565953355]
Test Case: 611 | Input/Output: [[-69.92132656733385 64] -5.92132656733385]
Test Case: 612 | Input/Output: [[-52.408551830299245 -70] -122.40855183029925]
Test Case: 613 | Input/Output: [[-33.923736672826394 -45] -78.9237366728264]
Test Case: 614 | Input/Output: [[-54.542135621214925 8] -46.542135621214925]
Test Case: 615 | Input/Output: [[47.96860968733753 81] 128.96860968733753]
Test Case: 616 | Input/Output: [[-85.0072919166069 -16] -101.0072919166069]
Test Case: 617 | Input/Output: [[71.78866359900894 -14] 57.78866359900894]
Test Case: 618 | Input/Output: [[19.925648277756466 62] 81.92564827775647]
Test Case: 619 | Input/Output: [[-73.78777199084593 10] -63.787771990845926]
Test Case: 620 | Input/Output: [[3.875936909994593 73] 76.87593690999459]
Test Case: 621 | Input/Output: [[-2.193785010690547 -84] -86.19378501069055]
Test Case: 622 | Input/Output: [[-84.87711924164225 81] -3.877119241642248]
Test Case: 623 | Input/Output: [[6.869974282981545 -38] -31.130025717018455]
Test Case: 624 | Input/Output: [[35.10418560498047 45] 80.10418560498047]
Test Case: 625 | Input/Output: [[-59.77178499458995 71] 11.22821500541005]
Test Case: 626 | Input/Output: [[3.2375569679991685 1] 4.2375569679991685]
Test Case: 627 | Input/Output: [[-45.77977204495516 12] -33.77977204495516]
Test Case: 628 | Input/Output: [[53.450929013484625 45] 98.45092901348463]
Test Case: 629 | Input/Output: [[-70.4408088430573 -99] -169.4408088430573]
Test Case: 630 | Input/Output: [[19.676132425339816 53] 72.67613242533982]
Test Case: 631 | Input/Output: [[-11.557974138770959 28] 16.44202586122904]
Test Case: 632 | Input/Output: [[-59.621038608822886 -61] -120.62103860882289]
Test Case: 633 | Input/Output: [[-1.31292660482994 82] 80.68707339517006]
Test Case: 634 | Input/Output: [[-74.18394657055565 9] -65.18394657055565]
Test Case: 635 | Input/Output: [[-39.0932556303718 -23] -62.0932556303718]
Test Case: 636 | Input/Output: [[-24.443441679721076 75] 50.556558320278924]
Test Case: 637 | Input/Output: [[-49.70881585077136 0] -49.70881585077136]
Test Case: 638 | Input/Output: [[-64.38615020207988 -40] -104.38615020207988]
Test Case: 639 | Input/Output: [[-64.69457828744055 -78] -142.69457828744055]
Test Case: 640 | Input/Output: [[-91.13070482261303 -54] -145.13070482261304]
Test Case: 641 | Input/Output: [[21.843504334772206 11] 32.843504334772206]
Test Case: 642 | Input/Output: [[-71.95313959172086 48] -23.953139591720856]
Test Case: 643 | Input/Output: [[-28.362374149070305 -54] -82.3623741490703]
Test Case: 644 | Input/Output: [[-73.10312052709796 0] -73.10312052709796]
Test Case: 645 | Input/Output: [[-56.3566383665645 -98] -154.3566383665645]
Test Case: 646 | Input/Output: [[-3.245158852809354 -38] -41.245158852809354]
Test Case: 647 | Input/Output: [[77.05925920136752 -82] -4.940740798632476]
Test Case: 648 | Input/Output: [[21.219447347510624 23] 44.219447347510624]
Test Case: 649 | Input/Output: [[-49.26751461958061 45] -4.267514619580609]
Test Case: 650 | Input/Output: [[-12.415044025235673 67] 54.58495597476433]
Test Case: 651 | Input/Output: [[-16.31708125071492 80] 63.68291874928508]
Test Case: 652 | Input/Output: [[-84.73520903057612 -18] -102.73520903057612]
Test Case: 653 | Input/Output: [[-43.331484653445386 -9] -52.331484653445386]
Test Case: 654 | Input/Output: [[53.266362766347896 -78] -24.733637233652104]
Test Case: 655 | Input/Output: [[-79.08061384048399 -42] -121.08061384048399]
Test Case: 656 | Input/Output: [[32.20008469622215 -95] -62.79991530377785]
Test Case: 657 | Input/Output: [[-52.255312408722496 28] -24.255312408722496]
Test Case: 658 | Input/Output: [[-28.372838553864142 -57] -85.37283855386414]
Test Case: 659 | Input/Output: [[60.28793384162921 -12] 48.28793384162921]
Test Case: 660 | Input/Output: [[54.444934797885736 -23] 31.444934797885736]
Test Case: 661 | Input/Output: [[-72.24917889099294 -13] -85.24917889099294]
Test Case: 662 | Input/Output: [[33.562000340015146 86] 119.56200034001515]
Test Case: 663 | Input/Output: [[-38.588370223524635 78] 39.411629776475365]
Test Case: 664 | Input/Output: [[75.295571084676 20] 95.295571084676]
Test Case: 665 | Input/Output: [[48.843001820352015 57] 105.84300182035201]
Test Case: 666 | Input/Output: [[30.77998389309454 54] 84.77998389309454]
Test Case: 667 | Input/Output: [[-43.34950212531474 -51] -94.34950212531474]
Test Case: 668 | Input/Output: [[-19.16885049472245 -21] -40.16885049472245]
Test Case: 669 | Input/Output: [[-70.53193906994339 -22] -92.53193906994339]
Test Case: 670 | Input/Output: [[-97.32558377842786 80] -17.325583778427855]
Test Case: 671 | Input/Output: [[47.06525795301383 -33] 14.065257953013827]
Test Case: 672 | Input/Output: [[-37.62971486571804 11] -26.629714865718043]
Test Case: 673 | Input/Output: [[-57.930647379450576 55] -2.9306473794505763]
Test Case: 674 | Input/Output: [[22.76259407517685 41] 63.76259407517685]
Test Case: 675 | Input/Output: [[-23.378055803156556 -37] -60.378055803156556]
Test Case: 676 | Input/Output: [[-75.91358242065638 55] -20.913582420656383]
Test Case: 677 | Input/Output: [[55.22438416373572 96] 151.22438416373572]
Test Case: 678 | Input/Output: [[-44.449510835107866 -4] -48.449510835107866]
Test Case: 679 | Input/Output: [[-64.79266446361882 61] -3.79266446361882]
Test Case: 680 | Input/Output: [[-30.231930636406574 52] 21.768069363593426]
Test Case: 681 | Input/Output: [[54.126831271001976 70] 124.12683127100198]
Test Case: 682 | Input/Output: [[-87.54504464695982 -82] -169.5450446469598]
Test Case: 683 | Input/Output: [[68.16509982879649 -66] 2.1650998287964853]
Test Case: 684 | Input/Output: [[-8.621948306895177 -81] -89.62194830689518]
Test Case: 685 | Input/Output: [[-30.638301163081437 -70] -100.63830116308144]
Test Case: 686 | Input/Output: [[73.44680628632986 11] 84.44680628632986]
Test Case: 687 | Input/Output: [[-96.3193250715497 -16] -112.3193250715497]
Test Case: 688 | Input/Output: [[46.5060974377958 9] 55.5060974377958]
Test Case: 689 | Input/Output: [[86.34150935348589 53] 139.3415093534859]
Test Case: 690 | Input/Output: [[88.85662665093781 -18] 70.85662665093781]
Test Case: 691 | Input/Output: [[9.505367520210228 44] 53.50536752021023]
Test Case: 692 | Input/Output: [[37.84301194327057 -46] -8.156988056729432]
Test Case: 693 | Input/Output: [[90.89107240736809 81] 171.89107240736809]
Test Case: 694 | Input/Output: [[-96.43785095051445 -98] -194.43785095051445]
Test Case: 695 | Input/Output: [[8.172364683130738 -83] -74.82763531686926]
Test Case: 696 | Input/Output: [[27.50822232582773 20] 47.50822232582773]
Test Case: 697 | Input/Output: [[50.507266390509045 -68] -17.492733609490955]
Test Case: 698 | Input/Output: [[-69.95423012200534 -70] -139.95423012200536]
Test Case: 699 | Input/Output: [[60.04404676828571 -89] -28.95595323171429]
Test Case: 700 | Input/Output: [[33.383479410104286 -20] 13.383479410104286]
Test Case: 701 | Input/Output: [[-67.28411760779252 18] -49.284117607792524]
Test Case: 702 | Input/Output: [[-19.53203349013917 -60] -79.53203349013917]
Test Case: 703 | Input/Output: [[59.80620254014596 -45] 14.80620254014596]
Test Case: 704 | Input/Output: [[26.304710084112685 -64] -37.695289915887315]
Test Case: 705 | Input/Output: [[83.88663203718747 56] 139.88663203718747]
Test Case: 706 | Input/Output: [[51.63623535671715 35] 86.63623535671715]
Test Case: 707 | Input/Output: [[-29.609370080611768 64] 34.39062991938823]
Test Case: 708 | Input/Output: [[88.73427081978863 -68] 20.734270819788634]
Test Case: 709 | Input/Output: [[-69.10947961995342 -92] -161.10947961995342]
Test Case: 710 | Input/Output: [[-88.20722517987923 51] -37.20722517987923]
Test Case: 711 | Input/Output: [[-74.6936324606158 -83] -157.6936324606158]
Test Case: 712 | Input/Output: [[-43.62721263326477 25] -18.62721263326477]
Test Case: 713 | Input/Output: [[27.302946006084312 -72] -44.69705399391569]
Test Case: 714 | Input/Output: [[-31.84556216356249 -28] -59.84556216356249]
Test Case: 715 | Input/Output: [[46.08011300099807 -10] 36.08011300099807]
Test Case: 716 | Input/Output: [[26.667728591305078 52] 78.66772859130508]
Test Case: 717 | Input/Output: [[95.83882180730365 -20] 75.83882180730365]
Test Case: 718 | Input/Output: [[3.110026047456472 -70] -66.88997395254353]
Test Case: 719 | Input/Output: [[-86.70458732228722 -32] -118.70458732228722]
Test Case: 720 | Input/Output: [[39.706287611426575 75] 114.70628761142657]
Test Case: 721 | Input/Output: [[-39.71000516546497 -7] -46.71000516546497]
Test Case: 722 | Input/Output: [[4.384429479764364 -57] -52.615570520235636]
Test Case: 723 | Input/Output: [[70.47226247035496 -67] 3.4722624703549627]
Test Case: 724 | Input/Output: [[-29.472337373571307 -56] -85.4723373735713]
Test Case: 725 | Input/Output: [[66.25278789783968 -69] -2.7472121021603186]
Test Case: 726 | Input/Output: [[-11.576773240284723 6] -5.576773240284723]
Test Case: 727 | Input/Output: [[-90.3736722454936 35] -55.373672245493594]
Test Case: 728 | Input/Output: [[-19.593273103132987 -22] -41.59327310313299]
Test Case: 729 | Input/Output: [[96.71139764510406 26] 122.71139764510406]
Test Case: 730 | Input/Output: [[-14.916028413398323 79] 64.08397158660168]
Test Case: 731 | Input/Output: [[19.27784295514006 -31] -11.72215704485994]
Test Case: 732 | Input/Output: [[2.2578737127387853 -73] -70.74212628726121]
Test Case: 733 | Input/Output: [[38.71142576450711 -58] -19.288574235492888]
Test Case: 734 | Input/Output: [[39.94768095435302 -82] -42.05231904564698]
Test Case: 735 | Input/Output: [[-6.737538911080975 -51] -57.737538911080975]
Test Case: 736 | Input/Output: [[23.903359794763617 -60] -36.09664020523638]
Test Case: 737 | Input/Output: [[54.290881116307304 38] 92.2908811163073]
Test Case: 738 | Input/Output: [[10.347920720471308 68] 78.34792072047131]
Test Case: 739 | Input/Output: [[76.02630922222357 28] 104.02630922222357]
Test Case: 740 | Input/Output: [[-20.698012019457508 33] 12.301987980542492]
Test Case: 741 | Input/Output: [[-75.76416576278467 50] -25.76416576278467]
Test Case: 742 | Input/Output: [[-60.42510495236131 -94] -154.42510495236132]
Test Case: 743 | Input/Output: [[98.73437460665443 67] 165.73437460665443]
Test Case: 744 | Input/Output: [[-84.74302422319289 -99] -183.7430242231929]
Test Case: 745 | Input/Output: [[21.878745908590275 11] 32.878745908590275]
Test Case: 746 | Input/Output: [[-32.39280624284507 -27] -59.39280624284507]
Test Case: 747 | Input/Output: [[44.400268628152475 -22] 22.400268628152475]
Test Case: 748 | Input/Output: [[85.6645715039059 -54] 31.664571503905904]
Test Case: 749 | Input/Output: [[1.7185344176553912 100] 101.71853441765539]
Test Case: 750 | Input/Output: [[-61.54670419974355 98] 36.45329580025645]
Test Case: 751 | Input/Output: [[-51.63299792381177 74] 22.36700207618823]
Test Case: 752 | Input/Output: [[68.81963363260621 45] 113.81963363260621]
Test Case: 753 | Input/Output: [[86.79610017705426 -29] 57.79610017705426]
Test Case: 754 | Input/Output: [[61.410870221631285 30] 91.41087022163128]
Test Case: 755 | Input/Output: [[69.14254261384804 100] 169.14254261384804]
Test Case: 756 | Input/Output: [[84.80533647536623 39] 123.80533647536623]
Test Case: 757 | Input/Output: [[-76.56833491691776 46] -30.568334916917763]
Test Case: 758 | Input/Output: [[24.59054858325021 74] 98.59054858325021]
Test Case: 759 | Input/Output: [[-94.14382777649908 22] -72.14382777649908]
Test Case: 760 | Input/Output: [[-85.25302143274716 75] -10.253021432747161]
Test Case: 761 | Input/Output: [[17.52250272693749 99] 116.52250272693749]
Test Case: 762 | Input/Output: [[12.66847707498782 -81] -68.33152292501218]
Test Case: 763 | Input/Output: [[40.50505935626407 -78] -37.49494064373593]
Test Case: 764 | Input/Output: [[-55.475521759597804 58] 2.524478240402196]
Test Case: 765 | Input/Output: [[14.894251854626589 -92] -77.10574814537341]
Test Case: 766 | Input/Output: [[-15.28632304749533 76] 60.71367695250467]
Test Case: 767 | Input/Output: [[41.80360701372828 -98] -56.19639298627172]
Test Case: 768 | Input/Output: [[-63.53386013171702 -44] -107.53386013171702]
Test Case: 769 | Input/Output: [[-7.203523737088219 79] 71.79647626291178]
Test Case: 770 | Input/Output: [[-40.81056325816148 80] 39.18943674183852]
Test Case: 771 | Input/Output: [[9.547068173561087 28] 37.54706817356109]
Test Case: 772 | Input/Output: [[-19.07170730778411 -6] -25.07170730778411]
Test Case: 773 | Input/Output: [[53.75424218061568 95] 148.75424218061568]
Test Case: 774 | Input/Output: [[5.7094551452260305 -70] -64.29054485477397]
Test Case: 775 | Input/Output: [[52.51959979883429 -54] -1.4804002011657076]
Test Case: 776 | Input/Output: [[-83.24454850005694 10] -73.24454850005694]
Test Case: 777 | Input/Output: [[-1.9251940968886743 53] 51.074805903111326]
Test Case: 778 | Input/Output: [[-91.04920445285423 13] -78.04920445285423]
Test Case: 779 | Input/Output: [[82.65224921537316 55] 137.65224921537316]
Test Case: 780 | Input/Output: [[-1.9216402370181953 -69] -70.9216402370182]
Test Case: 781 | Input/Output: [[63.016491498113595 89] 152.0164914981136]
Test Case: 782 | Input/Output: [[-39.62587271203819 42] 2.3741272879618123]
Test Case: 783 | Input/Output: [[-25.70396139201901 -77] -102.70396139201901]
Test Case: 784 | Input/Output: [[-7.5737742902841205 -27] -34.57377429028412]
Test Case: 785 | Input/Output: [[64.93424234740257 83] 147.93424234740257]
Test Case: 786 | Input/Output: [[70.20113207538344 16] 86.20113207538344]
Test Case: 787 | Input/Output: [[-57.55032632796069 -44] -101.55032632796069]
Test Case: 788 | Input/Output: [[-38.395139620773236 13] -25.395139620773236]
Test Case: 789 | Input/Output: [[80.38571339999078 88] 168.38571339999078]
Test Case: 790 | Input/Output: [[59.402399031835984 26] 85.40239903183598]
Test Case: 791 | Input/Output: [[85.3823660207994 -40] 45.382366020799395]
Test Case: 792 | Input/Output: [[10.945126417215278 -5] 5.945126417215278]
Test Case: 793 | Input/Output: [[71.2891005389925 -54] 17.2891005389925]
Test Case: 794 | Input/Output: [[7.10625973534998 -25] -17.89374026465002]
Test Case: 795 | Input/Output: [[96.38452140661846 -65] 31.38452140661846]
Test Case: 796 | Input/Output: [[86.91689332612364 3] 89.91689332612364]
Test Case: 797 | Input/Output: [[-84.16322076410027 57] -27.163220764100274]
Test Case: 798 | Input/Output: [[-85.54216097544555 -57] -142.54216097544554]
Test Case: 799 | Input/Output: [[74.94749057630585 -57] 17.947490576305853]
Test Case: 800 | Input/Output: [[66.6353570494492 28] 94.6353570494492]
Test Case: 801 | Input/Output: [[-57.19595681808853 -93] -150.19595681808852]
Test Case: 802 | Input/Output: [[-67.07765599796036 -48] -115.07765599796036]
Test Case: 803 | Input/Output: [[74.09452414830494 49] 123.09452414830494]
Test Case: 804 | Input/Output: [[-8.18605663908663 41] 32.81394336091337]
Test Case: 805 | Input/Output: [[-52.48194280845695 -60] -112.48194280845695]
Test Case: 806 | Input/Output: [[-11.328789838913053 -18] -29.328789838913053]
Test Case: 807 | Input/Output: [[-54.00444727411637 -89] -143.0044472741164]
Test Case: 808 | Input/Output: [[46.43057990931436 -77] -30.56942009068564]
Test Case: 809 | Input/Output: [[28.222203394455335 27] 55.222203394455335]
Test Case: 810 | Input/Output: [[-91.79568513842989 97] 5.204314861570111]
Test Case: 811 | Input/Output: [[75.9003578035177 -71] 4.900357803517693]
Test Case: 812 | Input/Output: [[22.482736250972508 -57] -34.51726374902749]
Test Case: 813 | Input/Output: [[-45.83983572120995 -30] -75.83983572120995]
Test Case: 814 | Input/Output: [[0.5844712801401215 74] 74.58447128014012]
Test Case: 815 | Input/Output: [[75.9082011254969 -75] 0.9082011254969018]
Test Case: 816 | Input/Output: [[7.858038376285265 -43] -35.141961623714735]
Test Case: 817 | Input/Output: [[-20.82003673531476 90] 69.17996326468524]
Test Case: 818 | Input/Output: [[47.081337459200626 81] 128.08133745920063]
Test Case: 819 | Input/Output: [[73.57264994761948 78] 151.57264994761948]
Test Case: 820 | Input/Output: [[-64.05836351448696 -81] -145.05836351448696]
Test Case: 821 | Input/Output: [[88.3373927060041 -44] 44.337392706004096]
Test Case: 822 | Input/Output: [[78.28948492830705 -4] 74.28948492830705]
Test Case: 823 | Input/Output: [[47.397682471177234 14] 61.397682471177234]
Test Case: 824 | Input/Output: [[88.70160944234502 -91] -2.298390557654983]
Test Case: 825 | Input/Output: [[92.45644754441884 63] 155.45644754441884]
Test Case: 826 | Input/Output: [[29.847105317973046 -36] -6.152894682026954]
Test Case: 827 | Input/Output: [[-78.24118797350565 69] -9.241187973505646]
Test Case: 828 | Input/Output: [[53.78241602480051 13] 66.78241602480051]
Test Case: 829 | Input/Output: [[91.17842190098838 8] 99.17842190098838]
Test Case: 830 | Input/Output: [[91.92598661848251 -47] 44.92598661848251]
Test Case: 831 | Input/Output: [[-76.36481686023524 -17] -93.36481686023524]
Test Case: 832 | Input/Output: [[-32.25099769630387 43] 10.74900230369613]
Test Case: 833 | Input/Output: [[-65.76780559145301 85] 19.232194408546988]
Test Case: 834 | Input/Output: [[-75.14684665940341 82] 6.853153340596592]
Test Case: 835 | Input/Output: [[-74.3869279750438 -8] -82.3869279750438]
Test Case: 836 | Input/Output: [[98.03678289076416 -39] 59.03678289076416]
Test Case: 837 | Input/Output: [[62.57533939630224 -36] 26.57533939630224]
Test Case: 838 | Input/Output: [[-13.603698160798942 -57] -70.60369816079894]
Test Case: 839 | Input/Output: [[-35.07901886023201 -77] -112.07901886023201]
Test Case: 840 | Input/Output: [[-16.227796147259866 -21] -37.227796147259866]
Test Case: 841 | Input/Output: [[-86.02059949524241 99] 12.979400504757592]
Test Case: 842 | Input/Output: [[39.1630294285232 94] 133.1630294285232]
Test Case: 843 | Input/Output: [[0.7974636407710705 -46] -45.20253635922893]
Test Case: 844 | Input/Output: [[32.035782168552345 -31] 1.0357821685523447]
Test Case: 845 | Input/Output: [[-79.59693851892058 30] -49.59693851892058]
Test Case: 846 | Input/Output: [[34.042351344872515 -62] -27.957648655127485]
Test Case: 847 | Input/Output: [[-27.381704303605915 -11] -38.381704303605915]
Test Case: 848 | Input/Output: [[-50.248504589850526 -32] -82.24850458985053]
Test Case: 849 | Input/Output: [[65.20211413855665 4] 69.20211413855665]
Test Case: 850 | Input/Output: [[26.71196441200317 59] 85.71196441200317]
Test Case: 851 | Input/Output: [[33.799055669086385 -58] -24.200944330913615]
Test Case: 852 | Input/Output: [[-74.96699416742554 24] -50.96699416742554]
Test Case: 853 | Input/Output: [[7.393207963068107 -6] 1.3932079630681073]
Test Case: 854 | Input/Output: [[-23.492397666964223 -6] -29.492397666964223]
Test Case: 855 | Input/Output: [[-7.796694267542989 -15] -22.79669426754299]
Test Case: 856 | Input/Output: [[-31.89463423450134 15] -16.89463423450134]
Test Case: 857 | Input/Output: [[67.67975538930938 -92] -24.320244610690622]
Test Case: 858 | Input/Output: [[44.69821428081872 -60] -15.301785719181282]
Test Case: 859 | Input/Output: [[5.828211715664409 72] 77.82821171566441]
Test Case: 860 | Input/Output: [[-31.56645332723707 -86] -117.56645332723707]
Test Case: 861 | Input/Output: [[4.592109135822199 25] 29.5921091358222]
Test Case: 862 | Input/Output: [[-7.2240719530737465 96] 88.77592804692625]
Test Case: 863 | Input/Output: [[48.6851741210987 53] 101.6851741210987]
Test Case: 864 | Input/Output: [[83.29509969057224 -92] -8.704900309427757]
Test Case: 865 | Input/Output: [[-29.181183685574325 -97] -126.18118368557433]
Test Case: 866 | Input/Output: [[38.50464945972573 -18] 20.504649459725727]
Test Case: 867 | Input/Output: [[44.94669478799199 13] 57.94669478799199]
Test Case: 868 | Input/Output: [[84.27448358727077 -28] 56.274483587270765]
Test Case: 869 | Input/Output: [[83.78634810798903 -52] 31.786348107989028]
Test Case: 870 | Input/Output: [[-88.11367079677346 58] -30.113670796773462]
Test Case: 871 | Input/Output: [[-61.6530882993398 40] -21.6530882993398]
Test Case: 872 | Input/Output: [[94.3282334037448 4] 98.3282334037448]
Test Case: 873 | Input/Output: [[20.767321106028817 78] 98.76732110602882]
Test Case: 874 | Input/Output: [[33.54702347349877 86] 119.54702347349877]
Test Case: 875 | Input/Output: [[22.97204241311161 72] 94.97204241311161]
Test Case: 876 | Input/Output: [[81.45031991922164 67] 148.45031991922164]
Test Case: 877 | Input/Output: [[3.2443123170779558 -59] -55.755687682922044]
Test Case: 878 | Input/Output: [[-39.421778622628565 -81] -120.42177862262857]
Test Case: 879 | Input/Output: [[-20.744139638067892 9] -11.744139638067892]
Test Case: 880 | Input/Output: [[-7.886003881367017 7] -0.8860038813670172]
Test Case: 881 | Input/Output: [[-33.41511051926966 93] 59.58488948073034]
Test Case: 882 | Input/Output: [[99.3227175521805 4] 103.3227175521805]
Test Case: 883 | Input/Output: [[76.1417059394133 91] 167.1417059394133]
Test Case: 884 | Input/Output: [[48.93361668846467 66] 114.93361668846467]
Test Case: 885 | Input/Output: [[85.24200876828067 45] 130.24200876828067]
Test Case: 886 | Input/Output: [[-54.8516272871018 42] -12.851627287101799]
Test Case: 887 | Input/Output: [[-18.55955612659062 -26] -44.55955612659062]
Test Case: 888 | Input/Output: [[90.75931406188579 -90] 0.7593140618857888]
Test Case: 889 | Input/Output: [[69.64425746616618 -17] 52.64425746616618]
Test Case: 890 | Input/Output: [[37.27674168504899 -58] -20.72325831495101]
Test Case: 891 | Input/Output: [[-80.47277876920758 -3] -83.47277876920758]
Test Case: 892 | Input/Output: [[70.33096957965134 -48] 22.330969579651338]
Test Case: 893 | Input/Output: [[-86.04652647701745 -2] -88.04652647701745]
Test Case: 894 | Input/Output: [[-28.398135509413194 -26] -54.398135509413194]
Test Case: 895 | Input/Output: [[24.355373915993965 79] 103.35537391599397]
Test Case: 896 | Input/Output: [[2.3962413289780216 -22] -19.60375867102198]
Test Case: 897 | Input/Output: [[52.42781803541291 -59] -6.572181964587088]
Test Case: 898 | Input/Output: [[33.44152253703524 -1] 32.44152253703524]
Test Case: 899 | Input/Output: [[42.48911059500665 52] 94.48911059500665]
Test Case: 900 | Input/Output: [[11.142048754277482 -34] -22.857951245722518]
Test Case: 901 | Input/Output: [[-26.503688497858576 -60] -86.50368849785858]
Test Case: 902 | Input/Output: [[-19.697575409306637 13] -6.697575409306637]
Test Case: 903 | Input/Output: [[-2.668800752252821 -65] -67.66880075225282]
Test Case: 904 | Input/Output: [[-12.005599823402548 -1] -13.005599823402548]
Test Case: 905 | Input/Output: [[34.739390373925005 68] 102.739390373925]
Test Case: 906 | Input/Output: [[52.54904447770227 -30] 22.549044477702267]
Test Case: 907 | Input/Output: [[24.16077373262256 -36] -11.839226267377441]
Test Case: 908 | Input/Output: [[-2.7005102559056695 -46] -48.70051025590567]
Test Case: 909 | Input/Output: [[19.42206469102794 83] 102.42206469102794]
Test Case: 910 | Input/Output: [[12.453116619561058 -28] -15.546883380438942]
Test Case: 911 | Input/Output: [[-31.87963248733574 91] 59.12036751266426]
Test Case: 912 | Input/Output: [[45.71369518332597 93] 138.71369518332597]
Test Case: 913 | Input/Output: [[62.9012263461745 27] 89.9012263461745]
Test Case: 914 | Input/Output: [[2.566105829381641 46] 48.56610582938164]
Test Case: 915 | Input/Output: [[-18.201061268795414 -47] -65.20106126879541]
Test Case: 916 | Input/Output: [[-44.852587424869284 47] 2.1474125751307156]
Test Case: 917 | Input/Output: [[63.6128093476392 -41] 22.6128093476392]
Test Case: 918 | Input/Output: [[-30.046547977210466 -98] -128.04654797721048]
Test Case: 919 | Input/Output: [[33.124220839698836 -48] -14.875779160301164]
Test Case: 920 | Input/Output: [[39.64948108512644 -84] -44.35051891487356]
Test Case: 921 | Input/Output: [[-40.73049439269387 87] 46.26950560730613]
Test Case: 922 | Input/Output: [[4.1904823230251225 81] 85.19048232302512]
Test Case: 923 | Input/Output: [[64.8468747553784 -42] 22.846874755378394]
Test Case: 924 | Input/Output: [[-19.27046666090331 16] -3.2704666609033097]
Test Case: 925 | Input/Output: [[-79.70456904711307 -66] -145.70456904711307]
Test Case: 926 | Input/Output: [[33.22166489986142 -65] -31.778335100138577]
Test Case: 927 | Input/Output: [[-76.4112769173418 -62] -138.4112769173418]
Test Case: 928 | Input/Output: [[-8.634188935586849 -98] -106.63418893558685]
Test Case: 929 | Input/Output: [[-57.95106887269381 64] 6.04893112730619]
Test Case: 930 | Input/Output: [[96.0247125437484 72] 168.0247125437484]
Test Case: 931 | Input/Output: [[98.0506855826213 28] 126.0506855826213]
Test Case: 932 | Input/Output: [[26.184517912178976 -2] 24.184517912178976]
Test Case: 933 | Input/Output: [[70.3501065366847 46] 116.3501065366847]
Test Case: 934 | Input/Output: [[-5.300250073702955 -24] -29.300250073702955]
Test Case: 935 | Input/Output: [[73.18961193808735 3] 76.18961193808735]
Test Case: 936 | Input/Output: [[38.03422507633144 -18] 20.03422507633144]
Test Case: 937 | Input/Output: [[21.21543362061476 87] 108.21543362061476]
Test Case: 938 | Input/Output: [[-99.31543322877148 22] -77.31543322877148]
Test Case: 939 | Input/Output: [[67.50397598650261 -62] 5.50397598650261]
Test Case: 940 | Input/Output: [[1.4811802252486785 -43] -41.51881977475132]
Test Case: 941 | Input/Output: [[52.692549670378526 -44] 8.692549670378526]
Test Case: 942 | Input/Output: [[-59.08446033654169 51] -8.084460336541689]
Test Case: 943 | Input/Output: [[61.679341686243475 82] 143.67934168624348]
Test Case: 944 | Input/Output: [[-18.929453620663978 -63] -81.92945362066398]
Test Case: 945 | Input/Output: [[-38.174401698233915 13] -25.174401698233915]
Test Case: 946 | Input/Output: [[-64.83219494688879 -21] -85.83219494688879]
Test Case: 947 | Input/Output: [[97.34784998070464 -44] 53.34784998070464]
Test Case: 948 | Input/Output: [[-51.19316880403333 -69] -120.19316880403332]
Test Case: 949 | Input/Output: [[98.73540634054706 44] 142.73540634054706]
Test Case: 950 | Input/Output: [[-87.05882306723605 17] -70.05882306723605]
Test Case: 951 | Input/Output: [[-4.181272789950768 63] 58.81872721004923]
Test Case: 952 | Input/Output: [[-79.8351333326359 -23] -102.8351333326359]
Test Case: 953 | Input/Output: [[59.03375565581291 -76] -16.96624434418709]
Test Case: 954 | Input/Output: [[47.974992819528836 -40] 7.974992819528836]
Test Case: 955 | Input/Output: [[77.38436419259531 -38] 39.384364192595314]
Test Case: 956 | Input/Output: [[35.2649442861194 100] 135.2649442861194]
Test Case: 957 | Input/Output: [[55.465816514394476 87] 142.46581651439448]
Test Case: 958 | Input/Output: [[82.61878138107662 -52] 30.618781381076616]
Test Case: 959 | Input/Output: [[-6.310887926154891 -48] -54.31088792615489]
Test Case: 960 | Input/Output: [[-4.32346381739292 -77] -81.32346381739292]
Test Case: 961 | Input/Output: [[28.853609911038916 25] 53.853609911038916]
Test Case: 962 | Input/Output: [[98.12264192317448 -86] 12.122641923174484]
Test Case: 963 | Input/Output: [[86.94835031003919 -30] 56.94835031003919]
Test Case: 964 | Input/Output: [[-22.313530500788886 53] 30.686469499211114]
Test Case: 965 | Input/Output: [[-35.50695175575909 19] -16.50695175575909]
Test Case: 966 | Input/Output: [[86.89188817169864 -10] 76.89188817169864]
Test Case: 967 | Input/Output: [[-91.19945760490276 -82] -173.19945760490276]
Test Case: 968 | Input/Output: [[23.590920522105165 35] 58.590920522105165]
Test Case: 969 | Input/Output: [[-81.27311957995857 15] -66.27311957995857]
Test Case: 970 | Input/Output: [[-42.020591047308265 91] 48.979408952691735]
Test Case: 971 | Input/Output: [[-27.310991735687224 95] 67.68900826431278]
Test Case: 972 | Input/Output: [[29.80336252800825 99] 128.80336252800825]
Test Case: 973 | Input/Output: [[-22.41470036859559 -91] -113.41470036859559]
Test Case: 974 | Input/Output: [[-58.13966511256938 -71] -129.1396651125694]
Test Case: 975 | Input/Output: [[57.093407490556615 24] 81.09340749055661]
Test Case: 976 | Input/Output: [[27.083690978040906 -76] -48.916309021959094]
Test Case: 977 | Input/Output: [[62.355088243290936 80] 142.35508824329094]
Test Case: 978 | Input/Output: [[-25.243262420326815 61] 35.756737579673185]
Test Case: 979 | Input/Output: [[-91.7560844406145 -72] -163.7560844406145]
Test Case: 980 | Input/Output: [[84.22148866813484 -57] 27.22148866813484]
Test Case: 981 | Input/Output: [[22.58213882979412 13] 35.58213882979412]
Test Case: 982 | Input/Output: [[-61.75874961479511 -57] -118.75874961479511]
Test Case: 983 | Input/Output: [[57.33092392787077 47] 104.33092392787077]
Test Case: 984 | Input/Output: [[-42.22835985330617 79] 36.77164014669383]
Test Case: 985 | Input/Output: [[12.52912864473754 -25] -12.47087135526246]
Test Case: 986 | Input/Output: [[-97.71915852459428 -26] -123.71915852459428]
Test Case: 987 | Input/Output: [[-72.63356897862462 41] -31.633568978624623]
Test Case: 988 | Input/Output: [[38.72153709755381 13] 51.72153709755381]
Test Case: 989 | Input/Output: [[-24.033994669042258 -38] -62.03399466904226]
Test Case: 990 | Input/Output: [[19.784009084093057 53] 72.78400908409306]
Test Case: 991 | Input/Output: [[-48.35766633258538 12] -36.35766633258538]
Test Case: 992 | Input/Output: [[32.10096931963179 -9] 23.100969319631787]
Test Case: 993 | Input/Output: [[-36.369991580755624 -6] -42.369991580755624]
Test Case: 994 | Input/Output: [[14.014498217872145 -64] -49.985501782127855]
Test Case: 995 | Input/Output: [[78.22466611093745 5] 83.22466611093745]
Test Case: 996 | Input/Output: [[68.29651805448157 9] 77.29651805448157]
Test Case: 997 | Input/Output: [[44.950796642654524 84] 128.95079664265452]
Test Case: 998 | Input/Output: [[-67.43913223270228 89] 21.560867767297722]
Test Case: 999 | Input/Output: [[68.81266966404559 20] 88.81266966404559]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 81 45 85 20 17 36 101 40 51 24 -35 -58 -100 8 35 85
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 53978.0
Test mean error for best: 26.98900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: -2.9072066345 
Correct output: 53.7468534166  | Program output: -31.2531465834
Correct output: -26.8372891707 | Program output: -45.8372891707
Correct output: -15.9448332614 | Program output: -61.9448332614
Correct output: -47.5313361213 | Program output: -81.5313361213
Correct output: 68.9133975513  | Program output: 98.9133975513 
Correct output: 94.6735625473  | Program output: 57.6735625473 
Correct output: -23.9794056735 | Program output: 35.0205943265 
Correct output: -45.659617513  | Program output: -15.659617513 
Correct output: 18.305230938   | Program output: 94.305230938  
Correct output: -51.4672355255 | Program output: -20.4672355255
Correct output: -69.6136679003 | Program output: 8.3863320997  
Correct output: -160.5860881713 | Program output: -84.5860881713
Correct output: 26.5792162397  | Program output: 2.5792162397  
Correct output: 67.6788377982  | Program output: 48.6788377982 
Correct output: 98.9602843106  | Program output: 26.9602843106 
Correct output: -21.6321982448 | Program output: 29.3678017552 
Correct output: -135.7730066152 | Program output: -98.7730066152
Correct output: 107.1410234164 | Program output: 62.1410234164 
Correct output: 27.295683376   | Program output: 81.295683376  
Correct output: 116.4542279656 | Program output: 100.4542279656
Correct output: -50.856197321  | Program output: -34.856197321 
Correct output: 135.1762620097 | Program output: 43.1762620097 
Correct output: 14.2228157917  | Program output: 6.2228157917  
Correct output: 146.4103302491 | Program output: 96.4103302491 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction float_mult} {:instruction float_inc} {:instruction float_swap} {:instruction -65} {:instruction float_yank} {:instruction integer_div} {:instruction float_add} {:instruction integer_yankdup} {:instruction tagged_75} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_dup_items} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_sub} {:instruction 93.68668085507105} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_yank} {:instruction integer_max} {:instruction float_tan} {:instruction float_add} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_swap} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 74.08671709404518} {:instruction integer_min} {:instruction tagged_721} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction tag_integer_127} {:instruction float_sin} {:instruction tagged_296} {:instruction in2} {:instruction float_inc} {:instruction float_sin} {:instruction float_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction in2} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_mod} {:instruction integer_pop} {:instruction float_mod} {:instruction float_yank})
Best program: (print_float float_mult float_inc float_swap -65 float_yank integer_div float_add integer_yankdup tagged_75 in1 float_inc integer_dup_times print_float integer_dup_items float_mod integer_yank integer_sub 93.68668085507105 float_tan integer_rot integer_dup_times integer_shove integer_yank integer_max float_tan float_add integer_mod integer_yank print_integer float_swap float_stackdepth float_dec 74.08671709404518 integer_min tagged_721 integer_yank integer_add integer_shove integer_stackdepth tag_integer_127 float_sin tagged_296 in2 float_inc float_sin float_dup_items integer_div integer_max in2 integer_swap float_frominteger float_mod integer_pop float_mod float_yank)
Errors: [96.0 9 85.0 11 19.0 2 46.0 2 34.0 2 30.0 1 37.0 2 59.0 11 30.0 1 76.0 2 31.0 2 78.0 11 76.0 3 24.0 1 19.0 2 72.0 2 51.0 12 37.0 3 45.0 3 54.0 2 16.0 2 16.0 2 92.0 2 8.0 2 50.0 2]
Total: 1275.0
Mean: 25.5
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 17346.616300899997
Median total errors in population: 25338.0
Error averages by case: (686.1531024999995 12.874 677.827810400001 13.075 669.7749089000016 13.096 672.5989167000015 13.247 679.0248090999995 13.303 684.3060647999997 12.548 682.186513199998 12.588 674.2670099999993 13.698 677.9592034000017 12.498 678.7073761999989 11.642 679.5527859999999 13.244 680.358147899999 13.784 714.0002691999983 13.97 659.5416786999996 12.431 671.0896740999992 12.614 682.8877528999993 12.395 671.9021970999994 13.872 705.3562210000006 14.026 684.7218533999983 13.157 678.0976979000013 11.715 688.0448686999994 13.337 681.7726028000004 12.319 694.2683461000009 13.271 650.0335557999983 12.443 697.7839340999984 13.252)
Error minima by case: (2.8407 6 0.4658 6 0.1627 1 0.3843 2 2.4395 2 1.3767 1 3.3264 2 1.2829 8 4.3113 1 0.3052 2 1.4964 1 0.3863 9 35.5861 2 0.4208 1 0.3212 1 0.9603 2 0.4082 8 23.92 2 5.859 2 1.387 2 12.5458 2 0.8853 2 3.1763 2 1.0 1 16.5184 2)
Average genome size in population (length): 51.392
Average program size in population (points): 52.392
Average percent parens in population: 0.042
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.336
Error (vector) diversity:			 0.359
Behavioral diversity:				 0.38
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1288975
--- Timings ---
Current time: 1529614889863 milliseconds
Total Time:           3.7 seconds
Initialization:       0.1 seconds,  3.2%
Reproduction:         0.6 seconds, 16.6%
Fitness Testing:      3.0 seconds, 80.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 53978.0
Test mean error for best: 26.98900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: -2.9072066345 
Correct output: 53.7468534166  | Program output: -31.2531465834
Correct output: -26.8372891707 | Program output: -45.8372891707
Correct output: -15.9448332614 | Program output: -61.9448332614
Correct output: -47.5313361213 | Program output: -81.5313361213
Correct output: 68.9133975513  | Program output: 98.9133975513 
Correct output: 94.6735625473  | Program output: 57.6735625473 
Correct output: -23.9794056735 | Program output: 35.0205943265 
Correct output: -45.659617513  | Program output: -15.659617513 
Correct output: 18.305230938   | Program output: 94.305230938  
Correct output: -51.4672355255 | Program output: -20.4672355255
Correct output: -69.6136679003 | Program output: 8.3863320997  
Correct output: -160.5860881713 | Program output: -84.5860881713
Correct output: 26.5792162397  | Program output: 2.5792162397  
Correct output: 67.6788377982  | Program output: 48.6788377982 
Correct output: 98.9602843106  | Program output: 26.9602843106 
Correct output: -21.6321982448 | Program output: 29.3678017552 
Correct output: -135.7730066152 | Program output: -98.7730066152
Correct output: 107.1410234164 | Program output: 62.1410234164 
Correct output: 27.295683376   | Program output: 81.295683376  
Correct output: 116.4542279656 | Program output: 100.4542279656
Correct output: -50.856197321  | Program output: -34.856197321 
Correct output: 135.1762620097 | Program output: 43.1762620097 
Correct output: 14.2228157917  | Program output: 6.2228157917  
Correct output: 146.4103302491 | Program output: 96.4103302491 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction float_mult} {:instruction float_inc} {:instruction float_swap} {:instruction -65} {:instruction float_yank} {:instruction integer_div} {:instruction float_add} {:instruction integer_yankdup} {:instruction tagged_75} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_dup_items} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_sub} {:instruction 93.68668085507105} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_yank} {:instruction integer_max} {:instruction float_tan} {:instruction float_add} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_swap} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 74.08671709404518} {:instruction integer_min} {:instruction tagged_721} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction tag_integer_127} {:instruction float_sin} {:instruction tagged_296} {:instruction in2} {:instruction float_inc} {:instruction float_sin} {:instruction float_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction in2} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_mod} {:instruction integer_pop} {:instruction float_mod} {:instruction float_yank})
Best program: (print_float float_mult float_inc float_swap -65 float_yank integer_div float_add integer_yankdup tagged_75 in1 float_inc integer_dup_times print_float integer_dup_items float_mod integer_yank integer_sub 93.68668085507105 float_tan integer_rot integer_dup_times integer_shove integer_yank integer_max float_tan float_add integer_mod integer_yank print_integer float_swap float_stackdepth float_dec 74.08671709404518 integer_min tagged_721 integer_yank integer_add integer_shove integer_stackdepth tag_integer_127 float_sin tagged_296 in2 float_inc float_sin float_dup_items integer_div integer_max in2 integer_swap float_frominteger float_mod integer_pop float_mod float_yank)
Errors: [96.0 9 85.0 11 19.0 2 46.0 2 34.0 2 30.0 1 37.0 2 59.0 11 30.0 1 76.0 2 31.0 2 78.0 11 76.0 3 24.0 1 19.0 2 72.0 2 51.0 12 37.0 3 45.0 3 54.0 2 16.0 2 16.0 2 92.0 2 8.0 2 50.0 2]
Total: 1275.0
Mean: 25.5
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 6043.714885099997
Median total errors in population: 2014.9975
Error averages by case: (246.55488680000082 11.291 231.5079788 11.914 208.94219920000216 10.321 213.18773379999928 10.734 226.8395442000008 10.833 230.69049519999888 10.307 238.66688640000092 10.252 211.59538510000021 12.401 213.63079830000189 10.153 221.36738500000067 9.452 217.0541515000018 10.569 231.54965619999953 12.55 288.10438029999864 11.301 197.17491600000008 9.984 221.40744569999865 10.271 245.3454940000016 9.982 208.05369679999941 12.863 268.93527019999766 11.336 247.4971124000011 10.528 216.95808319999855 9.512 250.1673603000007 10.865 215.9084800000008 9.858 269.407439299999 10.842 183.00998029999957 10.059 271.1151260999981 10.865)
Error minima by case: (0.9072 6 0.8151 6 0.1627 1 0.0552 2 2.1805 2 1.3767 1 3.3264 2 1.2829 8 0.3088 1 0.3052 2 1.4964 1 0.3863 8 35.5861 2 1.5292 1 0.3212 1 0.9603 2 0.4082 8 34.0 2 9.141 2 1.387 2 15.0 2 0.8853 2 16.8237 2 1.1808 1 5.5897 2)
Average genome size in population (length): 58.371
Average program size in population (points): 59.371
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.482
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.288
Error (vector) diversity:			 0.3
Behavioral diversity:				 0.322
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2751800
--- Timings ---
Current time: 1529614895082 milliseconds
Total Time:           9.3 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         3.8 seconds, 40.6%
Fitness Testing:      4.6 seconds, 49.3%
Report:               0.8 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 53978.0
Test mean error for best: 26.98900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: -2.9072066345 
Correct output: 53.7468534166  | Program output: -31.2531465834
Correct output: -26.8372891707 | Program output: -45.8372891707
Correct output: -15.9448332614 | Program output: -61.9448332614
Correct output: -47.5313361213 | Program output: -81.5313361213
Correct output: 68.9133975513  | Program output: 98.9133975513 
Correct output: 94.6735625473  | Program output: 57.6735625473 
Correct output: -23.9794056735 | Program output: 35.0205943265 
Correct output: -45.659617513  | Program output: -15.659617513 
Correct output: 18.305230938   | Program output: 94.305230938  
Correct output: -51.4672355255 | Program output: -20.4672355255
Correct output: -69.6136679003 | Program output: 8.3863320997  
Correct output: -160.5860881713 | Program output: -84.5860881713
Correct output: 26.5792162397  | Program output: 2.5792162397  
Correct output: 67.6788377982  | Program output: 48.6788377982 
Correct output: 98.9602843106  | Program output: 26.9602843106 
Correct output: -21.6321982448 | Program output: 29.3678017552 
Correct output: -135.7730066152 | Program output: -98.7730066152
Correct output: 107.1410234164 | Program output: 62.1410234164 
Correct output: 27.295683376   | Program output: 81.295683376  
Correct output: 116.4542279656 | Program output: 100.4542279656
Correct output: -50.856197321  | Program output: -34.856197321 
Correct output: 135.1762620097 | Program output: 43.1762620097 
Correct output: 14.2228157917  | Program output: 6.2228157917  
Correct output: 146.4103302491 | Program output: 96.4103302491 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction float_mult} {:instruction float_inc} {:instruction float_swap} {:instruction -65} {:instruction float_yank} {:instruction integer_div} {:instruction float_add} {:instruction integer_yankdup} {:instruction tagged_75} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_dup_items} {:instruction float_mod} {:instruction integer_yank} {:instruction float_div} {:instruction 93.68668085507105} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_yank} {:instruction integer_max} {:instruction float_tan} {:instruction float_add} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_swap} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 74.08671709404518} {:instruction integer_min} {:instruction tagged_721} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction tag_integer_127} {:instruction float_sin} {:instruction tagged_296} {:instruction in2} {:instruction float_inc} {:instruction float_sin} {:instruction float_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction in2} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_mod} {:instruction integer_pop} {:instruction float_mod} {:instruction float_yank})
Best program: (print_float float_mult float_inc float_swap -65 float_yank integer_div float_add integer_yankdup tagged_75 in1 float_inc integer_dup_times print_float integer_dup_items float_mod integer_yank float_div 93.68668085507105 float_tan integer_rot integer_dup_times integer_shove integer_yank integer_max float_tan float_add integer_mod integer_yank print_integer float_swap float_stackdepth float_dec 74.08671709404518 integer_min tagged_721 integer_yank integer_add integer_shove integer_stackdepth tag_integer_127 float_sin tagged_296 in2 float_inc float_sin float_dup_items integer_div integer_max in2 integer_swap float_frominteger float_mod integer_pop float_mod float_yank)
Errors: [96.0 9 85.0 11 19.0 2 46.0 2 34.0 2 30.0 1 37.0 2 59.0 11 30.0 1 76.0 2 31.0 2 78.0 11 76.0 3 24.0 1 19.0 2 72.0 2 51.0 12 37.0 3 45.0 3 54.0 2 16.0 2 16.0 2 92.0 2 8.0 2 50.0 2]
Total: 1275.0
Mean: 25.5
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 4797.716048600002
Median total errors in population: 1301.0
Error averages by case: (212.80686389999957 9.894 207.57358810000008 11.781 163.82256610000047 5.475 183.37668979999972 6.14 179.99564880000025 6.178 179.44876569999974 5.893 181.3185711000003 5.875 188.8886385999997 11.845 167.69175270000048 5.729 206.4680710000003 5.546 169.83289280000054 5.529 197.63579920000043 11.964 216.30223099999915 6.936 154.12829139999985 5.475 165.6426564999996 5.44 200.72543340000058 5.815 182.31050520000036 12.639 190.08262929999935 6.872 188.12227560000036 6.396 190.7038833999994 5.435 172.90871909999993 6.495 161.64129640000007 5.751 219.57830859999964 6.505 140.65318930000007 5.531 198.37378159999952 6.544)
Error minima by case: (2.9072 8 14.2531 8 18.0 1 5.2654 2 0.4844 2 6.8386 1 5.6736 2 5.0206 8 15.6596 1 0.3052 2 20.4672 1 7.3863 9 73.0 2 1.5292 1 0.3212 1 9.9603 2 5.7356 9 34.0 2 18.141 2 2.6997 2 15.0 2 13.0 2 42.1263 2 3.2228 1 49.0 2)
Average genome size in population (length): 49.8
Average program size in population (points): 50.8
Average percent parens in population: 0.029
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9195
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.645
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.645
Total error diversity:				 0.132
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.153
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3998950
--- Timings ---
Current time: 1529614898692 milliseconds
Total Time:          12.8 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.3 seconds, 41.2%
Fitness Testing:      6.2 seconds, 48.0%
Report:               1.3 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 53978.0
Test mean error for best: 26.98900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: -2.9072066345 
Correct output: 53.7468534166  | Program output: -31.2531465834
Correct output: -26.8372891707 | Program output: -45.8372891707
Correct output: -15.9448332614 | Program output: -61.9448332614
Correct output: -47.5313361213 | Program output: -81.5313361213
Correct output: 68.9133975513  | Program output: 98.9133975513 
Correct output: 94.6735625473  | Program output: 57.6735625473 
Correct output: -23.9794056735 | Program output: 35.0205943265 
Correct output: -45.659617513  | Program output: -15.659617513 
Correct output: 18.305230938   | Program output: 94.305230938  
Correct output: -51.4672355255 | Program output: -20.4672355255
Correct output: -69.6136679003 | Program output: 8.3863320997  
Correct output: -160.5860881713 | Program output: -84.5860881713
Correct output: 26.5792162397  | Program output: 2.5792162397  
Correct output: 67.6788377982  | Program output: 48.6788377982 
Correct output: 98.9602843106  | Program output: 26.9602843106 
Correct output: -21.6321982448 | Program output: 29.3678017552 
Correct output: -135.7730066152 | Program output: -98.7730066152
Correct output: 107.1410234164 | Program output: 62.1410234164 
Correct output: 27.295683376   | Program output: 81.295683376  
Correct output: 116.4542279656 | Program output: 100.4542279656
Correct output: -50.856197321  | Program output: -34.856197321 
Correct output: 135.1762620097 | Program output: 43.1762620097 
Correct output: 14.2228157917  | Program output: 6.2228157917  
Correct output: 146.4103302491 | Program output: 96.4103302491 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction float_mult} {:instruction float_inc} {:instruction float_swap} {:instruction -65} {:instruction float_yank} {:instruction integer_div} {:instruction float_add} {:instruction integer_yankdup} {:instruction tagged_75} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_dup_items} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_yank} {:instruction integer_max} {:instruction float_tan} {:instruction float_add} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_swap} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 74.08671709404518} {:instruction integer_min} {:instruction tagged_721} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction tag_integer_127} {:instruction float_sin} {:instruction tagged_296} {:instruction in2} {:instruction float_inc} {:instruction float_sin} {:instruction float_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction in2} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_mod} {:instruction integer_pop} {:instruction float_mod} {:instruction float_yank})
Best program: (print_float float_mult float_inc float_swap -65 float_yank integer_div float_add integer_yankdup tagged_75 in1 float_inc integer_dup_times print_float integer_dup_items float_mod integer_yank integer_sub integer_rot integer_dup_times integer_shove integer_yank integer_max float_tan float_add integer_mod integer_yank print_integer float_swap float_stackdepth float_dec 74.08671709404518 integer_min tagged_721 integer_yank integer_add integer_shove integer_stackdepth tag_integer_127 float_sin tagged_296 in2 float_inc float_sin float_dup_items integer_div integer_max in2 integer_swap float_frominteger float_mod integer_pop float_mod float_yank)
Errors: [96.0 9 85.0 11 19.0 2 46.0 2 34.0 2 30.0 1 37.0 2 59.0 11 30.0 1 76.0 2 31.0 2 78.0 11 76.0 3 24.0 1 19.0 2 72.0 2 51.0 12 37.0 3 45.0 3 54.0 2 16.0 2 16.0 2 92.0 2 8.0 2 50.0 2]
Total: 1275.0
Mean: 25.5
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3567.2976535999996
Median total errors in population: 1280.0
Error averages by case: (181.0854051 9.099 171.932824 11.362 112.6359679 2.788 136.7883554 3.252 126.18940140000002 3.272 123.32109489999999 2.924 127.18759809999999 3.169 148.8436331 11.406 124.27249929999999 2.923 164.1151458 3.091 125.39196369999999 2.782 164.78745390000003 11.426 166.9703495 4.226 113.78255180000002 2.828 110.91588399999999 2.691 158.2959501 3.147 141.48191980000001 12.511 131.7977902 4.229 134.5326529 4.085 144.4336534 3.071 108.55098440000002 3.677 112.459709 3.172 176.98450160000002 3.857 99.2911246 3.082 139.3342397 3.845)
Error minima by case: (3.9072 8 6.6716 8 17.0 1 15.9448 2 6.9425 2 28.0 1 35.0 2 5.254 9 16.6596 1 4.3284 2 13.5328 1 4.6137 10 74.0 2 1.5792 1 17.0 1 25.9603 1 6.6118 9 35.0 2 43.0 2 12.52 2 14.0 2 14.0 2 42.1763 2 5.2228 1 48.0 2)
Average genome size in population (length): 38.789
Average program size in population (points): 39.789
Average percent parens in population: 0.038
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.3735
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 148
Genome diversity (% unique Plush genomes):	 0.518
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 148
Syntactic diversity (% unique Push programs):	 0.518
Total error diversity:				 0.039
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4973175
--- Timings ---
Current time: 1529614902513 milliseconds
Total Time:          16.7 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.9 seconds, 41.1%
Fitness Testing:      7.9 seconds, 47.1%
Report:               1.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 54165.0
Test mean error for best: 27.08250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 0.0927933655  
Correct output: 53.7468534166  | Program output: -28.2531465834
Correct output: -26.8372891707 | Program output: -42.8372891707
Correct output: -15.9448332614 | Program output: -58.9448332614
Correct output: -47.5313361213 | Program output: -78.5313361213
Correct output: 68.9133975513  | Program output: 101.9133975513
Correct output: 94.6735625473  | Program output: 60.6735625473 
Correct output: -23.9794056735 | Program output: 38.0205943265 
Correct output: -45.659617513  | Program output: -12.659617513 
Correct output: 18.305230938   | Program output: 97.305230938  
Correct output: -51.4672355255 | Program output: -17.4672355255
Correct output: -69.6136679003 | Program output: 11.3863320997 
Correct output: -160.5860881713 | Program output: -81.5860881713
Correct output: 26.5792162397  | Program output: 5.5792162397  
Correct output: 67.6788377982  | Program output: 51.6788377982 
Correct output: 98.9602843106  | Program output: 29.9602843106 
Correct output: -21.6321982448 | Program output: 32.3678017552 
Correct output: -135.7730066152 | Program output: -95.7730066152
Correct output: 107.1410234164 | Program output: 65.1410234164 
Correct output: 27.295683376   | Program output: 84.295683376  
Correct output: 116.4542279656 | Program output: 103.4542279656
Correct output: -50.856197321  | Program output: -31.856197321 
Correct output: 135.1762620097 | Program output: 46.1762620097 
Correct output: 14.2228157917  | Program output: 9.2228157917  
Correct output: 146.4103302491 | Program output: 99.4103302491 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [93.0 2 82.0 12 16.0 2 43.0 2 31.0 2 33.0 3 34.0 2 62.0 11 33.0 2 79.0 2 34.0 2 81.0 12 79.0 3 21.0 2 16.0 2 69.0 2 54.0 12 40.0 2 42.0 3 57.0 2 13.0 2 19.0 2 89.0 3 5.0 2 47.0 3]
Total: 1266.0
Mean: 25.32
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 3308.9894952
Median total errors in population: 1275.0
Error averages by case: (170.5367939 9.413 161.5658368 11.251 101.50691649999999 3.079 125.94336810000001 3.105 115.22578229999998 3.111 113.54744850000002 2.295 118.9390015 3.036 138.75291570000002 11.348 111.56412490000001 2.272 154.36796470000002 2.963 112.86063759999999 3.075 153.378349 11.316 155.5798724 4.073 103.35615949999999 2.249 102.1689819 3.008 150.06619189999998 3.027 131.3794778 12.376 120.1358835 4.071 126.33285120000002 4.008 134.64006750000001 2.957 100.3952844 3.124 99.74113119999998 3.026 169.04179010000001 3.263 88.80509160000001 3.014 131.44357270000003 3.254)
Error minima by case: (3.9072 2 20.3399 9 2.8373 1 8.0552 2 17.4687 2 5.1733 1 20.5868 2 0.0206 10 16.6596 1 7.7323 2 13.5328 1 4.6137 8 75.0 3 0.5417 1 4.586 1 24.8736 1 2.3678 9 36.0 2 33.0543 3 1.2582 2 13.0 2 14.1438 2 42.1763 2 5.0 2 47.0 2)
Average genome size in population (length): 44.447
Average program size in population (points): 45.447
Average percent parens in population: 0.028
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 5.9695
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 92
Genome diversity (% unique Plush genomes):	 0.571
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 92
Syntactic diversity (% unique Push programs):	 0.571
Total error diversity:				 0.036
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6095400
--- Timings ---
Current time: 1529614906199 milliseconds
Total Time:          20.6 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.4 seconds, 40.7%
Fitness Testing:      9.7 seconds, 47.2%
Report:               2.4 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 54165.0
Test mean error for best: 27.08250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 0.0927933655  
Correct output: 53.7468534166  | Program output: -28.2531465834
Correct output: -26.8372891707 | Program output: -42.8372891707
Correct output: -15.9448332614 | Program output: -58.9448332614
Correct output: -47.5313361213 | Program output: -78.5313361213
Correct output: 68.9133975513  | Program output: 101.9133975513
Correct output: 94.6735625473  | Program output: 60.6735625473 
Correct output: -23.9794056735 | Program output: 38.0205943265 
Correct output: -45.659617513  | Program output: -12.659617513 
Correct output: 18.305230938   | Program output: 97.305230938  
Correct output: -51.4672355255 | Program output: -17.4672355255
Correct output: -69.6136679003 | Program output: 11.3863320997 
Correct output: -160.5860881713 | Program output: -81.5860881713
Correct output: 26.5792162397  | Program output: 5.5792162397  
Correct output: 67.6788377982  | Program output: 51.6788377982 
Correct output: 98.9602843106  | Program output: 29.9602843106 
Correct output: -21.6321982448 | Program output: 32.3678017552 
Correct output: -135.7730066152 | Program output: -95.7730066152
Correct output: 107.1410234164 | Program output: 65.1410234164 
Correct output: 27.295683376   | Program output: 84.295683376  
Correct output: 116.4542279656 | Program output: 103.4542279656
Correct output: -50.856197321  | Program output: -31.856197321 
Correct output: 135.1762620097 | Program output: 46.1762620097 
Correct output: 14.2228157917  | Program output: 9.2228157917  
Correct output: 146.4103302491 | Program output: 99.4103302491 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [93.0 2 82.0 12 16.0 2 43.0 2 31.0 2 33.0 3 34.0 2 62.0 11 33.0 2 79.0 2 34.0 2 81.0 12 79.0 3 21.0 2 16.0 2 69.0 2 54.0 12 40.0 2 42.0 3 57.0 2 13.0 2 19.0 2 89.0 3 5.0 2 47.0 3]
Total: 1266.0
Mean: 25.32
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2813.7093338
Median total errors in population: 1275.0
Error averages by case: (152.34860410000002 9.347 141.72728619999998 11.214 80.00652439999999 2.876 105.0099539 2.893 93.960516 2.902 94.17147460000002 1.952 97.93808089999996 2.843 119.7884815 11.304 93.0152744 1.911 135.8693065 2.786 93.9382264 2.873 137.3335163 11.284 136.59150649999998 3.867 84.94769849999999 1.9 80.965553 2.835 130.26474820000004 2.829 112.41665280000002 12.229 100.44290910000001 3.866 105.48945160000002 3.824 115.6982358 2.776 78.98752279999998 2.914 80.1470299 2.821 149.23096870000003 2.918 70.00535930000002 2.826 110.71445240000003 2.91)
Error minima by case: (3.9072 2 32.2531 8 2.8373 1 8.0552 2 17.4687 2 29.0 1 19.6736 2 0.0206 11 13.3404 1 16.3052 2 9.5328 1 3.6137 10 9.5861 3 1.5792 1 16.0 1 25.9603 1 2.3678 10 36.0 2 16.141 3 25.2957 2 13.0 2 14.1438 2 42.1763 2 2.7772 2 45.4103 2)
Average genome size in population (length): 47.983
Average program size in population (points): 48.983
Average percent parens in population: 0.023
Minimum age in population: 5.0
Maximum age in population: 9.625
Average age in population: 7.516625
Median age in population: 7.5625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.704
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.704
Total error diversity:				 0.03
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 7308300
--- Timings ---
Current time: 1529614909595 milliseconds
Total Time:          24.0 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.8 seconds, 41.1%
Fitness Testing:     11.3 seconds, 47.3%
Report:               2.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 54165.0
Test mean error for best: 27.08250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 0.0927933655  
Correct output: 53.7468534166  | Program output: -28.2531465834
Correct output: -26.8372891707 | Program output: -42.8372891707
Correct output: -15.9448332614 | Program output: -58.9448332614
Correct output: -47.5313361213 | Program output: -78.5313361213
Correct output: 68.9133975513  | Program output: 101.9133975513
Correct output: 94.6735625473  | Program output: 60.6735625473 
Correct output: -23.9794056735 | Program output: 38.0205943265 
Correct output: -45.659617513  | Program output: -12.659617513 
Correct output: 18.305230938   | Program output: 97.305230938  
Correct output: -51.4672355255 | Program output: -17.4672355255
Correct output: -69.6136679003 | Program output: 11.3863320997 
Correct output: -160.5860881713 | Program output: -81.5860881713
Correct output: 26.5792162397  | Program output: 5.5792162397  
Correct output: 67.6788377982  | Program output: 51.6788377982 
Correct output: 98.9602843106  | Program output: 29.9602843106 
Correct output: -21.6321982448 | Program output: 32.3678017552 
Correct output: -135.7730066152 | Program output: -95.7730066152
Correct output: 107.1410234164 | Program output: 65.1410234164 
Correct output: 27.295683376   | Program output: 84.295683376  
Correct output: 116.4542279656 | Program output: 103.4542279656
Correct output: -50.856197321  | Program output: -31.856197321 
Correct output: 135.1762620097 | Program output: 46.1762620097 
Correct output: 14.2228157917  | Program output: 9.2228157917  
Correct output: 146.4103302491 | Program output: 99.4103302491 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [93.0 2 82.0 12 16.0 2 43.0 2 31.0 2 33.0 3 34.0 2 62.0 11 33.0 2 79.0 2 34.0 2 81.0 12 79.0 3 21.0 2 16.0 2 69.0 2 54.0 12 40.0 2 42.0 3 57.0 2 13.0 2 19.0 2 89.0 3 5.0 2 47.0 3]
Total: 1266.0
Mean: 25.32
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 3324.0370065
Median total errors in population: 1275.0
Error averages by case: (170.3696591 9.388 160.0675911 11.285 99.60236760000001 3.093 124.16395290000001 3.1 113.15851909999999 3.11 116.41720960000002 2.159 117.03743589999998 3.031 141.55759240000003 11.389 115.3077786 2.125 157.3013746 2.969 116.1923709 3.096 158.45607069999997 11.37 157.72179169999998 4.082 104.46833409999998 2.1 100.44399729999999 3.03 148.72886680000002 3.022 134.35928170000003 12.289 122.40366670000002 4.068 124.42074160000003 4.014 137.5658475 2.958 98.3161068 3.107 102.72604220000004 3.034 167.24529320000002 3.119 89.53029930000001 3.016 129.40981510000003 3.111)
Error minima by case: (3.9072 2 32.2531 8 11.9587 1 15.8321 2 8.7354 2 29.0 1 34.0 2 14.8166 8 6.8637 1 16.7175 2 12.6713 1 3.6137 10 75.0 3 1.5792 1 16.0 1 25.9603 1 17.1638 11 36.0 2 42.0 3 26.1117 2 13.0 2 12.0602 2 42.1763 2 5.0 2 47.0 2)
Average genome size in population (length): 46.946
Average program size in population (points): 47.946
Average percent parens in population: 0.024
Minimum age in population: 6.125
Maximum age in population: 10.96875
Average age in population: 8.98265625
Median age in population: 9.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.033
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 8494925
--- Timings ---
Current time: 1529614913226 milliseconds
Total Time:          27.6 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.6 seconds, 42.0%
Fitness Testing:     12.9 seconds, 46.7%
Report:               3.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 54165.0
Test mean error for best: 27.08250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 0.0927933655  
Correct output: 53.7468534166  | Program output: -28.2531465834
Correct output: -26.8372891707 | Program output: -42.8372891707
Correct output: -15.9448332614 | Program output: -58.9448332614
Correct output: -47.5313361213 | Program output: -78.5313361213
Correct output: 68.9133975513  | Program output: 101.9133975513
Correct output: 94.6735625473  | Program output: 60.6735625473 
Correct output: -23.9794056735 | Program output: 38.0205943265 
Correct output: -45.659617513  | Program output: -12.659617513 
Correct output: 18.305230938   | Program output: 97.305230938  
Correct output: -51.4672355255 | Program output: -17.4672355255
Correct output: -69.6136679003 | Program output: 11.3863320997 
Correct output: -160.5860881713 | Program output: -81.5860881713
Correct output: 26.5792162397  | Program output: 5.5792162397  
Correct output: 67.6788377982  | Program output: 51.6788377982 
Correct output: 98.9602843106  | Program output: 29.9602843106 
Correct output: -21.6321982448 | Program output: 32.3678017552 
Correct output: -135.7730066152 | Program output: -95.7730066152
Correct output: 107.1410234164 | Program output: 65.1410234164 
Correct output: 27.295683376   | Program output: 84.295683376  
Correct output: 116.4542279656 | Program output: 103.4542279656
Correct output: -50.856197321  | Program output: -31.856197321 
Correct output: 135.1762620097 | Program output: 46.1762620097 
Correct output: 14.2228157917  | Program output: 9.2228157917  
Correct output: 146.4103302491 | Program output: 99.4103302491 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [93.0 2 82.0 12 16.0 2 43.0 2 31.0 2 33.0 3 34.0 2 62.0 11 33.0 2 79.0 2 34.0 2 81.0 12 79.0 3 21.0 2 16.0 2 69.0 2 54.0 12 40.0 2 42.0 3 57.0 2 13.0 2 19.0 2 89.0 3 5.0 2 47.0 3]
Total: 1266.0
Mean: 25.32
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 3332.9956688
Median total errors in population: 1275.0
Error averages by case: (171.60810100000003 8.992 161.05734629999998 11.373 100.625355 3.113 125.00091790000002 3.129 114.1135395 3.14 116.01568550000002 2.312 118.41587509999997 3.051 140.921373 11.388 114.8360921 2.218 156.51429350000006 2.976 115.7219945 3.114 157.2541991 11.437 157.2524164 4.096 104.50502519999996 2.187 101.74794499999997 3.04 150.05417140000006 3.028 133.74184620000003 12.288 121.93244250000001 4.029 125.83163460000003 4.023 136.90215080000002 2.972 99.82268909999996 3.136 102.2537121 3.052 168.67417430000003 3.196 89.72343120000002 3.024 130.96925750000003 3.186)
Error minima by case: (90.325 2 50.5848 9 16.0 1 15.9448 2 16.4687 2 29.0 1 34.0 2 23.9794 11 18.3404 1 15.2478 2 12.5328 1 3.6137 10 75.0 3 21.0 1 16.0 1 69.0 1 21.6322 11 36.0 2 42.0 3 24.6719 2 13.0 2 13.1438 2 89.0 2 5.0 2 47.0 2)
Average genome size in population (length): 44.875
Average program size in population (points): 45.875
Average percent parens in population: 0.025
Minimum age in population: 7.5
Maximum age in population: 12.578125
Average age in population: 10.455
Median age in population: 10.515625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.035
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 9628000
--- Timings ---
Current time: 1529614916747 milliseconds
Total Time:          31.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.1 seconds, 42.2%
Fitness Testing:     14.6 seconds, 46.8%
Report:               3.3 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 54232.0
Test mean error for best: 27.11600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 1.0927933655  
Correct output: 53.7468534166  | Program output: -27.2531465834
Correct output: -26.8372891707 | Program output: -41.8372891707
Correct output: -15.9448332614 | Program output: -57.9448332614
Correct output: -47.5313361213 | Program output: -77.5313361213
Correct output: 68.9133975513  | Program output: 102.9133975513
Correct output: 94.6735625473  | Program output: 61.6735625473 
Correct output: -23.9794056735 | Program output: 39.0205943265 
Correct output: -45.659617513  | Program output: -11.659617513 
Correct output: 18.305230938   | Program output: 98.305230938  
Correct output: -51.4672355255 | Program output: -16.4672355255
Correct output: -69.6136679003 | Program output: 12.3863320997 
Correct output: -160.5860881713 | Program output: -80.5860881713
Correct output: 26.5792162397  | Program output: 6.5792162397  
Correct output: 67.6788377982  | Program output: 52.6788377982 
Correct output: 98.9602843106  | Program output: 30.9602843106 
Correct output: -21.6321982448 | Program output: 33.3678017552 
Correct output: -135.7730066152 | Program output: -94.7730066152
Correct output: 107.1410234164 | Program output: 66.1410234164 
Correct output: 27.295683376   | Program output: 85.295683376  
Correct output: 116.4542279656 | Program output: 104.4542279656
Correct output: -50.856197321  | Program output: -30.856197321 
Correct output: 135.1762620097 | Program output: 47.1762620097 
Correct output: 14.2228157917  | Program output: 10.2228157917 
Correct output: 146.4103302491 | Program output: 100.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec float_inc integer_sub print_float)
Errors: [92.0 2 81.0 12 15.0 2 42.0 2 30.0 1 34.0 3 33.0 2 63.0 10 34.0 2 80.0 1 35.0 2 82.0 12 80.0 2 20.0 1 15.0 2 68.0 2 55.0 13 41.0 3 41.0 3 58.0 2 12.0 2 20.0 1 88.0 3 4.0 1 46.0 2]
Total: 1257.0
Mean: 25.14
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 3496.7521724999992
Median total errors in population: 1275.0
Error averages by case: (177.72687939999997 7.217 167.4152336 11.716 107.9763793 3.233 132.0702966 3.237 121.67707530000001 3.241 121.30670860000001 2.947 124.7754753 3.142 146.9063989 11.451 121.12463079999999 2.608 162.0359173 3.058 122.07788269999999 3.234 164.3366978 11.783 163.49655029999997 4.205 112.40184269999996 2.546 108.32308129999998 3.133 156.28328820000002 3.115 139.70493069999998 12.385 128.29218440000002 3.894 132.0872454 4.115 142.41741440000004 3.065 106.18968919999996 3.235 108.60857199999997 3.152 174.6213038 3.551 97.91927629999999 3.111 137.0532182 3.55)
Error minima by case: (19.9133 2 8.9133 9 14.0 1 15.6846 2 29.0 1 29.0 1 32.0 2 23.1732 10 29.0 1 3.9133 1 30.0 1 69.7936 10 75.0 2 3.5792 1 14.0 1 67.0 1 21.584 11 36.0 2 40.0 2 4.2957 2 11.0 2 15.0 1 87.0 2 3.0 1 45.0 2)
Average genome size in population (length): 39.286
Average program size in population (points): 40.286
Average percent parens in population: 0.027
Minimum age in population: 9.15625
Maximum age in population: 14.1171875
Average age in population: 11.9212734375
Median age in population: 11.97265625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 243
Genome diversity (% unique Plush genomes):	 0.659
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 243
Syntactic diversity (% unique Push programs):	 0.659
Total error diversity:				 0.034
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 10617025
--- Timings ---
Current time: 1529614920008 milliseconds
Total Time:          34.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.6 seconds, 42.5%
Fitness Testing:     16.0 seconds, 46.6%
Report:               3.6 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 54375.0
Test mean error for best: 27.18750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 3.0927933655  
Correct output: 53.7468534166  | Program output: -25.2531465834
Correct output: -26.8372891707 | Program output: -39.8372891707
Correct output: -15.9448332614 | Program output: -55.9448332614
Correct output: -47.5313361213 | Program output: -75.5313361213
Correct output: 68.9133975513  | Program output: 104.9133975513
Correct output: 94.6735625473  | Program output: 63.6735625473 
Correct output: -23.9794056735 | Program output: 41.0205943265 
Correct output: -45.659617513  | Program output: -9.659617513  
Correct output: 18.305230938   | Program output: 100.305230938 
Correct output: -51.4672355255 | Program output: -14.4672355255
Correct output: -69.6136679003 | Program output: 14.3863320997 
Correct output: -160.5860881713 | Program output: -78.5860881713
Correct output: 26.5792162397  | Program output: 8.5792162397  
Correct output: 67.6788377982  | Program output: 54.6788377982 
Correct output: 98.9602843106  | Program output: 32.9602843106 
Correct output: -21.6321982448 | Program output: 35.3678017552 
Correct output: -135.7730066152 | Program output: -92.7730066152
Correct output: 107.1410234164 | Program output: 68.1410234164 
Correct output: 27.295683376   | Program output: 87.295683376  
Correct output: 116.4542279656 | Program output: 106.4542279656
Correct output: -50.856197321  | Program output: -28.856197321 
Correct output: 135.1762620097 | Program output: 49.1762620097 
Correct output: 14.2228157917  | Program output: 12.2228157917 
Correct output: 146.4103302491 | Program output: 102.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_sub integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [90.0 1 79.0 12 13.0 2 40.0 1 28.0 2 36.0 3 31.0 2 65.0 11 36.0 2 82.0 2 37.0 2 84.0 12 82.0 3 18.0 2 13.0 2 66.0 2 57.0 13 43.0 3 39.0 3 60.0 1 10.0 1 22.0 2 86.0 3 2.0 1 44.0 2]
Total: 1253.0
Mean: 25.06
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2714.292002299998
Median total errors in population: 1266.0
Error averages by case: (146.39384919999995 3.662 134.9647755 12.019 74.7631343 3.09 98.67236169999998 3.101 89.09849750000002 3.019 91.16897120000002 3.805 93.24881189999998 2.998 115.96418249999995 11.143 90.6535316 2.952 130.79849270000003 2.834 91.80565139999997 3.093 134.41317250000003 12.088 136.6979009 4.003 78.91621569999997 2.875 75.91404550000001 3.015 125.01641040000003 2.938 108.66562289999996 12.269 100.53596960000002 3.331 100.92577650000005 3.956 111.31254620000003 2.924 75.1756868 3.097 78.20385979999999 2.94 144.4595572000001 3.879 63.770566500000015 2.882 107.01741230000005 3.822)
Error minima by case: (40.4293 1 1.0834 8 13.0 1 14.9448 1 28.0 1 16.2499 1 31.0 2 3.0 1 29.0 1 4.2504 1 30.0 1 16.0 2 75.0 1 18.0 1 1.586 1 46.2968 1 11.0 2 36.0 2 39.0 2 17.7496 1 10.0 1 15.0 1 82.5128 2 2.0 1 44.0 2)
Average genome size in population (length): 32.179
Average program size in population (points): 33.179
Average percent parens in population: 0.031
Minimum age in population: 10.6875
Maximum age in population: 15.328125
Average age in population: 13.459265625
Median age in population: 13.5078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 423
Genome diversity (% unique Plush genomes):	 0.437
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 423
Syntactic diversity (% unique Push programs):	 0.437
Total error diversity:				 0.036
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 11422275
--- Timings ---
Current time: 1529614923237 milliseconds
Total Time:          37.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.2 seconds, 43.1%
Fitness Testing:     17.4 seconds, 46.2%
Report:               3.9 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 54532.0
Test mean error for best: 27.26600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 5.0927933655  
Correct output: 53.7468534166  | Program output: -23.2531465834
Correct output: -26.8372891707 | Program output: -37.8372891707
Correct output: -15.9448332614 | Program output: -53.9448332614
Correct output: -47.5313361213 | Program output: -73.5313361213
Correct output: 68.9133975513  | Program output: 106.9133975513
Correct output: 94.6735625473  | Program output: 65.6735625473 
Correct output: -23.9794056735 | Program output: 43.0205943265 
Correct output: -45.659617513  | Program output: -7.659617513  
Correct output: 18.305230938   | Program output: 102.305230938 
Correct output: -51.4672355255 | Program output: -12.4672355255
Correct output: -69.6136679003 | Program output: 16.3863320997 
Correct output: -160.5860881713 | Program output: -76.5860881713
Correct output: 26.5792162397  | Program output: 10.5792162397 
Correct output: 67.6788377982  | Program output: 56.6788377982 
Correct output: 98.9602843106  | Program output: 34.9602843106 
Correct output: -21.6321982448 | Program output: 37.3678017552 
Correct output: -135.7730066152 | Program output: -90.7730066152
Correct output: 107.1410234164 | Program output: 70.1410234164 
Correct output: 27.295683376   | Program output: 89.295683376  
Correct output: 116.4542279656 | Program output: 108.4542279656
Correct output: -50.856197321  | Program output: -26.856197321 
Correct output: 135.1762620097 | Program output: 51.1762620097 
Correct output: 14.2228157917  | Program output: 14.2228157917 
Correct output: 146.4103302491 | Program output: 104.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_mult integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_add integer_dec float_inc float_inc integer_mult float_mod integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_dec float_inc integer_sub print_float)
Errors: [88.0 2 77.0 11 11.0 2 38.0 2 26.0 2 38.0 3 29.0 2 67.0 10 38.0 2 84.0 2 39.0 2 86.0 11 84.0 2 16.0 2 11.0 2 64.0 2 59.0 13 45.0 3 37.0 2 62.0 2 8.0 2 24.0 2 84.0 3 0.0 0 42.0 2]
Total: 1245.0
Mean: 24.9
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2519.3799038999987
Median total errors in population: 1266.0
Error averages by case: (138.26851000000002 3.138 126.88538009999995 11.996 66.3569496 3.026 90.26589629999998 3.026 80.83960130000004 2.679 84.01150940000001 3.828 84.99059629999998 2.904 108.99908009999996 10.811 83.59099919999997 2.945 123.93800790000003 2.462 84.85741359999999 3.026 128.03934540000003 12.079 130.2609324 3.661 70.21534669999998 2.552 67.2640664 2.907 117.03225920000006 2.868 101.64335899999996 12.567 93.8462644 3.504 92.75214840000004 3.807 104.34344920000004 2.816 66.83456729999999 2.997 71.08842070000001 2.602 136.64257570000004 3.854 55.522351900000025 2.453 98.94887340000004 3.434)
Error minima by case: (14.7914 1 3.7914 8 11.0 2 0.0111 1 11.9889 1 30.0 1 29.0 1 13.4323 10 30.0 1 3.2086 1 31.0 2 38.0111 8 76.0 2 1.7176 1 0.414 2 64.0 1 11.0111 8 37.0 2 37.0 2 1.0012 1 8.0 1 16.0 1 84.0 2 0.0 0 42.0 2)
Average genome size in population (length): 33.235
Average program size in population (points): 34.235
Average percent parens in population: 0.030
Minimum age in population: 11.6875
Maximum age in population: 16.73046875
Average age in population: 14.890861328125
Median age in population: 14.91796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 215
Genome diversity (% unique Plush genomes):	 0.479
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 215
Syntactic diversity (% unique Push programs):	 0.479
Total error diversity:				 0.036
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 12253200
--- Timings ---
Current time: 1529614926458 milliseconds
Total Time:          40.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.6 seconds, 43.1%
Fitness Testing:     18.9 seconds, 46.2%
Report:               4.3 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 54787.0
Test mean error for best: 27.39350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 7.0927933655  
Correct output: 53.7468534166  | Program output: -21.2531465834
Correct output: -26.8372891707 | Program output: -35.8372891707
Correct output: -15.9448332614 | Program output: -51.9448332614
Correct output: -47.5313361213 | Program output: -71.5313361213
Correct output: 68.9133975513  | Program output: 108.9133975513
Correct output: 94.6735625473  | Program output: 67.6735625473 
Correct output: -23.9794056735 | Program output: 45.0205943265 
Correct output: -45.659617513  | Program output: -5.659617513  
Correct output: 18.305230938   | Program output: 104.305230938 
Correct output: -51.4672355255 | Program output: -10.4672355255
Correct output: -69.6136679003 | Program output: 18.3863320997 
Correct output: -160.5860881713 | Program output: -74.5860881713
Correct output: 26.5792162397  | Program output: 12.5792162397 
Correct output: 67.6788377982  | Program output: 58.6788377982 
Correct output: 98.9602843106  | Program output: 36.9602843106 
Correct output: -21.6321982448 | Program output: 39.3678017552 
Correct output: -135.7730066152 | Program output: -88.7730066152
Correct output: 107.1410234164 | Program output: 72.1410234164 
Correct output: 27.295683376   | Program output: 91.295683376  
Correct output: 116.4542279656 | Program output: 110.4542279656
Correct output: -50.856197321  | Program output: -24.856197321 
Correct output: 135.1762620097 | Program output: 53.1762620097 
Correct output: 14.2228157917  | Program output: 16.2228157917 
Correct output: 146.4103302491 | Program output: 106.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [86.0 2 75.0 12 9.0 2 36.0 2 24.0 2 40.0 2 27.0 2 69.0 11 40.0 1 86.0 2 41.0 2 88.0 12 86.0 3 14.0 2 9.0 2 62.0 2 61.0 13 47.0 3 35.0 3 64.0 2 6.0 1 26.0 2 82.0 2 2.0 1 40.0 1]
Total: 1244.0
Mean: 24.88
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2862.609851599999
Median total errors in population: 1257.0
Error averages by case: (150.19329910000005 3.151 140.52856749999998 12.024 80.42672249999998 3.117 104.35043059999997 3.059 94.54444870000003 2.494 99.09055500000004 3.938 98.16169269999996 3.028 123.07459709999998 10.539 98.39846399999999 3.042 138.75608820000005 2.294 99.61721679999997 3.129 141.1057868 12.114 143.70859339999998 3.464 83.06178169999995 2.399 80.7536241 3.03 129.77267750000004 3.0 115.80757869999992 12.96 107.75793870000003 3.977 105.80699800000002 3.938 118.61403320000002 2.875 80.69260759999997 3.063 86.02194229999998 2.403 149.05555710000002 3.982 68.53937240000002 2.227 112.31327790000005 3.209)
Error minima by case: (84.8138 1 44.0773 8 9.0 1 10.2768 1 16.3466 1 29.0 1 27.0 1 24.7106 9 18.2184 1 8.7175 1 12.4108 1 5.7357 10 72.7017 2 14.0 1 0.586 1 62.0 1 19.1363 9 36.0 2 35.0 2 18.1117 1 6.0 1 13.0218 1 82.0 2 0.0 0 40.0 1)
Average genome size in population (length): 35.352
Average program size in population (points): 36.352
Average percent parens in population: 0.028
Minimum age in population: 14.12109375
Maximum age in population: 18.349609375
Average age in population: 16.368513671875
Median age in population: 16.42919921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 62
Genome diversity (% unique Plush genomes):	 0.521
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 62
Syntactic diversity (% unique Push programs):	 0.521
Total error diversity:				 0.038
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 13137000
--- Timings ---
Current time: 1529614929690 milliseconds
Total Time:          44.0 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.1 seconds, 43.3%
Fitness Testing:     20.2 seconds, 46.0%
Report:               4.6 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 54787.0
Test mean error for best: 27.39350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 7.0927933655  
Correct output: 53.7468534166  | Program output: -21.2531465834
Correct output: -26.8372891707 | Program output: -35.8372891707
Correct output: -15.9448332614 | Program output: -51.9448332614
Correct output: -47.5313361213 | Program output: -71.5313361213
Correct output: 68.9133975513  | Program output: 108.9133975513
Correct output: 94.6735625473  | Program output: 67.6735625473 
Correct output: -23.9794056735 | Program output: 45.0205943265 
Correct output: -45.659617513  | Program output: -5.659617513  
Correct output: 18.305230938   | Program output: 104.305230938 
Correct output: -51.4672355255 | Program output: -10.4672355255
Correct output: -69.6136679003 | Program output: 18.3863320997 
Correct output: -160.5860881713 | Program output: -74.5860881713
Correct output: 26.5792162397  | Program output: 12.5792162397 
Correct output: 67.6788377982  | Program output: 58.6788377982 
Correct output: 98.9602843106  | Program output: 36.9602843106 
Correct output: -21.6321982448 | Program output: 39.3678017552 
Correct output: -135.7730066152 | Program output: -88.7730066152
Correct output: 107.1410234164 | Program output: 72.1410234164 
Correct output: 27.295683376   | Program output: 91.295683376  
Correct output: 116.4542279656 | Program output: 110.4542279656
Correct output: -50.856197321  | Program output: -24.856197321 
Correct output: 135.1762620097 | Program output: 53.1762620097 
Correct output: 14.2228157917  | Program output: 16.2228157917 
Correct output: 146.4103302491 | Program output: 106.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [86.0 2 75.0 12 9.0 2 36.0 2 24.0 2 40.0 2 27.0 2 69.0 11 40.0 1 86.0 2 41.0 2 88.0 12 86.0 3 14.0 2 9.0 2 62.0 2 61.0 13 47.0 3 35.0 3 64.0 2 6.0 1 26.0 2 82.0 2 2.0 1 40.0 1]
Total: 1244.0
Mean: 24.88
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2995.7446224999985
Median total errors in population: 1257.0
Error averages by case: (155.1791491 2.962 143.84263489999992 11.983 84.45861999999998 3.233 108.00888619999994 2.993 98.63749630000007 2.93 104.94179950000003 4.032 102.86803609999996 3.024 129.25572249999996 10.715 104.38337499999999 3.163 143.91669000000007 2.691 105.5606939 3.248 147.85549930000002 12.061 150.0862784 3.86 88.80621679999994 2.781 85.6232168 3.129 134.20497940000007 3.122 122.06354229999992 12.967 114.39889900000001 4.173 110.45031520000009 4.026 124.69987390000003 2.777 85.10216119999997 2.993 92.14895489999998 2.826 153.35594960000006 4.09 74.05072340000004 2.253 116.52890880000004 3.284)
Error minima by case: (35.243 1 24.243 8 3.0 1 6.1509 1 18.0 1 22.757 2 21.0 1 2.5129 7 29.0 1 6.6955 1 30.0 1 0.67 9 75.0 2 8.0 1 0.414 1 56.0 1 10.5129 9 36.0 2 29.0 2 0.5364 1 0.0 0 15.0 1 76.0 2 0.0 0 34.0 1)
Average genome size in population (length): 38.557
Average program size in population (points): 39.557
Average percent parens in population: 0.026
Minimum age in population: 15.150390625
Maximum age in population: 19.8251953125
Average age in population: 17.78070166015625
Median age in population: 17.828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 54
Genome diversity (% unique Plush genomes):	 0.602
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 54
Syntactic diversity (% unique Push programs):	 0.602
Total error diversity:				 0.052
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 14100925
--- Timings ---
Current time: 1529614932940 milliseconds
Total Time:          47.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        20.6 seconds, 43.5%
Fitness Testing:     21.6 seconds, 45.7%
Report:               5.0 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction tagged_63} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_mult integer_add integer_dup float_mod integer_min integer_mult integer_dup integer_min integer_dup_times integer_yank tagged_63 integer_dup float_mod integer_min float_mod integer_min integer_mult integer_flush integer_dec float_inc float_inc float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2891.789081799998
Median total errors in population: 1252.0
Error averages by case: (149.87731759999994 2.895 138.51607859999996 11.814 78.85283599999998 3.123 102.61942089999998 2.984 93.05411740000002 3.171 102.55112490000002 3.909 97.05424819999999 2.768 127.36954369999997 10.676 102.19673309999999 3.06 141.94346020000003 2.929 103.35906649999998 3.139 146.05939750000002 11.891 147.72301760000002 3.923 83.1372617 3.034 79.77448050000001 3.014 128.56895960000006 3.039 120.11368839999993 13.019 111.83919440000001 4.128 104.67775640000002 3.796 122.58893200000001 2.768 79.01439169999998 2.898 89.84338980000003 3.069 147.80105550000005 3.986 68.53157340000003 1.972 110.58703620000004 3.13)
Error minima by case: (80.0 1 40.7469 2 3.0 1 11.9448 1 18.0 1 29.0 1 21.0 1 9.1936 10 29.0 1 5.3052 1 30.0 1 28.1936 10 75.0 2 8.0 1 2.414 1 56.0 1 1.1936 10 36.0 2 29.0 2 14.2957 1 0.0 0 15.0 1 76.0 2 0.0 0 34.0 1)
Average genome size in population (length): 43.801
Average program size in population (points): 44.801
Average percent parens in population: 0.023
Minimum age in population: 16.4375
Maximum age in population: 21.23291015625
Average age in population: 19.34540478515625
Median age in population: 19.4097900390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 58
Genome diversity (% unique Plush genomes):	 0.592
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 58
Syntactic diversity (% unique Push programs):	 0.592
Total error diversity:				 0.044
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 15195950
--- Timings ---
Current time: 1529614936395 milliseconds
Total Time:          50.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.2 seconds, 43.8%
Fitness Testing:     23.0 seconds, 45.5%
Report:               5.3 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_add} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_add integer_min integer_mult float_inc float_inc integer_add integer_add integer_dec float_inc float_inc float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc float_stackdepth float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2795.4725633999974
Median total errors in population: 1245.0
Error averages by case: (144.8194107 3.041 133.30162509999997 11.597 73.70992059999999 3.099 97.3570884 3.182 88.01136180000003 3.198 100.1652105 3.796 92.134948 2.961 124.80653309999992 10.682 99.7826385 2.95 139.21909600000004 2.937 100.92773459999998 3.117 143.7019707 11.652 145.90749659999997 3.726 77.6416256 3.059 74.84180980000002 2.945 123.60945040000007 3.026 117.53665379999991 12.975 109.97437140000001 4.132 99.81101930000005 3.602 119.91157670000005 2.959 74.22957120000001 2.881 87.50090549999999 3.096 143.01683090000006 3.847 64.42899410000004 1.776 105.89872010000002 2.99)
Error minima by case: (79.0 1 39.7469 2 2.0 1 11.9448 1 17.0 1 26.6061 1 20.0 1 10.0226 10 26.6061 1 4.3052 1 27.6061 1 29.0226 10 72.6061 2 7.0 1 2.0 1 55.0 1 2.0226 10 33.6061 2 28.0 2 13.2957 1 0.0 0 12.6061 1 75.0 2 0.0 0 33.0 1)
Average genome size in population (length): 46.397
Average program size in population (points): 47.397
Average percent parens in population: 0.021
Minimum age in population: 18.14794921875
Maximum age in population: 22.6246337890625
Average age in population: 20.92542724609375
Median age in population: 20.9464111328125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 85
Genome diversity (% unique Plush genomes):	 0.616
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 85
Syntactic diversity (% unique Push programs):	 0.616
Total error diversity:				 0.056
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 16355875
--- Timings ---
Current time: 1529614939899 milliseconds
Total Time:          54.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.7 seconds, 43.7%
Fitness Testing:     24.6 seconds, 45.4%
Report:               5.8 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction float_inc} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction tagged_63} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub float_inc integer_max integer_min integer_dup_times integer_flush integer_dup float_mod integer_min integer_mult integer_dup integer_min integer_dup_times integer_yank tagged_63 integer_dup float_mod integer_min float_mod integer_min integer_mult integer_flush integer_dec float_inc float_inc float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3375.2398424999983
Median total errors in population: 1244.0
Error averages by case: (164.94040940000005 3.213 153.84415069999997 11.908 96.2071309 3.406 119.13934559999997 3.454 110.03400400000001 3.432 124.77398340000003 3.941 114.04382809999993 3.36 148.69927299999998 11.131 124.63137909999998 3.08 162.27676910000008 3.187 125.79973429999997 3.385 167.16094629999995 11.969 169.55382849999998 4.224 100.06255639999998 3.303 97.17226679999999 3.067 144.59570770000008 3.234 141.64048739999996 12.845 134.67776870000006 4.338 121.57960920000004 4.155 143.71429630000003 3.251 97.12708819999997 2.861 112.6468924 3.324 163.6321742 3.902 89.72852160000001 2.422 127.98169120000004 3.184)
Error minima by case: (4.7021 1 6.2979 9 1.0 1 11.9448 1 9.1371 1 3.2534 1 19.0 1 19.6246 10 11.0088 1 0.6948 1 5.2012 1 12.9453 2 76.0 2 6.0 1 1.0 1 26.7934 1 11.4497 10 37.0 2 27.0 2 0.9327 1 0.0 0 5.8122 1 63.0094 2 0.0 0 32.0 1)
Average genome size in population (length): 49.24
Average program size in population (points): 50.24
Average percent parens in population: 0.020
Minimum age in population: 19.76806640625
Maximum age in population: 24.3936767578125
Average age in population: 22.36124078369141
Median age in population: 22.40850830078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 64
Genome diversity (% unique Plush genomes):	 0.659
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 64
Syntactic diversity (% unique Push programs):	 0.659
Total error diversity:				 0.06
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 17586875
--- Timings ---
Current time: 1529614943165 milliseconds
Total Time:          57.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.1 seconds, 43.7%
Fitness Testing:     26.1 seconds, 45.5%
Report:               6.1 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_add} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add float_add float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2685.582743899998
Median total errors in population: 1241.0
Error averages by case: (136.46919429999997 2.762 125.68208059999995 11.975 66.45731119999996 3.088 90.16049909999995 3.12 80.71016530000003 2.981 99.8694621 3.809 83.43975089999999 3.001 124.29351189999997 11.142 99.98543959999999 3.348 139.41131810000005 2.723 101.13840239999996 3.011 142.9953827 12.033 146.01052350000003 3.747 69.33070009999999 2.799 66.06635240000003 2.287 115.03211259999999 2.751 116.94385779999996 12.638 110.07519020000001 3.84 91.07203460000005 3.808 119.19179050000001 2.947 66.4842167 2.229 87.51275639999999 2.862 134.49464840000007 3.595 62.830680099999995 2.403 98.06336240000005 2.963)
Error minima by case: (16.924 1 0.9373 1 0.0 0 8.9448 1 13.0 1 7.2554 1 16.0 1 5.8457 2 29.0 1 0.3052 1 27.5328 1 6.0 1 8.4139 2 3.0 1 0.0 0 2.6798 1 2.1543 2 36.0 2 24.0 2 9.2957 1 0.0 0 1.8562 1 22.6798 2 0.0 0 19.3202 1)
Average genome size in population (length): 53.722
Average program size in population (points): 54.722
Average percent parens in population: 0.019
Minimum age in population: 20.76806640625
Maximum age in population: 25.660400390625
Average age in population: 23.72446185302734
Median age in population: 23.75347900390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.062
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 18929925
--- Timings ---
Current time: 1529614946804 milliseconds
Total Time:          61.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.6 seconds, 43.5%
Fitness Testing:     27.8 seconds, 45.6%
Report:               6.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction float_inc} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction tagged_63} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub float_inc integer_max integer_min integer_dup_times integer_flush integer_dup float_mod integer_min integer_mult integer_dup integer_min integer_dup_times integer_yank tagged_63 integer_dup float_mod integer_min float_mod integer_min integer_mult integer_flush integer_dec float_inc float_inc float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mod float_mod integer_dec float_inc integer_sub print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2916.974989499998
Median total errors in population: 1239.0
Error averages by case: (144.44062350000002 3.076 132.85819409999996 12.009 74.38617629999997 3.153 97.81331839999999 3.216 88.74994860000004 2.923 109.88231050000003 4.039 92.41200989999996 3.146 134.19455449999995 11.184 109.69706 3.98 148.22696120000003 2.669 110.82078919999995 3.069 152.9797816999999 12.055 155.78205119999996 3.561 77.84810129999997 2.755 75.2550594 2.319 123.60673810000006 3.046 126.96851539999993 12.851 120.31085329999999 3.95 100.03135350000001 3.865 129.26315050000002 3.051 75.36808779999998 2.398 97.46405549999996 2.798 142.9295386 3.988 73.83928269999997 2.932 106.57347430000002 3.24)
Error minima by case: (7.7424 1 0.9548 9 0.0 0 8.9448 1 10.0 1 8.9064 1 13.0 1 5.4447 9 28.3404 1 0.3052 1 24.5328 1 1.8232 3 5.4139 1 0.0 0 0.0 0 31.0397 1 1.7221 10 36.0 2 21.0 2 5.2957 1 0.0 0 4.8562 1 34.8237 2 0.0 0 26.0 1)
Average genome size in population (length): 55.512
Average program size in population (points): 56.512
Average percent parens in population: 0.018
Minimum age in population: 23.157470703125
Maximum age in population: 27.070556640625
Average age in population: 25.2156046295166
Median age in population: 25.26365661621094
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.689
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.689
Total error diversity:				 0.067
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 20317725
--- Timings ---
Current time: 1529614950427 milliseconds
Total Time:          64.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.1 seconds, 43.3%
Fitness Testing:     29.6 seconds, 45.7%
Report:               7.0 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_add} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add float_add float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2823.542960799998
Median total errors in population: 1239.0
Error averages by case: (140.6417373 3.11 128.9754582 11.994 70.58731019999996 3.197 93.82629549999993 3.261 84.88097190000003 2.878 106.30427929999999 4.013 88.42231249999999 3.116 130.78313079999995 11.181 106.06018829999995 3.809 144.91511000000008 2.603 107.21250739999998 3.082 149.6099357 12.057 152.62992619999997 3.515 73.8413313 2.677 71.26478300000002 2.298 119.55805020000001 3.059 123.57308959999995 12.908 116.98946339999998 3.932 96.06307380000003 3.824 125.68709290000007 3.049 71.31288269999996 2.374 93.96128419999998 2.755 139.0749064 4.007 70.0001993 2.962 102.50064070000005 3.206)
Error minima by case: (9.7402 1 3.0415 6 0.0 0 0.2893 1 8.0 1 13.6568 1 11.0 1 3.1245 9 24.7544 1 1.3052 1 18.9468 1 0.8003 2 4.4139 1 0.0 0 0.0 0 15.6077 1 4.8755 9 36.0 2 19.0 2 6.0415 1 0.0 0 5.8562 1 35.8237 2 0.0 0 24.0 1)
Average genome size in population (length): 55.531
Average program size in population (points): 56.531
Average percent parens in population: 0.018
Minimum age in population: 24.18994140625
Maximum age in population: 28.72611236572266
Average age in population: 26.66144284057617
Median age in population: 26.71515655517578
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.069
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 21706000
--- Timings ---
Current time: 1529614953801 milliseconds
Total Time:          68.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.5 seconds, 43.2%
Fitness Testing:     31.1 seconds, 45.7%
Report:               7.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction float_inc} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_min} {:instruction float_swap} {:instruction integer_yank} {:instruction float_min} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub float_inc integer_max integer_min integer_dup_times integer_flush integer_dup float_mod integer_min integer_mult integer_dup integer_min float_swap integer_yank float_min integer_dup float_mod integer_min float_mod integer_min integer_mult integer_flush integer_dec float_inc float_inc float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3127.4592432999984
Median total errors in population: 1239.0
Error averages by case: (151.65384179999995 3.234 140.79990189999998 12.002 83.08577249999999 3.274 106.1907272 3.339 97.10351829999998 2.999 118.65486710000008 4.154 100.96116799999994 3.279 142.8420358 11.205 117.78394569999999 4.078 156.59679940000004 2.769 119.05399369999999 3.179 160.78170419999995 12.075 163.83653529999998 3.617 85.75876309999994 2.855 83.96736309999999 2.47 131.71661130000007 3.232 135.6227142999999 12.915 128.67414789999998 4.011 108.51094190000003 3.957 137.77619080000002 3.173 84.17532629999998 2.527 106.10545459999997 2.872 150.93672980000005 4.178 82.0668571 3.113 114.93333220000004 3.363)
Error minima by case: (7.0388 1 12.0056 8 0.0 0 4.1213 1 11.0 1 12.9944 2 14.0 1 6.2185 9 27.3404 1 0.9612 1 23.5328 1 25.2185 3 4.4139 2 1.0 1 0.0 0 31.0397 1 1.7815 9 36.0 2 22.0 2 4.2957 1 0.0 0 4.8562 1 34.8237 2 0.0 0 27.0 1)
Average genome size in population (length): 55.52
Average program size in population (points): 56.52
Average percent parens in population: 0.018
Minimum age in population: 25.36626434326172
Maximum age in population: 29.87355422973633
Average age in population: 28.09242691802979
Median age in population: 28.13031959533691
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.072
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 23094000
--- Timings ---
Current time: 1529614957396 milliseconds
Total Time:          71.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.0 seconds, 43.2%
Fitness Testing:     32.8 seconds, 45.8%
Report:               7.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_add} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction print_float} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_mod print_integer float_inc float_inc integer_add integer_min integer_mult float_inc float_inc integer_add integer_add integer_dec float_inc float_inc float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc float_stackdepth float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc print_float print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2831.2944217999993
Median total errors in population: 1239.0
Error averages by case: (140.54688869999995 3.15 128.78710319999996 11.999 70.35665519999996 3.21 93.46240909999996 3.272 84.70688200000001 2.911 106.91429820000002 4.013 88.2145232 3.13 131.67961449999996 11.181 107.05809549999998 3.847 145.42629370000003 2.597 108.23975030000001 3.09 150.61872090000003 12.06 153.80411219999996 3.51 73.60194239999997 2.683 71.0409212 2.303 119.55101050000006 3.084 124.4547877999999 12.916 118.0771876 3.942 95.97403790000004 3.793 126.32457160000003 3.05 70.96896980000001 2.357 94.94044669999995 2.799 139.10279810000003 4.042 69.94376109999999 2.974 102.39064040000005 3.195)
Error minima by case: (23.0152 1 16.3308 9 0.0 0 6.9448 1 9.0 1 1.1642 1 9.1924 1 1.5421 9 29.0 1 0.3052 1 30.0 1 17.4579 3 75.0 2 1.0 1 0.0 0 28.8827 1 9.5421 9 36.0 2 20.0 2 1.1987 1 0.0 0 15.0 1 65.0987 2 0.0 0 25.0 1)
Average genome size in population (length): 54.946
Average program size in population (points): 55.946
Average percent parens in population: 0.018
Minimum age in population: 26.36626434326172
Maximum age in population: 31.39874649047852
Average age in population: 29.484991979599
Median age in population: 29.48846530914307
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.07
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 24467650
--- Timings ---
Current time: 1529614960849 milliseconds
Total Time:          75.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        32.5 seconds, 43.2%
Fitness Testing:     34.4 seconds, 45.8%
Report:               8.2 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction 22} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_inc} {:instruction 67} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup integer_mod integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult 22 integer_dec integer_min integer_mult float_stackdepth float_inc float_inc float_inc float_inc float_inc integer_add integer_dup integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_dec float_inc 67 print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3106.3909559999984
Median total errors in population: 1239.0
Error averages by case: (151.76392870000006 3.233 140.31098829999996 12.001 81.94889799999999 3.267 105.12878049999995 3.347 96.02322190000005 3.004 117.43346890000005 4.114 99.79120949999995 3.244 141.79442040000004 11.208 117.2492339 4.021 155.7497046000001 2.7 118.41477489999995 3.188 160.44258769999993 12.085 162.94660899999988 3.615 85.69058419999996 2.8 82.95114629999998 2.442 130.9384118000001 3.216 134.6964228999999 12.945 127.54128630000001 4.037 107.56791370000005 3.935 136.75690050000006 3.157 82.82207689999996 2.522 105.16825699999993 2.87 150.1551243 4.14 81.87727960000002 3.087 113.72072620000004 3.329)
Error minima by case: (72.0 1 32.7469 2 0.0 0 0.9448 1 10.0 1 9.1139 1 12.1924 1 9.6364 9 30.0 1 1.2477 1 31.0 1 9.3636 3 76.0 1 0.0 0 0.0 0 48.0 1 15.2852 9 37.0 2 21.0 2 6.2957 1 0.0 0 16.0 1 68.0 2 0.0 0 26.0 1)
Average genome size in population (length): 55.07
Average program size in population (points): 56.07
Average percent parens in population: 0.018
Minimum age in population: 28.30465698242188
Maximum age in population: 33.26151084899902
Average age in population: 30.92547179889679
Median age in population: 30.97437191009521
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.811
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.811
Total error diversity:				 0.069
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 25844400
--- Timings ---
Current time: 1529614964468 milliseconds
Total Time:          78.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        34.1 seconds, 43.3%
Fitness Testing:     36.0 seconds, 45.7%
Report:               8.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction -29} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction float_mod} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add -29 integer_min integer_dup_times integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min float_mod integer_mult integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc float_mod integer_min integer_mult integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2954.5092553999984
Median total errors in population: 1239.0
Error averages by case: (146.08308889999998 3.065 134.8445794 12.029 75.70552419999999 3.11 99.29782659999996 3.196 89.76147700000001 2.809 111.64322080000001 3.97 93.22498709999998 3.084 136.69830709999997 11.184 111.58301110000001 3.885 151.05809960000005 2.554 112.69680709999996 3.049 155.3109791 12.086 156.91291389999995 3.417 79.38442989999997 2.644 76.3896484 2.239 124.86165250000003 3.063 129.48915509999992 12.932 121.1805192 3.861 100.97804960000002 3.78 131.67924620000005 3.01 75.62387999999999 2.311 99.29905139999998 2.713 144.01812220000002 4.011 75.84772739999998 2.935 106.85795160000002 3.142)
Error minima by case: (13.7967 1 24.7967 9 0.0 0 6.3122 1 11.0 1 29.0 2 12.1924 1 13.9853 9 29.0 1 0.3052 1 30.0 1 60.4927 10 75.0 2 1.0 1 0.0 0 49.0 1 5.9853 9 36.0 2 22.0 2 9.2957 1 0.0 0 15.0 1 69.0 2 0.0 0 27.0 1)
Average genome size in population (length): 54.806
Average program size in population (points): 55.806
Average percent parens in population: 0.018
Minimum age in population: 29.98818778991699
Maximum age in population: 34.25898599624634
Average age in population: 32.39818247747421
Median age in population: 32.43298482894897
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.803
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.803
Total error diversity:				 0.056
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 27214550
--- Timings ---
Current time: 1529614967857 milliseconds
Total Time:          82.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.5 seconds, 43.2%
Fitness Testing:     37.6 seconds, 45.7%
Report:               8.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction float_inc} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction tagged_63} {:instruction integer_dup} {:instruction float_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub float_inc integer_max integer_min integer_dup_times integer_flush integer_dup float_mod integer_min integer_mult integer_dup integer_dup_items integer_dup_times integer_yank tagged_63 integer_dup float_mod float_inc float_inc float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc print_integer float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_yankdup float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_frominteger integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2991.473204599999
Median total errors in population: 1239.0
Error averages by case: (147.39627170000003 3.201 136.49290299999996 12.019 78.28049719999997 3.231 101.47136109999995 3.296 92.40739050000006 2.96 112.92583950000005 4.104 94.63490069999996 3.256 136.06862009999998 11.191 113.53257139999997 3.934 150.72700480000003 2.704 114.70237719999999 3.119 154.8037561 12.047 159.5762123999999 3.562 81.10777069999996 2.799 77.4974777 2.418 125.55828640000009 3.2 128.93874779999987 12.908 124.2507949 4.002 102.24853820000007 3.926 130.82584360000007 3.134 78.68029919999995 2.484 101.53507469999992 2.827 144.95008300000006 4.131 76.20617779999998 3.06 109.83140490000004 3.31)
Error minima by case: (37.9536 1 1.3923 8 0.0 0 7.6456 1 13.0 1 13.7742 1 16.0 1 10.9377 8 24.2781 1 0.6948 1 18.4705 1 0.6299 3 75.0 2 3.0 1 0.0 0 36.0 1 5.3544 9 36.0 2 24.0 2 4.8256 1 0.0 0 15.0 1 16.0 2 0.0 0 29.0 1)
Average genome size in population (length): 54.299
Average program size in population (points): 55.299
Average percent parens in population: 0.018
Minimum age in population: 31.01788330078125
Maximum age in population: 35.70991063117981
Average age in population: 33.79118851184845
Median age in population: 33.8261342048645
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.069
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 28572025
--- Timings ---
Current time: 1529614971555 milliseconds
Total Time:          85.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.1 seconds, 43.2%
Fitness Testing:     39.2 seconds, 45.7%
Report:               9.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction tagged_63} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_dup_times integer_yank tagged_63 integer_dup integer_dup integer_dup_items integer_dup_items integer_min integer_mult float_inc float_add float_inc float_inc integer_add integer_dup float_mod integer_min integer_min integer_mult integer_mult integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2661.0634854999985
Median total errors in population: 1239.0
Error averages by case: (134.21094879999998 2.946 123.69967400000002 11.986 64.0510964 3.022 87.84255579999999 3.098 78.45316640000003 2.731 100.58892710000003 3.869 81.14051729999997 2.978 124.66773749999997 11.146 100.04494109999999 3.784 140.26124120000003 2.458 101.16070679999999 2.945 143.32665440000002 12.051 146.30853460000006 3.342 66.78776399999997 2.518 64.01342360000001 2.139 112.8614299 2.939 117.35216189999993 12.909 110.44124080000002 3.776 88.83018050000001 3.656 119.89588650000003 2.923 64.38517590000001 2.181 87.8312052 2.601 132.29250820000004 3.875 63.199253899999995 2.799 95.71255370000002 3.032)
Error minima by case: (67.0703 1 26.2108 8 0.0 0 10.9448 1 4.5313 1 29.0 1 10.0 1 2.5727 9 9.6055 1 0.3052 1 15.4131 1 7.0941 9 2.4139 1 0.0 0 0.0 0 25.0397 1 10.5727 8 36.0 2 18.0 2 6.6487 1 0.0 0 1.1438 1 28.8237 2 0.0 0 23.0 1)
Average genome size in population (length): 54.395
Average program size in population (points): 55.395
Average percent parens in population: 0.018
Minimum age in population: 32.88296031951904
Maximum age in population: 37.35994923114777
Average age in population: 35.25785981357098
Median age in population: 35.26614308357239
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.066
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 29931900
--- Timings ---
Current time: 1529614975091 milliseconds
Total Time:          89.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.6 seconds, 43.2%
Fitness Testing:     40.8 seconds, 45.6%
Report:               9.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc float_inc integer_add integer_dec float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc float_rot integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3305.236707999999
Median total errors in population: 1239.0
Error averages by case: (158.11772120000003 3.204 147.84077399999995 12.023 89.90202269999997 3.335 112.90796389999998 3.399 103.76339510000005 3.036 126.93224380000004 4.119 106.29450839999998 3.241 150.744408 11.238 126.83703790000001 4.036 165.6027203 2.721 127.92310659999997 3.246 168.87934419999993 12.092 171.7274036999999 3.669 92.53833889999996 2.807 89.60585699999997 2.431 137.28117940000004 3.215 143.6370837999999 12.941 136.67247600000002 4.093 113.86776900000001 3.931 145.76995110000004 3.152 89.9712178 2.482 114.83065889999996 2.931 156.16577100000003 4.143 88.9857199 3.056 120.59903540000005 3.298)
Error minima by case: (19.0 1 7.7358 8 0.0 0 7.9448 1 10.0 1 7.4307 2 13.0 1 22.9014 10 23.8625 1 1.3052 1 18.0549 1 0.0915 9 75.0 1 0.0 0 0.0 0 37.4776 1 14.9014 9 36.0 2 21.0 1 10.2957 1 0.0 0 15.0 1 23.0 2 0.0 0 26.0 1)
Average genome size in population (length): 54.056
Average program size in population (points): 55.056
Average percent parens in population: 0.019
Minimum age in population: 34.21285676956177
Maximum age in population: 38.48754012584686
Average age in population: 36.70065314954519
Median age in population: 36.73952928185463
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.822
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.822
Total error diversity:				 0.058
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 31283300
--- Timings ---
Current time: 1529614978464 milliseconds
Total Time:          92.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.1 seconds, 43.2%
Fitness Testing:     42.4 seconds, 45.7%
Report:              10.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_mult} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_mult integer_add integer_dup float_mod integer_min integer_mult integer_dup integer_flush integer_dec float_inc float_inc float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_mult integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3134.5014485999995
Median total errors in population: 1239.0
Error averages by case: (151.90985539999994 3.101 141.56047249999997 11.992 83.91015729999998 3.189 107.26975889999999 3.27 97.90313560000004 2.911 119.11910570000003 4.021 100.60431639999999 3.098 143.51736689999998 11.191 118.53881029999998 3.906 158.15310980000007 2.626 119.74606999999997 3.059 161.16971530000004 12.094 164.41133329999997 3.531 85.85664929999996 2.683 83.61913779999996 2.276 131.80126350000003 3.078 136.30750639999994 12.952 128.96293250000002 3.938 108.18724570000005 3.807 138.39142050000004 3.028 83.74139059999996 2.371 106.84111809999995 2.794 150.86106330000007 4.027 82.33812779999998 2.928 114.70038570000001 3.209)
Error minima by case: (8.4442 1 2.5558 2 0.0 0 3.032 1 6.0 1 15.9735 2 9.0 1 19.968 9 29.0 1 2.3052 1 30.0 1 40.2898 3 75.0 1 0.0 0 0.0 0 44.0 1 11.968 9 36.0 2 17.0 2 5.9312 1 0.0 0 15.0 1 64.0 1 0.0 0 22.0 1)
Average genome size in population (length): 53.604
Average program size in population (points): 54.604
Average percent parens in population: 0.019
Minimum age in population: 35.21285676956177
Maximum age in population: 39.89328321814537
Average age in population: 38.1116660849452
Median age in population: 38.16641920804977
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.059
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 32623400
--- Timings ---
Current time: 1529614981994 milliseconds
Total Time:          96.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.6 seconds, 43.2%
Fitness Testing:     44.0 seconds, 45.7%
Report:              10.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_dup} {:instruction integer_dup_times} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_dup integer_dup_times integer_dup integer_max integer_min integer_dup_times float_inc integer_dup_times float_inc integer_min integer_dup_times float_inc integer_pop integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_sub integer_dec integer_dec float_inc float_dup_times integer_dec float_inc integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3158.1239434999984
Median total errors in population: 1239.0
Error averages by case: (150.70397989999998 3.24 142.38771469999995 12.014 85.02095489999998 3.305 107.99843709999995 3.368 99.11455700000005 3.013 120.45162610000001 4.155 103.11551929999999 3.274 144.48750970000003 11.197 116.4694451 4.171 158.07175490000006 2.718 119.23855529999996 3.253 159.91072669999994 12.074 166.1498084 3.619 84.50911319999993 2.841 86.12354199999997 2.488 132.50569210000003 3.25 136.97033109999992 12.952 130.91844820000003 4.075 110.6853195000001 3.979 139.3431994 3.193 86.20420019999997 2.555 108.34056109999999 2.887 152.97984870000005 4.189 81.0651358 3.124 117.06296310000006 3.361)
Error minima by case: (30.0772 1 19.0772 9 0.0 0 5.9448 1 10.0 1 17.9228 1 13.0 1 3.1781 8 29.0 1 0.3052 1 30.0 1 15.8219 3 75.0 1 0.0 0 0.0 0 48.0 1 11.1781 10 36.0 2 21.0 2 4.1362 1 0.0 0 15.0 1 68.0 2 0.0 0 26.0 1)
Average genome size in population (length): 54.079
Average program size in population (points): 55.079
Average percent parens in population: 0.018
Minimum age in population: 36.21285676956177
Maximum age in population: 41.50014263391495
Average age in population: 39.51026810446382
Median age in population: 39.52825051546097
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.792
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.792
Total error diversity:				 0.069
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 33975375
--- Timings ---
Current time: 1529614985497 milliseconds
Total Time:          99.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.1 seconds, 43.2%
Fitness Testing:     45.6 seconds, 45.7%
Report:              11.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_sub integer_min integer_dup_times integer_shove integer_dec float_inc float_inc integer_mult float_inc integer_dec integer_add integer_dup float_inc float_inc integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_yank integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2900.531716099999
Median total errors in population: 1239.0
Error averages by case: (142.30303439999997 3.1 132.8463765 12.005 74.1691165 3.156 97.67736989999999 3.193 88.44516180000004 2.829 110.92566580000002 3.988 89.89613589999996 3.111 133.97772589999997 11.172 109.86170619999997 3.862 149.75440320000004 2.576 111.9170718 3.03 152.59264329999996 12.061 156.57256989999996 3.436 75.9834634 2.657 72.90452450000001 2.266 121.17270890000003 3.075 126.73857789999992 12.937 120.96539700000001 3.854 97.47153090000006 3.76 128.95989530000003 3.027 74.5315264 2.338 98.66618769999995 2.702 140.39726050000007 4.018 71.97556049999997 2.953 105.53510200000004 3.185)
Error minima by case: (3.9072 1 23.7733 8 0.0 0 7.3122 1 11.0 1 9.1401 1 14.0 1 1.5975 9 16.6596 1 0.6948 1 21.4672 1 7.3863 9 7.4139 2 1.0 1 0.0 0 20.9068 1 9.5975 10 36.0 2 22.0 2 4.7733 1 0.0 0 2.8562 1 22.0 2 0.0 0 6.5897 1)
Average genome size in population (length): 54.329
Average program size in population (points): 55.329
Average percent parens in population: 0.018
Minimum age in population: 38.1912567615509
Maximum age in population: 42.95094787329435
Average age in population: 40.94237837783992
Median age in population: 40.97653246298432
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.064
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 35333600
--- Timings ---
Current time: 1529614988920 milliseconds
Total Time:         103.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.6 seconds, 43.1%
Fitness Testing:     47.2 seconds, 45.7%
Report:              11.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_dup_items integer_dup_items integer_min integer_mult float_inc float_add float_inc float_inc integer_add integer_dup integer_max integer_min integer_min integer_mult integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_stackdepth float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3011.987497699998
Median total errors in population: 1239.0
Error averages by case: (146.17151850000002 3.094 138.39734099999998 11.989 80.041631 3.152 103.39573739999999 3.224 94.07980060000003 2.824 114.53384200000002 4.015 95.14353939999998 3.113 137.86471299999997 11.182 112.21774289999996 3.802 153.3299707000001 2.582 116.152561 3.032 155.51957689999995 12.073 160.71856549999995 3.44 80.05913419999999 2.632 78.11132150000002 2.274 125.83666100000005 3.07 130.50700409999996 12.931 125.2848322 3.884 102.78114610000004 3.799 132.78154620000004 3.044 79.37664909999998 2.368 103.25228229999996 2.714 145.37350380000004 4.018 76.34233280000002 2.944 110.31254450000004 3.202)
Error minima by case: (4.558 1 1.026 2 0.0 0 4.192 1 8.0 1 16.1926 1 11.0 1 15.5813 2 15.3192 1 1.3052 1 23.5328 1 16.0 2 4.4139 1 1.0 1 0.0 0 21.808 1 10.7334 2 37.0 2 5.192 1 0.8293 1 0.0 0 5.8562 1 23.0 2 0.0 0 0.192 1)
Average genome size in population (length): 54.054
Average program size in population (points): 55.054
Average percent parens in population: 0.018
Minimum age in population: 39.77995511889458
Maximum age in population: 44.0911776907742
Average age in population: 42.35092261338234
Median age in population: 42.37261310406029
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.766
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.766
Total error diversity:				 0.069
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 36684950
--- Timings ---
Current time: 1529614992344 milliseconds
Total Time:         106.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.0 seconds, 43.1%
Fitness Testing:     48.8 seconds, 45.7%
Report:              11.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction 18} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_items integer_min integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_min integer_mult integer_mult integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc 18 float_inc float_inc float_shove float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2937.6778363999974
Median total errors in population: 1239.0
Error averages by case: (145.27396900000002 3.074 133.69200649999996 11.979 75.17617539999998 3.223 98.51736919999996 3.298 89.47197610000005 2.913 110.85831600000004 4.04 92.93381049999995 3.158 135.49924499999995 11.171 110.69014999999997 3.987 149.42514960000008 2.603 111.82749159999996 3.108 154.24293379999997 12.063 156.6090715 3.542 78.43748209999998 2.653 75.91368250000001 2.324 124.10685860000007 3.121 128.3077171999999 12.901 121.12153350000004 3.951 100.61442370000006 3.866 130.27554660000004 3.07 75.76188819999999 2.372 98.58222349999996 2.779 143.39327920000008 4.065 74.7259603 2.924 106.82657680000007 3.208)
Error minima by case: (74.0 1 18.0 1 0.0 0 4.9448 1 12.0 1 29.0 1 13.1924 1 14.9318 2 26.3404 1 1.3052 1 22.5328 1 18.0 2 3.4139 2 2.0 1 0.0 0 32.0397 1 6.9318 2 36.0 2 23.0 2 8.1362 1 0.0 0 5.8562 1 35.8237 1 0.0 0 28.0 1)
Average genome size in population (length): 53.626
Average program size in population (points): 54.626
Average percent parens in population: 0.019
Minimum age in population: 40.77995511889458
Maximum age in population: 45.86090825498104
Average age in population: 43.82479996406287
Median age in population: 43.87426587659866
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.066
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 38025625
--- Timings ---
Current time: 1529614996011 milliseconds
Total Time:         110.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.5 seconds, 43.1%
Fitness Testing:     50.4 seconds, 45.7%
Report:              12.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_add} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_pop} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_dup float_mod integer_dup_times integer_yank integer_add integer_dup integer_dup integer_min integer_dup_times integer_yank integer_add float_add float_mod integer_pop integer_mult float_mod integer_dec float_inc float_inc integer_mult float_inc integer_mult float_mod integer_dec float_inc float_inc integer_mult float_inc integer_dec integer_swap float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod integer_dec float_inc integer_pop print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3250.1958356999985
Median total errors in population: 1239.0
Error averages by case: (156.16255220000002 3.302 145.68638299999998 12.014 88.20994099999997 3.355 111.13586349999996 3.439 102.24157070000005 3.027 123.19552060000007 4.214 105.84165969999995 3.341 147.38922850000003 11.243 123.1878569 3.969 160.81614870000004 2.742 124.36749649999999 3.322 165.51212199999995 12.094 168.61350249999992 3.695 90.70946639999994 2.854 89.01019629999996 2.526 136.46853430000007 3.289 140.30732129999987 12.924 133.63708720000002 4.136 113.51866990000008 4.09 142.0596622 3.258 89.18625549999996 2.615 111.21898719999994 2.904 155.63124090000002 4.226 87.082609 3.152 119.84995970000008 3.425)
Error minima by case: (6.8021 1 2.5658 8 0.0 0 7.9448 1 9.0 1 7.8451 2 12.0 1 24.1981 9 29.0 1 0.3052 1 25.5328 1 62.9075 3 6.4139 2 1.0 1 0.0 0 30.0397 1 15.4497 9 36.0 2 20.0 2 3.5658 1 0.0 0 3.8562 1 33.8237 2 0.0 0 25.0 1)
Average genome size in population (length): 53.181
Average program size in population (points): 54.181
Average percent parens in population: 0.019
Minimum age in population: 42.85850884765387
Maximum age in population: 47.30674156546593
Average age in population: 45.33799647149071
Median age in population: 45.38580791279674
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.796
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.796
Total error diversity:				 0.069
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 39355150
--- Timings ---
Current time: 1529614999478 milliseconds
Total Time:         113.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.0 seconds, 43.1%
Fitness Testing:     52.0 seconds, 45.7%
Report:              12.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction float_mod} {:instruction integer_min} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction tag_integer_519} {:instruction integer_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub float_mod integer_min float_sub integer_dup integer_max integer_min integer_yank float_inc integer_dup_times float_inc integer_yankdup integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add integer_dup float_mod integer_min integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc float_mod integer_min integer_mult float_mod integer_dec integer_min integer_mult float_stackdepth float_inc float_inc float_inc float_inc float_inc integer_add integer_dup float_mod integer_min integer_mult float_mod tag_integer_519 integer_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3212.1934454999987
Median total errors in population: 1239.0
Error averages by case: (155.3067541 3.235 143.92989409999998 12.01 86.02442289999996 3.318 109.03108489999995 3.376 100.00201090000004 3.039 122.16710760000007 4.137 103.48956189999996 3.26 146.66305899999998 11.229 122.1674733 4.194 160.49119840000006 2.713 123.34023389999996 3.281 165.17404299999995 12.091 167.55896339999993 3.662 89.47731569999992 2.823 86.69564519999997 2.454 134.5220084000001 3.241 139.5710365999999 12.937 132.3898992 4.11 111.11386300000005 3.986 141.55652340000003 3.154 86.40190889999994 2.488 110.18854669999995 2.912 153.57984980000006 4.177 85.87838389999999 3.115 117.19565730000006 3.335)
Error minima by case: (69.0928 1 29.7469 1 0.0 0 1.0552 1 8.0 1 29.0 1 11.0 1 0.1049 9 29.0 1 0.6948 1 28.1049 1 18.8951 9 16.8951 2 2.0 1 0.0 0 46.0 1 5.4982 9 22.1049 2 19.0 2 3.2957 1 0.0 0 15.0 1 66.0 2 0.0 0 24.0 1)
Average genome size in population (length): 53.343
Average program size in population (points): 54.343
Average percent parens in population: 0.019
Minimum age in population: 44.60650885850191
Maximum age in population: 48.74882552400231
Average age in population: 46.78541691955924
Median age in population: 46.84933090303093
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.059
Error (vector) diversity:			 0.065
Behavioral diversity:				 0.065
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 40688750
--- Timings ---
Current time: 1529615003113 milliseconds
Total Time:         117.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.6 seconds, 43.1%
Fitness Testing:     53.6 seconds, 45.7%
Report:              13.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 55613.0
Test mean error for best: 27.80650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 12.0927933655 
Correct output: 53.7468534166  | Program output: -16.2531465834
Correct output: -26.8372891707 | Program output: -30.8372891707
Correct output: -15.9448332614 | Program output: -46.9448332614
Correct output: -47.5313361213 | Program output: -66.5313361213
Correct output: 68.9133975513  | Program output: 113.9133975513
Correct output: 94.6735625473  | Program output: 72.6735625473 
Correct output: -23.9794056735 | Program output: 50.0205943265 
Correct output: -45.659617513  | Program output: -0.659617513  
Correct output: 18.305230938   | Program output: 109.305230938 
Correct output: -51.4672355255 | Program output: -5.4672355255 
Correct output: -69.6136679003 | Program output: 23.3863320997 
Correct output: -160.5860881713 | Program output: -69.5860881713
Correct output: 26.5792162397  | Program output: 17.5792162397 
Correct output: 67.6788377982  | Program output: 63.6788377982 
Correct output: 98.9602843106  | Program output: 41.9602843106 
Correct output: -21.6321982448 | Program output: 44.3678017552 
Correct output: -135.7730066152 | Program output: -83.7730066152
Correct output: 107.1410234164 | Program output: 77.1410234164 
Correct output: 27.295683376   | Program output: 96.295683376  
Correct output: 116.4542279656 | Program output: 115.4542279656
Correct output: -50.856197321  | Program output: -19.856197321 
Correct output: 135.1762620097 | Program output: 58.1762620097 
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 111.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction float_inc} {:instruction integer_max} {:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction tag_integer_491} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub float_inc integer_max print_integer integer_dup_times integer_flush integer_dup float_inc integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_times integer_yank integer_add float_inc float_yankdup integer_dup float_inc float_inc integer_mult float_inc integer_dec float_inc float_inc integer_add integer_dup_items integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_yank tag_integer_491 integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [81.0 2 70.0 12 4.0 2 31.0 2 19.0 2 45.0 3 22.0 2 74.0 11 45.0 2 91.0 2 46.0 1 93.0 12 91.0 2 9.0 2 4.0 1 57.0 2 66.0 13 52.0 2 30.0 2 69.0 2 1.0 1 31.0 2 77.0 3 7.0 2 35.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3044.3867815999974
Median total errors in population: 1239.0
Error averages by case: (146.90399040000005 3.243 136.52962109999993 11.984 79.6516455 3.35 102.56703439999995 3.422 93.97906810000005 3.085 115.89771830000007 4.161 97.31803459999996 3.274 139.94542359999997 11.191 114.87696119999998 4.115 153.75955390000001 2.771 116.26036519999998 3.263 157.83597309999996 12.063 161.63019599999998 3.689 80.857103 2.864 80.3160345 2.493 127.72153250000008 3.248 132.67306159999995 12.931 126.599176 4.101 104.95615180000007 3.95 134.9033315 3.203 80.77705109999997 2.56 103.59875109999993 2.957 147.3734185000001 4.186 77.3836307 3.111 111.51295390000004 3.344)
Error minima by case: (9.7717 1 0.2531 2 0.0 0 7.3122 1 9.0 1 7.2854 1 12.0 1 0.3377 9 22.9415 1 0.3052 1 21.9415 1 18.6623 9 3.4139 1 0.0 0 0.0 0 31.0397 1 1.9415 8 15.9415 2 20.0 2 1.0585 1 0.0 0 4.8562 1 34.8237 2 0.0 0 25.0 1)
Average genome size in population (length): 52.781
Average program size in population (points): 53.781
Average percent parens in population: 0.019
Minimum age in population: 45.81917098537087
Maximum age in population: 50.2276783674024
Average age in population: 48.25075253001088
Median age in population: 48.27494882955216
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.829
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.829
Total error diversity:				 0.075
Error (vector) diversity:			 0.082
Behavioral diversity:				 0.082
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 42008275
--- Timings ---
Current time: 1529615006545 milliseconds
Total Time:         120.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.0 seconds, 43.0%
Fitness Testing:     55.2 seconds, 45.6%
Report:              13.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 55432.0
Test mean error for best: 27.71600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 11.0927933655 
Correct output: 53.7468534166  | Program output: -17.2531465834
Correct output: -26.8372891707 | Program output: -31.8372891707
Correct output: -15.9448332614 | Program output: -47.9448332614
Correct output: -47.5313361213 | Program output: -67.5313361213
Correct output: 68.9133975513  | Program output: 112.9133975513
Correct output: 94.6735625473  | Program output: 71.6735625473 
Correct output: -23.9794056735 | Program output: 49.0205943265 
Correct output: -45.659617513  | Program output: -1.659617513  
Correct output: 18.305230938   | Program output: 108.305230938 
Correct output: -51.4672355255 | Program output: -6.4672355255 
Correct output: -69.6136679003 | Program output: 22.3863320997 
Correct output: -160.5860881713 | Program output: -70.5860881713
Correct output: 26.5792162397  | Program output: 16.5792162397 
Correct output: 67.6788377982  | Program output: 62.6788377982 
Correct output: 98.9602843106  | Program output: 40.9602843106 
Correct output: -21.6321982448 | Program output: 43.3678017552 
Correct output: -135.7730066152 | Program output: -84.7730066152
Correct output: 107.1410234164 | Program output: 76.1410234164 
Correct output: 27.295683376   | Program output: 95.295683376  
Correct output: 116.4542279656 | Program output: 114.4542279656
Correct output: -50.856197321  | Program output: -20.856197321 
Correct output: 135.1762620097 | Program output: 57.1762620097 
Correct output: 14.2228157917  | Program output: 20.2228157917 
Correct output: 146.4103302491 | Program output: 110.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_add} {:instruction float_mod} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction tagged_495} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction 55} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_max integer_min integer_dup_times float_inc integer_add integer_dup integer_min integer_dup_items integer_min integer_mult float_inc integer_dec float_inc float_inc integer_add integer_add float_mod integer_min integer_dec float_dup_times float_inc integer_add integer_dup float_mod integer_min integer_mult integer_dec integer_dec float_inc float_inc integer_dec float_inc float_inc float_mod integer_min integer_mult float_mod integer_dec tagged_495 integer_mult float_stackdepth float_inc float_inc float_inc float_inc float_inc integer_add integer_dup float_mod 55 integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [82.0 2 71.0 12 5.0 2 32.0 2 20.0 1 44.0 3 23.0 2 73.0 11 44.0 2 90.0 1 45.0 2 92.0 12 90.0 2 10.0 1 5.0 1 58.0 2 65.0 13 51.0 3 31.0 3 68.0 2 2.0 1 30.0 1 78.0 3 6.0 2 36.0 2]
Total: 1239.0
Mean: 24.78
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2844.874129099999
Median total errors in population: 1239.0
Error averages by case: (141.69438979999995 3.154 130.02239249999997 11.974 71.4189723 3.137 94.84640039999998 3.212 85.76183950000002 2.863 107.11194780000004 4.035 89.31730119999999 3.133 131.65523499999995 11.176 106.90368499999997 3.965 145.56656340000006 2.635 108.06603779999998 3.029 150.46787559999996 12.03 152.87119219999994 3.471 74.80261959999997 2.692 72.11173910000001 2.305 120.51398300000001 3.106 124.38669499999997 12.916 117.44113920000005 3.912 96.92760150000005 3.831 126.50045950000005 3.044 72.4343311 2.398 94.70468249999999 2.743 139.87037630000003 4.024 70.9956202 2.956 103.51504960000003 3.225)
Error minima by case: (3.4295 1 2.7366 2 0.0 0 14.9448 1 8.0 1 23.0993 1 11.0 1 6.4252 9 26.3404 1 0.6931 1 22.5328 1 25.4252 3 3.4139 2 1.0 1 0.0 0 31.0397 1 1.5748 10 36.0 2 19.0 2 0.2634 1 0.0 0 4.8562 1 34.8237 2 0.0 0 24.0 1)
Average genome size in population (length): 52.456
Average program size in population (points): 53.456
Average percent parens in population: 0.019
Minimum age in population: 46.82088061887771
Maximum age in population: 51.91930297215004
Average age in population: 49.6714613372765
Median age in population: 49.70204727048986
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.07
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 43319700
--- Timings ---
Current time: 1529615010032 milliseconds
Total Time:         124.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.5 seconds, 43.0%
Fitness Testing:     56.7 seconds, 45.6%
Report:              14.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 16651.0
Test mean error for best: 8.32550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 107.0927933655
Correct output: 53.7468534166  | Program output: 67.7468534166 
Correct output: -26.8372891707 | Program output: -12.8372891707
Correct output: -15.9448332614 | Program output: -1.9448332614 
Correct output: -47.5313361213 | Program output: -33.5313361213
Correct output: 68.9133975513  | Program output: 82.9133975513 
Correct output: 94.6735625473  | Program output: 108.6735625473
Correct output: -23.9794056735 | Program output: -9.9794056735 
Correct output: -45.659617513  | Program output: -31.659617513 
Correct output: 18.305230938   | Program output: 32.305230938  
Correct output: -51.4672355255 | Program output: -37.4672355255
Correct output: -69.6136679003 | Program output: -55.6136679003
Correct output: -160.5860881713 | Program output: -146.5860881713
Correct output: 26.5792162397  | Program output: 40.5792162397 
Correct output: 67.6788377982  | Program output: 81.6788377982 
Correct output: 98.9602843106  | Program output: 112.9602843106
Correct output: -21.6321982448 | Program output: -7.6321982448 
Correct output: -135.7730066152 | Program output: -121.7730066152
Correct output: 107.1410234164 | Program output: 121.1410234164
Correct output: 27.295683376   | Program output: 41.295683376  
Correct output: 116.4542279656 | Program output: 130.4542279656
Correct output: -50.856197321  | Program output: -36.856197321 
Correct output: 135.1762620097 | Program output: 149.1762620097
Correct output: 14.2228157917  | Program output: 28.2228157917 
Correct output: 146.4103302491 | Program output: 160.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction in2} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction float_add} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction 18} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 integer_dup integer_dup integer_max integer_min in2 float_frominteger integer_add integer_dup integer_min float_add integer_yank integer_add integer_dup float_mod integer_dup_times float_min integer_min integer_min integer_mult integer_mult integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc 18 float_inc float_inc integer_dec float_inc float_inc integer_yankdup float_inc float_inc integer_add integer_dec integer_rot float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [14.0 3 14.0 2 14.0 2 14.0 1 14.0 2 14.0 2 14.0 3 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 3 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2]
Total: 402.0
Mean: 8.04
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2922.603873499999
Median total errors in population: 1239.0
Error averages by case: (144.2935494 3.146 133.49310269999992 11.961 75.32618699999998 3.24 98.46524829999996 3.296 89.54185170000004 2.938 109.74488850000003 4.056 92.11111389999996 3.145 134.31302019999998 11.15 110.59378599999995 3.974 148.3341106000001 2.617 111.88864149999996 3.113 153.1155546 12.048 156.84102179999994 3.545 77.74308339999997 2.717 74.84203070000001 2.323 123.24249490000005 3.114 127.10416439999995 12.891 121.39716240000001 3.966 99.74604950000007 3.818 129.22686790000003 3.055 74.86315969999998 2.365 98.53904429999997 2.808 142.53691500000008 4.039 73.75187159999999 2.962 106.05495350000005 3.207)
Error minima by case: (14.0 1 9.0 2 0.0 0 1.2803 1 8.0 1 14.0 1 11.0 1 9.0 2 14.0 1 1.3052 1 14.0 1 9.0 1 5.4139 2 2.0 1 0.0 0 14.0 1 3.5606 2 14.0 1 14.0 2 10.2957 1 0.0 0 3.8838 1 14.0 2 0.0 0 14.0 1)
Average genome size in population (length): 52.114
Average program size in population (points): 53.114
Average percent parens in population: 0.019
Minimum age in population: 47.82088061887771
Maximum age in population: 53.11690867465222
Average age in population: 51.11572329788166
Median age in population: 51.1546622296155
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.791
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.791
Total error diversity:				 0.066
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 44622625
--- Timings ---
Current time: 1529615013554 milliseconds
Total Time:         127.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.0 seconds, 43.0%
Fitness Testing:     58.4 seconds, 45.7%
Report:              14.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 16651.0
Test mean error for best: 8.32550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 107.0927933655
Correct output: 53.7468534166  | Program output: 67.7468534166 
Correct output: -26.8372891707 | Program output: -12.8372891707
Correct output: -15.9448332614 | Program output: -1.9448332614 
Correct output: -47.5313361213 | Program output: -33.5313361213
Correct output: 68.9133975513  | Program output: 82.9133975513 
Correct output: 94.6735625473  | Program output: 108.6735625473
Correct output: -23.9794056735 | Program output: -9.9794056735 
Correct output: -45.659617513  | Program output: -31.659617513 
Correct output: 18.305230938   | Program output: 32.305230938  
Correct output: -51.4672355255 | Program output: -37.4672355255
Correct output: -69.6136679003 | Program output: -55.6136679003
Correct output: -160.5860881713 | Program output: -146.5860881713
Correct output: 26.5792162397  | Program output: 40.5792162397 
Correct output: 67.6788377982  | Program output: 81.6788377982 
Correct output: 98.9602843106  | Program output: 112.9602843106
Correct output: -21.6321982448 | Program output: -7.6321982448 
Correct output: -135.7730066152 | Program output: -121.7730066152
Correct output: 107.1410234164 | Program output: 121.1410234164
Correct output: 27.295683376   | Program output: 41.295683376  
Correct output: 116.4542279656 | Program output: 130.4542279656
Correct output: -50.856197321  | Program output: -36.856197321 
Correct output: 135.1762620097 | Program output: 149.1762620097
Correct output: 14.2228157917  | Program output: 28.2228157917 
Correct output: 146.4103302491 | Program output: 160.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction in2} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction float_add} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction 18} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 integer_dup integer_dup integer_max integer_min in2 float_frominteger integer_add integer_dup integer_min float_add integer_yank integer_add integer_dup float_mod integer_dup_times float_min integer_min integer_min integer_mult integer_mult integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc 18 float_inc float_inc integer_dec float_inc float_inc integer_yankdup float_inc float_inc integer_add integer_dec integer_rot float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [14.0 3 14.0 2 14.0 2 14.0 1 14.0 2 14.0 2 14.0 3 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 3 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2 14.0 2]
Total: 402.0
Mean: 8.04
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2955.113745399999
Median total errors in population: 1239.0
Error averages by case: (145.504377 3.032 135.59107959999997 11.935 76.7162791 3.108 100.39021399999997 3.158 90.77006330000002 2.751 111.60669960000007 3.952 92.93998469999995 3.084 136.53317079999997 11.128 111.31861899999998 3.749 151.02267600000008 2.523 113.36093399999996 2.986 154.83702109999996 12.018 156.81863349999998 3.388 79.64568459999997 2.593 76.3190092 2.238 124.30002500000008 3.051 129.37486699999994 12.874 121.5332348 3.83 100.59246110000002 3.773 131.68657760000005 2.983 75.57661949999999 2.264 99.99425959999998 2.638 143.22841970000005 3.977 75.94983810000001 2.924 106.41999750000004 3.126)
Error minima by case: (0.9072 1 14.0 2 0.0 0 11.957 1 10.0 1 14.0 2 0.6736 1 14.0 2 14.0 1 0.3052 1 14.0 1 6.6137 2 4.4139 1 0.0 0 0.0 0 4.9603 1 14.0 2 14.0 2 13.141 2 9.2957 1 0.0 0 2.8562 1 14.0 2 0.0 0 14.0 1)
Average genome size in population (length): 51.836
Average program size in population (points): 52.836
Average percent parens in population: 0.019
Minimum age in population: 48.82088061887771
Maximum age in population: 54.46393000183161
Average age in population: 52.53115715609645
Median age in population: 52.57882193849946
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.766
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.766
Total error diversity:				 0.056
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 45918625
--- Timings ---
Current time: 1529615016913 milliseconds
Total Time:         131.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.4 seconds, 43.0%
Fitness Testing:     60.0 seconds, 45.7%
Report:              14.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 11327.0
Test mean error for best: 5.66350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 102.0927933655
Correct output: 53.7468534166  | Program output: 62.7468534166 
Correct output: -26.8372891707 | Program output: -17.8372891707
Correct output: -15.9448332614 | Program output: -6.9448332614 
Correct output: -47.5313361213 | Program output: -38.5313361213
Correct output: 68.9133975513  | Program output: 77.9133975513 
Correct output: 94.6735625473  | Program output: 103.6735625473
Correct output: -23.9794056735 | Program output: -14.9794056735
Correct output: -45.659617513  | Program output: -36.659617513 
Correct output: 18.305230938   | Program output: 27.305230938  
Correct output: -51.4672355255 | Program output: -42.4672355255
Correct output: -69.6136679003 | Program output: -60.6136679003
Correct output: -160.5860881713 | Program output: -151.5860881713
Correct output: 26.5792162397  | Program output: 35.5792162397 
Correct output: 67.6788377982  | Program output: 76.6788377982 
Correct output: 98.9602843106  | Program output: 107.9602843106
Correct output: -21.6321982448 | Program output: -12.6321982448
Correct output: -135.7730066152 | Program output: -126.7730066152
Correct output: 107.1410234164 | Program output: 116.1410234164
Correct output: 27.295683376   | Program output: 36.295683376  
Correct output: 116.4542279656 | Program output: 125.4542279656
Correct output: -50.856197321  | Program output: -41.856197321 
Correct output: 135.1762620097 | Program output: 144.1762620097
Correct output: 14.2228157917  | Program output: 23.2228157917 
Correct output: 146.4103302491 | Program output: 155.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction in2} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction float_add} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 integer_dup integer_dup integer_max integer_min in2 float_frominteger integer_add integer_dup integer_min float_add integer_yank integer_add integer_dup float_mod integer_dup_times float_min integer_min integer_min integer_mult integer_mult integer_flush integer_dec float_inc float_inc float_shove integer_dup integer_mult float_mod integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [9.0 3 9.0 2 9.0 2 9.0 2 9.0 2 9.0 2 9.0 3 9.0 2 9.0 2 9.0 2 9.0 2 9.0 1 9.0 2 9.0 2 9.0 2 9.0 3 9.0 2 9.0 2 9.0 2 9.0 2 9.0 2 9.0 2 9.0 2 9.0 2 9.0 2]
Total: 277.0
Mean: 5.54
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2555.400794399998
Median total errors in population: 1239.0
Error averages by case: (129.3633779 3.056 118.11819379999999 11.648 60.80434079999997 3.076 83.56667579999997 3.126 74.89379760000003 2.763 95.95370789999998 3.945 78.56571489999999 3.101 119.21532759999994 10.838 95.21772909999999 3.659 132.88620700000004 2.552 96.33422549999997 2.933 137.62975030000007 11.69 140.36464059999994 3.364 64.358334 2.639 61.96587060000003 2.296 108.90672840000003 3.047 112.26413999999995 12.529 105.95960250000003 3.785 86.09256310000008 3.728 114.32953850000006 2.986 62.509301 2.322 83.29844119999998 2.65 128.02421930000008 3.922 60.20704930000001 2.891 92.8843177000001 3.141)
Error minima by case: (7.7401 1 3.2599 1 0.0 0 0.225 1 4.1947 1 7.0 1 9.0 1 9.0 1 6.0664 1 0.2599 1 0.2588 1 7.6137 1 4.4139 1 1.0 1 0.0 0 9.0 1 9.0 1 9.0 1 9.0 1 5.2957 1 0.0 0 0.8698 1 9.0 1 0.0 0 9.0 1)
Average genome size in population (length): 51.561
Average program size in population (points): 52.561
Average percent parens in population: 0.019
Minimum age in population: 51.63588978647022
Maximum age in population: 55.84286219968635
Average age in population: 54.02861400610316
Median age in population: 54.06484492699383
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.799
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.799
Total error diversity:				 0.082
Error (vector) diversity:			 0.088
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 47207775
--- Timings ---
Current time: 1529615020367 milliseconds
Total Time:         134.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.9 seconds, 43.0%
Fitness Testing:     61.6 seconds, 45.7%
Report:              15.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 9041.0
Test mean error for best: 4.52050
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 100.0927933655
Correct output: 53.7468534166  | Program output: 60.7468534166 
Correct output: -26.8372891707 | Program output: -19.8372891707
Correct output: -15.9448332614 | Program output: -8.9448332614 
Correct output: -47.5313361213 | Program output: -40.5313361213
Correct output: 68.9133975513  | Program output: 75.9133975513 
Correct output: 94.6735625473  | Program output: 101.6735625473
Correct output: -23.9794056735 | Program output: -16.9794056735
Correct output: -45.659617513  | Program output: -38.659617513 
Correct output: 18.305230938   | Program output: 25.305230938  
Correct output: -51.4672355255 | Program output: -44.4672355255
Correct output: -69.6136679003 | Program output: -62.6136679003
Correct output: -160.5860881713 | Program output: -153.5860881713
Correct output: 26.5792162397  | Program output: 33.5792162397 
Correct output: 67.6788377982  | Program output: 74.6788377982 
Correct output: 98.9602843106  | Program output: 105.9602843106
Correct output: -21.6321982448 | Program output: -14.6321982448
Correct output: -135.7730066152 | Program output: -128.7730066152
Correct output: 107.1410234164 | Program output: 114.1410234164
Correct output: 27.295683376   | Program output: 34.295683376  
Correct output: 116.4542279656 | Program output: 123.4542279656
Correct output: -50.856197321  | Program output: -43.856197321 
Correct output: 135.1762620097 | Program output: 142.1762620097
Correct output: 14.2228157917  | Program output: 21.2228157917 
Correct output: 146.4103302491 | Program output: 153.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction in2} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction float_add} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_flush} {:instruction float_mod} {:instruction float_mod} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction print_float})
Best program: (in1 integer_dup integer_dup integer_max integer_min in2 float_frominteger integer_add integer_dup integer_min float_add integer_yank integer_add integer_dup float_mod integer_dup_times float_min integer_min integer_min integer_mult integer_mult integer_flush float_mod float_mod integer_min integer_mult integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_add integer_dup integer_mult float_mod integer_dec float_inc integer_sub print_float)
Errors: [7.0 3 7.0 2 7.0 2 7.0 2 7.0 1 7.0 2 7.0 3 7.0 2 7.0 2 7.0 2 7.0 2 7.0 1 7.0 2 7.0 2 7.0 2 7.0 3 7.0 2 7.0 2 7.0 2 7.0 2 7.0 2 7.0 2 7.0 2 7.0 2 7.0 2]
Total: 226.0
Mean: 4.52
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2914.0598248000006
Median total errors in population: 1239.0
Error averages by case: (135.35929499999995 3.403 127.8926557 10.187 81.43723679999997 3.408 99.44835179999995 3.554 93.90102620000003 3.197 112.28605920000004 4.006 95.73980739999998 3.383 129.71837630000002 9.635 110.72647709999994 3.897 141.7519356 2.84 112.36640879999999 3.327 144.52624369999995 10.297 150.38989379999992 3.661 81.71501789999999 2.845 82.06952199999999 2.6 120.0930365 3.361 123.89799549999995 10.967 122.20692720000001 4.007 102.02540910000003 3.798 126.39869680000001 3.193 83.40660919999996 2.654 102.28316139999995 3.035 136.13623710000002 3.96 78.5273782 3.04 108.20506650000002 3.296)
Error minima by case: (3.0 1 3.0 1 0.0 0 7.0 1 7.0 1 3.0 1 3.0 1 7.0 1 5.4985 1 1.3052 1 7.0 1 3.6137 1 5.4139 1 0.0 0 0.0 0 3.0 1 7.0 1 7.0 1 3.0 1 2.0 1 0.0 0 4.8562 1 3.0 1 0.0 0 3.0 1)
Average genome size in population (length): 52.1
Average program size in population (points): 53.1
Average percent parens in population: 0.019
Minimum age in population: 52.92001730354968
Maximum age in population: 57.61425220652018
Average age in population: 55.4847289081605
Median age in population: 55.52710437351925
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 38
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 38
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.096
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 48510350
--- Timings ---
Current time: 1529615023831 milliseconds
Total Time:         138.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.4 seconds, 43.0%
Fitness Testing:     63.2 seconds, 45.8%
Report:              15.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 93.0927933655 
Correct output: 53.7468534166  | Program output: 53.7468534166 
Correct output: -26.8372891707 | Program output: -26.8372891707
Correct output: -15.9448332614 | Program output: -15.9448332614
Correct output: -47.5313361213 | Program output: -47.5313361213
Correct output: 68.9133975513  | Program output: 68.9133975513 
Correct output: 94.6735625473  | Program output: 94.6735625473 
Correct output: -23.9794056735 | Program output: -23.9794056735
Correct output: -45.659617513  | Program output: -45.659617513 
Correct output: 18.305230938   | Program output: 18.305230938  
Correct output: -51.4672355255 | Program output: -51.4672355255
Correct output: -69.6136679003 | Program output: -69.6136679003
Correct output: -160.5860881713 | Program output: -160.5860881713
Correct output: 26.5792162397  | Program output: 26.5792162397 
Correct output: 67.6788377982  | Program output: 67.6788377982 
Correct output: 98.9602843106  | Program output: 98.9602843106 
Correct output: -21.6321982448 | Program output: -21.6321982448
Correct output: -135.7730066152 | Program output: -135.7730066152
Correct output: 107.1410234164 | Program output: 107.1410234164
Correct output: 27.295683376   | Program output: 27.295683376  
Correct output: 116.4542279656 | Program output: 116.4542279656
Correct output: -50.856197321  | Program output: -50.856197321 
Correct output: 135.1762620097 | Program output: 135.1762620097
Correct output: 14.2228157917  | Program output: 14.2228157917 
Correct output: 146.4103302491 | Program output: 146.4103302491
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_min} {:instruction in2} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_add} {:instruction integer_min} {:instruction float_add} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction print_float} {:instruction integer_yank} {:instruction tagged_63} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_min} {:instruction float_mod} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_stackdepth} {:instruction float_inc} {:instruction integer_mod} {:instruction integer_dup} {:instruction integer_min} {:instruction float_mod} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_shove} {:instruction print_float})
Best program: (in1 float_sub integer_dup integer_dup integer_dup integer_max integer_min in2 float_frominteger integer_add float_add integer_min float_add integer_add integer_dup integer_min integer_dup_times integer_yank integer_add print_float integer_yank tagged_63 integer_dup float_mod integer_min float_mod float_stackdepth float_rot integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_stackdepth float_inc integer_mod integer_dup integer_min float_mod integer_dec float_inc integer_shove print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2171.868421
Median total errors in population: 402.0
Error averages by case: (91.14300759999996 3.679 87.8708812 5.322 72.86335249999996 3.278 78.77599269999996 3.583 77.62614890000006 3.234 82.54614520000004 3.363 78.23558999999996 3.569 87.66784150000002 5.232 82.39689119999997 3.208 91.55572300000001 2.968 82.87430219999996 3.072 93.5049894 5.341 99.43825399999999 3.292 72.63988029999999 2.79 73.00029179999999 2.729 88.64192200000004 3.529 85.64040119999996 5.687 88.67428410000002 3.351 80.69018930000007 3.178 86.43795610000002 3.114 74.46572999999998 2.806 79.40656379999997 3.003 92.97089000000005 3.196 71.0847859 2.796 83.39840710000006 2.998)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 51.58
Average program size in population (points): 52.58
Average percent parens in population: 0.019
Minimum age in population: 54.56426873714372
Maximum age in population: 59.29163867157695
Average age in population: 57.05386259713764
Median age in population: 57.10776004811487
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 68
Genome diversity (% unique Plush genomes):	 0.684
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 68
Syntactic diversity (% unique Push programs):	 0.684
Total error diversity:				 0.101
Error (vector) diversity:			 0.105
Behavioral diversity:				 0.105
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 49799850
--- Timings ---
Current time: 1529615027214 milliseconds
Total Time:         141.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.8 seconds, 42.9%
Fitness Testing:     64.8 seconds, 45.8%
Report:              15.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 39
Successful program: (in1 float_sub integer_dup integer_dup integer_dup integer_max integer_min in2 float_frominteger integer_add float_add integer_min float_add integer_add integer_dup integer_min integer_dup_times integer_yank integer_add print_float integer_yank tagged_63 integer_dup float_mod integer_min float_mod float_stackdepth float_rot integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_stackdepth float_inc integer_mod integer_dup integer_min float_mod integer_dec float_inc integer_shove print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 50


Auto-simplifying with starting size: 50
step: 0
program: (in1 float_sub integer_dup integer_dup integer_dup integer_max integer_min in2 float_frominteger integer_add float_add integer_min float_add integer_add integer_dup integer_min integer_dup_times integer_yank integer_add print_float integer_yank tagged_63 integer_dup float_mod integer_min float_mod float_stackdepth float_rot integer_flush integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_stackdepth float_inc integer_mod integer_dup integer_min float_mod integer_dec float_inc integer_shove print_float)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 50

step: 500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 93.0927933655  | Program output: 93.0927933655 
Correct output: 53.7468534166  | Program output: 53.7468534166 
Correct output: -26.8372891707 | Program output: -26.8372891707
Correct output: -15.9448332614 | Program output: -15.9448332614
Correct output: -47.5313361213 | Program output: -47.5313361213
Correct output: 68.9133975513  | Program output: 68.9133975513 
Correct output: 94.6735625473  | Program output: 94.6735625473 
Correct output: -23.9794056735 | Program output: -23.9794056735
Correct output: -45.659617513  | Program output: -45.659617513 
Correct output: 18.305230938   | Program output: 18.305230938  
Correct output: -51.4672355255 | Program output: -51.4672355255
Correct output: -69.6136679003 | Program output: -69.6136679003
Correct output: -160.5860881713 | Program output: -160.5860881713
Correct output: 26.5792162397  | Program output: 26.5792162397 
Correct output: 67.6788377982  | Program output: 67.6788377982 
Correct output: 98.9602843106  | Program output: 98.9602843106 
Correct output: -21.6321982448 | Program output: -21.6321982448
Correct output: -135.7730066152 | Program output: -135.7730066152
Correct output: 107.1410234164 | Program output: 107.1410234164
Correct output: 27.295683376   | Program output: 27.295683376  
Correct output: 116.4542279656 | Program output: 116.4542279656
Correct output: -50.856197321  | Program output: -50.856197321 
Correct output: 135.1762620097 | Program output: 135.1762620097
Correct output: 14.2228157917  | Program output: 14.2228157917 
Correct output: 146.4103302491 | Program output: 146.4103302491
;;******************************
