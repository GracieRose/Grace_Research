Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[82.23711283618974 -92] -9.762887163810262]
Train Case:   1 | Input/Output: [[-61.262740284016125 63] 1.7372597159838747]
Train Case:   2 | Input/Output: [[35.47933723933491 -42] -6.52066276066509]
Train Case:   3 | Input/Output: [[94.36760402224138 76] 170.36760402224138]
Train Case:   4 | Input/Output: [[6.928542069064434 -7] -0.07145793093556563]
Train Case:   5 | Input/Output: [[-92.0408262138444 -91] -183.0408262138444]
Train Case:   6 | Input/Output: [[49.87992781564702 -81] -31.120072184352978]
Train Case:   7 | Input/Output: [[-74.6021835771933 -33] -107.6021835771933]
Train Case:   8 | Input/Output: [[-1.9649996534223675 -48] -49.96499965342237]
Train Case:   9 | Input/Output: [[60.70337637279462 -31] 29.703376372794622]
Train Case:  10 | Input/Output: [[16.98157152017872 -50] -33.01842847982128]
Train Case:  11 | Input/Output: [[-56.849301942288456 19] -37.849301942288456]
Train Case:  12 | Input/Output: [[81.5997996851188 21] 102.5997996851188]
Train Case:  13 | Input/Output: [[-30.37767287687933 -93] -123.37767287687933]
Train Case:  14 | Input/Output: [[-87.61121089223533 -19] -106.61121089223533]
Train Case:  15 | Input/Output: [[-41.73297462007544 49] 7.267025379924561]
Train Case:  16 | Input/Output: [[81.4813497192929 -48] 33.48134971929289]
Train Case:  17 | Input/Output: [[99.62230350905375 -76] 23.62230350905375]
Train Case:  18 | Input/Output: [[24.435599161097656 -69] -44.564400838902344]
Train Case:  19 | Input/Output: [[-68.18839811935825 -64] -132.18839811935825]
Train Case:  20 | Input/Output: [[97.30606189742343 -96] 1.306061897423433]
Train Case:  21 | Input/Output: [[26.48315784099023 -60] -33.51684215900977]
Train Case:  22 | Input/Output: [[-56.45839767186058 -99] -155.45839767186058]
Train Case:  23 | Input/Output: [[3.5052168972064663 79] 82.50521689720647]
Train Case:  24 | Input/Output: [[50.049408400625225 -92] -41.950591599374775]
Test Case:   0 | Input/Output: [[41.953926767024996 28] 69.953926767025]
Test Case:   1 | Input/Output: [[-1.8277185831686609 -57] -58.82771858316866]
Test Case:   2 | Input/Output: [[-3.825185942194693 31] 27.174814057805307]
Test Case:   3 | Input/Output: [[70.32494068950015 97] 167.32494068950015]
Test Case:   4 | Input/Output: [[-99.79954288762924 -69] -168.79954288762923]
Test Case:   5 | Input/Output: [[1.6215008632582055 -43] -41.378499136741794]
Test Case:   6 | Input/Output: [[-53.98496222120117 16] -37.98496222120117]
Test Case:   7 | Input/Output: [[-72.61406955806073 17] -55.614069558060734]
Test Case:   8 | Input/Output: [[-70.40140038230174 -85] -155.40140038230174]
Test Case:   9 | Input/Output: [[90.84931071462285 25] 115.84931071462285]
Test Case:  10 | Input/Output: [[-8.19436772610645 7] -1.1943677261064494]
Test Case:  11 | Input/Output: [[-74.27875888247542 93] 18.721241117524585]
Test Case:  12 | Input/Output: [[-86.50610489070827 -84] -170.5061048907083]
Test Case:  13 | Input/Output: [[8.894452600688666 -66] -57.105547399311334]
Test Case:  14 | Input/Output: [[-68.5832146611655 -83] -151.5832146611655]
Test Case:  15 | Input/Output: [[-59.42964970883315 8] -51.42964970883315]
Test Case:  16 | Input/Output: [[-98.59706025391102 39] -59.597060253911025]
Test Case:  17 | Input/Output: [[17.0629491486239 34] 51.0629491486239]
Test Case:  18 | Input/Output: [[86.06132301888195 -83] 3.06132301888195]
Test Case:  19 | Input/Output: [[58.198424720893826 -28] 30.198424720893826]
Test Case:  20 | Input/Output: [[-11.572146939947615 -35] -46.572146939947615]
Test Case:  21 | Input/Output: [[-49.13103186154133 81] 31.86896813845867]
Test Case:  22 | Input/Output: [[-25.448772199235847 -65] -90.44877219923585]
Test Case:  23 | Input/Output: [[-66.01682243601542 -90] -156.01682243601542]
Test Case:  24 | Input/Output: [[39.42326635477781 -73] -33.57673364522219]
Test Case:  25 | Input/Output: [[-42.12304936506184 72] 29.87695063493816]
Test Case:  26 | Input/Output: [[5.385399585160243 -80] -74.61460041483976]
Test Case:  27 | Input/Output: [[13.807710687066347 -21] -7.192289312933653]
Test Case:  28 | Input/Output: [[-45.95419447661568 77] 31.045805523384317]
Test Case:  29 | Input/Output: [[94.22121327160397 -12] 82.22121327160397]
Test Case:  30 | Input/Output: [[-52.81493027571385 7] -45.81493027571385]
Test Case:  31 | Input/Output: [[-59.428716106993186 -91] -150.4287161069932]
Test Case:  32 | Input/Output: [[-93.11437391185262 29] -64.11437391185262]
Test Case:  33 | Input/Output: [[-78.41429102311423 71] -7.414291023114231]
Test Case:  34 | Input/Output: [[78.10309658228587 -50] 28.103096582285872]
Test Case:  35 | Input/Output: [[-91.18610841048883 34] -57.18610841048883]
Test Case:  36 | Input/Output: [[25.05471342475778 -90] -64.94528657524222]
Test Case:  37 | Input/Output: [[36.51615313229186 -96] -59.48384686770814]
Test Case:  38 | Input/Output: [[-12.512136445010256 -77] -89.51213644501026]
Test Case:  39 | Input/Output: [[88.41669582541775 -95] -6.583304174582253]
Test Case:  40 | Input/Output: [[1.137449481211263 38] 39.13744948121126]
Test Case:  41 | Input/Output: [[54.24281915426846 -89] -34.75718084573154]
Test Case:  42 | Input/Output: [[-73.71450600253004 77] 3.285493997469956]
Test Case:  43 | Input/Output: [[80.42588414612973 11] 91.42588414612973]
Test Case:  44 | Input/Output: [[34.064141934142214 48] 82.06414193414221]
Test Case:  45 | Input/Output: [[44.4712958984276 -64] -19.5287041015724]
Test Case:  46 | Input/Output: [[-45.11044792121499 13] -32.11044792121499]
Test Case:  47 | Input/Output: [[10.381898752106693 -63] -52.61810124789331]
Test Case:  48 | Input/Output: [[69.90988933803692 71] 140.90988933803692]
Test Case:  49 | Input/Output: [[45.57100159315141 93] 138.5710015931514]
Test Case:  50 | Input/Output: [[83.80066177099712 -44] 39.800661770997124]
Test Case:  51 | Input/Output: [[24.754193868891733 26] 50.75419386889173]
Test Case:  52 | Input/Output: [[-60.44047141114726 -52] -112.44047141114726]
Test Case:  53 | Input/Output: [[-40.462979103182775 -30] -70.46297910318278]
Test Case:  54 | Input/Output: [[97.8487373947548 98] 195.8487373947548]
Test Case:  55 | Input/Output: [[-15.858926165237634 -76] -91.85892616523763]
Test Case:  56 | Input/Output: [[73.81430767740119 81] 154.8143076774012]
Test Case:  57 | Input/Output: [[78.16559407036573 83] 161.16559407036573]
Test Case:  58 | Input/Output: [[44.27321547811505 33] 77.27321547811505]
Test Case:  59 | Input/Output: [[-47.522405462991316 -59] -106.52240546299132]
Test Case:  60 | Input/Output: [[52.982760726135325 2] 54.982760726135325]
Test Case:  61 | Input/Output: [[11.685660843530087 20] 31.685660843530087]
Test Case:  62 | Input/Output: [[-68.71093723879068 -66] -134.71093723879068]
Test Case:  63 | Input/Output: [[-44.81633089926345 -96] -140.81633089926345]
Test Case:  64 | Input/Output: [[-78.30110097290242 -92] -170.30110097290242]
Test Case:  65 | Input/Output: [[-58.16238682084818 76] 17.837613179151823]
Test Case:  66 | Input/Output: [[36.17856002723005 94] 130.17856002723005]
Test Case:  67 | Input/Output: [[-10.62499668501242 21] 10.37500331498758]
Test Case:  68 | Input/Output: [[-77.2012978818751 23] -54.20129788187511]
Test Case:  69 | Input/Output: [[79.7954908986978 30] 109.7954908986978]
Test Case:  70 | Input/Output: [[-95.50246130373874 59] -36.50246130373874]
Test Case:  71 | Input/Output: [[-38.26222892087245 -76] -114.26222892087245]
Test Case:  72 | Input/Output: [[81.89751466098559 -11] 70.89751466098559]
Test Case:  73 | Input/Output: [[-14.897927776420872 57] 42.10207222357913]
Test Case:  74 | Input/Output: [[-60.286353446266894 96] 35.713646553733106]
Test Case:  75 | Input/Output: [[-34.41639648595469 6] -28.416396485954692]
Test Case:  76 | Input/Output: [[-39.53788527718678 93] 53.46211472281322]
Test Case:  77 | Input/Output: [[-85.23056734947478 42] -43.23056734947478]
Test Case:  78 | Input/Output: [[-21.363891174911203 -9] -30.363891174911203]
Test Case:  79 | Input/Output: [[96.53028537246036 -68] 28.530285372460355]
Test Case:  80 | Input/Output: [[-37.044208525789514 -6] -43.044208525789514]
Test Case:  81 | Input/Output: [[60.07361110958644 44] 104.07361110958644]
Test Case:  82 | Input/Output: [[-84.23601995850849 -58] -142.2360199585085]
Test Case:  83 | Input/Output: [[-72.82542963939966 95] 22.17457036060034]
Test Case:  84 | Input/Output: [[-60.24834728793007 -65] -125.24834728793007]
Test Case:  85 | Input/Output: [[-18.641756749808607 61] 42.35824325019139]
Test Case:  86 | Input/Output: [[95.58181422075211 -92] 3.5818142207521078]
Test Case:  87 | Input/Output: [[-86.33997592205706 72] -14.339975922057064]
Test Case:  88 | Input/Output: [[93.94270709177232 89] 182.94270709177232]
Test Case:  89 | Input/Output: [[87.29434150403773 -81] 6.294341504037732]
Test Case:  90 | Input/Output: [[-60.34853759939656 -48] -108.34853759939656]
Test Case:  91 | Input/Output: [[-59.2315678411504 -17] -76.2315678411504]
Test Case:  92 | Input/Output: [[-73.41635965317931 -53] -126.41635965317931]
Test Case:  93 | Input/Output: [[44.37759121629861 77] 121.37759121629861]
Test Case:  94 | Input/Output: [[43.45649278496123 -21] 22.456492784961227]
Test Case:  95 | Input/Output: [[18.913587744023275 2] 20.913587744023275]
Test Case:  96 | Input/Output: [[-64.79608605132816 -65] -129.79608605132816]
Test Case:  97 | Input/Output: [[-26.232420458569166 27] 0.767579541430834]
Test Case:  98 | Input/Output: [[-17.755302272496593 93] 75.24469772750341]
Test Case:  99 | Input/Output: [[-84.1004315879768 -31] -115.1004315879768]
Test Case: 100 | Input/Output: [[97.12093977452903 55] 152.12093977452903]
Test Case: 101 | Input/Output: [[-20.78991766703919 -80] -100.78991766703919]
Test Case: 102 | Input/Output: [[63.20802030681665 -55] 8.20802030681665]
Test Case: 103 | Input/Output: [[33.694114314453 -52] -18.305885685546997]
Test Case: 104 | Input/Output: [[94.06283649991255 -10] 84.06283649991255]
Test Case: 105 | Input/Output: [[59.279359561419085 -70] -10.720640438580915]
Test Case: 106 | Input/Output: [[-34.75136207349611 -69] -103.75136207349611]
Test Case: 107 | Input/Output: [[79.51651987927607 55] 134.51651987927607]
Test Case: 108 | Input/Output: [[-45.68605606195695 -54] -99.68605606195695]
Test Case: 109 | Input/Output: [[20.449834834105943 -8] 12.449834834105943]
Test Case: 110 | Input/Output: [[55.508251140682546 -74] -18.491748859317454]
Test Case: 111 | Input/Output: [[-2.5014999641736324 -63] -65.50149996417363]
Test Case: 112 | Input/Output: [[-46.76571666999833 41] -5.7657166699983335]
Test Case: 113 | Input/Output: [[-55.33702193726378 -99] -154.33702193726378]
Test Case: 114 | Input/Output: [[55.56787900889597 9] 64.56787900889597]
Test Case: 115 | Input/Output: [[74.73077005368677 97] 171.73077005368677]
Test Case: 116 | Input/Output: [[-44.697769548671374 -42] -86.69776954867137]
Test Case: 117 | Input/Output: [[-51.30191582030075 -12] -63.30191582030075]
Test Case: 118 | Input/Output: [[-14.483284218151354 14] -0.48328421815135414]
Test Case: 119 | Input/Output: [[28.48262161990084 -84] -55.51737838009916]
Test Case: 120 | Input/Output: [[95.9903995663401 -48] 47.9903995663401]
Test Case: 121 | Input/Output: [[77.37683178031648 -74] 3.376831780316479]
Test Case: 122 | Input/Output: [[17.05891274947591 22] 39.05891274947591]
Test Case: 123 | Input/Output: [[80.0362911030314 -52] 28.036291103031402]
Test Case: 124 | Input/Output: [[-7.235257124199521 -23] -30.23525712419952]
Test Case: 125 | Input/Output: [[47.5983132107595 20] 67.5983132107595]
Test Case: 126 | Input/Output: [[98.15289862176272 75] 173.15289862176272]
Test Case: 127 | Input/Output: [[67.95713366420841 -98] -30.042866335791587]
Test Case: 128 | Input/Output: [[14.060606879338437 14] 28.060606879338437]
Test Case: 129 | Input/Output: [[64.4427702478092 53] 117.4427702478092]
Test Case: 130 | Input/Output: [[82.13541601804019 -78] 4.135416018040189]
Test Case: 131 | Input/Output: [[-58.05730252034947 -73] -131.05730252034948]
Test Case: 132 | Input/Output: [[97.68324167259686 -61] 36.683241672596864]
Test Case: 133 | Input/Output: [[90.53691413783034 -53] 37.53691413783034]
Test Case: 134 | Input/Output: [[1.176915257850311 4] 5.176915257850311]
Test Case: 135 | Input/Output: [[-92.21565770761475 6] -86.21565770761475]
Test Case: 136 | Input/Output: [[19.920840921031953 67] 86.92084092103195]
Test Case: 137 | Input/Output: [[99.74287478125441 64] 163.74287478125441]
Test Case: 138 | Input/Output: [[53.499934455697485 -50] 3.4999344556974847]
Test Case: 139 | Input/Output: [[-16.252686790793945 -3] -19.252686790793945]
Test Case: 140 | Input/Output: [[-74.34904698931126 23] -51.34904698931126]
Test Case: 141 | Input/Output: [[34.12513305397849 6] 40.12513305397849]
Test Case: 142 | Input/Output: [[-8.049905044032442 69] 60.95009495596756]
Test Case: 143 | Input/Output: [[-7.802509687244168 6] -1.802509687244168]
Test Case: 144 | Input/Output: [[89.43847629045325 22] 111.43847629045325]
Test Case: 145 | Input/Output: [[-45.3368756664966 -13] -58.3368756664966]
Test Case: 146 | Input/Output: [[-90.4472050959688 87] -3.4472050959687977]
Test Case: 147 | Input/Output: [[-88.77076268579616 87] -1.7707626857961571]
Test Case: 148 | Input/Output: [[-27.496828120056648 89] 61.50317187994335]
Test Case: 149 | Input/Output: [[-95.66963996440316 -66] -161.66963996440316]
Test Case: 150 | Input/Output: [[-89.62520447482478 -18] -107.62520447482478]
Test Case: 151 | Input/Output: [[8.451314663810038 -48] -39.54868533618996]
Test Case: 152 | Input/Output: [[-62.3523402122508 -15] -77.3523402122508]
Test Case: 153 | Input/Output: [[92.49435784586447 64] 156.49435784586447]
Test Case: 154 | Input/Output: [[10.663059768153389 40] 50.66305976815339]
Test Case: 155 | Input/Output: [[87.18519974014515 91] 178.18519974014515]
Test Case: 156 | Input/Output: [[-41.35346888278468 44] 2.646531117215318]
Test Case: 157 | Input/Output: [[9.13188229366017 -52] -42.86811770633983]
Test Case: 158 | Input/Output: [[-88.92755161564764 -22] -110.92755161564764]
Test Case: 159 | Input/Output: [[-48.43350497015362 -42] -90.43350497015362]
Test Case: 160 | Input/Output: [[-71.51171775274904 45] -26.511717752749036]
Test Case: 161 | Input/Output: [[19.226859451478617 71] 90.22685945147862]
Test Case: 162 | Input/Output: [[97.67544330339439 -42] 55.67544330339439]
Test Case: 163 | Input/Output: [[-83.10075366948222 -54] -137.10075366948223]
Test Case: 164 | Input/Output: [[-59.76110166797213 -3] -62.76110166797213]
Test Case: 165 | Input/Output: [[-13.741903836573272 -80] -93.74190383657327]
Test Case: 166 | Input/Output: [[6.099553907158878 -12] -5.900446092841122]
Test Case: 167 | Input/Output: [[31.952687585088285 -31] 0.9526875850882845]
Test Case: 168 | Input/Output: [[-53.92429031220705 18] -35.92429031220705]
Test Case: 169 | Input/Output: [[-76.18847223790128 20] -56.18847223790128]
Test Case: 170 | Input/Output: [[47.8881851272952 -48] -0.11181487270479806]
Test Case: 171 | Input/Output: [[24.08224411840341 -95] -70.91775588159659]
Test Case: 172 | Input/Output: [[10.641712675653764 48] 58.641712675653764]
Test Case: 173 | Input/Output: [[37.982202902540166 -69] -31.017797097459834]
Test Case: 174 | Input/Output: [[-49.650906049094345 -43] -92.65090604909435]
Test Case: 175 | Input/Output: [[-86.98968873397249 63] -23.989688733972486]
Test Case: 176 | Input/Output: [[-7.044021086267804 96] 88.9559789137322]
Test Case: 177 | Input/Output: [[77.6663576889641 -65] 12.666357688964098]
Test Case: 178 | Input/Output: [[42.91636728360146 -80] -37.08363271639854]
Test Case: 179 | Input/Output: [[99.93097711661284 14] 113.93097711661284]
Test Case: 180 | Input/Output: [[75.02659044257015 -60] 15.026590442570154]
Test Case: 181 | Input/Output: [[-1.0871312426374402 -64] -65.08713124263744]
Test Case: 182 | Input/Output: [[-12.951091633785978 78] 65.04890836621402]
Test Case: 183 | Input/Output: [[-61.04207476455916 84] 22.95792523544084]
Test Case: 184 | Input/Output: [[93.20793130549248 34] 127.20793130549248]
Test Case: 185 | Input/Output: [[71.43517127877615 72] 143.43517127877615]
Test Case: 186 | Input/Output: [[18.733376947578705 -28] -9.266623052421295]
Test Case: 187 | Input/Output: [[27.23052456565516 91] 118.23052456565516]
Test Case: 188 | Input/Output: [[36.35258925396002 95] 131.35258925396002]
Test Case: 189 | Input/Output: [[-61.530235723791925 18] -43.530235723791925]
Test Case: 190 | Input/Output: [[56.37054825487223 77] 133.37054825487223]
Test Case: 191 | Input/Output: [[-64.62905591518128 36] -28.629055915181283]
Test Case: 192 | Input/Output: [[67.14543018322959 68] 135.1454301832296]
Test Case: 193 | Input/Output: [[10.201504812820403 85] 95.2015048128204]
Test Case: 194 | Input/Output: [[-55.578083810242894 -79] -134.5780838102429]
Test Case: 195 | Input/Output: [[78.78775383327016 -32] 46.78775383327016]
Test Case: 196 | Input/Output: [[97.74279056500643 94] 191.74279056500643]
Test Case: 197 | Input/Output: [[93.73884736738088 11] 104.73884736738088]
Test Case: 198 | Input/Output: [[-83.19602559527337 36] -47.19602559527337]
Test Case: 199 | Input/Output: [[13.295066372271535 -96] -82.70493362772847]
Test Case: 200 | Input/Output: [[60.03736272441648 87] 147.03736272441648]
Test Case: 201 | Input/Output: [[73.33786962572276 -54] 19.33786962572276]
Test Case: 202 | Input/Output: [[99.95455995386058 73] 172.95455995386058]
Test Case: 203 | Input/Output: [[80.02255414425136 98] 178.02255414425136]
Test Case: 204 | Input/Output: [[58.16957876787802 -45] 13.169578767878022]
Test Case: 205 | Input/Output: [[82.7154795764227 -55] 27.715479576422695]
Test Case: 206 | Input/Output: [[-40.26619595761562 -40] -80.26619595761562]
Test Case: 207 | Input/Output: [[-62.78834831898132 52] -10.78834831898132]
Test Case: 208 | Input/Output: [[-99.4873293061669 97] -2.487329306166899]
Test Case: 209 | Input/Output: [[80.8891132722595 66] 146.8891132722595]
Test Case: 210 | Input/Output: [[29.108812207251106 -85] -55.891187792748894]
Test Case: 211 | Input/Output: [[-94.96566076166575 4] -90.96566076166575]
Test Case: 212 | Input/Output: [[-5.482645075445362 -68] -73.48264507544536]
Test Case: 213 | Input/Output: [[17.44584330011125 -20] -2.5541566998887504]
Test Case: 214 | Input/Output: [[30.320990179253016 -11] 19.320990179253016]
Test Case: 215 | Input/Output: [[-72.91077468652752 8] -64.91077468652752]
Test Case: 216 | Input/Output: [[64.0191206250746 -74] -9.980879374925394]
Test Case: 217 | Input/Output: [[-73.65751065399454 -18] -91.65751065399454]
Test Case: 218 | Input/Output: [[9.994833054713268 -58] -48.00516694528673]
Test Case: 219 | Input/Output: [[-68.82977528179872 5] -63.82977528179872]
Test Case: 220 | Input/Output: [[-87.674572143435 8] -79.674572143435]
Test Case: 221 | Input/Output: [[-51.127125532856745 -40] -91.12712553285675]
Test Case: 222 | Input/Output: [[83.7330942465596 15] 98.7330942465596]
Test Case: 223 | Input/Output: [[55.34579854229423 -95] -39.65420145770577]
Test Case: 224 | Input/Output: [[-89.75889508326573 31] -58.75889508326573]
Test Case: 225 | Input/Output: [[95.68572136227868 -11] 84.68572136227868]
Test Case: 226 | Input/Output: [[40.65981880562407 -22] 18.65981880562407]
Test Case: 227 | Input/Output: [[56.91552040740632 -82] -25.08447959259368]
Test Case: 228 | Input/Output: [[-5.773227277906145 -81] -86.77322727790614]
Test Case: 229 | Input/Output: [[-9.062531151237224 69] 59.93746884876278]
Test Case: 230 | Input/Output: [[-99.94517464896953 60] -39.94517464896953]
Test Case: 231 | Input/Output: [[-20.71424623103914 -22] -42.71424623103914]
Test Case: 232 | Input/Output: [[15.630337750640138 86] 101.63033775064014]
Test Case: 233 | Input/Output: [[98.54243904633188 -84] 14.542439046331879]
Test Case: 234 | Input/Output: [[34.218947718373215 64] 98.21894771837322]
Test Case: 235 | Input/Output: [[61.12177958169883 91] 152.12177958169883]
Test Case: 236 | Input/Output: [[-35.75560263897373 -23] -58.75560263897373]
Test Case: 237 | Input/Output: [[9.694005773678185 30] 39.694005773678185]
Test Case: 238 | Input/Output: [[94.8658535437105 61] 155.8658535437105]
Test Case: 239 | Input/Output: [[-22.2381570892896 -50] -72.2381570892896]
Test Case: 240 | Input/Output: [[99.1488304463567 -21] 78.1488304463567]
Test Case: 241 | Input/Output: [[-66.66698567253893 92] 25.333014327461072]
Test Case: 242 | Input/Output: [[39.011938082984926 39] 78.01193808298493]
Test Case: 243 | Input/Output: [[-4.794936584748328 -38] -42.79493658474833]
Test Case: 244 | Input/Output: [[-28.405732281215307 20] -8.405732281215307]
Test Case: 245 | Input/Output: [[22.166061715843966 54] 76.16606171584397]
Test Case: 246 | Input/Output: [[-73.91012725892753 -89] -162.91012725892753]
Test Case: 247 | Input/Output: [[-56.88555851734196 97] 40.11444148265804]
Test Case: 248 | Input/Output: [[86.59147863671953 98] 184.59147863671953]
Test Case: 249 | Input/Output: [[-21.950612634720713 82] 60.04938736527929]
Test Case: 250 | Input/Output: [[-17.62628316042732 92] 74.37371683957268]
Test Case: 251 | Input/Output: [[35.35952063874831 31] 66.35952063874831]
Test Case: 252 | Input/Output: [[-66.9799762047905 -49] -115.9799762047905]
Test Case: 253 | Input/Output: [[-33.440499339200855 3] -30.440499339200855]
Test Case: 254 | Input/Output: [[-98.6717758787059 -92] -190.6717758787059]
Test Case: 255 | Input/Output: [[14.522855335769378 98] 112.52285533576938]
Test Case: 256 | Input/Output: [[-97.33235476470298 59] -38.332354764702984]
Test Case: 257 | Input/Output: [[17.95561457426041 -1] 16.95561457426041]
Test Case: 258 | Input/Output: [[-84.36329480482053 72] -12.363294804820526]
Test Case: 259 | Input/Output: [[-81.70936610156747 -64] -145.70936610156747]
Test Case: 260 | Input/Output: [[-87.53487400480402 -46] -133.534874004804]
Test Case: 261 | Input/Output: [[-33.043681373217055 -18] -51.043681373217055]
Test Case: 262 | Input/Output: [[61.45721174750068 89] 150.45721174750068]
Test Case: 263 | Input/Output: [[35.52498522997783 81] 116.52498522997783]
Test Case: 264 | Input/Output: [[10.27124731318412 -23] -12.72875268681588]
Test Case: 265 | Input/Output: [[95.90782802708858 13] 108.90782802708858]
Test Case: 266 | Input/Output: [[32.83210690791395 -93] -60.16789309208605]
Test Case: 267 | Input/Output: [[-66.32621231464715 -90] -156.32621231464714]
Test Case: 268 | Input/Output: [[-52.838310867252744 -59] -111.83831086725274]
Test Case: 269 | Input/Output: [[22.0181826918961 27] 49.0181826918961]
Test Case: 270 | Input/Output: [[-38.52025088611211 -58] -96.52025088611211]
Test Case: 271 | Input/Output: [[98.68732019896242 62] 160.68732019896242]
Test Case: 272 | Input/Output: [[-2.057550397716028 35] 32.94244960228397]
Test Case: 273 | Input/Output: [[92.43959559611139 -35] 57.43959559611139]
Test Case: 274 | Input/Output: [[-45.75794087526728 68] 22.24205912473272]
Test Case: 275 | Input/Output: [[-4.8784778193401905 -13] -17.87847781934019]
Test Case: 276 | Input/Output: [[-68.71391782694658 -81] -149.71391782694658]
Test Case: 277 | Input/Output: [[62.34436202767114 -64] -1.6556379723288615]
Test Case: 278 | Input/Output: [[42.880169153515396 49] 91.8801691535154]
Test Case: 279 | Input/Output: [[-60.97890517618902 -23] -83.97890517618902]
Test Case: 280 | Input/Output: [[99.27645017890305 28] 127.27645017890305]
Test Case: 281 | Input/Output: [[64.25222468184631 -71] -6.7477753181536855]
Test Case: 282 | Input/Output: [[66.40055339666623 -66] 0.4005533966662256]
Test Case: 283 | Input/Output: [[34.79480395612407 64] 98.79480395612407]
Test Case: 284 | Input/Output: [[14.55747169618698 -44] -29.44252830381302]
Test Case: 285 | Input/Output: [[21.599690332132425 78] 99.59969033213243]
Test Case: 286 | Input/Output: [[9.688301408033425 -77] -67.31169859196658]
Test Case: 287 | Input/Output: [[78.0856961742557 82] 160.0856961742557]
Test Case: 288 | Input/Output: [[-78.98417375281737 -54] -132.98417375281736]
Test Case: 289 | Input/Output: [[-0.3245735464195434 -5] -5.324573546419543]
Test Case: 290 | Input/Output: [[-53.10336467581791 -77] -130.10336467581791]
Test Case: 291 | Input/Output: [[-35.584706024352556 47] 11.415293975647444]
Test Case: 292 | Input/Output: [[57.125523634239215 -20] 37.125523634239215]
Test Case: 293 | Input/Output: [[-28.448771531224253 -58] -86.44877153122425]
Test Case: 294 | Input/Output: [[-82.95147565766459 -48] -130.9514756576646]
Test Case: 295 | Input/Output: [[-63.10132526722283 -25] -88.10132526722283]
Test Case: 296 | Input/Output: [[-55.900202159983905 -58] -113.9002021599839]
Test Case: 297 | Input/Output: [[26.87569175277642 -62] -35.12430824722358]
Test Case: 298 | Input/Output: [[-78.18526873346359 23] -55.18526873346359]
Test Case: 299 | Input/Output: [[65.0110929553887 46] 111.0110929553887]
Test Case: 300 | Input/Output: [[3.166459000509761 -59] -55.83354099949024]
Test Case: 301 | Input/Output: [[89.81417909791796 89] 178.81417909791796]
Test Case: 302 | Input/Output: [[79.08059885291331 10] 89.08059885291331]
Test Case: 303 | Input/Output: [[-90.06155993454585 -36] -126.06155993454585]
Test Case: 304 | Input/Output: [[-88.39254682601818 -47] -135.3925468260182]
Test Case: 305 | Input/Output: [[-34.71296893638434 -31] -65.71296893638434]
Test Case: 306 | Input/Output: [[-97.39982412050819 -85] -182.39982412050819]
Test Case: 307 | Input/Output: [[-14.209687055583629 60] 45.79031294441637]
Test Case: 308 | Input/Output: [[54.06832164133374 -66] -11.931678358666261]
Test Case: 309 | Input/Output: [[-13.576708406104103 -10] -23.576708406104103]
Test Case: 310 | Input/Output: [[-36.36504594603451 -50] -86.36504594603451]
Test Case: 311 | Input/Output: [[-55.047889049418266 -69] -124.04788904941827]
Test Case: 312 | Input/Output: [[-39.30743679891695 12] -27.307436798916953]
Test Case: 313 | Input/Output: [[64.37382612267172 78] 142.37382612267172]
Test Case: 314 | Input/Output: [[93.92507572095829 93] 186.9250757209583]
Test Case: 315 | Input/Output: [[-81.09137083763898 42] -39.091370837638976]
Test Case: 316 | Input/Output: [[-77.839426754577 88] 10.160573245422995]
Test Case: 317 | Input/Output: [[78.8540231277403 -29] 49.854023127740305]
Test Case: 318 | Input/Output: [[-77.35272469366154 -54] -131.35272469366154]
Test Case: 319 | Input/Output: [[55.099548027969604 95] 150.0995480279696]
Test Case: 320 | Input/Output: [[-80.53094388006478 -55] -135.5309438800648]
Test Case: 321 | Input/Output: [[22.05373254269543 71] 93.05373254269543]
Test Case: 322 | Input/Output: [[97.3236124354375 -12] 85.3236124354375]
Test Case: 323 | Input/Output: [[68.88576150227186 87] 155.88576150227186]
Test Case: 324 | Input/Output: [[-23.321355585072496 -69] -92.3213555850725]
Test Case: 325 | Input/Output: [[14.030902724020649 -65] -50.96909727597935]
Test Case: 326 | Input/Output: [[-76.83126304232992 75] -1.8312630423299225]
Test Case: 327 | Input/Output: [[-46.774350635793716 71] 24.225649364206284]
Test Case: 328 | Input/Output: [[-99.58832091539043 22] -77.58832091539043]
Test Case: 329 | Input/Output: [[15.669629499330398 -42] -26.330370500669602]
Test Case: 330 | Input/Output: [[89.44152736514422 83] 172.44152736514422]
Test Case: 331 | Input/Output: [[55.792665862660954 67] 122.79266586266095]
Test Case: 332 | Input/Output: [[63.625743697562655 87] 150.62574369756265]
Test Case: 333 | Input/Output: [[-78.68320718348645 -28] -106.68320718348645]
Test Case: 334 | Input/Output: [[-6.392862269198545 20] 13.607137730801455]
Test Case: 335 | Input/Output: [[0.05697815231241066 94] 94.05697815231241]
Test Case: 336 | Input/Output: [[89.06821001045171 -45] 44.06821001045171]
Test Case: 337 | Input/Output: [[-90.14526476638824 15] -75.14526476638824]
Test Case: 338 | Input/Output: [[-13.971534664196412 78] 64.02846533580359]
Test Case: 339 | Input/Output: [[3.19612854770115 -59] -55.80387145229885]
Test Case: 340 | Input/Output: [[-19.76486491701894 -57] -76.76486491701894]
Test Case: 341 | Input/Output: [[19.02451611652893 -85] -65.97548388347107]
Test Case: 342 | Input/Output: [[73.96664914139183 -91] -17.033350858608173]
Test Case: 343 | Input/Output: [[23.886354237978736 -54] -30.113645762021264]
Test Case: 344 | Input/Output: [[6.256393971808322 -95] -88.74360602819168]
Test Case: 345 | Input/Output: [[-58.076836333233686 -69] -127.07683633323369]
Test Case: 346 | Input/Output: [[83.88921215458453 -13] 70.88921215458453]
Test Case: 347 | Input/Output: [[29.404049422596046 -6] 23.404049422596046]
Test Case: 348 | Input/Output: [[-86.88589590561531 83] -3.885895905615314]
Test Case: 349 | Input/Output: [[47.54952552654649 -71] -23.45047447345351]
Test Case: 350 | Input/Output: [[-41.9587265516665 -22] -63.9587265516665]
Test Case: 351 | Input/Output: [[-29.99931252399226 -8] -37.99931252399226]
Test Case: 352 | Input/Output: [[28.16059847255272 81] 109.16059847255272]
Test Case: 353 | Input/Output: [[62.15773546735679 -8] 54.15773546735679]
Test Case: 354 | Input/Output: [[68.112035699547 -25] 43.11203569954699]
Test Case: 355 | Input/Output: [[-30.423977925714027 60] 29.576022074285973]
Test Case: 356 | Input/Output: [[-95.55956457770365 100] 4.440435422296346]
Test Case: 357 | Input/Output: [[52.86765134530958 98] 150.86765134530958]
Test Case: 358 | Input/Output: [[-1.3003548262862097 28] 26.69964517371379]
Test Case: 359 | Input/Output: [[56.26817129205014 44] 100.26817129205014]
Test Case: 360 | Input/Output: [[62.07844545325162 99] 161.07844545325162]
Test Case: 361 | Input/Output: [[-41.18551664348935 61] 19.81448335651065]
Test Case: 362 | Input/Output: [[38.79325114430958 12] 50.79325114430958]
Test Case: 363 | Input/Output: [[-32.10134715033506 -82] -114.10134715033506]
Test Case: 364 | Input/Output: [[-77.94680003545963 51] -26.94680003545963]
Test Case: 365 | Input/Output: [[-70.79687693748716 66] -4.796876937487156]
Test Case: 366 | Input/Output: [[-54.89955834508209 -77] -131.89955834508208]
Test Case: 367 | Input/Output: [[2.827845818486125 14] 16.827845818486125]
Test Case: 368 | Input/Output: [[15.491987689941894 -33] -17.508012310058106]
Test Case: 369 | Input/Output: [[24.598434278907504 -9] 15.598434278907504]
Test Case: 370 | Input/Output: [[81.87444114893052 73] 154.87444114893052]
Test Case: 371 | Input/Output: [[-93.75711682576416 -4] -97.75711682576416]
Test Case: 372 | Input/Output: [[70.43578670258913 -18] 52.43578670258913]
Test Case: 373 | Input/Output: [[57.364919100083824 81] 138.36491910008382]
Test Case: 374 | Input/Output: [[-76.64172474125932 -93] -169.64172474125934]
Test Case: 375 | Input/Output: [[6.4420569230041025 49] 55.4420569230041]
Test Case: 376 | Input/Output: [[21.85387713062994 6] 27.85387713062994]
Test Case: 377 | Input/Output: [[23.51992211292273 -28] -4.480077887077272]
Test Case: 378 | Input/Output: [[-63.579956386684565 -80] -143.57995638668456]
Test Case: 379 | Input/Output: [[78.92632518651968 53] 131.92632518651968]
Test Case: 380 | Input/Output: [[64.61225785237207 -55] 9.612257852372068]
Test Case: 381 | Input/Output: [[-49.23543553151599 -24] -73.23543553151599]
Test Case: 382 | Input/Output: [[54.63242624416321 -45] 9.632426244163213]
Test Case: 383 | Input/Output: [[-61.75883978149572 52] -9.758839781495723]
Test Case: 384 | Input/Output: [[22.87166612540348 21] 43.87166612540348]
Test Case: 385 | Input/Output: [[86.87428558980838 -46] 40.87428558980838]
Test Case: 386 | Input/Output: [[32.17204226499672 73] 105.17204226499672]
Test Case: 387 | Input/Output: [[65.9966218913346 11] 76.9966218913346]
Test Case: 388 | Input/Output: [[34.59395692696535 -42] -7.4060430730346525]
Test Case: 389 | Input/Output: [[7.733847325066449 31] 38.73384732506645]
Test Case: 390 | Input/Output: [[-20.450016503327404 92] 71.5499834966726]
Test Case: 391 | Input/Output: [[87.94217534857177 19] 106.94217534857177]
Test Case: 392 | Input/Output: [[15.718279043299034 -44] -28.281720956700966]
Test Case: 393 | Input/Output: [[58.40541890464456 58] 116.40541890464456]
Test Case: 394 | Input/Output: [[-74.78457801541347 62] -12.784578015413473]
Test Case: 395 | Input/Output: [[-19.088592872293802 -88] -107.0885928722938]
Test Case: 396 | Input/Output: [[-46.692803529533535 -22] -68.69280352953353]
Test Case: 397 | Input/Output: [[40.32917331079426 -54] -13.67082668920574]
Test Case: 398 | Input/Output: [[-78.84656773799597 -54] -132.84656773799597]
Test Case: 399 | Input/Output: [[78.40944079739285 -27] 51.40944079739285]
Test Case: 400 | Input/Output: [[8.44487691732661 -91] -82.55512308267339]
Test Case: 401 | Input/Output: [[-4.114005016074003 -54] -58.114005016074]
Test Case: 402 | Input/Output: [[44.121709553909625 -58] -13.878290446090375]
Test Case: 403 | Input/Output: [[-25.571352371613727 3] -22.571352371613727]
Test Case: 404 | Input/Output: [[45.550240482842895 -7] 38.550240482842895]
Test Case: 405 | Input/Output: [[-17.445978925255574 -84] -101.44597892525557]
Test Case: 406 | Input/Output: [[-69.92942690508215 94] 24.070573094917847]
Test Case: 407 | Input/Output: [[-87.63874033465333 75] -12.638740334653335]
Test Case: 408 | Input/Output: [[12.384653577740195 -4] 8.384653577740195]
Test Case: 409 | Input/Output: [[72.23160827661144 88] 160.23160827661144]
Test Case: 410 | Input/Output: [[34.21507393743914 -5] 29.215073937439143]
Test Case: 411 | Input/Output: [[-60.23520485047704 75] 14.76479514952296]
Test Case: 412 | Input/Output: [[-36.82344179679553 -61] -97.82344179679552]
Test Case: 413 | Input/Output: [[72.45305936380387 39] 111.45305936380387]
Test Case: 414 | Input/Output: [[39.72501806936128 11] 50.72501806936128]
Test Case: 415 | Input/Output: [[-52.432050268293715 -18] -70.43205026829372]
Test Case: 416 | Input/Output: [[-14.157285993078688 -42] -56.15728599307869]
Test Case: 417 | Input/Output: [[2.167991009136159 18] 20.16799100913616]
Test Case: 418 | Input/Output: [[-52.99910068764269 35] -17.999100687642688]
Test Case: 419 | Input/Output: [[-70.51580104782396 -30] -100.51580104782396]
Test Case: 420 | Input/Output: [[18.248438179620493 51] 69.24843817962049]
Test Case: 421 | Input/Output: [[-0.6174646387230069 -90] -90.617464638723]
Test Case: 422 | Input/Output: [[-35.68917376568264 66] 30.31082623431736]
Test Case: 423 | Input/Output: [[-42.59391044855923 -29] -71.59391044855923]
Test Case: 424 | Input/Output: [[35.60382449690488 25] 60.60382449690488]
Test Case: 425 | Input/Output: [[35.63109187444476 48] 83.63109187444476]
Test Case: 426 | Input/Output: [[-31.199419601214572 -70] -101.19941960121457]
Test Case: 427 | Input/Output: [[61.25745374491828 -23] 38.25745374491828]
Test Case: 428 | Input/Output: [[-10.249059097073342 -39] -49.24905909707334]
Test Case: 429 | Input/Output: [[-4.3024540744413855 -31] -35.302454074441386]
Test Case: 430 | Input/Output: [[32.4415998426407 -36] -3.5584001573593014]
Test Case: 431 | Input/Output: [[40.21015287941671 47] 87.21015287941671]
Test Case: 432 | Input/Output: [[14.889501016504283 17] 31.889501016504283]
Test Case: 433 | Input/Output: [[-78.6120044350165 -74] -152.6120044350165]
Test Case: 434 | Input/Output: [[-4.76358831030592 17] 12.23641168969408]
Test Case: 435 | Input/Output: [[-58.29032938674812 -75] -133.2903293867481]
Test Case: 436 | Input/Output: [[68.82506009424739 54] 122.82506009424739]
Test Case: 437 | Input/Output: [[-70.43321460997605 79] 8.566785390023952]
Test Case: 438 | Input/Output: [[-20.094243040767708 36] 15.905756959232292]
Test Case: 439 | Input/Output: [[-14.928507487991595 32] 17.071492512008405]
Test Case: 440 | Input/Output: [[-82.29675239029315 -46] -128.29675239029314]
Test Case: 441 | Input/Output: [[62.769480191185124 -48] 14.769480191185124]
Test Case: 442 | Input/Output: [[-54.302754276390885 13] -41.302754276390885]
Test Case: 443 | Input/Output: [[65.29416418277535 -80] -14.705835817224653]
Test Case: 444 | Input/Output: [[-4.51624850743579 31] 26.48375149256421]
Test Case: 445 | Input/Output: [[91.39109472741339 69] 160.3910947274134]
Test Case: 446 | Input/Output: [[-96.99022231488699 -29] -125.99022231488699]
Test Case: 447 | Input/Output: [[-31.070713390390267 -47] -78.07071339039027]
Test Case: 448 | Input/Output: [[72.75645080050609 7] 79.75645080050609]
Test Case: 449 | Input/Output: [[59.05562127279427 38] 97.05562127279427]
Test Case: 450 | Input/Output: [[-95.69933679130493 26] -69.69933679130493]
Test Case: 451 | Input/Output: [[-3.8746867589499345 48] 44.125313241050065]
Test Case: 452 | Input/Output: [[25.88439123236634 87] 112.88439123236634]
Test Case: 453 | Input/Output: [[36.791128662258586 37] 73.79112866225859]
Test Case: 454 | Input/Output: [[4.475382900554649 -33] -28.52461709944535]
Test Case: 455 | Input/Output: [[55.55822495352314 -16] 39.55822495352314]
Test Case: 456 | Input/Output: [[-23.844566820193066 16] -7.844566820193066]
Test Case: 457 | Input/Output: [[14.158643652808806 -74] -59.841356347191194]
Test Case: 458 | Input/Output: [[52.517240045670576 30] 82.51724004567058]
Test Case: 459 | Input/Output: [[-68.5652278511751 84] 15.434772148824905]
Test Case: 460 | Input/Output: [[-21.02026138536172 -33] -54.02026138536172]
Test Case: 461 | Input/Output: [[-53.590038739616205 -93] -146.5900387396162]
Test Case: 462 | Input/Output: [[74.69466068370534 35] 109.69466068370534]
Test Case: 463 | Input/Output: [[-64.91777830016613 45] -19.917778300166134]
Test Case: 464 | Input/Output: [[-10.723424050723324 -85] -95.72342405072332]
Test Case: 465 | Input/Output: [[-32.01929226564668 90] 57.98070773435332]
Test Case: 466 | Input/Output: [[70.87779059589349 -23] 47.87779059589349]
Test Case: 467 | Input/Output: [[27.65990898519189 76] 103.65990898519189]
Test Case: 468 | Input/Output: [[3.7391649074117055 -32] -28.260835092588295]
Test Case: 469 | Input/Output: [[-17.475258872307492 -93] -110.47525887230749]
Test Case: 470 | Input/Output: [[-40.8576606391128 -18] -58.8576606391128]
Test Case: 471 | Input/Output: [[-43.78125610417696 -21] -64.78125610417696]
Test Case: 472 | Input/Output: [[44.240801056574895 -32] 12.240801056574895]
Test Case: 473 | Input/Output: [[9.513623303666122 -81] -71.48637669633388]
Test Case: 474 | Input/Output: [[-9.82136567465595 -9] -18.82136567465595]
Test Case: 475 | Input/Output: [[70.9217906187634 -90] -19.078209381236604]
Test Case: 476 | Input/Output: [[63.95210939279363 -51] 12.95210939279363]
Test Case: 477 | Input/Output: [[-13.526665929598963 -53] -66.52666592959896]
Test Case: 478 | Input/Output: [[67.6429616165889 -33] 34.642961616588906]
Test Case: 479 | Input/Output: [[93.3644546227919 -40] 53.3644546227919]
Test Case: 480 | Input/Output: [[-86.86049048505467 -15] -101.86049048505467]
Test Case: 481 | Input/Output: [[-19.333560031474704 -50] -69.3335600314747]
Test Case: 482 | Input/Output: [[46.15798309729453 -2] 44.15798309729453]
Test Case: 483 | Input/Output: [[-15.92188460628428 34] 18.07811539371572]
Test Case: 484 | Input/Output: [[62.82710556106747 -26] 36.82710556106747]
Test Case: 485 | Input/Output: [[-25.327487989953326 -54] -79.32748798995333]
Test Case: 486 | Input/Output: [[-96.94660333601975 6] -90.94660333601975]
Test Case: 487 | Input/Output: [[61.308319893863796 -21] 40.308319893863796]
Test Case: 488 | Input/Output: [[81.48250002559288 -37] 44.482500025592884]
Test Case: 489 | Input/Output: [[29.94273064538629 -25] 4.942730645386291]
Test Case: 490 | Input/Output: [[-80.49968806536616 53] -27.499688065366158]
Test Case: 491 | Input/Output: [[80.33073754415165 68] 148.33073754415165]
Test Case: 492 | Input/Output: [[-85.3589284549468 99] 13.641071545053194]
Test Case: 493 | Input/Output: [[67.5615875720784 -1] 66.5615875720784]
Test Case: 494 | Input/Output: [[-88.90642098681826 -21] -109.90642098681826]
Test Case: 495 | Input/Output: [[38.10126699118288 -26] 12.101266991182882]
Test Case: 496 | Input/Output: [[-74.02954247173103 -90] -164.02954247173102]
Test Case: 497 | Input/Output: [[-24.580424029134377 71] 46.41957597086562]
Test Case: 498 | Input/Output: [[37.46750115480248 -86] -48.53249884519752]
Test Case: 499 | Input/Output: [[30.50141889839253 24] 54.50141889839253]
Test Case: 500 | Input/Output: [[77.57785647181578 49] 126.57785647181578]
Test Case: 501 | Input/Output: [[-93.98823739383802 -8] -101.98823739383802]
Test Case: 502 | Input/Output: [[-42.12991613735966 -24] -66.12991613735966]
Test Case: 503 | Input/Output: [[-63.129132513104636 -48] -111.12913251310464]
Test Case: 504 | Input/Output: [[-77.30940114053277 -19] -96.30940114053277]
Test Case: 505 | Input/Output: [[33.00814370386175 -87] -53.99185629613825]
Test Case: 506 | Input/Output: [[-38.324114780427834 5] -33.324114780427834]
Test Case: 507 | Input/Output: [[52.14113667359044 53] 105.14113667359044]
Test Case: 508 | Input/Output: [[72.44384775048448 -66] 6.44384775048448]
Test Case: 509 | Input/Output: [[-25.475967350865034 -64] -89.47596735086503]
Test Case: 510 | Input/Output: [[60.94847563780456 -11] 49.94847563780456]
Test Case: 511 | Input/Output: [[-41.83478983360762 80] 38.16521016639238]
Test Case: 512 | Input/Output: [[-72.23510883119866 -26] -98.23510883119866]
Test Case: 513 | Input/Output: [[-86.7911870712375 -1] -87.7911870712375]
Test Case: 514 | Input/Output: [[-15.341435413600209 80] 64.65856458639979]
Test Case: 515 | Input/Output: [[96.02383642762527 -77] 19.02383642762527]
Test Case: 516 | Input/Output: [[37.60837173023549 -72] -34.39162826976451]
Test Case: 517 | Input/Output: [[-9.298513834798044 21] 11.701486165201956]
Test Case: 518 | Input/Output: [[-9.254666047301725 33] 23.745333952698275]
Test Case: 519 | Input/Output: [[18.072945705205214 -80] -61.927054294794786]
Test Case: 520 | Input/Output: [[-36.2143293825089 91] 54.7856706174911]
Test Case: 521 | Input/Output: [[-78.09997251072258 6] -72.09997251072258]
Test Case: 522 | Input/Output: [[76.12516939134622 -9] 67.12516939134622]
Test Case: 523 | Input/Output: [[-12.264434588878274 67] 54.735565411121726]
Test Case: 524 | Input/Output: [[51.60077031424325 93] 144.60077031424325]
Test Case: 525 | Input/Output: [[67.88024112675686 -59] 8.880241126756857]
Test Case: 526 | Input/Output: [[19.073829568743463 54] 73.07382956874346]
Test Case: 527 | Input/Output: [[69.172733966474 -97] -27.827266033526]
Test Case: 528 | Input/Output: [[-38.61116300409832 90] 51.38883699590168]
Test Case: 529 | Input/Output: [[2.1983694432285716 19] 21.19836944322857]
Test Case: 530 | Input/Output: [[-85.58343903252737 -73] -158.58343903252737]
Test Case: 531 | Input/Output: [[1.4338633856312697 99] 100.43386338563127]
Test Case: 532 | Input/Output: [[-49.295297053934874 -42] -91.29529705393487]
Test Case: 533 | Input/Output: [[18.067615910774435 49] 67.06761591077444]
Test Case: 534 | Input/Output: [[70.12851228817934 39] 109.12851228817934]
Test Case: 535 | Input/Output: [[-29.071468612000558 -4] -33.07146861200056]
Test Case: 536 | Input/Output: [[94.63802537106906 -81] 13.638025371069062]
Test Case: 537 | Input/Output: [[18.113586219579545 -23] -4.886413780420455]
Test Case: 538 | Input/Output: [[86.31034668427634 49] 135.31034668427634]
Test Case: 539 | Input/Output: [[96.45866551172014 45] 141.45866551172014]
Test Case: 540 | Input/Output: [[56.68997489620088 -79] -22.31002510379912]
Test Case: 541 | Input/Output: [[-4.873650779311546 3] -1.8736507793115464]
Test Case: 542 | Input/Output: [[73.8299507718011 -42] 31.829950771801094]
Test Case: 543 | Input/Output: [[72.74959566715762 -7] 65.74959566715762]
Test Case: 544 | Input/Output: [[40.646417411508025 43] 83.64641741150803]
Test Case: 545 | Input/Output: [[69.00687443353485 45] 114.00687443353485]
Test Case: 546 | Input/Output: [[-49.384142473491764 -36] -85.38414247349176]
Test Case: 547 | Input/Output: [[-85.7254561640334 76] -9.725456164033403]
Test Case: 548 | Input/Output: [[90.85752414758846 -56] 34.857524147588464]
Test Case: 549 | Input/Output: [[63.89521295339148 69] 132.89521295339148]
Test Case: 550 | Input/Output: [[63.76370365544568 -86] -22.23629634455432]
Test Case: 551 | Input/Output: [[83.42736516931737 98] 181.42736516931737]
Test Case: 552 | Input/Output: [[-37.44124497003889 -85] -122.4412449700389]
Test Case: 553 | Input/Output: [[-8.910369134317264 -36] -44.910369134317264]
Test Case: 554 | Input/Output: [[-2.2236501419488093 -17] -19.22365014194881]
Test Case: 555 | Input/Output: [[6.8441541702597135 -30] -23.155845829740286]
Test Case: 556 | Input/Output: [[92.72363326990956 -63] 29.723633269909556]
Test Case: 557 | Input/Output: [[-71.92151636246977 -48] -119.92151636246977]
Test Case: 558 | Input/Output: [[56.159339638987944 88] 144.15933963898794]
Test Case: 559 | Input/Output: [[-17.353312611716845 -17] -34.353312611716845]
Test Case: 560 | Input/Output: [[-31.71813961257645 20] -11.71813961257645]
Test Case: 561 | Input/Output: [[8.114932328418888 38] 46.11493232841889]
Test Case: 562 | Input/Output: [[61.04497431969651 -20] 41.04497431969651]
Test Case: 563 | Input/Output: [[78.12956176507711 -53] 25.129561765077113]
Test Case: 564 | Input/Output: [[-41.66846236712818 -98] -139.66846236712817]
Test Case: 565 | Input/Output: [[23.31188297103583 -11] 12.311882971035828]
Test Case: 566 | Input/Output: [[84.15130693862375 88] 172.15130693862375]
Test Case: 567 | Input/Output: [[-67.4280232376866 51] -16.428023237686602]
Test Case: 568 | Input/Output: [[-61.218969712786375 25] -36.218969712786375]
Test Case: 569 | Input/Output: [[90.45393919897978 62] 152.45393919897978]
Test Case: 570 | Input/Output: [[-52.779205404178086 3] -49.779205404178086]
Test Case: 571 | Input/Output: [[-83.60479798650991 41] -42.60479798650991]
Test Case: 572 | Input/Output: [[12.95925708970853 1] 13.95925708970853]
Test Case: 573 | Input/Output: [[-21.49705152324681 -30] -51.49705152324681]
Test Case: 574 | Input/Output: [[-89.73333313565963 -54] -143.73333313565962]
Test Case: 575 | Input/Output: [[97.89099550795117 -4] 93.89099550795117]
Test Case: 576 | Input/Output: [[97.5153930262058 -44] 53.5153930262058]
Test Case: 577 | Input/Output: [[28.776402871003796 -21] 7.776402871003796]
Test Case: 578 | Input/Output: [[-99.17232650521592 64] -35.17232650521592]
Test Case: 579 | Input/Output: [[-62.33726464093359 46] -16.33726464093359]
Test Case: 580 | Input/Output: [[-74.20774423463696 -77] -151.20774423463695]
Test Case: 581 | Input/Output: [[51.0723569122637 55] 106.0723569122637]
Test Case: 582 | Input/Output: [[-67.12173444390271 -9] -76.12173444390271]
Test Case: 583 | Input/Output: [[-37.53581412228395 92] 54.46418587771605]
Test Case: 584 | Input/Output: [[7.963558332596165 78] 85.96355833259616]
Test Case: 585 | Input/Output: [[-75.7320818898013 -14] -89.7320818898013]
Test Case: 586 | Input/Output: [[6.741102089302004 98] 104.741102089302]
Test Case: 587 | Input/Output: [[78.32861543752054 -73] 5.32861543752054]
Test Case: 588 | Input/Output: [[34.87139200187187 33] 67.87139200187187]
Test Case: 589 | Input/Output: [[83.33422732133155 -15] 68.33422732133155]
Test Case: 590 | Input/Output: [[84.48952737783824 -98] -13.510472622161757]
Test Case: 591 | Input/Output: [[53.40587028943608 -1] 52.40587028943608]
Test Case: 592 | Input/Output: [[-56.04121618294782 -18] -74.04121618294782]
Test Case: 593 | Input/Output: [[-61.214271618174074 -74] -135.21427161817408]
Test Case: 594 | Input/Output: [[2.319369657442593 39] 41.31936965744259]
Test Case: 595 | Input/Output: [[-44.967117901652465 -61] -105.96711790165247]
Test Case: 596 | Input/Output: [[-48.76192662401204 -72] -120.76192662401203]
Test Case: 597 | Input/Output: [[-66.34608564234898 40] -26.34608564234898]
Test Case: 598 | Input/Output: [[-79.87618822452735 75] -4.876188224527354]
Test Case: 599 | Input/Output: [[57.37373627657564 -69] -11.626263723424358]
Test Case: 600 | Input/Output: [[-78.28702208699829 67] -11.287022086998292]
Test Case: 601 | Input/Output: [[29.50201797476356 69] 98.50201797476356]
Test Case: 602 | Input/Output: [[-50.66733940369079 21] -29.66733940369079]
Test Case: 603 | Input/Output: [[-79.99604202904067 46] -33.996042029040666]
Test Case: 604 | Input/Output: [[-64.29313544388077 -78] -142.29313544388077]
Test Case: 605 | Input/Output: [[-63.798392535654756 -61] -124.79839253565476]
Test Case: 606 | Input/Output: [[22.556181404551552 100] 122.55618140455155]
Test Case: 607 | Input/Output: [[52.03302567198514 93] 145.03302567198514]
Test Case: 608 | Input/Output: [[-93.4187399829603 -66] -159.4187399829603]
Test Case: 609 | Input/Output: [[-40.43478397402029 -69] -109.43478397402029]
Test Case: 610 | Input/Output: [[-32.01271225358266 -24] -56.01271225358266]
Test Case: 611 | Input/Output: [[40.9731923347029 -42] -1.026807665297099]
Test Case: 612 | Input/Output: [[43.05366395859815 -94] -50.94633604140185]
Test Case: 613 | Input/Output: [[47.17871853366995 55] 102.17871853366995]
Test Case: 614 | Input/Output: [[-91.15613459269034 -99] -190.15613459269034]
Test Case: 615 | Input/Output: [[-57.23887452728449 -73] -130.23887452728448]
Test Case: 616 | Input/Output: [[6.612226877528386 -34] -27.387773122471614]
Test Case: 617 | Input/Output: [[-17.51536793163035 84] 66.48463206836965]
Test Case: 618 | Input/Output: [[4.427868111004869 -88] -83.57213188899513]
Test Case: 619 | Input/Output: [[-51.81738798178757 76] 24.18261201821243]
Test Case: 620 | Input/Output: [[69.22153527091456 46] 115.22153527091456]
Test Case: 621 | Input/Output: [[94.72328047260658 -85] 9.723280472606575]
Test Case: 622 | Input/Output: [[78.58966078439974 -50] 28.58966078439974]
Test Case: 623 | Input/Output: [[-94.67973896668835 93] -1.6797389666883475]
Test Case: 624 | Input/Output: [[83.83246994134191 77] 160.8324699413419]
Test Case: 625 | Input/Output: [[-42.30931335024761 45] 2.6906866497523865]
Test Case: 626 | Input/Output: [[-74.67337754471832 13] -61.67337754471832]
Test Case: 627 | Input/Output: [[-56.427691691336655 -26] -82.42769169133666]
Test Case: 628 | Input/Output: [[92.99799833132522 -55] 37.99799833132522]
Test Case: 629 | Input/Output: [[44.91889439585927 75] 119.91889439585927]
Test Case: 630 | Input/Output: [[-4.767118024162741 -95] -99.76711802416274]
Test Case: 631 | Input/Output: [[-80.8118574208971 -29] -109.8118574208971]
Test Case: 632 | Input/Output: [[-94.53223147267695 -64] -158.53223147267695]
Test Case: 633 | Input/Output: [[-78.84969941285655 -83] -161.84969941285655]
Test Case: 634 | Input/Output: [[-96.62635196959397 -65] -161.62635196959397]
Test Case: 635 | Input/Output: [[-88.78537746604174 41] -47.78537746604174]
Test Case: 636 | Input/Output: [[14.128064229743671 68] 82.12806422974367]
Test Case: 637 | Input/Output: [[83.36509516876362 -8] 75.36509516876362]
Test Case: 638 | Input/Output: [[9.619020150109009 57] 66.61902015010901]
Test Case: 639 | Input/Output: [[-21.31940451167287 -85] -106.31940451167287]
Test Case: 640 | Input/Output: [[36.888899224252214 90] 126.88889922425221]
Test Case: 641 | Input/Output: [[-9.309407468320316 73] 63.690592531679684]
Test Case: 642 | Input/Output: [[8.060943063756682 -46] -37.93905693624332]
Test Case: 643 | Input/Output: [[0.6492254876400807 9] 9.64922548764008]
Test Case: 644 | Input/Output: [[-6.263026413619315 77] 70.73697358638069]
Test Case: 645 | Input/Output: [[-8.921081844064545 23] 14.078918155935455]
Test Case: 646 | Input/Output: [[-5.280016807933791 42] 36.71998319206621]
Test Case: 647 | Input/Output: [[-98.19466431687016 -88] -186.19466431687016]
Test Case: 648 | Input/Output: [[99.10748364479508 -70] 29.10748364479508]
Test Case: 649 | Input/Output: [[-55.081845995036225 51] -4.081845995036225]
Test Case: 650 | Input/Output: [[-60.55322458464411 -89] -149.5532245846441]
Test Case: 651 | Input/Output: [[55.98146730373753 12] 67.98146730373753]
Test Case: 652 | Input/Output: [[63.42560510574853 10] 73.42560510574853]
Test Case: 653 | Input/Output: [[-86.22669017548611 87] 0.7733098245138876]
Test Case: 654 | Input/Output: [[19.549367074438322 94] 113.54936707443832]
Test Case: 655 | Input/Output: [[24.818880284914215 16] 40.818880284914215]
Test Case: 656 | Input/Output: [[-48.19952859218475 -78] -126.19952859218475]
Test Case: 657 | Input/Output: [[49.600586930450305 -62] -12.399413069549695]
Test Case: 658 | Input/Output: [[-63.63292945019667 21] -42.63292945019667]
Test Case: 659 | Input/Output: [[58.571239718841696 -28] 30.571239718841696]
Test Case: 660 | Input/Output: [[-59.17209097048512 -3] -62.17209097048512]
Test Case: 661 | Input/Output: [[-90.14259205646628 -63] -153.1425920564663]
Test Case: 662 | Input/Output: [[-5.3641348468261185 75] 69.63586515317388]
Test Case: 663 | Input/Output: [[-26.146498603382867 -20] -46.14649860338287]
Test Case: 664 | Input/Output: [[-25.4171041047002 33] 7.582895895299799]
Test Case: 665 | Input/Output: [[10.342538271009659 -54] -43.65746172899034]
Test Case: 666 | Input/Output: [[-31.664624114654472 -34] -65.66462411465447]
Test Case: 667 | Input/Output: [[-43.66963288045578 -51] -94.66963288045578]
Test Case: 668 | Input/Output: [[-11.107175258570805 -87] -98.1071752585708]
Test Case: 669 | Input/Output: [[-28.91205032820774 22] -6.912050328207741]
Test Case: 670 | Input/Output: [[8.15249783095868 -56] -47.84750216904132]
Test Case: 671 | Input/Output: [[61.004452969297574 -66] -4.995547030702426]
Test Case: 672 | Input/Output: [[17.104979348602328 43] 60.10497934860233]
Test Case: 673 | Input/Output: [[10.46158035641507 -29] -18.53841964358493]
Test Case: 674 | Input/Output: [[58.90341259253185 -83] -24.09658740746815]
Test Case: 675 | Input/Output: [[33.383330709308865 17] 50.383330709308865]
Test Case: 676 | Input/Output: [[-1.2590827332817867 48] 46.74091726671821]
Test Case: 677 | Input/Output: [[69.60520161268965 91] 160.60520161268965]
Test Case: 678 | Input/Output: [[50.67367589343172 69] 119.67367589343172]
Test Case: 679 | Input/Output: [[-64.69704508839868 17] -47.69704508839868]
Test Case: 680 | Input/Output: [[-70.57298509117766 47] -23.572985091177657]
Test Case: 681 | Input/Output: [[95.44534277855351 56] 151.4453427785535]
Test Case: 682 | Input/Output: [[60.79374632406103 -54] 6.793746324061033]
Test Case: 683 | Input/Output: [[-74.18014203702927 -58] -132.18014203702927]
Test Case: 684 | Input/Output: [[-75.94109996071508 -6] -81.94109996071508]
Test Case: 685 | Input/Output: [[15.554109146559057 67] 82.55410914655906]
Test Case: 686 | Input/Output: [[-17.61295493727546 82] 64.38704506272454]
Test Case: 687 | Input/Output: [[23.18899584825364 -16] 7.18899584825364]
Test Case: 688 | Input/Output: [[-43.365901041810176 -61] -104.36590104181018]
Test Case: 689 | Input/Output: [[26.28751106009392 -47] -20.71248893990608]
Test Case: 690 | Input/Output: [[30.131776981913703 37] 67.1317769819137]
Test Case: 691 | Input/Output: [[-40.19396567404523 -57] -97.19396567404523]
Test Case: 692 | Input/Output: [[66.78808273446205 -17] 49.78808273446205]
Test Case: 693 | Input/Output: [[-83.86402853756232 77] -6.864028537562319]
Test Case: 694 | Input/Output: [[-93.89444954773228 99] 5.105550452267721]
Test Case: 695 | Input/Output: [[-39.570855716461175 -17] -56.570855716461175]
Test Case: 696 | Input/Output: [[76.78465088142786 -67] 9.784650881427865]
Test Case: 697 | Input/Output: [[40.88237396734212 38] 78.88237396734212]
Test Case: 698 | Input/Output: [[-91.52874964237705 -98] -189.52874964237705]
Test Case: 699 | Input/Output: [[-66.7206752778149 45] -21.720675277814905]
Test Case: 700 | Input/Output: [[-24.666305395408756 -35] -59.666305395408756]
Test Case: 701 | Input/Output: [[-91.98594500385717 33] -58.98594500385717]
Test Case: 702 | Input/Output: [[-15.831839893163519 -89] -104.83183989316352]
Test Case: 703 | Input/Output: [[-50.62210805851666 -6] -56.62210805851666]
Test Case: 704 | Input/Output: [[37.75329710055777 52] 89.75329710055777]
Test Case: 705 | Input/Output: [[66.59193540960655 -95] -28.40806459039345]
Test Case: 706 | Input/Output: [[-18.521463212678242 10] -8.521463212678242]
Test Case: 707 | Input/Output: [[-35.65402468114745 -14] -49.65402468114745]
Test Case: 708 | Input/Output: [[95.29057338321724 53] 148.29057338321724]
Test Case: 709 | Input/Output: [[-36.41834389453405 92] 55.58165610546595]
Test Case: 710 | Input/Output: [[-98.04557975207035 -17] -115.04557975207035]
Test Case: 711 | Input/Output: [[-14.413754158620577 76] 61.58624584137942]
Test Case: 712 | Input/Output: [[37.677260758947 44] 81.677260758947]
Test Case: 713 | Input/Output: [[-46.89435582305141 63] 16.105644176948587]
Test Case: 714 | Input/Output: [[-45.013305688882866 -72] -117.01330568888287]
Test Case: 715 | Input/Output: [[-51.35474704649192 14] -37.35474704649192]
Test Case: 716 | Input/Output: [[59.79511262523488 40] 99.79511262523488]
Test Case: 717 | Input/Output: [[-47.37421481355402 -2] -49.37421481355402]
Test Case: 718 | Input/Output: [[56.42149169906645 58] 114.42149169906645]
Test Case: 719 | Input/Output: [[97.71920929257703 85] 182.71920929257703]
Test Case: 720 | Input/Output: [[9.956057530513405 73] 82.9560575305134]
Test Case: 721 | Input/Output: [[-13.957591988464202 82] 68.0424080115358]
Test Case: 722 | Input/Output: [[-34.6581190107342 -56] -90.6581190107342]
Test Case: 723 | Input/Output: [[-2.836909695531361 -70] -72.83690969553136]
Test Case: 724 | Input/Output: [[-18.988274363650362 79] 60.01172563634964]
Test Case: 725 | Input/Output: [[-12.293593341656717 -84] -96.29359334165672]
Test Case: 726 | Input/Output: [[4.932250353705697 -25] -20.067749646294303]
Test Case: 727 | Input/Output: [[-12.796573096034706 37] 24.203426903965294]
Test Case: 728 | Input/Output: [[-35.45328406169452 -33] -68.45328406169452]
Test Case: 729 | Input/Output: [[64.30965918166345 94] 158.30965918166345]
Test Case: 730 | Input/Output: [[55.121208512058274 76] 131.12120851205827]
Test Case: 731 | Input/Output: [[-64.82726199008353 28] -36.82726199008353]
Test Case: 732 | Input/Output: [[25.30431683335614 -60] -34.69568316664386]
Test Case: 733 | Input/Output: [[25.866894956124668 90] 115.86689495612467]
Test Case: 734 | Input/Output: [[-53.80351837371662 30] -23.80351837371662]
Test Case: 735 | Input/Output: [[-31.39699086763686 -74] -105.39699086763686]
Test Case: 736 | Input/Output: [[-69.15144866083047 46] -23.151448660830468]
Test Case: 737 | Input/Output: [[-78.00708725068276 -61] -139.00708725068276]
Test Case: 738 | Input/Output: [[-91.92393526993983 -36] -127.92393526993983]
Test Case: 739 | Input/Output: [[-30.21834252342026 23] -7.218342523420262]
Test Case: 740 | Input/Output: [[47.81626810751928 -63] -15.183731892480722]
Test Case: 741 | Input/Output: [[-82.96029546393117 91] 8.039704536068825]
Test Case: 742 | Input/Output: [[-46.15204965284043 -70] -116.15204965284043]
Test Case: 743 | Input/Output: [[-37.37067349450307 -42] -79.37067349450308]
Test Case: 744 | Input/Output: [[78.16459041945032 92] 170.16459041945032]
Test Case: 745 | Input/Output: [[-47.65534800114717 16] -31.655348001147168]
Test Case: 746 | Input/Output: [[-42.914165158252196 -32] -74.91416515825219]
Test Case: 747 | Input/Output: [[-61.89094049690198 80] 18.109059503098017]
Test Case: 748 | Input/Output: [[-27.52712470704462 38] 10.47287529295538]
Test Case: 749 | Input/Output: [[-68.78215478181491 13] -55.78215478181491]
Test Case: 750 | Input/Output: [[98.33646074224774 38] 136.33646074224774]
Test Case: 751 | Input/Output: [[-58.90161491989075 -100] -158.90161491989073]
Test Case: 752 | Input/Output: [[-75.77204422991699 -92] -167.772044229917]
Test Case: 753 | Input/Output: [[-18.856354767495432 -5] -23.856354767495432]
Test Case: 754 | Input/Output: [[93.5327229008754 -5] 88.5327229008754]
Test Case: 755 | Input/Output: [[-49.65961975959716 -20] -69.65961975959716]
Test Case: 756 | Input/Output: [[-2.7590149748504302 52] 49.24098502514957]
Test Case: 757 | Input/Output: [[45.959640996470114 -36] 9.959640996470114]
Test Case: 758 | Input/Output: [[-69.58539303109461 14] -55.58539303109461]
Test Case: 759 | Input/Output: [[-62.695330201699775 52] -10.695330201699775]
Test Case: 760 | Input/Output: [[-95.85126423856252 -87] -182.85126423856252]
Test Case: 761 | Input/Output: [[30.60642022430619 55] 85.60642022430619]
Test Case: 762 | Input/Output: [[-55.687596248472545 45] -10.687596248472545]
Test Case: 763 | Input/Output: [[-11.623486158830602 -34] -45.6234861588306]
Test Case: 764 | Input/Output: [[-39.02660294011709 -67] -106.02660294011709]
Test Case: 765 | Input/Output: [[48.52270296653606 69] 117.52270296653606]
Test Case: 766 | Input/Output: [[44.585407049012275 87] 131.58540704901228]
Test Case: 767 | Input/Output: [[-21.874989558190777 -26] -47.87498955819078]
Test Case: 768 | Input/Output: [[-96.91570724129078 -62] -158.91570724129076]
Test Case: 769 | Input/Output: [[-80.41888586851418 80] -0.41888586851418097]
Test Case: 770 | Input/Output: [[-89.35905106709731 -79] -168.3590510670973]
Test Case: 771 | Input/Output: [[-73.87443618223392 -82] -155.87443618223392]
Test Case: 772 | Input/Output: [[62.53828740974103 25] 87.53828740974103]
Test Case: 773 | Input/Output: [[52.84702782135068 -36] 16.84702782135068]
Test Case: 774 | Input/Output: [[93.62812159419013 -58] 35.628121594190134]
Test Case: 775 | Input/Output: [[1.7676917779837709 32] 33.76769177798377]
Test Case: 776 | Input/Output: [[-34.951147044135084 -100] -134.9511470441351]
Test Case: 777 | Input/Output: [[-10.743868102329273 -83] -93.74386810232927]
Test Case: 778 | Input/Output: [[-15.509280942752483 95] 79.49071905724752]
Test Case: 779 | Input/Output: [[-13.778803047874504 -76] -89.7788030478745]
Test Case: 780 | Input/Output: [[20.662263279957543 -78] -57.33773672004246]
Test Case: 781 | Input/Output: [[-8.472231041052808 -37] -45.47223104105281]
Test Case: 782 | Input/Output: [[-11.2557418701156 -46] -57.2557418701156]
Test Case: 783 | Input/Output: [[-29.602351546537278 55] 25.397648453462722]
Test Case: 784 | Input/Output: [[-71.74385017418746 -59] -130.74385017418746]
Test Case: 785 | Input/Output: [[-87.41265286498945 100] 12.587347135010546]
Test Case: 786 | Input/Output: [[-80.27163954853995 -50] -130.27163954853995]
Test Case: 787 | Input/Output: [[61.361777504596944 -18] 43.361777504596944]
Test Case: 788 | Input/Output: [[47.712622408366144 57] 104.71262240836614]
Test Case: 789 | Input/Output: [[-90.29182464531553 -12] -102.29182464531553]
Test Case: 790 | Input/Output: [[44.1887180351803 -50] -5.811281964819699]
Test Case: 791 | Input/Output: [[-24.59961438613705 57] 32.40038561386295]
Test Case: 792 | Input/Output: [[-35.83289878908225 -89] -124.83289878908225]
Test Case: 793 | Input/Output: [[-77.33749011472241 2] -75.33749011472241]
Test Case: 794 | Input/Output: [[26.204598611929413 -45] -18.795401388070587]
Test Case: 795 | Input/Output: [[0.10917016404488322 -72] -71.89082983595512]
Test Case: 796 | Input/Output: [[-98.71120136326546 -82] -180.71120136326545]
Test Case: 797 | Input/Output: [[90.09148944919824 -54] 36.091489449198235]
Test Case: 798 | Input/Output: [[-35.28198206942473 8] -27.28198206942473]
Test Case: 799 | Input/Output: [[-46.62636795961288 22] -24.626367959612878]
Test Case: 800 | Input/Output: [[21.010830217680194 77] 98.0108302176802]
Test Case: 801 | Input/Output: [[-23.358920839586432 -56] -79.35892083958643]
Test Case: 802 | Input/Output: [[47.35424077092267 15] 62.35424077092267]
Test Case: 803 | Input/Output: [[-85.60030057980073 31] -54.60030057980073]
Test Case: 804 | Input/Output: [[-87.31362136613971 -63] -150.31362136613973]
Test Case: 805 | Input/Output: [[-62.7481434603272 67] 4.251856539672801]
Test Case: 806 | Input/Output: [[98.69461847335336 66] 164.69461847335336]
Test Case: 807 | Input/Output: [[-3.2701308752936455 38] 34.729869124706354]
Test Case: 808 | Input/Output: [[-6.7047152112399715 -81] -87.70471521123997]
Test Case: 809 | Input/Output: [[82.28404016512835 59] 141.28404016512835]
Test Case: 810 | Input/Output: [[24.554322797115404 78] 102.5543227971154]
Test Case: 811 | Input/Output: [[98.51696235905487 37] 135.51696235905487]
Test Case: 812 | Input/Output: [[24.821615901943716 -40] -15.178384098056284]
Test Case: 813 | Input/Output: [[24.680567682717097 73] 97.6805676827171]
Test Case: 814 | Input/Output: [[42.70696212188949 52] 94.70696212188949]
Test Case: 815 | Input/Output: [[-24.394536260333055 78] 53.605463739666945]
Test Case: 816 | Input/Output: [[-32.75808289694832 -91] -123.75808289694832]
Test Case: 817 | Input/Output: [[-45.93855499420398 47] 1.061445005796017]
Test Case: 818 | Input/Output: [[73.86681306063872 -42] 31.86681306063872]
Test Case: 819 | Input/Output: [[-64.31955212980453 61] -3.319552129804535]
Test Case: 820 | Input/Output: [[-93.20515283887514 -12] -105.20515283887514]
Test Case: 821 | Input/Output: [[61.95546659372607 52] 113.95546659372607]
Test Case: 822 | Input/Output: [[2.1698963265963016 -32] -29.8301036734037]
Test Case: 823 | Input/Output: [[30.13404919563976 55] 85.13404919563976]
Test Case: 824 | Input/Output: [[43.260868814850625 -88] -44.739131185149375]
Test Case: 825 | Input/Output: [[-71.33103976956119 -1] -72.33103976956119]
Test Case: 826 | Input/Output: [[12.280761877666336 -96] -83.71923812233366]
Test Case: 827 | Input/Output: [[-27.134045171846395 18] -9.134045171846395]
Test Case: 828 | Input/Output: [[-20.313206385162943 20] -0.3132063851629425]
Test Case: 829 | Input/Output: [[74.67627936162725 -10] 64.67627936162725]
Test Case: 830 | Input/Output: [[61.79797087440019 -94] -32.20202912559981]
Test Case: 831 | Input/Output: [[78.8751909312218 40] 118.8751909312218]
Test Case: 832 | Input/Output: [[-30.066449818772625 -38] -68.06644981877263]
Test Case: 833 | Input/Output: [[44.38015673359354 52] 96.38015673359354]
Test Case: 834 | Input/Output: [[88.05638971685914 -20] 68.05638971685914]
Test Case: 835 | Input/Output: [[-20.41384286260069 -79] -99.41384286260069]
Test Case: 836 | Input/Output: [[80.86758154882594 -96] -15.132418451174061]
Test Case: 837 | Input/Output: [[72.11815105761949 -94] -21.881848942380515]
Test Case: 838 | Input/Output: [[-63.27790739617578 49] -14.277907396175777]
Test Case: 839 | Input/Output: [[-87.99068407191508 -61] -148.9906840719151]
Test Case: 840 | Input/Output: [[94.81335221513595 85] 179.81335221513595]
Test Case: 841 | Input/Output: [[-68.2196932082875 10] -58.219693208287495]
Test Case: 842 | Input/Output: [[80.30072261194988 52] 132.30072261194988]
Test Case: 843 | Input/Output: [[-10.096982168266237 -54] -64.09698216826624]
Test Case: 844 | Input/Output: [[-92.40345525798936 -52] -144.40345525798938]
Test Case: 845 | Input/Output: [[97.57745850238297 -51] 46.57745850238297]
Test Case: 846 | Input/Output: [[84.66762271117722 19] 103.66762271117722]
Test Case: 847 | Input/Output: [[66.49062491820757 12] 78.49062491820757]
Test Case: 848 | Input/Output: [[90.38046420895301 -47] 43.380464208953015]
Test Case: 849 | Input/Output: [[34.20564536907236 67] 101.20564536907236]
Test Case: 850 | Input/Output: [[-6.478882856977535 50] 43.521117143022465]
Test Case: 851 | Input/Output: [[-21.214285139529593 84] 62.78571486047041]
Test Case: 852 | Input/Output: [[22.888420404469542 -69] -46.11157959553046]
Test Case: 853 | Input/Output: [[-58.63764032190277 -89] -147.63764032190278]
Test Case: 854 | Input/Output: [[29.20659876360702 -63] -33.79340123639298]
Test Case: 855 | Input/Output: [[-74.85549049133027 -97] -171.85549049133027]
Test Case: 856 | Input/Output: [[36.3690127741871 -80] -43.6309872258129]
Test Case: 857 | Input/Output: [[72.04227549846755 -96] -23.957724501532454]
Test Case: 858 | Input/Output: [[-74.8193018543686 42] -32.819301854368604]
Test Case: 859 | Input/Output: [[-2.920878128031461 -46] -48.92087812803146]
Test Case: 860 | Input/Output: [[24.87468029594433 24] 48.87468029594433]
Test Case: 861 | Input/Output: [[-93.40603326253427 -10] -103.40603326253427]
Test Case: 862 | Input/Output: [[10.832494625542537 -68] -57.16750537445746]
Test Case: 863 | Input/Output: [[-51.02663348260901 -13] -64.02663348260901]
Test Case: 864 | Input/Output: [[-15.101987955210475 70] 54.898012044789525]
Test Case: 865 | Input/Output: [[-96.273771993358 26] -70.273771993358]
Test Case: 866 | Input/Output: [[-84.87027978020897 1] -83.87027978020897]
Test Case: 867 | Input/Output: [[-43.74754185115166 59] 15.25245814884834]
Test Case: 868 | Input/Output: [[7.161200433761607 93] 100.1612004337616]
Test Case: 869 | Input/Output: [[-30.838874965199963 -68] -98.83887496519996]
Test Case: 870 | Input/Output: [[28.159969420206522 -86] -57.84003057979348]
Test Case: 871 | Input/Output: [[-3.3673587463517833 39] 35.63264125364822]
Test Case: 872 | Input/Output: [[69.94566398204839 -81] -11.054336017951613]
Test Case: 873 | Input/Output: [[96.52702424375383 35] 131.52702424375383]
Test Case: 874 | Input/Output: [[59.905708624244994 -72] -12.094291375755006]
Test Case: 875 | Input/Output: [[18.108061263932854 -100] -81.89193873606715]
Test Case: 876 | Input/Output: [[-86.33303556214153 -98] -184.33303556214153]
Test Case: 877 | Input/Output: [[77.50141746076352 -57] 20.50141746076352]
Test Case: 878 | Input/Output: [[29.562616767178724 -40] -10.437383232821276]
Test Case: 879 | Input/Output: [[-7.688509200424917 -38] -45.68850920042492]
Test Case: 880 | Input/Output: [[42.87473747239454 -38] 4.874737472394543]
Test Case: 881 | Input/Output: [[14.77507376698621 39] 53.77507376698621]
Test Case: 882 | Input/Output: [[59.34891991889404 87] 146.34891991889404]
Test Case: 883 | Input/Output: [[9.8706649032205 -96] -86.1293350967795]
Test Case: 884 | Input/Output: [[-83.6688765740333 -73] -156.6688765740333]
Test Case: 885 | Input/Output: [[16.57612756503508 88] 104.57612756503508]
Test Case: 886 | Input/Output: [[-71.71224411890478 -5] -76.71224411890478]
Test Case: 887 | Input/Output: [[98.22384744463847 -19] 79.22384744463847]
Test Case: 888 | Input/Output: [[-14.916202018890303 45] 30.083797981109697]
Test Case: 889 | Input/Output: [[-5.538585002163771 -37] -42.53858500216377]
Test Case: 890 | Input/Output: [[86.82574628407374 7] 93.82574628407374]
Test Case: 891 | Input/Output: [[91.04821121815073 70] 161.04821121815073]
Test Case: 892 | Input/Output: [[-25.600493665898696 -84] -109.6004936658987]
Test Case: 893 | Input/Output: [[43.54780454475281 -45] -1.4521954552471925]
Test Case: 894 | Input/Output: [[-82.90234045945672 9] -73.90234045945672]
Test Case: 895 | Input/Output: [[-16.56883195282471 28] 11.43116804717529]
Test Case: 896 | Input/Output: [[-14.995411652302522 36] 21.004588347697478]
Test Case: 897 | Input/Output: [[71.59631933763737 -34] 37.59631933763737]
Test Case: 898 | Input/Output: [[-24.64292019229073 92] 67.35707980770927]
Test Case: 899 | Input/Output: [[-10.762239207405088 21] 10.237760792594912]
Test Case: 900 | Input/Output: [[-18.388976411004137 69] 50.61102358899586]
Test Case: 901 | Input/Output: [[66.85171378404681 -39] 27.851713784046808]
Test Case: 902 | Input/Output: [[54.67405863884639 30] 84.67405863884639]
Test Case: 903 | Input/Output: [[86.83906407711416 27] 113.83906407711416]
Test Case: 904 | Input/Output: [[-90.28829308784626 18] -72.28829308784626]
Test Case: 905 | Input/Output: [[44.75434636401229 -47] -2.2456536359877077]
Test Case: 906 | Input/Output: [[-65.67119203685857 -60] -125.67119203685857]
Test Case: 907 | Input/Output: [[98.14899512479661 30] 128.1489951247966]
Test Case: 908 | Input/Output: [[-60.550495241611976 -3] -63.550495241611976]
Test Case: 909 | Input/Output: [[10.418658562647835 73] 83.41865856264783]
Test Case: 910 | Input/Output: [[61.3407005512085 89] 150.3407005512085]
Test Case: 911 | Input/Output: [[-2.8584112364086423 0] -2.8584112364086423]
Test Case: 912 | Input/Output: [[77.12900382012938 -78] -0.8709961798706161]
Test Case: 913 | Input/Output: [[-1.2539447505714065 95] 93.7460552494286]
Test Case: 914 | Input/Output: [[-58.002115617467624 83] 24.997884382532376]
Test Case: 915 | Input/Output: [[80.13133883793049 -14] 66.13133883793049]
Test Case: 916 | Input/Output: [[-85.35758318919264 -80] -165.35758318919264]
Test Case: 917 | Input/Output: [[-41.582351413835816 88] 46.417648586164184]
Test Case: 918 | Input/Output: [[-88.25035557094954 72] -16.250355570949537]
Test Case: 919 | Input/Output: [[-75.50549059096308 56] -19.505490590963078]
Test Case: 920 | Input/Output: [[-56.20650333571435 -12] -68.20650333571436]
Test Case: 921 | Input/Output: [[88.38396273772628 69] 157.38396273772628]
Test Case: 922 | Input/Output: [[-53.2137248336406 83] 29.786275166359403]
Test Case: 923 | Input/Output: [[96.60728201123752 -37] 59.607282011237515]
Test Case: 924 | Input/Output: [[-83.4102557661117 -87] -170.4102557661117]
Test Case: 925 | Input/Output: [[83.20276992635598 99] 182.20276992635598]
Test Case: 926 | Input/Output: [[80.8983096545021 -100] -19.1016903454979]
Test Case: 927 | Input/Output: [[22.671922837775355 -92] -69.32807716222464]
Test Case: 928 | Input/Output: [[2.415778375395334 82] 84.41577837539533]
Test Case: 929 | Input/Output: [[-58.410084891329994 -36] -94.41008489133]
Test Case: 930 | Input/Output: [[3.2585909477693207 -62] -58.74140905223068]
Test Case: 931 | Input/Output: [[-40.13138921527562 -48] -88.13138921527562]
Test Case: 932 | Input/Output: [[45.39883887710542 41] 86.39883887710542]
Test Case: 933 | Input/Output: [[55.77491959837488 67] 122.77491959837488]
Test Case: 934 | Input/Output: [[-88.14516837917779 95] 6.85483162082221]
Test Case: 935 | Input/Output: [[43.07556037798642 85] 128.07556037798642]
Test Case: 936 | Input/Output: [[-89.00603157061622 -42] -131.00603157061622]
Test Case: 937 | Input/Output: [[88.99601323597722 -35] 53.996013235977216]
Test Case: 938 | Input/Output: [[53.80204484059894 -64] -10.197955159401062]
Test Case: 939 | Input/Output: [[60.94861390195939 44] 104.94861390195939]
Test Case: 940 | Input/Output: [[-89.59115150576147 -71] -160.59115150576147]
Test Case: 941 | Input/Output: [[-47.47579091987604 8] -39.47579091987604]
Test Case: 942 | Input/Output: [[88.134440851553 -5] 83.134440851553]
Test Case: 943 | Input/Output: [[78.35107659805584 -99] -20.64892340194416]
Test Case: 944 | Input/Output: [[-46.771847379869925 46] -0.771847379869925]
Test Case: 945 | Input/Output: [[-74.22140402592228 78] 3.7785959740777173]
Test Case: 946 | Input/Output: [[83.09710470581493 77] 160.09710470581493]
Test Case: 947 | Input/Output: [[97.92112355377677 -21] 76.92112355377677]
Test Case: 948 | Input/Output: [[98.86282230453918 51] 149.86282230453918]
Test Case: 949 | Input/Output: [[-63.71537391780107 -46] -109.71537391780106]
Test Case: 950 | Input/Output: [[17.582892414368416 48] 65.58289241436842]
Test Case: 951 | Input/Output: [[36.924649366042104 91] 127.9246493660421]
Test Case: 952 | Input/Output: [[-60.1398889891438 45] -15.139888989143799]
Test Case: 953 | Input/Output: [[5.711404163545097 39] 44.7114041635451]
Test Case: 954 | Input/Output: [[75.59128378352179 46] 121.59128378352179]
Test Case: 955 | Input/Output: [[-0.8190805844946709 15] 14.180919415505329]
Test Case: 956 | Input/Output: [[-33.05956988081297 -5] -38.05956988081297]
Test Case: 957 | Input/Output: [[46.84649480900828 13] 59.84649480900828]
Test Case: 958 | Input/Output: [[22.473280674578675 -57] -34.526719325421325]
Test Case: 959 | Input/Output: [[-94.57375298650548 34] -60.57375298650548]
Test Case: 960 | Input/Output: [[24.04943355680271 25] 49.04943355680271]
Test Case: 961 | Input/Output: [[12.14367109076069 -8] 4.143671090760691]
Test Case: 962 | Input/Output: [[-15.779922450894901 40] 24.2200775491051]
Test Case: 963 | Input/Output: [[-11.855985895967038 -2] -13.855985895967038]
Test Case: 964 | Input/Output: [[61.464713192430565 -51] 10.464713192430565]
Test Case: 965 | Input/Output: [[16.86639225762312 -78] -61.13360774237688]
Test Case: 966 | Input/Output: [[58.356637159472314 -46] 12.356637159472314]
Test Case: 967 | Input/Output: [[-26.792092352684804 -13] -39.792092352684804]
Test Case: 968 | Input/Output: [[-63.62241214715654 -77] -140.62241214715652]
Test Case: 969 | Input/Output: [[-53.14284571992572 70] 16.857154280074283]
Test Case: 970 | Input/Output: [[-4.546858150964539 35] 30.45314184903546]
Test Case: 971 | Input/Output: [[62.24110633463883 -9] 53.24110633463883]
Test Case: 972 | Input/Output: [[-99.43290914006617 -69] -168.43290914006616]
Test Case: 973 | Input/Output: [[33.938625019118916 -72] -38.061374980881084]
Test Case: 974 | Input/Output: [[-23.988078865836755 68] 44.011921134163245]
Test Case: 975 | Input/Output: [[-42.666655029781865 48] 5.3333449702181355]
Test Case: 976 | Input/Output: [[-53.98724929566925 81] 27.01275070433075]
Test Case: 977 | Input/Output: [[-9.18956576156151 58] 48.81043423843849]
Test Case: 978 | Input/Output: [[-89.61545816082462 82] -7.615458160824616]
Test Case: 979 | Input/Output: [[79.32945659082057 47] 126.32945659082057]
Test Case: 980 | Input/Output: [[83.22058732947656 93] 176.22058732947656]
Test Case: 981 | Input/Output: [[-76.69533925033963 -78] -154.69533925033963]
Test Case: 982 | Input/Output: [[-94.19122235940583 84] -10.191222359405828]
Test Case: 983 | Input/Output: [[98.29549711113324 81] 179.29549711113324]
Test Case: 984 | Input/Output: [[38.05561256649699 54] 92.05561256649699]
Test Case: 985 | Input/Output: [[74.709223701018 10] 84.709223701018]
Test Case: 986 | Input/Output: [[26.95660700849301 -34] -7.043392991506991]
Test Case: 987 | Input/Output: [[35.90933562921754 -100] -64.09066437078246]
Test Case: 988 | Input/Output: [[-13.327606743702148 94] 80.67239325629785]
Test Case: 989 | Input/Output: [[-21.37045160563578 -29] -50.37045160563578]
Test Case: 990 | Input/Output: [[-17.495869467051975 26] 8.504130532948025]
Test Case: 991 | Input/Output: [[32.367576951609266 81] 113.36757695160927]
Test Case: 992 | Input/Output: [[-56.686798644161065 41] -15.686798644161065]
Test Case: 993 | Input/Output: [[-43.66756040507931 -4] -47.66756040507931]
Test Case: 994 | Input/Output: [[-47.692285704012164 -60] -107.69228570401216]
Test Case: 995 | Input/Output: [[-95.97330092836496 61] -34.973300928364964]
Test Case: 996 | Input/Output: [[6.844307798400067 82] 88.84430779840007]
Test Case: 997 | Input/Output: [[37.52138523662151 -11] 26.521385236621512]
Test Case: 998 | Input/Output: [[-41.186447844412854 25] -16.186447844412854]
Test Case: 999 | Input/Output: [[49.78494312538501 88] 137.784943125385]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 51 27 6 66 113 88 30 38 -110 76 99 115 -59 85 41 100
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 79973.99819999984
Test mean error for best: 39.98700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 




26.6661916091
Correct output: 1.737259716    | Program output: 




-114.6042746521
Correct output: -6.5206627607  | Program output: 




-19.3651639378
Correct output: 170.3676040222 | Program output: 




38.6082257545
Correct output: -0.0714579309  | Program output: 




-47.4723992982
Correct output: -183.0408262138 | Program output: 




-144.9041979997
Correct output: -31.1200721844 | Program output: 




-5.1882982413
Correct output: -107.6021835772 | Program output: 




-127.7364788511
Correct output: -49.9649996534 | Program output: 




-56.2277726211
Correct output: 29.7033763728  | Program output: 




5.4669992449
Correct output: -33.0184284798 | Program output: 




-37.575551831
Correct output: -37.8493019423 | Program output: 




-110.2594026624
Correct output: 102.5997996851 | Program output: 




26.0387796358
Correct output: -123.3776728769 | Program output: 




-84.1990318714
Correct output: -106.6112108922 | Program output: 




-140.5434003527
Correct output: 7.2670253799   | Program output: 




-95.3779197721
Correct output: 33.4813497193  | Program output: 




25.9221698865
Correct output: 23.6223035091  | Program output: 




43.7812892136
Correct output: -44.5644008389 | Program output: 




-30.2373285684
Correct output: -132.1883981194 | Program output: 




-121.4223367636
Correct output: 1.3060618974   | Program output: 




41.5010322982
Correct output: -33.516842159  | Program output: 




-28.2215803769
Correct output: -155.4583976719 | Program output: 




-109.8745714076
Correct output: 82.5052168972  | Program output: 




-50.842540331
Correct output: -41.9505915994 | Program output: 




-5.021450675
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_mod} {:instruction integer_yank} {:instruction 98} {:instruction print_float} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_sub} {:instruction float_shove} {:instruction integer_dup} {:instruction float_sub} {:instruction print_integer} {:instruction in1} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_min} {:instruction integer_rot} {:instruction float_yank} {:instruction -54.29330083453561} {:instruction in1} {:instruction print_newline} {:instruction -31.239426069981818} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_mod} {:instruction float_cos} {:instruction float_stackdepth} {:instruction float_mult} {:instruction float_dup_items} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction tag_float_579} {:instruction tag_float_297} {:instruction float_sin} {:instruction in1} {:instruction float_mult} {:instruction tagged_271} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction print_newline} {:instruction integer_add} {:instruction integer_pop} {:instruction print_newline} {:instruction float_pop} {:instruction integer_flush} {:instruction print_newline} {:instruction print_newline} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_flush} {:instruction tag_float_340} {:instruction -17} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_yank} {:instruction print_float} {:instruction tag_integer_148} {:instruction float_pop} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction tagged_587} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_sin} {:instruction float_min} {:instruction -12} {:instruction integer_yankdup} {:instruction float_sin} {:instruction integer_add} {:instruction 8} {:instruction integer_mult})
Best program: (integer_yankdup float_dup_times float_mod integer_yank 98 print_float float_yankdup integer_dup_items float_inc float_sub float_shove integer_dup float_sub print_integer in1 integer_stackdepth integer_max float_min integer_rot float_yank -54.29330083453561 in1 print_newline -31.239426069981818 integer_shove integer_shove integer_mod float_cos float_stackdepth float_mult float_dup_items integer_yankdup integer_yank float_stackdepth float_sin tag_float_579 tag_float_297 float_sin in1 float_mult tagged_271 integer_min integer_mult integer_add integer_shove integer_shove integer_mod integer_yankdup integer_stackdepth float_inc print_newline integer_add integer_pop print_newline float_pop integer_flush print_newline print_newline integer_pop float_sin integer_flush tag_float_340 -17 integer_dup_times float_add float_yank print_float tag_integer_148 float_pop float_max float_tan float_mult tagged_587 integer_dec float_stackdepth integer_shove float_sin float_min -12 integer_yankdup float_sin integer_add 8 integer_mult)
Errors: [36.4291 15 116.3415 17 12.8445 16 131.7594 14 47.4009 15 38.1366 16 25.9318 15 20.1343 15 6.2628 16 24.2364 15 4.5571 16 72.4101 15 76.561 12 39.1786 16 33.9322 15 102.6449 14 7.5592 15 20.159 15 14.3271 16 10.7661 16 40.195 13 5.2953 14 45.5838 16 133.3478 15 36.9291 14]
Total: 1478.9235999999999
Mean: 29.578472
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 18156.839383299997
Median total errors in population: 25341.0
Error averages by case: (708.6744084999987 12.959 703.7396406000003 11.616 700.7040615999999 13.062 731.9009508999999 13.283 691.8128498999996 12.785 745.1765910999985 14.042 710.2283544999983 13.812 722.0786599999996 14.0 708.5956226000001 13.319 704.5429550999997 12.489 704.5682519999988 13.908 703.8736689000002 13.221 712.3288557999999 13.295 729.8409024999983 14.189 720.0354780000018 14.039 700.1176420999992 12.442 707.9285706999985 12.488 709.5642341000007 12.499 708.5860700999999 13.832 730.1653785999985 14.217 708.2134046000008 11.676 704.6412013999989 12.943 738.2647433000003 14.071 707.6683372000022 12.446 713.1085491999988 13.847)
Error minima by case: (0.0068 8 0.1819 7 0.2919 8 19.3676 3 0.0156 7 38.1366 2 1.7137 9 0.9578 3 0.035 2 0.2966 1 0.5711 8 1.1322 1 2.5998 2 25.3777 3 8.6112 3 1.267 8 0.5187 2 0.6223 2 1.7269 9 10.7661 3 0.0886 2 0.0727 8 45.5838 2 0.5052 1 0.9506 9)
Average genome size in population (length): 49.382
Average program size in population (points): 50.382
Average percent parens in population: 0.046
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.304
Error (vector) diversity:			 0.324
Behavioral diversity:				 0.347
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1238768
--- Timings ---
Current time: 1529614920198 milliseconds
Total Time:           3.4 seconds
Initialization:       0.1 seconds,  3.4%
Reproduction:         0.6 seconds, 18.0%
Fitness Testing:      2.6 seconds, 78.5%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 69751.58909999992
Test mean error for best: 34.87579
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 


1.459029093
Correct output: 1.737259716    | Program output: 


-61.262740284
Correct output: -6.5206627607  | Program output: 


1.459029093
Correct output: 170.3676040222 | Program output: 


1.459029093
Correct output: -0.0714579309  | Program output: 


1.459029093
Correct output: -183.0408262138 | Program output: 


-92.0408262138
Correct output: -31.1200721844 | Program output: 


1.459029093
Correct output: -107.6021835772 | Program output: 


-74.6021835772
Correct output: -49.9649996534 | Program output: 


-1.9649996534
Correct output: 29.7033763728  | Program output: 


1.459029093
Correct output: -33.0184284798 | Program output: 


1.459029093
Correct output: -37.8493019423 | Program output: 


-56.8493019423
Correct output: 102.5997996851 | Program output: 


1.459029093
Correct output: -123.3776728769 | Program output: 


-30.3776728769
Correct output: -106.6112108922 | Program output: 


-87.6112108922
Correct output: 7.2670253799   | Program output: 


-41.7329746201
Correct output: 33.4813497193  | Program output: 


1.459029093
Correct output: 23.6223035091  | Program output: 


1.459029093
Correct output: -44.5644008389 | Program output: 


1.459029093
Correct output: -132.1883981194 | Program output: 


-68.1883981194
Correct output: 1.3060618974   | Program output: 


1.459029093
Correct output: -33.516842159  | Program output: 


1.459029093
Correct output: -155.4583976719 | Program output: 


-56.4583976719
Correct output: 82.5052168972  | Program output: 


1.459029093
Correct output: -41.9505915994 | Program output: 


1.459029093
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_pop} {:instruction float_yank} {:instruction float_yankdup} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction in2} {:instruction float_frominteger} {:instruction float_tan} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_rot} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup} {:instruction float_min} {:instruction float_tan} {:instruction integer_min} {:instruction integer_min} {:instruction float_pop} {:instruction tagged_87} {:instruction print_newline} {:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction float_max} {:instruction float_add} {:instruction float_inc} {:instruction integer_add} {:instruction integer_flush} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_div} {:instruction float_rot} {:instruction print_newline} {:instruction float_pop} {:instruction integer_min} {:instruction float_mult} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_shove} {:instruction float_tan} {:instruction tagged_466} {:instruction float_max} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_dec} {:instruction print_newline} {:instruction float_rot} {:instruction float_yank} {:instruction integer_yankdup} {:instruction float_cos} {:instruction float_mult} {:instruction in1} {:instruction integer_dec} {:instruction 70.49546374007346} {:instruction float_tan} {:instruction float_dup} {:instruction integer_add} {:instruction integer_rot} {:instruction float_rot} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_cos} {:instruction float_inc} {:instruction in1} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_yank} {:instruction integer_min} {:instruction float_min} {:instruction integer_div} {:instruction integer_max} {:instruction print_float} {:instruction float_inc} {:instruction float_dec})
Best program: (integer_flush integer_pop float_yank float_yankdup float_shove float_sin integer_dec integer_dup_times in2 float_frominteger float_tan float_mult integer_yankdup float_dup_times float_rot integer_mult float_inc integer_dup float_min float_tan integer_min integer_min float_pop tagged_87 print_newline print_integer integer_dup_times integer_inc float_max float_add float_inc integer_add integer_flush integer_yank integer_dec integer_div float_rot print_newline float_pop integer_min float_mult integer_sub float_dup integer_yank float_frominteger integer_shove float_tan tagged_466 float_max integer_add float_dup_items float_mod float_dec print_newline float_rot float_yank integer_yankdup float_cos float_mult in1 integer_dec 70.49546374007346 float_tan float_dup integer_add integer_rot float_rot float_yankdup float_swap float_cos float_inc in1 integer_dup float_dup_times float_yank integer_min float_min integer_div integer_max print_float float_inc float_dec)
Errors: [11.2219 13 63.0 14 7.9797 12 168.9086 13 1.5305 11 91.0 6 32.5791 11 33.0 5 48.0 5 28.2443 14 34.4775 12 19.0 5 101.1408 12 93.0 5 19.0 6 49.0 15 32.0223 10 22.1633 11 46.0234 12 64.0 6 0.153 11 34.9759 12 99.0 5 81.0462 12 43.4096 10]
Total: 1471.8761
Mean: 29.437523
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 6592.190142799988
Median total errors in population: 1850.2084
Error averages by case: (244.67700010000016 11.817 235.5495791000003 11.054 221.81095889999963 12.101 301.7589148999991 10.908 199.83768599999982 11.619 322.54247889999937 11.544 244.52712750000003 12.551 268.4476487999985 11.54 236.42176069999886 11.069 231.1063999999993 10.375 229.28163870000017 12.878 230.80960560000065 10.781 255.24521129999894 11.014 287.05191870000226 11.891 265.3929262000025 11.482 225.4283313999999 11.814 241.510429800002 10.305 248.3163901999984 10.413 242.02622390000047 12.606 287.54927790000175 11.975 245.4321882999979 9.683 234.95184230000044 11.836 306.70619410000114 11.593 248.07438480000252 10.25 251.83202470000072 12.803)
Error minima by case: (0.0068 7 0.1819 7 3.249 8 57.6324 3 0.0156 7 38.1366 2 0.4198 9 0.9578 3 0.965 2 0.2966 1 0.5711 8 1.1322 1 2.5998 2 22.3777 3 5.6112 3 0.733 8 0.8747 2 1.3777 2 1.7269 9 10.7661 3 0.0886 2 0.0727 8 45.5838 2 3.4948 1 0.9506 8)
Average genome size in population (length): 57.141
Average program size in population (points): 58.141
Average percent parens in population: 0.024
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.521
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.754
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.754
Total error diversity:				 0.285
Error (vector) diversity:			 0.297
Behavioral diversity:				 0.325
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2672630
--- Timings ---
Current time: 1529614925537 milliseconds
Total Time:           9.1 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         3.9 seconds, 42.2%
Fitness Testing:      4.2 seconds, 45.9%
Report:               1.0 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 67403.33760000007
Test mean error for best: 33.70167
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 48.8643675386 
Correct output: 1.737259716    | Program output: -94.6354855816
Correct output: -6.5206627607  | Program output: 2.1065919418  
Correct output: 170.3676040222 | Program output: 60.9948587247 
Correct output: -0.0714579309  | Program output: -26.4442032285
Correct output: -183.0408262138 | Program output: -125.4135715114
Correct output: -31.1200721844 | Program output: 16.5071825181 
Correct output: -107.6021835772 | Program output: -107.9749288748
Correct output: -49.9649996534 | Program output: -35.337744951 
Correct output: 29.7033763728  | Program output: 27.3306310752 
Correct output: -33.0184284798 | Program output: -16.3911737774
Correct output: -37.8493019423 | Program output: -90.2220472399
Correct output: 102.5997996851 | Program output: 48.2270543875 
Correct output: -123.3776728769 | Program output: -63.7504181745
Correct output: -106.6112108922 | Program output: -120.9839561898
Correct output: 7.2670253799   | Program output: -75.1057199177
Correct output: 33.4813497193  | Program output: 48.1086044217 
Correct output: 23.6223035091  | Program output: 66.2495582115 
Correct output: -44.5644008389 | Program output: -8.9371461365 
Correct output: -132.1883981194 | Program output: -101.5611434169
Correct output: 1.3060618974   | Program output: 63.9333165998 
Correct output: -33.516842159  | Program output: -6.8895874566 
Correct output: -155.4583976719 | Program output: -89.8311429694
Correct output: 82.5052168972  | Program output: -29.8675284004
Correct output: -41.9505915994 | Program output: 16.676663103  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_cos} {:instruction -32.37274529758207} {:instruction in1} {:instruction integer_div} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_inc})
Best program: (float_sub float_cos -32.37274529758207 in1 integer_div tag_integer_801 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_stackdepth float_tan float_inc)
Errors: [58.6273 9 96.3727 9 8.6273 11 109.3727 11 26.3727 12 57.6273 11 47.6273 11 0.3727 9 14.6273 11 2.3727 8 16.6273 11 52.3727 11 54.3727 12 59.6273 10 14.3727 11 82.3727 11 14.6273 10 42.6273 11 35.6273 11 30.6273 10 62.6273 10 26.6273 11 65.6273 12 112.3727 11 58.6273 13]
Total: 1418.1365000000003
Mean: 28.36273
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 5248.840755399991
Median total errors in population: 1672.5
Error averages by case: (220.5668104999997 11.393 197.7419447999999 11.179 183.30902190000103 12.207 225.89703299999948 7.751 152.22060299999993 11.545 237.00329889999864 8.128 207.10402669999996 12.336 196.04121169999894 8.295 181.5994872999992 7.306 186.54049789999965 7.244 183.06975409999987 12.886 175.40792570000045 7.301 187.45277719999936 7.802 218.1186852000012 8.334 191.89200700000123 8.087 186.0539043999999 12.101 200.62826590000125 6.97 218.6428483999988 7.292 195.66889589999954 12.33 212.6853362000014 8.398 226.51042949999862 6.846 190.55878299999927 11.326 230.3039880000007 7.639 195.6717611000013 6.958 213.6404580999995 12.857)
Error minima by case: (0.0068 8 0.1819 7 3.249 9 75.0 3 0.0715 8 2.0408 2 0.0541 6 0.3727 3 0.965 2 2.3727 1 0.5711 8 1.1322 1 10.5998 2 11.9459 2 11.4429 2 4.2643 8 7.5592 2 5.0541 2 3.5644 9 5.1884 3 0.0886 2 0.0727 8 17.9459 1 3.1868 1 0.9506 9)
Average genome size in population (length): 48.657
Average program size in population (points): 49.657
Average percent parens in population: 0.029
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9695
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.627
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.627
Total error diversity:				 0.123
Error (vector) diversity:			 0.125
Behavioral diversity:				 0.135
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3892405
--- Timings ---
Current time: 1529614928704 milliseconds
Total Time:          12.5 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.3 seconds, 42.1%
Fitness Testing:      5.6 seconds, 45.0%
Report:               1.5 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 68200.12140000002
Test mean error for best: 34.10006
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: -0.1111831754 
Correct output: 1.737259716    | Program output: -62.262740284 
Correct output: -6.5206627607  | Program output: -0.0030671366 
Correct output: 170.3676040222 | Program output: -0.647071103  
Correct output: -0.0714579309  | Program output: -0.0677809626 
Correct output: -183.0408262138 | Program output: -93.0408262138
Correct output: -31.1200721844 | Program output: -0.415653085  
Correct output: -107.6021835772 | Program output: -75.6021835772
Correct output: -49.9649996534 | Program output: -2.9649996534 
Correct output: 29.7033763728  | Program output: -8.60228E-5   
Correct output: -33.0184284798 | Program output: -0.0391234714 
Correct output: -37.8493019423 | Program output: -57.8493019423
Correct output: 102.5997996851 | Program output: -1.3028551947 
Correct output: -123.3776728769 | Program output: -31.3776728769
Correct output: -106.6112108922 | Program output: -88.6112108922
Correct output: 7.2670253799   | Program output: -42.7329746201
Correct output: 33.4813497193  | Program output: -1.8424458253 
Correct output: 23.6223035091  | Program output: -1.9567092017 
Correct output: -44.5644008389 | Program output: -1.0186471026 
Correct output: -132.1883981194 | Program output: -69.1883981194
Correct output: 1.3060618974   | Program output: -1.3102114043 
Correct output: -33.516842159  | Program output: -0.0660550771 
Correct output: -155.4583976719 | Program output: -57.4583976719
Correct output: 82.5052168972  | Program output: -0.2608074336 
Correct output: -41.9505915994 | Program output: -1.9040132589 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction float_sin} {:instruction in1} {:instruction integer_div} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction integer_inc} {:instruction float_tan} {:instruction -48} {:instruction in2} {:instruction float_cos} {:instruction in1} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction float_min} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float} {:instruction integer_dup_times})
Best program: (print_float float_sin in1 integer_div tag_integer_801 float_add float_dec float_div -20 integer_max integer_inc float_tan -48 in2 float_cos in1 integer_flush integer_dup_times integer_dup_items float_min float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float integer_dup_times)
Errors: [9.6517 9 64.0 12 6.5176 9 171.0147 10 0.0037 8 90.0 2 30.7044 11 32.0 3 47.0 2 29.7035 11 32.9793 8 20.0 1 103.9027 12 92.0 3 18.0 3 50.0 11 35.3238 10 25.579 10 43.5458 11 63.0 3 2.6163 8 33.4508 11 98.0 2 82.766 12 40.0466 8]
Total: 1411.8058999999998
Mean: 28.236118
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 5074.110171200002
Median total errors in population: 1653.0
Error averages by case: (212.1130181 11.685 196.4212711000001 11.73 176.50317580000018 12.48 222.13203359999986 6.188 151.5973595999997 11.73 227.89773119999936 5.688 202.7508199000002 12.318 178.6163304 6.318 181.63427709999968 5.244 173.24342510000005 5.313 179.9848432 13.071 166.3095739000002 5.09 173.64501259999977 6.001 223.63970700000039 6.19 168.8843543000002 6.394 186.14029900000008 12.168 185.45391889999985 5.312 204.0896209999997 5.513 194.9241068 12.773 203.02988440000024 6.149 215.7652145999998 5.352 187.32386809999963 11.342 231.21640690000004 5.5 211.70778690000046 4.97 211.59213170000012 12.975)
Error minima by case: (8.5316 9 0.2627 8 4.9163 9 18.3676 3 0.0037 8 1.0408 2 0.0541 6 0.3727 3 0.965 2 2.3727 1 0.4289 8 3.598 1 21.0 2 11.9459 2 14.3727 3 5.267 9 6.2933 2 5.0541 2 9.7289 9 4.1884 3 0.153 2 0.0727 7 17.9459 2 3.5052 1 7.6992 8)
Average genome size in population (length): 42.529
Average program size in population (points): 43.529
Average percent parens in population: 0.030
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.456
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 136
Genome diversity (% unique Plush genomes):	 0.566
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 136
Syntactic diversity (% unique Push programs):	 0.566
Total error diversity:				 0.078
Error (vector) diversity:			 0.08
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4957549
--- Timings ---
Current time: 1529614932329 milliseconds
Total Time:          16.0 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.9 seconds, 42.8%
Fitness Testing:      7.2 seconds, 45.0%
Report:               1.8 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 72291.19960000015
Test mean error for best: 36.14560
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 35.4056932511 
Correct output: 1.737259716    | Program output: -108.0941598691
Correct output: -6.5206627607  | Program output: -11.3520823458
Correct output: 170.3676040222 | Program output: 47.5361844371 
Correct output: -0.0714579309  | Program output: -39.902877516 
Correct output: -183.0408262138 | Program output: -138.8722457989
Correct output: -31.1200721844 | Program output: 3.0485082305  
Correct output: -107.6021835772 | Program output: -121.4336031623
Correct output: -49.9649996534 | Program output: -48.7964192385
Correct output: 29.7033763728  | Program output: 13.8719567877 
Correct output: -33.0184284798 | Program output: -29.8498480649
Correct output: -37.8493019423 | Program output: -103.6807215274
Correct output: 102.5997996851 | Program output: 34.7683801    
Correct output: -123.3776728769 | Program output: -77.209092462 
Correct output: -106.6112108922 | Program output: -134.4426304773
Correct output: 7.2670253799   | Program output: -88.5643942052
Correct output: 33.4813497193  | Program output: 34.6499301342 
Correct output: 23.6223035091  | Program output: 52.7908839239 
Correct output: -44.5644008389 | Program output: -22.395820424 
Correct output: -132.1883981194 | Program output: -115.0198177045
Correct output: 1.3060618974   | Program output: 50.4746423123 
Correct output: -33.516842159  | Program output: -20.3482617441
Correct output: -155.4583976719 | Program output: -103.289817257
Correct output: 82.5052168972  | Program output: -43.3262026879
Correct output: -41.9505915994 | Program output: 3.2179888155  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction float_sin} {:instruction in1} {:instruction -45.83141958510488} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_inc})
Best program: (print_float float_sin in1 -45.83141958510488 tag_integer_801 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_stackdepth float_tan float_inc)
Errors: [45.1686 12 109.8314 11 4.8314 9 122.8314 10 39.8314 11 44.1686 11 34.1686 11 13.8314 11 1.1686 8 15.8314 11 3.1686 10 65.8314 12 67.8314 10 46.1686 11 27.8314 11 95.8314 12 1.1686 10 29.1686 11 22.1686 11 17.1686 10 49.1686 12 13.1686 11 52.1686 10 125.8314 10 45.1686 11]
Total: 1360.5058
Mean: 27.210115
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 5336.563763099999
Median total errors in population: 1635.0
Error averages by case: (211.73847250000009 11.717 216.37248470000029 12.196 184.09660780000002 12.321 246.39507189999995 7.669 162.0391341999997 11.626 234.1484505999994 6.494 207.8813263000001 12.164 189.00915890000013 6.966 187.58671059999963 6.318 183.07699299999987 6.707 189.43369909999993 12.889 183.8152433000002 5.805 196.67492899999954 7.128 232.1498326000003 7.005 180.09235240000024 7.242 205.69604030000033 11.999 191.0114915999998 6.828 205.75089269999964 7.038 202.36782020000004 12.976 210.79285460000008 7.098 215.13995549999987 6.649 195.0398784999997 11.487 238.94521529999972 6.519 226.99045980000037 6.334 216.82768770000044 12.316)
Error minima by case: (8.1364 8 0.2627 7 2.0353 7 4.6401 3 0.0037 5 0.3891 2 0.0541 6 0.3727 3 0.7981 2 2.3727 1 0.4289 8 1.2822 1 16.4567 2 11.9459 2 1.9754 3 0.7496 8 1.1686 2 4.118 2 9.7289 9 3.129 3 0.0563 2 0.0727 7 17.9459 2 1.6401 1 7.3611 8)
Average genome size in population (length): 43.443
Average program size in population (points): 44.443
Average percent parens in population: 0.030
Minimum age in population: 4.0
Maximum age in population: 7.5
Average age in population: 5.955
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 204
Genome diversity (% unique Plush genomes):	 0.559
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 204
Syntactic diversity (% unique Push programs):	 0.559
Total error diversity:				 0.116
Error (vector) diversity:			 0.118
Behavioral diversity:				 0.124
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6048144
--- Timings ---
Current time: 1529614935837 milliseconds
Total Time:          19.7 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.5 seconds, 43.2%
Fitness Testing:      8.8 seconds, 44.7%
Report:               2.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 72291.19960000015
Test mean error for best: 36.14560
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 35.4056932511 
Correct output: 1.737259716    | Program output: -108.0941598691
Correct output: -6.5206627607  | Program output: -11.3520823458
Correct output: 170.3676040222 | Program output: 47.5361844371 
Correct output: -0.0714579309  | Program output: -39.902877516 
Correct output: -183.0408262138 | Program output: -138.8722457989
Correct output: -31.1200721844 | Program output: 3.0485082305  
Correct output: -107.6021835772 | Program output: -121.4336031623
Correct output: -49.9649996534 | Program output: -48.7964192385
Correct output: 29.7033763728  | Program output: 13.8719567877 
Correct output: -33.0184284798 | Program output: -29.8498480649
Correct output: -37.8493019423 | Program output: -103.6807215274
Correct output: 102.5997996851 | Program output: 34.7683801    
Correct output: -123.3776728769 | Program output: -77.209092462 
Correct output: -106.6112108922 | Program output: -134.4426304773
Correct output: 7.2670253799   | Program output: -88.5643942052
Correct output: 33.4813497193  | Program output: 34.6499301342 
Correct output: 23.6223035091  | Program output: 52.7908839239 
Correct output: -44.5644008389 | Program output: -22.395820424 
Correct output: -132.1883981194 | Program output: -115.0198177045
Correct output: 1.3060618974   | Program output: 50.4746423123 
Correct output: -33.516842159  | Program output: -20.3482617441
Correct output: -155.4583976719 | Program output: -103.289817257
Correct output: 82.5052168972  | Program output: -43.3262026879
Correct output: -41.9505915994 | Program output: 3.2179888155  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.83141958510488} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_inc})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.83141958510488 tag_integer_801 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_stackdepth float_tan float_inc)
Errors: [45.1686 12 109.8314 11 4.8314 9 122.8314 10 39.8314 11 44.1686 11 34.1686 11 13.8314 11 1.1686 8 15.8314 11 3.1686 10 65.8314 12 67.8314 10 46.1686 11 27.8314 11 95.8314 12 1.1686 10 29.1686 11 22.1686 11 17.1686 10 49.1686 12 13.1686 11 52.1686 10 125.8314 10 45.1686 11]
Total: 1360.5058
Mean: 27.210115
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 5825.2283664999995
Median total errors in population: 1471.8761
Error averages by case: (211.65183159999978 11.795 246.8297487000014 12.243 193.66339769999888 12.119 293.68190490000103 11.331 185.97476360000033 11.732 249.97031419999865 9.272 212.50740119999944 11.984 209.994231700001 8.86 200.40489319999895 8.899 199.98156250000017 10.856 200.30577509999972 12.377 215.05435480000105 8.67 243.12775799999972 11.171 248.25557159999983 9.137 206.23504680000127 9.564 236.5545973000016 12.665 205.1683788999995 10.52 210.4117611999988 10.971 212.87179169999942 12.549 227.8391396999995 9.393 210.4095965999991 10.143 205.59067319999895 11.799 255.66282319999868 9.245 251.71162700000102 10.735 221.17942210000072 12.16)
Error minima by case: (7.5186 7 0.2627 8 1.6936 7 17.9015 3 2.0E-4 5 1.3891 2 0.0541 6 0.3727 3 1.1686 2 1.3727 1 0.3543 8 1.2822 1 4.9451 2 11.9459 2 9.9589 3 5.267 8 1.1686 2 4.118 2 3.4356 8 2.129 3 0.0563 2 0.0727 7 8.1689 2 15.017 1 6.0494 8)
Average genome size in population (length): 53.99
Average program size in population (points): 54.99
Average percent parens in population: 0.024
Minimum age in population: 5.25
Maximum age in population: 9.125
Average age in population: 7.4001875
Median age in population: 7.4375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 111
Genome diversity (% unique Plush genomes):	 0.675
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 111
Syntactic diversity (% unique Push programs):	 0.675
Total error diversity:				 0.172
Error (vector) diversity:			 0.173
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 7406165
--- Timings ---
Current time: 1529614939284 milliseconds
Total Time:          23.1 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.9 seconds, 43.0%
Fitness Testing:     10.5 seconds, 45.5%
Report:               2.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 72720.51360000017
Test mean error for best: 36.36026
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 34.4056932511 
Correct output: 1.737259716    | Program output: -109.0941598691
Correct output: -6.5206627607  | Program output: -12.3520823458
Correct output: 170.3676040222 | Program output: 46.5361844371 
Correct output: -0.0714579309  | Program output: -40.902877516 
Correct output: -183.0408262138 | Program output: -139.8722457989
Correct output: -31.1200721844 | Program output: 2.0485082305  
Correct output: -107.6021835772 | Program output: -122.4336031623
Correct output: -49.9649996534 | Program output: -49.7964192385
Correct output: 29.7033763728  | Program output: 12.8719567877 
Correct output: -33.0184284798 | Program output: -30.8498480649
Correct output: -37.8493019423 | Program output: -104.6807215274
Correct output: 102.5997996851 | Program output: 33.7683801    
Correct output: -123.3776728769 | Program output: -78.209092462 
Correct output: -106.6112108922 | Program output: -135.4426304773
Correct output: 7.2670253799   | Program output: -89.5643942052
Correct output: 33.4813497193  | Program output: 33.6499301342 
Correct output: 23.6223035091  | Program output: 51.7908839239 
Correct output: -44.5644008389 | Program output: -23.395820424 
Correct output: -132.1883981194 | Program output: -116.0198177045
Correct output: 1.3060618974   | Program output: 49.4746423123 
Correct output: -33.516842159  | Program output: -21.3482617441
Correct output: -155.4583976719 | Program output: -104.289817257
Correct output: 82.5052168972  | Program output: -44.3262026879
Correct output: -41.9505915994 | Program output: 2.2179888155  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.83141958510488} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction integer_dup_items} {:instruction float_min} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float} {:instruction integer_dup_times} {:instruction integer_stackdepth} {:instruction integer_add} {:instruction float_dup_items})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.83141958510488 tag_integer_801 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min integer_dup_items float_min float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float integer_dup_times integer_stackdepth integer_add float_dup_items)
Errors: [44.1686 12 110.8314 11 5.8314 9 123.8314 11 40.8314 10 43.1686 11 33.1686 12 14.8314 11 0.1686 7 16.8314 11 2.1686 9 66.8314 12 68.8314 10 45.1686 11 28.8314 11 96.8314 12 0.1686 9 28.1686 11 21.1686 11 16.1686 10 48.1686 12 12.1686 11 51.1686 10 126.8314 10 44.1686 11]
Total: 1355.5058
Mean: 27.110115
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 4266.808399700011
Median total errors in population: 1418.1365000000003
Error averages by case: (151.1884348999983 10.331 190.79004630000182 10.888 125.31147929999908 10.865 238.53702780000148 11.217 130.01306150000144 10.959 185.8523399999982 8.466 152.62639799999832 11.506 137.1430086000015 7.904 140.40394329999847 8.216 133.57026790000174 9.972 137.19943759999884 11.211 153.79786080000162 7.972 185.44893890000205 11.815 184.61746839999833 8.358 138.3278273000015 8.755 177.91402660000196 11.573 139.50000749999856 10.437 148.4082929999985 11.064 151.1485197999986 11.577 161.05495479999837 8.343 150.25777859999812 10.05 142.717576899999 11.234 191.0242665999981 8.764 203.06750390000204 11.172 162.3649313999987 11.874)
Error minima by case: (1.6856 8 0.2782 5 3.8314 7 16.4712 3 0.0037 5 2.0408 2 1.2527 8 0.1416 3 0.1686 2 1.3727 1 0.3543 8 4.4766 1 6.6426 2 14.7909 2 6.6733 3 1.0932 5 0.1686 2 1.9759 2 3.0018 8 4.8203 3 0.1168 2 0.1441 8 5.2898 2 3.5052 1 8.5778 8)
Average genome size in population (length): 34.923
Average program size in population (points): 35.923
Average percent parens in population: 0.033
Minimum age in population: 6.25
Maximum age in population: 10.9375
Average age in population: 8.72303125
Median age in population: 8.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 228
Genome diversity (% unique Plush genomes):	 0.473
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 228
Syntactic diversity (% unique Push programs):	 0.473
Total error diversity:				 0.139
Error (vector) diversity:			 0.141
Behavioral diversity:				 0.145
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 8281203
--- Timings ---
Current time: 1529614942639 milliseconds
Total Time:          26.4 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.5 seconds, 43.6%
Fitness Testing:     11.9 seconds, 45.0%
Report:               2.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 72720.51360000017
Test mean error for best: 36.36026
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 34.4056932511 
Correct output: 1.737259716    | Program output: -109.0941598691
Correct output: -6.5206627607  | Program output: -12.3520823458
Correct output: 170.3676040222 | Program output: 46.5361844371 
Correct output: -0.0714579309  | Program output: -40.902877516 
Correct output: -183.0408262138 | Program output: -139.8722457989
Correct output: -31.1200721844 | Program output: 2.0485082305  
Correct output: -107.6021835772 | Program output: -122.4336031623
Correct output: -49.9649996534 | Program output: -49.7964192385
Correct output: 29.7033763728  | Program output: 12.8719567877 
Correct output: -33.0184284798 | Program output: -30.8498480649
Correct output: -37.8493019423 | Program output: -104.6807215274
Correct output: 102.5997996851 | Program output: 33.7683801    
Correct output: -123.3776728769 | Program output: -78.209092462 
Correct output: -106.6112108922 | Program output: -135.4426304773
Correct output: 7.2670253799   | Program output: -89.5643942052
Correct output: 33.4813497193  | Program output: 33.6499301342 
Correct output: 23.6223035091  | Program output: 51.7908839239 
Correct output: -44.5644008389 | Program output: -23.395820424 
Correct output: -132.1883981194 | Program output: -116.0198177045
Correct output: 1.3060618974   | Program output: 49.4746423123 
Correct output: -33.516842159  | Program output: -21.3482617441
Correct output: -155.4583976719 | Program output: -104.289817257
Correct output: 82.5052168972  | Program output: -44.3262026879
Correct output: -41.9505915994 | Program output: 2.2179888155  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.83141958510488} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction float_min} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float} {:instruction integer_dup_times})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.83141958510488 tag_integer_801 float_add float_dec float_stackdepth integer_flush integer_dup_times integer_dup_items float_min float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float integer_dup_times)
Errors: [44.1686 12 110.8314 11 5.8314 9 123.8314 11 40.8314 10 43.1686 11 33.1686 12 14.8314 11 0.1686 7 16.8314 11 2.1686 9 66.8314 12 68.8314 10 45.1686 11 28.8314 11 96.8314 12 0.1686 9 28.1686 11 21.1686 11 16.1686 10 48.1686 12 12.1686 11 51.1686 10 126.8314 10 44.1686 11]
Total: 1355.5058
Mean: 27.110115
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 3589.8023085000086
Median total errors in population: 1411.8058999999998
Error averages by case: (112.68671110000022 10.357 161.0249331999999 11.51 96.3060567000003 9.73 228.92541929999945 10.639 99.60732390000038 9.815 164.67723470000013 6.174 120.4216890000002 11.22 116.96630320000006 6.592 120.15942069999996 5.494 111.50579610000038 10.406 111.83686380000061 10.464 122.66506190000003 5.726 171.9104272000007 11.292 163.77523240000014 6.686 112.3636651000001 6.761 147.92976299999998 11.445 114.49940159999944 10.26 117.20304689999983 10.657 123.97059210000063 11.156 138.84293860000014 6.479 109.46131099999991 9.689 115.81827530000069 11.009 170.3503259000001 6.078 175.85005530000052 10.862 130.06546050000065 10.478)
Error minima by case: (7.5186 7 0.4006 7 3.2293 7 16.3676 3 0.0037 5 3.0408 2 1.2527 7 0.2575 3 0.1686 2 1.3727 1 0.3543 8 0.1371 1 21.0 2 29.2496 2 2.2545 3 4.2643 9 0.1686 2 16.9062 2 2.267 8 6.1884 3 0.3274 2 0.1441 8 9.1689 2 3.5052 1 4.2947 7)
Average genome size in population (length): 33.492
Average program size in population (points): 34.492
Average percent parens in population: 0.032
Minimum age in population: 7.96875
Maximum age in population: 12.1875
Average age in population: 10.23484375
Median age in population: 10.28125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 150
Genome diversity (% unique Plush genomes):	 0.461
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 150
Syntactic diversity (% unique Push programs):	 0.461
Total error diversity:				 0.142
Error (vector) diversity:			 0.143
Behavioral diversity:				 0.144
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 9118503
--- Timings ---
Current time: 1529614945940 milliseconds
Total Time:          29.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.9 seconds, 43.5%
Fitness Testing:     13.4 seconds, 45.3%
Report:               3.2 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 71007.13620000021
Test mean error for best: 35.50357
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 36.4252113355 
Correct output: 1.737259716    | Program output: -107.0746417847
Correct output: -6.5206627607  | Program output: -10.3325642613
Correct output: 170.3676040222 | Program output: 48.5557025216 
Correct output: -0.0714579309  | Program output: -38.8833594316
Correct output: -183.0408262138 | Program output: -137.8527277145
Correct output: -31.1200721844 | Program output: 4.068026315   
Correct output: -107.6021835772 | Program output: -120.4140850779
Correct output: -49.9649996534 | Program output: -47.7769011541
Correct output: 29.7033763728  | Program output: 14.8914748721 
Correct output: -33.0184284798 | Program output: -28.8303299805
Correct output: -37.8493019423 | Program output: -102.661203443
Correct output: 102.5997996851 | Program output: 35.7878981844 
Correct output: -123.3776728769 | Program output: -76.1895743776
Correct output: -106.6112108922 | Program output: -133.4231123929
Correct output: 7.2670253799   | Program output: -87.5448761208
Correct output: 33.4813497193  | Program output: 35.6694482186 
Correct output: 23.6223035091  | Program output: 53.8104020084 
Correct output: -44.5644008389 | Program output: -21.3763023396
Correct output: -132.1883981194 | Program output: -114.00029962 
Correct output: 1.3060618974   | Program output: 51.4941603967 
Correct output: -33.516842159  | Program output: -19.3287436597
Correct output: -155.4583976719 | Program output: -102.2702991725
Correct output: 82.5052168972  | Program output: -42.3066846035
Correct output: -41.9505915994 | Program output: 4.2375068999  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -44.81190150067571} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_inc})
Best program: (integer_yankdup float_dup_times float_sin in1 -44.81190150067571 tag_integer_801 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_stackdepth float_tan float_inc)
Errors: [46.1881 10 108.8119 11 3.8119 9 121.8119 11 38.8119 10 45.1881 10 35.1881 11 12.8119 9 2.1881 9 14.8119 9 4.1881 11 64.8119 10 66.8119 11 47.1881 11 26.8119 9 94.8119 12 2.1881 9 30.1881 9 23.1881 10 18.1881 11 50.1881 9 14.1881 9 53.1881 10 124.8119 11 46.1881 9]
Total: 1346.5643000000002
Mean: 26.931286
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 3579.596849300015
Median total errors in population: 1360.5058
Error averages by case: (124.48695520000093 11.6 179.3061494999984 11.316 96.8355769999999 9.517 212.58409219999777 10.622 117.68657279999923 10.815 146.60173340000134 9.759 120.21303430000098 11.302 111.67684969999918 9.896 102.9195753000005 7.571 108.40536959999952 10.834 101.45396170000069 10.659 140.7325400999987 10.14 159.15942329999862 10.603 145.1839275000013 9.953 118.02006959999913 9.931 166.49919789999848 11.907 100.49734150000037 10.321 117.35106320000084 10.986 116.42548760000099 11.191 121.04233360000102 9.264 125.79951930000102 11.181 108.17290890000076 11.181 152.15956490000133 9.086 195.64301749999814 10.325 129.82358370000134 10.957)
Error minima by case: (1.0381 7 0.4006 7 0.8079 7 22.8314 3 0.0037 5 2.0408 2 6.8092 8 0.3727 3 0.1686 2 2.3727 1 0.0433 8 7.9821 1 21.0 2 1.6628 2 7.619 3 4.2643 9 0.1686 2 11.1061 2 1.2272 8 5.1884 3 0.2862 2 8.1797 8 4.3372 2 16.6867 1 2.6628 7)
Average genome size in population (length): 27.354
Average program size in population (points): 28.354
Average percent parens in population: 0.038
Minimum age in population: 9.546875
Maximum age in population: 13.734375
Average age in population: 11.73984375
Median age in population: 11.78125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 225
Genome diversity (% unique Plush genomes):	 0.41
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 225
Syntactic diversity (% unique Push programs):	 0.41
Total error diversity:				 0.103
Error (vector) diversity:			 0.104
Behavioral diversity:				 0.105
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 9802353
--- Timings ---
Current time: 1529614949090 milliseconds
Total Time:          32.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        14.3 seconds, 43.5%
Fitness Testing:     14.9 seconds, 45.2%
Report:               3.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 71007.13620000021
Test mean error for best: 35.50357
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 36.4252113355 
Correct output: 1.737259716    | Program output: -107.0746417847
Correct output: -6.5206627607  | Program output: -10.3325642613
Correct output: 170.3676040222 | Program output: 48.5557025216 
Correct output: -0.0714579309  | Program output: -38.8833594316
Correct output: -183.0408262138 | Program output: -137.8527277145
Correct output: -31.1200721844 | Program output: 4.068026315   
Correct output: -107.6021835772 | Program output: -120.4140850779
Correct output: -49.9649996534 | Program output: -47.7769011541
Correct output: 29.7033763728  | Program output: 14.8914748721 
Correct output: -33.0184284798 | Program output: -28.8303299805
Correct output: -37.8493019423 | Program output: -102.661203443
Correct output: 102.5997996851 | Program output: 35.7878981844 
Correct output: -123.3776728769 | Program output: -76.1895743776
Correct output: -106.6112108922 | Program output: -133.4231123929
Correct output: 7.2670253799   | Program output: -87.5448761208
Correct output: 33.4813497193  | Program output: 35.6694482186 
Correct output: 23.6223035091  | Program output: 53.8104020084 
Correct output: -44.5644008389 | Program output: -21.3763023396
Correct output: -132.1883981194 | Program output: -114.00029962 
Correct output: 1.3060618974   | Program output: 51.4941603967 
Correct output: -33.516842159  | Program output: -19.3287436597
Correct output: -155.4583976719 | Program output: -102.2702991725
Correct output: 82.5052168972  | Program output: -42.3066846035
Correct output: -41.9505915994 | Program output: 4.2375068999  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -44.81190150067571} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_inc})
Best program: (integer_yankdup float_dup_times float_sin in1 -44.81190150067571 tag_integer_801 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_stackdepth float_tan float_inc)
Errors: [46.1881 10 108.8119 11 3.8119 9 121.8119 11 38.8119 10 45.1881 10 35.1881 11 12.8119 9 2.1881 9 14.8119 9 4.1881 11 64.8119 10 66.8119 11 47.1881 11 26.8119 9 94.8119 12 2.1881 9 30.1881 9 23.1881 10 18.1881 11 50.1881 9 14.1881 9 53.1881 10 124.8119 11 46.1881 9]
Total: 1346.5643000000002
Mean: 26.931286
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2587.6379577000057
Median total errors in population: 1360.5058
Error averages by case: (93.26224460000007 12.054 152.59000009999806 11.124 55.127043100000314 9.388 169.8752960999978 10.594 85.87556550000022 10.846 96.79928090000034 11.188 81.3834448999997 11.491 66.66748710000068 11.183 52.48722189999982 8.096 65.99351820000074 11.135 54.559260199999684 10.056 110.90582069999914 12.008 116.35829029999896 10.201 96.66770620000027 11.212 78.64272510000042 11.189 139.8486441999983 12.106 54.2116815999998 9.913 79.6000042999997 11.092 71.32456899999924 11.187 70.56203229999927 10.311 97.06201010000022 11.947 63.08905629999926 11.153 103.20753540000057 10.267 168.93152569999788 10.23 91.44399390000008 11.191)
Error minima by case: (0.6628 7 0.4006 7 2.3953 9 16.3676 3 0.0564 8 2.6628 2 7.747 8 12.8119 3 0.1686 2 2.9595 1 1.1686 6 7.9821 1 21.0 2 0.6628 2 17.0 3 6.3564 9 0.1686 2 17.6628 2 1.2272 8 6.1884 3 0.3279 2 8.1797 9 4.3372 2 77.4948 1 0.6628 9)
Average genome size in population (length): 24.184
Average program size in population (points): 25.184
Average percent parens in population: 0.041
Minimum age in population: 10.59375
Maximum age in population: 14.9296875
Average age in population: 13.189546875
Median age in population: 13.267578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 209
Genome diversity (% unique Plush genomes):	 0.363
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 209
Syntactic diversity (% unique Push programs):	 0.363
Total error diversity:				 0.048
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 10406953
--- Timings ---
Current time: 1529614952236 milliseconds
Total Time:          36.0 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.8 seconds, 43.8%
Fitness Testing:     16.2 seconds, 45.0%
Report:               3.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 71007.13620000021
Test mean error for best: 35.50357
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 36.4252113355 
Correct output: 1.737259716    | Program output: -107.0746417847
Correct output: -6.5206627607  | Program output: -10.3325642613
Correct output: 170.3676040222 | Program output: 48.5557025216 
Correct output: -0.0714579309  | Program output: -38.8833594316
Correct output: -183.0408262138 | Program output: -137.8527277145
Correct output: -31.1200721844 | Program output: 4.068026315   
Correct output: -107.6021835772 | Program output: -120.4140850779
Correct output: -49.9649996534 | Program output: -47.7769011541
Correct output: 29.7033763728  | Program output: 14.8914748721 
Correct output: -33.0184284798 | Program output: -28.8303299805
Correct output: -37.8493019423 | Program output: -102.661203443
Correct output: 102.5997996851 | Program output: 35.7878981844 
Correct output: -123.3776728769 | Program output: -76.1895743776
Correct output: -106.6112108922 | Program output: -133.4231123929
Correct output: 7.2670253799   | Program output: -87.5448761208
Correct output: 33.4813497193  | Program output: 35.6694482186 
Correct output: 23.6223035091  | Program output: 53.8104020084 
Correct output: -44.5644008389 | Program output: -21.3763023396
Correct output: -132.1883981194 | Program output: -114.00029962 
Correct output: 1.3060618974   | Program output: 51.4941603967 
Correct output: -33.516842159  | Program output: -19.3287436597
Correct output: -155.4583976719 | Program output: -102.2702991725
Correct output: 82.5052168972  | Program output: -42.3066846035
Correct output: -41.9505915994 | Program output: 4.2375068999  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -44.81190150067571} {:instruction tag_integer_911} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_inc})
Best program: (integer_yankdup float_dup_times float_sin in1 -44.81190150067571 tag_integer_911 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_stackdepth float_tan float_inc)
Errors: [46.1881 10 108.8119 11 3.8119 9 121.8119 11 38.8119 10 45.1881 10 35.1881 11 12.8119 9 2.1881 9 14.8119 9 4.1881 11 64.8119 10 66.8119 11 47.1881 11 26.8119 9 94.8119 12 2.1881 9 30.1881 9 23.1881 10 18.1881 11 50.1881 9 14.1881 9 53.1881 10 124.8119 11 46.1881 9]
Total: 1346.5643000000002
Mean: 26.931286
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 3646.4072933000098
Median total errors in population: 1355.5058
Error averages by case: (135.50117410000138 12.036 195.06123859999823 11.208 94.77215279999935 9.572 211.43505869999797 11.277 131.1998547999986 10.527 139.19164360000147 11.352 116.29902780000106 11.997 112.03291059999906 11.256 97.11982370000061 8.116 105.57962959999928 11.168 99.1708029000007 9.844 156.3214663999984 12.045 160.9893518999984 10.426 139.0672100000014 11.411 124.01459529999887 11.271 182.9056458999983 12.142 98.63622240000065 9.648 122.5147929000011 11.136 112.30403250000097 11.233 114.34302840000112 10.559 139.04681660000136 11.913 103.60725930000073 11.17 145.28719500000142 10.474 210.4920676999981 10.493 126.01229180000131 11.228)
Error minima by case: (2.6628 8 0.4291 7 3.7465 9 29.4638 3 0.0715 8 3.6628 2 3.9839 9 12.8119 3 0.1686 2 3.9595 1 0.1564 6 2.7454 1 12.7684 2 1.6628 2 17.0 3 6.2782 9 0.1686 2 18.6628 2 2.2272 8 14.1564 3 0.2858 2 1.5871 9 3.3372 2 80.0 1 2.6628 7)
Average genome size in population (length): 27.685
Average program size in population (points): 28.685
Average percent parens in population: 0.036
Minimum age in population: 12.265625
Maximum age in population: 16.599609375
Average age in population: 14.6992890625
Median age in population: 14.7158203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 156
Genome diversity (% unique Plush genomes):	 0.44
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 156
Syntactic diversity (% unique Push programs):	 0.44
Total error diversity:				 0.063
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 11099078
--- Timings ---
Current time: 1529614955334 milliseconds
Total Time:          39.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.1 seconds, 43.6%
Fitness Testing:     17.7 seconds, 45.2%
Report:               4.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 71843.24560000023
Test mean error for best: 35.92162
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 34.4252113355 
Correct output: 1.737259716    | Program output: -109.0746417847
Correct output: -6.5206627607  | Program output: -12.3325642613
Correct output: 170.3676040222 | Program output: 46.5557025216 
Correct output: -0.0714579309  | Program output: -40.8833594316
Correct output: -183.0408262138 | Program output: -139.8527277145
Correct output: -31.1200721844 | Program output: 2.068026315   
Correct output: -107.6021835772 | Program output: -122.4140850779
Correct output: -49.9649996534 | Program output: -49.7769011541
Correct output: 29.7033763728  | Program output: 12.8914748721 
Correct output: -33.0184284798 | Program output: -30.8303299805
Correct output: -37.8493019423 | Program output: -104.661203443
Correct output: 102.5997996851 | Program output: 33.7878981844 
Correct output: -123.3776728769 | Program output: -78.1895743776
Correct output: -106.6112108922 | Program output: -135.4231123929
Correct output: 7.2670253799   | Program output: -89.5448761208
Correct output: 33.4813497193  | Program output: 33.6694482186 
Correct output: 23.6223035091  | Program output: 51.8104020084 
Correct output: -44.5644008389 | Program output: -23.3763023396
Correct output: -132.1883981194 | Program output: -116.00029962 
Correct output: 1.3060618974   | Program output: 49.4941603967 
Correct output: -33.516842159  | Program output: -21.3287436597
Correct output: -155.4583976719 | Program output: -104.2702991725
Correct output: 82.5052168972  | Program output: -44.3066846035
Correct output: -41.9505915994 | Program output: 2.2375068999  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -44.81190150067571} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction integer_flush} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float} {:instruction integer_dup_times} {:instruction integer_stackdepth} {:instruction integer_add} {:instruction float_dup_items})
Best program: (integer_yankdup float_dup_times float_sin in1 -44.81190150067571 tag_integer_801 float_add float_dec integer_flush -20 integer_max in2 integer_rot integer_mult integer_max float_mult integer_dup integer_yankdup float_dec float_mult integer_dup integer_yankdup float_dec float_mult print_float integer_dup_times integer_stackdepth integer_add float_dup_items)
Errors: [44.1881 10 110.8119 12 5.8119 9 123.8119 11 40.8119 9 43.1881 10 33.1881 11 14.8119 9 0.1881 8 16.8119 9 2.1881 10 66.8119 10 68.8119 11 45.1881 11 28.8119 9 96.8119 13 0.1881 8 28.1881 10 21.1881 10 16.1881 11 48.1881 10 12.1881 9 51.1881 10 126.8119 12 44.1881 10]
Total: 1342.5643000000002
Mean: 26.851286
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 3234.7311141000155
Median total errors in population: 1355.5058
Error averages by case: (118.47588530000073 11.544 178.5340277999986 11.107 79.19869640000034 9.473 194.95393979999835 11.223 113.62208519999928 10.472 124.37189160000098 10.993 102.16779260000018 11.649 95.58517659999998 10.716 80.85762149999981 8.554 89.1028233999999 10.628 82.07491369999984 10.05 139.26643009999887 11.47 143.96112759999886 10.386 123.74928110000099 11.268 107.58361659999957 10.552 165.71162889999863 12.066 81.64705199999977 9.589 105.56868710000033 10.643 96.56466960000003 10.832 98.67709850000007 10.607 122.14704300000082 11.195 87.88155970000001 10.665 130.396398700001 10.193 193.46070849999842 10.54 111.98795880000058 10.768)
Error minima by case: (0.3762 7 0.4 5 2.8119 8 23.8314 3 0.0079 7 0.6238 2 6.7997 8 11.8119 3 0.1686 1 4.9595 1 0.1686 7 7.9626 1 21.0 2 1.3762 2 17.0 3 6.3538 8 0.1686 2 6.9056 2 1.2475 8 13.1686 3 0.9706 2 5.7202 6 7.3762 2 68.0957 1 0.3762 9)
Average genome size in population (length): 27.542
Average program size in population (points): 28.542
Average percent parens in population: 0.036
Minimum age in population: 13.484375
Maximum age in population: 18.0673828125
Average age in population: 16.18575390625
Median age in population: 16.27099609375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 119
Genome diversity (% unique Plush genomes):	 0.472
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 119
Syntactic diversity (% unique Push programs):	 0.472
Total error diversity:				 0.068
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 11787628
--- Timings ---
Current time: 1529614958766 milliseconds
Total Time:          42.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.5 seconds, 43.4%
Fitness Testing:     19.3 seconds, 45.4%
Report:               4.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 71843.24560000023
Test mean error for best: 35.92162
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 34.4252113355 
Correct output: 1.737259716    | Program output: -109.0746417847
Correct output: -6.5206627607  | Program output: -12.3325642613
Correct output: 170.3676040222 | Program output: 46.5557025216 
Correct output: -0.0714579309  | Program output: -40.8833594316
Correct output: -183.0408262138 | Program output: -139.8527277145
Correct output: -31.1200721844 | Program output: 2.068026315   
Correct output: -107.6021835772 | Program output: -122.4140850779
Correct output: -49.9649996534 | Program output: -49.7769011541
Correct output: 29.7033763728  | Program output: 12.8914748721 
Correct output: -33.0184284798 | Program output: -30.8303299805
Correct output: -37.8493019423 | Program output: -104.661203443
Correct output: 102.5997996851 | Program output: 33.7878981844 
Correct output: -123.3776728769 | Program output: -78.1895743776
Correct output: -106.6112108922 | Program output: -135.4231123929
Correct output: 7.2670253799   | Program output: -89.5448761208
Correct output: 33.4813497193  | Program output: 33.6694482186 
Correct output: 23.6223035091  | Program output: 51.8104020084 
Correct output: -44.5644008389 | Program output: -23.3763023396
Correct output: -132.1883981194 | Program output: -116.00029962 
Correct output: 1.3060618974   | Program output: 49.4941603967 
Correct output: -33.516842159  | Program output: -21.3287436597
Correct output: -155.4583976719 | Program output: -104.2702991725
Correct output: 82.5052168972  | Program output: -44.3066846035
Correct output: -41.9505915994 | Program output: 2.2375068999  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -44.81190150067571} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction integer_flush} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float} {:instruction integer_dup_times} {:instruction integer_stackdepth} {:instruction integer_add} {:instruction float_dup_items})
Best program: (integer_yankdup float_dup_times float_sin in1 -44.81190150067571 tag_integer_801 float_add float_dec integer_flush -20 integer_max in2 integer_rot integer_mult integer_max float_mult integer_dup integer_yankdup float_dec float_mult integer_dup integer_yankdup float_dec float_mult print_float integer_dup_times integer_stackdepth integer_add float_dup_items)
Errors: [44.1881 10 110.8119 12 5.8119 9 123.8119 11 40.8119 9 43.1881 10 33.1881 11 14.8119 9 0.1881 8 16.8119 9 2.1881 10 66.8119 10 68.8119 11 45.1881 11 28.8119 9 96.8119 13 0.1881 8 28.1881 10 21.1881 10 16.1881 11 48.1881 10 12.1881 9 51.1881 10 126.8119 12 44.1881 10]
Total: 1342.5643000000002
Mean: 26.851286
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2470.032773899993
Median total errors in population: 1346.5643000000002
Error averages by case: (89.00160529999962 10.491 146.4827794000002 11.178 50.08995090000045 9.364 164.79022210000014 11.11 81.5645129000004 10.287 93.9933215999997 10.36 78.12609769999963 11.185 62.015678700000464 9.534 48.98496789999962 9.225 61.13208840000045 9.531 50.733695799999566 10.998 106.5669465000003 10.376 111.78163440000026 10.977 93.60112139999967 11.163 74.41482260000039 9.454 133.75304930000019 12.12 50.46975589999963 9.346 75.40526229999963 9.545 68.02373239999953 10.355 67.47474329999955 10.993 92.62172169999964 9.614 59.59102409999957 9.541 100.3204745999997 10.153 163.14574310000017 11.032 88.42282159999962 9.593)
Error minima by case: (6.4943 7 0.3702 5 2.1697 8 76.0 3 0.0041 6 42.1686 2 5.4028 9 11.1697 3 0.1686 1 2.9204 1 1.1686 9 7.9626 1 8.2756 2 32.0015 2 16.0 3 6.267 7 0.1686 2 21.7709 2 0.2475 8 15.1686 3 0.3061 2 7.7996 6 50.1686 2 11.8189 1 1.441 6)
Average genome size in population (length): 24.419
Average program size in population (points): 25.419
Average percent parens in population: 0.040
Minimum age in population: 14.484375
Maximum age in population: 19.494140625
Average age in population: 17.4303427734375
Median age in population: 17.490234375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 315
Genome diversity (% unique Plush genomes):	 0.366
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 315
Syntactic diversity (% unique Push programs):	 0.366
Total error diversity:				 0.057
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 12398103
--- Timings ---
Current time: 1529614961933 milliseconds
Total Time:          45.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.9 seconds, 43.5%
Fitness Testing:     20.7 seconds, 45.3%
Report:               5.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 71843.24560000023
Test mean error for best: 35.92162
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 34.4252113355 
Correct output: 1.737259716    | Program output: -109.0746417847
Correct output: -6.5206627607  | Program output: -12.3325642613
Correct output: 170.3676040222 | Program output: 46.5557025216 
Correct output: -0.0714579309  | Program output: -40.8833594316
Correct output: -183.0408262138 | Program output: -139.8527277145
Correct output: -31.1200721844 | Program output: 2.068026315   
Correct output: -107.6021835772 | Program output: -122.4140850779
Correct output: -49.9649996534 | Program output: -49.7769011541
Correct output: 29.7033763728  | Program output: 12.8914748721 
Correct output: -33.0184284798 | Program output: -30.8303299805
Correct output: -37.8493019423 | Program output: -104.661203443
Correct output: 102.5997996851 | Program output: 33.7878981844 
Correct output: -123.3776728769 | Program output: -78.1895743776
Correct output: -106.6112108922 | Program output: -135.4231123929
Correct output: 7.2670253799   | Program output: -89.5448761208
Correct output: 33.4813497193  | Program output: 33.6694482186 
Correct output: 23.6223035091  | Program output: 51.8104020084 
Correct output: -44.5644008389 | Program output: -23.3763023396
Correct output: -132.1883981194 | Program output: -116.00029962 
Correct output: 1.3060618974   | Program output: 49.4941603967 
Correct output: -33.516842159  | Program output: -21.3287436597
Correct output: -155.4583976719 | Program output: -104.2702991725
Correct output: 82.5052168972  | Program output: -44.3066846035
Correct output: -41.9505915994 | Program output: 2.2375068999  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -44.81190150067571} {:instruction integer_mod} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction tag_integer_769} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_inc})
Best program: (integer_yankdup float_dup_times float_sin in1 -44.81190150067571 integer_mod float_add float_dec float_div tag_integer_769 float_add float_dec float_div float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_stackdepth float_tan float_inc)
Errors: [44.1881 10 110.8119 12 5.8119 9 123.8119 11 40.8119 9 43.1881 10 33.1881 11 14.8119 9 0.1881 8 16.8119 9 2.1881 10 66.8119 10 68.8119 11 45.1881 11 28.8119 9 96.8119 13 0.1881 8 28.1881 10 21.1881 10 16.1881 11 48.1881 10 12.1881 9 51.1881 10 126.8119 12 44.1881 10]
Total: 1342.5643000000002
Mean: 26.851286
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2292.177063499989
Median total errors in population: 1346.5643000000002
Error averages by case: (82.2903260999995 10.203 139.67452090000046 11.115 42.5223369000003 9.263 157.6005456000005 11.169 75.51269470000045 10.096 86.54955519999952 10.216 71.30781359999955 11.124 54.426287900000425 9.278 42.4899347999997 9.253 53.79496700000039 9.317 43.78883849999971 11.109 99.3126508000005 10.156 104.21743090000047 11.192 86.4620868999995 11.205 67.19374180000045 9.29 126.75957350000046 12.088 43.05619669999971 9.238 68.42805929999957 9.34 61.04445329999956 10.246 60.07118969999957 11.101 85.9504610999995 9.304 52.54004329999961 9.245 93.08866019999952 10.216 157.13424020000053 11.186 81.69545459999951 9.315)
Error minima by case: (0.3762 8 0.3702 5 2.8119 8 74.2562 3 0.005 6 0.3762 2 9.6238 8 11.8119 3 0.1881 2 0.9204 1 2.1881 8 6.9626 1 22.0 2 1.3762 2 17.0 3 6.267 8 0.1881 2 14.6238 2 0.2475 9 16.1881 3 0.3061 2 6.1406 6 3.2703 2 80.0 1 0.3762 7)
Average genome size in population (length): 23.676
Average program size in population (points): 24.676
Average percent parens in population: 0.041
Minimum age in population: 15.484375
Maximum age in population: 20.838623046875
Average age in population: 18.82321850585938
Median age in population: 18.8638916015625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 310
Genome diversity (% unique Plush genomes):	 0.364
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 310
Syntactic diversity (% unique Push programs):	 0.364
Total error diversity:				 0.04
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 12990003
--- Timings ---
Current time: 1529614965020 milliseconds
Total Time:          48.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.2 seconds, 43.4%
Fitness Testing:     22.1 seconds, 45.3%
Report:               5.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 71214.86340000054
Test mean error for best: 35.60743
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 35.2640604292 
Correct output: 1.737259716    | Program output: -108.235792691
Correct output: -6.5206627607  | Program output: -11.4937151677
Correct output: 170.3676040222 | Program output: 47.3945516152 
Correct output: -0.0714579309  | Program output: -40.044510338 
Correct output: -183.0408262138 | Program output: -139.0138786209
Correct output: -31.1200721844 | Program output: 2.9068754086  
Correct output: -107.6021835772 | Program output: -121.5752359842
Correct output: -49.9649996534 | Program output: -48.9380520604
Correct output: 29.7033763728  | Program output: 13.7303239658 
Correct output: -33.0184284798 | Program output: -29.9914808868
Correct output: -37.8493019423 | Program output: -103.8223543493
Correct output: 102.5997996851 | Program output: 34.6267472781 
Correct output: -123.3776728769 | Program output: -77.3507252839
Correct output: -106.6112108922 | Program output: -134.5842632993
Correct output: 7.2670253799   | Program output: -88.7060270271
Correct output: 33.4813497193  | Program output: 34.5082973123 
Correct output: 23.6223035091  | Program output: 52.649251102  
Correct output: -44.5644008389 | Program output: -22.5374532459
Correct output: -132.1883981194 | Program output: -115.1614505264
Correct output: 1.3060618974   | Program output: 50.3330094904 
Correct output: -33.516842159  | Program output: -20.489894566 
Correct output: -155.4583976719 | Program output: -103.4314500789
Correct output: 82.5052168972  | Program output: -43.4678355098
Correct output: -41.9505915994 | Program output: 3.0763559936  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_inc})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_stackdepth float_tan float_inc)
Errors: [45.0269 11 109.9731 9 4.9731 10 122.9731 10 39.9731 7 44.0269 9 34.0269 12 13.9731 10 1.0269 9 15.9731 8 3.0269 10 65.9731 9 67.9731 11 46.0269 9 27.9731 10 95.9731 11 1.0269 8 29.0269 10 22.0269 9 17.0269 10 49.0269 8 13.0269 10 52.0269 9 125.9731 13 45.0269 11]
Total: 1336.0807
Mean: 26.721615
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 3398.9770492999883
Median total errors in population: 1346.5643000000002
Error averages by case: (125.70866779999952 10.379 181.2819279000005 11.412 87.6359046000004 9.504 198.51918220000044 11.303 118.3954402000005 10.074 132.50434609999954 10.476 112.93764709999958 11.252 102.27861210000039 9.605 87.30250439999959 9.297 97.74494780000043 9.521 89.47174579999958 11.041 143.55533560000046 10.358 147.77065250000044 11.337 131.7897510999995 11.346 114.27141790000049 9.59 169.07337910000047 12.322 89.06369159999957 9.228 112.94533809999962 9.785 105.74410719999953 10.472 107.03718969999956 11.307 129.00386209999954 9.682 97.24793199999958 9.492 138.59384709999955 10.484 195.6634135000005 11.512 122.8412057999995 9.816)
Error minima by case: (1.3762 9 0.0348 5 1.5477 8 17.3676 3 0.005 6 0.3762 2 9.6238 9 11.8119 3 0.1881 2 13.8119 1 1.1881 8 7.9626 1 22.0 2 2.3762 3 16.9074 3 5.878 7 0.1881 2 14.6238 2 0.2475 9 5.1884 3 0.3061 2 11.1881 6 8.3762 2 69.4583 1 1.3762 7)
Average genome size in population (length): 25.892
Average program size in population (points): 26.892
Average percent parens in population: 0.039
Minimum age in population: 17.223876953125
Maximum age in population: 22.347900390625
Average age in population: 20.22894860839844
Median age in population: 20.281494140625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 165
Genome diversity (% unique Plush genomes):	 0.476
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 165
Syntactic diversity (% unique Push programs):	 0.476
Total error diversity:				 0.059
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 13637303
--- Timings ---
Current time: 1529614968386 milliseconds
Total Time:          52.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.7 seconds, 43.5%
Fitness Testing:     23.5 seconds, 45.1%
Report:               5.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 71214.86340000054
Test mean error for best: 35.60743
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 35.2640604292 
Correct output: 1.737259716    | Program output: -108.235792691
Correct output: -6.5206627607  | Program output: -11.4937151677
Correct output: 170.3676040222 | Program output: 47.3945516152 
Correct output: -0.0714579309  | Program output: -40.044510338 
Correct output: -183.0408262138 | Program output: -139.0138786209
Correct output: -31.1200721844 | Program output: 2.9068754086  
Correct output: -107.6021835772 | Program output: -121.5752359842
Correct output: -49.9649996534 | Program output: -48.9380520604
Correct output: 29.7033763728  | Program output: 13.7303239658 
Correct output: -33.0184284798 | Program output: -29.9914808868
Correct output: -37.8493019423 | Program output: -103.8223543493
Correct output: 102.5997996851 | Program output: 34.6267472781 
Correct output: -123.3776728769 | Program output: -77.3507252839
Correct output: -106.6112108922 | Program output: -134.5842632993
Correct output: 7.2670253799   | Program output: -88.7060270271
Correct output: 33.4813497193  | Program output: 34.5082973123 
Correct output: 23.6223035091  | Program output: 52.649251102  
Correct output: -44.5644008389 | Program output: -22.5374532459
Correct output: -132.1883981194 | Program output: -115.1614505264
Correct output: 1.3060618974   | Program output: 50.3330094904 
Correct output: -33.516842159  | Program output: -20.489894566 
Correct output: -155.4583976719 | Program output: -103.4314500789
Correct output: 82.5052168972  | Program output: -43.4678355098
Correct output: -41.9505915994 | Program output: 3.0763559936  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction print_float} {:instruction float_dec} {:instruction integer_max} {:instruction float_tan} {:instruction float_inc})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_div -20 integer_max in2 integer_rot integer_mult float_min float_stackdepth float_dup float_shove print_float float_dec integer_max float_tan float_inc)
Errors: [45.0269 11 109.9731 9 4.9731 10 122.9731 10 39.9731 7 44.0269 9 34.0269 12 13.9731 10 1.0269 9 15.9731 8 3.0269 10 65.9731 9 67.9731 11 46.0269 9 27.9731 10 95.9731 11 1.0269 8 29.0269 10 22.0269 9 17.0269 10 49.0269 8 13.0269 10 52.0269 9 125.9731 13 45.0269 11]
Total: 1336.0807
Mean: 26.721615
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 3169.179416499991
Median total errors in population: 1342.5643000000002
Error averages by case: (118.96104039999952 10.296 177.9507360000005 11.851 74.01895120000047 9.41 195.83495730000047 11.197 107.65786890000045 9.571 122.90806589999956 10.377 96.35424429999958 11.123 94.37135140000045 9.485 72.5532985999996 8.756 87.04033290000051 9.392 76.82774369999954 10.474 139.47638260000045 10.277 144.67610220000049 11.197 121.68486459999949 11.24 107.37492250000042 9.457 165.47794470000042 12.778 81.79231449999956 8.676 106.4763678999996 10.145 92.48106379999955 10.323 96.87172469999953 11.234 123.35450969999955 10.089 83.38898339999956 9.365 129.12176939999955 10.338 187.0467807000005 11.907 106.36009519999955 10.159)
Error minima by case: (0.6238 7 0.4 5 2.7628 8 15.3676 2 0.056 7 1.6238 2 0.4149 9 11.7676 2 0.1105 1 2.9204 1 0.1881 8 7.9626 1 22.0 2 0.3762 2 15.0 2 4.2892 8 0.1105 2 16.6238 2 0.2475 9 7.1884 2 0.498 2 4.9829 6 5.3762 2 34.2754 1 0.6238 7)
Average genome size in population (length): 30.683
Average program size in population (points): 31.683
Average percent parens in population: 0.033
Minimum age in population: 18.96337890625
Maximum age in population: 23.77667236328125
Average age in population: 21.566677734375
Median age in population: 21.63363647460938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 177
Genome diversity (% unique Plush genomes):	 0.434
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 177
Syntactic diversity (% unique Push programs):	 0.434
Total error diversity:				 0.072
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 14404378
--- Timings ---
Current time: 1529614971601 milliseconds
Total Time:          55.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.1 seconds, 43.4%
Fitness Testing:     25.1 seconds, 45.2%
Report:               6.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 73013.6260000006
Test mean error for best: 36.50681
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 31.2640604292 
Correct output: 1.737259716    | Program output: -112.235792691
Correct output: -6.5206627607  | Program output: -15.4937151677
Correct output: 170.3676040222 | Program output: 43.3945516152 
Correct output: -0.0714579309  | Program output: -44.044510338 
Correct output: -183.0408262138 | Program output: -143.0138786209
Correct output: -31.1200721844 | Program output: -1.0931245914 
Correct output: -107.6021835772 | Program output: -125.5752359842
Correct output: -49.9649996534 | Program output: -52.9380520604
Correct output: 29.7033763728  | Program output: 9.7303239658  
Correct output: -33.0184284798 | Program output: -33.9914808868
Correct output: -37.8493019423 | Program output: -107.8223543493
Correct output: 102.5997996851 | Program output: 30.6267472781 
Correct output: -123.3776728769 | Program output: -81.3507252839
Correct output: -106.6112108922 | Program output: -138.5842632993
Correct output: 7.2670253799   | Program output: -92.7060270271
Correct output: 33.4813497193  | Program output: 30.5082973123 
Correct output: 23.6223035091  | Program output: 48.649251102  
Correct output: -44.5644008389 | Program output: -26.5374532459
Correct output: -132.1883981194 | Program output: -119.1614505264
Correct output: 1.3060618974   | Program output: 46.3330094904 
Correct output: -33.516842159  | Program output: -24.489894566 
Correct output: -155.4583976719 | Program output: -107.4314500789
Correct output: 82.5052168972  | Program output: -47.4678355098
Correct output: -41.9505915994 | Program output: -0.9236440064 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 integer_rot integer_mult integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float)
Errors: [41.0269 11 113.9731 9 8.9731 10 126.9731 11 43.9731 8 40.0269 8 30.0269 10 17.9731 10 2.9731 10 19.9731 7 0.9731 8 69.9731 8 71.9731 10 42.0269 9 31.9731 10 99.9731 10 2.9731 8 25.0269 10 18.0269 9 13.0269 10 45.0269 8 9.0269 10 48.0269 9 129.9731 13 41.0269 10]
Total: 1330.9193000000002
Mean: 26.618385
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2829.435584499987
Median total errors in population: 1342.5643000000002
Error averages by case: (103.13993739999947 10.274 161.07369800000052 11.808 65.0131728000005 9.409 180.4469298000005 11.138 93.92372960000053 9.549 110.9423600999995 10.287 86.56716909999946 10.94 82.4771394000005 9.475 58.17756199999982 9.08 76.5505950000005 9.306 63.379950899999514 10.308 122.8717528000005 10.148 128.17610960000047 10.964 109.69769659999943 11.126 94.63317990000056 9.241 148.91786190000047 12.811 66.52748359999978 8.76 90.19936149999953 10.184 80.54605929999948 10.036 84.67320639999944 11.163 106.69779339999947 10.092 72.09851789999948 9.373 116.7188338999995 10.071 171.7667889000005 12.006 96.64269469999944 10.027)
Error minima by case: (0.6238 6 0.7465 6 2.5249 8 23.8119 3 0.0564 7 1.6238 2 0.5851 8 12.8119 2 0.0269 1 14.8119 1 0.0269 8 7.9626 1 22.0 2 0.3762 2 16.0 2 0.6984 7 0.0269 2 16.6238 2 0.2475 7 13.0269 3 0.2862 2 9.0269 6 5.3762 2 72.2187 1 0.6238 7)
Average genome size in population (length): 31.583
Average program size in population (points): 32.583
Average percent parens in population: 0.031
Minimum age in population: 20.1396484375
Maximum age in population: 25.26535034179688
Average age in population: 23.0383127746582
Median age in population: 23.10980224609375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 117
Genome diversity (% unique Plush genomes):	 0.5
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 117
Syntactic diversity (% unique Push programs):	 0.5
Total error diversity:				 0.081
Error (vector) diversity:			 0.081
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 15193953
--- Timings ---
Current time: 1529614975061 milliseconds
Total Time:          58.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.4 seconds, 43.2%
Fitness Testing:     26.8 seconds, 45.6%
Report:               6.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 73013.6260000006
Test mean error for best: 36.50681
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 31.2640604292 
Correct output: 1.737259716    | Program output: -112.235792691
Correct output: -6.5206627607  | Program output: -15.4937151677
Correct output: 170.3676040222 | Program output: 43.3945516152 
Correct output: -0.0714579309  | Program output: -44.044510338 
Correct output: -183.0408262138 | Program output: -143.0138786209
Correct output: -31.1200721844 | Program output: -1.0931245914 
Correct output: -107.6021835772 | Program output: -125.5752359842
Correct output: -49.9649996534 | Program output: -52.9380520604
Correct output: 29.7033763728  | Program output: 9.7303239658  
Correct output: -33.0184284798 | Program output: -33.9914808868
Correct output: -37.8493019423 | Program output: -107.8223543493
Correct output: 102.5997996851 | Program output: 30.6267472781 
Correct output: -123.3776728769 | Program output: -81.3507252839
Correct output: -106.6112108922 | Program output: -138.5842632993
Correct output: 7.2670253799   | Program output: -92.7060270271
Correct output: 33.4813497193  | Program output: 30.5082973123 
Correct output: 23.6223035091  | Program output: 48.649251102  
Correct output: -44.5644008389 | Program output: -26.5374532459
Correct output: -132.1883981194 | Program output: -119.1614505264
Correct output: 1.3060618974   | Program output: 46.3330094904 
Correct output: -33.516842159  | Program output: -24.489894566 
Correct output: -155.4583976719 | Program output: -107.4314500789
Correct output: 82.5052168972  | Program output: -47.4678355098
Correct output: -41.9505915994 | Program output: -0.9236440064 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 integer_rot integer_mult integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float)
Errors: [41.0269 11 113.9731 9 8.9731 10 126.9731 11 43.9731 8 40.0269 8 30.0269 10 17.9731 10 2.9731 10 19.9731 7 0.9731 8 69.9731 8 71.9731 10 42.0269 9 31.9731 10 99.9731 10 2.9731 8 25.0269 10 18.0269 9 13.0269 10 45.0269 8 9.0269 10 48.0269 9 129.9731 13 41.0269 10]
Total: 1330.9193000000002
Mean: 26.618385
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3141.4479054999806
Median total errors in population: 1340.8119000000002
Error averages by case: (117.88798199999916 10.488 177.13210890000087 11.323 71.85218280000065 9.57 193.3109521000009 11.035 111.43366990000077 9.505 121.20652039999916 10.162 93.1732130999993 10.862 94.65875320000075 9.706 75.04869129999996 9.78 83.9193959000007 9.134 77.88983899999937 10.312 137.98463710000084 10.059 142.1653431000008 10.701 121.16901919999917 10.841 107.0532882000008 9.205 164.8016985000008 12.462 80.74997169999997 9.025 104.39090599999926 10.22 90.75468229999929 9.627 95.80872699999924 11.037 121.54831269999917 9.773 81.49078899999934 9.558 127.46633589999915 9.669 188.94656600000087 12.253 103.31532019999922 9.982)
Error minima by case: (0.2116 7 0.4 5 0.0869 8 76.2562 2 0.0798 5 0.785 2 4.4182 9 11.8119 3 0.0269 2 2.9204 1 0.0269 7 7.9626 1 22.0 2 0.215 3 15.0 3 6.3561 8 0.0269 2 14.0138 2 1.1882 8 12.0269 2 1.2384 2 8.0269 8 5.215 2 21.3808 1 0.215 8)
Average genome size in population (length): 30.365
Average program size in population (points): 31.365
Average percent parens in population: 0.033
Minimum age in population: 21.1396484375
Maximum age in population: 26.99235534667969
Average age in population: 24.5899665222168
Median age in population: 24.64379119873047
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 131
Genome diversity (% unique Plush genomes):	 0.476
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 131
Syntactic diversity (% unique Push programs):	 0.476
Total error diversity:				 0.074
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 15953078
--- Timings ---
Current time: 1529614978371 milliseconds
Total Time:          62.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.8 seconds, 43.1%
Fitness Testing:     28.4 seconds, 45.6%
Report:               6.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 73013.6260000006
Test mean error for best: 36.50681
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 31.2640604292 
Correct output: 1.737259716    | Program output: -112.235792691
Correct output: -6.5206627607  | Program output: -15.4937151677
Correct output: 170.3676040222 | Program output: 43.3945516152 
Correct output: -0.0714579309  | Program output: -44.044510338 
Correct output: -183.0408262138 | Program output: -143.0138786209
Correct output: -31.1200721844 | Program output: -1.0931245914 
Correct output: -107.6021835772 | Program output: -125.5752359842
Correct output: -49.9649996534 | Program output: -52.9380520604
Correct output: 29.7033763728  | Program output: 9.7303239658  
Correct output: -33.0184284798 | Program output: -33.9914808868
Correct output: -37.8493019423 | Program output: -107.8223543493
Correct output: 102.5997996851 | Program output: 30.6267472781 
Correct output: -123.3776728769 | Program output: -81.3507252839
Correct output: -106.6112108922 | Program output: -138.5842632993
Correct output: 7.2670253799   | Program output: -92.7060270271
Correct output: 33.4813497193  | Program output: 30.5082973123 
Correct output: 23.6223035091  | Program output: 48.649251102  
Correct output: -44.5644008389 | Program output: -26.5374532459
Correct output: -132.1883981194 | Program output: -119.1614505264
Correct output: 1.3060618974   | Program output: 46.3330094904 
Correct output: -33.516842159  | Program output: -24.489894566 
Correct output: -155.4583976719 | Program output: -107.4314500789
Correct output: 82.5052168972  | Program output: -47.4678355098
Correct output: -41.9505915994 | Program output: -0.9236440064 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 integer_rot integer_mult integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float)
Errors: [41.0269 11 113.9731 9 8.9731 10 126.9731 11 43.9731 8 40.0269 8 30.0269 10 17.9731 10 2.9731 10 19.9731 7 0.9731 8 69.9731 8 71.9731 10 42.0269 9 31.9731 10 99.9731 10 2.9731 8 25.0269 10 18.0269 9 13.0269 10 45.0269 8 9.0269 10 48.0269 9 129.9731 13 41.0269 10]
Total: 1330.9193000000002
Mean: 26.618385
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2835.863867900021
Median total errors in population: 1336.0807
Error averages by case: (103.68692339999866 10.982 163.09083890000164 9.723 64.260547500001 10.062 180.8835907000017 10.639 97.87164300000136 8.155 108.27887369999863 9.542 88.59637779999876 11.591 79.84100610000124 10.177 63.39043909999947 9.582 75.29635780000118 8.519 65.44969359999915 10.11 123.98427930000148 9.456 128.87212770000147 10.966 108.0345972999986 9.755 92.14541700000132 9.975 150.63826190000154 11.354 66.16167549999946 8.559 90.09138729999869 10.175 81.20632569999874 9.407 82.27053819999873 10.501 107.19644419999867 8.675 72.40566379999892 10.035 114.5462863999986 9.429 178.05867920000168 12.739 98.75789279999869 10.74)
Error minima by case: (0.215 6 0.4047 7 2.7489 8 76.0 2 0.0031 5 0.785 3 10.785 8 12.6396 3 0.0081 2 14.6396 2 0.0269 8 9.1238 2 21.0 3 1.215 3 13.6651 3 5.0982 8 0.0269 2 15.785 2 2.4087 8 12.0269 2 0.215 2 8.0269 8 3.215 2 79.0 2 0.215 8)
Average genome size in population (length): 26.554
Average program size in population (points): 27.554
Average percent parens in population: 0.038
Minimum age in population: 23.41162109375
Maximum age in population: 28.33757019042969
Average age in population: 26.17563049316406
Median age in population: 26.19178771972656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 336
Genome diversity (% unique Plush genomes):	 0.414
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 336
Syntactic diversity (% unique Push programs):	 0.414
Total error diversity:				 0.062
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 16616928
--- Timings ---
Current time: 1529614981489 milliseconds
Total Time:          65.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.2 seconds, 43.1%
Fitness Testing:     29.7 seconds, 45.6%
Report:               7.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 73013.6260000006
Test mean error for best: 36.50681
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 31.2640604292 
Correct output: 1.737259716    | Program output: -112.235792691
Correct output: -6.5206627607  | Program output: -15.4937151677
Correct output: 170.3676040222 | Program output: 43.3945516152 
Correct output: -0.0714579309  | Program output: -44.044510338 
Correct output: -183.0408262138 | Program output: -143.0138786209
Correct output: -31.1200721844 | Program output: -1.0931245914 
Correct output: -107.6021835772 | Program output: -125.5752359842
Correct output: -49.9649996534 | Program output: -52.9380520604
Correct output: 29.7033763728  | Program output: 9.7303239658  
Correct output: -33.0184284798 | Program output: -33.9914808868
Correct output: -37.8493019423 | Program output: -107.8223543493
Correct output: 102.5997996851 | Program output: 30.6267472781 
Correct output: -123.3776728769 | Program output: -81.3507252839
Correct output: -106.6112108922 | Program output: -138.5842632993
Correct output: 7.2670253799   | Program output: -92.7060270271
Correct output: 33.4813497193  | Program output: 30.5082973123 
Correct output: 23.6223035091  | Program output: 48.649251102  
Correct output: -44.5644008389 | Program output: -26.5374532459
Correct output: -132.1883981194 | Program output: -119.1614505264
Correct output: 1.3060618974   | Program output: 46.3330094904 
Correct output: -33.516842159  | Program output: -24.489894566 
Correct output: -155.4583976719 | Program output: -107.4314500789
Correct output: 82.5052168972  | Program output: -47.4678355098
Correct output: -41.9505915994 | Program output: -0.9236440064 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 integer_rot integer_mult integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float)
Errors: [41.0269 11 113.9731 9 8.9731 10 126.9731 11 43.9731 8 40.0269 8 30.0269 10 17.9731 10 2.9731 10 19.9731 7 0.9731 8 69.9731 8 71.9731 10 42.0269 9 31.9731 10 99.9731 10 2.9731 8 25.0269 10 18.0269 9 13.0269 10 45.0269 8 9.0269 10 48.0269 9 129.9731 13 41.0269 10]
Total: 1330.9193000000002
Mean: 26.618385
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2946.350480200014
Median total errors in population: 1334.9731000000002
Error averages by case: (105.93812109999826 11.073 166.6772920000019 9.252 71.1860827000015 10.179 186.50262510000206 10.918 102.40742710000168 8.187 112.69410229999825 9.177 93.1607492999984 11.305 85.86225380000162 10.244 69.15835780000016 9.72 82.00452480000155 8.243 69.80649689999926 9.48 128.28344280000184 9.052 134.0329138000018 10.779 111.69837199999822 9.415 97.84031400000167 10.109 154.40276580000187 10.808 71.23576030000017 8.384 93.43585949999837 10.135 85.23180279999845 9.28 86.64777309999842 10.269 109.74216589999827 8.367 76.81174589999848 10.106 118.49652309999811 9.243 182.858122000002 12.772 103.04088629999832 10.697)
Error minima by case: (4.792 6 0.433 7 1.4338 7 76.0 3 0.0465 5 5.9461 2 8.0174 8 6.7093 2 0.0081 1 4.7093 1 0.0269 7 9.1238 1 21.0 2 3.9461 2 7.2907 2 3.4636 8 0.0269 2 20.338 2 1.4087 8 11.0269 2 0.3083 2 7.0269 7 0.0539 2 79.0 1 0.5765 7)
Average genome size in population (length): 30.365
Average program size in population (points): 31.365
Average percent parens in population: 0.034
Minimum age in population: 25.64239501953125
Maximum age in population: 30.02264404296875
Average age in population: 27.81832508468628
Median age in population: 27.81830596923828
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 124
Genome diversity (% unique Plush genomes):	 0.438
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 124
Syntactic diversity (% unique Push programs):	 0.438
Total error diversity:				 0.078
Error (vector) diversity:			 0.078
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 17376053
--- Timings ---
Current time: 1529614984607 milliseconds
Total Time:          68.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.5 seconds, 43.1%
Fitness Testing:     31.2 seconds, 45.6%
Report:               7.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 73013.6260000006
Test mean error for best: 36.50681
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 31.2640604292 
Correct output: 1.737259716    | Program output: -112.235792691
Correct output: -6.5206627607  | Program output: -15.4937151677
Correct output: 170.3676040222 | Program output: 43.3945516152 
Correct output: -0.0714579309  | Program output: -44.044510338 
Correct output: -183.0408262138 | Program output: -143.0138786209
Correct output: -31.1200721844 | Program output: -1.0931245914 
Correct output: -107.6021835772 | Program output: -125.5752359842
Correct output: -49.9649996534 | Program output: -52.9380520604
Correct output: 29.7033763728  | Program output: 9.7303239658  
Correct output: -33.0184284798 | Program output: -33.9914808868
Correct output: -37.8493019423 | Program output: -107.8223543493
Correct output: 102.5997996851 | Program output: 30.6267472781 
Correct output: -123.3776728769 | Program output: -81.3507252839
Correct output: -106.6112108922 | Program output: -138.5842632993
Correct output: 7.2670253799   | Program output: -92.7060270271
Correct output: 33.4813497193  | Program output: 30.5082973123 
Correct output: 23.6223035091  | Program output: 48.649251102  
Correct output: -44.5644008389 | Program output: -26.5374532459
Correct output: -132.1883981194 | Program output: -119.1614505264
Correct output: 1.3060618974   | Program output: 46.3330094904 
Correct output: -33.516842159  | Program output: -24.489894566 
Correct output: -155.4583976719 | Program output: -107.4314500789
Correct output: 82.5052168972  | Program output: -47.4678355098
Correct output: -41.9505915994 | Program output: -0.9236440064 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 integer_rot integer_mult integer_dup integer_dup_items integer_dup_items float_add float_stackdepth integer_dup_items integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float)
Errors: [41.0269 11 113.9731 9 8.9731 10 126.9731 11 43.9731 8 40.0269 8 30.0269 10 17.9731 10 2.9731 10 19.9731 7 0.9731 8 69.9731 8 71.9731 10 42.0269 9 31.9731 10 99.9731 10 2.9731 8 25.0269 10 18.0269 9 13.0269 10 45.0269 8 9.0269 10 48.0269 9 129.9731 13 41.0269 10]
Total: 1330.9193000000002
Mean: 26.618385
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2818.1562607999863
Median total errors in population: 1330.9193000000002
Error averages by case: (100.20314759999857 11.091 163.25004640000196 9.226 67.63093210000099 10.169 181.31193570000204 11.141 101.19159320000148 8.384 106.02013759999846 8.784 85.80043849999869 10.596 82.70365990000127 10.297 65.76189900000088 10.171 76.65486930000111 7.788 64.41841330000044 8.748 124.44024770000173 8.67 128.73510640000177 10.404 104.95212979999847 9.392 95.13778830000145 10.208 150.7027699000019 10.435 66.80252180000089 8.423 87.0518527999987 10.198 79.06129939999886 9.285 79.93990649999878 10.301 103.98962609999849 8.364 70.39286499999896 10.151 111.75975019999836 9.317 179.67166140000194 12.886 95.83566289999861 10.307)
Error minima by case: (0.2605 6 0.5721 7 0.7489 8 35.0269 2 0.0092 7 3.9461 3 9.9979 7 13.9731 3 0.0081 2 3.2427 2 0.0269 8 8.1238 2 19.9731 3 1.9461 3 14.0 3 4.8283 8 0.0269 2 1.628 2 1.4087 8 10.0269 2 0.4301 2 6.0269 8 1.0539 3 38.0269 9 2.9461 8)
Average genome size in population (length): 37.125
Average program size in population (points): 38.125
Average percent parens in population: 0.027
Minimum age in population: 26.94305419921875
Maximum age in population: 31.39796447753906
Average age in population: 29.32650809669495
Median age in population: 29.35863208770752
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 241
Genome diversity (% unique Plush genomes):	 0.473
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 241
Syntactic diversity (% unique Push programs):	 0.473
Total error diversity:				 0.07
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 18304178
--- Timings ---
Current time: 1529614988161 milliseconds
Total Time:          71.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.0 seconds, 43.1%
Fitness Testing:     32.8 seconds, 45.6%
Report:               8.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 52426.77120000054
Test mean error for best: 26.21339
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 5.2640604292  
Correct output: 1.737259716    | Program output: -55.235792691 
Correct output: -6.5206627607  | Program output: -41.4937151677
Correct output: 170.3676040222 | Program output: 113.3945516152
Correct output: -0.0714579309  | Program output: -57.044510338 
Correct output: -183.0408262138 | Program output: -169.0138786209
Correct output: -31.1200721844 | Program output: -27.0931245914
Correct output: -107.6021835772 | Program output: -151.5752359842
Correct output: -49.9649996534 | Program output: -78.9380520604
Correct output: 29.7033763728  | Program output: -16.2696760342
Correct output: -33.0184284798 | Program output: -59.9914808868
Correct output: -37.8493019423 | Program output: -94.8223543493
Correct output: 102.5997996851 | Program output: 45.6267472781 
Correct output: -123.3776728769 | Program output: -107.3507252839
Correct output: -106.6112108922 | Program output: -163.5842632993
Correct output: 7.2670253799   | Program output: -49.7060270271
Correct output: 33.4813497193  | Program output: 4.5082973123  
Correct output: 23.6223035091  | Program output: 22.649251102  
Correct output: -44.5644008389 | Program output: -52.5374532459
Correct output: -132.1883981194 | Program output: -145.1614505264
Correct output: 1.3060618974   | Program output: 20.3330094904 
Correct output: -33.516842159  | Program output: -50.489894566 
Correct output: -155.4583976719 | Program output: -133.4314500789
Correct output: 82.5052168972  | Program output: 25.5321644902 
Correct output: -41.9505915994 | Program output: -26.9236440064
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction tagged_837} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 integer_rot float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_dec float_mult print_float)
Errors: [15.0269 11 56.9731 9 34.9731 10 56.9731 10 56.9731 8 14.0269 9 4.0269 11 43.9731 10 28.9731 10 45.9731 10 26.9731 10 56.9731 8 56.9731 11 16.0269 8 56.9731 10 56.9731 11 28.9731 9 0.9731 9 7.9731 9 12.9731 10 19.0269 8 16.9731 10 22.0269 9 56.9731 7 15.0269 10]
Total: 1046.7041000000002
Mean: 20.934082
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2710.0066119999838
Median total errors in population: 1330.9193000000002
Error averages by case: (94.82015849999844 11.058 158.78393440000187 9.216 62.909699100001 10.143 178.581899000002 11.13 96.33247920000156 8.387 102.9563330999984 8.658 81.28931359999864 10.341 79.07561610000137 10.308 61.315685900000965 10.201 72.82337910000126 7.687 60.05329640000083 8.632 120.31071330000174 8.557 125.66422970000164 10.38 99.7466688999984 9.371 91.97318920000156 10.325 145.4706281000018 10.288 62.57984880000104 8.47 82.02633979999868 10.174 74.3798206999987 9.379 75.89328339999875 10.298 98.59657639999844 8.373 65.46078049999893 10.119 107.48083839999836 9.451 175.83263840000194 12.805 91.61326199999843 10.285)
Error minima by case: (0.8085 6 0.8448 7 0.0415 7 32.6054 3 0.0049 6 6.9461 2 4.0269 7 10.6561 2 0.0081 1 5.2427 2 0.0269 7 12.1238 1 9.6267 3 4.9461 2 9.6651 2 4.4636 8 0.0269 2 0.9731 2 0.7423 8 10.0269 2 1.2849 2 6.0269 7 0.0539 2 56.9731 2 4.9461 7)
Average genome size in population (length): 38.16
Average program size in population (points): 39.16
Average percent parens in population: 0.026
Minimum age in population: 27.94305419921875
Maximum age in population: 32.68165588378906
Average age in population: 30.79243085098267
Median age in population: 30.78298044204712
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 226
Genome diversity (% unique Plush genomes):	 0.527
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 226
Syntactic diversity (% unique Push programs):	 0.527
Total error diversity:				 0.078
Error (vector) diversity:			 0.078
Behavioral diversity:				 0.078
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 19258203
--- Timings ---
Current time: 1529614991715 milliseconds
Total Time:          75.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        32.4 seconds, 43.0%
Fitness Testing:     34.4 seconds, 45.7%
Report:               8.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 48664.00860000039
Test mean error for best: 24.33200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 10.2640604292 
Correct output: 1.737259716    | Program output: -50.235792691 
Correct output: -6.5206627607  | Program output: -36.4937151677
Correct output: 170.3676040222 | Program output: 118.3945516152
Correct output: -0.0714579309  | Program output: -52.044510338 
Correct output: -183.0408262138 | Program output: -164.0138786209
Correct output: -31.1200721844 | Program output: -22.0931245914
Correct output: -107.6021835772 | Program output: -146.5752359842
Correct output: -49.9649996534 | Program output: -73.9380520604
Correct output: 29.7033763728  | Program output: -11.2696760342
Correct output: -33.0184284798 | Program output: -54.9914808868
Correct output: -37.8493019423 | Program output: -89.8223543493
Correct output: 102.5997996851 | Program output: 50.6267472781 
Correct output: -123.3776728769 | Program output: -102.3507252839
Correct output: -106.6112108922 | Program output: -158.5842632993
Correct output: 7.2670253799   | Program output: -44.7060270271
Correct output: 33.4813497193  | Program output: 9.5082973123  
Correct output: 23.6223035091  | Program output: 27.649251102  
Correct output: -44.5644008389 | Program output: -47.5374532459
Correct output: -132.1883981194 | Program output: -140.1614505264
Correct output: 1.3060618974   | Program output: 25.3330094904 
Correct output: -33.516842159  | Program output: -45.489894566 
Correct output: -155.4583976719 | Program output: -128.4314500789
Correct output: 82.5052168972  | Program output: 30.5321644902 
Correct output: -41.9505915994 | Program output: -21.9236440064
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max float_dec integer_rot integer_mult float_dec float_div -20 integer_max float_frominteger integer_yank integer_mult integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float)
Errors: [20.0269 11 51.9731 9 29.9731 9 51.9731 10 51.9731 8 19.0269 9 9.0269 11 38.9731 10 23.9731 10 40.9731 10 21.9731 10 51.9731 8 51.9731 10 21.0269 8 51.9731 10 51.9731 11 23.9731 9 4.0269 9 2.9731 8 7.9731 10 24.0269 8 11.9731 10 27.0269 9 51.9731 7 20.0269 9]
Total: 995.7579000000001
Mean: 19.915157
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2776.8863128999824
Median total errors in population: 1330.9193000000002
Error averages by case: (97.41948929999842 11.041 161.1851334000019 9.226 64.72629480000094 10.096 183.28848400000192 11.119 97.10001680000157 8.391 105.52482089999845 8.691 82.4640230999988 10.351 81.60413460000126 10.28 63.878732300000934 10.192 75.09854050000115 7.714 62.75575840000079 8.648 123.62831140000164 8.609 130.10365930000168 10.385 103.81121269999838 9.355 93.41080000000157 10.267 149.16638090000174 10.299 65.73063500000094 8.492 84.72115119999876 10.147 77.24753789999878 9.39 79.06484779999879 10.276 101.06450349999847 8.388 67.98219609999896 10.101 110.9551061999984 9.424 178.48421200000183 12.732 92.59033079999858 10.266)
Error minima by case: (4.0122 6 0.7463 7 0.9163 7 35.0269 3 0.025 6 6.9461 3 1.9785 7 13.9731 2 0.0269 1 6.0778 2 0.0018 8 13.1238 2 19.9731 3 4.9461 2 14.0 2 6.1444 6 0.0269 2 0.0033 2 2.9731 8 7.9731 2 0.2854 2 1.2016 7 1.0539 2 38.0269 2 2.6052 8)
Average genome size in population (length): 38.142
Average program size in population (points): 39.142
Average percent parens in population: 0.026
Minimum age in population: 29.70957183837891
Maximum age in population: 34.0463285446167
Average age in population: 32.25391979980469
Median age in population: 32.30347752571106
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 172
Genome diversity (% unique Plush genomes):	 0.589
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 172
Syntactic diversity (% unique Push programs):	 0.589
Total error diversity:				 0.08
Error (vector) diversity:			 0.08
Behavioral diversity:				 0.08
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 20211878
--- Timings ---
Current time: 1529614994838 milliseconds
Total Time:          78.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.7 seconds, 42.8%
Fitness Testing:     36.0 seconds, 45.7%
Report:               8.9 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 47931.170000000355
Test mean error for best: 23.96559
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 11.2640604292 
Correct output: 1.737259716    | Program output: -49.235792691 
Correct output: -6.5206627607  | Program output: -35.4937151677
Correct output: 170.3676040222 | Program output: 119.3945516152
Correct output: -0.0714579309  | Program output: -51.044510338 
Correct output: -183.0408262138 | Program output: -163.0138786209
Correct output: -31.1200721844 | Program output: -21.0931245914
Correct output: -107.6021835772 | Program output: -145.5752359842
Correct output: -49.9649996534 | Program output: -72.9380520604
Correct output: 29.7033763728  | Program output: -10.2696760342
Correct output: -33.0184284798 | Program output: -53.9914808868
Correct output: -37.8493019423 | Program output: -88.8223543493
Correct output: 102.5997996851 | Program output: 51.6267472781 
Correct output: -123.3776728769 | Program output: -101.3507252839
Correct output: -106.6112108922 | Program output: -157.5842632993
Correct output: 7.2670253799   | Program output: -43.7060270271
Correct output: 33.4813497193  | Program output: 10.5082973123 
Correct output: 23.6223035091  | Program output: 28.649251102  
Correct output: -44.5644008389 | Program output: -46.5374532459
Correct output: -132.1883981194 | Program output: -139.1614505264
Correct output: 1.3060618974   | Program output: 26.3330094904 
Correct output: -33.516842159  | Program output: -44.489894566 
Correct output: -155.4583976719 | Program output: -127.4314500789
Correct output: 82.5052168972  | Program output: 31.5321644902 
Correct output: -41.9505915994 | Program output: -20.9236440064
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_dec float_div in2 integer_rot float_dec -20 integer_max float_dec integer_rot integer_mult float_dec float_div -20 integer_max float_frominteger integer_yank integer_mult integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float)
Errors: [21.0269 11 50.9731 9 28.9731 10 50.9731 10 50.9731 8 20.0269 8 10.0269 10 37.9731 10 22.9731 10 39.9731 10 20.9731 9 50.9731 8 50.9731 11 22.0269 8 50.9731 10 50.9731 11 22.9731 9 5.0269 9 1.9731 8 6.9731 9 25.0269 8 10.9731 10 28.0269 9 50.9731 7 21.0269 10]
Total: 985.7579000000001
Mean: 19.715158
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2881.029520899984
Median total errors in population: 1330.9193000000002
Error averages by case: (100.82470679999861 11.07 164.84371950000175 9.392 70.94314960000101 10.095 187.46196720000185 11.063 101.59570120000139 8.42 107.49363239999855 8.711 88.02892639999872 10.369 86.00547540000132 10.252 67.82700710000101 10.207 80.8056621000012 7.787 66.07289750000085 8.682 130.33475930000156 8.749 135.83140390000156 10.39 106.48543889999853 9.394 98.2277438000014 10.215 153.43293550000166 10.375 69.21217220000102 8.516 87.98644729999874 10.074 80.56401519999886 9.398 82.11438019999882 10.273 104.84001379999854 8.433 72.56624259999907 10.093 113.33093379999848 9.436 181.67853590000163 12.599 98.21765329999863 10.311)
Error minima by case: (0.1944 8 0.9668 7 0.4442 7 3.2785 3 0.0477 7 13.0269 3 3.0269 7 12.9731 2 0.0081 1 9.2427 2 0.0018 7 3.2785 2 3.2785 3 11.6206 2 3.2785 2 1.2011 8 0.0269 2 0.0269 2 1.9731 7 6.9731 2 0.9496 2 4.0269 7 8.4602 2 3.2785 2 8.0225 8)
Average genome size in population (length): 38.286
Average program size in population (points): 39.286
Average percent parens in population: 0.026
Minimum age in population: 30.70957183837891
Maximum age in population: 35.6763334274292
Average age in population: 33.74590777039528
Median age in population: 33.79056000709534
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 124
Genome diversity (% unique Plush genomes):	 0.593
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 124
Syntactic diversity (% unique Push programs):	 0.593
Total error diversity:				 0.097
Error (vector) diversity:			 0.098
Behavioral diversity:				 0.098
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 21169578
--- Timings ---
Current time: 1529614998075 milliseconds
Total Time:          81.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.0 seconds, 42.8%
Fitness Testing:     37.5 seconds, 45.8%
Report:               9.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 46001.934000000125
Test mean error for best: 23.00097
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 13.4969355363 
Correct output: 1.737259716    | Program output: -47.0029175839
Correct output: -6.5206627607  | Program output: -33.2608400606
Correct output: 170.3676040222 | Program output: 121.6274267223
Correct output: -0.0714579309  | Program output: -48.8116352309
Correct output: -183.0408262138 | Program output: -160.7810035138
Correct output: -31.1200721844 | Program output: -18.8602494843
Correct output: -107.6021835772 | Program output: -143.3423608771
Correct output: -49.9649996534 | Program output: -70.7051769533
Correct output: 29.7033763728  | Program output: -8.0368009271 
Correct output: -33.0184284798 | Program output: -51.7586057797
Correct output: -37.8493019423 | Program output: -86.5894792422
Correct output: 102.5997996851 | Program output: 53.8596223852 
Correct output: -123.3776728769 | Program output: -99.1178501768
Correct output: -106.6112108922 | Program output: -155.3513881922
Correct output: 7.2670253799   | Program output: -41.47315192  
Correct output: 33.4813497193  | Program output: 12.7411724194 
Correct output: 23.6223035091  | Program output: 30.8821262091 
Correct output: -44.5644008389 | Program output: -44.3045781388
Correct output: -132.1883981194 | Program output: -136.9285754193
Correct output: 1.3060618974   | Program output: 28.5658845975 
Correct output: -33.516842159  | Program output: -42.2570194589
Correct output: -155.4583976719 | Program output: -125.1985749718
Correct output: 82.5052168972  | Program output: 33.7650395973 
Correct output: -41.9505915994 | Program output: -18.6907688993
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_cos} {:instruction float_sin} {:instruction in1} {:instruction -44.7401772999216} {:instruction tag_integer_801} {:instruction float_add} {:instruction integer_max} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_cos float_sin in1 -44.7401772999216 tag_integer_801 float_add integer_max float_div in2 integer_rot float_dec -20 integer_max float_dec integer_rot integer_mult float_dec float_div -20 integer_max float_frominteger integer_yank integer_mult integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult integer_dup integer_yankdup float_dec float_mult print_float)
Errors: [23.2598 10 48.7402 11 26.7402 9 48.7402 9 48.7402 8 22.2598 9 12.2598 9 35.7402 9 20.7402 10 37.7402 10 18.7402 9 48.7402 9 48.7402 10 24.2598 10 48.7402 8 48.7402 10 20.7402 9 7.2598 8 0.2598 7 4.7402 8 27.2598 10 8.7402 10 30.2598 8 48.7402 9 23.2598 9]
Total: 962.1814
Mean: 19.243628
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3237.685566699983
Median total errors in population: 1330.9193000000002
Error averages by case: (114.87226209999874 11.043 160.61903860000132 9.841 89.09889800000111 9.944 204.98898490000173 10.884 112.41768380000129 8.532 123.9755090999987 9.105 102.3539559999989 10.459 103.95941350000118 10.237 88.17479020000107 10.25 96.58660790000108 8.381 85.0325405000009 9.041 141.02172230000116 9.542 153.8436168000012 10.578 121.89249109999868 9.518 114.25709510000132 10.136 153.69957360000095 10.586 88.7300412000011 8.835 103.90976369999909 9.895 96.54515689999921 9.467 100.23055769999925 10.268 119.36968019999868 8.764 89.9327608999993 10.007 128.9338059999987 9.565 184.08039050000082 11.699 112.20322609999873 10.379)
Error minima by case: (1.4199 7 0.5721 7 0.6982 7 3.2785 3 0.0049 6 12.0269 3 1.0351 7 14.2585 3 0.0081 2 9.2427 2 0.0269 7 0.1238 2 3.2785 3 11.8821 3 3.2785 3 3.2785 8 0.0269 2 0.0269 2 0.2598 7 0.9731 2 0.6628 2 0.4544 7 8.1986 3 3.2785 6 0.7482 7)
Average genome size in population (length): 39.562
Average program size in population (points): 40.562
Average percent parens in population: 0.025
Minimum age in population: 31.70957183837891
Maximum age in population: 37.30828034877777
Average age in population: 35.30835195362568
Median age in population: 35.35897433757782
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 70
Genome diversity (% unique Plush genomes):	 0.602
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 70
Syntactic diversity (% unique Push programs):	 0.602
Total error diversity:				 0.148
Error (vector) diversity:			 0.149
Behavioral diversity:				 0.149
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 22160703
--- Timings ---
Current time: 1529615001462 milliseconds
Total Time:          85.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.4 seconds, 42.8%
Fitness Testing:     39.1 seconds, 45.9%
Report:               9.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 22125.0
Test mean error for best: 11.06250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: 51.2371128362 
Correct output: 1.737259716    | Program output: -9.262740284  
Correct output: -6.5206627607  | Program output: 4.4793372393  
Correct output: 170.3676040222 | Program output: 159.3676040222
Correct output: -0.0714579309  | Program output: -11.0714579309
Correct output: -183.0408262138 | Program output: -123.0408262138
Correct output: -31.1200721844 | Program output: 18.8799278156 
Correct output: -107.6021835772 | Program output: -105.6021835772
Correct output: -49.9649996534 | Program output: -32.9649996534
Correct output: 29.7033763728  | Program output: 29.7033763728 
Correct output: -33.0184284798 | Program output: -14.0184284798
Correct output: -37.8493019423 | Program output: -48.8493019423
Correct output: 102.5997996851 | Program output: 91.5997996851 
Correct output: -123.3776728769 | Program output: -61.3776728769
Correct output: -106.6112108922 | Program output: -117.6112108922
Correct output: 7.2670253799   | Program output: -3.7329746201 
Correct output: 33.4813497193  | Program output: 50.4813497193 
Correct output: 23.6223035091  | Program output: 68.6223035091 
Correct output: -44.5644008389 | Program output: -6.5644008389 
Correct output: -132.1883981194 | Program output: -99.1883981194
Correct output: 1.3060618974   | Program output: 66.3060618974 
Correct output: -33.516842159  | Program output: -4.516842159  
Correct output: -155.4583976719 | Program output: -87.4583976719
Correct output: 82.5052168972  | Program output: 71.5052168972 
Correct output: -41.9505915994 | Program output: 19.0494084006 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction tag_integer_801} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction tagged_837} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 tag_integer_801 float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max tag_integer_801 integer_rot float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 integer_rot float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_dec float_mult print_float)
Errors: [61.0 11 11.0 11 11.0 12 11.0 2 11.0 2 60.0 1 50.0 12 2.0 1 17.0 2 0.0 0 19.0 2 11.0 2 11.0 3 62.0 3 11.0 2 11.0 12 17.0 2 45.0 2 38.0 2 33.0 3 65.0 2 29.0 2 68.0 3 11.0 2 61.0 12]
Total: 834.0
Mean: 16.68
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3238.2428123999944
Median total errors in population: 1123.3627999999999
Error averages by case: (114.55923199999854 11.091 128.19553470000065 9.788 102.28138360000132 9.972 189.11192580000218 10.684 121.46361510000155 8.534 124.37138999999853 9.274 99.44066729999875 10.688 117.64903860000162 10.301 103.90369270000144 10.254 107.95548430000134 9.033 101.1248886000013 9.527 128.7011096000012 9.821 150.90202540000152 10.787 122.71158739999846 9.148 125.9713219000016 10.245 126.15953730000022 10.743 101.36076880000138 9.087 104.78475499999932 9.706 100.95042019999997 9.342 107.07566629999997 10.303 119.87449479999857 8.606 99.4608496 10.12 129.3891499999985 9.552 155.20075419999998 9.82 109.06651919999862 10.151)
Error minima by case: (3.0487 9 0.2448 7 0.7811 7 3.2785 2 0.1223 1 7.9731 1 1.0269 7 2.0 1 0.0186 2 0.0 0 0.0018 2 0.8762 1 3.2785 2 5.9731 3 3.2785 2 1.8643 1 0.2598 2 0.0018 2 0.0269 2 4.7402 2 1.533 2 2.0269 2 0.0269 2 3.2785 1 5.7694 7)
Average genome size in population (length): 43.56
Average program size in population (points): 44.56
Average percent parens in population: 0.023
Minimum age in population: 34.50714874267578
Maximum age in population: 38.79347676038742
Average age in population: 36.97408596903086
Median age in population: 36.97477176785469
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 108
Genome diversity (% unique Plush genomes):	 0.565
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 108
Syntactic diversity (% unique Push programs):	 0.565
Total error diversity:				 0.181
Error (vector) diversity:			 0.184
Behavioral diversity:				 0.184
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 23255403
--- Timings ---
Current time: 1529615005084 milliseconds
Total Time:          88.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.9 seconds, 42.7%
Fitness Testing:     40.7 seconds, 45.9%
Report:              10.0 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 2155.0
Test mean error for best: 1.07750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: -10.7628871638
Correct output: 1.737259716    | Program output: 0.737259716   
Correct output: -6.5206627607  | Program output: -7.5206627607 
Correct output: 170.3676040222 | Program output: 169.3676040222
Correct output: -0.0714579309  | Program output: -1.0714579309 
Correct output: -183.0408262138 | Program output: -184.0408262138
Correct output: -31.1200721844 | Program output: -32.1200721844
Correct output: -107.6021835772 | Program output: -108.6021835772
Correct output: -49.9649996534 | Program output: -50.9649996534
Correct output: 29.7033763728  | Program output: 28.7033763728 
Correct output: -33.0184284798 | Program output: -34.0184284798
Correct output: -37.8493019423 | Program output: -38.8493019423
Correct output: 102.5997996851 | Program output: 101.5997996851
Correct output: -123.3776728769 | Program output: -124.3776728769
Correct output: -106.6112108922 | Program output: -107.6112108922
Correct output: 7.2670253799   | Program output: 6.2670253799  
Correct output: 33.4813497193  | Program output: 32.4813497193 
Correct output: 23.6223035091  | Program output: 22.6223035091 
Correct output: -44.5644008389 | Program output: -45.5644008389
Correct output: -132.1883981194 | Program output: -133.1883981194
Correct output: 1.3060618974   | Program output: 0.3060618974  
Correct output: -33.516842159  | Program output: -34.516842159 
Correct output: -155.4583976719 | Program output: -156.4583976719
Correct output: 82.5052168972  | Program output: 81.5052168972 
Correct output: -41.9505915994 | Program output: -42.9505915994
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction integer_shove} {:instruction float_div} {:instruction in2} {:instruction float_flush} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction tagged_837} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_add float_dec integer_shove float_div in2 float_flush float_dec -20 integer_max tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 in1 float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_dec float_mult print_float)
Errors: [1.0 2 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 53.0
Mean: 1.06
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3269.7866835999985
Median total errors in population: 995.7579000000001
Error averages by case: (112.1392538999987 10.998 145.1156199000015 9.464 110.45978200000131 9.889 156.22792090000164 10.301 113.87781720000135 8.386 124.50986029999864 9.38 92.00460159999895 10.872 130.84264610000156 10.261 114.8699760000013 10.249 116.4629252000013 9.901 111.06364410000128 9.946 135.33528970000157 8.825 132.95146320000148 10.617 122.05702949999855 8.816 135.65995230000155 10.24 143.48044070000148 10.894 113.84267080000134 9.369 107.19765739999914 9.416 97.95756610000097 8.883 112.17972380000111 10.106 121.26159829999862 8.576 102.47842740000105 10.144 129.20781609999855 9.54 143.9069156000015 8.281 101.39208549999886 9.95)
Error minima by case: (0.0269 2 0.7373 1 1.0 1 1.0 1 0.9731 1 1.0 1 0.3818 1 1.0 1 0.0081 2 0.0 0 0.0269 1 0.1238 1 1.0 1 0.9731 1 1.0 1 1.0 1 0.2598 1 0.0269 1 0.0269 1 1.0 1 0.3061 1 1.0 1 0.0539 1 1.0 1 1.0 1)
Average genome size in population (length): 42.725
Average program size in population (points): 43.725
Average percent parens in population: 0.024
Minimum age in population: 36.31565761566162
Maximum age in population: 40.35828810930252
Average age in population: 38.53915672397614
Median age in population: 38.62845230102539
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 217
Genome diversity (% unique Plush genomes):	 0.534
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 217
Syntactic diversity (% unique Push programs):	 0.534
Total error diversity:				 0.188
Error (vector) diversity:			 0.192
Behavioral diversity:				 0.193
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 24327953
--- Timings ---
Current time: 1529615008350 milliseconds
Total Time:          92.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.3 seconds, 42.6%
Fitness Testing:     42.2 seconds, 45.9%
Report:              10.4 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 2155.0
Test mean error for best: 1.07750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: -10.7628871638
Correct output: 1.737259716    | Program output: 0.737259716   
Correct output: -6.5206627607  | Program output: -7.5206627607 
Correct output: 170.3676040222 | Program output: 169.3676040222
Correct output: -0.0714579309  | Program output: -1.0714579309 
Correct output: -183.0408262138 | Program output: -184.0408262138
Correct output: -31.1200721844 | Program output: -32.1200721844
Correct output: -107.6021835772 | Program output: -108.6021835772
Correct output: -49.9649996534 | Program output: -50.9649996534
Correct output: 29.7033763728  | Program output: 28.7033763728 
Correct output: -33.0184284798 | Program output: -34.0184284798
Correct output: -37.8493019423 | Program output: -38.8493019423
Correct output: 102.5997996851 | Program output: 101.5997996851
Correct output: -123.3776728769 | Program output: -124.3776728769
Correct output: -106.6112108922 | Program output: -107.6112108922
Correct output: 7.2670253799   | Program output: 6.2670253799  
Correct output: 33.4813497193  | Program output: 32.4813497193 
Correct output: 23.6223035091  | Program output: 22.6223035091 
Correct output: -44.5644008389 | Program output: -45.5644008389
Correct output: -132.1883981194 | Program output: -133.1883981194
Correct output: 1.3060618974   | Program output: 0.3060618974  
Correct output: -33.516842159  | Program output: -34.516842159 
Correct output: -155.4583976719 | Program output: -156.4583976719
Correct output: 82.5052168972  | Program output: 81.5052168972 
Correct output: -41.9505915994 | Program output: -42.9505915994
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction integer_shove} {:instruction float_div} {:instruction in2} {:instruction float_flush} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction tagged_837} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_add float_dec integer_shove float_div in2 float_flush float_dec -20 integer_max tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 in1 float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_dec float_mult print_float)
Errors: [1.0 2 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 53.0
Mean: 1.06
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2866.368668499998
Median total errors in population: 985.7579000000001
Error averages by case: (97.24104369999885 10.856 127.6989575000013 9.702 90.96669340000109 9.985 137.89014090000123 9.601 95.80559140000102 7.933 114.72494009999885 8.723 75.16101319999902 10.472 114.22350960000105 9.719 101.73039050000108 9.73 97.52493230000108 9.338 94.53878000000108 9.302 117.54984990000119 8.3 116.37863810000113 10.158 111.24831769999881 8.648 120.85128810000117 9.467 127.18498230000124 10.41 97.2270875000011 8.952 92.14773199999901 8.823 81.20201360000083 8.456 98.27811520000101 9.177 105.30109939999888 8.362 85.32998120000097 9.91 118.85453059999885 8.988 129.32246920000128 7.895 85.03057109999891 10.049)
Error minima by case: (0.0269 2 0.0055 1 1.0 1 1.0 1 0.0471 1 0.9731 1 0.0269 1 1.0 1 0.9731 1 0.0 0 0.0269 1 0.7331 1 1.0 1 0.9731 1 1.0 1 1.0 1 0.9731 1 0.0269 1 0.0063 1 1.0 1 0.0269 1 1.0 1 1.0 1 1.0 1 0.0269 1)
Average genome size in population (length): 38.134
Average program size in population (points): 39.134
Average percent parens in population: 0.026
Minimum age in population: 37.53594076633453
Maximum age in population: 41.94998347759247
Average age in population: 39.92438919268548
Median age in population: 39.93625036627054
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.49
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.49
Total error diversity:				 0.172
Error (vector) diversity:			 0.173
Behavioral diversity:				 0.173
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 25282103
--- Timings ---
Current time: 1529615012018 milliseconds
Total Time:          95.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.7 seconds, 42.6%
Fitness Testing:     43.9 seconds, 45.9%
Report:              10.9 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 2155.0
Test mean error for best: 1.07750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: -10.7628871638
Correct output: 1.737259716    | Program output: 0.737259716   
Correct output: -6.5206627607  | Program output: -7.5206627607 
Correct output: 170.3676040222 | Program output: 169.3676040222
Correct output: -0.0714579309  | Program output: -1.0714579309 
Correct output: -183.0408262138 | Program output: -184.0408262138
Correct output: -31.1200721844 | Program output: -32.1200721844
Correct output: -107.6021835772 | Program output: -108.6021835772
Correct output: -49.9649996534 | Program output: -50.9649996534
Correct output: 29.7033763728  | Program output: 28.7033763728 
Correct output: -33.0184284798 | Program output: -34.0184284798
Correct output: -37.8493019423 | Program output: -38.8493019423
Correct output: 102.5997996851 | Program output: 101.5997996851
Correct output: -123.3776728769 | Program output: -124.3776728769
Correct output: -106.6112108922 | Program output: -107.6112108922
Correct output: 7.2670253799   | Program output: 6.2670253799  
Correct output: 33.4813497193  | Program output: 32.4813497193 
Correct output: 23.6223035091  | Program output: 22.6223035091 
Correct output: -44.5644008389 | Program output: -45.5644008389
Correct output: -132.1883981194 | Program output: -133.1883981194
Correct output: 1.3060618974   | Program output: 0.3060618974  
Correct output: -33.516842159  | Program output: -34.516842159 
Correct output: -155.4583976719 | Program output: -156.4583976719
Correct output: 82.5052168972  | Program output: 81.5052168972 
Correct output: -41.9505915994 | Program output: -42.9505915994
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction integer_shove} {:instruction float_div} {:instruction in2} {:instruction float_flush} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction tagged_837} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_add float_dec integer_shove float_div in2 float_flush float_dec -20 integer_max tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 in1 float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_dec float_mult print_float)
Errors: [1.0 2 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 53.0
Mean: 1.06
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3451.729013499995
Median total errors in population: 962.1814
Error averages by case: (134.6402980999996 10.489 136.92239130000024 10.505 110.85580910000037 10.241 147.67598530000038 7.568 107.1739541000004 6.507 150.88331189999963 7.427 112.9530209999997 10.445 134.29044490000035 7.775 124.6376341000003 7.896 117.11066240000035 7.502 117.98572270000037 7.691 132.5222937000004 7.143 128.97424340000038 8.206 147.5624274999996 7.885 137.19471400000035 7.239 135.65131920000044 8.669 124.59997670000035 7.375 130.7496187999997 7.038 113.87143620000022 8.198 131.81867270000032 7.394 142.33308629999965 7.545 113.7442237000003 9.353 154.85227969999963 7.549 135.0971630000003 7.128 122.31732369999958 10.543)
Error minima by case: (0.0269 2 1.0 1 1.0 1 1.0 1 0.0 0 0.9731 1 1.0 1 0.0 0 0.0 0 0.0 0 0.0269 1 1.0 1 1.0 1 0.0269 1 1.0 1 0.2598 1 0.0 0 0.2598 1 0.0269 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 0.0269 1)
Average genome size in population (length): 39.29
Average program size in population (points): 40.29
Average percent parens in population: 0.026
Minimum age in population: 38.53594076633453
Maximum age in population: 43.11720234900713
Average age in population: 41.23373979824781
Median age in population: 41.27826207503676
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 107
Genome diversity (% unique Plush genomes):	 0.534
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 107
Syntactic diversity (% unique Push programs):	 0.534
Total error diversity:				 0.189
Error (vector) diversity:			 0.191
Behavioral diversity:				 0.192
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 26267153
--- Timings ---
Current time: 1529615015342 milliseconds
Total Time:          99.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.1 seconds, 42.5%
Fitness Testing:     45.5 seconds, 45.9%
Report:              11.4 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 2155.0
Test mean error for best: 1.07750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: -10.7628871638
Correct output: 1.737259716    | Program output: 0.737259716   
Correct output: -6.5206627607  | Program output: -7.5206627607 
Correct output: 170.3676040222 | Program output: 169.3676040222
Correct output: -0.0714579309  | Program output: -1.0714579309 
Correct output: -183.0408262138 | Program output: -184.0408262138
Correct output: -31.1200721844 | Program output: -32.1200721844
Correct output: -107.6021835772 | Program output: -108.6021835772
Correct output: -49.9649996534 | Program output: -50.9649996534
Correct output: 29.7033763728  | Program output: 28.7033763728 
Correct output: -33.0184284798 | Program output: -34.0184284798
Correct output: -37.8493019423 | Program output: -38.8493019423
Correct output: 102.5997996851 | Program output: 101.5997996851
Correct output: -123.3776728769 | Program output: -124.3776728769
Correct output: -106.6112108922 | Program output: -107.6112108922
Correct output: 7.2670253799   | Program output: 6.2670253799  
Correct output: 33.4813497193  | Program output: 32.4813497193 
Correct output: 23.6223035091  | Program output: 22.6223035091 
Correct output: -44.5644008389 | Program output: -45.5644008389
Correct output: -132.1883981194 | Program output: -133.1883981194
Correct output: 1.3060618974   | Program output: 0.3060618974  
Correct output: -33.516842159  | Program output: -34.516842159 
Correct output: -155.4583976719 | Program output: -156.4583976719
Correct output: 82.5052168972  | Program output: 81.5052168972 
Correct output: -41.9505915994 | Program output: -42.9505915994
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction integer_shove} {:instruction float_div} {:instruction in2} {:instruction float_flush} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction tagged_837} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_add float_dec integer_shove float_div in2 float_flush float_dec -20 integer_max tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 in1 float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_dec float_mult print_float)
Errors: [1.0 2 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 53.0
Mean: 1.06
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3715.3128070999987
Median total errors in population: 889.0
Error averages by case: (160.9487782 9.548 126.21865529999995 10.156 119.21833260000007 9.92 152.09218189999987 4.488 88.38896820000002 3.836 175.75951179999993 4.437 157.75302909999996 10.015 138.96583520000001 4.482 127.62918939999999 4.533 133.62987060000003 4.025 122.06482120000003 4.774 132.82470840000008 4.387 136.4691821 4.98 172.75103730000004 5.133 135.54556850000006 4.393 128.15248210000001 7.696 143.7773515000001 4.33 158.98632839999996 4.263 139.30424690000004 6.365 156.52464660000007 4.817 153.89999669999995 5.22 133.1238836999999 6.831 179.21787300000005 5.104 126.43490369999994 4.669 166.8064247 10.423)
Error minima by case: (0.9731 1 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 1.0 1 0.0 0 0.0 0 0.0 0 0.9816 1 0.0 0 0.0 0 0.0269 1 0.0 0 0.0 0 0.0 0 1.0 1 0.2598 1 1.0 1 0.3061 1 1.0 1 1.0 1 0.0 0 0.9731 1)
Average genome size in population (length): 45.647
Average program size in population (points): 46.647
Average percent parens in population: 0.023
Minimum age in population: 40.09615789353848
Maximum age in population: 44.94017457216978
Average age in population: 42.84930384150147
Median age in population: 42.85410138592124
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 61
Genome diversity (% unique Plush genomes):	 0.579
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 61
Syntactic diversity (% unique Push programs):	 0.579
Total error diversity:				 0.191
Error (vector) diversity:			 0.193
Behavioral diversity:				 0.194
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 27419203
--- Timings ---
Current time: 1529615018751 milliseconds
Total Time:         102.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.3 seconds, 42.3%
Fitness Testing:     47.1 seconds, 46.0%
Report:              11.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: -9.7628871638 
Correct output: 1.737259716    | Program output: 1.737259716   
Correct output: -6.5206627607  | Program output: -6.5206627607 
Correct output: 170.3676040222 | Program output: 170.3676040222
Correct output: -0.0714579309  | Program output: -0.0714579309 
Correct output: -183.0408262138 | Program output: -183.0408262138
Correct output: -31.1200721844 | Program output: -31.1200721844
Correct output: -107.6021835772 | Program output: -107.6021835772
Correct output: -49.9649996534 | Program output: -49.9649996534
Correct output: 29.7033763728  | Program output: 29.7033763728 
Correct output: -33.0184284798 | Program output: -33.0184284798
Correct output: -37.8493019423 | Program output: -37.8493019423
Correct output: 102.5997996851 | Program output: 102.5997996851
Correct output: -123.3776728769 | Program output: -123.3776728769
Correct output: -106.6112108922 | Program output: -106.6112108922
Correct output: 7.2670253799   | Program output: 7.2670253799  
Correct output: 33.4813497193  | Program output: 33.4813497193 
Correct output: 23.6223035091  | Program output: 23.6223035091 
Correct output: -44.5644008389 | Program output: -44.5644008389
Correct output: -132.1883981194 | Program output: -132.1883981194
Correct output: 1.3060618974   | Program output: 1.3060618974  
Correct output: -33.516842159  | Program output: -33.516842159 
Correct output: -155.4583976719 | Program output: -155.4583976719
Correct output: 82.5052168972  | Program output: 82.5052168972 
Correct output: -41.9505915994 | Program output: -41.9505915994
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sin} {:instruction in1} {:instruction -45.973052407018216} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction integer_shove} {:instruction float_div} {:instruction in2} {:instruction float_flush} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction tag_integer_801} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_div} {:instruction -20} {:instruction integer_max} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction tagged_837} {:instruction integer_yankdup} {:instruction float_min} {:instruction float_mult} {:instruction print_float})
Best program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_add float_dec integer_shove float_div in2 float_flush float_dec -20 integer_max tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 in1 float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_min float_mult print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3168.6416324999987
Median total errors in population: 355.0
Error averages by case: (131.09312119999998 6.178 105.62150600000015 7.941 97.34409850000011 6.085 139.4003231999999 4.021 58.976483300000055 3.298 148.0854431 3.814 133.3301686 6.161 129.88620669999983 3.665 103.35628049999993 4.009 123.17025969999992 3.346 98.0095361 3.967 124.98631340000007 3.784 130.03812749999992 4.119 143.5018555999999 4.074 127.28747469999999 3.78 109.10823119999986 7.851 130.8060998 3.72 137.20044250000004 3.738 119.24173019999998 4.068 137.94977570000003 4.042 116.62665370000009 6.144 114.21958839999992 3.982 147.7404815000001 4.161 108.37803649999992 3.885 137.12239490000002 6.328)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 53.188
Average program size in population (points): 54.188
Average percent parens in population: 0.019
Minimum age in population: 41.50159314274788
Maximum age in population: 46.1307370942086
Average age in population: 44.42113590106182
Median age in population: 44.46637995634228
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.655
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.655
Total error diversity:				 0.164
Error (vector) diversity:			 0.164
Behavioral diversity:				 0.165
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 28768528
--- Timings ---
Current time: 1529615022498 milliseconds
Total Time:         106.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.7 seconds, 42.1%
Fitness Testing:     48.9 seconds, 46.1%
Report:              12.4 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 30
Successful program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_add float_dec integer_shove float_div in2 float_flush float_dec -20 integer_max tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 in1 float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_min float_mult print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 58


Auto-simplifying with starting size: 58
step: 0
program: (integer_yankdup float_dup_times float_sin in1 -45.973052407018216 tag_integer_801 float_add float_add float_dec integer_shove float_div in2 float_flush float_dec -20 integer_max tag_integer_801 float_add float_dec float_dec float_div in2 integer_rot float_dec float_add float_add float_dec float_dec float_div in2 integer_rot float_dec -20 integer_max in2 integer_rot integer_mult float_dec float_div -20 integer_max in2 in1 float_frominteger integer_dup integer_dup_items integer_dup_items float_add float_stackdepth float_rot integer_yank float_mult tagged_837 integer_yankdup float_min float_mult print_float)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 58

step: 500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -9.7628871638  | Program output: -9.7628871638 
Correct output: 1.737259716    | Program output: 1.737259716   
Correct output: -6.5206627607  | Program output: -6.5206627607 
Correct output: 170.3676040222 | Program output: 170.3676040222
Correct output: -0.0714579309  | Program output: -0.0714579309 
Correct output: -183.0408262138 | Program output: -183.0408262138
Correct output: -31.1200721844 | Program output: -31.1200721844
Correct output: -107.6021835772 | Program output: -107.6021835772
Correct output: -49.9649996534 | Program output: -49.9649996534
Correct output: 29.7033763728  | Program output: 29.7033763728 
Correct output: -33.0184284798 | Program output: -33.0184284798
Correct output: -37.8493019423 | Program output: -37.8493019423
Correct output: 102.5997996851 | Program output: 102.5997996851
Correct output: -123.3776728769 | Program output: -123.3776728769
Correct output: -106.6112108922 | Program output: -106.6112108922
Correct output: 7.2670253799   | Program output: 7.2670253799  
Correct output: 33.4813497193  | Program output: 33.4813497193 
Correct output: 23.6223035091  | Program output: 23.6223035091 
Correct output: -44.5644008389 | Program output: -44.5644008389
Correct output: -132.1883981194 | Program output: -132.1883981194
Correct output: 1.3060618974   | Program output: 1.3060618974  
Correct output: -33.516842159  | Program output: -33.516842159 
Correct output: -155.4583976719 | Program output: -155.4583976719
Correct output: 82.5052168972  | Program output: 82.5052168972 
Correct output: -41.9505915994 | Program output: -41.9505915994
;;******************************
