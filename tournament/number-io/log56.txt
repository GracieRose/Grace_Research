Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-28.63589370360438 -31] -59.63589370360438]
Train Case:   1 | Input/Output: [[-52.8416452311729 -28] -80.84164523117289]
Train Case:   2 | Input/Output: [[19.080647010264556 -50] -30.919352989735444]
Train Case:   3 | Input/Output: [[-51.27098532308017 -78] -129.27098532308017]
Train Case:   4 | Input/Output: [[-82.61096253271228 -60] -142.61096253271228]
Train Case:   5 | Input/Output: [[-71.46039037757224 43] -28.46039037757224]
Train Case:   6 | Input/Output: [[22.109256021246622 97] 119.10925602124662]
Train Case:   7 | Input/Output: [[44.195635331996385 -47] -2.8043646680036147]
Train Case:   8 | Input/Output: [[-77.78069871076573 -86] -163.78069871076573]
Train Case:   9 | Input/Output: [[-54.63356207175656 74] 19.366437928243442]
Train Case:  10 | Input/Output: [[57.23385374848888 -86] -28.766146251511117]
Train Case:  11 | Input/Output: [[-84.97984984985433 82] -2.9798498498543324]
Train Case:  12 | Input/Output: [[-38.35851371433523 -59] -97.35851371433523]
Train Case:  13 | Input/Output: [[-9.08676256214973 -85] -94.08676256214973]
Train Case:  14 | Input/Output: [[6.659996001954099 -60] -53.3400039980459]
Train Case:  15 | Input/Output: [[-73.73927599596362 -98] -171.73927599596362]
Train Case:  16 | Input/Output: [[-35.64671607460181 -78] -113.64671607460181]
Train Case:  17 | Input/Output: [[-63.49212270550444 -36] -99.49212270550444]
Train Case:  18 | Input/Output: [[-32.96512074857736 -35] -67.96512074857736]
Train Case:  19 | Input/Output: [[-15.354976795689225 -94] -109.35497679568923]
Train Case:  20 | Input/Output: [[67.5017756451318 -53] 14.5017756451318]
Train Case:  21 | Input/Output: [[-82.84032437037239 -28] -110.84032437037239]
Train Case:  22 | Input/Output: [[24.539309564354326 -36] -11.460690435645674]
Train Case:  23 | Input/Output: [[-8.417358622775566 -24] -32.417358622775566]
Train Case:  24 | Input/Output: [[50.62088207337786 -79] -28.379117926622143]
Test Case:   0 | Input/Output: [[-91.73822936422123 58] -33.738229364221226]
Test Case:   1 | Input/Output: [[34.78150625734864 92] 126.78150625734864]
Test Case:   2 | Input/Output: [[-22.497911373354313 -13] -35.49791137335431]
Test Case:   3 | Input/Output: [[-55.870980724491524 31] -24.870980724491524]
Test Case:   4 | Input/Output: [[-70.95262499235167 -44] -114.95262499235167]
Test Case:   5 | Input/Output: [[-69.7490386719841 -49] -118.7490386719841]
Test Case:   6 | Input/Output: [[99.05854552172718 -46] 53.05854552172718]
Test Case:   7 | Input/Output: [[-29.71863653874985 -83] -112.71863653874985]
Test Case:   8 | Input/Output: [[-91.9002517353365 76] -15.900251735336496]
Test Case:   9 | Input/Output: [[23.538248290251133 -59] -35.46175170974887]
Test Case:  10 | Input/Output: [[85.82881889610863 82] 167.82881889610863]
Test Case:  11 | Input/Output: [[-1.595938759172924 -3] -4.595938759172924]
Test Case:  12 | Input/Output: [[58.44844305952668 78] 136.44844305952668]
Test Case:  13 | Input/Output: [[96.39389707869643 0] 96.39389707869643]
Test Case:  14 | Input/Output: [[-25.326467112425803 -30] -55.3264671124258]
Test Case:  15 | Input/Output: [[-22.07952713881332 15] -7.079527138813319]
Test Case:  16 | Input/Output: [[55.87581376622498 15] 70.87581376622498]
Test Case:  17 | Input/Output: [[95.14750922806684 -13] 82.14750922806684]
Test Case:  18 | Input/Output: [[-20.855961861835027 -82] -102.85596186183503]
Test Case:  19 | Input/Output: [[26.58835017200856 93] 119.58835017200856]
Test Case:  20 | Input/Output: [[50.43728514388707 -82] -31.562714856112933]
Test Case:  21 | Input/Output: [[28.10046644931549 37] 65.10046644931549]
Test Case:  22 | Input/Output: [[-22.41253532875882 -67] -89.41253532875882]
Test Case:  23 | Input/Output: [[4.574211417329195 -1] 3.5742114173291952]
Test Case:  24 | Input/Output: [[48.50388724029767 70] 118.50388724029767]
Test Case:  25 | Input/Output: [[36.625665325297376 -85] -48.374334674702624]
Test Case:  26 | Input/Output: [[-70.72420689214658 41] -29.724206892146583]
Test Case:  27 | Input/Output: [[-94.2319299242861 -98] -192.2319299242861]
Test Case:  28 | Input/Output: [[63.22284007406239 34] 97.22284007406239]
Test Case:  29 | Input/Output: [[-1.030091900486994 -79] -80.030091900487]
Test Case:  30 | Input/Output: [[82.584226454325 87] 169.584226454325]
Test Case:  31 | Input/Output: [[-34.33137485757278 -59] -93.33137485757278]
Test Case:  32 | Input/Output: [[-1.0976424103973557 74] 72.90235758960264]
Test Case:  33 | Input/Output: [[-21.068597223808425 22] 0.9314027761915753]
Test Case:  34 | Input/Output: [[63.40272622303331 4] 67.40272622303331]
Test Case:  35 | Input/Output: [[81.99269803185103 57] 138.99269803185103]
Test Case:  36 | Input/Output: [[-72.86278803113157 -28] -100.86278803113157]
Test Case:  37 | Input/Output: [[-92.36322447384602 -32] -124.36322447384602]
Test Case:  38 | Input/Output: [[14.336885367787858 26] 40.33688536778786]
Test Case:  39 | Input/Output: [[78.43605145988079 59] 137.4360514598808]
Test Case:  40 | Input/Output: [[65.03029363229163 49] 114.03029363229163]
Test Case:  41 | Input/Output: [[18.079565082606138 30] 48.07956508260614]
Test Case:  42 | Input/Output: [[-27.921850931083767 93] 65.07814906891623]
Test Case:  43 | Input/Output: [[86.28898410140019 17] 103.28898410140019]
Test Case:  44 | Input/Output: [[57.34058769467714 -27] 30.34058769467714]
Test Case:  45 | Input/Output: [[-61.09716945354744 -3] -64.09716945354744]
Test Case:  46 | Input/Output: [[-77.93996558828502 -68] -145.93996558828502]
Test Case:  47 | Input/Output: [[-62.30223766478906 52] -10.302237664789061]
Test Case:  48 | Input/Output: [[-33.05746051938905 -50] -83.05746051938905]
Test Case:  49 | Input/Output: [[86.20158491886761 1] 87.20158491886761]
Test Case:  50 | Input/Output: [[16.53327467253571 80] 96.53327467253571]
Test Case:  51 | Input/Output: [[46.56574084798157 -71] -24.434259152018427]
Test Case:  52 | Input/Output: [[26.265674397630917 -93] -66.73432560236908]
Test Case:  53 | Input/Output: [[-49.50431939747475 -57] -106.50431939747475]
Test Case:  54 | Input/Output: [[62.373466137451516 34] 96.37346613745152]
Test Case:  55 | Input/Output: [[26.56219088419462 -61] -34.43780911580538]
Test Case:  56 | Input/Output: [[26.46603912015928 99] 125.46603912015928]
Test Case:  57 | Input/Output: [[-43.13635445554817 18] -25.136354455548172]
Test Case:  58 | Input/Output: [[73.37472251228192 47] 120.37472251228192]
Test Case:  59 | Input/Output: [[-19.88906746239769 65] 45.11093253760231]
Test Case:  60 | Input/Output: [[-20.51204052387719 28] 7.4879594761228105]
Test Case:  61 | Input/Output: [[92.93829813048288 28] 120.93829813048288]
Test Case:  62 | Input/Output: [[-19.668555717311804 -23] -42.668555717311804]
Test Case:  63 | Input/Output: [[44.557120263458216 77] 121.55712026345822]
Test Case:  64 | Input/Output: [[77.81831584648734 78] 155.81831584648734]
Test Case:  65 | Input/Output: [[64.7361461185096 -60] 4.736146118509595]
Test Case:  66 | Input/Output: [[5.792705125456109 10] 15.79270512545611]
Test Case:  67 | Input/Output: [[-85.42746020036458 -20] -105.42746020036458]
Test Case:  68 | Input/Output: [[-19.48998327212709 62] 42.51001672787291]
Test Case:  69 | Input/Output: [[-75.7176513896248 -43] -118.7176513896248]
Test Case:  70 | Input/Output: [[58.64183879498481 -4] 54.64183879498481]
Test Case:  71 | Input/Output: [[-40.35537802558324 -47] -87.35537802558324]
Test Case:  72 | Input/Output: [[85.8836192008882 -53] 32.883619200888205]
Test Case:  73 | Input/Output: [[-30.002374872105293 -3] -33.00237487210529]
Test Case:  74 | Input/Output: [[-22.433105297655004 52] 29.566894702344996]
Test Case:  75 | Input/Output: [[-89.96967413956214 -19] -108.96967413956214]
Test Case:  76 | Input/Output: [[-90.62617585058281 -25] -115.62617585058281]
Test Case:  77 | Input/Output: [[-49.48475499316585 63] 13.51524500683415]
Test Case:  78 | Input/Output: [[9.125484045157918 -79] -69.87451595484208]
Test Case:  79 | Input/Output: [[-1.4921358861003569 -60] -61.49213588610036]
Test Case:  80 | Input/Output: [[-88.4280840097075 -45] -133.4280840097075]
Test Case:  81 | Input/Output: [[15.252701488420996 -64] -48.747298511579004]
Test Case:  82 | Input/Output: [[75.44998055390303 -69] 6.449980553903032]
Test Case:  83 | Input/Output: [[-82.65817853533697 1] -81.65817853533697]
Test Case:  84 | Input/Output: [[98.60397056642293 -74] 24.60397056642293]
Test Case:  85 | Input/Output: [[10.760750035541733 67] 77.76075003554173]
Test Case:  86 | Input/Output: [[-34.29447964837402 43] 8.705520351625978]
Test Case:  87 | Input/Output: [[41.47337689284555 3] 44.47337689284555]
Test Case:  88 | Input/Output: [[-22.081724786442237 78] 55.91827521355776]
Test Case:  89 | Input/Output: [[19.484125222481822 44] 63.48412522248182]
Test Case:  90 | Input/Output: [[-81.20087488898298 -13] -94.20087488898298]
Test Case:  91 | Input/Output: [[55.7820873064787 32] 87.7820873064787]
Test Case:  92 | Input/Output: [[-13.588924528257351 54] 40.41107547174265]
Test Case:  93 | Input/Output: [[15.050580476176378 76] 91.05058047617638]
Test Case:  94 | Input/Output: [[-77.2220048134703 -50] -127.2220048134703]
Test Case:  95 | Input/Output: [[1.1332137407798797 -1] 0.13321374077987969]
Test Case:  96 | Input/Output: [[-8.868556146866723 21] 12.131443853133277]
Test Case:  97 | Input/Output: [[-63.71056032785462 33] -30.710560327854623]
Test Case:  98 | Input/Output: [[22.172852028552995 -19] 3.1728520285529953]
Test Case:  99 | Input/Output: [[-39.03471389743138 69] 29.96528610256862]
Test Case: 100 | Input/Output: [[92.25417123084216 55] 147.25417123084216]
Test Case: 101 | Input/Output: [[83.22866134757092 -6] 77.22866134757092]
Test Case: 102 | Input/Output: [[-28.23805249590788 18] -10.23805249590788]
Test Case: 103 | Input/Output: [[-47.80661965320472 -9] -56.80661965320472]
Test Case: 104 | Input/Output: [[-89.22560663823056 -17] -106.22560663823056]
Test Case: 105 | Input/Output: [[56.669933362611005 65] 121.669933362611]
Test Case: 106 | Input/Output: [[60.29009263545569 -2] 58.29009263545569]
Test Case: 107 | Input/Output: [[-41.76155921647269 74] 32.23844078352731]
Test Case: 108 | Input/Output: [[-20.926356901555778 -46] -66.92635690155578]
Test Case: 109 | Input/Output: [[10.61527350980893 -69] -58.38472649019107]
Test Case: 110 | Input/Output: [[72.31592412090833 -98] -25.684075879091665]
Test Case: 111 | Input/Output: [[12.276358010417027 66] 78.27635801041703]
Test Case: 112 | Input/Output: [[-44.00735283826438 32] -12.007352838264381]
Test Case: 113 | Input/Output: [[22.51277633555479 20] 42.51277633555479]
Test Case: 114 | Input/Output: [[96.09418581870958 -98] -1.905814181290424]
Test Case: 115 | Input/Output: [[-15.028865583649733 -56] -71.02886558364973]
Test Case: 116 | Input/Output: [[71.47656667952924 -99] -27.523433320470758]
Test Case: 117 | Input/Output: [[-1.9163748864102814 -11] -12.916374886410281]
Test Case: 118 | Input/Output: [[-28.94077188177984 -79] -107.94077188177984]
Test Case: 119 | Input/Output: [[-50.294107574482425 -91] -141.29410757448244]
Test Case: 120 | Input/Output: [[44.36549138058007 45] 89.36549138058007]
Test Case: 121 | Input/Output: [[-37.585729083571366 -100] -137.58572908357138]
Test Case: 122 | Input/Output: [[87.19863990628133 89] 176.19863990628133]
Test Case: 123 | Input/Output: [[-48.16316200942592 42] -6.163162009425918]
Test Case: 124 | Input/Output: [[55.221016117470555 47] 102.22101611747055]
Test Case: 125 | Input/Output: [[-68.31822201525115 30] -38.31822201525115]
Test Case: 126 | Input/Output: [[-96.53543192953072 18] -78.53543192953072]
Test Case: 127 | Input/Output: [[-8.944940866906109 -29] -37.94494086690611]
Test Case: 128 | Input/Output: [[-70.42030895631297 52] -18.420308956312965]
Test Case: 129 | Input/Output: [[-18.19751675914125 -73] -91.19751675914125]
Test Case: 130 | Input/Output: [[-28.344119967060948 96] 67.65588003293905]
Test Case: 131 | Input/Output: [[-74.40078330507451 -29] -103.40078330507451]
Test Case: 132 | Input/Output: [[-21.722680797877203 38] 16.277319202122797]
Test Case: 133 | Input/Output: [[-29.01224423091348 63] 33.98775576908652]
Test Case: 134 | Input/Output: [[-1.1639624994008955 -100] -101.1639624994009]
Test Case: 135 | Input/Output: [[52.60208764571965 52] 104.60208764571965]
Test Case: 136 | Input/Output: [[-12.853960979193218 -65] -77.85396097919322]
Test Case: 137 | Input/Output: [[29.56941419065953 99] 128.56941419065953]
Test Case: 138 | Input/Output: [[72.76074687007758 40] 112.76074687007758]
Test Case: 139 | Input/Output: [[46.15779946365103 -88] -41.84220053634897]
Test Case: 140 | Input/Output: [[61.47502633864909 -33] 28.475026338649087]
Test Case: 141 | Input/Output: [[-58.72582138168485 -66] -124.72582138168485]
Test Case: 142 | Input/Output: [[-47.84080037261938 67] 19.159199627380623]
Test Case: 143 | Input/Output: [[-17.30447883176427 -19] -36.30447883176427]
Test Case: 144 | Input/Output: [[64.58281009642312 36] 100.58281009642312]
Test Case: 145 | Input/Output: [[12.869400349534615 54] 66.86940034953462]
Test Case: 146 | Input/Output: [[-40.829470727167894 -2] -42.829470727167894]
Test Case: 147 | Input/Output: [[62.82086711319792 -72] -9.17913288680208]
Test Case: 148 | Input/Output: [[-84.57677765679401 -68] -152.576777656794]
Test Case: 149 | Input/Output: [[17.995840611687115 -47] -29.004159388312885]
Test Case: 150 | Input/Output: [[54.749924745548526 67] 121.74992474554853]
Test Case: 151 | Input/Output: [[-56.02313296631354 12] -44.02313296631354]
Test Case: 152 | Input/Output: [[57.47267541884602 -35] 22.472675418846023]
Test Case: 153 | Input/Output: [[79.93143355395287 24] 103.93143355395287]
Test Case: 154 | Input/Output: [[-18.044545257474937 49] 30.955454742525063]
Test Case: 155 | Input/Output: [[-14.963733415635588 86] 71.03626658436441]
Test Case: 156 | Input/Output: [[66.44307904999215 -34] 32.44307904999215]
Test Case: 157 | Input/Output: [[-8.767329672175464 -63] -71.76732967217546]
Test Case: 158 | Input/Output: [[92.35407591540164 -77] 15.354075915401637]
Test Case: 159 | Input/Output: [[-62.90209387882928 -9] -71.90209387882928]
Test Case: 160 | Input/Output: [[7.76895255267695 21] 28.76895255267695]
Test Case: 161 | Input/Output: [[-88.49853472145965 -61] -149.49853472145963]
Test Case: 162 | Input/Output: [[81.33194825131051 -81] 0.3319482513105072]
Test Case: 163 | Input/Output: [[54.657189802948494 -61] -6.342810197051506]
Test Case: 164 | Input/Output: [[-35.19861573063494 11] -24.19861573063494]
Test Case: 165 | Input/Output: [[-15.227348390328046 73] 57.772651609671954]
Test Case: 166 | Input/Output: [[95.54809647943225 -22] 73.54809647943225]
Test Case: 167 | Input/Output: [[87.95009977962519 -75] 12.95009977962519]
Test Case: 168 | Input/Output: [[88.08642276123555 -50] 38.08642276123555]
Test Case: 169 | Input/Output: [[-39.437967912168226 50] 10.562032087831774]
Test Case: 170 | Input/Output: [[-92.97104898495616 2] -90.97104898495616]
Test Case: 171 | Input/Output: [[-8.633845107913274 29] 20.366154892086726]
Test Case: 172 | Input/Output: [[4.886122984711122 90] 94.88612298471112]
Test Case: 173 | Input/Output: [[-35.89144578484067 -18] -53.89144578484067]
Test Case: 174 | Input/Output: [[6.050779995408661 -79] -72.94922000459134]
Test Case: 175 | Input/Output: [[37.57924847500121 -24] 13.579248475001208]
Test Case: 176 | Input/Output: [[30.489528709389788 -100] -69.51047129061021]
Test Case: 177 | Input/Output: [[-14.335661172539972 -30] -44.33566117253997]
Test Case: 178 | Input/Output: [[-37.78366861434355 83] 45.21633138565645]
Test Case: 179 | Input/Output: [[-28.785901673069688 91] 62.21409832693031]
Test Case: 180 | Input/Output: [[-52.008463752219505 -51] -103.00846375221951]
Test Case: 181 | Input/Output: [[86.01458301053532 -93] -6.985416989464682]
Test Case: 182 | Input/Output: [[-94.6467393796149 -51] -145.6467393796149]
Test Case: 183 | Input/Output: [[49.9711998545412 -77] -27.028800145458803]
Test Case: 184 | Input/Output: [[-75.17450625620901 -58] -133.174506256209]
Test Case: 185 | Input/Output: [[-21.79725114131375 77] 55.20274885868625]
Test Case: 186 | Input/Output: [[-30.43744759935791 47] 16.56255240064209]
Test Case: 187 | Input/Output: [[33.97580095370981 24] 57.97580095370981]
Test Case: 188 | Input/Output: [[16.7323977941509 -82] -65.2676022058491]
Test Case: 189 | Input/Output: [[55.60508155940701 33] 88.60508155940701]
Test Case: 190 | Input/Output: [[78.45284982979999 -51] 27.452849829799987]
Test Case: 191 | Input/Output: [[-23.92796537391888 -90] -113.92796537391888]
Test Case: 192 | Input/Output: [[60.05843287549669 -65] -4.941567124503308]
Test Case: 193 | Input/Output: [[97.40688066093352 -72] 25.406880660933524]
Test Case: 194 | Input/Output: [[-70.06213450167853 -84] -154.06213450167854]
Test Case: 195 | Input/Output: [[-96.53860569221283 -27] -123.53860569221283]
Test Case: 196 | Input/Output: [[-28.86748145139147 11] -17.86748145139147]
Test Case: 197 | Input/Output: [[64.19790263265799 31] 95.19790263265799]
Test Case: 198 | Input/Output: [[-32.3768225833538 63] 30.6231774166462]
Test Case: 199 | Input/Output: [[74.05768614450508 -24] 50.057686144505084]
Test Case: 200 | Input/Output: [[43.462744525267624 -79] -35.537255474732376]
Test Case: 201 | Input/Output: [[-83.07132841646074 12] -71.07132841646074]
Test Case: 202 | Input/Output: [[39.18130609344212 25] 64.18130609344212]
Test Case: 203 | Input/Output: [[79.8797061397492 3] 82.8797061397492]
Test Case: 204 | Input/Output: [[-81.04464882482614 -31] -112.04464882482614]
Test Case: 205 | Input/Output: [[87.6395867567324 38] 125.6395867567324]
Test Case: 206 | Input/Output: [[-92.88754172106444 89] -3.887541721064437]
Test Case: 207 | Input/Output: [[44.88553095366163 4] 48.88553095366163]
Test Case: 208 | Input/Output: [[-91.4421049505599 39] -52.442104950559894]
Test Case: 209 | Input/Output: [[-95.89232953815092 -15] -110.89232953815092]
Test Case: 210 | Input/Output: [[34.093748995068836 20] 54.093748995068836]
Test Case: 211 | Input/Output: [[26.87155448846555 -68] -41.12844551153445]
Test Case: 212 | Input/Output: [[-32.48357902937158 -77] -109.48357902937158]
Test Case: 213 | Input/Output: [[56.618614638031346 -73] -16.381385361968654]
Test Case: 214 | Input/Output: [[-43.53013713813376 -1] -44.53013713813376]
Test Case: 215 | Input/Output: [[-89.27070154755691 -74] -163.2707015475569]
Test Case: 216 | Input/Output: [[58.579957526269794 -84] -25.420042473730206]
Test Case: 217 | Input/Output: [[27.764835666948187 -89] -61.23516433305181]
Test Case: 218 | Input/Output: [[5.971075661647518 -61] -55.02892433835248]
Test Case: 219 | Input/Output: [[-87.34604301657139 -88] -175.3460430165714]
Test Case: 220 | Input/Output: [[33.37409369727362 -75] -41.62590630272638]
Test Case: 221 | Input/Output: [[-96.69421667582507 -36] -132.6942166758251]
Test Case: 222 | Input/Output: [[-0.34648341958225615 -56] -56.346483419582256]
Test Case: 223 | Input/Output: [[-73.70967123075857 19] -54.70967123075857]
Test Case: 224 | Input/Output: [[-83.45622917164874 -5] -88.45622917164874]
Test Case: 225 | Input/Output: [[-66.19575699132832 35] -31.195756991328324]
Test Case: 226 | Input/Output: [[-53.81955590244325 -49] -102.81955590244326]
Test Case: 227 | Input/Output: [[35.97941567626194 -3] 32.97941567626194]
Test Case: 228 | Input/Output: [[-34.60765358001936 64] 29.39234641998064]
Test Case: 229 | Input/Output: [[72.26346219369339 50] 122.26346219369339]
Test Case: 230 | Input/Output: [[83.40470684113583 -20] 63.404706841135834]
Test Case: 231 | Input/Output: [[-21.38567519608354 79] 57.61432480391646]
Test Case: 232 | Input/Output: [[-94.62393651234034 -17] -111.62393651234034]
Test Case: 233 | Input/Output: [[97.52526758057104 -15] 82.52526758057104]
Test Case: 234 | Input/Output: [[40.597390740373726 -16] 24.597390740373726]
Test Case: 235 | Input/Output: [[-15.294420493402214 -28] -43.294420493402214]
Test Case: 236 | Input/Output: [[-10.198102266862733 -41] -51.19810226686273]
Test Case: 237 | Input/Output: [[-49.81226807204315 57] 7.187731927956847]
Test Case: 238 | Input/Output: [[-84.3678198938567 -91] -175.3678198938567]
Test Case: 239 | Input/Output: [[-17.6962669342319 -63] -80.6962669342319]
Test Case: 240 | Input/Output: [[43.07487670325523 47] 90.07487670325523]
Test Case: 241 | Input/Output: [[-27.885350122647083 34] 6.114649877352917]
Test Case: 242 | Input/Output: [[-39.90546664178281 -43] -82.90546664178281]
Test Case: 243 | Input/Output: [[-67.1923139010294 63] -4.192313901029394]
Test Case: 244 | Input/Output: [[-85.42355666592461 78] -7.4235566659246075]
Test Case: 245 | Input/Output: [[-13.259712161753384 -1] -14.259712161753384]
Test Case: 246 | Input/Output: [[49.1256975625937 -36] 13.1256975625937]
Test Case: 247 | Input/Output: [[-96.92269265942845 -40] -136.92269265942844]
Test Case: 248 | Input/Output: [[91.4159651305198 88] 179.4159651305198]
Test Case: 249 | Input/Output: [[-97.61618745152533 -58] -155.61618745152532]
Test Case: 250 | Input/Output: [[82.32686047467814 36] 118.32686047467814]
Test Case: 251 | Input/Output: [[-65.17177639485796 -34] -99.17177639485796]
Test Case: 252 | Input/Output: [[13.662300954993853 -55] -41.33769904500615]
Test Case: 253 | Input/Output: [[-96.00072223410177 -30] -126.00072223410177]
Test Case: 254 | Input/Output: [[77.92851933346475 -54] 23.92851933346475]
Test Case: 255 | Input/Output: [[-32.386669844475534 -66] -98.38666984447553]
Test Case: 256 | Input/Output: [[-86.42673824008719 40] -46.42673824008719]
Test Case: 257 | Input/Output: [[-82.51260484701008 78] -4.512604847010081]
Test Case: 258 | Input/Output: [[18.138391892293242 -71] -52.86160810770676]
Test Case: 259 | Input/Output: [[3.409819644619702 51] 54.4098196446197]
Test Case: 260 | Input/Output: [[-7.928896005613723 50] 42.07110399438628]
Test Case: 261 | Input/Output: [[53.60025995669474 -47] 6.600259956694742]
Test Case: 262 | Input/Output: [[21.866625361509875 8] 29.866625361509875]
Test Case: 263 | Input/Output: [[65.54895556533302 7] 72.54895556533302]
Test Case: 264 | Input/Output: [[48.23235460304355 65] 113.23235460304355]
Test Case: 265 | Input/Output: [[1.8965227223126249 44] 45.896522722312625]
Test Case: 266 | Input/Output: [[51.05231448276419 -86] -34.94768551723581]
Test Case: 267 | Input/Output: [[47.391583432511055 -68] -20.608416567488945]
Test Case: 268 | Input/Output: [[58.279199594977854 38] 96.27919959497785]
Test Case: 269 | Input/Output: [[-60.453734067019774 63] 2.5462659329802264]
Test Case: 270 | Input/Output: [[-17.143016358304934 75] 57.85698364169507]
Test Case: 271 | Input/Output: [[-12.106890098559987 30] 17.893109901440013]
Test Case: 272 | Input/Output: [[64.11690040024212 34] 98.11690040024212]
Test Case: 273 | Input/Output: [[-65.67965948232444 20] -45.67965948232444]
Test Case: 274 | Input/Output: [[94.06467282748446 55] 149.06467282748446]
Test Case: 275 | Input/Output: [[65.2075009233422 17] 82.2075009233422]
Test Case: 276 | Input/Output: [[81.8391180174576 63] 144.8391180174576]
Test Case: 277 | Input/Output: [[-22.616836414121266 -68] -90.61683641412127]
Test Case: 278 | Input/Output: [[63.67321372013552 -33] 30.67321372013552]
Test Case: 279 | Input/Output: [[-55.97236897877173 -68] -123.97236897877173]
Test Case: 280 | Input/Output: [[11.377909215852242 26] 37.37790921585224]
Test Case: 281 | Input/Output: [[73.71610325370654 31] 104.71610325370654]
Test Case: 282 | Input/Output: [[-50.36077893279065 -74] -124.36077893279065]
Test Case: 283 | Input/Output: [[31.213463461626986 -43] -11.786536538373014]
Test Case: 284 | Input/Output: [[97.77668630973758 39] 136.77668630973758]
Test Case: 285 | Input/Output: [[-45.074607054533146 85] 39.925392945466854]
Test Case: 286 | Input/Output: [[47.74251302868103 91] 138.74251302868103]
Test Case: 287 | Input/Output: [[-84.60832865101322 97] 12.391671348986776]
Test Case: 288 | Input/Output: [[4.520104512219319 49] 53.52010451221932]
Test Case: 289 | Input/Output: [[83.29825591087342 73] 156.29825591087342]
Test Case: 290 | Input/Output: [[-33.67261806473314 95] 61.32738193526686]
Test Case: 291 | Input/Output: [[-77.93376146593232 8] -69.93376146593232]
Test Case: 292 | Input/Output: [[-81.06246821719331 15] -66.06246821719331]
Test Case: 293 | Input/Output: [[-19.461618367131763 -97] -116.46161836713176]
Test Case: 294 | Input/Output: [[62.66405849972361 -51] 11.664058499723609]
Test Case: 295 | Input/Output: [[-50.65901712964169 76] 25.34098287035831]
Test Case: 296 | Input/Output: [[-3.6174471116368494 39] 35.38255288836315]
Test Case: 297 | Input/Output: [[-66.3253146067012 26] -40.3253146067012]
Test Case: 298 | Input/Output: [[-68.77228024932079 -33] -101.77228024932079]
Test Case: 299 | Input/Output: [[-18.761001795880958 63] 44.23899820411904]
Test Case: 300 | Input/Output: [[-4.959513447650423 36] 31.040486552349577]
Test Case: 301 | Input/Output: [[-57.2002918388179 -57] -114.20029183881789]
Test Case: 302 | Input/Output: [[-50.41599958419156 -100] -150.41599958419155]
Test Case: 303 | Input/Output: [[-50.789593957679635 -33] -83.78959395767964]
Test Case: 304 | Input/Output: [[10.030892974440036 40] 50.030892974440036]
Test Case: 305 | Input/Output: [[-86.40814686291031 67] -19.408146862910314]
Test Case: 306 | Input/Output: [[-45.990112636495354 -84] -129.99011263649535]
Test Case: 307 | Input/Output: [[92.69289510154175 90] 182.69289510154175]
Test Case: 308 | Input/Output: [[62.02853220375434 -26] 36.02853220375434]
Test Case: 309 | Input/Output: [[-46.804923922226415 44] -2.804923922226415]
Test Case: 310 | Input/Output: [[96.46807260785064 -2] 94.46807260785064]
Test Case: 311 | Input/Output: [[-58.006794330830935 -48] -106.00679433083093]
Test Case: 312 | Input/Output: [[-88.85235434125458 -87] -175.85235434125457]
Test Case: 313 | Input/Output: [[-29.951034912695818 91] 61.04896508730418]
Test Case: 314 | Input/Output: [[-73.91152845080096 -59] -132.91152845080097]
Test Case: 315 | Input/Output: [[36.53101698787654 26] 62.53101698787654]
Test Case: 316 | Input/Output: [[-24.91771480746428 -72] -96.91771480746428]
Test Case: 317 | Input/Output: [[52.33966535755653 -49] 3.3396653575565267]
Test Case: 318 | Input/Output: [[-71.15845971397879 -44] -115.15845971397879]
Test Case: 319 | Input/Output: [[-42.20279466484007 -39] -81.20279466484007]
Test Case: 320 | Input/Output: [[-84.00596436964385 18] -66.00596436964385]
Test Case: 321 | Input/Output: [[5.642829891327722 -73] -67.35717010867228]
Test Case: 322 | Input/Output: [[-7.267182869088003 100] 92.732817130912]
Test Case: 323 | Input/Output: [[81.36172572909254 35] 116.36172572909254]
Test Case: 324 | Input/Output: [[87.93208072771077 82] 169.93208072771077]
Test Case: 325 | Input/Output: [[-13.12854327488526 -51] -64.12854327488526]
Test Case: 326 | Input/Output: [[-24.94975328694342 -78] -102.94975328694342]
Test Case: 327 | Input/Output: [[-44.093253665363605 64] 19.906746334636395]
Test Case: 328 | Input/Output: [[31.616760437024794 26] 57.616760437024794]
Test Case: 329 | Input/Output: [[27.756464227808593 32] 59.75646422780859]
Test Case: 330 | Input/Output: [[43.8220563033415 -75] -31.177943696658502]
Test Case: 331 | Input/Output: [[62.62519475681819 34] 96.62519475681819]
Test Case: 332 | Input/Output: [[-56.42637360319114 61] 4.573626396808862]
Test Case: 333 | Input/Output: [[19.533983576561226 54] 73.53398357656123]
Test Case: 334 | Input/Output: [[56.07179892981259 94] 150.0717989298126]
Test Case: 335 | Input/Output: [[46.68448907868279 44] 90.68448907868279]
Test Case: 336 | Input/Output: [[27.943016558650683 -24] 3.943016558650683]
Test Case: 337 | Input/Output: [[-41.295595271515715 36] -5.295595271515715]
Test Case: 338 | Input/Output: [[12.238096115725767 72] 84.23809611572577]
Test Case: 339 | Input/Output: [[-45.9930427389033 -33] -78.9930427389033]
Test Case: 340 | Input/Output: [[-44.69574992390879 -77] -121.69574992390879]
Test Case: 341 | Input/Output: [[70.76044346731081 -5] 65.76044346731081]
Test Case: 342 | Input/Output: [[14.63530509451391 -78] -63.36469490548609]
Test Case: 343 | Input/Output: [[85.98492688015494 36] 121.98492688015494]
Test Case: 344 | Input/Output: [[71.15581034250476 -50] 21.155810342504765]
Test Case: 345 | Input/Output: [[-71.73480942046785 -68] -139.73480942046785]
Test Case: 346 | Input/Output: [[70.30728806696203 -57] 13.30728806696203]
Test Case: 347 | Input/Output: [[42.487846818982746 -77] -34.512153181017254]
Test Case: 348 | Input/Output: [[-69.71353336060974 -47] -116.71353336060974]
Test Case: 349 | Input/Output: [[94.0608444764774 -45] 49.0608444764774]
Test Case: 350 | Input/Output: [[12.400523470438188 69] 81.40052347043819]
Test Case: 351 | Input/Output: [[83.73426813462052 59] 142.73426813462052]
Test Case: 352 | Input/Output: [[11.644893010857444 -43] -31.355106989142556]
Test Case: 353 | Input/Output: [[-7.012733633620087 -14] -21.012733633620087]
Test Case: 354 | Input/Output: [[-30.967364219453145 -21] -51.967364219453145]
Test Case: 355 | Input/Output: [[4.01932508165585 -17] -12.98067491834415]
Test Case: 356 | Input/Output: [[59.052662195227725 -50] 9.052662195227725]
Test Case: 357 | Input/Output: [[87.0669015906164 -12] 75.0669015906164]
Test Case: 358 | Input/Output: [[9.99650656811555 -4] 5.996506568115549]
Test Case: 359 | Input/Output: [[70.40511424954633 27] 97.40511424954633]
Test Case: 360 | Input/Output: [[89.90185906172593 97] 186.90185906172593]
Test Case: 361 | Input/Output: [[74.18112688988836 -77] -2.818873110111639]
Test Case: 362 | Input/Output: [[-80.1219266657835 -29] -109.1219266657835]
Test Case: 363 | Input/Output: [[-15.208461098967561 31] 15.791538901032439]
Test Case: 364 | Input/Output: [[25.819893286555498 30] 55.8198932865555]
Test Case: 365 | Input/Output: [[-69.10171252332462 -45] -114.10171252332462]
Test Case: 366 | Input/Output: [[-81.45536397322405 83] 1.5446360267759474]
Test Case: 367 | Input/Output: [[-10.726081231535929 -65] -75.72608123153593]
Test Case: 368 | Input/Output: [[-60.34531875098183 71] 10.654681249018168]
Test Case: 369 | Input/Output: [[-35.63387711479888 -43] -78.63387711479888]
Test Case: 370 | Input/Output: [[51.15021892694091 -99] -47.84978107305909]
Test Case: 371 | Input/Output: [[74.22710133328144 72] 146.22710133328144]
Test Case: 372 | Input/Output: [[7.112174728821174 69] 76.11217472882117]
Test Case: 373 | Input/Output: [[-36.586846028982144 -92] -128.58684602898214]
Test Case: 374 | Input/Output: [[-88.0536178973966 66] -22.053617897396606]
Test Case: 375 | Input/Output: [[96.52836344731207 -95] 1.5283634473120742]
Test Case: 376 | Input/Output: [[-94.50138884255274 13] -81.50138884255274]
Test Case: 377 | Input/Output: [[96.18561847823267 60] 156.18561847823267]
Test Case: 378 | Input/Output: [[43.54611847420526 19] 62.54611847420526]
Test Case: 379 | Input/Output: [[-42.58931934248329 98] 55.41068065751671]
Test Case: 380 | Input/Output: [[-51.231662131789115 -83] -134.2316621317891]
Test Case: 381 | Input/Output: [[48.15376176115487 94] 142.15376176115487]
Test Case: 382 | Input/Output: [[-7.491902558332342 11] 3.5080974416676582]
Test Case: 383 | Input/Output: [[18.225524490377822 26] 44.22552449037782]
Test Case: 384 | Input/Output: [[-88.24442913113538 14] -74.24442913113538]
Test Case: 385 | Input/Output: [[-2.759476196963149 79] 76.24052380303685]
Test Case: 386 | Input/Output: [[67.93708689213824 84] 151.93708689213824]
Test Case: 387 | Input/Output: [[93.69829291538656 -69] 24.69829291538656]
Test Case: 388 | Input/Output: [[55.909262455910806 -81] -25.090737544089194]
Test Case: 389 | Input/Output: [[-37.70148470051844 38] 0.29851529948155786]
Test Case: 390 | Input/Output: [[26.67917489379991 -58] -31.32082510620009]
Test Case: 391 | Input/Output: [[-4.362566580246849 22] 17.63743341975315]
Test Case: 392 | Input/Output: [[41.17857812551205 -95] -53.82142187448795]
Test Case: 393 | Input/Output: [[-37.22494279596469 -5] -42.22494279596469]
Test Case: 394 | Input/Output: [[37.23875424282065 36] 73.23875424282065]
Test Case: 395 | Input/Output: [[-77.99832830555053 -48] -125.99832830555053]
Test Case: 396 | Input/Output: [[65.32360748338556 45] 110.32360748338556]
Test Case: 397 | Input/Output: [[50.07928256388237 -70] -19.920717436117627]
Test Case: 398 | Input/Output: [[-80.52750131227205 10] -70.52750131227205]
Test Case: 399 | Input/Output: [[62.162197121378654 -40] 22.162197121378654]
Test Case: 400 | Input/Output: [[-93.20264688036883 86] -7.202646880368832]
Test Case: 401 | Input/Output: [[55.907890752695124 -84] -28.092109247304876]
Test Case: 402 | Input/Output: [[92.58156299579602 -77] 15.58156299579602]
Test Case: 403 | Input/Output: [[36.797834479636094 -20] 16.797834479636094]
Test Case: 404 | Input/Output: [[5.737161198911323 -92] -86.26283880108868]
Test Case: 405 | Input/Output: [[3.1521039433674076 63] 66.15210394336741]
Test Case: 406 | Input/Output: [[-24.408456905055417 -3] -27.408456905055417]
Test Case: 407 | Input/Output: [[-82.20624269299313 -64] -146.20624269299313]
Test Case: 408 | Input/Output: [[40.417674060794354 50] 90.41767406079435]
Test Case: 409 | Input/Output: [[8.48152777751369 66] 74.48152777751369]
Test Case: 410 | Input/Output: [[-6.80681993336421 64] 57.19318006663579]
Test Case: 411 | Input/Output: [[-94.8883434307304 52] -42.8883434307304]
Test Case: 412 | Input/Output: [[-94.14957750995686 26] -68.14957750995686]
Test Case: 413 | Input/Output: [[26.28469157909359 -59] -32.71530842090641]
Test Case: 414 | Input/Output: [[-7.181186020453168 -5] -12.181186020453168]
Test Case: 415 | Input/Output: [[-77.27440451194664 -70] -147.27440451194664]
Test Case: 416 | Input/Output: [[-92.89922836181917 -15] -107.89922836181917]
Test Case: 417 | Input/Output: [[66.81698930308471 -63] 3.8169893030847106]
Test Case: 418 | Input/Output: [[82.07288239805331 3] 85.07288239805331]
Test Case: 419 | Input/Output: [[92.2627573432504 -87] 5.262757343250399]
Test Case: 420 | Input/Output: [[39.287941046390756 -54] -14.712058953609244]
Test Case: 421 | Input/Output: [[-30.70945082401117 -67] -97.70945082401117]
Test Case: 422 | Input/Output: [[82.86949491792421 -2] 80.86949491792421]
Test Case: 423 | Input/Output: [[86.25111160746735 -33] 53.25111160746735]
Test Case: 424 | Input/Output: [[90.97418183997186 28] 118.97418183997186]
Test Case: 425 | Input/Output: [[93.94228351222026 15] 108.94228351222026]
Test Case: 426 | Input/Output: [[61.72318137049504 35] 96.72318137049504]
Test Case: 427 | Input/Output: [[27.394528632235478 84] 111.39452863223548]
Test Case: 428 | Input/Output: [[88.6677929165202 21] 109.6677929165202]
Test Case: 429 | Input/Output: [[86.76041116076613 -20] 66.76041116076613]
Test Case: 430 | Input/Output: [[-36.96896960718241 -82] -118.9689696071824]
Test Case: 431 | Input/Output: [[-56.988865901663566 54] -2.9888659016635657]
Test Case: 432 | Input/Output: [[-82.80836915718962 31] -51.80836915718962]
Test Case: 433 | Input/Output: [[77.85017526699394 -9] 68.85017526699394]
Test Case: 434 | Input/Output: [[-91.13800757834372 -90] -181.13800757834372]
Test Case: 435 | Input/Output: [[-7.080035945464672 6] -1.0800359454646724]
Test Case: 436 | Input/Output: [[-32.77429739235036 -11] -43.77429739235036]
Test Case: 437 | Input/Output: [[-33.35324166277816 67] 33.64675833722184]
Test Case: 438 | Input/Output: [[11.201008801482004 92] 103.201008801482]
Test Case: 439 | Input/Output: [[-83.50932831564305 63] -20.509328315643046]
Test Case: 440 | Input/Output: [[-32.67745580786732 49] 16.322544192132682]
Test Case: 441 | Input/Output: [[78.09757807000588 61] 139.09757807000588]
Test Case: 442 | Input/Output: [[82.32251624233615 97] 179.32251624233615]
Test Case: 443 | Input/Output: [[47.52159195207287 39] 86.52159195207287]
Test Case: 444 | Input/Output: [[31.988403053202347 -38] -6.011596946797653]
Test Case: 445 | Input/Output: [[-81.26791290049269 19] -62.26791290049269]
Test Case: 446 | Input/Output: [[-32.78171944205823 57] 24.218280557941767]
Test Case: 447 | Input/Output: [[-81.16898282731441 -35] -116.16898282731441]
Test Case: 448 | Input/Output: [[-34.5135520998665 77] 42.4864479001335]
Test Case: 449 | Input/Output: [[-48.69199535238566 -58] -106.69199535238566]
Test Case: 450 | Input/Output: [[64.67751889397093 -32] 32.67751889397093]
Test Case: 451 | Input/Output: [[-9.082006470665078 -73] -82.08200647066508]
Test Case: 452 | Input/Output: [[81.4551162677931 67] 148.4551162677931]
Test Case: 453 | Input/Output: [[-98.46788828518311 -5] -103.46788828518311]
Test Case: 454 | Input/Output: [[-38.56019262465718 39] 0.43980737534282355]
Test Case: 455 | Input/Output: [[26.199770501980638 -29] -2.8002294980193625]
Test Case: 456 | Input/Output: [[-11.359842253772598 50] 38.6401577462274]
Test Case: 457 | Input/Output: [[-54.14030419596858 -69] -123.14030419596858]
Test Case: 458 | Input/Output: [[-91.13346014221449 -20] -111.13346014221449]
Test Case: 459 | Input/Output: [[-27.021438572319028 99] 71.97856142768097]
Test Case: 460 | Input/Output: [[2.8892419357761696 39] 41.88924193577617]
Test Case: 461 | Input/Output: [[43.173727800759565 96] 139.17372780075956]
Test Case: 462 | Input/Output: [[-99.06559355063848 -28] -127.06559355063848]
Test Case: 463 | Input/Output: [[79.04031873748124 30] 109.04031873748124]
Test Case: 464 | Input/Output: [[-6.762853769138431 20] 13.237146230861569]
Test Case: 465 | Input/Output: [[-41.8866745248899 13] -28.886674524889898]
Test Case: 466 | Input/Output: [[56.19987210057499 -40] 16.199872100574993]
Test Case: 467 | Input/Output: [[-36.1097654223935 72] 35.8902345776065]
Test Case: 468 | Input/Output: [[-83.8462932134235 47] -36.84629321342349]
Test Case: 469 | Input/Output: [[-11.157185981981499 97] 85.8428140180185]
Test Case: 470 | Input/Output: [[70.65812597810412 -73] -2.341874021895876]
Test Case: 471 | Input/Output: [[35.88127568409243 32] 67.88127568409243]
Test Case: 472 | Input/Output: [[-82.16567214692955 -7] -89.16567214692955]
Test Case: 473 | Input/Output: [[-6.926129628536842 84] 77.07387037146316]
Test Case: 474 | Input/Output: [[21.56518608438489 -80] -58.43481391561511]
Test Case: 475 | Input/Output: [[71.40777241863142 -78] -6.592227581368576]
Test Case: 476 | Input/Output: [[85.20503204372955 34] 119.20503204372955]
Test Case: 477 | Input/Output: [[75.83884443684946 -100] -24.161155563150544]
Test Case: 478 | Input/Output: [[69.71434079557949 -6] 63.71434079557949]
Test Case: 479 | Input/Output: [[25.105144258670478 39] 64.10514425867048]
Test Case: 480 | Input/Output: [[-89.84614115336066 3] -86.84614115336066]
Test Case: 481 | Input/Output: [[-89.11677478110987 -54] -143.11677478110988]
Test Case: 482 | Input/Output: [[96.89889133246069 63] 159.8988913324607]
Test Case: 483 | Input/Output: [[-60.22534587691541 14] -46.22534587691541]
Test Case: 484 | Input/Output: [[79.84557376465185 -60] 19.845573764651846]
Test Case: 485 | Input/Output: [[71.66982205885603 -91] -19.330177941143972]
Test Case: 486 | Input/Output: [[-36.8557224704267 27] -9.855722470426699]
Test Case: 487 | Input/Output: [[-63.83986374295405 -8] -71.83986374295405]
Test Case: 488 | Input/Output: [[-3.9424672627506254 66] 62.057532737249375]
Test Case: 489 | Input/Output: [[-50.57759391049073 10] -40.57759391049073]
Test Case: 490 | Input/Output: [[-15.583986652511882 -7] -22.583986652511882]
Test Case: 491 | Input/Output: [[-92.51117423493382 10] -82.51117423493382]
Test Case: 492 | Input/Output: [[63.00267380285112 13] 76.00267380285112]
Test Case: 493 | Input/Output: [[-38.066115199999274 99] 60.933884800000726]
Test Case: 494 | Input/Output: [[37.770409422976655 -70] -32.229590577023345]
Test Case: 495 | Input/Output: [[-83.53527857339282 -12] -95.53527857339282]
Test Case: 496 | Input/Output: [[23.467548075490427 7] 30.467548075490427]
Test Case: 497 | Input/Output: [[-50.16933819914171 -58] -108.16933819914172]
Test Case: 498 | Input/Output: [[-5.939989683793854 -6] -11.939989683793854]
Test Case: 499 | Input/Output: [[48.830503596873484 76] 124.83050359687348]
Test Case: 500 | Input/Output: [[18.24447620517475 74] 92.24447620517475]
Test Case: 501 | Input/Output: [[-11.203458552025893 96] 84.7965414479741]
Test Case: 502 | Input/Output: [[-19.559727807583243 63] 43.44027219241676]
Test Case: 503 | Input/Output: [[77.43395865838784 -64] 13.433958658387837]
Test Case: 504 | Input/Output: [[-29.04469312483539 -57] -86.04469312483539]
Test Case: 505 | Input/Output: [[-73.72752414257329 -47] -120.72752414257329]
Test Case: 506 | Input/Output: [[42.82367743524688 -61] -18.17632256475312]
Test Case: 507 | Input/Output: [[-42.526237293214855 -31] -73.52623729321485]
Test Case: 508 | Input/Output: [[37.12916331540467 84] 121.12916331540467]
Test Case: 509 | Input/Output: [[43.95569310968125 -88] -44.04430689031875]
Test Case: 510 | Input/Output: [[11.379724082443403 -97] -85.6202759175566]
Test Case: 511 | Input/Output: [[-23.69573560663744 -89] -112.69573560663744]
Test Case: 512 | Input/Output: [[49.61384297578513 -23] 26.613842975785133]
Test Case: 513 | Input/Output: [[37.2513515737223 47] 84.2513515737223]
Test Case: 514 | Input/Output: [[-45.321874830199604 28] -17.321874830199604]
Test Case: 515 | Input/Output: [[-24.565136430171464 86] 61.434863569828536]
Test Case: 516 | Input/Output: [[-49.03153632886386 9] -40.03153632886386]
Test Case: 517 | Input/Output: [[51.1543910485004 0] 51.1543910485004]
Test Case: 518 | Input/Output: [[-59.64725945175169 25] -34.64725945175169]
Test Case: 519 | Input/Output: [[-56.6863594562101 -52] -108.6863594562101]
Test Case: 520 | Input/Output: [[90.74745576857646 -31] 59.74745576857646]
Test Case: 521 | Input/Output: [[-24.95107588042788 -43] -67.95107588042788]
Test Case: 522 | Input/Output: [[53.018710871907956 -40] 13.018710871907956]
Test Case: 523 | Input/Output: [[18.80815120888508 34] 52.80815120888508]
Test Case: 524 | Input/Output: [[12.099262808397953 -22] -9.900737191602047]
Test Case: 525 | Input/Output: [[-40.16496701536623 10] -30.16496701536623]
Test Case: 526 | Input/Output: [[59.643244008227725 57] 116.64324400822773]
Test Case: 527 | Input/Output: [[89.59133634777757 63] 152.59133634777757]
Test Case: 528 | Input/Output: [[11.528386368292416 -77] -65.47161363170758]
Test Case: 529 | Input/Output: [[37.62251297440065 -64] -26.37748702559935]
Test Case: 530 | Input/Output: [[80.06055592323904 45] 125.06055592323904]
Test Case: 531 | Input/Output: [[70.5042392270199 -23] 47.504239227019895]
Test Case: 532 | Input/Output: [[66.93720872416358 14] 80.93720872416358]
Test Case: 533 | Input/Output: [[-84.91058121951282 53] -31.91058121951282]
Test Case: 534 | Input/Output: [[-23.505176950973052 45] 21.494823049026948]
Test Case: 535 | Input/Output: [[-90.42648532349781 64] -26.426485323497815]
Test Case: 536 | Input/Output: [[39.462482085516086 -37] 2.4624820855160863]
Test Case: 537 | Input/Output: [[-30.66120156759007 94] 63.33879843240993]
Test Case: 538 | Input/Output: [[-56.62121438823395 -57] -113.62121438823395]
Test Case: 539 | Input/Output: [[73.9437782070413 2] 75.9437782070413]
Test Case: 540 | Input/Output: [[-22.321430427130664 -31] -53.321430427130664]
Test Case: 541 | Input/Output: [[3.499668256764224 -79] -75.50033174323578]
Test Case: 542 | Input/Output: [[96.04984355248845 70] 166.04984355248845]
Test Case: 543 | Input/Output: [[86.0930826924573 -34] 52.0930826924573]
Test Case: 544 | Input/Output: [[74.97892560915494 -4] 70.97892560915494]
Test Case: 545 | Input/Output: [[-25.016986408181438 -8] -33.01698640818144]
Test Case: 546 | Input/Output: [[80.10629730666855 53] 133.10629730666855]
Test Case: 547 | Input/Output: [[-55.798398787852285 -74] -129.79839878785228]
Test Case: 548 | Input/Output: [[12.287984151092118 -15] -2.712015848907882]
Test Case: 549 | Input/Output: [[-63.778611554297385 -54] -117.77861155429738]
Test Case: 550 | Input/Output: [[69.59273777882265 91] 160.59273777882265]
Test Case: 551 | Input/Output: [[-74.62173518113404 -38] -112.62173518113404]
Test Case: 552 | Input/Output: [[-18.328699029115228 62] 43.67130097088477]
Test Case: 553 | Input/Output: [[-48.59649677978282 -95] -143.59649677978283]
Test Case: 554 | Input/Output: [[63.15515919246954 -88] -24.84484080753046]
Test Case: 555 | Input/Output: [[65.90808902298653 1] 66.90808902298653]
Test Case: 556 | Input/Output: [[99.95693932871393 4] 103.95693932871393]
Test Case: 557 | Input/Output: [[-95.30721339650583 -24] -119.30721339650583]
Test Case: 558 | Input/Output: [[64.47117078537806 70] 134.47117078537806]
Test Case: 559 | Input/Output: [[-43.35380546849119 0] -43.35380546849119]
Test Case: 560 | Input/Output: [[-40.152383685143114 33] -7.152383685143114]
Test Case: 561 | Input/Output: [[17.872197276855786 -57] -39.127802723144214]
Test Case: 562 | Input/Output: [[-39.70191634338125 72] 32.29808365661875]
Test Case: 563 | Input/Output: [[12.794465380134696 63] 75.7944653801347]
Test Case: 564 | Input/Output: [[-42.287892123721946 -36] -78.28789212372195]
Test Case: 565 | Input/Output: [[47.23305354481192 -18] 29.233053544811924]
Test Case: 566 | Input/Output: [[67.8483291366758 -5] 62.8483291366758]
Test Case: 567 | Input/Output: [[49.86793979982471 -4] 45.86793979982471]
Test Case: 568 | Input/Output: [[-71.31851464220382 82] 10.681485357796177]
Test Case: 569 | Input/Output: [[-35.21715264479106 -38] -73.21715264479106]
Test Case: 570 | Input/Output: [[-65.3954195877202 27] -38.3954195877202]
Test Case: 571 | Input/Output: [[-4.86058994137808 -64] -68.86058994137808]
Test Case: 572 | Input/Output: [[70.8381590388289 62] 132.8381590388289]
Test Case: 573 | Input/Output: [[-87.42973483372563 -58] -145.42973483372563]
Test Case: 574 | Input/Output: [[-65.47691653505048 19] -46.47691653505048]
Test Case: 575 | Input/Output: [[90.26588958852781 68] 158.2658895885278]
Test Case: 576 | Input/Output: [[-7.217775381099685 16] 8.782224618900315]
Test Case: 577 | Input/Output: [[-42.9206028891167 -73] -115.92060288911671]
Test Case: 578 | Input/Output: [[89.68431860678851 -88] 1.6843186067885085]
Test Case: 579 | Input/Output: [[33.55623722810188 -22] 11.556237228101878]
Test Case: 580 | Input/Output: [[-29.665477208987866 24] -5.665477208987866]
Test Case: 581 | Input/Output: [[-89.72359453610727 -74] -163.72359453610727]
Test Case: 582 | Input/Output: [[-60.752609217643474 -32] -92.75260921764348]
Test Case: 583 | Input/Output: [[-73.7826969981882 4] -69.7826969981882]
Test Case: 584 | Input/Output: [[-7.188286833447364 18] 10.811713166552636]
Test Case: 585 | Input/Output: [[19.919016624399546 -24] -4.080983375600454]
Test Case: 586 | Input/Output: [[-37.16309397508388 -90] -127.16309397508388]
Test Case: 587 | Input/Output: [[-80.80071360080402 31] -49.800713600804016]
Test Case: 588 | Input/Output: [[-11.052550338947057 -72] -83.05255033894706]
Test Case: 589 | Input/Output: [[18.010104207178784 45] 63.010104207178784]
Test Case: 590 | Input/Output: [[29.4300368975739 65] 94.4300368975739]
Test Case: 591 | Input/Output: [[44.76614640813003 -78] -33.23385359186997]
Test Case: 592 | Input/Output: [[85.59679655201117 72] 157.59679655201117]
Test Case: 593 | Input/Output: [[-54.232109985724364 76] 21.767890014275636]
Test Case: 594 | Input/Output: [[49.073782202924434 -53] -3.926217797075566]
Test Case: 595 | Input/Output: [[57.66025395079703 25] 82.66025395079703]
Test Case: 596 | Input/Output: [[94.6739866196933 69] 163.6739866196933]
Test Case: 597 | Input/Output: [[-74.7095970968062 20] -54.709597096806206]
Test Case: 598 | Input/Output: [[69.12404639994875 -20] 49.12404639994875]
Test Case: 599 | Input/Output: [[2.104132444700639 35] 37.10413244470064]
Test Case: 600 | Input/Output: [[26.628821890787947 -40] -13.371178109212053]
Test Case: 601 | Input/Output: [[-77.89913047039647 -71] -148.89913047039647]
Test Case: 602 | Input/Output: [[96.3490532776741 -6] 90.3490532776741]
Test Case: 603 | Input/Output: [[-73.84993562625095 95] 21.150064373749046]
Test Case: 604 | Input/Output: [[-79.50348186710119 52] -27.503481867101186]
Test Case: 605 | Input/Output: [[-90.4359040971358 -30] -120.4359040971358]
Test Case: 606 | Input/Output: [[-58.31106710113549 97] 38.68893289886451]
Test Case: 607 | Input/Output: [[0.36328707685014194 -10] -9.636712923149858]
Test Case: 608 | Input/Output: [[-48.563968968788316 54] 5.436031031211684]
Test Case: 609 | Input/Output: [[51.82044448792442 -36] 15.82044448792442]
Test Case: 610 | Input/Output: [[-69.20174084752249 8] -61.20174084752249]
Test Case: 611 | Input/Output: [[42.42338472992603 2] 44.42338472992603]
Test Case: 612 | Input/Output: [[-91.5960328744009 -29] -120.5960328744009]
Test Case: 613 | Input/Output: [[-42.86428389085191 89] 46.13571610914809]
Test Case: 614 | Input/Output: [[-51.69402808736392 -72] -123.69402808736392]
Test Case: 615 | Input/Output: [[-76.59462743594531 -54] -130.5946274359453]
Test Case: 616 | Input/Output: [[92.43927426185905 -85] 7.439274261859055]
Test Case: 617 | Input/Output: [[-56.52089848580366 54] -2.520898485803663]
Test Case: 618 | Input/Output: [[-55.749961578908966 -86] -141.74996157890897]
Test Case: 619 | Input/Output: [[77.72244624294387 -82] -4.2775537570561255]
Test Case: 620 | Input/Output: [[44.75467338666809 -47] -2.245326613331912]
Test Case: 621 | Input/Output: [[-72.21275244929262 43] -29.212752449292623]
Test Case: 622 | Input/Output: [[-51.59279062011508 10] -41.59279062011508]
Test Case: 623 | Input/Output: [[-0.1943065786910836 -34] -34.194306578691084]
Test Case: 624 | Input/Output: [[75.22522012480786 -6] 69.22522012480786]
Test Case: 625 | Input/Output: [[-10.680394411680851 -78] -88.68039441168085]
Test Case: 626 | Input/Output: [[-56.25837958170419 41] -15.25837958170419]
Test Case: 627 | Input/Output: [[-79.93153215096787 78] -1.9315321509678682]
Test Case: 628 | Input/Output: [[29.80513783984202 -7] 22.80513783984202]
Test Case: 629 | Input/Output: [[87.66268699457555 -72] 15.662686994575552]
Test Case: 630 | Input/Output: [[78.26382373340286 -13] 65.26382373340286]
Test Case: 631 | Input/Output: [[-98.44743676160962 23] -75.44743676160962]
Test Case: 632 | Input/Output: [[-37.55678977712691 -42] -79.55678977712691]
Test Case: 633 | Input/Output: [[-54.94299425907838 -45] -99.94299425907838]
Test Case: 634 | Input/Output: [[66.18498891257727 -94] -27.815011087422732]
Test Case: 635 | Input/Output: [[-19.8690956639757 98] 78.1309043360243]
Test Case: 636 | Input/Output: [[-48.863344925724526 -98] -146.86334492572453]
Test Case: 637 | Input/Output: [[50.766869512366156 -9] 41.766869512366156]
Test Case: 638 | Input/Output: [[70.06956027951821 -59] 11.069560279518214]
Test Case: 639 | Input/Output: [[-99.41150675679036 9] -90.41150675679036]
Test Case: 640 | Input/Output: [[-88.11802653448669 -27] -115.11802653448669]
Test Case: 641 | Input/Output: [[86.71096983707324 100] 186.71096983707324]
Test Case: 642 | Input/Output: [[3.3343849475805882 -68] -64.66561505241941]
Test Case: 643 | Input/Output: [[-75.16366120841496 2] -73.16366120841496]
Test Case: 644 | Input/Output: [[56.903187004761634 27] 83.90318700476163]
Test Case: 645 | Input/Output: [[-47.46937164044025 -41] -88.46937164044024]
Test Case: 646 | Input/Output: [[-18.513755693108962 96] 77.48624430689104]
Test Case: 647 | Input/Output: [[-2.811328602585789 21] 18.18867139741421]
Test Case: 648 | Input/Output: [[-79.00421192478642 86] 6.995788075213582]
Test Case: 649 | Input/Output: [[80.16984294654256 -44] 36.16984294654256]
Test Case: 650 | Input/Output: [[43.02293643163816 48] 91.02293643163816]
Test Case: 651 | Input/Output: [[-9.542951515399139 -1] -10.542951515399139]
Test Case: 652 | Input/Output: [[-93.99771706517745 -20] -113.99771706517745]
Test Case: 653 | Input/Output: [[-99.01511094624126 80] -19.015110946241265]
Test Case: 654 | Input/Output: [[54.39544332026466 -80] -25.60455667973534]
Test Case: 655 | Input/Output: [[87.66517762143198 -14] 73.66517762143198]
Test Case: 656 | Input/Output: [[2.0907273292735624 97] 99.09072732927356]
Test Case: 657 | Input/Output: [[-6.885909856378831 81] 74.11409014362117]
Test Case: 658 | Input/Output: [[-32.89800580389384 -100] -132.89800580389385]
Test Case: 659 | Input/Output: [[-32.26303861930721 -40] -72.26303861930721]
Test Case: 660 | Input/Output: [[-42.45125960385643 44] 1.5487403961435717]
Test Case: 661 | Input/Output: [[82.54333379907294 -55] 27.54333379907294]
Test Case: 662 | Input/Output: [[-64.66513942271952 7] -57.66513942271952]
Test Case: 663 | Input/Output: [[-33.79580347149114 12] -21.79580347149114]
Test Case: 664 | Input/Output: [[62.04310974510156 -94] -31.95689025489844]
Test Case: 665 | Input/Output: [[-82.19899943892939 36] -46.19899943892939]
Test Case: 666 | Input/Output: [[40.90766474870381 37] 77.90766474870381]
Test Case: 667 | Input/Output: [[-57.38542873615962 -99] -156.3854287361596]
Test Case: 668 | Input/Output: [[72.59347722960482 84] 156.59347722960482]
Test Case: 669 | Input/Output: [[24.541482687443278 40] 64.54148268744328]
Test Case: 670 | Input/Output: [[60.48510799639271 4] 64.48510799639271]
Test Case: 671 | Input/Output: [[57.13177035189037 -34] 23.131770351890367]
Test Case: 672 | Input/Output: [[-45.285738984956666 65] 19.714261015043334]
Test Case: 673 | Input/Output: [[-49.841629354015126 0] -49.841629354015126]
Test Case: 674 | Input/Output: [[-7.5541787554713125 80] 72.44582124452869]
Test Case: 675 | Input/Output: [[97.80656087204318 2] 99.80656087204318]
Test Case: 676 | Input/Output: [[0.6563531000951457 26] 26.656353100095146]
Test Case: 677 | Input/Output: [[-97.0979063574846 -53] -150.0979063574846]
Test Case: 678 | Input/Output: [[-30.4408553954639 34] 3.559144604536101]
Test Case: 679 | Input/Output: [[-93.20800420002942 81] -12.208004200029421]
Test Case: 680 | Input/Output: [[-27.475485111504995 -82] -109.475485111505]
Test Case: 681 | Input/Output: [[-93.70411820453216 62] -31.704118204532165]
Test Case: 682 | Input/Output: [[90.20750055096525 91] 181.20750055096525]
Test Case: 683 | Input/Output: [[67.50446317050404 -49] 18.50446317050404]
Test Case: 684 | Input/Output: [[-10.589483075196668 9] -1.589483075196668]
Test Case: 685 | Input/Output: [[-20.404544410417145 24] 3.595455589582855]
Test Case: 686 | Input/Output: [[8.015921537326264 -31] -22.984078462673736]
Test Case: 687 | Input/Output: [[34.271753739098926 17] 51.271753739098926]
Test Case: 688 | Input/Output: [[-17.737708814474402 34] 16.262291185525598]
Test Case: 689 | Input/Output: [[83.87244217276213 -24] 59.872442172762135]
Test Case: 690 | Input/Output: [[66.04709232829819 -9] 57.04709232829819]
Test Case: 691 | Input/Output: [[23.51765882137191 20] 43.51765882137191]
Test Case: 692 | Input/Output: [[-42.126346358454605 -73] -115.12634635845461]
Test Case: 693 | Input/Output: [[-90.24525625317791 -20] -110.24525625317791]
Test Case: 694 | Input/Output: [[-88.0779812140152 10] -78.0779812140152]
Test Case: 695 | Input/Output: [[67.67034619972301 -74] -6.329653800276986]
Test Case: 696 | Input/Output: [[60.318290703222374 -65] -4.681709296777626]
Test Case: 697 | Input/Output: [[-60.31052144271713 84] 23.689478557282868]
Test Case: 698 | Input/Output: [[-47.38777723318754 98] 50.61222276681246]
Test Case: 699 | Input/Output: [[28.13100006471373 -67] -38.86899993528627]
Test Case: 700 | Input/Output: [[-55.18596759644983 27] -28.185967596449828]
Test Case: 701 | Input/Output: [[14.908745566022304 27] 41.908745566022304]
Test Case: 702 | Input/Output: [[93.43919749726041 -61] 32.43919749726041]
Test Case: 703 | Input/Output: [[38.470614669829246 -90] -51.529385330170754]
Test Case: 704 | Input/Output: [[-88.48079883092444 7] -81.48079883092444]
Test Case: 705 | Input/Output: [[-82.42880270885884 92] 9.57119729114116]
Test Case: 706 | Input/Output: [[91.95946218330053 22] 113.95946218330053]
Test Case: 707 | Input/Output: [[31.636486325716362 75] 106.63648632571636]
Test Case: 708 | Input/Output: [[-28.984811157929855 7] -21.984811157929855]
Test Case: 709 | Input/Output: [[12.840561707836471 21] 33.84056170783647]
Test Case: 710 | Input/Output: [[14.880900909188284 37] 51.880900909188284]
Test Case: 711 | Input/Output: [[-12.095042550553586 -50] -62.095042550553586]
Test Case: 712 | Input/Output: [[-19.2437535392786 -26] -45.2437535392786]
Test Case: 713 | Input/Output: [[-69.4941636052017 -82] -151.49416360520172]
Test Case: 714 | Input/Output: [[-99.3586469369559 31] -68.3586469369559]
Test Case: 715 | Input/Output: [[27.01722258322323 51] 78.01722258322323]
Test Case: 716 | Input/Output: [[73.20393295334148 9] 82.20393295334148]
Test Case: 717 | Input/Output: [[-64.29528724445586 -36] -100.29528724445586]
Test Case: 718 | Input/Output: [[-8.852041983244192 87] 78.14795801675581]
Test Case: 719 | Input/Output: [[18.362931608735607 83] 101.36293160873561]
Test Case: 720 | Input/Output: [[26.228813102690737 14] 40.22881310269074]
Test Case: 721 | Input/Output: [[92.82462038755068 52] 144.82462038755068]
Test Case: 722 | Input/Output: [[-62.631757994636516 80] 17.368242005363484]
Test Case: 723 | Input/Output: [[52.03533976849846 50] 102.03533976849846]
Test Case: 724 | Input/Output: [[79.15026252001732 -15] 64.15026252001732]
Test Case: 725 | Input/Output: [[-98.42479378238649 62] -36.42479378238649]
Test Case: 726 | Input/Output: [[-90.84638869548141 76] -14.846388695481409]
Test Case: 727 | Input/Output: [[13.360456575629854 -9] 4.360456575629854]
Test Case: 728 | Input/Output: [[-7.641730960025271 14] 6.358269039974729]
Test Case: 729 | Input/Output: [[-61.08140579259449 44] -17.081405792594488]
Test Case: 730 | Input/Output: [[98.3948547121351 78] 176.3948547121351]
Test Case: 731 | Input/Output: [[67.0947674351224 -55] 12.094767435122407]
Test Case: 732 | Input/Output: [[53.4771463507586 32] 85.4771463507586]
Test Case: 733 | Input/Output: [[-52.08790854341212 31] -21.08790854341212]
Test Case: 734 | Input/Output: [[16.277049599318104 30] 46.277049599318104]
Test Case: 735 | Input/Output: [[10.54011377848019 15] 25.54011377848019]
Test Case: 736 | Input/Output: [[28.459455680320787 99] 127.45945568032079]
Test Case: 737 | Input/Output: [[-85.7783765139109 3] -82.7783765139109]
Test Case: 738 | Input/Output: [[23.544346753134548 28] 51.54434675313455]
Test Case: 739 | Input/Output: [[22.43134702308653 -57] -34.56865297691347]
Test Case: 740 | Input/Output: [[29.673552376101128 -70] -40.32644762389887]
Test Case: 741 | Input/Output: [[1.9201199418428416 -78] -76.07988005815716]
Test Case: 742 | Input/Output: [[94.89633343483098 55] 149.89633343483098]
Test Case: 743 | Input/Output: [[-34.15191822572939 -50] -84.15191822572939]
Test Case: 744 | Input/Output: [[-34.28988353647637 48] 13.710116463523633]
Test Case: 745 | Input/Output: [[88.49823977513083 -86] 2.498239775130827]
Test Case: 746 | Input/Output: [[-31.415444525647928 -64] -95.41544452564793]
Test Case: 747 | Input/Output: [[21.917742942341363 28] 49.91774294234136]
Test Case: 748 | Input/Output: [[28.192019183037132 30] 58.19201918303713]
Test Case: 749 | Input/Output: [[37.8879987802745 73] 110.8879987802745]
Test Case: 750 | Input/Output: [[89.1466036434388 38] 127.1466036434388]
Test Case: 751 | Input/Output: [[-95.25253393764774 56] -39.25253393764774]
Test Case: 752 | Input/Output: [[56.24724411125473 63] 119.24724411125473]
Test Case: 753 | Input/Output: [[-74.79634369758806 -69] -143.79634369758804]
Test Case: 754 | Input/Output: [[61.66456468492706 72] 133.66456468492706]
Test Case: 755 | Input/Output: [[-66.72472614845874 -16] -82.72472614845874]
Test Case: 756 | Input/Output: [[29.877687823616384 48] 77.87768782361638]
Test Case: 757 | Input/Output: [[-29.467895941775282 44] 14.532104058224718]
Test Case: 758 | Input/Output: [[66.02941741614976 22] 88.02941741614976]
Test Case: 759 | Input/Output: [[82.45808927761519 -27] 55.45808927761519]
Test Case: 760 | Input/Output: [[-28.960170478046223 89] 60.03982952195378]
Test Case: 761 | Input/Output: [[-51.20730073732611 74] 22.792699262673892]
Test Case: 762 | Input/Output: [[78.19447935323407 59] 137.19447935323407]
Test Case: 763 | Input/Output: [[-98.86875686898848 48] -50.868756868988484]
Test Case: 764 | Input/Output: [[-82.68968751266962 -39] -121.68968751266962]
Test Case: 765 | Input/Output: [[61.94673641675118 100] 161.94673641675118]
Test Case: 766 | Input/Output: [[-5.299044495410669 78] 72.70095550458933]
Test Case: 767 | Input/Output: [[-44.51862865445841 -37] -81.51862865445841]
Test Case: 768 | Input/Output: [[-5.870468831571515 40] 34.129531168428485]
Test Case: 769 | Input/Output: [[-24.770574216754284 56] 31.229425783245716]
Test Case: 770 | Input/Output: [[-1.6667620074518794 -43] -44.66676200745188]
Test Case: 771 | Input/Output: [[-66.30779517484319 -71] -137.3077951748432]
Test Case: 772 | Input/Output: [[-50.916987340824505 -1] -51.916987340824505]
Test Case: 773 | Input/Output: [[97.6154786087678 55] 152.6154786087678]
Test Case: 774 | Input/Output: [[-89.8585730829371 -91] -180.85857308293708]
Test Case: 775 | Input/Output: [[-84.61157718096237 -65] -149.61157718096237]
Test Case: 776 | Input/Output: [[97.57849400056611 15] 112.57849400056611]
Test Case: 777 | Input/Output: [[89.71043282270927 -33] 56.710432822709265]
Test Case: 778 | Input/Output: [[70.27830027569902 96] 166.27830027569902]
Test Case: 779 | Input/Output: [[65.66033243442283 -86] -20.339667565577173]
Test Case: 780 | Input/Output: [[28.680879985871115 -81] -52.319120014128885]
Test Case: 781 | Input/Output: [[56.38767681372562 -93] -36.61232318627438]
Test Case: 782 | Input/Output: [[60.86550029948654 -49] 11.865500299486541]
Test Case: 783 | Input/Output: [[70.35311373095047 41] 111.35311373095047]
Test Case: 784 | Input/Output: [[71.09345813739051 72] 143.0934581373905]
Test Case: 785 | Input/Output: [[14.51932875210926 -16] -1.48067124789074]
Test Case: 786 | Input/Output: [[-73.75583399990022 62] -11.755833999900219]
Test Case: 787 | Input/Output: [[-27.45706123177986 -80] -107.45706123177986]
Test Case: 788 | Input/Output: [[18.866827250247596 -15] 3.8668272502475958]
Test Case: 789 | Input/Output: [[84.3684973273935 -80] 4.368497327393499]
Test Case: 790 | Input/Output: [[-40.437781360353874 -97] -137.43778136035388]
Test Case: 791 | Input/Output: [[83.3131445104338 92] 175.3131445104338]
Test Case: 792 | Input/Output: [[62.38462439552242 -37] 25.384624395522422]
Test Case: 793 | Input/Output: [[0.1630110263347575 -25] -24.836988973665242]
Test Case: 794 | Input/Output: [[72.86674025531207 82] 154.86674025531207]
Test Case: 795 | Input/Output: [[-28.236047169009026 12] -16.236047169009026]
Test Case: 796 | Input/Output: [[-24.090692504235903 -85] -109.0906925042359]
Test Case: 797 | Input/Output: [[70.88719386385588 39] 109.88719386385588]
Test Case: 798 | Input/Output: [[-4.718949550791621 -100] -104.71894955079162]
Test Case: 799 | Input/Output: [[-42.15376056962774 81] 38.84623943037226]
Test Case: 800 | Input/Output: [[-38.23270450965948 -29] -67.23270450965947]
Test Case: 801 | Input/Output: [[-95.9828538487289 44] -51.982853848728894]
Test Case: 802 | Input/Output: [[-15.734686464218157 75] 59.26531353578184]
Test Case: 803 | Input/Output: [[78.1825343657085 58] 136.1825343657085]
Test Case: 804 | Input/Output: [[-83.67755365370428 29] -54.67755365370428]
Test Case: 805 | Input/Output: [[-47.5383461773565 -26] -73.5383461773565]
Test Case: 806 | Input/Output: [[42.86238477951568 16] 58.86238477951568]
Test Case: 807 | Input/Output: [[-15.860086705571973 54] 38.13991329442803]
Test Case: 808 | Input/Output: [[-92.11862909891127 -86] -178.11862909891127]
Test Case: 809 | Input/Output: [[0.12600563099836393 4] 4.126005630998364]
Test Case: 810 | Input/Output: [[39.174931265064885 89] 128.17493126506488]
Test Case: 811 | Input/Output: [[-53.97821191306822 -36] -89.97821191306822]
Test Case: 812 | Input/Output: [[-75.33028458051396 75] -0.33028458051396115]
Test Case: 813 | Input/Output: [[2.53987722246292 -70] -67.46012277753708]
Test Case: 814 | Input/Output: [[-8.955841228598644 32] 23.044158771401356]
Test Case: 815 | Input/Output: [[41.240540022841884 -88] -46.759459977158116]
Test Case: 816 | Input/Output: [[-94.70022946712734 87] -7.700229467127343]
Test Case: 817 | Input/Output: [[21.19970506317334 71] 92.19970506317334]
Test Case: 818 | Input/Output: [[-31.24372128030717 55] 23.75627871969283]
Test Case: 819 | Input/Output: [[53.97473465500394 25] 78.97473465500394]
Test Case: 820 | Input/Output: [[35.68361914580797 -1] 34.68361914580797]
Test Case: 821 | Input/Output: [[-59.30040780817774 -23] -82.30040780817774]
Test Case: 822 | Input/Output: [[-71.98551724649951 82] 10.014482753500488]
Test Case: 823 | Input/Output: [[94.60072165358997 11] 105.60072165358997]
Test Case: 824 | Input/Output: [[54.07067921530262 -86] -31.92932078469738]
Test Case: 825 | Input/Output: [[-28.81068484724156 -20] -48.81068484724156]
Test Case: 826 | Input/Output: [[-41.50211081070789 95] 53.49788918929211]
Test Case: 827 | Input/Output: [[-4.635308597480275 -36] -40.635308597480275]
Test Case: 828 | Input/Output: [[53.643582227656935 86] 139.64358222765694]
Test Case: 829 | Input/Output: [[44.25857679839632 74] 118.25857679839632]
Test Case: 830 | Input/Output: [[98.90426586858098 -8] 90.90426586858098]
Test Case: 831 | Input/Output: [[95.16427355855163 1] 96.16427355855163]
Test Case: 832 | Input/Output: [[99.94253954719159 -21] 78.94253954719159]
Test Case: 833 | Input/Output: [[98.7017288452391 -53] 45.7017288452391]
Test Case: 834 | Input/Output: [[36.69295448030729 -87] -50.30704551969271]
Test Case: 835 | Input/Output: [[-67.47165357462023 14] -53.471653574620234]
Test Case: 836 | Input/Output: [[85.30758832938017 -47] 38.30758832938017]
Test Case: 837 | Input/Output: [[28.243541276106242 0] 28.243541276106242]
Test Case: 838 | Input/Output: [[34.79970683808159 -37] -2.2002931619184096]
Test Case: 839 | Input/Output: [[-72.7029967481856 -30] -102.7029967481856]
Test Case: 840 | Input/Output: [[-99.21526523820765 70] -29.21526523820765]
Test Case: 841 | Input/Output: [[8.85066690826335 67] 75.85066690826335]
Test Case: 842 | Input/Output: [[36.04723934879945 -56] -19.95276065120055]
Test Case: 843 | Input/Output: [[-94.18496210993041 67] -27.18496210993041]
Test Case: 844 | Input/Output: [[86.00740703471936 -64] 22.007407034719364]
Test Case: 845 | Input/Output: [[54.859927800762534 -48] 6.859927800762534]
Test Case: 846 | Input/Output: [[-41.62981096124274 -76] -117.62981096124274]
Test Case: 847 | Input/Output: [[-47.298053935684734 -3] -50.298053935684734]
Test Case: 848 | Input/Output: [[40.36717087411387 7] 47.36717087411387]
Test Case: 849 | Input/Output: [[-58.21680557705038 -62] -120.21680557705038]
Test Case: 850 | Input/Output: [[72.5003509887162 1] 73.5003509887162]
Test Case: 851 | Input/Output: [[-49.40088343500637 26] -23.40088343500637]
Test Case: 852 | Input/Output: [[-94.77871513335714 -69] -163.77871513335714]
Test Case: 853 | Input/Output: [[19.609507734500028 56] 75.60950773450003]
Test Case: 854 | Input/Output: [[89.95884822369081 -27] 62.95884822369081]
Test Case: 855 | Input/Output: [[-43.749879711682425 -55] -98.74987971168242]
Test Case: 856 | Input/Output: [[95.78824824941861 78] 173.78824824941861]
Test Case: 857 | Input/Output: [[6.393653030685613 -43] -36.60634696931439]
Test Case: 858 | Input/Output: [[9.014268257104234 4] 13.014268257104234]
Test Case: 859 | Input/Output: [[17.391090392871547 40] 57.39109039287155]
Test Case: 860 | Input/Output: [[48.67932576763192 98] 146.67932576763192]
Test Case: 861 | Input/Output: [[32.36612609349237 -28] 4.366126093492369]
Test Case: 862 | Input/Output: [[-38.490879516037204 1] -37.490879516037204]
Test Case: 863 | Input/Output: [[20.872159680265497 -72] -51.1278403197345]
Test Case: 864 | Input/Output: [[-10.9827083029477 49] 38.0172916970523]
Test Case: 865 | Input/Output: [[-73.69381503403139 86] 12.306184965968612]
Test Case: 866 | Input/Output: [[-10.727444627203255 -17] -27.727444627203255]
Test Case: 867 | Input/Output: [[62.782436099858984 -73] -10.217563900141016]
Test Case: 868 | Input/Output: [[1.8896135873631295 -7] -5.1103864126368705]
Test Case: 869 | Input/Output: [[-10.247393471219397 47] 36.7526065287806]
Test Case: 870 | Input/Output: [[46.31467292937535 80] 126.31467292937535]
Test Case: 871 | Input/Output: [[90.95668777480458 -61] 29.95668777480458]
Test Case: 872 | Input/Output: [[75.88631581727077 -14] 61.88631581727077]
Test Case: 873 | Input/Output: [[-6.143217589631476 -85] -91.14321758963148]
Test Case: 874 | Input/Output: [[57.50271023597722 11] 68.50271023597722]
Test Case: 875 | Input/Output: [[-14.75533316050435 29] 14.24466683949565]
Test Case: 876 | Input/Output: [[87.8011381673169 41] 128.8011381673169]
Test Case: 877 | Input/Output: [[-72.23812362556976 -89] -161.23812362556976]
Test Case: 878 | Input/Output: [[-44.95766127143121 -5] -49.95766127143121]
Test Case: 879 | Input/Output: [[-8.954036219230588 -12] -20.954036219230588]
Test Case: 880 | Input/Output: [[12.565061425965212 -78] -65.43493857403479]
Test Case: 881 | Input/Output: [[-68.13995485310676 -61] -129.13995485310676]
Test Case: 882 | Input/Output: [[96.86118431787233 35] 131.86118431787233]
Test Case: 883 | Input/Output: [[55.043067950816436 95] 150.04306795081644]
Test Case: 884 | Input/Output: [[-30.21494120316251 -11] -41.21494120316251]
Test Case: 885 | Input/Output: [[42.334658905661826 -76] -33.665341094338174]
Test Case: 886 | Input/Output: [[-61.412157082486644 68] 6.587842917513356]
Test Case: 887 | Input/Output: [[32.89865014561809 -12] 20.89865014561809]
Test Case: 888 | Input/Output: [[-37.46726566257248 42] 4.53273433742752]
Test Case: 889 | Input/Output: [[-86.9205540685242 26] -60.9205540685242]
Test Case: 890 | Input/Output: [[4.38057625696085 52] 56.38057625696085]
Test Case: 891 | Input/Output: [[78.05285157442697 -18] 60.05285157442697]
Test Case: 892 | Input/Output: [[77.6404765237707 5] 82.6404765237707]
Test Case: 893 | Input/Output: [[50.19595423572747 -21] 29.19595423572747]
Test Case: 894 | Input/Output: [[81.65822223810386 -47] 34.65822223810386]
Test Case: 895 | Input/Output: [[52.57482091265547 54] 106.57482091265547]
Test Case: 896 | Input/Output: [[57.14834314167564 80] 137.14834314167564]
Test Case: 897 | Input/Output: [[2.7242581239645034 45] 47.7242581239645]
Test Case: 898 | Input/Output: [[33.55194172417774 29] 62.55194172417774]
Test Case: 899 | Input/Output: [[61.91584184248131 -99] -37.08415815751869]
Test Case: 900 | Input/Output: [[-71.87672055103562 -79] -150.87672055103562]
Test Case: 901 | Input/Output: [[20.90826215199992 -50] -29.09173784800008]
Test Case: 902 | Input/Output: [[-88.56201938339818 33] -55.56201938339818]
Test Case: 903 | Input/Output: [[-8.542331037316785 -1] -9.542331037316785]
Test Case: 904 | Input/Output: [[53.88382948595799 25] 78.88382948595799]
Test Case: 905 | Input/Output: [[47.91313142156349 38] 85.91313142156349]
Test Case: 906 | Input/Output: [[96.70785204569262 54] 150.70785204569262]
Test Case: 907 | Input/Output: [[-22.141218214407402 37] 14.858781785592598]
Test Case: 908 | Input/Output: [[-72.49260643564956 -86] -158.49260643564958]
Test Case: 909 | Input/Output: [[-15.289187373273933 5] -10.289187373273933]
Test Case: 910 | Input/Output: [[-12.310371450197579 -25] -37.31037145019758]
Test Case: 911 | Input/Output: [[-67.6741298532541 -61] -128.6741298532541]
Test Case: 912 | Input/Output: [[65.63453212575482 40] 105.63453212575482]
Test Case: 913 | Input/Output: [[-77.11977728847023 -50] -127.11977728847023]
Test Case: 914 | Input/Output: [[-59.3505931549477 -43] -102.3505931549477]
Test Case: 915 | Input/Output: [[65.12492252877706 2] 67.12492252877706]
Test Case: 916 | Input/Output: [[97.61902337377529 61] 158.6190233737753]
Test Case: 917 | Input/Output: [[-77.84279022210632 -41] -118.84279022210632]
Test Case: 918 | Input/Output: [[-6.295622256883917 -69] -75.29562225688392]
Test Case: 919 | Input/Output: [[69.70715404842261 -43] 26.70715404842261]
Test Case: 920 | Input/Output: [[15.373503756116037 -29] -13.626496243883963]
Test Case: 921 | Input/Output: [[-92.23881975196346 -25] -117.23881975196346]
Test Case: 922 | Input/Output: [[-89.72880886803037 81] -8.72880886803037]
Test Case: 923 | Input/Output: [[-12.797704345623103 11] -1.797704345623103]
Test Case: 924 | Input/Output: [[-91.93176202791136 75] -16.93176202791136]
Test Case: 925 | Input/Output: [[-84.00232510461163 -6] -90.00232510461163]
Test Case: 926 | Input/Output: [[-11.525754919562957 68] 56.47424508043704]
Test Case: 927 | Input/Output: [[75.16468666373325 68] 143.16468666373325]
Test Case: 928 | Input/Output: [[-89.93362788776362 35] -54.93362788776362]
Test Case: 929 | Input/Output: [[-13.104631177803356 85] 71.89536882219664]
Test Case: 930 | Input/Output: [[-72.47969965270818 78] 5.520300347291823]
Test Case: 931 | Input/Output: [[-81.53137864371125 66] -15.53137864371125]
Test Case: 932 | Input/Output: [[-33.25506371620665 15] -18.25506371620665]
Test Case: 933 | Input/Output: [[41.27338121521919 -71] -29.72661878478081]
Test Case: 934 | Input/Output: [[-37.19518400262596 59] 21.804815997374043]
Test Case: 935 | Input/Output: [[76.358920811905 -76] 0.35892081190499425]
Test Case: 936 | Input/Output: [[-30.617885147764824 35] 4.382114852235176]
Test Case: 937 | Input/Output: [[95.52472226938596 100] 195.52472226938596]
Test Case: 938 | Input/Output: [[41.93887085145744 40] 81.93887085145744]
Test Case: 939 | Input/Output: [[-30.324515375713275 0] -30.324515375713275]
Test Case: 940 | Input/Output: [[-4.5452273032811235 45] 40.45477269671888]
Test Case: 941 | Input/Output: [[66.8611517906364 27] 93.8611517906364]
Test Case: 942 | Input/Output: [[63.07821703970703 -94] -30.921782960292973]
Test Case: 943 | Input/Output: [[42.23877850789475 17] 59.23877850789475]
Test Case: 944 | Input/Output: [[80.00361476786102 9] 89.00361476786102]
Test Case: 945 | Input/Output: [[97.82544884552124 36] 133.82544884552124]
Test Case: 946 | Input/Output: [[58.22444063561514 44] 102.22444063561514]
Test Case: 947 | Input/Output: [[24.771330143757936 40] 64.77133014375794]
Test Case: 948 | Input/Output: [[-55.70689387851277 71] 15.293106121487227]
Test Case: 949 | Input/Output: [[72.0950104987559 95] 167.0950104987559]
Test Case: 950 | Input/Output: [[-72.66164600300411 30] -42.66164600300411]
Test Case: 951 | Input/Output: [[26.22206944578987 57] 83.22206944578987]
Test Case: 952 | Input/Output: [[-12.811791926048514 13] 0.1882080739514862]
Test Case: 953 | Input/Output: [[-56.981308584500724 78] 21.018691415499276]
Test Case: 954 | Input/Output: [[-42.454230941352236 -60] -102.45423094135224]
Test Case: 955 | Input/Output: [[-9.163190670008262 96] 86.83680932999174]
Test Case: 956 | Input/Output: [[-52.03472298118905 -8] -60.03472298118905]
Test Case: 957 | Input/Output: [[-83.89223433892126 -80] -163.89223433892124]
Test Case: 958 | Input/Output: [[-52.116382737191216 39] -13.116382737191216]
Test Case: 959 | Input/Output: [[63.23144210128032 98] 161.23144210128032]
Test Case: 960 | Input/Output: [[-74.15646468733736 94] 19.843535312662638]
Test Case: 961 | Input/Output: [[34.754709668196284 85] 119.75470966819628]
Test Case: 962 | Input/Output: [[-13.77882018419838 -79] -92.77882018419838]
Test Case: 963 | Input/Output: [[-37.5740139412911 8] -29.5740139412911]
Test Case: 964 | Input/Output: [[-18.184283739614244 83] 64.81571626038576]
Test Case: 965 | Input/Output: [[91.55765625333555 -86] 5.557656253335551]
Test Case: 966 | Input/Output: [[-24.798939964928863 -81] -105.79893996492886]
Test Case: 967 | Input/Output: [[-9.036981401713248 42] 32.96301859828675]
Test Case: 968 | Input/Output: [[-60.98663613299473 25] -35.98663613299473]
Test Case: 969 | Input/Output: [[91.2119364389082 14] 105.2119364389082]
Test Case: 970 | Input/Output: [[-0.15308993696983464 19] 18.846910063030165]
Test Case: 971 | Input/Output: [[-58.07763744458341 37] -21.07763744458341]
Test Case: 972 | Input/Output: [[-22.80848520756213 37] 14.191514792437872]
Test Case: 973 | Input/Output: [[-34.1980934491509 -10] -44.1980934491509]
Test Case: 974 | Input/Output: [[-40.958191884203174 -51] -91.95819188420317]
Test Case: 975 | Input/Output: [[-97.27424378836854 -96] -193.27424378836855]
Test Case: 976 | Input/Output: [[-98.88451003189023 15] -83.88451003189023]
Test Case: 977 | Input/Output: [[84.85059688362833 -4] 80.85059688362833]
Test Case: 978 | Input/Output: [[-76.85938084272121 18] -58.85938084272121]
Test Case: 979 | Input/Output: [[5.7228681758030575 -22] -16.277131824196942]
Test Case: 980 | Input/Output: [[9.66553520761562 66] 75.66553520761562]
Test Case: 981 | Input/Output: [[26.821233669494134 24] 50.821233669494134]
Test Case: 982 | Input/Output: [[17.406780973768036 -97] -79.59321902623196]
Test Case: 983 | Input/Output: [[-41.29448906608235 43] 1.705510933917651]
Test Case: 984 | Input/Output: [[42.86598836041952 -63] -20.13401163958048]
Test Case: 985 | Input/Output: [[35.18027079172293 -4] 31.180270791722933]
Test Case: 986 | Input/Output: [[-77.05514741039295 -34] -111.05514741039295]
Test Case: 987 | Input/Output: [[-73.30645274683278 -44] -117.30645274683278]
Test Case: 988 | Input/Output: [[-91.35092083137172 54] -37.350920831371724]
Test Case: 989 | Input/Output: [[-75.41917408205585 -27] -102.41917408205585]
Test Case: 990 | Input/Output: [[67.79957184994208 26] 93.79957184994208]
Test Case: 991 | Input/Output: [[-43.08489234948141 90] 46.91510765051859]
Test Case: 992 | Input/Output: [[46.5238645190955 -16] 30.523864519095497]
Test Case: 993 | Input/Output: [[38.56783079329969 65] 103.56783079329969]
Test Case: 994 | Input/Output: [[72.61268912725774 -48] 24.612689127257738]
Test Case: 995 | Input/Output: [[-93.625163234365 -32] -125.625163234365]
Test Case: 996 | Input/Output: [[4.018664351783727 -12] -7.981335648216273]
Test Case: 997 | Input/Output: [[-80.14226292928268 -58] -138.14226292928268]
Test Case: 998 | Input/Output: [[-50.815802104242344 -20] -70.81580210424235]
Test Case: 999 | Input/Output: [[36.714588957610516 -41] -4.285411042389484]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -99 101 -24 -2 -7 -88 86 51 -98 -105 -91 106 -76 -21 59 10
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 72306.25730000011
Test mean error for best: 36.15313
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -31           
Correct output: -80.8416452312 | Program output: -28           
Correct output: -30.9193529897 | Program output: -50           
Correct output: -129.2709853231 | Program output: -78           
Correct output: -142.6109625327 | Program output: -60           
Correct output: -28.4603903776 | Program output: 0             
Correct output: 119.1092560212 | Program output: 0             
Correct output: -2.804364668   | Program output: -47           
Correct output: -163.7806987108 | Program output: -86           
Correct output: 19.3664379282  | Program output: 0             
Correct output: -28.7661462515 | Program output: -86           
Correct output: -2.9798498499  | Program output: 0             
Correct output: -97.3585137143 | Program output: -59           
Correct output: -94.0867625621 | Program output: -85           
Correct output: -53.340003998  | Program output: -60           
Correct output: -171.739275996 | Program output: -98           
Correct output: -113.6467160746 | Program output: -78           
Correct output: -99.4921227055 | Program output: -36           
Correct output: -67.9651207486 | Program output: -35           
Correct output: -109.3549767957 | Program output: -94           
Correct output: 14.5017756451  | Program output: -53           
Correct output: -110.8403243704 | Program output: -28           
Correct output: -11.4606904356 | Program output: -36           
Correct output: -32.4173586228 | Program output: -24           
Correct output: -28.3791179266 | Program output: -79           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction integer_sub} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction print_integer} {:instruction tagged_263} {:instruction integer_rot})
Best program: (tagged_947 float_pop integer_sub float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup print_integer tagged_263 integer_rot)
Errors: [28.6359 12 52.8416 12 19.0806 12 51.271 12 82.611 12 28.4604 13 119.1093 13 44.1956 10 77.7807 12 19.3664 13 57.2339 11 2.9798 13 38.3585 12 9.0868 11 6.66 11 73.7393 12 35.6467 13 63.4921 13 32.9651 12 15.355 12 67.5018 12 82.8403 13 24.5393 11 8.4174 11 50.6209 11]
Total: 1391.7893999999997
Mean: 27.835789
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 18130.8374651
Median total errors in population: 25350.0
Error averages by case: (708.426529699999 13.031 713.310659000001 12.977 700.3399328000006 13.736 728.2507348999987 13.897 731.5156799000002 13.796 694.386409599999 13.067 710.7671066000016 13.077 697.0812689000004 12.145 736.2208086000005 13.81 695.274997700001 13.066 704.8804238000006 13.775 694.4325966999979 12.394 719.0784945999975 13.125 718.8687521000007 12.957 702.5233582000002 12.919 737.4365716000013 13.153 723.2190761000011 13.917 718.9319746 13.138 710.7106630999992 13.036 723.1517249999986 13.787 702.2532939000004 12.295 721.615568500001 13.826 699.6866604999999 13.645 703.1957568000003 13.048 703.8374219000004 13.824)
Error minima by case: (0.2597 1 1.7672 2 0.9194 8 27.5536 2 21.7864 2 0.6475 2 3.0 2 0.582 7 9.0438 2 4.3664 8 0.9532 9 0.7575 2 0.8673 1 0.7251 1 0.1818 9 25.0853 2 13.6467 3 0.4921 2 0.0349 2 9.355 2 0.3027 2 10.8403 2 0.341 8 0.5826 2 0.5662 9)
Average genome size in population (length): 50.116
Average program size in population (points): 51.116
Average percent parens in population: 0.043
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.306
Error (vector) diversity:			 0.333
Behavioral diversity:				 0.353
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1257100
--- Timings ---
Current time: 1529615473596 milliseconds
Total Time:           3.3 seconds
Initialization:       0.1 seconds,  3.3%
Reproduction:         0.6 seconds, 17.4%
Fitness Testing:      2.6 seconds, 79.3%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 72306.25730000011
Test mean error for best: 36.15313
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -31           
Correct output: -80.8416452312 | Program output: -28           
Correct output: -30.9193529897 | Program output: -50           
Correct output: -129.2709853231 | Program output: -78           
Correct output: -142.6109625327 | Program output: -60           
Correct output: -28.4603903776 | Program output: 0             
Correct output: 119.1092560212 | Program output: 0             
Correct output: -2.804364668   | Program output: -47           
Correct output: -163.7806987108 | Program output: -86           
Correct output: 19.3664379282  | Program output: 0             
Correct output: -28.7661462515 | Program output: -86           
Correct output: -2.9798498499  | Program output: 0             
Correct output: -97.3585137143 | Program output: -59           
Correct output: -94.0867625621 | Program output: -85           
Correct output: -53.340003998  | Program output: -60           
Correct output: -171.739275996 | Program output: -98           
Correct output: -113.6467160746 | Program output: -78           
Correct output: -99.4921227055 | Program output: -36           
Correct output: -67.9651207486 | Program output: -35           
Correct output: -109.3549767957 | Program output: -94           
Correct output: 14.5017756451  | Program output: -53           
Correct output: -110.8403243704 | Program output: -28           
Correct output: -11.4606904356 | Program output: -36           
Correct output: -32.4173586228 | Program output: -24           
Correct output: -28.3791179266 | Program output: -79           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction integer_sub} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction print_integer} {:instruction tagged_263} {:instruction integer_rot})
Best program: (tagged_947 float_pop integer_sub float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup print_integer tagged_263 integer_rot)
Errors: [28.6359 12 52.8416 12 19.0806 12 51.271 12 82.611 12 28.4604 13 119.1093 13 44.1956 10 77.7807 12 19.3664 13 57.2339 11 2.9798 13 38.3585 12 9.0868 11 6.66 11 73.7393 12 35.6467 13 63.4921 13 32.9651 12 15.355 12 67.5018 12 82.8403 13 24.5393 11 8.4174 11 50.6209 11]
Total: 1391.7893999999997
Mean: 27.835789
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 6121.162058300007
Median total errors in population: 1786.8063000000002
Error averages by case: (217.6987744999982 10.64 229.18074180000266 10.597 210.83195319999945 12.731 259.3738961000012 11.382 267.3106254000016 11.234 210.0923273000011 10.711 253.13317540000176 10.985 210.80187020000048 11.241 280.7688445000012 11.277 215.9428066 12.165 227.12176879999973 12.515 218.02762820000015 10.418 239.45840240000086 10.835 237.80469289999849 10.354 214.05961010000004 11.891 285.8417965999977 10.908 249.8031761000023 11.5 240.38161740000118 10.957 221.9557563000004 10.684 247.6045403000019 11.169 221.64108619999922 10.325 247.27030320000202 11.475 205.26403740000015 12.356 204.16219490000117 10.617 223.9304325000003 12.733)
Error minima by case: (0.2597 1 1.7672 2 0.9194 8 27.5536 2 21.7864 2 0.6475 2 9.1093 2 0.582 7 9.0438 2 4.3664 9 0.9532 9 0.7575 2 1.6415 1 0.7251 1 0.1818 9 25.0853 2 13.6467 3 0.4921 2 0.0349 2 9.355 2 0.4982 2 10.8403 2 0.341 9 0.5826 2 0.5662 9)
Average genome size in population (length): 57.614
Average program size in population (points): 58.614
Average percent parens in population: 0.022
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.498
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.773
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.773
Total error diversity:				 0.275
Error (vector) diversity:			 0.285
Behavioral diversity:				 0.309
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2702204
--- Timings ---
Current time: 1529615478119 milliseconds
Total Time:           7.9 seconds
Initialization:       0.1 seconds,  1.4%
Reproduction:         2.5 seconds, 31.8%
Fitness Testing:      4.9 seconds, 62.5%
Report:               0.3 seconds,  4.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 72306.25730000011
Test mean error for best: 36.15313
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -31           
Correct output: -80.8416452312 | Program output: -28           
Correct output: -30.9193529897 | Program output: -50           
Correct output: -129.2709853231 | Program output: -78           
Correct output: -142.6109625327 | Program output: -60           
Correct output: -28.4603903776 | Program output: 0             
Correct output: 119.1092560212 | Program output: 0             
Correct output: -2.804364668   | Program output: -47           
Correct output: -163.7806987108 | Program output: -86           
Correct output: 19.3664379282  | Program output: 0             
Correct output: -28.7661462515 | Program output: -86           
Correct output: -2.9798498499  | Program output: 0             
Correct output: -97.3585137143 | Program output: -59           
Correct output: -94.0867625621 | Program output: -85           
Correct output: -53.340003998  | Program output: -60           
Correct output: -171.739275996 | Program output: -98           
Correct output: -113.6467160746 | Program output: -78           
Correct output: -99.4921227055 | Program output: -36           
Correct output: -67.9651207486 | Program output: -35           
Correct output: -109.3549767957 | Program output: -94           
Correct output: 14.5017756451  | Program output: -53           
Correct output: -110.8403243704 | Program output: -28           
Correct output: -11.4606904356 | Program output: -36           
Correct output: -32.4173586228 | Program output: -24           
Correct output: -28.3791179266 | Program output: -79           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction integer_sub} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction print_integer} {:instruction tagged_263} {:instruction integer_rot})
Best program: (tagged_947 float_pop integer_sub float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup print_integer tagged_263 integer_rot)
Errors: [28.6359 12 52.8416 12 19.0806 12 51.271 12 82.611 12 28.4604 13 119.1093 13 44.1956 10 77.7807 12 19.3664 13 57.2339 11 2.9798 13 38.3585 12 9.0868 11 6.66 11 73.7393 12 35.6467 13 63.4921 13 32.9651 12 15.355 12 67.5018 12 82.8403 13 24.5393 11 8.4174 11 50.6209 11]
Total: 1391.7893999999997
Mean: 27.835789
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 4844.731047900009
Median total errors in population: 1453.0565999999997
Error averages by case: (165.58409249999764 11.433 182.54374580000274 11.512 161.498049999999 12.418 192.75457580000037 11.907 213.062294700002 11.851 179.79405610000177 11.62 183.16919380000084 12.114 179.3941359000026 10.591 215.15917820000178 11.785 176.53080830000047 12.137 191.20735959999962 11.7 190.8187126000006 11.378 178.45056610000114 11.548 161.55872349999976 10.843 151.05432540000172 11.414 214.71818979999674 11.58 180.61273810000148 12.417 192.80477120000182 12.125 169.38369420000075 11.512 168.44271200000074 11.791 197.26429739999884 11.284 205.8022876000023 12.446 164.52293610000112 11.826 150.65290550000168 10.881 185.9966977000006 11.837)
Error minima by case: (0.2597 1 1.7672 2 4.9553 9 29.271 2 42.611 2 2.4963 2 20.1093 2 1.1956 8 63.7807 3 16.3664 9 2.8021 9 1.9798 2 2.5467 2 0.7251 1 0.1818 9 71.7393 2 13.6467 3 0.5079 2 0.0349 2 9.355 2 12.5018 2 10.8403 3 1.4607 9 3.6526 2 2.4151 9)
Average genome size in population (length): 49.013
Average program size in population (points): 50.013
Average percent parens in population: 0.026
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.994
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.658
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.658
Total error diversity:				 0.133
Error (vector) diversity:			 0.141
Behavioral diversity:				 0.157
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3931779
--- Timings ---
Current time: 1529615481218 milliseconds
Total Time:          11.0 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         4.2 seconds, 37.6%
Fitness Testing:      6.2 seconds, 55.9%
Report:               0.6 seconds,  5.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 70683.85130000007
Test mean error for best: 35.34193
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -31.0         
Correct output: -80.8416452312 | Program output: -28.0         
Correct output: -30.9193529897 | Program output: -50.0         
Correct output: -129.2709853231 | Program output: -78.0         
Correct output: -142.6109625327 | Program output: -60.0         
Correct output: -28.4603903776 | Program output: 3.0           
Correct output: 119.1092560212 | Program output: 3.0           
Correct output: -2.804364668   | Program output: -47.0         
Correct output: -163.7806987108 | Program output: -86.0         
Correct output: 19.3664379282  | Program output: 3.0           
Correct output: -28.7661462515 | Program output: -86.0         
Correct output: -2.9798498499  | Program output: 3.0           
Correct output: -97.3585137143 | Program output: -59.0         
Correct output: -94.0867625621 | Program output: -85.0         
Correct output: -53.340003998  | Program output: -60.0         
Correct output: -171.739275996 | Program output: -98.0         
Correct output: -113.6467160746 | Program output: -78.0         
Correct output: -99.4921227055 | Program output: -36.0         
Correct output: -67.9651207486 | Program output: -35.0         
Correct output: -109.3549767957 | Program output: -94.0         
Correct output: 14.5017756451  | Program output: -53.0         
Correct output: -110.8403243704 | Program output: -28.0         
Correct output: -11.4606904356 | Program output: -36.0         
Correct output: -32.4173586228 | Program output: -24.0         
Correct output: -28.3791179266 | Program output: -79.0         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction print_float} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_tan} {:instruction in2} {:instruction integer_mult} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction float_cos} {:instruction float_swap} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction float_tan} {:instruction float_inc} {:instruction in1})
Best program: (integer_sub print_float integer_rot integer_inc float_tan in2 integer_mult in1 integer_flush float_pop integer_dec float_stackdepth tag_float_835 float_cos float_swap float_sin integer_yankdup integer_rot integer_add float_dec float_dup_items float_tan integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan integer_mult float_inc float_sin integer_stackdepth float_add integer_inc integer_dup_items in2 integer_mult float_rot integer_mod in2 integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float float_tan float_inc in1)
Errors: [28.6359 11 52.8416 12 19.0806 11 51.271 12 82.611 12 31.4604 12 116.1093 12 44.1956 10 77.7807 11 16.3664 12 57.2339 11 5.9798 12 38.3585 12 9.0868 11 6.66 10 73.7393 12 35.6467 12 63.4921 11 32.9651 11 15.355 12 67.5018 12 82.8403 12 24.5393 11 8.4174 11 50.6209 11]
Total: 1378.7894
Mean: 27.575788
Genome size: 75
Size: 76
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 4260.924030500008
Median total errors in population: 1440.0565999999997
Error averages by case: (146.14877659999723 12.172 167.2072416000025 12.331 137.95251000000027 12.165 167.53839599999927 12.466 194.4072360000023 12.45 146.06053389999997 12.496 171.20431140000025 12.86 159.213260000003 10.339 191.04889320000206 12.265 135.59310989999992 12.518 171.51581500000052 11.473 140.75483030000072 12.386 155.60504600000135 12.38 130.83703680000147 11.465 127.74768000000222 11.204 187.9406267999972 12.331 153.85150920000012 13.163 176.81007960000218 12.887 150.04249740000094 12.179 136.6519799999991 12.448 179.6015803999986 12.036 193.48610280000216 13.148 142.14740500000136 11.524 128.24580760000185 11.472 165.6847649999999 11.469)
Error minima by case: (14.3641 11 6.8416 10 11.0806 10 50.271 10 68.611 11 27.4604 10 21.1093 11 1.8044 9 76.7807 9 14.6336 11 27.7661 9 1.9798 10 23.3585 10 8.0868 9 5.66 10 72.7393 10 34.6467 11 25.4921 11 6.0349 11 14.355 11 13.5018 10 36.8403 11 10.4607 9 7.4174 10 27.3791 9)
Average genome size in population (length): 37.808
Average program size in population (points): 38.808
Average percent parens in population: 0.035
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.49225
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 156
Genome diversity (% unique Plush genomes):	 0.526
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 156
Syntactic diversity (% unique Push programs):	 0.526
Total error diversity:				 0.051
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4880279
--- Timings ---
Current time: 1529615484089 milliseconds
Total Time:          13.6 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.6 seconds, 41.1%
Fitness Testing:      7.1 seconds, 52.0%
Report:               0.8 seconds,  6.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 70683.85130000007
Test mean error for best: 35.34193
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -31.0         
Correct output: -80.8416452312 | Program output: -28.0         
Correct output: -30.9193529897 | Program output: -50.0         
Correct output: -129.2709853231 | Program output: -78.0         
Correct output: -142.6109625327 | Program output: -60.0         
Correct output: -28.4603903776 | Program output: 3.0           
Correct output: 119.1092560212 | Program output: 3.0           
Correct output: -2.804364668   | Program output: -47.0         
Correct output: -163.7806987108 | Program output: -86.0         
Correct output: 19.3664379282  | Program output: 3.0           
Correct output: -28.7661462515 | Program output: -86.0         
Correct output: -2.9798498499  | Program output: 3.0           
Correct output: -97.3585137143 | Program output: -59.0         
Correct output: -94.0867625621 | Program output: -85.0         
Correct output: -53.340003998  | Program output: -60.0         
Correct output: -171.739275996 | Program output: -98.0         
Correct output: -113.6467160746 | Program output: -78.0         
Correct output: -99.4921227055 | Program output: -36.0         
Correct output: -67.9651207486 | Program output: -35.0         
Correct output: -109.3549767957 | Program output: -94.0         
Correct output: 14.5017756451  | Program output: -53.0         
Correct output: -110.8403243704 | Program output: -28.0         
Correct output: -11.4606904356 | Program output: -36.0         
Correct output: -32.4173586228 | Program output: -24.0         
Correct output: -28.3791179266 | Program output: -79.0         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_sub} {:instruction float_rot} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_sin} {:instruction integer_add} {:instruction integer_flush} {:instruction float_pop} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction float_cos} {:instruction float_swap} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction tagged_874} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_dup_times})
Best program: (in1 integer_sub float_rot float_dup float_dup integer_inc float_frominteger integer_add float_frominteger float_sub float_sin integer_add integer_flush float_pop integer_dec float_stackdepth tag_float_835 float_cos float_swap float_sin integer_yankdup integer_rot integer_add float_dec float_dup_items float_tan integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_dup_times float_inc integer_inc float_yankdup float_tan integer_mult float_inc float_sin integer_stackdepth float_add integer_inc integer_dup_items in2 integer_mult float_rot integer_mod in2 integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float float_tan float_inc in1 integer_yankdup float_inc integer_max tagged_874 float_max float_dup_times integer_sub float_dup_times)
Errors: [28.6359 11 52.8416 12 19.0806 11 51.271 12 82.611 12 31.4604 12 116.1093 12 44.1956 10 77.7807 11 16.3664 12 57.2339 11 5.9798 12 38.3585 12 9.0868 11 6.66 10 73.7393 12 35.6467 12 63.4921 11 32.9651 11 15.355 12 67.5018 12 82.8403 12 24.5393 11 8.4174 11 50.6209 11]
Total: 1378.7894
Mean: 27.575788
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2786.8242057999914
Median total errors in population: 1391.7893999999997
Error averages by case: (86.26138189999939 12.106 108.99994559999979 12.15 77.11807140000072 12.104 108.17001099999813 12.219 137.4269510000015 12.215 80.0301303000009 12.995 160.49275249999968 12.994 100.17175640000144 10.154 133.22063870000198 12.169 70.89837469999941 12.882 112.5049541000019 11.225 57.483924600000535 12.905 95.77334850000102 12.165 68.56767879999929 11.221 65.79254000000132 11.11 129.57368130000086 12.158 93.46754469999864 13.105 119.12406610000197 12.999 90.3861591000009 12.106 74.5830550000009 12.214 121.93019019999856 12.042 137.2287222999996 13.103 82.00761669999945 11.229 67.23510379999914 11.224 106.36560709999891 11.216)
Error minima by case: (2.6359 11 23.8416 11 19.0806 11 51.271 11 82.611 11 25.5396 10 22.1093 11 2.8044 8 77.7807 10 0.6336 12 25.2339 10 2.9798 10 38.3585 11 9.0868 10 0.66 10 73.7393 11 35.6467 12 42.4921 11 10.9651 11 15.355 11 5.4982 11 53.8403 11 11.4607 10 8.4174 10 25.6209 9)
Average genome size in population (length): 28.796
Average program size in population (points): 29.796
Average percent parens in population: 0.038
Minimum age in population: 4.0
Maximum age in population: 7.875
Average age in population: 5.996875
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 324
Genome diversity (% unique Plush genomes):	 0.43
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 324
Syntactic diversity (% unique Push programs):	 0.43
Total error diversity:				 0.021
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5601229
--- Timings ---
Current time: 1529615486985 milliseconds
Total Time:          16.5 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.2 seconds, 43.9%
Fitness Testing:      7.8 seconds, 47.4%
Report:               1.3 seconds,  8.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 70683.85130000007
Test mean error for best: 35.34193
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -31.0         
Correct output: -80.8416452312 | Program output: -28.0         
Correct output: -30.9193529897 | Program output: -50.0         
Correct output: -129.2709853231 | Program output: -78.0         
Correct output: -142.6109625327 | Program output: -60.0         
Correct output: -28.4603903776 | Program output: 3.0           
Correct output: 119.1092560212 | Program output: 3.0           
Correct output: -2.804364668   | Program output: -47.0         
Correct output: -163.7806987108 | Program output: -86.0         
Correct output: 19.3664379282  | Program output: 3.0           
Correct output: -28.7661462515 | Program output: -86.0         
Correct output: -2.9798498499  | Program output: 3.0           
Correct output: -97.3585137143 | Program output: -59.0         
Correct output: -94.0867625621 | Program output: -85.0         
Correct output: -53.340003998  | Program output: -60.0         
Correct output: -171.739275996 | Program output: -98.0         
Correct output: -113.6467160746 | Program output: -78.0         
Correct output: -99.4921227055 | Program output: -36.0         
Correct output: -67.9651207486 | Program output: -35.0         
Correct output: -109.3549767957 | Program output: -94.0         
Correct output: 14.5017756451  | Program output: -53.0         
Correct output: -110.8403243704 | Program output: -28.0         
Correct output: -11.4606904356 | Program output: -36.0         
Correct output: -32.4173586228 | Program output: -24.0         
Correct output: -28.3791179266 | Program output: -79.0         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_add} {:instruction integer_mod} {:instruction in2} {:instruction float_sub} {:instruction integer_div} {:instruction integer_shove} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_max} {:instruction float_min} {:instruction float_sub} {:instruction float_mult} {:instruction float_min} {:instruction integer_dup} {:instruction integer_max} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_yank} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction float_add} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction float_tan} {:instruction float_inc})
Best program: (in2 integer_add integer_mod in2 float_sub integer_div integer_shove integer_yank integer_shove integer_swap integer_max float_min float_sub float_mult float_min integer_dup integer_max float_frominteger float_pop print_integer float_inc float_cos integer_yank integer_min float_max float_dec float_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan integer_mult float_inc float_sin integer_stackdepth integer_dec integer_inc integer_dup_items in2 integer_mult float_rot integer_mod in2 integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float float_add in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float float_tan float_inc)
Errors: [28.6359 11 52.8416 12 19.0806 11 51.271 12 82.611 12 31.4604 12 116.1093 12 44.1956 10 77.7807 11 16.3664 12 57.2339 11 5.9798 12 38.3585 12 9.0868 11 6.66 10 73.7393 12 35.6467 12 63.4921 11 32.9651 11 15.355 12 67.5018 12 82.8403 12 24.5393 11 8.4174 11 50.6209 11]
Total: 1378.7894
Mean: 27.575788
Genome size: 80
Size: 81
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3492.0093386999947
Median total errors in population: 1391.7893999999997
Error averages by case: (114.78294079999803 12.054 136.78053920000053 12.17 105.68328320000074 12.063 136.4051519999981 12.284 164.63623200000168 12.274 109.14210759999933 12.962 188.13022810000163 12.938 127.52956320000207 10.184 160.765998400002 12.157 100.04347039999936 12.797 139.68996080000164 11.309 87.20743620000057 12.839 124.25395200000098 12.2 98.0941616000011 11.283 95.09520000000158 11.063 157.35624159999873 12.195 122.15579039999871 13.054 146.66279520000202 12.835 118.7971712000009 12.054 104.01775999999893 12.283 148.51163799999853 12.063 164.13935360000167 13.04 110.15226960000089 11.285 96.18866880000115 11.304 133.79042479999853 11.307)
Error minima by case: (26.6359 8 50.8416 6 11.0806 11 49.271 8 80.611 7 28.4604 6 22.1093 6 2.8044 9 75.7807 7 14.6336 11 28.7661 10 2.9798 6 36.3585 7 7.0868 7 1.66 9 71.7393 7 33.6467 7 61.4921 8 30.9651 8 13.355 7 14.5018 8 80.8403 7 11.4607 10 6.4174 7 28.3791 9)
Average genome size in population (length): 33.129
Average program size in population (points): 34.129
Average percent parens in population: 0.036
Minimum age in population: 5.4375
Maximum age in population: 9.3125
Average age in population: 7.43525
Median age in population: 7.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 241
Genome diversity (% unique Plush genomes):	 0.531
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 241
Syntactic diversity (% unique Push programs):	 0.531
Total error diversity:				 0.02
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6430204
--- Timings ---
Current time: 1529615489685 milliseconds
Total Time:          19.3 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.7 seconds, 45.2%
Fitness Testing:      8.6 seconds, 44.6%
Report:               1.9 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 71053.72930000005
Test mean error for best: 35.52686
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -33.0         
Correct output: -80.8416452312 | Program output: -30.0         
Correct output: -30.9193529897 | Program output: -52.0         
Correct output: -129.2709853231 | Program output: -80.0         
Correct output: -142.6109625327 | Program output: -62.0         
Correct output: -28.4603903776 | Program output: 1.0           
Correct output: 119.1092560212 | Program output: 1.0           
Correct output: -2.804364668   | Program output: -49.0         
Correct output: -163.7806987108 | Program output: -88.0         
Correct output: 19.3664379282  | Program output: 1.0           
Correct output: -28.7661462515 | Program output: -88.0         
Correct output: -2.9798498499  | Program output: 1.0           
Correct output: -97.3585137143 | Program output: -61.0         
Correct output: -94.0867625621 | Program output: -87.0         
Correct output: -53.340003998  | Program output: -62.0         
Correct output: -171.739275996 | Program output: -100.0        
Correct output: -113.6467160746 | Program output: -80.0         
Correct output: -99.4921227055 | Program output: -38.0         
Correct output: -67.9651207486 | Program output: -37.0         
Correct output: -109.3549767957 | Program output: -96.0         
Correct output: 14.5017756451  | Program output: -55.0         
Correct output: -110.8403243704 | Program output: -30.0         
Correct output: -11.4606904356 | Program output: -38.0         
Correct output: -32.4173586228 | Program output: -26.0         
Correct output: -28.3791179266 | Program output: -81.0         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_add} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction float_tan} {:instruction float_inc} {:instruction in1})
Best program: (tagged_947 float_pop float_sin float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_pop print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items integer_flush float_inc float_add float_yankdup float_tan integer_mult float_add float_sin integer_stackdepth float_add integer_inc in2 integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float float_tan float_inc in1)
Errors: [26.6359 10 50.8416 11 21.0806 11 49.271 12 80.611 11 29.4604 12 118.1093 11 46.1956 10 75.7807 11 18.3664 11 59.2339 11 3.9798 12 36.3585 12 7.0868 11 8.66 10 71.7393 11 33.6467 12 61.4921 11 30.9651 10 13.355 12 69.5018 11 80.8403 11 26.5393 11 6.4174 11 52.6209 11]
Total: 1355.7894
Mean: 27.115788
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 4049.2636296999995
Median total errors in population: 1391.7893999999997
Error averages by case: (137.56724589999706 11.701 158.81274910000246 12.182 128.3343394000008 11.749 159.249214699999 12.312 186.59313460000234 12.293 133.0375962999992 12.559 208.14511150000246 12.548 149.0765595000032 10.2 183.12682830000222 11.84 122.1704405999993 12.419 160.87727190000066 11.379 111.71174590000072 12.428 147.21091470000144 12.217 122.09764500000148 11.324 118.63656270000227 10.723 180.07506509999695 12.194 145.37483629999977 12.692 168.61055150000232 12.097 141.45157550000096 11.698 128.0298066999986 12.336 169.25502449999857 12.034 185.48159340000237 12.659 132.43414310000136 11.329 119.0019656000021 11.35 155.26270789999958 11.376)
Error minima by case: (22.6359 2 28.0 2 5.0806 8 48.271 3 60.0 2 7.5396 2 22.1093 3 1.8044 8 74.7807 3 1.3664 11 7.2339 10 1.9798 2 35.3585 2 6.0868 1 1.66 9 70.7393 2 32.6467 3 36.0 2 29.9651 2 12.355 2 3.4982 2 28.0 3 5.5393 10 3.5826 2 7.6209 9)
Average genome size in population (length): 54.921
Average program size in population (points): 55.921
Average percent parens in population: 0.025
Minimum age in population: 6.4375
Maximum age in population: 10.84375
Average age in population: 8.8724375
Median age in population: 8.9375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.706
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.706
Total error diversity:				 0.042
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7803979
--- Timings ---
Current time: 1529615493020 milliseconds
Total Time:          22.6 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.4 seconds, 46.1%
Fitness Testing:      9.8 seconds, 43.3%
Report:               2.3 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 71129.29970000006
Test mean error for best: 35.56465
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -36.0         
Correct output: -80.8416452312 | Program output: -33.0         
Correct output: -30.9193529897 | Program output: -55.0         
Correct output: -129.2709853231 | Program output: -83.0         
Correct output: -142.6109625327 | Program output: -65.0         
Correct output: -28.4603903776 | Program output: 1.0           
Correct output: 119.1092560212 | Program output: 1.0           
Correct output: -2.804364668   | Program output: -52.0         
Correct output: -163.7806987108 | Program output: -91.0         
Correct output: 19.3664379282  | Program output: 1.0           
Correct output: -28.7661462515 | Program output: -91.0         
Correct output: -2.9798498499  | Program output: 1.0           
Correct output: -97.3585137143 | Program output: -64.0         
Correct output: -94.0867625621 | Program output: -90.0         
Correct output: -53.340003998  | Program output: -65.0         
Correct output: -171.739275996 | Program output: -103.0        
Correct output: -113.6467160746 | Program output: -83.0         
Correct output: -99.4921227055 | Program output: -41.0         
Correct output: -67.9651207486 | Program output: -40.0         
Correct output: -109.3549767957 | Program output: -99.0         
Correct output: 14.5017756451  | Program output: -58.0         
Correct output: -110.8403243704 | Program output: -33.0         
Correct output: -11.4606904356 | Program output: -41.0         
Correct output: -32.4173586228 | Program output: -29.0         
Correct output: -28.3791179266 | Program output: -84.0         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_pop} {:instruction integer_mod} {:instruction in1} {:instruction integer_sub} {:instruction float_rot} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_sin} {:instruction integer_add} {:instruction integer_flush} {:instruction float_pop} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction float_cos} {:instruction float_swap} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush})
Best program: (in2 integer_pop integer_mod in1 integer_sub float_rot float_dup float_dup integer_inc float_frominteger integer_add float_frominteger float_sub float_sin integer_add integer_flush float_pop integer_dec float_stackdepth tag_float_835 float_cos float_swap float_sin integer_yankdup integer_rot integer_add integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan integer_mult float_inc float_sin integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add integer_inc integer_dup_items in2 integer_mult float_rot integer_mod in2 integer_stackdepth float_yankdup integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush)
Errors: [23.6359 11 47.8416 12 24.0806 12 46.271 12 77.611 12 29.4604 12 118.1093 11 49.1956 9 72.7807 12 18.3664 11 62.2339 12 3.9798 12 33.3585 12 4.0868 10 11.66 10 68.7393 11 30.6467 11 58.4921 10 27.9651 11 10.355 12 72.5018 12 77.8403 11 29.5393 10 3.4174 12 55.6209 12]
Total: 1339.7894
Mean: 26.795788
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3008.9387531
Median total errors in population: 1378.7894
Error averages by case: (95.15990749999933 11.123 117.5414071999998 12.005 85.16420070000068 11.235 118.35965289999797 12.108 146.92047590000155 12.076 95.26716480000061 11.984 169.24451810000002 11.985 106.58081670000118 10.087 143.35753360000191 11.211 81.76658269999942 11.994 118.86802390000177 11.247 73.85712160000058 11.93 105.44902820000108 12.056 79.17428349999952 11.131 75.42646390000124 10.176 140.29392270000028 12.013 103.8091536999987 12.121 127.816543600002 11.182 99.2017469000009 11.116 85.65816050000055 12.16 127.68907169999858 11.894 145.51040639999985 12.047 89.22938379999978 11.158 76.00623229999945 11.19 113.10595029999905 11.252)
Error minima by case: (23.6359 2 28.0 2 5.9014 9 46.271 3 60.0 2 6.9712 2 21.1093 3 0.1956 8 72.7807 3 1.3664 10 8.2339 10 1.9798 2 33.3585 2 4.0868 1 0.66 9 68.7393 2 30.6467 3 36.0 2 27.9651 2 10.355 2 11.5018 2 28.0 3 0.4427 9 3.4174 2 2.6209 9)
Average genome size in population (length): 78.346
Average program size in population (points): 79.346
Average percent parens in population: 0.013
Minimum age in population: 8.0
Maximum age in population: 12.421875
Average age in population: 10.306390625
Median age in population: 10.375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.065
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 9762929
--- Timings ---
Current time: 1529615496681 milliseconds
Total Time:          26.2 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.9 seconds, 45.4%
Fitness Testing:     11.4 seconds, 43.7%
Report:               2.7 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 70133.95569999999
Test mean error for best: 35.06698
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -34.018       
Correct output: -80.8416452312 | Program output: -31.018       
Correct output: -30.9193529897 | Program output: -53.018       
Correct output: -129.2709853231 | Program output: -81.018       
Correct output: -142.6109625327 | Program output: -63.018       
Correct output: -28.4603903776 | Program output: 2.018         
Correct output: 119.1092560212 | Program output: 2.018         
Correct output: -2.804364668   | Program output: -50.018       
Correct output: -163.7806987108 | Program output: -89.018       
Correct output: 19.3664379282  | Program output: 2.018         
Correct output: -28.7661462515 | Program output: -89.018       
Correct output: -2.9798498499  | Program output: 2.018         
Correct output: -97.3585137143 | Program output: -62.018       
Correct output: -94.0867625621 | Program output: -88.018       
Correct output: -53.340003998  | Program output: -63.018       
Correct output: -171.739275996 | Program output: -101.018      
Correct output: -113.6467160746 | Program output: -81.018       
Correct output: -99.4921227055 | Program output: -39.018       
Correct output: -67.9651207486 | Program output: -38.018       
Correct output: -109.3549767957 | Program output: -97.018       
Correct output: 14.5017756451  | Program output: -56.018       
Correct output: -110.8403243704 | Program output: -31.018       
Correct output: -11.4606904356 | Program output: -39.018       
Correct output: -32.4173586228 | Program output: -27.018       
Correct output: -28.3791179266 | Program output: -82.018       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_tan} {:instruction in2} {:instruction integer_mult} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction float_cos} {:instruction float_swap} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction print_integer} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_dup_times})
Best program: (integer_sub print_float integer_flush integer_inc float_tan in2 integer_mult in1 integer_flush float_pop integer_dec float_stackdepth tag_float_835 float_cos float_swap float_sin integer_yankdup integer_rot integer_add float_dec float_dup_items float_tan integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan integer_mult float_inc float_sin integer_stackdepth float_add integer_inc integer_dup_items in2 integer_mult float_rot integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max print_integer integer_yank float_pop float_add float_div print_float integer_dup_items float_inc in1 integer_yankdup float_inc integer_max float_dup float_max float_dup_times integer_sub float_dup_times)
Errors: [25.6179 11 49.8236 11 22.0986 10 48.253 11 79.593 12 30.4784 11 117.0913 11 47.2136 9 74.7627 10 17.3484 11 60.2519 11 4.9978 10 35.3405 11 6.0688 11 9.678 8 70.7213 10 32.6287 11 60.4741 10 29.9471 10 12.337 12 70.5198 11 79.8223 11 27.5573 11 5.3994 10 53.6389 11]
Total: 1336.6634
Mean: 26.733269
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3078.0691067000025
Median total errors in population: 1378.7894
Error averages by case: (99.03660039999879 11.168 121.2968541999999 11.981 88.83798420000053 11.147 123.80686279999779 12.126 151.53135460000132 12.148 90.18095120000027 11.852 167.43824940000022 11.947 108.2154626000013 10.017 149.10624600000187 11.203 77.53550859999956 11.917 121.14004650000184 11.249 68.59000390000043 11.759 110.33722080000109 12.094 85.12872550000017 11.211 80.0951614000012 10.147 146.16158529999967 12.068 109.27597279999871 12.197 131.81195280000196 11.222 103.3521382000009 11.107 91.51428509999985 12.236 128.8381205999986 11.817 149.1948951000004 12.065 92.04084400000018 11.198 79.66775489999989 11.229 115.53232579999901 11.297)
Error minima by case: (21.6359 10 42.8416 9 1.9194 9 46.271 9 77.611 10 9.5396 10 22.1093 8 0.8044 8 72.7807 9 0.5267 9 0.7661 10 0.9798 7 33.3585 10 4.0868 10 2.34 8 68.7393 9 30.6467 11 58.4921 10 27.9651 9 10.355 10 3.4982 9 72.8403 9 0.4607 9 3.4174 10 0.6209 9)
Average genome size in population (length): 78.025
Average program size in population (points): 79.025
Average percent parens in population: 0.013
Minimum age in population: 9.0625
Maximum age in population: 13.6875
Average age in population: 11.7789140625
Median age in population: 11.8359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.075
Error (vector) diversity:			 0.081
Behavioral diversity:				 0.083
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 11713679
--- Timings ---
Current time: 1529615500391 milliseconds
Total Time:          29.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.4 seconds, 44.7%
Fitness Testing:     13.1 seconds, 44.0%
Report:               3.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 70317.3397
Test mean error for best: 35.15867
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -36.018       
Correct output: -80.8416452312 | Program output: -33.018       
Correct output: -30.9193529897 | Program output: -55.018       
Correct output: -129.2709853231 | Program output: -83.018       
Correct output: -142.6109625327 | Program output: -65.018       
Correct output: -28.4603903776 | Program output: 1.018         
Correct output: 119.1092560212 | Program output: 1.018         
Correct output: -2.804364668   | Program output: -52.018       
Correct output: -163.7806987108 | Program output: -91.018       
Correct output: 19.3664379282  | Program output: 1.018         
Correct output: -28.7661462515 | Program output: -91.018       
Correct output: -2.9798498499  | Program output: 1.018         
Correct output: -97.3585137143 | Program output: -64.018       
Correct output: -94.0867625621 | Program output: -90.018       
Correct output: -53.340003998  | Program output: -65.018       
Correct output: -171.739275996 | Program output: -103.018      
Correct output: -113.6467160746 | Program output: -83.018       
Correct output: -99.4921227055 | Program output: -41.018       
Correct output: -67.9651207486 | Program output: -40.018       
Correct output: -109.3549767957 | Program output: -99.018       
Correct output: 14.5017756451  | Program output: -58.018       
Correct output: -110.8403243704 | Program output: -33.018       
Correct output: -11.4606904356 | Program output: -41.018       
Correct output: -32.4173586228 | Program output: -29.018       
Correct output: -28.3791179266 | Program output: -84.018       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_add} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_dup_times})
Best program: (tagged_947 float_pop float_sin float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_pop print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items integer_flush float_inc float_add float_yankdup float_tan integer_mult float_add float_sin integer_stackdepth float_add integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup float_max float_dup_times integer_sub float_dup_times)
Errors: [23.6179 11 47.8236 11 24.0986 10 46.253 11 77.593 12 29.4784 12 118.0913 10 49.2136 8 72.7627 10 18.3484 10 62.2519 11 3.9978 11 33.3405 11 4.0688 10 11.678 9 68.7213 11 30.6287 11 58.4741 10 27.9471 10 10.337 12 72.5198 11 77.8223 12 29.5573 10 3.3994 10 55.6389 11]
Total: 1322.6634
Mean: 26.453268
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3272.2661469000045
Median total errors in population: 1376.7894
Error averages by case: (106.80962199999853 11.024 127.63644330000028 11.691 97.10053720000019 10.981 131.1421576999976 11.905 158.29128470000083 11.982 100.86911480000043 11.641 176.28926560000065 11.604 116.19116950000158 9.883 156.62184140000178 10.945 88.73397549999981 11.606 129.42685620000205 11.175 79.62477250000015 11.4 117.51290690000135 11.883 93.4140882 11.165 87.83001270000118 9.957 154.03402079999933 11.756 116.7982147999989 12.108 138.4162612000022 11.141 110.31434910000087 10.812 100.03825529999973 12.21 136.39139029999853 11.463 155.29528460000066 11.84 100.09474770000023 11.181 85.85153160000019 11.052 123.77204329999934 11.361)
Error minima by case: (1.3821 2 25.8236 2 6.0806 9 25.747 3 23.593 2 8.5396 2 21.0913 3 0.1956 7 7.2373 3 0.6336 8 5.7661 9 0.7948 2 19.6595 2 3.0868 1 2.322 6 23.2787 2 29.6467 3 28.4741 2 1.0529 2 9.355 2 3.4982 2 28.0 3 0.4607 9 2.4174 2 0.6209 10)
Average genome size in population (length): 77.167
Average program size in population (points): 78.167
Average percent parens in population: 0.013
Minimum age in population: 11.25
Maximum age in population: 15.4609375
Average age in population: 13.332546875
Median age in population: 13.361328125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.836
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.836
Total error diversity:				 0.113
Error (vector) diversity:			 0.123
Behavioral diversity:				 0.124
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 13642904
--- Timings ---
Current time: 1529615504311 milliseconds
Total Time:          33.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.8 seconds, 43.8%
Fitness Testing:     15.0 seconds, 44.6%
Report:               3.8 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 70317.3397
Test mean error for best: 35.15867
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -36.018       
Correct output: -80.8416452312 | Program output: -33.018       
Correct output: -30.9193529897 | Program output: -55.018       
Correct output: -129.2709853231 | Program output: -83.018       
Correct output: -142.6109625327 | Program output: -65.018       
Correct output: -28.4603903776 | Program output: 1.018         
Correct output: 119.1092560212 | Program output: 1.018         
Correct output: -2.804364668   | Program output: -52.018       
Correct output: -163.7806987108 | Program output: -91.018       
Correct output: 19.3664379282  | Program output: 1.018         
Correct output: -28.7661462515 | Program output: -91.018       
Correct output: -2.9798498499  | Program output: 1.018         
Correct output: -97.3585137143 | Program output: -64.018       
Correct output: -94.0867625621 | Program output: -90.018       
Correct output: -53.340003998  | Program output: -65.018       
Correct output: -171.739275996 | Program output: -103.018      
Correct output: -113.6467160746 | Program output: -83.018       
Correct output: -99.4921227055 | Program output: -41.018       
Correct output: -67.9651207486 | Program output: -40.018       
Correct output: -109.3549767957 | Program output: -99.018       
Correct output: 14.5017756451  | Program output: -58.018       
Correct output: -110.8403243704 | Program output: -33.018       
Correct output: -11.4606904356 | Program output: -41.018       
Correct output: -32.4173586228 | Program output: -29.018       
Correct output: -28.3791179266 | Program output: -84.018       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_sin} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_add} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add})
Best program: (tagged_947 float_sin float_sin float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_pop print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items integer_flush float_inc float_add float_yankdup float_tan integer_mult float_add float_sin integer_stackdepth float_add integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup float_max float_dup_times integer_sub float_add)
Errors: [23.6179 11 47.8236 11 24.0986 10 46.253 11 77.593 12 29.4784 12 118.0913 10 49.2136 8 72.7627 10 18.3484 10 62.2519 11 3.9978 11 33.3405 11 4.0688 10 11.678 9 68.7213 11 30.6287 11 58.4741 10 27.9471 10 10.337 12 72.5198 11 77.8223 12 29.5573 10 3.3994 10 55.6389 11]
Total: 1322.6634
Mean: 26.453268
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3235.3957643999943
Median total errors in population: 1355.7894
Error averages by case: (106.11126979999835 10.795 126.72065440000029 11.514 99.44423600000025 11.173 130.2073541999973 11.924 157.82652890000097 11.773 89.76801160000063 11.786 169.5205670000003 11.363 119.25034970000195 9.802 155.15122620000196 11.034 79.0180358999998 11.354 132.0927434000022 11.363 67.93254400000014 11.539 117.00295160000134 11.887 91.81976979999997 11.133 90.36469320000127 9.783 152.31946639999984 11.242 115.81734709999905 11.935 138.5080556000022 10.963 110.32646680000093 10.606 98.17479319999966 12.238 139.63554989999852 11.175 154.6500807000001 11.47 102.9472688000004 11.125 82.99215630000002 11.096 126.35164389999913 11.369)
Error minima by case: (21.6359 7 43.8416 6 1.0806 9 44.271 6 70.611 6 8.5396 5 22.0913 5 0.1956 8 70.7807 7 1.3664 10 6.2339 10 0.0202 5 29.3585 7 2.0868 6 0.34 8 66.7393 6 28.6467 5 56.4921 6 25.9651 7 8.355 6 3.4982 7 73.8403 5 6.5393 9 1.4174 6 6.6209 10)
Average genome size in population (length): 77.697
Average program size in population (points): 78.697
Average percent parens in population: 0.013
Minimum age in population: 12.421875
Maximum age in population: 17.21484375
Average age in population: 14.83351953125
Median age in population: 14.857421875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.802
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.802
Total error diversity:				 0.105
Error (vector) diversity:			 0.119
Behavioral diversity:				 0.119
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 15585479
--- Timings ---
Current time: 1529615507904 milliseconds
Total Time:          37.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.1 seconds, 43.2%
Fitness Testing:     16.7 seconds, 44.6%
Report:               4.5 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 70198.0061
Test mean error for best: 35.09900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -37.018       
Correct output: -80.8416452312 | Program output: -34.018       
Correct output: -30.9193529897 | Program output: -56.018       
Correct output: -129.2709853231 | Program output: -84.018       
Correct output: -142.6109625327 | Program output: -66.018       
Correct output: -28.4603903776 | Program output: 2.018         
Correct output: 119.1092560212 | Program output: 2.018         
Correct output: -2.804364668   | Program output: -53.018       
Correct output: -163.7806987108 | Program output: -92.018       
Correct output: 19.3664379282  | Program output: 2.018         
Correct output: -28.7661462515 | Program output: -92.018       
Correct output: -2.9798498499  | Program output: 2.018         
Correct output: -97.3585137143 | Program output: -65.018       
Correct output: -94.0867625621 | Program output: -91.018       
Correct output: -53.340003998  | Program output: -66.018       
Correct output: -171.739275996 | Program output: -104.018      
Correct output: -113.6467160746 | Program output: -84.018       
Correct output: -99.4921227055 | Program output: -42.018       
Correct output: -67.9651207486 | Program output: -41.018       
Correct output: -109.3549767957 | Program output: -100.018      
Correct output: 14.5017756451  | Program output: -59.018       
Correct output: -110.8403243704 | Program output: -34.018       
Correct output: -11.4606904356 | Program output: -42.018       
Correct output: -32.4173586228 | Program output: -30.018       
Correct output: -28.3791179266 | Program output: -85.018       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_pop} {:instruction integer_mod} {:instruction in1} {:instruction integer_sub} {:instruction float_rot} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_sin} {:instruction integer_add} {:instruction integer_flush} {:instruction float_pop} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction float_cos} {:instruction float_swap} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction float_sin} {:instruction integer_mult} {:instruction float_add} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_dup_times})
Best program: (in2 integer_pop integer_mod in1 integer_sub float_rot float_dup float_dup integer_inc float_frominteger integer_add float_frominteger float_sub float_sin integer_add integer_flush float_pop integer_dec float_stackdepth tag_float_835 float_cos float_swap float_sin integer_yankdup integer_rot integer_add integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan integer_mult float_inc float_sin integer_mult float_add float_sin integer_stackdepth float_add integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup float_max float_dup_times integer_sub float_dup_times)
Errors: [22.6179 11 46.8236 11 25.0986 10 45.253 11 76.593 12 30.4784 11 117.0913 11 50.2136 9 71.7627 10 17.3484 11 63.2519 11 4.9978 10 32.3405 11 3.0688 10 12.678 9 67.7213 11 29.6287 12 57.4741 10 26.9471 10 9.337 11 73.5198 11 76.8223 12 30.5573 11 2.3994 9 56.6389 11]
Total: 1316.6634
Mean: 26.333267
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3516.3072312000036
Median total errors in population: 1350.7894000000001
Error averages by case: (116.67672199999826 11.029 136.32177510000085 11.605 111.73845580000004 11.404 143.74583089999817 11.814 169.2836381000002 11.989 101.9719801000006 11.668 180.27344450000012 11.297 126.76636290000155 9.644 168.77515220000166 11.225 90.6343553999999 11.308 141.96692950000138 11.663 80.22150660000013 11.282 128.67163120000137 11.78 104.9791763 11.036 102.51673320000077 9.592 164.95969389999976 11.028 129.5274269999992 11.682 149.99700150000203 10.726 120.99625570000099 10.758 112.85407299999939 12.314 146.7629453999989 11.229 164.00988280000058 11.411 112.90886650000036 11.073 93.7807748 11.111 134.74861679999984 11.55)
Error minima by case: (20.6359 5 44.8416 5 3.0806 9 43.271 6 74.611 5 10.5396 5 22.0913 4 0.1956 8 69.7807 6 1.3664 10 3.7481 10 0.0202 5 30.3585 5 1.0868 4 0.66 8 65.7393 5 27.6467 5 55.4921 5 24.9651 5 7.355 5 3.4982 5 74.8403 5 4.5393 9 0.4174 5 1.6209 10)
Average genome size in population (length): 77.782
Average program size in population (points): 78.782
Average percent parens in population: 0.013
Minimum age in population: 13.83203125
Maximum age in population: 18.5107421875
Average age in population: 16.4116494140625
Median age in population: 16.43896484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.136
Error (vector) diversity:			 0.161
Behavioral diversity:				 0.163
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 17530129
--- Timings ---
Current time: 1529615511581 milliseconds
Total Time:          41.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.6 seconds, 42.9%
Fitness Testing:     18.3 seconds, 44.6%
Report:               5.0 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 70847.01050000005
Test mean error for best: 35.42351
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -48.0         
Correct output: -80.8416452312 | Program output: -45.0         
Correct output: -30.9193529897 | Program output: -67.0         
Correct output: -129.2709853231 | Program output: -95.0         
Correct output: -142.6109625327 | Program output: -77.0         
Correct output: -28.4603903776 | Program output: 5.0           
Correct output: 119.1092560212 | Program output: 5.0           
Correct output: -2.804364668   | Program output: -64.0         
Correct output: -163.7806987108 | Program output: -103.0        
Correct output: 19.3664379282  | Program output: 5.0           
Correct output: -28.7661462515 | Program output: -103.0        
Correct output: -2.9798498499  | Program output: 5.0           
Correct output: -97.3585137143 | Program output: -76.0         
Correct output: -94.0867625621 | Program output: -102.0        
Correct output: -53.340003998  | Program output: -77.0         
Correct output: -171.739275996 | Program output: -115.0        
Correct output: -113.6467160746 | Program output: -95.0         
Correct output: -99.4921227055 | Program output: -53.0         
Correct output: -67.9651207486 | Program output: -52.0         
Correct output: -109.3549767957 | Program output: -111.0        
Correct output: 14.5017756451  | Program output: -70.0         
Correct output: -110.8403243704 | Program output: -45.0         
Correct output: -11.4606904356 | Program output: -53.0         
Correct output: -32.4173586228 | Program output: -41.0         
Correct output: -28.3791179266 | Program output: -96.0         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_pop} {:instruction tag_integer_402} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_tan} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush})
Best program: (integer_min float_sin integer_pop tag_integer_402 integer_shove integer_swap integer_flush float_dup_items integer_swap float_tan float_dup integer_inc float_frominteger integer_add integer_yankdup integer_rot integer_add float_dec float_dup_items float_tan integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_inc in2 integer_mult float_rot integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 integer_mult float_rot integer_mod in2 integer_stackdepth float_yankdup integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush)
Errors: [11.6359 11 35.8416 11 36.0806 12 34.271 12 65.611 12 33.4604 12 114.1093 12 61.1956 9 60.7807 10 14.3664 12 74.2339 12 7.9798 12 21.3585 12 7.9132 11 23.66 10 56.7393 10 18.6467 12 46.4921 11 15.9651 11 1.645 12 84.5018 12 65.8403 12 41.5393 11 8.5826 11 67.6209 12]
Total: 1294.071
Mean: 25.88142
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3412.69039119999
Median total errors in population: 1336.6634
Error averages by case: (114.33366339999877 11.136 134.17353930000135 11.294 110.49086669999936 10.67 140.17089539999833 11.425 166.2037392999984 12.084 88.47220670000112 11.55 169.55524270000012 10.946 128.1788536000013 9.142 165.75906640000076 10.651 77.63959000000044 10.98 140.97107510000137 11.303 66.56280669999965 10.843 125.62335330000137 11.366 102.41757149999914 10.88 102.811221 9.052 162.05383960000057 10.835 125.23046030000008 11.457 145.99259600000156 10.498 118.64169460000099 10.49 109.7923051999997 12.221 145.76643229999922 11.157 161.91793230000033 11.425 111.25559070000025 10.902 88.99502879999962 10.571 135.4458203000008 11.357)
Error minima by case: (11.6359 9 1.1584 8 3.0806 9 34.271 8 60.611 8 10.5576 7 1.1093 6 0.2136 6 60.7807 8 0.6336 9 21.2339 9 0.0382 7 15.3585 8 0.0868 8 1.678 7 56.7393 8 18.6467 6 17.4921 8 14.0349 9 1.645 8 3.4982 8 28.8403 7 6.5393 8 0.3994 8 14.6209 9)
Average genome size in population (length): 82.631
Average program size in population (points): 83.631
Average percent parens in population: 0.012
Minimum age in population: 15.09375
Maximum age in population: 19.80517578125
Average age in population: 17.73099853515625
Median age in population: 17.765380859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.843
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.161
Error (vector) diversity:			 0.185
Behavioral diversity:				 0.185
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 19596054
--- Timings ---
Current time: 1529615515336 milliseconds
Total Time:          44.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.0 seconds, 42.4%
Fitness Testing:     20.2 seconds, 45.0%
Report:               5.6 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 68648.4779
Test mean error for best: 34.32424
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -46.018       
Correct output: -80.8416452312 | Program output: -43.018       
Correct output: -30.9193529897 | Program output: -65.018       
Correct output: -129.2709853231 | Program output: -93.018       
Correct output: -142.6109625327 | Program output: -75.018       
Correct output: -28.4603903776 | Program output: 13.018        
Correct output: 119.1092560212 | Program output: 13.018        
Correct output: -2.804364668   | Program output: -62.018       
Correct output: -163.7806987108 | Program output: -101.018      
Correct output: 19.3664379282  | Program output: 13.018        
Correct output: -28.7661462515 | Program output: -101.018      
Correct output: -2.9798498499  | Program output: 13.018        
Correct output: -97.3585137143 | Program output: -74.018       
Correct output: -94.0867625621 | Program output: -100.018      
Correct output: -53.340003998  | Program output: -75.018       
Correct output: -171.739275996 | Program output: -113.018      
Correct output: -113.6467160746 | Program output: -93.018       
Correct output: -99.4921227055 | Program output: -51.018       
Correct output: -67.9651207486 | Program output: -50.018       
Correct output: -109.3549767957 | Program output: -109.018      
Correct output: 14.5017756451  | Program output: -68.018       
Correct output: -110.8403243704 | Program output: -43.018       
Correct output: -11.4606904356 | Program output: -51.018       
Correct output: -32.4173586228 | Program output: -39.018       
Correct output: -28.3791179266 | Program output: -94.018       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_pop} {:instruction tag_integer_402} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_tan} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max})
Best program: (integer_min float_sin integer_pop tag_integer_402 integer_shove integer_swap integer_flush float_dup_items integer_swap float_tan float_dup integer_inc float_frominteger integer_add integer_yankdup integer_rot integer_add float_dec float_dup_items float_tan integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap integer_stackdepth integer_dup_items integer_flush float_inc float_add integer_mod float_swap integer_mod integer_div integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan float_inc float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup float_max)
Errors: [13.6179 11 37.8236 11 34.0986 10 36.253 11 67.593 12 41.4784 12 106.0913 10 59.2136 8 62.7627 9 6.3484 10 72.2519 11 15.9978 11 23.3405 11 5.9312 12 21.678 9 58.7213 10 20.6287 11 48.4741 11 17.9471 10 0.337 10 82.5198 11 67.8223 12 39.5573 10 6.6006 9 65.6389 11]
Total: 1275.7269999999999
Mean: 25.51454
Genome size: 116
Size: 117
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2806.106382599986
Median total errors in population: 1328.6494
Error averages by case: (86.9770272999989 11.122 108.47567260000142 11.236 84.8965713999992 10.493 115.13113699999826 11.344 142.0370758999982 12.098 67.33311200000043 11.696 151.60377419999992 10.704 102.14330910000118 8.926 141.75367470000174 10.494 56.027757700000556 10.722 116.67920730000134 11.291 46.808754199999576 10.873 100.35548770000108 11.245 76.45823859999952 10.578 77.65614569999994 9.283 138.93620150000106 11.063 101.16580350000027 11.513 120.62131460000208 10.525 91.6973098000006 10.412 84.29667899999986 12.126 121.36385709999858 11.105 136.85486630000008 11.775 87.34509980000027 10.736 65.45666730000038 10.295 111.10363830000115 11.273)
Error minima by case: (11.6359 7 35.8416 7 1.0806 9 34.271 8 65.611 7 7.5576 7 1.1093 5 0.2136 7 60.7807 8 1.3664 9 14.7661 10 0.0382 7 21.3585 7 0.0688 6 2.322 7 56.7393 7 18.6467 7 46.4921 7 15.9651 7 0.337 7 2.4982 7 65.8403 8 2.4607 9 0.3994 7 14.6309 9)
Average genome size in population (length): 86.537
Average program size in population (points): 87.537
Average percent parens in population: 0.012
Minimum age in population: 16.74169921875
Maximum age in population: 21.335693359375
Average age in population: 19.20108642578125
Median age in population: 19.2576904296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.845
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.845
Total error diversity:				 0.158
Error (vector) diversity:			 0.176
Behavioral diversity:				 0.176
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 21759579
--- Timings ---
Current time: 1529615519493 milliseconds
Total Time:          48.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.5 seconds, 42.0%
Fitness Testing:     22.2 seconds, 45.4%
Report:               6.0 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 68648.4779
Test mean error for best: 34.32424
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -46.018       
Correct output: -80.8416452312 | Program output: -43.018       
Correct output: -30.9193529897 | Program output: -65.018       
Correct output: -129.2709853231 | Program output: -93.018       
Correct output: -142.6109625327 | Program output: -75.018       
Correct output: -28.4603903776 | Program output: 13.018        
Correct output: 119.1092560212 | Program output: 13.018        
Correct output: -2.804364668   | Program output: -62.018       
Correct output: -163.7806987108 | Program output: -101.018      
Correct output: 19.3664379282  | Program output: 13.018        
Correct output: -28.7661462515 | Program output: -101.018      
Correct output: -2.9798498499  | Program output: 13.018        
Correct output: -97.3585137143 | Program output: -74.018       
Correct output: -94.0867625621 | Program output: -100.018      
Correct output: -53.340003998  | Program output: -75.018       
Correct output: -171.739275996 | Program output: -113.018      
Correct output: -113.6467160746 | Program output: -93.018       
Correct output: -99.4921227055 | Program output: -51.018       
Correct output: -67.9651207486 | Program output: -50.018       
Correct output: -109.3549767957 | Program output: -109.018      
Correct output: 14.5017756451  | Program output: -68.018       
Correct output: -110.8403243704 | Program output: -43.018       
Correct output: -11.4606904356 | Program output: -51.018       
Correct output: -32.4173586228 | Program output: -39.018       
Correct output: -28.3791179266 | Program output: -94.018       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_pop} {:instruction tag_integer_402} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_tan} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max})
Best program: (integer_min float_sin integer_pop tag_integer_402 integer_shove integer_swap integer_flush float_dup_items integer_swap float_tan float_dup integer_inc float_frominteger integer_add integer_yankdup integer_rot integer_add float_dec float_dup_items float_tan integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap integer_stackdepth integer_dup_items integer_flush float_inc float_add integer_mod float_swap integer_mod integer_div integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan float_inc float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup float_max)
Errors: [13.6179 11 37.8236 11 34.0986 10 36.253 11 67.593 12 41.4784 12 106.0913 10 59.2136 8 62.7627 9 6.3484 10 72.2519 11 15.9978 11 23.3405 11 5.9312 12 21.678 9 58.7213 10 20.6287 11 48.4741 11 17.9471 10 0.337 10 82.5198 11 67.8223 12 39.5573 10 6.6006 9 65.6389 11]
Total: 1275.7269999999999
Mean: 25.51454
Genome size: 116
Size: 117
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2644.659240999986
Median total errors in population: 1322.6634
Error averages by case: (78.93831029999919 10.98 101.11471420000123 11.273 78.45441499999941 10.583 106.33593699999842 11.428 133.6329281999986 12.061 68.64827090000057 11.617 149.4814318999999 10.875 96.46230230000103 9.04 132.191765300002 10.591 56.977831800000395 10.893 110.13683770000125 11.36 47.068682099999606 10.948 91.5436356000006 11.189 67.65016069999994 10.331 70.79871450000009 9.549 129.93240820000102 11.197 91.58300800000022 11.723 112.50249020000186 10.673 83.52946100000034 10.432 74.4014016 11.723 116.1548573999987 11.14 129.5455529999999 11.92 80.85505110000015 10.753 58.576436400000155 10.096 104.53963660000085 11.228)
Error minima by case: (10.6359 2 3.3263 2 0.0986 9 9.253 3 40.593 2 4.5576 2 22.0913 3 0.1956 7 35.7627 3 1.3664 9 0.2339 9 0.0382 2 3.6595 2 0.0688 1 2.322 8 31.7213 2 6.3713 3 14.4741 2 9.0529 2 0.337 2 2.4982 2 25.8223 3 1.4427 8 0.3556 2 0.6209 9)
Average genome size in population (length): 86.161
Average program size in population (points): 87.161
Average percent parens in population: 0.012
Minimum age in population: 18.528564453125
Maximum age in population: 22.9046630859375
Average age in population: 20.80213171386719
Median age in population: 20.85076904296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.841
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.841
Total error diversity:				 0.183
Error (vector) diversity:			 0.202
Behavioral diversity:				 0.202
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 23913754
--- Timings ---
Current time: 1529615523467 milliseconds
Total Time:          52.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.9 seconds, 41.5%
Fitness Testing:     24.0 seconds, 45.4%
Report:               6.8 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 72155.19909999988
Test mean error for best: 36.07760
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -62.018       
Correct output: -80.8416452312 | Program output: -59.018       
Correct output: -30.9193529897 | Program output: -81.018       
Correct output: -129.2709853231 | Program output: -109.018      
Correct output: -142.6109625327 | Program output: -91.018       
Correct output: -28.4603903776 | Program output: -5.018        
Correct output: 119.1092560212 | Program output: 29.018        
Correct output: -2.804364668   | Program output: -78.018       
Correct output: -163.7806987108 | Program output: -117.018      
Correct output: 19.3664379282  | Program output: 1.018         
Correct output: -28.7661462515 | Program output: -117.018      
Correct output: -2.9798498499  | Program output: 7.018         
Correct output: -97.3585137143 | Program output: -90.018       
Correct output: -94.0867625621 | Program output: -116.018      
Correct output: -53.340003998  | Program output: -91.018       
Correct output: -171.739275996 | Program output: -129.018      
Correct output: -113.6467160746 | Program output: -109.018      
Correct output: -99.4921227055 | Program output: -67.018       
Correct output: -67.9651207486 | Program output: -66.018       
Correct output: -109.3549767957 | Program output: -125.018      
Correct output: 14.5017756451  | Program output: -84.018       
Correct output: -110.8403243704 | Program output: -59.018       
Correct output: -11.4606904356 | Program output: -67.018       
Correct output: -32.4173586228 | Program output: -55.018       
Correct output: -28.3791179266 | Program output: -110.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_pop} {:instruction integer_mod} {:instruction in1} {:instruction integer_sub} {:instruction float_rot} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_sin} {:instruction integer_add} {:instruction integer_flush} {:instruction float_pop} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction float_cos} {:instruction float_swap} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_shove} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_stackdepth} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max})
Best program: (integer_mult integer_pop integer_mod in1 integer_sub float_rot float_dup float_dup integer_inc float_frominteger integer_add float_frominteger float_sub float_sin integer_add integer_flush float_pop integer_dec float_stackdepth tag_float_835 float_cos float_swap float_sin integer_yankdup integer_rot integer_add integer_mod float_inc integer_shove float_yankdup float_tan integer_mult float_inc integer_dup_times integer_stackdepth float_sin integer_stackdepth float_add integer_inc integer_dup_items in2 integer_mult integer_yankdup float_inc float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup float_max)
Errors: [2.3821 11 21.8236 11 50.0986 10 20.253 9 51.593 12 23.4424 11 90.0913 10 75.2136 9 46.7627 9 18.3484 10 88.2519 11 9.9978 11 7.3405 10 21.9312 12 37.678 9 42.7213 11 4.6287 11 32.4741 11 1.9471 9 15.663 12 98.5198 10 51.8223 12 55.5573 11 22.6006 10 81.6389 11]
Total: 1235.7812
Mean: 24.715624
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2955.0322513999918
Median total errors in population: 1311.6621
Error averages by case: (89.26476019999905 10.872 111.22995410000108 11.279 91.9999332999995 10.673 116.24951109999832 11.465 143.2479305999987 12.084 87.25574620000104 11.549 165.5971353999999 11.165 109.71281500000121 9.342 142.04237970000204 10.455 73.67664080000057 11.187 123.47537700000143 11.409 65.94082009999953 10.863 101.82675070000087 11.173 79.5909880999997 10.377 84.4918391000002 9.604 139.8628505000011 11.194 101.68917680000011 12.052 122.35427280000211 11.012 93.77072040000064 10.493 85.29685349999995 11.447 129.2476726999984 11.218 139.24804939999987 12.003 94.28480180000021 11.077 70.82965590000018 9.778 117.92961620000084 11.145)
Error minima by case: (0.6179 4 17.8416 4 4.0806 9 16.271 5 47.611 4 2.5576 4 22.0913 5 0.2136 7 42.7807 5 0.6336 9 2.7481 9 0.0382 4 3.3585 4 0.0688 3 1.322 8 38.7393 4 0.6467 5 28.4921 4 1.9471 4 0.337 4 1.4838 4 28.0 5 0.5393 9 0.3556 4 2.3611 9)
Average genome size in population (length): 86.184
Average program size in population (points): 87.184
Average percent parens in population: 0.012
Minimum age in population: 19.66455078125
Maximum age in population: 24.16363525390625
Average age in population: 22.32651654052734
Median age in population: 22.34487915039062
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.849
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.849
Total error diversity:				 0.205
Error (vector) diversity:			 0.228
Behavioral diversity:				 0.232
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 26068404
--- Timings ---
Current time: 1529615527463 milliseconds
Total Time:          56.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.4 seconds, 41.2%
Fitness Testing:     25.8 seconds, 45.4%
Report:               7.5 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 72155.19909999988
Test mean error for best: 36.07760
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -62.018       
Correct output: -80.8416452312 | Program output: -59.018       
Correct output: -30.9193529897 | Program output: -81.018       
Correct output: -129.2709853231 | Program output: -109.018      
Correct output: -142.6109625327 | Program output: -91.018       
Correct output: -28.4603903776 | Program output: -5.018        
Correct output: 119.1092560212 | Program output: 29.018        
Correct output: -2.804364668   | Program output: -78.018       
Correct output: -163.7806987108 | Program output: -117.018      
Correct output: 19.3664379282  | Program output: 1.018         
Correct output: -28.7661462515 | Program output: -117.018      
Correct output: -2.9798498499  | Program output: 7.018         
Correct output: -97.3585137143 | Program output: -90.018       
Correct output: -94.0867625621 | Program output: -116.018      
Correct output: -53.340003998  | Program output: -91.018       
Correct output: -171.739275996 | Program output: -129.018      
Correct output: -113.6467160746 | Program output: -109.018      
Correct output: -99.4921227055 | Program output: -67.018       
Correct output: -67.9651207486 | Program output: -66.018       
Correct output: -109.3549767957 | Program output: -125.018      
Correct output: 14.5017756451  | Program output: -84.018       
Correct output: -110.8403243704 | Program output: -59.018       
Correct output: -11.4606904356 | Program output: -67.018       
Correct output: -32.4173586228 | Program output: -55.018       
Correct output: -28.3791179266 | Program output: -110.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_pop} {:instruction tag_integer_402} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_sin} {:instruction integer_add} {:instruction integer_flush} {:instruction float_pop} {:instruction float_sub} {:instruction float_sin} {:instruction integer_add} {:instruction integer_flush} {:instruction float_pop} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction float_cos} {:instruction float_swap} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_mult} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_416} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup})
Best program: (integer_min float_sin integer_pop tag_integer_402 integer_shove integer_swap integer_flush integer_add float_frominteger float_sub float_sin integer_add integer_flush float_pop float_sub float_sin integer_add integer_flush float_pop integer_dec float_stackdepth tag_float_835 float_cos float_swap float_sin integer_yankdup integer_rot integer_add integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan integer_mult float_inc float_sin integer_stackdepth float_sin integer_stackdepth float_add integer_mult float_inc float_sin integer_stackdepth float_add integer_inc integer_dup_items float_inc float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_416 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup)
Errors: [2.3821 11 21.8236 11 50.0986 10 20.253 9 51.593 12 23.4424 11 90.0913 10 75.2136 9 46.7627 9 18.3484 10 88.2519 11 9.9978 11 7.3405 10 21.9312 12 37.678 9 42.7213 11 4.6287 11 32.4741 11 1.9471 9 15.663 12 98.5198 10 51.8223 12 55.5573 11 22.6006 10 81.6389 11]
Total: 1235.7812
Mean: 24.715624
Genome size: 116
Size: 117
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3544.12596139999
Median total errors in population: 1298.7809999999997
Error averages by case: (111.84616199999859 10.959 132.67379540000113 11.187 118.96637929999945 10.923 139.075485499998 11.473 163.95402349999893 12.061 110.77947930000136 11.649 182.35753730000025 11.146 135.20291160000158 9.332 163.40054610000124 10.377 95.29833970000047 11.208 148.53353280000138 11.477 91.89318539999945 11.039 124.58075240000149 11.214 107.28612189999957 10.734 111.49912570000036 9.72 161.5504956000004 11.024 125.08870289999986 12.007 143.02268090000197 11.213 115.5240378000011 10.548 110.68771459999985 11.557 153.72030079999914 11.232 159.75271620000024 11.978 119.64512450000055 11.11 98.19482339999998 9.993 143.1299868000004 11.301)
Error minima by case: (0.6179 2 2.1764 2 3.0986 9 2.253 3 6.591 2 3.4424 2 22.0913 3 0.1956 7 9.7807 3 0.6336 9 3.7481 9 0.0382 2 0.3585 2 0.0686 1 1.66 8 5.7393 2 0.6287 3 4.5079 2 1.9471 2 0.337 2 1.4982 2 8.1777 3 1.4427 8 0.3556 2 3.3611 9)
Average genome size in population (length): 89.61
Average program size in population (points): 90.61
Average percent parens in population: 0.011
Minimum age in population: 20.66455078125
Maximum age in population: 25.687744140625
Average age in population: 23.91387396240234
Median age in population: 23.960693359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.854
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.854
Total error diversity:				 0.263
Error (vector) diversity:			 0.3
Behavioral diversity:				 0.302
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 28308729
--- Timings ---
Current time: 1529615531690 milliseconds
Total Time:          61.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.8 seconds, 40.7%
Fitness Testing:     27.9 seconds, 45.8%
Report:               8.2 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 73402.99569999993
Test mean error for best: 36.70150
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -64.018       
Correct output: -80.8416452312 | Program output: -61.018       
Correct output: -30.9193529897 | Program output: -83.018       
Correct output: -129.2709853231 | Program output: -111.018      
Correct output: -142.6109625327 | Program output: -93.018       
Correct output: -28.4603903776 | Program output: -11.018       
Correct output: 119.1092560212 | Program output: 31.018        
Correct output: -2.804364668   | Program output: -80.018       
Correct output: -163.7806987108 | Program output: -119.018      
Correct output: 19.3664379282  | Program output: 1.018         
Correct output: -28.7661462515 | Program output: -119.018      
Correct output: -2.9798498499  | Program output: 13.018        
Correct output: -97.3585137143 | Program output: -92.018       
Correct output: -94.0867625621 | Program output: -118.018      
Correct output: -53.340003998  | Program output: -93.018       
Correct output: -171.739275996 | Program output: -131.018      
Correct output: -113.6467160746 | Program output: -111.018      
Correct output: -99.4921227055 | Program output: -69.018       
Correct output: -67.9651207486 | Program output: -68.018       
Correct output: -109.3549767957 | Program output: -127.018      
Correct output: 14.5017756451  | Program output: -86.018       
Correct output: -110.8403243704 | Program output: -61.018       
Correct output: -11.4606904356 | Program output: -69.018       
Correct output: -32.4173586228 | Program output: -57.018       
Correct output: -28.3791179266 | Program output: -112.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction float_swap} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max})
Best program: (tagged_947 float_pop float_sin float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_pop print_integer float_inc integer_stackdepth integer_dup_items integer_flush float_inc float_add integer_mod float_swap integer_mod integer_div integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan float_inc float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot float_swap in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_mod integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup float_max)
Errors: [4.3821 11 19.8236 11 52.0986 10 18.253 10 49.593 12 17.4424 11 88.0913 10 77.2136 8 44.7627 9 18.3484 10 90.2519 11 15.9978 11 5.3405 10 23.9312 12 39.678 8 40.7213 10 2.6287 10 30.4741 10 0.0529 9 17.663 12 100.5198 11 49.8223 11 57.5573 11 24.6006 10 83.6389 11]
Total: 1231.887
Mean: 24.63774
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4115.413108499991
Median total errors in population: 1289.7269999999999
Error averages by case: (131.79740409999866 10.942 151.65717170000164 11.193 147.53119179999902 10.804 156.55354819999832 11.261 181.71386729999836 12.089 135.73783260000152 11.771 201.84076560000008 10.836 164.02835359999997 9.216 180.49612700000083 10.075 116.86228330000063 10.906 177.23307750000134 11.406 119.76188129999902 11.188 143.2293529000013 11.161 133.5246013000012 11.34 139.60430470000063 9.654 178.26089490000075 10.887 143.19622240000012 11.794 162.05856230000114 11.207 135.70998260000093 10.434 132.3457248 11.651 181.9445882 11.14 177.86101030000023 12.017 149.53870439999972 11.045 125.46729230000082 10.187 171.85636339999976 11.398)
Error minima by case: (0.3821 2 0.8236 2 5.0986 9 0.253 3 4.407 2 0.5576 2 22.0913 3 1.1956 7 9.2373 2 0.3484 8 8.2339 9 0.9618 2 0.6415 1 0.0678 1 5.66 8 10.7213 2 0.6287 3 0.4741 2 0.0529 2 0.337 2 0.4838 2 4.1777 2 1.4427 8 0.3556 2 2.6209 9)
Average genome size in population (length): 101.704
Average program size in population (points): 102.704
Average percent parens in population: 0.010
Minimum age in population: 22.906005859375
Maximum age in population: 27.21484375
Average age in population: 25.47852426147461
Median age in population: 25.51515197753906
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.909
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.909
Total error diversity:				 0.293
Error (vector) diversity:			 0.343
Behavioral diversity:				 0.346
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 30851354
--- Timings ---
Current time: 1529615536159 milliseconds
Total Time:          65.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.2 seconds, 40.1%
Fitness Testing:     30.2 seconds, 46.1%
Report:               8.9 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 71276.8764999999
Test mean error for best: 35.63844
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -60.018       
Correct output: -80.8416452312 | Program output: -57.018       
Correct output: -30.9193529897 | Program output: -79.018       
Correct output: -129.2709853231 | Program output: -107.018      
Correct output: -142.6109625327 | Program output: -89.018       
Correct output: -28.4603903776 | Program output: -12.018       
Correct output: 119.1092560212 | Program output: 27.018        
Correct output: -2.804364668   | Program output: -76.018       
Correct output: -163.7806987108 | Program output: -115.018      
Correct output: 19.3664379282  | Program output: 9.018         
Correct output: -28.7661462515 | Program output: -115.018      
Correct output: -2.9798498499  | Program output: 1.018         
Correct output: -97.3585137143 | Program output: -88.018       
Correct output: -94.0867625621 | Program output: -114.018      
Correct output: -53.340003998  | Program output: -89.018       
Correct output: -171.739275996 | Program output: -127.018      
Correct output: -113.6467160746 | Program output: -107.018      
Correct output: -99.4921227055 | Program output: -65.018       
Correct output: -67.9651207486 | Program output: -64.018       
Correct output: -109.3549767957 | Program output: -123.018      
Correct output: 14.5017756451  | Program output: -82.018       
Correct output: -110.8403243704 | Program output: -57.018       
Correct output: -11.4606904356 | Program output: -65.018       
Correct output: -32.4173586228 | Program output: -53.018       
Correct output: -28.3791179266 | Program output: -108.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_max})
Best program: (tagged_947 float_pop float_sin float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_pop print_integer float_inc integer_stackdepth integer_dup_items integer_flush float_inc float_add integer_mod float_swap integer_mod integer_div integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan float_inc float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_inc integer_inc integer_sub integer_stackdepth integer_inc float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_mod integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup float_max)
Errors: [0.3821 11 23.8236 11 48.0986 10 22.253 10 53.593 12 16.4424 11 92.0913 11 73.2136 9 48.7627 9 10.3484 10 86.2519 11 3.9978 11 9.3405 11 19.9312 11 35.678 9 44.7213 10 6.6287 11 34.4741 11 3.9471 9 13.663 12 96.5198 11 53.8223 12 53.5573 11 20.6006 10 79.6389 11]
Total: 1216.7812000000001
Mean: 24.335625
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3448.1443501999884
Median total errors in population: 1266.0529999999999
Error averages by case: (101.17328009999932 10.604 119.34019880000126 11.175 123.57512689999898 10.656 125.36310849999819 10.803 150.5310767999983 12.013 110.78219640000118 11.482 176.72183209999994 10.638 141.97102820000134 9.264 148.78630080000173 9.809 93.38529910000018 10.856 155.16891920000157 11.253 98.59570409999921 11.038 111.94269480000125 10.881 110.73855420000125 11.509 117.05998520000003 9.488 146.81358570000094 10.862 112.21385310000008 11.513 130.4102146000024 11.087 104.48510710000093 10.104 108.59418470000035 11.926 161.10906979999942 11.026 145.70021100000008 11.923 127.27371700000056 11.101 103.07047460000086 10.23 150.74662740000073 11.351)
Error minima by case: (0.3821 4 0.8236 4 1.9014 9 0.747 5 8.5928 4 0.4424 4 22.0913 3 0.2136 7 3.7625 5 0.3484 9 0.2519 9 0.0382 4 0.3405 4 0.0686 3 5.678 7 0.2789 4 0.3713 4 0.4741 4 0.0349 4 0.337 4 0.4838 3 8.8221 5 1.4607 7 0.3994 4 0.6389 9)
Average genome size in population (length): 107.588
Average program size in population (points): 108.588
Average percent parens in population: 0.009
Minimum age in population: 23.906005859375
Maximum age in population: 28.84683990478516
Average age in population: 26.98377870941162
Median age in population: 27.04668045043945
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.917
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.917
Total error diversity:				 0.329
Error (vector) diversity:			 0.379
Behavioral diversity:				 0.379
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 33541154
--- Timings ---
Current time: 1529615540770 milliseconds
Total Time:          70.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.6 seconds, 39.4%
Fitness Testing:     32.6 seconds, 46.6%
Report:               9.7 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 71276.8764999999
Test mean error for best: 35.63844
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -60.018       
Correct output: -80.8416452312 | Program output: -57.018       
Correct output: -30.9193529897 | Program output: -79.018       
Correct output: -129.2709853231 | Program output: -107.018      
Correct output: -142.6109625327 | Program output: -89.018       
Correct output: -28.4603903776 | Program output: -12.018       
Correct output: 119.1092560212 | Program output: 27.018        
Correct output: -2.804364668   | Program output: -76.018       
Correct output: -163.7806987108 | Program output: -115.018      
Correct output: 19.3664379282  | Program output: 9.018         
Correct output: -28.7661462515 | Program output: -115.018      
Correct output: -2.9798498499  | Program output: 1.018         
Correct output: -97.3585137143 | Program output: -88.018       
Correct output: -94.0867625621 | Program output: -114.018      
Correct output: -53.340003998  | Program output: -89.018       
Correct output: -171.739275996 | Program output: -127.018      
Correct output: -113.6467160746 | Program output: -107.018      
Correct output: -99.4921227055 | Program output: -65.018       
Correct output: -67.9651207486 | Program output: -64.018       
Correct output: -109.3549767957 | Program output: -123.018      
Correct output: 14.5017756451  | Program output: -82.018       
Correct output: -110.8403243704 | Program output: -57.018       
Correct output: -11.4606904356 | Program output: -65.018       
Correct output: -32.4173586228 | Program output: -53.018       
Correct output: -28.3791179266 | Program output: -108.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_pop} {:instruction integer_mod} {:instruction in1} {:instruction integer_sub} {:instruction float_rot} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_sin} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction in1})
Best program: (in2 integer_pop integer_mod in1 integer_sub float_rot float_dup float_dup integer_inc float_frominteger integer_add float_frominteger float_sub float_sin integer_add integer_yankdup integer_rot integer_add float_dec float_dup_items float_tan integer_mod float_swap integer_mod float_mult integer_swap -37 integer_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap integer_stackdepth integer_dup_items integer_flush float_inc float_add integer_mod float_swap integer_mod integer_div integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan float_inc float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc in2 float_sin integer_stackdepth integer_max float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup in1)
Errors: [0.3821 11 23.8236 11 48.0986 10 22.253 10 53.593 12 16.4424 11 92.0913 11 73.2136 9 48.7627 9 10.3484 10 86.2519 11 3.9978 11 9.3405 11 19.9312 11 35.678 9 44.7213 10 6.6287 11 34.4741 11 3.9471 9 13.663 12 96.5198 11 53.8223 12 53.5573 11 20.6006 10 79.6389 11]
Total: 1216.7812000000001
Mean: 24.335625
Genome size: 128
Size: 129
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3721.4117098999945
Median total errors in population: 1251.7992
Error averages by case: (111.19540179999974 10.66 128.71653800000146 11.233 139.25981289999876 10.607 133.78845199999824 10.587 157.99601379999808 12.089 118.13391630000064 11.346 183.51997129999995 10.785 156.19809840000028 9.282 157.0090751000012 9.811 103.52564470000017 10.875 169.27088290000154 11.176 107.96403649999891 11.023 120.8713451000014 10.891 125.16994700000149 11.729 132.24817 9.48 155.07600380000108 11.083 121.20461990000027 11.429 138.65899900000204 11.147 113.76200840000094 9.979 122.84700360000039 12.134 174.2257384000002 10.96 154.0988833000002 11.978 141.47650819999973 11.153 117.97893440000125 10.307 164.0127051000003 11.459)
Error minima by case: (0.3641 4 0.1764 4 0.9014 8 0.253 5 0.593 4 0.4604 4 22.1093 5 0.7864 7 0.2373 5 0.2953 9 1.2519 9 0.0382 4 0.3405 4 0.0688 3 1.678 8 0.7213 4 0.3713 5 0.4721 4 0.0349 4 0.337 4 1.4982 4 0.8223 5 1.4427 9 0.3994 4 1.6389 8)
Average genome size in population (length): 104.679
Average program size in population (points): 105.679
Average percent parens in population: 0.010
Minimum age in population: 26.15634155273438
Maximum age in population: 30.40751647949219
Average age in population: 28.46326596069336
Median age in population: 28.50998115539551
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.901
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.901
Total error diversity:				 0.31
Error (vector) diversity:			 0.345
Behavioral diversity:				 0.346
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 36158304
--- Timings ---
Current time: 1529615545307 milliseconds
Total Time:          74.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        29.0 seconds, 38.9%
Fitness Testing:     35.0 seconds, 46.9%
Report:              10.5 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 71276.8764999999
Test mean error for best: 35.63844
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -60.018       
Correct output: -80.8416452312 | Program output: -57.018       
Correct output: -30.9193529897 | Program output: -79.018       
Correct output: -129.2709853231 | Program output: -107.018      
Correct output: -142.6109625327 | Program output: -89.018       
Correct output: -28.4603903776 | Program output: -12.018       
Correct output: 119.1092560212 | Program output: 27.018        
Correct output: -2.804364668   | Program output: -76.018       
Correct output: -163.7806987108 | Program output: -115.018      
Correct output: 19.3664379282  | Program output: 9.018         
Correct output: -28.7661462515 | Program output: -115.018      
Correct output: -2.9798498499  | Program output: 1.018         
Correct output: -97.3585137143 | Program output: -88.018       
Correct output: -94.0867625621 | Program output: -114.018      
Correct output: -53.340003998  | Program output: -89.018       
Correct output: -171.739275996 | Program output: -127.018      
Correct output: -113.6467160746 | Program output: -107.018      
Correct output: -99.4921227055 | Program output: -65.018       
Correct output: -67.9651207486 | Program output: -64.018       
Correct output: -109.3549767957 | Program output: -123.018      
Correct output: 14.5017756451  | Program output: -82.018       
Correct output: -110.8403243704 | Program output: -57.018       
Correct output: -11.4606904356 | Program output: -65.018       
Correct output: -32.4173586228 | Program output: -53.018       
Correct output: -28.3791179266 | Program output: -108.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction in1})
Best program: (tagged_947 float_pop float_sin float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_pop print_integer float_inc float_cos integer_div integer_min float_max float_swap integer_mod float_mult integer_swap integer_stackdepth integer_dup_items integer_flush float_inc float_add integer_mod float_swap integer_mod integer_div integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan float_inc float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc in2 float_sin integer_stackdepth integer_max float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float print_integer float_inc in1 integer_yankdup float_inc integer_max float_dup in1)
Errors: [0.3821 11 23.8236 11 48.0986 10 22.253 10 53.593 12 16.4424 11 92.0913 11 73.2136 9 48.7627 9 10.3484 10 86.2519 11 3.9978 11 9.3405 11 19.9312 11 35.678 9 44.7213 10 6.6287 11 34.4741 11 3.9471 9 13.663 12 96.5198 11 53.8223 12 53.5573 11 20.6006 10 79.6389 11]
Total: 1216.7812000000001
Mean: 24.335625
Genome size: 126
Size: 127
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3354.3994598999916
Median total errors in population: 1242.7093999999997
Error averages by case: (99.4287933000002 10.781 116.05134930000143 11.13 129.55987089999886 10.429 120.65188539999848 10.304 145.6508172999981 11.971 90.61524040000033 11.098 151.46182699999974 10.628 146.87626040000052 9.163 144.33209570000173 9.652 70.89876860000044 10.621 159.96906980000136 11.089 71.88350369999935 10.969 107.87227750000082 10.772 114.93695680000108 11.724 122.25718959999988 9.376 142.30474110000114 10.955 108.10131250000035 11.232 126.16585130000215 11.086 101.10428150000055 9.72 112.42300180000032 12.063 165.0791094 10.811 142.08317049999997 11.901 131.8825177000003 11.028 108.09418930000082 10.22 154.6563791000005 11.336)
Error minima by case: (0.3641 6 1.1764 6 5.0986 9 0.253 6 1.611 5 0.4424 6 22.0913 4 0.2138 7 1.2373 6 0.3064 9 0.7481 9 0.0382 6 0.3185 6 0.0688 5 4.66 8 0.6693 5 0.5767 5 0.4741 6 0.0349 6 0.337 6 0.4838 5 1.8403 6 2.4427 8 0.3994 6 1.6389 9)
Average genome size in population (length): 108.849
Average program size in population (points): 109.849
Average percent parens in population: 0.009
Minimum age in population: 27.16738891601562
Maximum age in population: 31.8842658996582
Average age in population: 29.88092464828491
Median age in population: 29.92193412780762
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.908
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.908
Total error diversity:				 0.308
Error (vector) diversity:			 0.334
Behavioral diversity:				 0.334
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 38879704
--- Timings ---
Current time: 1529615550119 milliseconds
Total Time:          79.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        30.5 seconds, 38.4%
Fitness Testing:     37.5 seconds, 47.3%
Report:              11.2 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 71271.66829999993
Test mean error for best: 35.63583
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.018       
Correct output: -80.8416452312 | Program output: -56.018       
Correct output: -30.9193529897 | Program output: -78.018       
Correct output: -129.2709853231 | Program output: -106.018      
Correct output: -142.6109625327 | Program output: -88.018       
Correct output: -28.4603903776 | Program output: -13.018       
Correct output: 119.1092560212 | Program output: 29.018        
Correct output: -2.804364668   | Program output: -75.018       
Correct output: -163.7806987108 | Program output: -114.018      
Correct output: 19.3664379282  | Program output: 12.018        
Correct output: -28.7661462515 | Program output: -114.018      
Correct output: -2.9798498499  | Program output: 4.018         
Correct output: -97.3585137143 | Program output: -87.018       
Correct output: -94.0867625621 | Program output: -113.018      
Correct output: -53.340003998  | Program output: -88.018       
Correct output: -171.739275996 | Program output: -126.018      
Correct output: -113.6467160746 | Program output: -106.018      
Correct output: -99.4921227055 | Program output: -64.018       
Correct output: -67.9651207486 | Program output: -63.018       
Correct output: -109.3549767957 | Program output: -122.018      
Correct output: 14.5017756451  | Program output: -81.018       
Correct output: -110.8403243704 | Program output: -56.018       
Correct output: -11.4606904356 | Program output: -64.018       
Correct output: -32.4173586228 | Program output: -52.018       
Correct output: -28.3791179266 | Program output: -107.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float})
Best program: (integer_min tagged_947 float_pop float_sin float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_pop print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 integer_dup_items float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max integer_rot integer_yank float_pop float_add float_div print_float print_integer float_inc integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float)
Errors: [0.6179 9 24.8236 11 47.0986 10 23.253 10 54.593 12 15.4424 11 90.0913 10 72.2136 9 49.7627 9 7.3484 10 85.2519 10 6.9978 11 10.3405 10 18.9312 12 34.678 9 45.7213 11 7.6287 11 35.4741 11 4.9471 9 12.663 12 95.5198 11 54.8223 12 52.5573 11 19.6006 9 78.6389 11]
Total: 1210.017
Mean: 24.20034
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3255.9552534999893
Median total errors in population: 1242.7493
Error averages by case: (95.30505080000033 10.909 111.0403384000013 11.041 124.78834829999884 10.358 114.96220179999861 10.461 140.54380079999837 11.928 90.54925740000022 11.104 150.68737809999973 10.67 142.3737089000009 9.153 139.12491480000162 9.607 74.55389630000053 10.568 155.76030260000144 11.083 73.9283364999994 11.046 102.44976720000044 10.924 110.83907180000115 11.652 116.56102599999979 9.412 136.95515660000098 10.926 102.76108860000024 11.193 120.40287080000182 11.055 95.80728720000019 9.701 107.20742780000033 12.058 160.47636369999955 10.925 137.76798419999994 11.89 127.2197206000004 11.017 102.3399314000007 10.265 151.19802290000104 11.406)
Error minima by case: (0.3641 5 0.1764 5 0.8594 9 0.747 6 2.407 5 0.4424 4 11.9087 5 0.7864 5 4.7627 6 0.2917 8 1.2939 8 0.0382 4 0.3405 5 0.0688 4 3.322 8 0.7213 5 0.6287 6 0.4741 5 0.0349 5 0.3368 5 0.4838 5 2.1777 6 0.4427 8 0.3994 5 1.6809 8)
Average genome size in population (length): 114.742
Average program size in population (points): 115.742
Average percent parens in population: 0.009
Minimum age in population: 28.75114059448242
Maximum age in population: 33.32735347747803
Average age in population: 31.28198635005951
Median age in population: 31.32223272323608
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.931
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.931
Total error diversity:				 0.338
Error (vector) diversity:			 0.362
Behavioral diversity:				 0.363
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 41748754
--- Timings ---
Current time: 1529615554793 milliseconds
Total Time:          84.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        31.9 seconds, 37.9%
Fitness Testing:     40.1 seconds, 47.6%
Report:              12.1 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 71271.66829999993
Test mean error for best: 35.63583
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.018       
Correct output: -80.8416452312 | Program output: -56.018       
Correct output: -30.9193529897 | Program output: -78.018       
Correct output: -129.2709853231 | Program output: -106.018      
Correct output: -142.6109625327 | Program output: -88.018       
Correct output: -28.4603903776 | Program output: -13.018       
Correct output: 119.1092560212 | Program output: 29.018        
Correct output: -2.804364668   | Program output: -75.018       
Correct output: -163.7806987108 | Program output: -114.018      
Correct output: 19.3664379282  | Program output: 12.018        
Correct output: -28.7661462515 | Program output: -114.018      
Correct output: -2.9798498499  | Program output: 4.018         
Correct output: -97.3585137143 | Program output: -87.018       
Correct output: -94.0867625621 | Program output: -113.018      
Correct output: -53.340003998  | Program output: -88.018       
Correct output: -171.739275996 | Program output: -126.018      
Correct output: -113.6467160746 | Program output: -106.018      
Correct output: -99.4921227055 | Program output: -64.018       
Correct output: -67.9651207486 | Program output: -63.018       
Correct output: -109.3549767957 | Program output: -122.018      
Correct output: 14.5017756451  | Program output: -81.018       
Correct output: -110.8403243704 | Program output: -56.018       
Correct output: -11.4606904356 | Program output: -64.018       
Correct output: -32.4173586228 | Program output: -52.018       
Correct output: -28.3791179266 | Program output: -107.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_flush} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction tag_float_790} {:instruction in1} {:instruction integer_yankdup})
Best program: (tagged_947 float_pop float_sin float_dec float_sub integer_inc integer_flush float_dec float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 integer_dup_items float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max integer_rot integer_yank float_pop float_add float_div print_float print_integer float_inc integer_flush integer_yank float_pop float_add float_div print_float print_integer tag_float_790 in1 integer_yankdup)
Errors: [0.6179 9 24.8236 11 47.0986 10 23.253 10 54.593 12 15.4424 11 90.0913 10 72.2136 9 49.7627 9 7.3484 10 85.2519 10 6.9978 11 10.3405 10 18.9312 12 34.678 9 45.7213 11 7.6287 11 35.4741 11 4.9471 9 12.663 12 95.5198 11 54.8223 12 52.5573 11 19.6006 9 78.6389 11]
Total: 1210.017
Mean: 24.20034
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3081.012239899992
Median total errors in population: 1237.2812
Error averages by case: (85.80225470000033 10.912 103.52118480000131 11.027 114.79790079999887 10.248 108.67325049999864 10.486 134.53378869999813 11.967 89.89697050000034 11.101 151.96613459999972 10.715 132.14022030000123 9.148 133.49150300000187 9.529 72.49541960000066 10.483 145.5571711000014 11.026 72.53912609999915 11.0 95.54463940000045 10.987 101.50314480000101 11.509 107.71008679999976 9.374 131.38171630000107 10.859 95.8467635000004 11.284 113.96398150000188 11.11 88.26812030000029 9.635 99.13176420000026 12.084 150.46941979999926 10.997 130.5761787 11.935 117.10305660000036 11.0 93.98822510000072 10.191 140.08621820000133 11.417)
Error minima by case: (0.3641 5 0.1584 5 0.9014 8 0.253 6 4.407 6 0.5396 5 2.9087 5 0.7864 7 3.7627 5 0.3483 8 0.7481 8 0.0382 5 0.3405 4 0.0686 5 0.678 8 0.2787 5 0.3533 6 0.4741 5 0.0349 5 0.3368 5 1.4838 5 8.8223 5 1.4427 9 0.3994 5 0.3611 9)
Average genome size in population (length): 117.234
Average program size in population (points): 118.234
Average percent parens in population: 0.009
Minimum age in population: 30.12640857696533
Maximum age in population: 35.01430797576904
Average age in population: 32.84339204120636
Median age in population: 32.87793302536011
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.929
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.929
Total error diversity:				 0.33
Error (vector) diversity:			 0.357
Behavioral diversity:				 0.357
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 44679904
--- Timings ---
Current time: 1529615559566 milliseconds
Total Time:          88.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.4 seconds, 37.6%
Fitness Testing:     42.7 seconds, 48.0%
Report:              12.7 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 71271.66829999993
Test mean error for best: 35.63583
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.018       
Correct output: -80.8416452312 | Program output: -56.018       
Correct output: -30.9193529897 | Program output: -78.018       
Correct output: -129.2709853231 | Program output: -106.018      
Correct output: -142.6109625327 | Program output: -88.018       
Correct output: -28.4603903776 | Program output: -13.018       
Correct output: 119.1092560212 | Program output: 29.018        
Correct output: -2.804364668   | Program output: -75.018       
Correct output: -163.7806987108 | Program output: -114.018      
Correct output: 19.3664379282  | Program output: 12.018        
Correct output: -28.7661462515 | Program output: -114.018      
Correct output: -2.9798498499  | Program output: 4.018         
Correct output: -97.3585137143 | Program output: -87.018       
Correct output: -94.0867625621 | Program output: -113.018      
Correct output: -53.340003998  | Program output: -88.018       
Correct output: -171.739275996 | Program output: -126.018      
Correct output: -113.6467160746 | Program output: -106.018      
Correct output: -99.4921227055 | Program output: -64.018       
Correct output: -67.9651207486 | Program output: -63.018       
Correct output: -109.3549767957 | Program output: -122.018      
Correct output: 14.5017756451  | Program output: -81.018       
Correct output: -110.8403243704 | Program output: -56.018       
Correct output: -11.4606904356 | Program output: -64.018       
Correct output: -32.4173586228 | Program output: -52.018       
Correct output: -28.3791179266 | Program output: -107.018      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float})
Best program: (integer_min tagged_947 float_pop float_sin float_dec float_sub integer_inc integer_flush float_stackdepth float_frominteger tagged_153 float_flush integer_shove float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_pop print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 integer_dup_items float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max integer_rot integer_yank float_pop float_add float_div print_float print_integer float_inc integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_pop float_add float_div print_float)
Errors: [0.6179 9 24.8236 11 47.0986 10 23.253 10 54.593 12 15.4424 11 90.0913 10 72.2136 9 49.7627 9 7.3484 10 85.2519 10 6.9978 11 10.3405 10 18.9312 12 34.678 9 45.7213 11 7.6287 11 35.4741 11 4.9471 9 12.663 12 95.5198 11 54.8223 12 52.5573 11 19.6006 9 78.6389 11]
Total: 1210.017
Mean: 24.20034
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3134.345290799994
Median total errors in population: 1233.7992
Error averages by case: (86.90704280000031 10.908 106.28792610000143 11.034 118.5667869999989 10.334 111.61374259999852 10.486 137.6273031999979 11.988 91.19431970000042 11.153 149.31197229999972 10.819 136.43624230000094 9.211 135.31710770000205 9.48 68.8662511000006 10.487 148.8880262000015 11.121 69.94215889999926 10.999 98.7320760000008 11.026 104.27580630000148 11.437 111.02004959999968 9.373 133.00880350000133 10.772 98.69577410000042 11.304 117.58521350000203 11.109 91.76658690000053 9.632 100.63858110000027 12.082 153.0812059999991 11.026 133.20830080000007 11.97 121.09113040000025 11.074 96.68193450000089 10.174 143.1809482000011 11.421)
Error minima by case: (0.3641 5 0.1764 5 1.9014 9 0.253 6 0.407 5 0.5396 5 7.9087 7 0.7864 7 5.2373 6 0.3483 9 0.2519 9 0.0382 7 1.3405 5 0.0688 4 0.322 7 4.7213 5 0.3713 6 0.4741 5 0.0349 5 0.3368 5 0.5162 5 0.1777 6 0.5573 8 0.3994 5 0.6389 10)
Average genome size in population (length): 118.924
Average program size in population (points): 119.924
Average percent parens in population: 0.008
Minimum age in population: 31.32301330566406
Maximum age in population: 36.07843732833862
Average age in population: 34.26574116659164
Median age in population: 34.31517541408539
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.939
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.939
Total error diversity:				 0.328
Error (vector) diversity:			 0.351
Behavioral diversity:				 0.351
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 47653129
--- Timings ---
Current time: 1529615564258 milliseconds
Total Time:          93.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.8 seconds, 37.2%
Fitness Testing:     45.3 seconds, 48.4%
Report:              13.4 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 72241.5822999999
Test mean error for best: 36.12079
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -63.0324      
Correct output: -80.8416452312 | Program output: -60.0324      
Correct output: -30.9193529897 | Program output: -82.0324      
Correct output: -129.2709853231 | Program output: -110.0324     
Correct output: -142.6109625327 | Program output: -92.0324      
Correct output: -28.4603903776 | Program output: -13.0324      
Correct output: 119.1092560212 | Program output: 41.0324       
Correct output: -2.804364668   | Program output: -79.0324      
Correct output: -163.7806987108 | Program output: -118.0324     
Correct output: 19.3664379282  | Program output: 18.0324       
Correct output: -28.7661462515 | Program output: -118.0324     
Correct output: -2.9798498499  | Program output: 26.0324       
Correct output: -97.3585137143 | Program output: -91.0324      
Correct output: -94.0867625621 | Program output: -117.0324     
Correct output: -53.340003998  | Program output: -92.0324      
Correct output: -171.739275996 | Program output: -130.0324     
Correct output: -113.6467160746 | Program output: -110.0324     
Correct output: -99.4921227055 | Program output: -68.0324      
Correct output: -67.9651207486 | Program output: -67.0324      
Correct output: -109.3549767957 | Program output: -126.0324     
Correct output: 14.5017756451  | Program output: -85.0324      
Correct output: -110.8403243704 | Program output: -60.0324      
Correct output: -11.4606904356 | Program output: -68.0324      
Correct output: -32.4173586228 | Program output: -56.0324      
Correct output: -28.3791179266 | Program output: -111.0324     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_tan} {:instruction in2} {:instruction integer_mult} {:instruction in1} {:instruction integer_flush} {:instruction integer_inc} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction integer_dec} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_sin} {:instruction -37} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_shove} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_381} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction in2} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush integer_inc float_tan in2 integer_mult in1 integer_flush integer_inc integer_dec float_stackdepth tag_float_835 integer_dec float_dup float_frominteger float_pop print_integer float_inc integer_sub integer_div integer_min float_max float_sin -37 integer_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap integer_stackdepth integer_dup_items integer_flush float_inc float_add integer_mod float_swap integer_mod integer_div integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan float_shove float_sin integer_stackdepth float_add integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_381 integer_fromfloat integer_mod in2 integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub float_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [3.3965 10 20.8092 10 51.113 10 19.2386 9 50.5786 9 15.428 10 78.0769 10 76.228 8 45.7483 11 1.334 9 89.2663 11 29.0122 11 6.3261 9 22.9456 11 38.6924 9 41.7069 9 3.6143 10 31.4597 11 0.9327 8 16.6774 11 99.5342 11 50.8079 8 56.5717 10 23.615 10 82.6533 11]
Total: 1201.7667999999999
Mean: 24.035336
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2966.6940996999965
Median total errors in population: 1228.34325
Error averages by case: (80.56424290000012 10.794 97.9598878000013 10.945 112.04202359999914 10.348 103.16219079999875 10.448 129.92371639999797 11.995 80.57511630000019 11.148 144.44490799999986 10.808 129.9486488000011 9.167 128.5128730000019 9.374 65.3754093000005 10.484 144.4360826000012 11.07 65.02261139999939 10.896 90.86143140000043 10.888 97.31513600000115 11.454 105.1919673999997 9.419 126.30783180000097 10.846 90.45381720000037 11.283 109.2187573000016 11.12 83.59414550000008 9.621 94.59939380000026 12.098 148.73733539999932 11.008 125.1992662000002 11.981 114.98515770000022 11.134 90.39486430000052 10.038 138.13828480000117 11.362)
Error minima by case: (0.3641 3 0.1764 3 2.9014 9 0.2528 4 10.407 3 0.4424 3 9.1093 4 0.7864 7 5.7457 4 0.3483 9 0.7481 9 0.9618 3 0.3405 3 0.0686 2 4.678 8 1.7043 3 0.3533 4 1.5259 3 0.0349 3 0.3368 3 0.4838 3 10.1777 4 2.4425 8 0.3994 3 2.3609 10)
Average genome size in population (length): 120.257
Average program size in population (points): 121.257
Average percent parens in population: 0.008
Minimum age in population: 32.73776435852051
Maximum age in population: 37.74125647544861
Average age in population: 35.70718304479122
Median age in population: 35.72821325063705
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.942
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.942
Total error diversity:				 0.321
Error (vector) diversity:			 0.339
Behavioral diversity:				 0.34
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 50659654
--- Timings ---
Current time: 1529615569261 milliseconds
Total Time:          98.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.3 seconds, 36.8%
Fitness Testing:     48.1 seconds, 48.8%
Report:              14.1 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 70865.7371
Test mean error for best: 35.43287
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -60.06918     
Correct output: -80.8416452312 | Program output: -57.06918     
Correct output: -30.9193529897 | Program output: -79.06918     
Correct output: -129.2709853231 | Program output: -107.06918    
Correct output: -142.6109625327 | Program output: -89.06918     
Correct output: -28.4603903776 | Program output: -12.06918     
Correct output: 119.1092560212 | Program output: 27.06918      
Correct output: -2.804364668   | Program output: -76.06918     
Correct output: -163.7806987108 | Program output: -115.06918    
Correct output: 19.3664379282  | Program output: 9.06918       
Correct output: -28.7661462515 | Program output: -115.06918    
Correct output: -2.9798498499  | Program output: 1.06918       
Correct output: -97.3585137143 | Program output: -88.06918     
Correct output: -94.0867625621 | Program output: -114.06918    
Correct output: -53.340003998  | Program output: -89.06918     
Correct output: -171.739275996 | Program output: -127.06918    
Correct output: -113.6467160746 | Program output: -107.06918    
Correct output: -99.4921227055 | Program output: -65.06918     
Correct output: -67.9651207486 | Program output: -64.06918     
Correct output: -109.3549767957 | Program output: -123.06918    
Correct output: 14.5017756451  | Program output: -82.06918     
Correct output: -110.8403243704 | Program output: -57.06918     
Correct output: -11.4606904356 | Program output: -65.06918     
Correct output: -32.4173586228 | Program output: -53.06918     
Correct output: -28.3791179266 | Program output: -108.06918    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_yank} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_inc} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction 69} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_cos} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup})
Best program: (float_frominteger integer_add integer_yankdup integer_rot float_yank float_dec integer_dup_items float_tan integer_mod float_swap integer_mod float_mult integer_swap float_frominteger float_pop print_integer float_inc integer_stackdepth integer_dup_items integer_flush float_inc float_add integer_mod float_swap integer_mod integer_div integer_swap -37 integer_dup_items float_dup_times float_inc float_add float_yankdup float_tan float_inc float_sin integer_stackdepth float_add float_sin integer_shove in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_dup_times integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_inc integer_inc integer_sub integer_stackdepth integer_inc float_sin integer_dup_items in2 tag_float_274 float_rot float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank 69 float_add float_div print_float print_integer 18 integer_dup integer_max float_cos integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup)
Errors: [0.4333 11 23.7725 10 48.1498 10 22.2018 11 53.5418 11 16.3912 10 92.0401 10 73.2648 8 48.7115 7 10.2973 8 86.303 11 4.049 10 9.2893 11 19.9824 10 35.7292 8 44.6701 10 6.5775 10 34.4229 11 3.8959 8 13.7142 10 96.571 11 53.7711 12 53.6085 9 20.6518 10 79.6901 10]
Total: 1198.7301000000002
Mean: 23.974602
Genome size: 129
Size: 130
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3377.976645899996
Median total errors in population: 1232.8172
Error averages by case: (98.15848279999963 10.571 117.01280840000108 10.929 128.5173561999996 10.374 121.97463709999884 10.557 147.44795429999826 11.983 94.74639710000037 11.208 157.8135702999998 10.719 145.71846769999996 9.244 146.20428460000107 9.42 78.82587930000038 10.51 158.73408600000104 11.003 80.45842249999934 10.864 108.81705010000086 10.719 113.19956780000142 11.595 120.1894575999995 9.463 144.01701130000092 11.03 108.98997120000062 11.347 127.49213820000173 11.165 101.63251560000063 9.661 110.73442770000004 12.127 163.80503959999984 11.037 143.6322957000001 11.965 130.701957 11.142 105.88262680000113 9.923 153.3212410000003 11.393)
Error minima by case: (0.1237 4 0.1584 4 1.9012 8 0.253 5 0.4072 4 0.5576 4 22.0913 5 0.2136 7 1.7627 5 0.2944 8 0.252 9 0.0382 4 0.6415 4 0.0686 3 3.678 7 1.7393 4 0.3713 5 0.4741 4 0.0529 4 0.337 4 0.5162 4 0.1779 5 0.4427 7 0.3994 4 0.6391 10)
Average genome size in population (length): 119.425
Average program size in population (points): 120.425
Average percent parens in population: 0.008
Minimum age in population: 33.73776435852051
Maximum age in population: 39.01335102319717
Average age in population: 37.24120898640156
Median age in population: 37.28668177127838
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.918
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.918
Total error diversity:				 0.383
Error (vector) diversity:			 0.412
Behavioral diversity:				 0.412
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 53645304
--- Timings ---
Current time: 1529615574138 milliseconds
Total Time:         103.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.7 seconds, 36.5%
Fitness Testing:     50.7 seconds, 49.1%
Report:              14.8 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 71016.02189999992
Test mean error for best: 35.50801
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0324      
Correct output: -80.8416452312 | Program output: -56.0324      
Correct output: -30.9193529897 | Program output: -78.0324      
Correct output: -129.2709853231 | Program output: -106.0324     
Correct output: -142.6109625327 | Program output: -88.0324      
Correct output: -28.4603903776 | Program output: -13.0324      
Correct output: 119.1092560212 | Program output: 29.0324       
Correct output: -2.804364668   | Program output: -75.0324      
Correct output: -163.7806987108 | Program output: -114.0324     
Correct output: 19.3664379282  | Program output: 12.0324       
Correct output: -28.7661462515 | Program output: -114.0324     
Correct output: -2.9798498499  | Program output: 4.0324        
Correct output: -97.3585137143 | Program output: -87.0324      
Correct output: -94.0867625621 | Program output: -113.0324     
Correct output: -53.340003998  | Program output: -88.0324      
Correct output: -171.739275996 | Program output: -126.0324     
Correct output: -113.6467160746 | Program output: -106.0324     
Correct output: -99.4921227055 | Program output: -64.0324      
Correct output: -67.9651207486 | Program output: -63.0324      
Correct output: -109.3549767957 | Program output: -122.0324     
Correct output: 14.5017756451  | Program output: -81.0324      
Correct output: -110.8403243704 | Program output: -56.0324      
Correct output: -11.4606904356 | Program output: -64.0324      
Correct output: -32.4173586228 | Program output: -52.0324      
Correct output: -28.3791179266 | Program output: -107.0324     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_dup_items float_inc in2 integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_shove in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup in2 -36 float_tan integer_flush print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.6035 9 24.8092 11 47.113 10 23.2386 9 54.5786 10 15.428 10 90.0769 10 72.228 8 49.7483 11 7.334 9 85.2663 11 7.0122 11 10.3261 9 18.9456 11 34.6924 9 45.7069 9 7.6143 11 35.4597 11 4.9327 9 12.6774 11 95.5342 11 54.8079 9 52.5717 10 19.615 9 78.6533 11]
Total: 1197.9738
Mean: 23.959476
Genome size: 120
Size: 121
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3742.968683899991
Median total errors in population: 1223.8341
Error averages by case: (112.59983499999942 10.217 131.67240680000114 10.991 143.26077169999948 10.431 136.15012029999878 10.659 162.09017939999848 12.034 111.5263455000003 11.214 170.93110179999985 10.613 160.7511997999998 9.373 160.45494170000086 9.558 91.67993350000037 10.536 173.69284230000108 10.937 93.38179519999949 11.003 123.37429580000078 10.556 127.80651440000145 11.805 135.7801385 9.587 158.05470810000054 11.204 123.0544859000006 11.359 142.37026420000137 11.231 116.32825960000056 9.739 124.94832120000008 12.154 179.10598920000012 11.157 158.2329834 12.002 145.75840719999943 11.163 120.97728580000091 9.795 168.29155760000012 11.376)
Error minima by case: (0.3641 7 0.1754 8 6.9014 8 0.253 8 5.407 7 0.4424 8 9.9087 7 0.2136 7 0.7807 6 0.2973 7 2.7491 9 0.0382 7 0.3403 8 0.0686 9 2.678 8 1.7069 8 0.3713 7 0.5259 9 0.0349 8 0.3368 8 1.4838 8 5.8403 7 0.4427 8 0.3994 7 0.6391 9)
Average genome size in population (length): 117.908
Average program size in population (points): 118.908
Average percent parens in population: 0.008
Minimum age in population: 36.49872779846191
Maximum age in population: 40.40634289383888
Average age in population: 38.6387989679873
Median age in population: 38.73156803846359
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.909
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.909
Total error diversity:				 0.368
Error (vector) diversity:			 0.389
Behavioral diversity:				 0.39
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 56593079
--- Timings ---
Current time: 1529615578940 milliseconds
Total Time:         108.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.2 seconds, 36.2%
Fitness Testing:     53.4 seconds, 49.3%
Report:              15.6 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 71016.02189999992
Test mean error for best: 35.50801
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0324      
Correct output: -80.8416452312 | Program output: -56.0324      
Correct output: -30.9193529897 | Program output: -78.0324      
Correct output: -129.2709853231 | Program output: -106.0324     
Correct output: -142.6109625327 | Program output: -88.0324      
Correct output: -28.4603903776 | Program output: -13.0324      
Correct output: 119.1092560212 | Program output: 29.0324       
Correct output: -2.804364668   | Program output: -75.0324      
Correct output: -163.7806987108 | Program output: -114.0324     
Correct output: 19.3664379282  | Program output: 12.0324       
Correct output: -28.7661462515 | Program output: -114.0324     
Correct output: -2.9798498499  | Program output: 4.0324        
Correct output: -97.3585137143 | Program output: -87.0324      
Correct output: -94.0867625621 | Program output: -113.0324     
Correct output: -53.340003998  | Program output: -88.0324      
Correct output: -171.739275996 | Program output: -126.0324     
Correct output: -113.6467160746 | Program output: -106.0324     
Correct output: -99.4921227055 | Program output: -64.0324      
Correct output: -67.9651207486 | Program output: -63.0324      
Correct output: -109.3549767957 | Program output: -122.0324     
Correct output: 14.5017756451  | Program output: -81.0324      
Correct output: -110.8403243704 | Program output: -56.0324      
Correct output: -11.4606904356 | Program output: -64.0324      
Correct output: -32.4173586228 | Program output: -52.0324      
Correct output: -28.3791179266 | Program output: -107.0324     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin integer_pop float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_dup_items float_inc in2 integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_shove in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup in2 -36 float_tan integer_flush print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.6035 9 24.8092 11 47.113 10 23.2386 9 54.5786 10 15.428 10 90.0769 10 72.228 8 49.7483 11 7.334 9 85.2663 11 7.0122 11 10.3261 9 18.9456 11 34.6924 9 45.7069 9 7.6143 11 35.4597 11 4.9327 9 12.6774 11 95.5342 11 54.8079 9 52.5717 10 19.615 9 78.6533 11]
Total: 1197.9738
Mean: 23.959476
Genome size: 120
Size: 121
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3661.194738299994
Median total errors in population: 1212.017
Error averages by case: (107.85516799999957 10.129 127.78991280000082 10.878 138.9216429000003 10.369 131.0240648999992 10.587 156.80042069999877 11.839 106.32577190000076 11.111 174.25559529999947 10.607 157.98607189999927 9.463 154.85345100000106 9.619 96.2000751000004 10.513 170.6533945000009 10.95 98.57871689999985 10.999 118.6868179000007 10.356 123.32612250000157 11.659 131.83024689999928 9.715 152.44233180000032 11.117 118.26534920000094 11.327 137.60320810000155 11.193 111.22782440000061 9.779 120.3619868999998 12.083 176.6214186000003 11.143 154.11942449999975 11.827 142.62375489999908 11.141 118.17844650000117 9.756 165.26152020000018 11.242)
Error minima by case: (0.3641 4 0.1702 4 1.9012 8 0.253 5 2.407 4 0.5576 4 4.9097 5 0.2136 7 5.7483 5 0.334 8 0.252 9 0.0382 4 0.6595 4 0.0686 3 0.678 8 1.7069 4 0.3533 5 0.5259 4 0.0529 4 0.3368 4 1.5162 4 2.1777 5 1.4427 9 0.3992 4 0.6391 9)
Average genome size in population (length): 118.441
Average program size in population (points): 119.441
Average percent parens in population: 0.008
Minimum age in population: 37.84591484069824
Maximum age in population: 42.011115193367
Average age in population: 40.0996584187001
Median age in population: 40.12281872332096
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.924
Total error diversity:				 0.342
Error (vector) diversity:			 0.355
Behavioral diversity:				 0.356
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 59554429
--- Timings ---
Current time: 1529615583809 milliseconds
Total Time:         113.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.6 seconds, 35.9%
Fitness Testing:     56.0 seconds, 49.5%
Report:              16.4 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 70748.69989999989
Test mean error for best: 35.37435
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.018324    
Correct output: -80.8416452312 | Program output: -56.018324    
Correct output: -30.9193529897 | Program output: -78.018324    
Correct output: -129.2709853231 | Program output: -106.018324   
Correct output: -142.6109625327 | Program output: -88.018324    
Correct output: -28.4603903776 | Program output: -13.018324    
Correct output: 119.1092560212 | Program output: 29.018324     
Correct output: -2.804364668   | Program output: -75.018324    
Correct output: -163.7806987108 | Program output: -114.018324   
Correct output: 19.3664379282  | Program output: 12.018324     
Correct output: -28.7661462515 | Program output: -114.018324   
Correct output: -2.9798498499  | Program output: 4.018324      
Correct output: -97.3585137143 | Program output: -87.018324    
Correct output: -94.0867625621 | Program output: -113.018324   
Correct output: -53.340003998  | Program output: -88.018324    
Correct output: -171.739275996 | Program output: -126.018324   
Correct output: -113.6467160746 | Program output: -106.018324   
Correct output: -99.4921227055 | Program output: -64.018324    
Correct output: -67.9651207486 | Program output: -63.018324    
Correct output: -109.3549767957 | Program output: -122.018324   
Correct output: 14.5017756451  | Program output: -81.018324    
Correct output: -110.8403243704 | Program output: -56.018324    
Correct output: -11.4606904356 | Program output: -64.018324    
Correct output: -32.4173586228 | Program output: -52.018324    
Correct output: -28.3791179266 | Program output: -107.018324   
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_tan} {:instruction in2} {:instruction integer_mult} {:instruction in1} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_add} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush integer_inc float_tan in2 integer_mult in1 integer_flush integer_inc float_sin integer_add float_sin float_stackdepth float_pop float_yankdup in2 integer_min float_cos float_dup float_frominteger float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_dup_items float_inc in2 integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max integer_rot integer_yank float_pop float_add float_div print_float print_integer float_inc in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.6176 8 24.8233 10 47.099 9 23.2527 8 54.5926 10 15.4421 10 90.0909 10 72.214 9 49.7624 10 7.3481 9 85.2522 11 6.9982 10 10.3402 8 18.9316 11 34.6783 9 45.721 11 7.6284 10 35.4738 11 4.9468 9 12.6633 12 95.5201 10 54.822 10 52.5576 10 19.601 8 78.6392 10]
Total: 1192.0164000000004
Mean: 23.840328
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4457.4034986000015
Median total errors in population: 1216.7812000000001
Error averages by case: (143.1305204000004 10.163 160.03856729999987 10.616 174.48437930000168 10.221 163.36891759999915 10.446 187.61687450000102 11.397 133.41020040000078 10.796 194.6036619999985 10.601 192.67650789999914 9.518 185.71566270000153 9.768 121.42054979999995 10.434 204.95616380000044 11.116 121.23378990000074 10.883 151.72270200000074 9.908 157.70872370000095 11.347 166.4413176999993 9.812 184.22057369999888 10.765 151.46249130000018 11.052 169.6456986000005 11.025 146.84727240000035 9.703 155.63333020000005 11.791 211.1230543000004 11.085 184.88022439999983 11.347 177.42465459999835 11.017 152.26164999999915 9.771 199.6350101000003 11.159)
Error minima by case: (0.3641 4 0.1764 4 0.113 8 0.2528 5 2.5786 4 0.572 4 1.1093 5 0.7864 7 0.7625 5 0.334 8 2.2663 9 0.9617 4 0.3261 4 0.9312 3 2.6924 8 1.6835 4 0.3703 5 0.472 4 0.0529 4 0.3348 4 0.5018 4 2.8079 5 1.4425 8 0.385 4 2.6533 9)
Average genome size in population (length): 122.514
Average program size in population (points): 123.514
Average percent parens in population: 0.008
Minimum age in population: 39.27891893684864
Maximum age in population: 43.33086159080267
Average age in population: 41.57872156593204
Median age in population: 41.64664105698466
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.929
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.929
Total error diversity:				 0.42
Error (vector) diversity:			 0.449
Behavioral diversity:				 0.449
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 62617779
--- Timings ---
Current time: 1529615588863 milliseconds
Total Time:         118.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.1 seconds, 35.6%
Fitness Testing:     58.8 seconds, 49.7%
Report:              17.1 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 70848.0246999999
Test mean error for best: 35.42401
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0324324   
Correct output: -80.8416452312 | Program output: -56.0324324   
Correct output: -30.9193529897 | Program output: -78.0324324   
Correct output: -129.2709853231 | Program output: -106.0324324  
Correct output: -142.6109625327 | Program output: -88.0324324   
Correct output: -28.4603903776 | Program output: -13.0324324   
Correct output: 119.1092560212 | Program output: 29.0324324    
Correct output: -2.804364668   | Program output: -75.0324324   
Correct output: -163.7806987108 | Program output: -114.0324324  
Correct output: 19.3664379282  | Program output: 12.0324324    
Correct output: -28.7661462515 | Program output: -114.0324324  
Correct output: -2.9798498499  | Program output: 4.0324324     
Correct output: -97.3585137143 | Program output: -87.0324324   
Correct output: -94.0867625621 | Program output: -113.0324324  
Correct output: -53.340003998  | Program output: -88.0324324   
Correct output: -171.739275996 | Program output: -126.0324324  
Correct output: -113.6467160746 | Program output: -106.0324324  
Correct output: -99.4921227055 | Program output: -64.0324324   
Correct output: -67.9651207486 | Program output: -63.0324324   
Correct output: -109.3549767957 | Program output: -122.0324324  
Correct output: 14.5017756451  | Program output: -81.0324324   
Correct output: -110.8403243704 | Program output: -56.0324324   
Correct output: -11.4606904356 | Program output: -64.0324324   
Correct output: -32.4173586228 | Program output: -52.0324324   
Correct output: -28.3791179266 | Program output: -107.0324324  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_dup_items float_inc in2 integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_shove in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup in2 -36 float_tan integer_flush print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc integer_shove 18 integer_dup integer_max float_div integer_yank float_pop 18 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.6035 8 24.8092 10 47.1131 10 23.2386 9 54.5785 9 15.428 9 90.0768 9 72.2281 8 49.7483 11 7.334 8 85.2663 11 7.0123 10 10.3261 9 18.9457 10 34.6924 10 45.7068 9 7.6143 11 35.4597 10 4.9327 10 12.6775 11 95.5342 11 54.8079 7 52.5717 9 19.6151 9 78.6533 12]
Total: 1188.9741
Mean: 23.779482
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4881.753400199998
Median total errors in population: 1214.274
Error averages by case: (159.43475790000053 9.957 174.7979863999998 10.512 190.61901570000205 10.043 178.93416149999908 10.264 203.01953080000143 10.903 158.3069201000008 10.515 217.62627429999824 10.584 208.8209402999998 9.517 200.78103050000195 10.124 146.32518590000015 10.29 220.83909349999968 11.193 149.83505060000047 11.013 167.9763572000009 9.603 173.35662710000108 11.045 182.44134459999896 9.932 198.28470869999867 10.39 167.30831220000027 10.805 185.34480600000012 10.892 162.0753077 9.675 170.16061069999984 11.496 227.24245750000054 10.989 199.18792859999985 10.771 193.3973392999989 10.832 167.83226009999933 9.873 215.55839300000085 11.029)
Error minima by case: (0.3641 6 0.1765 6 6.8994 8 0.2528 6 2.5786 5 0.4422 6 7.9109 4 0.2138 7 0.7625 6 0.334 8 0.748 8 0.9474 6 0.3261 6 0.0868 5 2.68 7 1.7069 5 0.3533 5 1.4597 6 0.0529 6 0.3226 6 1.5164 5 2.8079 6 1.4407 8 0.385 6 3.6391 8)
Average genome size in population (length): 124.252
Average program size in population (points): 125.252
Average percent parens in population: 0.008
Minimum age in population: 40.74108169972897
Maximum age in population: 44.83702087029815
Average age in population: 42.97894707020372
Median age in population: 42.99378885887563
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.424
Error (vector) diversity:			 0.462
Behavioral diversity:				 0.462
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 65724604
--- Timings ---
Current time: 1529615593992 milliseconds
Total Time:         123.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.6 seconds, 35.4%
Fitness Testing:     61.5 seconds, 50.0%
Report:              17.9 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 70848.0246999999
Test mean error for best: 35.42401
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0324324   
Correct output: -80.8416452312 | Program output: -56.0324324   
Correct output: -30.9193529897 | Program output: -78.0324324   
Correct output: -129.2709853231 | Program output: -106.0324324  
Correct output: -142.6109625327 | Program output: -88.0324324   
Correct output: -28.4603903776 | Program output: -13.0324324   
Correct output: 119.1092560212 | Program output: 29.0324324    
Correct output: -2.804364668   | Program output: -75.0324324   
Correct output: -163.7806987108 | Program output: -114.0324324  
Correct output: 19.3664379282  | Program output: 12.0324324    
Correct output: -28.7661462515 | Program output: -114.0324324  
Correct output: -2.9798498499  | Program output: 4.0324324     
Correct output: -97.3585137143 | Program output: -87.0324324   
Correct output: -94.0867625621 | Program output: -113.0324324  
Correct output: -53.340003998  | Program output: -88.0324324   
Correct output: -171.739275996 | Program output: -126.0324324  
Correct output: -113.6467160746 | Program output: -106.0324324  
Correct output: -99.4921227055 | Program output: -64.0324324   
Correct output: -67.9651207486 | Program output: -63.0324324   
Correct output: -109.3549767957 | Program output: -122.0324324  
Correct output: 14.5017756451  | Program output: -81.0324324   
Correct output: -110.8403243704 | Program output: -56.0324324   
Correct output: -11.4606904356 | Program output: -64.0324324   
Correct output: -32.4173586228 | Program output: -52.0324324   
Correct output: -28.3791179266 | Program output: -107.0324324  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_flush} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth in1 integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_flush print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc integer_shove 18 integer_dup integer_max float_div integer_yank float_pop 18 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.6035 8 24.8092 10 47.1131 10 23.2386 9 54.5785 9 15.428 9 90.0768 9 72.2281 8 49.7483 11 7.334 8 85.2663 11 7.0123 10 10.3261 9 18.9457 10 34.6924 10 45.7068 9 7.6143 11 35.4597 10 4.9327 10 12.6775 11 95.5342 11 54.8079 7 52.5717 9 19.6151 9 78.6533 12]
Total: 1188.9741
Mean: 23.779482
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4639.709370099999
Median total errors in population: 1210.39905
Error averages by case: (149.7939041000001 9.869 167.87647229999956 10.727 178.70033250000142 10.176 171.52032859999994 10.284 196.2827761000016 10.913 150.50272160000057 10.612 204.67678339999827 10.71 195.91183050000024 9.681 194.5231040000021 10.509 134.06238860000022 10.339 208.19092199999938 11.366 136.2246925000005 11.137 159.51760590000092 9.665 163.49330390000102 11.206 171.27651699999933 10.081 192.2532603999985 10.614 159.14557470000014 11.048 177.74829690000058 11.081 152.9951676000003 9.889 160.8145541999997 11.689 213.84559990000048 11.106 193.2550829 10.752 181.26077209999926 10.924 157.4661875999995 9.843 202.990190800001 11.16)
Error minima by case: (0.3641 6 0.8092 8 3.887 8 0.2386 7 2.5786 8 0.572 8 4.9231 8 0.1973 6 2.2517 8 0.2924 8 1.7337 9 0.0219 8 0.3261 7 0.0544 7 3.6782 7 1.7069 8 0.3715 8 0.5262 9 0.0349 8 0.3368 9 1.5164 8 2.8079 7 1.4425 8 0.3606 7 1.3467 9)
Average genome size in population (length): 122.752
Average program size in population (points): 123.752
Average percent parens in population: 0.008
Minimum age in population: 42.1375096142292
Maximum age in population: 46.20726811699569
Average age in population: 44.40991566629522
Median age in population: 44.45360238105059
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.923
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.923
Total error diversity:				 0.427
Error (vector) diversity:			 0.453
Behavioral diversity:				 0.453
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 68793804
--- Timings ---
Current time: 1529615598872 milliseconds
Total Time:         128.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.0 seconds, 35.1%
Fitness Testing:     64.3 seconds, 50.1%
Report:              18.8 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 70848.0246999999
Test mean error for best: 35.42401
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0324324   
Correct output: -80.8416452312 | Program output: -56.0324324   
Correct output: -30.9193529897 | Program output: -78.0324324   
Correct output: -129.2709853231 | Program output: -106.0324324  
Correct output: -142.6109625327 | Program output: -88.0324324   
Correct output: -28.4603903776 | Program output: -13.0324324   
Correct output: 119.1092560212 | Program output: 29.0324324    
Correct output: -2.804364668   | Program output: -75.0324324   
Correct output: -163.7806987108 | Program output: -114.0324324  
Correct output: 19.3664379282  | Program output: 12.0324324    
Correct output: -28.7661462515 | Program output: -114.0324324  
Correct output: -2.9798498499  | Program output: 4.0324324     
Correct output: -97.3585137143 | Program output: -87.0324324   
Correct output: -94.0867625621 | Program output: -113.0324324  
Correct output: -53.340003998  | Program output: -88.0324324   
Correct output: -171.739275996 | Program output: -126.0324324  
Correct output: -113.6467160746 | Program output: -106.0324324  
Correct output: -99.4921227055 | Program output: -64.0324324   
Correct output: -67.9651207486 | Program output: -63.0324324   
Correct output: -109.3549767957 | Program output: -122.0324324  
Correct output: 14.5017756451  | Program output: -81.0324324   
Correct output: -110.8403243704 | Program output: -56.0324324   
Correct output: -11.4606904356 | Program output: -64.0324324   
Correct output: -32.4173586228 | Program output: -52.0324324   
Correct output: -28.3791179266 | Program output: -107.0324324  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_max} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction 18} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_max})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_dup_items float_inc integer_max integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_shove in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup in2 -36 float_tan integer_flush print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div integer_yank float_pop float_add float_div print_float print_integer 18 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_max)
Errors: [0.6035 8 24.8092 10 47.1131 10 23.2386 9 54.5785 9 15.428 9 90.0768 9 72.2281 8 49.7483 11 7.334 8 85.2663 11 7.0123 10 10.3261 9 18.9457 10 34.6924 10 45.7068 9 7.6143 11 35.4597 10 4.9327 10 12.6775 11 95.5342 11 54.8079 7 52.5717 9 19.6151 9 78.6533 12]
Total: 1188.9741
Mean: 23.779482
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4520.177109099995
Median total errors in population: 1206.5512
Error averages by case: (143.12635349999957 9.676 161.52424669999965 10.711 173.88821410000065 10.2 165.00645440000022 9.908 190.0452839000015 10.752 145.9956329000007 10.631 208.00093129999874 10.673 191.53158080000114 9.509 188.3516109000024 10.687 135.96472960000068 10.119 204.05054009999884 11.421 136.7327939000005 11.049 153.00572690000143 9.546 157.90194280000136 11.219 166.17290809999946 9.929 185.7283923999988 10.705 152.52499250000005 11.045 171.45431040000187 11.206 146.54107490000115 9.926 154.68428119999936 11.828 209.81009869999937 10.953 187.0190043 10.512 176.6556672999997 10.727 152.2171588999997 9.528 198.6921786000013 11.091)
Error minima by case: (0.3823 6 0.8235 8 4.0988 8 0.2528 7 17.5918 8 1.4421 8 1.9091 8 0.6193 7 12.7615 7 0.3483 8 8.2522 9 0.0382 9 1.6587 7 0.0544 6 4.678 7 8.7201 8 0.3533 8 0.526 9 0.9327 8 0.3367 9 3.4982 7 17.8212 7 1.4424 8 0.399 7 8.6392 8)
Average genome size in population (length): 125.457
Average program size in population (points): 126.457
Average percent parens in population: 0.008
Minimum age in population: 43.22535643726587
Maximum age in population: 47.46938329096884
Average age in population: 45.81616896183323
Median age in population: 45.84996850648895
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.942
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.942
Total error diversity:				 0.404
Error (vector) diversity:			 0.42
Behavioral diversity:				 0.42
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 71930829
--- Timings ---
Current time: 1529615603906 milliseconds
Total Time:         133.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.5 seconds, 34.9%
Fitness Testing:     67.0 seconds, 50.3%
Report:              19.5 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 70773.79390000009
Test mean error for best: 35.38690
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.019324    
Correct output: -80.8416452312 | Program output: -56.019324    
Correct output: -30.9193529897 | Program output: -78.019324    
Correct output: -129.2709853231 | Program output: -106.019324   
Correct output: -142.6109625327 | Program output: -88.019324    
Correct output: -28.4603903776 | Program output: -13.019324    
Correct output: 119.1092560212 | Program output: 29.019324     
Correct output: -2.804364668   | Program output: -75.019324    
Correct output: -163.7806987108 | Program output: -114.019324   
Correct output: 19.3664379282  | Program output: 12.019324     
Correct output: -28.7661462515 | Program output: -114.019324   
Correct output: -2.9798498499  | Program output: 4.019324      
Correct output: -97.3585137143 | Program output: -87.019324    
Correct output: -94.0867625621 | Program output: -113.019324   
Correct output: -53.340003998  | Program output: -88.019324    
Correct output: -171.739275996 | Program output: -126.019324   
Correct output: -113.6467160746 | Program output: -106.019324   
Correct output: -99.4921227055 | Program output: -64.019324    
Correct output: -67.9651207486 | Program output: -63.019324    
Correct output: -109.3549767957 | Program output: -122.019324   
Correct output: 14.5017756451  | Program output: -81.019324    
Correct output: -110.8403243704 | Program output: -56.019324    
Correct output: -11.4606904356 | Program output: -64.019324    
Correct output: -32.4173586228 | Program output: -52.019324    
Correct output: -28.3791179266 | Program output: -107.019324   
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_swap} {:instruction float_tan} {:instruction float_dup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tag_float_835} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dec} {:instruction float_sub} {:instruction float_dup} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction -37} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction in2} {:instruction -36} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_mult} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction float_inc} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_swap} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min tagged_947 float_pop float_sin float_dec float_sub integer_swap float_tan float_dup integer_inc float_frominteger integer_add integer_yankdup float_stackdepth tag_float_835 float_sin integer_yankdup integer_rot integer_add float_dec float_sub float_dup integer_mod float_swap integer_mod integer_dup_times integer_swap float_max float_dec float_dup_items float_flush integer_mod integer_yankdup integer_swap -37 integer_dup_items float_inc in2 integer_mult float_rot integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_shove in2 -36 integer_stackdepth in2 integer_inc integer_rot print_float integer_stackdepth float_mult -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_sub integer_yank integer_rot float_mult integer_stackdepth in2 -36 float_tan float_inc integer_flush integer_shove 18 integer_dup integer_max float_div integer_inc float_pop integer_swap float_div print_float print_integer 18 integer_dup integer_max float_div 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.6166 8 24.8223 10 47.1 8 23.2517 9 54.5916 9 15.4411 9 90.0899 10 72.215 9 49.7614 10 7.3471 9 85.2532 11 6.9992 10 10.3392 9 18.9326 11 34.6793 9 45.72 10 7.6274 10 35.4728 11 4.9458 9 12.6643 11 95.5211 10 54.821 10 52.5586 9 19.602 8 78.6402 10]
Total: 1188.0134000000003
Mean: 23.760267
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4917.2753859
Median total errors in population: 1203.9011
Error averages by case: (159.86813169999922 9.555 178.769149999999 10.615 190.23697429999913 10.179 181.1176686000007 9.625 206.1079537000015 10.659 159.76223069999998 10.683 223.96307080000074 10.672 207.97317250000188 9.568 203.9427509000029 10.778 148.5512355000013 10.01 219.75463139999798 11.475 149.7234285000006 10.844 169.303481200002 9.499 173.51123070000088 11.218 182.2448618999998 9.947 201.4250034999993 11.071 168.55167669999938 11.069 188.2631882000028 11.328 163.35757520000138 10.016 170.30263739999907 12.117 226.14578559999796 10.794 204.0150714999988 10.432 193.1833735000001 10.642 169.4605465999989 9.311 214.59855530000172 11.035)
Error minima by case: (0.3814 6 0.8092 8 0.8869 8 0.7473 7 19.5928 7 1.428 6 9.9091 8 0.772 6 14.7625 7 0.334 8 1.7337 9 0.0373 6 1.3403 7 0.0684 8 4.6783 8 10.7211 8 0.3716 9 0.474 8 0.0532 8 0.3226 9 1.5165 8 19.8222 5 1.4283 8 0.399 7 1.3467 8)
Average genome size in population (length): 131.017
Average program size in population (points): 132.017
Average percent parens in population: 0.008
Minimum age in population: 44.22535643726587
Maximum age in population: 49.27857078891248
Average age in population: 47.21568154202728
Median age in population: 47.24305348610505
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.944
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.944
Total error diversity:				 0.385
Error (vector) diversity:			 0.418
Behavioral diversity:				 0.418
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 75206829
--- Timings ---
Current time: 1529615609118 milliseconds
Total Time:         138.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.0 seconds, 34.7%
Fitness Testing:     69.9 seconds, 50.6%
Report:              20.3 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 137855.57420000015
Test mean error for best: 68.92779
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.05324     
Correct output: -80.8416452312 | Program output: -56.05324     
Correct output: -30.9193529897 | Program output: -78.05324     
Correct output: -129.2709853231 | Program output: -106.05324    
Correct output: -142.6109625327 | Program output: -88.05324     
Correct output: -28.4603903776 | Program output: -13.035324    
Correct output: 119.1092560212 | Program output: 29.089324     
Correct output: -2.804364668   | Program output: -75.05324     
Correct output: -163.7806987108 | Program output: -114.05324    
Correct output: 19.3664379282  | Program output: 12.066324     
Correct output: -28.7661462515 | Program output: -114.05324    
Correct output: -2.9798498499  | Program output: 4.074324      
Correct output: -97.3585137143 | Program output: -87.05324     
Correct output: -94.0867625621 | Program output: -113.05324    
Correct output: -53.340003998  | Program output: -88.05324     
Correct output: -171.739275996 | Program output: -126.05324    
Correct output: -113.6467160746 | Program output: -106.05324    
Correct output: -99.4921227055 | Program output: -64.05324     
Correct output: -67.9651207486 | Program output: -63.05324     
Correct output: -109.3549767957 | Program output: -122.05324    
Correct output: 14.5017756451  | Program output: -81.05324     
Correct output: -110.8403243704 | Program output: -56.05324     
Correct output: -11.4606904356 | Program output: -64.05324     
Correct output: -32.4173586228 | Program output: -52.05324     
Correct output: -28.3791179266 | Program output: -107.05324    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5827 8 24.7884 10 47.1339 10 23.2177 8 54.5577 9 15.4251 9 90.0199 10 72.2489 8 49.7275 11 7.3001 7 85.2871 11 7.0542 9 10.3053 8 18.9665 10 34.7132 9 45.686 10 7.5935 11 35.4389 11 4.9119 8 12.6983 11 95.555 11 54.7871 10 52.5925 10 19.6359 9 78.6741 11]
Total: 1187.9014
Mean: 23.758028
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4701.6201518000025
Median total errors in population: 1201.4602499999999
Error averages by case: (151.9548410999991 9.39 169.75062239999895 10.487 183.48596799999834 10.167 171.7509998000008 9.486 196.29095370000164 10.42 148.55768180000018 10.453 213.27023310000143 10.46 201.89798560000193 9.441 194.0420014000029 10.844 137.52217850000122 9.855 213.69345129999758 11.53 137.85016050000073 10.671 160.67197490000189 9.516 165.78316580000072 11.059 174.36612869999988 10.021 191.45834319999992 10.958 159.88878229999926 11.022 178.84690870000279 11.245 155.24540100000152 10.117 162.3086276999991 12.032 220.6671933999977 10.799 194.4311523999988 9.951 186.6396888000001 10.404 162.0579850999988 9.294 208.3997226000018 11.166)
Error minima by case: (0.3641 6 0.8092 7 0.901 7 0.7473 7 0.5926 7 0.572 7 9.9091 6 1.1846 7 2.2193 8 0.3481 7 1.2522 9 0.0385 7 0.3261 7 0.0684 6 2.3217 8 6.2607 7 0.3713 7 0.5262 7 0.0532 7 0.3225 7 3.4982 6 0.822 6 0.4424 7 0.3849 6 1.6392 8)
Average genome size in population (length): 132.77
Average program size in population (points): 133.77
Average percent parens in population: 0.008
Minimum age in population: 45.22535643726587
Maximum age in population: 50.26669377321377
Average age in population: 48.57860512690526
Median age in population: 48.66053300292697
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.961
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.961
Total error diversity:				 0.391
Error (vector) diversity:			 0.417
Behavioral diversity:				 0.417
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 78526879
--- Timings ---
Current time: 1529615614336 milliseconds
Total Time:         143.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.5 seconds, 34.5%
Fitness Testing:     72.8 seconds, 50.7%
Report:              21.2 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 70815.60370000002
Test mean error for best: 35.40780
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.017306    
Correct output: -80.8416452312 | Program output: -56.017306    
Correct output: -30.9193529897 | Program output: -78.017306    
Correct output: -129.2709853231 | Program output: -106.017306   
Correct output: -142.6109625327 | Program output: -88.017306    
Correct output: -28.4603903776 | Program output: -13.017306    
Correct output: 119.1092560212 | Program output: 29.017306     
Correct output: -2.804364668   | Program output: -75.017306    
Correct output: -163.7806987108 | Program output: -114.017306   
Correct output: 19.3664379282  | Program output: 12.017306     
Correct output: -28.7661462515 | Program output: -114.017306   
Correct output: -2.9798498499  | Program output: 4.017306      
Correct output: -97.3585137143 | Program output: -87.017306    
Correct output: -94.0867625621 | Program output: -113.017306   
Correct output: -53.340003998  | Program output: -88.017306    
Correct output: -171.739275996 | Program output: -126.017306   
Correct output: -113.6467160746 | Program output: -106.017306   
Correct output: -99.4921227055 | Program output: -64.017306    
Correct output: -67.9651207486 | Program output: -63.017306    
Correct output: -109.3549767957 | Program output: -122.017306   
Correct output: 14.5017756451  | Program output: -81.017306    
Correct output: -110.8403243704 | Program output: -56.017306    
Correct output: -11.4606904356 | Program output: -64.017306    
Correct output: -32.4173586228 | Program output: -52.017306    
Correct output: -28.3791179266 | Program output: -107.017306   
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction float_rot} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction print_float} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (tagged_947 float_pop float_sin float_dec float_sub integer_inc float_dup_items float_dec float_frominteger tagged_153 float_flush float_rot float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_dup_items integer_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap integer_stackdepth float_inc in2 integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove integer_flush integer_shove 18 print_float integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max integer_rot integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.6186 7 24.8243 10 47.098 10 23.2537 10 54.5937 11 15.4431 9 90.092 10 72.2129 9 49.7634 9 7.3491 10 85.2512 12 6.9972 12 10.3412 9 18.9305 10 34.6773 9 45.722 9 7.6294 9 35.4748 10 4.9478 8 12.6623 11 95.5191 9 54.823 10 52.5566 9 19.5999 7 78.6382 9]
Total: 1187.0193
Mean: 23.740385
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4610.898366800003
Median total errors in population: 1197.9738
Error averages by case: (147.35873849999908 9.286 165.98955449999943 10.526 178.48659089999856 10.349 170.16671130000083 9.656 195.04709230000168 10.208 143.31202980000063 10.157 208.20914100000087 10.293 196.17462700000132 9.107 193.40323570000308 11.111 134.81046820000125 9.582 208.80825529999788 11.5 135.3246933000009 10.732 157.9327301000019 9.755 162.6900821000006 10.857 170.86543199999986 10.169 191.13707200000164 10.469 157.52872199999905 11.287 176.15977470000303 11.014 151.18153280000143 10.33 159.69512989999964 11.809 214.95158139999756 11.009 191.42126690000126 9.143 181.1630676000003 10.118 156.15615549999887 9.492 203.4516820000023 11.514)
Error minima by case: (0.3824 6 1.8233 7 0.901 7 0.2527 6 10.5926 7 0.4421 7 22.0768 8 0.2281 7 5.7624 8 0.3481 7 1.2522 9 0.9474 7 0.6598 7 1.0544 6 4.6783 8 1.721 7 0.3715 8 1.4597 7 0.9327 7 0.3225 7 0.4693 7 10.822 5 0.4424 8 0.385 6 0.6392 8)
Average genome size in population (length): 132.466
Average program size in population (points): 133.466
Average percent parens in population: 0.008
Minimum age in population: 47.41813245462254
Maximum age in population: 51.71720278647263
Average age in population: 49.91833459308324
Median age in population: 49.96010681736516
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.95
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.95
Total error diversity:				 0.35
Error (vector) diversity:			 0.375
Behavioral diversity:				 0.375
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 81839379
--- Timings ---
Current time: 1529615619567 milliseconds
Total Time:         148.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.0 seconds, 34.2%
Fitness Testing:     75.8 seconds, 50.9%
Report:              22.0 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 70815.60370000002
Test mean error for best: 35.40780
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.017306    
Correct output: -80.8416452312 | Program output: -56.017306    
Correct output: -30.9193529897 | Program output: -78.017306    
Correct output: -129.2709853231 | Program output: -106.017306   
Correct output: -142.6109625327 | Program output: -88.017306    
Correct output: -28.4603903776 | Program output: -13.017306    
Correct output: 119.1092560212 | Program output: 29.017306     
Correct output: -2.804364668   | Program output: -75.017306    
Correct output: -163.7806987108 | Program output: -114.017306   
Correct output: 19.3664379282  | Program output: 12.017306     
Correct output: -28.7661462515 | Program output: -114.017306   
Correct output: -2.9798498499  | Program output: 4.017306      
Correct output: -97.3585137143 | Program output: -87.017306    
Correct output: -94.0867625621 | Program output: -113.017306   
Correct output: -53.340003998  | Program output: -88.017306    
Correct output: -171.739275996 | Program output: -126.017306   
Correct output: -113.6467160746 | Program output: -106.017306   
Correct output: -99.4921227055 | Program output: -64.017306    
Correct output: -67.9651207486 | Program output: -63.017306    
Correct output: -109.3549767957 | Program output: -122.017306   
Correct output: 14.5017756451  | Program output: -81.017306    
Correct output: -110.8403243704 | Program output: -56.017306    
Correct output: -11.4606904356 | Program output: -64.017306    
Correct output: -32.4173586228 | Program output: -52.017306    
Correct output: -28.3791179266 | Program output: -107.017306   
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_flush} {:instruction float_rot} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_mod} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction print_float} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (tagged_947 float_pop float_sin float_dec float_sub integer_inc float_dup_items float_dec float_frominteger tagged_153 float_flush float_rot float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_dup_items integer_dup_items float_flush integer_mod float_swap integer_mod float_mult integer_swap integer_stackdepth float_inc in2 integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove integer_flush integer_shove 18 print_float integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup integer_max integer_rot integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.6186 7 24.8243 10 47.098 10 23.2537 10 54.5937 11 15.4431 9 90.092 10 72.2129 9 49.7634 9 7.3491 10 85.2512 12 6.9972 12 10.3412 9 18.9305 10 34.6773 9 45.722 9 7.6294 9 35.4748 10 4.9478 8 12.6623 11 95.5191 9 54.823 10 52.5566 9 19.5999 7 78.6382 9]
Total: 1187.0193
Mean: 23.740385
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4822.3319147
Median total errors in population: 1197.9738
Error averages by case: (157.46291809999906 9.459 174.9718545999994 10.601 187.84768619999832 10.655 177.08249190000086 9.908 201.88501800000157 10.003 151.45671130000122 10.035 216.5250141000019 10.096 206.1862696000008 9.057 199.5914970000027 11.52 143.70240620000104 9.391 217.95566209999768 11.611 143.03126290000074 10.735 165.69778260000183 10.012 170.1640004000005 10.748 179.4872094999998 10.492 197.0757670000026 10.22 164.814924599999 11.618 184.1910977000027 11.008 160.8857584000017 10.639 166.7311722999999 11.758 224.80692219999764 11.42 199.96330120000292 8.593 191.07782830000033 10.055 165.62259379999892 9.832 212.65776470000213 11.991)
Error minima by case: (0.3824 5 0.1908 5 3.8869 8 0.7614 6 8.5785 5 0.572 5 9.9232 6 0.2281 6 3.7483 6 0.3132 7 1.7337 9 0.0515 5 0.3261 5 0.0543 4 0.3076 7 0.2932 5 0.3716 6 0.5403 5 0.9327 5 0.3225 5 0.5307 5 8.8079 5 1.4283 7 0.3849 5 1.3467 9)
Average genome size in population (length): 132.895
Average program size in population (points): 133.895
Average percent parens in population: 0.008
Minimum age in population: 48.72780506499112
Maximum age in population: 53.24052917113295
Average age in population: 51.37299002049695
Median age in population: 51.39716961115482
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.331
Error (vector) diversity:			 0.368
Behavioral diversity:				 0.368
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 85162079
--- Timings ---
Current time: 1529615624892 milliseconds
Total Time:         154.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.4 seconds, 34.0%
Fitness Testing:     78.8 seconds, 51.1%
Report:              22.8 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 70815.60370000002
Test mean error for best: 35.40780
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.017306    
Correct output: -80.8416452312 | Program output: -56.017306    
Correct output: -30.9193529897 | Program output: -78.017306    
Correct output: -129.2709853231 | Program output: -106.017306   
Correct output: -142.6109625327 | Program output: -88.017306    
Correct output: -28.4603903776 | Program output: -13.017306    
Correct output: 119.1092560212 | Program output: 29.017306     
Correct output: -2.804364668   | Program output: -75.017306    
Correct output: -163.7806987108 | Program output: -114.017306   
Correct output: 19.3664379282  | Program output: 12.017306     
Correct output: -28.7661462515 | Program output: -114.017306   
Correct output: -2.9798498499  | Program output: 4.017306      
Correct output: -97.3585137143 | Program output: -87.017306    
Correct output: -94.0867625621 | Program output: -113.017306   
Correct output: -53.340003998  | Program output: -88.017306    
Correct output: -171.739275996 | Program output: -126.017306   
Correct output: -113.6467160746 | Program output: -106.017306   
Correct output: -99.4921227055 | Program output: -64.017306    
Correct output: -67.9651207486 | Program output: -63.017306    
Correct output: -109.3549767957 | Program output: -122.017306   
Correct output: 14.5017756451  | Program output: -81.017306    
Correct output: -110.8403243704 | Program output: -56.017306    
Correct output: -11.4606904356 | Program output: -64.017306    
Correct output: -32.4173586228 | Program output: -52.017306    
Correct output: -28.3791179266 | Program output: -107.017306   
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_flush} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_fromfloat float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_flush integer_dup_items float_inc in2 integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub float_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_flush print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank integer_max integer_rot integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.6186 7 24.8243 10 47.098 10 23.2537 10 54.5937 11 15.4431 9 90.092 10 72.2129 9 49.7634 9 7.3491 10 85.2512 12 6.9972 12 10.3412 9 18.9305 10 34.6773 9 45.722 9 7.6294 9 35.4748 10 4.9478 8 12.6623 11 95.5191 9 54.823 10 52.5566 9 19.5999 7 78.6382 9]
Total: 1187.0193
Mean: 23.740385
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5054.6166152999995
Median total errors in population: 1197.9738
Error averages by case: (164.8212880999991 9.404 181.63686199999862 10.608 197.14575809999823 10.62 185.1071480000015 9.887 209.34780550000178 9.939 165.3215286000018 10.011 229.78451580000174 10.146 215.6591625000005 8.936 207.29738350000272 11.487 158.2975043000009 9.386 227.7117230999978 11.554 156.74602770000072 10.778 173.79591300000172 9.991 179.53881030000102 10.729 188.8730695999999 10.423 204.7294623000023 10.121 173.18971629999837 11.502 191.7586573000028 10.967 168.98553130000147 10.535 176.0003302999992 11.67 234.27662809999768 11.467 206.16608530000275 8.498 200.2772743000003 9.953 175.33620819999874 9.845 222.38322180000222 11.972)
Error minima by case: (0.3824 6 0.8092 8 3.8869 7 0.7614 7 0.4215 7 0.572 7 22.0768 7 1.7719 7 1.7483 8 0.334 7 1.7337 9 1.0526 8 0.6739 7 0.0543 7 4.6783 8 1.7068 8 0.3857 9 0.5403 9 0.0673 8 0.3225 8 2.4982 8 0.1921 5 1.4283 7 0.3849 7 1.3467 9)
Average genome size in population (length): 132.542
Average program size in population (points): 133.542
Average percent parens in population: 0.008
Minimum age in population: 49.72780506499112
Maximum age in population: 54.60634579748148
Average age in population: 52.77459933153447
Median age in population: 52.84824661795574
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.338
Error (vector) diversity:			 0.374
Behavioral diversity:				 0.374
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 88476029
--- Timings ---
Current time: 1529615630190 milliseconds
Total Time:         159.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.9 seconds, 33.8%
Fitness Testing:     81.8 seconds, 51.3%
Report:              23.6 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 70827.03399999996
Test mean error for best: 35.41352
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0325306   
Correct output: -80.8416452312 | Program output: -56.0325306   
Correct output: -30.9193529897 | Program output: -78.0325306   
Correct output: -129.2709853231 | Program output: -106.0325306  
Correct output: -142.6109625327 | Program output: -88.0325306   
Correct output: -28.4603903776 | Program output: -13.0325306   
Correct output: 119.1092560212 | Program output: 29.0325306    
Correct output: -2.804364668   | Program output: -75.0325306   
Correct output: -163.7806987108 | Program output: -114.0325306  
Correct output: 19.3664379282  | Program output: 12.0325306    
Correct output: -28.7661462515 | Program output: -114.0325306  
Correct output: -2.9798498499  | Program output: 4.0325306     
Correct output: -97.3585137143 | Program output: -87.0325306   
Correct output: -94.0867625621 | Program output: -113.0325306  
Correct output: -53.340003998  | Program output: -88.0325306   
Correct output: -171.739275996 | Program output: -126.0325306  
Correct output: -113.6467160746 | Program output: -106.0325306  
Correct output: -99.4921227055 | Program output: -64.0325306   
Correct output: -67.9651207486 | Program output: -63.0325306   
Correct output: -109.3549767957 | Program output: -122.0325306  
Correct output: 14.5017756451  | Program output: -81.0325306   
Correct output: -110.8403243704 | Program output: -56.0325306   
Correct output: -11.4606904356 | Program output: -64.0325306   
Correct output: -32.4173586228 | Program output: -52.0325306   
Correct output: -28.3791179266 | Program output: -107.0325306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_inc} {:instruction float_swap} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction integer_inc} {:instruction print_integer} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction float_div} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 17} {:instruction 62} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank print_integer float_inc float_cos integer_div integer_min integer_mod integer_dup_items integer_swap float_inc float_swap integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 in2 -36 float_tan integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div integer_inc print_integer float_inc integer_shove 18 float_div float_inc integer_shove 18 tag_float_507 integer_max float_div integer_yank float_pop 17 62 integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.6034 6 24.8091 10 47.1132 10 23.2385 9 54.5784 9 15.4279 8 90.0767 8 72.2282 9 49.7482 10 7.3339 10 85.2664 12 7.0124 12 10.326 9 18.9458 10 34.6925 10 45.7067 7 7.6142 10 35.4596 10 4.9326 9 12.6776 11 95.5343 11 54.8078 8 52.5718 9 19.6152 10 78.6534 11]
Total: 1186.9737999999998
Mean: 23.739475
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5300.017328900001
Median total errors in population: 1198.97125
Error averages by case: (179.5942269999992 9.261 197.62814769999872 10.559 209.9877418999984 10.478 201.10054650000143 9.847 226.25783920000194 9.919 151.81612110000066 9.801 216.82769850000136 10.024 227.08537700000082 8.893 223.35334130000246 11.293 142.15559400000078 9.255 238.66403369999782 11.542 142.46817630000058 10.661 189.74608940000184 9.943 194.9824769000009 10.698 203.39015249999972 10.27 221.85372440000248 10.046 189.08539149999842 11.393 207.64205560000258 10.952 183.75142820000153 10.36 191.10212999999956 11.521 244.94132729999768 11.369 222.19079870000297 8.706 212.9434196000002 9.873 188.70515609999885 9.814 234.48833450000214 11.778)
Error minima by case: (0.3813 6 1.1908 8 3.887 7 0.2386 7 2.5785 7 1.428 7 6.0768 8 0.7485 6 2.2517 8 0.334 7 1.7337 9 0.0526 8 1.6739 7 0.0543 7 2.3268 8 5.7068 7 0.3726 9 0.5403 9 0.9327 8 0.3225 9 4.5307 8 2.8079 5 1.4283 7 0.3849 7 0.3467 8)
Average genome size in population (length): 132.917
Average program size in population (points): 133.917
Average percent parens in population: 0.008
Minimum age in population: 50.72780506499112
Maximum age in population: 56.31025473683258
Average age in population: 54.15583136924201
Median age in population: 54.20469731534831
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.391
Error (vector) diversity:			 0.425
Behavioral diversity:				 0.425
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 91799254
--- Timings ---
Current time: 1529615635517 milliseconds
Total Time:         164.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.4 seconds, 33.6%
Fitness Testing:     84.8 seconds, 51.5%
Report:              24.3 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 70827.03399999996
Test mean error for best: 35.41352
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0325306   
Correct output: -80.8416452312 | Program output: -56.0325306   
Correct output: -30.9193529897 | Program output: -78.0325306   
Correct output: -129.2709853231 | Program output: -106.0325306  
Correct output: -142.6109625327 | Program output: -88.0325306   
Correct output: -28.4603903776 | Program output: -13.0325306   
Correct output: 119.1092560212 | Program output: 29.0325306    
Correct output: -2.804364668   | Program output: -75.0325306   
Correct output: -163.7806987108 | Program output: -114.0325306  
Correct output: 19.3664379282  | Program output: 12.0325306    
Correct output: -28.7661462515 | Program output: -114.0325306  
Correct output: -2.9798498499  | Program output: 4.0325306     
Correct output: -97.3585137143 | Program output: -87.0325306   
Correct output: -94.0867625621 | Program output: -113.0325306  
Correct output: -53.340003998  | Program output: -88.0325306   
Correct output: -171.739275996 | Program output: -126.0325306  
Correct output: -113.6467160746 | Program output: -106.0325306  
Correct output: -99.4921227055 | Program output: -64.0325306   
Correct output: -67.9651207486 | Program output: -63.0325306   
Correct output: -109.3549767957 | Program output: -122.0325306  
Correct output: 14.5017756451  | Program output: -81.0325306   
Correct output: -110.8403243704 | Program output: -56.0325306   
Correct output: -11.4606904356 | Program output: -64.0325306   
Correct output: -32.4173586228 | Program output: -52.0325306   
Correct output: -28.3791179266 | Program output: -107.0325306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_inc} {:instruction float_swap} {:instruction integer_mult} {:instruction float_rot} {:instruction float_inc} {:instruction in2} {:instruction integer_mult} {:instruction -69.58889117485478} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction integer_inc} {:instruction print_integer} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction float_div} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 17} {:instruction 62} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank print_integer float_inc float_cos integer_div integer_min integer_mod integer_dup_items integer_swap float_inc float_swap integer_mult float_rot float_inc in2 integer_mult -69.58889117485478 integer_mod in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 -36 float_tan integer_flush integer_flush integer_shove 18 in2 -36 float_tan integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank float_pop integer_mult float_div integer_inc print_integer float_inc integer_shove 18 float_div float_inc integer_shove 18 tag_float_507 integer_max float_div integer_yank float_pop 17 62 integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.6034 6 24.8091 10 47.1132 10 23.2385 9 54.5784 9 15.4279 8 90.0767 8 72.2282 9 49.7482 10 7.3339 10 85.2664 12 7.0124 12 10.326 9 18.9458 10 34.6925 10 45.7067 7 7.6142 10 35.4596 10 4.9326 9 12.6776 11 95.5343 11 54.8078 8 52.5718 9 19.6152 10 78.6534 11]
Total: 1186.9737999999998
Mean: 23.739475
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5767.7078206999995
Median total errors in population: 1197.97665
Error averages by case: (201.1564084999991 9.031 220.4513429999987 10.579 231.1910599999978 10.513 220.91290340000134 9.912 243.49181700000167 10.045 166.23668760000066 9.791 230.96874910000184 10.097 246.94471120000117 9.099 242.4936586000018 11.095 156.0593333000002 9.419 258.4751974999977 11.759 155.05930070000076 10.776 208.13711170000153 9.955 213.56351980000096 10.807 221.91817829999974 10.224 239.31450340000174 10.101 209.4657401999984 11.248 226.32976920000186 11.068 204.39279660000133 10.056 211.64868809999888 11.464 262.43220239999835 11.359 244.20086460000186 9.258 232.07518650000014 9.911 208.37205609999896 9.812 253.47103390000137 11.566)
Error minima by case: (0.3834 6 0.8233 8 4.113 7 0.2127 6 2.6077 7 0.5759 7 22.0768 8 1.215 7 1.7483 8 0.334 7 2.7337 9 0.0526 8 1.3261 7 0.0674 7 4.6783 8 2.2932 7 0.3814 9 0.5385 9 0.0981 7 0.3017 8 7.085 8 2.8371 6 3.4411 7 0.359 6 6.6533 7)
Average genome size in population (length): 132.624
Average program size in population (points): 133.624
Average percent parens in population: 0.008
Minimum age in population: 51.72780506499112
Maximum age in population: 57.25356803309842
Average age in population: 55.50791020066999
Median age in population: 55.54859763913919
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.932
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.932
Total error diversity:				 0.412
Error (vector) diversity:			 0.46
Behavioral diversity:				 0.46
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 95115154
--- Timings ---
Current time: 1529615640726 milliseconds
Total Time:         170.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.9 seconds, 33.5%
Fitness Testing:     87.8 seconds, 51.6%
Report:              25.2 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 137899.55359999993
Test mean error for best: 68.94978
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.05306     
Correct output: -80.8416452312 | Program output: -56.05306     
Correct output: -30.9193529897 | Program output: -78.05306     
Correct output: -129.2709853231 | Program output: -106.05306    
Correct output: -142.6109625327 | Program output: -88.05306     
Correct output: -28.4603903776 | Program output: -13.035306    
Correct output: 119.1092560212 | Program output: 29.089306     
Correct output: -2.804364668   | Program output: -75.05306     
Correct output: -163.7806987108 | Program output: -114.05306    
Correct output: 19.3664379282  | Program output: 12.066306     
Correct output: -28.7661462515 | Program output: -114.05306    
Correct output: -2.9798498499  | Program output: 4.074306      
Correct output: -97.3585137143 | Program output: -87.05306     
Correct output: -94.0867625621 | Program output: -113.05306    
Correct output: -53.340003998  | Program output: -88.05306     
Correct output: -171.739275996 | Program output: -126.05306    
Correct output: -113.6467160746 | Program output: -106.05306    
Correct output: -99.4921227055 | Program output: -64.05306     
Correct output: -67.9651207486 | Program output: -63.05306     
Correct output: -109.3549767957 | Program output: -122.05306    
Correct output: 14.5017756451  | Program output: -81.05306     
Correct output: -110.8403243704 | Program output: -56.05306     
Correct output: -11.4606904356 | Program output: -64.05306     
Correct output: -32.4173586228 | Program output: -52.05306     
Correct output: -28.3791179266 | Program output: -107.05306    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_786} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 17} {:instruction 62} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (tagged_786 float_pop integer_min tagged_947 float_pop integer_min tagged_947 float_pop float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 integer_dup 31 float_div integer_yank float_pop tag_float_507 integer_max float_div integer_yank float_pop 17 62 integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5828 6 24.7886 10 47.1337 11 23.2179 9 54.5579 10 15.4251 8 90.02 10 72.2487 8 49.7276 10 7.3001 8 85.2869 11 7.0542 10 10.3055 9 18.9663 11 34.7131 9 45.6862 9 7.5937 10 35.4391 11 4.9121 8 12.6981 10 95.5548 11 54.7873 10 52.5924 9 19.6357 9 78.6739 11]
Total: 1186.9017000000001
Mean: 23.738033
Genome size: 122
Size: 123
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7047.287344799998
Median total errors in population: 1209.0139999999997
Error averages by case: (260.1804420999994 8.949 279.10314849999924 10.556 288.81015839999907 10.497 276.45112340000065 9.876 298.48290540000147 10.097 185.6409433 9.761 244.4792950000013 10.258 306.37489710000136 9.119 296.06008980000024 10.838 174.94834949999992 9.52 314.7166831999988 11.752 175.03494690000068 10.749 266.77541800000125 9.853 271.21897740000077 10.748 280.2653790999997 10.006 294.47625769999956 10.108 265.75398649999863 11.093 283.33200790000114 11.088 266.9928065000009 9.712 267.77636789999843 11.342 321.2469888999986 11.203 300.8604785000005 9.778 290.9509462999998 9.947 269.43695459999884 9.77 310.0277929000009 11.27)
Error minima by case: (0.3814 5 1.8223 8 4.1131 7 0.2517 7 0.4214 7 2.5578 7 9.9801 7 0.772 6 3.7625 7 0.3006 6 0.7029 8 0.8988 7 1.3392 8 0.9132 7 6.67 8 0.2789 7 0.3533 8 0.5202 8 0.0673 7 0.3017 8 4.4693 8 0.1921 6 1.4414 7 0.318 6 3.3467 8)
Average genome size in population (length): 131.169
Average program size in population (points): 132.169
Average percent parens in population: 0.008
Minimum age in population: 54.79704493354075
Maximum age in population: 58.70776497957922
Average age in population: 56.84571404079104
Median age in population: 56.87270995370091
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.927
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.927
Total error diversity:				 0.47
Error (vector) diversity:			 0.523
Behavioral diversity:				 0.523
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 98394708
--- Timings ---
Current time: 1529615646031 milliseconds
Total Time:         175.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.4 seconds, 33.3%
Fitness Testing:     90.7 seconds, 51.8%
Report:              26.0 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 137919.41800000003
Test mean error for best: 68.95971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0517306   
Correct output: -80.8416452312 | Program output: -56.0517306   
Correct output: -30.9193529897 | Program output: -78.0517306   
Correct output: -129.2709853231 | Program output: -106.0517306  
Correct output: -142.6109625327 | Program output: -88.0517306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0517306   
Correct output: -163.7806987108 | Program output: -114.0517306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0517306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0517306   
Correct output: -94.0867625621 | Program output: -113.0517306  
Correct output: -53.340003998  | Program output: -88.0517306   
Correct output: -171.739275996 | Program output: -126.0517306  
Correct output: -113.6467160746 | Program output: -106.0517306  
Correct output: -99.4921227055 | Program output: -64.0517306   
Correct output: -67.9651207486 | Program output: -63.0517306   
Correct output: -109.3549767957 | Program output: -122.0517306  
Correct output: 14.5017756451  | Program output: -81.0517306   
Correct output: -110.8403243704 | Program output: -56.0517306   
Correct output: -11.4606904356 | Program output: -64.0517306   
Correct output: -32.4173586228 | Program output: -52.0517306   
Correct output: -28.3791179266 | Program output: -107.0517306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min tagged_947 float_pop float_sin integer_yankdup float_sub integer_inc integer_yankdup integer_rot float_tan float_dec float_dup_items float_tan integer_mod float_swap float_tan float_dec float_dup_items float_tan integer_mod float_swap integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5842 6 24.7899 10 47.1324 11 23.2193 10 54.5592 11 15.4252 9 90.0201 10 72.2474 9 49.729 9 7.3003 8 85.2856 12 7.054 10 10.3068 8 18.965 10 34.7117 10 45.6875 9 7.595 9 35.4404 10 4.9134 7 12.6968 10 95.5535 10 54.7886 10 52.591 9 19.6344 8 78.6726 10]
Total: 1183.9033
Mean: 23.678066
Genome size: 161
Size: 162
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 7462.7324102999955
Median total errors in population: 1209.0139999999997
Error averages by case: (274.81097700000004 8.917 293.7301176999996 10.626 303.61834869999916 10.58 290.4213656999999 9.991 312.1081799000007 10.21 206.77079169999942 9.817 276.5402918000013 10.344 319.72749070000145 9.377 310.3561666999998 10.669 204.6723032999995 9.742 330.2553355999995 11.845 204.8699143000011 10.942 280.9716056000007 9.888 285.4364691999994 10.797 294.8563487999998 10.003 306.91811399999875 10.189 279.8281813999992 11.0 297.57602000000065 11.112 278.66336360000037 9.685 282.86175539999874 11.476 336.1886577999992 11.046 314.85233419999946 10.207 306.0984603000001 10.047 286.6953255999993 9.59 324.75049130000053 11.054)
Error minima by case: (0.3773 5 2.1908 8 6.1131 8 1.2537 7 2.4216 7 0.5396 7 22.0767 8 0.7911 6 5.7807 7 0.3032 6 0.7337 9 0.0527 8 0.6739 7 0.9302 7 4.6793 7 1.7393 7 0.3533 8 0.5404 8 0.8919 7 0.3017 8 0.4825 8 2.1922 6 0.5566 7 0.3849 7 3.3618 8)
Average genome size in population (length): 131.34
Average program size in population (points): 132.34
Average percent parens in population: 0.008
Minimum age in population: 55.83908538101241
Maximum age in population: 60.16452790191943
Average age in population: 58.10666110500907
Median age in population: 58.13729068835437
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.927
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.927
Total error diversity:				 0.434
Error (vector) diversity:			 0.505
Behavioral diversity:				 0.505
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 101678758
--- Timings ---
Current time: 1529615651436 milliseconds
Total Time:         180.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.8 seconds, 33.1%
Fitness Testing:     93.8 seconds, 52.0%
Report:              26.8 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 137919.41800000003
Test mean error for best: 68.95971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0517306   
Correct output: -80.8416452312 | Program output: -56.0517306   
Correct output: -30.9193529897 | Program output: -78.0517306   
Correct output: -129.2709853231 | Program output: -106.0517306  
Correct output: -142.6109625327 | Program output: -88.0517306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0517306   
Correct output: -163.7806987108 | Program output: -114.0517306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0517306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0517306   
Correct output: -94.0867625621 | Program output: -113.0517306  
Correct output: -53.340003998  | Program output: -88.0517306   
Correct output: -171.739275996 | Program output: -126.0517306  
Correct output: -113.6467160746 | Program output: -106.0517306  
Correct output: -99.4921227055 | Program output: -64.0517306   
Correct output: -67.9651207486 | Program output: -63.0517306   
Correct output: -109.3549767957 | Program output: -122.0517306  
Correct output: 14.5017756451  | Program output: -81.0517306   
Correct output: -110.8403243704 | Program output: -56.0517306   
Correct output: -11.4606904356 | Program output: -64.0517306   
Correct output: -32.4173586228 | Program output: -52.0517306   
Correct output: -28.3791179266 | Program output: -107.0517306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min tagged_947 float_pop float_sin integer_yankdup float_sub integer_inc integer_yankdup integer_rot float_tan float_dec float_dup_items float_tan integer_mod float_swap float_tan float_dec float_dup_items float_tan integer_mod float_swap integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5842 6 24.7899 10 47.1324 11 23.2193 10 54.5592 11 15.4252 9 90.0201 10 72.2474 9 49.729 9 7.3003 8 85.2856 12 7.054 10 10.3068 8 18.965 10 34.7117 10 45.6875 9 7.595 9 35.4404 10 4.9134 7 12.6968 10 95.5535 10 54.7886 10 52.591 9 19.6344 8 78.6726 10]
Total: 1183.9033
Mean: 23.678066
Genome size: 161
Size: 162
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 6007.510915199995
Median total errors in population: 1198.0192000000002
Error averages by case: (212.13122059999975 8.455 228.79618600000015 10.621 238.07069440000006 10.39 229.79212209999972 10.266 253.5394600999997 10.478 179.02110679999927 9.509 233.6437149000006 10.323 256.9312359000012 9.514 251.65470839999955 10.37 161.07071850000008 10.151 269.8852580999993 11.952 161.37433980000077 11.241 218.99236719999988 10.084 224.2035911999993 10.869 233.05924110000004 9.942 249.38284839999997 9.88 218.42616399999977 10.8 236.9227585999996 10.94 216.2763987999994 9.642 221.07931259999927 11.42 274.67222770000075 10.78 252.45135639999955 10.367 243.9312470999999 9.781 219.41905519999983 9.464 264.83658129999947 10.708)
Error minima by case: (0.3813 5 0.8091 7 6.2017 7 0.271 7 6.5917 7 0.5586 7 9.91 7 0.2262 7 1.7614 8 0.2931 7 2.2512 9 0.0395 7 1.6608 7 0.0688 6 4.6773 8 0.72 7 0.355 7 3.4369 7 0.9326 7 0.3017 7 0.4825 7 6.821 6 1.4434 7 0.3741 5 3.3616 8)
Average genome size in population (length): 133.738
Average program size in population (points): 134.738
Average percent parens in population: 0.007
Minimum age in population: 56.83908538101241
Maximum age in population: 61.23430374344116
Average age in population: 59.28128154090597
Median age in population: 59.34489565786544
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.937
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.937
Total error diversity:				 0.429
Error (vector) diversity:			 0.472
Behavioral diversity:				 0.472
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 105023533
--- Timings ---
Current time: 1529615656987 milliseconds
Total Time:         186.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.3 seconds, 32.9%
Fitness Testing:     97.0 seconds, 52.1%
Report:              27.7 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 137919.41800000003
Test mean error for best: 68.95971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0517306   
Correct output: -80.8416452312 | Program output: -56.0517306   
Correct output: -30.9193529897 | Program output: -78.0517306   
Correct output: -129.2709853231 | Program output: -106.0517306  
Correct output: -142.6109625327 | Program output: -88.0517306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0517306   
Correct output: -163.7806987108 | Program output: -114.0517306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0517306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0517306   
Correct output: -94.0867625621 | Program output: -113.0517306  
Correct output: -53.340003998  | Program output: -88.0517306   
Correct output: -171.739275996 | Program output: -126.0517306  
Correct output: -113.6467160746 | Program output: -106.0517306  
Correct output: -99.4921227055 | Program output: -64.0517306   
Correct output: -67.9651207486 | Program output: -63.0517306   
Correct output: -109.3549767957 | Program output: -122.0517306  
Correct output: 14.5017756451  | Program output: -81.0517306   
Correct output: -110.8403243704 | Program output: -56.0517306   
Correct output: -11.4606904356 | Program output: -64.0517306   
Correct output: -32.4173586228 | Program output: -52.0517306   
Correct output: -28.3791179266 | Program output: -107.0517306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove float_sin float_stackdepth float_min float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank print_integer float_inc float_cos integer_dup integer_min integer_mod integer_dup_items float_dup integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5842 6 24.7899 10 47.1324 11 23.2193 10 54.5592 11 15.4252 9 90.0201 10 72.2474 9 49.729 9 7.3003 8 85.2856 12 7.054 10 10.3068 8 18.965 10 34.7117 10 45.6875 9 7.595 9 35.4404 10 4.9134 7 12.6968 10 95.5535 10 54.7886 10 52.591 9 19.6344 8 78.6726 10]
Total: 1183.9033
Mean: 23.678066
Genome size: 164
Size: 165
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5706.855654399997
Median total errors in population: 1197.9765
Error averages by case: (195.00357389999985 7.992 208.72139070000128 10.51 225.9647055000002 10.338 214.99440879999983 10.317 238.30938129999913 10.358 177.05497209999987 9.219 240.09775790000026 10.042 243.69174080000082 9.598 236.71074689999946 10.254 169.28107 10.34 257.22592449999996 11.904 168.6501554000013 11.534 204.40422179999896 10.24 208.56650389999842 10.852 217.17403539999972 10.008 234.5108143000011 9.381 203.39336510000058 10.694 222.28678949999912 10.777 198.47243719999867 9.664 206.20218019999962 11.401 263.01979770000196 10.88 233.38900950000018 10.134 230.35919579999984 9.544 202.09744290000066 9.625 251.04203329999956 10.626)
Error minima by case: (0.3813 3 0.8091 5 3.9 7 0.2385 5 6.5804 4 1.4411 5 9.9232 4 1.2149 7 1.7501 5 0.3047 7 0.7336 8 1.0527 3 1.6585 4 0.0675 5 3.3075 8 2.2913 4 0.3726 4 0.5404 5 0.9326 4 0.3017 5 12.4458 4 6.8097 5 1.4282 7 0.3848 3 1.3598 8)
Average genome size in population (length): 136.066
Average program size in population (points): 137.066
Average percent parens in population: 0.007
Minimum age in population: 57.83908538101241
Maximum age in population: 62.46287755094227
Average age in population: 60.41383008669968
Median age in population: 60.45099349250518
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.941
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.941
Total error diversity:				 0.406
Error (vector) diversity:			 0.438
Behavioral diversity:				 0.439
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 108426533
--- Timings ---
Current time: 1529615662398 milliseconds
Total Time:         191.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.7 seconds, 32.8%
Fitness Testing:    100.0 seconds, 52.2%
Report:              28.7 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 137919.41800000003
Test mean error for best: 68.95971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0517306   
Correct output: -80.8416452312 | Program output: -56.0517306   
Correct output: -30.9193529897 | Program output: -78.0517306   
Correct output: -129.2709853231 | Program output: -106.0517306  
Correct output: -142.6109625327 | Program output: -88.0517306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0517306   
Correct output: -163.7806987108 | Program output: -114.0517306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0517306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0517306   
Correct output: -94.0867625621 | Program output: -113.0517306  
Correct output: -53.340003998  | Program output: -88.0517306   
Correct output: -171.739275996 | Program output: -126.0517306  
Correct output: -113.6467160746 | Program output: -106.0517306  
Correct output: -99.4921227055 | Program output: -64.0517306   
Correct output: -67.9651207486 | Program output: -63.0517306   
Correct output: -109.3549767957 | Program output: -122.0517306  
Correct output: 14.5017756451  | Program output: -81.0517306   
Correct output: -110.8403243704 | Program output: -56.0517306   
Correct output: -11.4606904356 | Program output: -64.0517306   
Correct output: -32.4173586228 | Program output: -52.0517306   
Correct output: -28.3791179266 | Program output: -107.0517306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min tagged_947 float_pop float_sin integer_yankdup float_sub integer_inc integer_swap integer_rot float_tan float_dec float_dup_items float_tan integer_mod float_swap float_tan float_dec float_dup_items float_tan integer_mod float_swap integer_shove float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min integer_yank float_sin float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup integer_max float_dup float_sub)
Errors: [0.5842 6 24.7899 10 47.1324 11 23.2193 10 54.5592 11 15.4252 9 90.0201 10 72.2474 9 49.729 9 7.3003 8 85.2856 12 7.054 10 10.3068 8 18.965 10 34.7117 10 45.6875 9 7.595 9 35.4404 10 4.9134 7 12.6968 10 95.5535 10 54.7886 10 52.591 9 19.6344 8 78.6726 10]
Total: 1183.9033
Mean: 23.678066
Genome size: 161
Size: 162
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 6668.622362299998
Median total errors in population: 1203.48445
Error averages by case: (240.3190124 8.079 255.4579180000015 10.6 267.44056479999995 10.715 258.03516300000035 10.264 279.9225976000001 10.299 197.02835550000012 9.237 256.89453060000073 9.845 284.1511719000015 9.552 278.26962880000013 10.54 187.2097863999997 10.364 295.4349711000002 11.923 184.5109760000017 11.522 247.59668959999925 10.317 252.32800669999847 10.772 260.24925409999986 10.29 276.0847099 9.306 247.19201140000092 10.863 263.0330672999995 10.948 241.47406759999888 9.8 249.53276119999967 11.454 301.45364630000125 11.179 277.7018124000007 9.971 269.8366122999999 9.765 248.06132650000097 10.047 290.60372090000106 11.148)
Error minima by case: (0.3814 5 0.8223 7 5.8868 7 0.7483 7 13.4216 7 0.5721 7 9.9232 7 1.2129 6 9.7482 7 0.3132 7 3.7336 8 0.0527 7 0.326 7 0.9325 6 4.3075 8 5.7067 6 0.3858 8 0.5404 7 0.9326 7 0.3224 7 2.4692 7 13.1922 6 1.4282 7 0.3848 7 3.3466 8)
Average genome size in population (length): 136.607
Average program size in population (points): 137.607
Average percent parens in population: 0.007
Minimum age in population: 59.0789646168887
Maximum age in population: 63.99465639214395
Average age in population: 61.75408992134462
Median age in population: 61.80477589723569
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.44
Error (vector) diversity:			 0.491
Behavioral diversity:				 0.491
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 111842158
--- Timings ---
Current time: 1529615667835 milliseconds
Total Time:         196.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.2 seconds, 32.6%
Fitness Testing:    103.0 seconds, 52.3%
Report:              29.6 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 137919.41800000003
Test mean error for best: 68.95971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0517306   
Correct output: -80.8416452312 | Program output: -56.0517306   
Correct output: -30.9193529897 | Program output: -78.0517306   
Correct output: -129.2709853231 | Program output: -106.0517306  
Correct output: -142.6109625327 | Program output: -88.0517306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0517306   
Correct output: -163.7806987108 | Program output: -114.0517306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0517306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0517306   
Correct output: -94.0867625621 | Program output: -113.0517306  
Correct output: -53.340003998  | Program output: -88.0517306   
Correct output: -171.739275996 | Program output: -126.0517306  
Correct output: -113.6467160746 | Program output: -106.0517306  
Correct output: -99.4921227055 | Program output: -64.0517306   
Correct output: -67.9651207486 | Program output: -63.0517306   
Correct output: -109.3549767957 | Program output: -122.0517306  
Correct output: 14.5017756451  | Program output: -81.0517306   
Correct output: -110.8403243704 | Program output: -56.0517306   
Correct output: -11.4606904356 | Program output: -64.0517306   
Correct output: -32.4173586228 | Program output: -52.0517306   
Correct output: -28.3791179266 | Program output: -107.0517306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_sub} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 integer_min integer_shove integer_swap float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_sub float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank print_integer float_inc float_cos integer_dup integer_min integer_mod integer_dup_items float_dup integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5842 6 24.7899 10 47.1324 11 23.2193 10 54.5592 11 15.4252 9 90.0201 10 72.2474 9 49.729 9 7.3003 8 85.2856 12 7.054 10 10.3068 8 18.965 10 34.7117 10 45.6875 9 7.595 9 35.4404 10 4.9134 7 12.6968 10 95.5535 10 54.7886 10 52.591 9 19.6344 8 78.6726 10]
Total: 1183.9033
Mean: 23.678066
Genome size: 164
Size: 165
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 7814.843201799994
Median total errors in population: 1215.7669999999996
Error averages by case: (292.15757429999996 8.306 304.5866507000022 10.661 316.79047500000036 11.037 306.3416639999994 10.343 327.80381020000084 10.45 219.95571119999968 9.495 278.5991860000007 10.057 335.79026310000125 9.506 325.50661749999887 10.684 212.53630479999902 10.198 344.4301031000009 11.951 209.682625800002 11.398 298.7741583000002 10.327 301.61123169999746 10.774 308.4264876000001 10.435 322.91583559999907 9.604 296.0090226000017 10.883 314.96856920000005 11.161 295.69792309999974 9.776 297.5816306999991 11.343 351.4604654 11.364 326.46114590000155 10.139 323.01022299999966 10.041 301.5115778000004 10.139 340.7209452000006 11.441)
Error minima by case: (0.3947 4 0.7889 4 7.9194 7 0.7463 5 2.4086 4 0.5639 4 9.904 4 0.7513 5 5.7644 5 0.2934 6 2.7629 8 0.0397 4 1.2853 4 0.9458 3 0.3269 7 1.723 4 0.3858 4 3.4596 4 0.0674 4 0.3224 4 9.4487 4 2.1792 5 0.4301 7 0.3743 4 5.6739 8)
Average genome size in population (length): 135.497
Average program size in population (points): 136.497
Average percent parens in population: 0.007
Minimum age in population: 60.14910429763586
Maximum age in population: 65.24396035383745
Average age in population: 63.1469020340034
Median age in population: 63.19881251275751
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.941
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.941
Total error diversity:				 0.458
Error (vector) diversity:			 0.509
Behavioral diversity:				 0.51
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 115229958
--- Timings ---
Current time: 1529615673391 milliseconds
Total Time:         202.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.7 seconds, 32.4%
Fitness Testing:    106.1 seconds, 52.4%
Report:              30.6 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_yank float_pop tag_float_507 integer_max float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_inc float_pop print_integer float_inc integer_shove 18 integer_dup integer_max float_div integer_yank float_pop 17 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8544.375551899995
Median total errors in population: 1208.9050000000002
Error averages by case: (322.6469191000004 8.599 335.85106690000123 10.726 346.70580370000096 11.224 336.1236911999993 10.439 356.72848950000133 10.743 247.32306789999927 9.738 309.5244007000007 10.348 360.7707762000007 9.456 354.31164509999866 10.836 242.00004919999864 9.959 371.6854210000011 11.885 242.8653942000023 11.089 328.1429177000004 10.339 331.62365079999864 10.726 338.85020419999967 10.555 352.74637669999794 10.084 326.1737789000006 11.006 342.16111390000043 11.315 327.2642038999999 9.73 327.58661249999886 11.324 376.0861845999993 11.414 355.9738709000018 10.529 348.9897012999989 10.294 332.01094900000004 9.895 366.4562628000002 11.52)
Error minima by case: (0.3701 6 1.2101 6 3.9 8 0.2477 6 6.5784 5 1.4411 5 9.98 5 0.7851 6 1.7482 7 0.2911 6 1.7468 8 0.9473 5 1.2853 7 1.0675 5 4.6793 8 2.2933 6 0.3858 6 0.5262 7 0.0674 6 0.3017 6 9.5018 7 6.8078 6 1.4282 7 0.3843 6 1.3598 8)
Average genome size in population (length): 135.252
Average program size in population (points): 136.252
Average percent parens in population: 0.007
Minimum age in population: 61.14910429763586
Maximum age in population: 66.68417024892864
Average age in population: 64.56572604509888
Median age in population: 64.64301119440134
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.951
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.951
Total error diversity:				 0.481
Error (vector) diversity:			 0.548
Behavioral diversity:				 0.548
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 118611558
--- Timings ---
Current time: 1529615678834 milliseconds
Total Time:         208.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.1 seconds, 32.3%
Fitness Testing:    109.2 seconds, 52.5%
Report:              31.6 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_yank float_pop tag_float_507 integer_max float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_inc float_pop print_integer float_inc integer_shove 18 integer_dup integer_max float_div integer_yank float_pop 17 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 9459.110663599999
Median total errors in population: 1236.5915499999999
Error averages by case: (364.1783970000007 8.989 370.6065811000017 10.675 392.89956860000086 11.231 380.8822320999981 10.64 398.7493958000013 10.886 251.92411469999922 9.987 314.0611836000013 10.412 404.52191090000036 9.345 395.48129889999785 10.924 252.11907139999894 9.792 414.64299580000153 11.726 250.66463120000202 10.92 372.55970390000124 10.385 374.9924616999979 10.582 382.7124365999994 10.734 393.4625013999975 10.474 371.60057750000084 11.099 382.97134500000124 11.412 366.62002870000083 9.749 370.96638169999807 11.29 418.8829118999989 11.441 390.08273390000215 10.776 391.63451109999846 10.485 376.23245279999884 9.712 410.51923630000033 11.476)
Error minima by case: (0.3834 6 1.8299 7 10.8661 8 0.2593 7 2.5786 7 1.5818 7 9.9801 7 1.7719 6 1.7635 7 0.2931 6 7.7129 8 1.0395 8 1.7247 7 0.0336 5 4.6925 8 2.2779 7 0.3858 7 0.5222 7 0.9019 7 0.3019 7 7.5307 7 2.8079 7 0.4476 7 0.3848 7 14.3259 8)
Average genome size in population (length): 136.355
Average program size in population (points): 137.355
Average percent parens in population: 0.007
Minimum age in population: 63.06026512125868
Maximum age in population: 67.81187568838618
Average age in population: 65.86227138951516
Median age in population: 65.91611946634019
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.5
Error (vector) diversity:			 0.574
Behavioral diversity:				 0.576
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 122020733
--- Timings ---
Current time: 1529615684345 milliseconds
Total Time:         213.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.6 seconds, 32.1%
Fitness Testing:    112.4 seconds, 52.6%
Report:              32.4 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction float_stackdepth} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_rot})
Best program: (integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 float_stackdepth 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup in2 float_dup float_rot)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 9893.617627899997
Median total errors in population: 1240.0129
Error averages by case: (383.5238638000008 9.404 399.13025540000024 10.893 410.41197980000095 11.634 395.0479610999983 11.027 413.39211170000146 11.296 271.9323054999988 10.342 333.18896020000165 10.663 419.4473116000006 9.76 409.5443875999981 11.205 269.08910629999923 9.919 427.2021723000011 12.083 267.50308700000187 11.03 387.86528510000164 10.534 389.3693351999995 10.651 398.3227910999997 11.197 408.36267679999764 10.812 385.9734389999995 11.294 400.9529224000017 11.639 389.83384080000144 9.896 385.6150841999979 11.467 432.74496279999835 11.576 418.00703260000284 11.148 408.70062489999845 10.908 394.3501783999986 9.856 422.27995230000005 11.592)
Error minima by case: (0.3834 6 1.2101 8 3.9 7 2.7807 8 2.5928 8 0.5748 7 6.0982 8 1.7851 6 1.7635 7 0.2931 6 0.7131 8 1.0375 8 1.7232 6 0.0675 6 2.3283 8 1.7233 7 0.3857 8 0.5201 8 0.9019 7 0.3017 8 9.4693 8 2.8222 8 4.4076 8 0.3741 6 1.3598 8)
Average genome size in population (length): 142.479
Average program size in population (points): 143.479
Average percent parens in population: 0.007
Minimum age in population: 64.50507321648092
Maximum age in population: 69.31366301247519
Average age in population: 67.15860356006225
Median age in population: 67.17813564737524
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.506
Error (vector) diversity:			 0.588
Behavioral diversity:				 0.588
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 125582933
--- Timings ---
Current time: 1529615690326 milliseconds
Total Time:         219.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.0 seconds, 31.9%
Fitness Testing:    115.8 seconds, 52.8%
Report:              33.3 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction float_stackdepth} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_rot})
Best program: (integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 float_stackdepth 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup in2 float_dup float_rot)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 9709.732877199998
Median total errors in population: 1237.6541999999997
Error averages by case: (376.6268680999999 9.016 399.82003119999916 10.784 402.6810408000003 11.566 387.94755319999945 10.989 405.0030884000017 11.265 258.9875494999992 10.364 320.69523850000144 10.752 415.7931131999991 9.877 402.43709269999863 10.68 249.12421800000004 9.953 422.43093700000105 12.071 251.78721290000124 11.145 380.23858400000154 10.193 385.8349813000007 10.685 391.883019 11.059 401.08883139999887 10.587 379.0564417999984 10.865 394.66766080000184 11.38 379.00484540000156 9.502 380.7212316999978 11.22 429.981813799998 11.386 418.0205334000032 11.025 403.7560028000001 10.629 384.1873696999982 9.702 420.0316185999991 11.231)
Error minima by case: (0.3753 6 0.8299 8 5.1324 7 0.2577 8 5.4084 7 0.5569 7 22.0201 7 2.8061 6 1.2373 7 0.3047 6 7.2856 8 0.9066 6 1.6588 7 0.0735 6 7.677 8 1.724 8 0.3706 7 0.4781 8 0.9034 6 0.3017 8 2.4982 8 6.8232 8 1.4474 7 0.3741 7 7.6726 7)
Average genome size in population (length): 149.931
Average program size in population (points): 150.931
Average percent parens in population: 0.007
Minimum age in population: 65.81044925797323
Maximum age in population: 70.41300208159618
Average age in population: 68.38452210625631
Median age in population: 68.44226072287566
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.495
Error (vector) diversity:			 0.572
Behavioral diversity:				 0.574
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 129331533
--- Timings ---
Current time: 1529615696261 milliseconds
Total Time:         225.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        71.5 seconds, 31.7%
Fitness Testing:    119.2 seconds, 53.0%
Report:              34.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction integer_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction tagged_514} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_flush} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_max} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_shove float_sin integer_shove float_sin float_stackdepth integer_max float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec integer_shove float_cos float_swap integer_min float_max float_dec float_dup_items integer_min float_cos float_dup integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_mod tagged_514 integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_flush in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_max integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup integer_swap float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 9783.059228900003
Median total errors in population: 1209.9256999999998
Error averages by case: (385.0408257999996 8.789 391.782995999998 10.843 404.7851058000004 11.794 391.64140899999893 11.138 410.42685150000216 11.506 256.0229412999992 10.325 322.0589844000003 10.905 417.5254853999983 10.223 407.7933721999984 10.44 257.47614050000044 10.138 426.2523250000009 12.373 258.6315316000011 11.348 383.53307290000146 10.057 386.91787510000154 10.851 396.05183809999954 11.12 404.8624478999997 10.495 382.33929269999743 10.692 399.9816360000022 11.343 386.66603030000186 9.385 382.8840036999987 11.199 431.31076639999793 11.286 410.69204730000325 11.064 408.19976340000073 10.613 390.0113044999985 9.727 421.3431820999984 11.174)
Error minima by case: (0.3834 6 1.8284 8 4.0978 8 0.2577 8 1.4082 7 0.6329 7 23.092 7 2.8061 6 1.7635 7 0.334 6 6.251 8 0.9197 7 1.7232 7 0.075 6 5.7117 8 2.2779 8 0.3706 8 2.4639 8 0.0542 6 0.3032 8 2.49 8 1.1788 8 11.4624 7 0.372 7 6.6381 7)
Average genome size in population (length): 155.978
Average program size in population (points): 156.978
Average percent parens in population: 0.006
Minimum age in population: 66.98660149152006
Maximum age in population: 71.800109220454
Average age in population: 69.66605444378807
Median age in population: 69.72891999834054
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.486
Error (vector) diversity:			 0.569
Behavioral diversity:				 0.569
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 133231758
--- Timings ---
Current time: 1529615702189 milliseconds
Total Time:         231.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        73.0 seconds, 31.6%
Fitness Testing:    122.7 seconds, 53.1%
Report:              35.5 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_flush} {:instruction float_sin} {:instruction float_dec} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction float_stackdepth} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_rot})
Best program: (integer_min tagged_947 float_flush float_sin float_dec float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 float_stackdepth 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup in2 float_dup float_rot)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10399.286851700004
Median total errors in population: 1239.8087
Error averages by case: (407.7166856999983 9.053 418.94815569999736 11.194 430.4185739000001 12.106 416.88110429999955 11.524 435.6120836000026 11.862 280.6449424999994 10.549 336.47245020000116 11.228 443.0735703999974 10.635 431.47036619999847 10.626 276.7949024000009 10.468 448.3205498000004 12.816 275.62767350000087 11.633 410.015887600001 10.373 416.9901456000026 11.384 421.5442646999986 11.394 431.68410720000077 10.782 408.16457209999675 10.895 423.3559242000015 11.636 411.0449990000031 9.748 410.57934369999845 11.48 455.9436960999988 11.557 437.3049186000032 11.388 430.7403472000016 10.889 416.3593253999974 10.106 446.91726209999746 11.335)
Error minima by case: (0.4158 5 1.2101 7 6.8676 8 0.7402 7 5.5938 8 3.4298 7 22.0175 8 1.1956 7 0.7635 7 0.2991 6 16.399 8 1.0202 8 1.7247 7 1.0437 8 4.6717 7 3.2779 8 0.415 8 0.5212 8 0.9134 6 0.3438 8 3.48 8 5.8232 8 1.409 7 0.3743 7 15.7271 7)
Average genome size in population (length): 159.027
Average program size in population (points): 160.027
Average percent parens in population: 0.006
Minimum age in population: 68.30125154385406
Maximum age in population: 72.96653231215676
Average age in population: 71.04876986235459
Median age in population: 71.05472927953915
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.487
Error (vector) diversity:			 0.578
Behavioral diversity:				 0.58
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 137208108
--- Timings ---
Current time: 1529615708203 milliseconds
Total Time:         237.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        74.5 seconds, 31.4%
Fitness Testing:    126.3 seconds, 53.2%
Report:              36.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction float_stackdepth} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_rot})
Best program: (integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 float_stackdepth 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup in2 float_dup float_rot)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 9622.324171900005
Median total errors in population: 1222.2730999999999
Error averages by case: (373.40666119999923 8.752 390.3312222999982 10.772 397.10098959999937 11.916 385.1522848000002 11.198 406.2057486000026 11.595 250.73343929999905 10.339 317.0688036000002 11.083 413.826146699998 10.334 400.39355329999904 10.304 247.97420860000068 10.303 419.9529179999997 12.626 249.12099630000117 11.411 376.28135359999936 10.073 382.51281980000147 11.086 391.36067619999886 11.059 398.44488340000106 10.442 376.07315319999776 10.371 392.8734248000002 11.272 377.78419830000223 9.416 376.6285614 11.162 426.1075081000002 11.217 409.5193523000013 11.07 401.5337585000012 10.533 376.2373121999979 9.675 416.5801977999979 11.111)
Error minima by case: (0.3893 6 0.7923 7 6.0978 8 0.2593 7 18.5977 8 0.5568 6 22.0975 7 2.2129 7 13.7674 7 0.2923 6 3.7133 8 0.0332 7 1.6744 7 0.035 7 4.6773 7 9.726 8 0.3705 8 0.5211 8 0.9034 6 0.3132 8 0.56 8 18.827 8 1.4434 7 0.6344 6 5.3674 7)
Average genome size in population (length): 161.196
Average program size in population (points): 162.196
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 74.48270454873507
Average age in population: 72.39655523842174
Median age in population: 72.53243685619579
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.489
Error (vector) diversity:			 0.556
Behavioral diversity:				 0.558
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 141238733
--- Timings ---
Current time: 1529615714234 milliseconds
Total Time:         243.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        75.9 seconds, 31.2%
Fitness Testing:    129.8 seconds, 53.4%
Report:              37.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_shove} {:instruction float_sin} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction float_stackdepth} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_rot})
Best program: (integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger float_sub float_shove float_sin tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 float_stackdepth 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup in2 float_dup float_rot)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10266.776590700001
Median total errors in population: 1241.47275
Error averages by case: (402.55971279999824 8.91 417.99893209999794 10.755 425.4242223999986 12.045 412.89135740000074 11.302 430.10694770000396 11.704 273.22999069999895 10.44 334.840333100001 11.148 436.1583068999977 10.351 426.2333210999996 10.349 269.5106073000006 10.38 444.0182536999989 12.769 269.1923616000009 11.504 406.3040182999981 10.284 407.5896897000019 11.161 415.2754694999971 11.062 424.51118050000184 10.428 403.9805329999975 10.286 421.0355953999984 11.337 403.3414234000037 9.631 404.66084750000135 11.19 452.5326099000024 11.277 436.34084739999906 11.061 428.37578600000205 10.66 409.8592243999962 9.617 439.9640188999973 11.19)
Error minima by case: (0.4058 6 0.7999 7 8.8576 8 0.2592 8 6.5938 7 4.5628 7 9.9799 8 1.7626 6 1.7635 7 0.3047 6 0.7244 8 0.9474 8 1.6777 7 1.075 7 6.6773 8 0.7231 7 0.3705 7 6.4404 8 0.8779 6 0.3032 7 9.46 8 6.8232 8 3.399 7 0.4056 6 4.3618 8)
Average genome size in population (length): 163.602
Average program size in population (points): 164.602
Average percent parens in population: 0.006
Minimum age in population: 71.10588631561399
Maximum age in population: 75.5281739495614
Average age in population: 73.70841562747476
Median age in population: 73.73589385841198
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.475
Error (vector) diversity:			 0.562
Behavioral diversity:				 0.564
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 145329933
--- Timings ---
Current time: 1529615720360 milliseconds
Total Time:         249.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        77.4 seconds, 31.0%
Fitness Testing:    133.5 seconds, 53.5%
Report:              38.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_yank} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_swap} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction tagged_514} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_flush} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_max} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction float_dup_items} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_shove float_sin integer_shove float_sin float_stackdepth float_yank float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank print_integer float_inc float_cos integer_div integer_swap float_max float_dec integer_shove float_cos float_swap integer_min float_max float_dec float_dup_items integer_fromfloat float_cos float_dup integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div tagged_514 integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_flush in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_max integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup integer_swap float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup float_dup_items float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10311.212122800003
Median total errors in population: 1244.1589
Error averages by case: (401.20244589999794 9.166 416.6861127999984 10.787 423.68581839999774 12.153 409.11830680000185 11.504 431.10176520000397 11.811 291.7809887999993 10.545 351.479020800001 11.196 437.52558759999846 10.376 424.7822370000001 10.506 289.39627860000076 10.505 441.6190939999981 12.864 290.1934074000009 11.606 401.3434301999973 10.536 406.06108270000107 11.277 415.35636109999757 11.052 422.8991862000022 10.599 400.33062769999765 10.352 418.9198234999975 11.463 402.6204676000042 9.917 402.3948576000021 11.344 449.10527180000344 11.388 434.9467297999978 11.155 426.7719451000021 10.736 409.5723612999965 9.694 438.4989148999977 11.288)
Error minima by case: (0.4058 6 0.8313 7 8.8576 9 0.2593 8 6.5948 8 0.557 7 11.9869 8 2.8161 7 1.7645 6 0.2931 6 20.749 8 0.0903 8 1.2968 7 0.9763 7 5.7263 8 1.6711 7 0.3655 7 0.523 8 0.0766 6 0.3132 7 3.53 7 6.8242 8 3.399 7 0.3243 6 5.3174 7)
Average genome size in population (length): 163.216
Average program size in population (points): 164.216
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 76.95863227921772
Average age in population: 74.93744524053558
Median age in population: 75.04218346896064
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.461
Error (vector) diversity:			 0.558
Behavioral diversity:				 0.559
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 149411333
--- Timings ---
Current time: 1529615726291 milliseconds
Total Time:         255.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        78.9 seconds, 30.9%
Fitness Testing:    137.1 seconds, 53.7%
Report:              39.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_dec} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction in1} {:instruction float_dup} {:instruction float_frominteger} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction in1} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_pop integer_min float_sin integer_sub integer_inc integer_dec in1 float_frominteger tagged_153 integer_min integer_shove float_stackdepth float_pop float_sub integer_dup_items integer_min in1 float_dup float_frominteger tagged_947 float_dec float_sin integer_dup_items integer_min float_sin float_dup float_max float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc in1 float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_yank float_pop tag_float_507 integer_max float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_inc float_pop print_integer float_inc integer_shove 18 integer_dup integer_max float_div integer_yank float_pop 17 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10515.416109300004
Median total errors in population: 1261.5635999999997
Error averages by case: (403.3946823999983 9.193 419.8597856999983 10.761 430.03879579999733 12.134 417.273990700002 11.542 437.924672400004 11.888 305.67498549999897 10.511 363.47134750000157 11.282 443.9814896999986 10.327 432.4039928000004 10.486 302.8046258000007 10.536 448.22858339999755 12.887 300.07313010000075 11.549 409.47096189999604 10.535 415.6388023000012 11.292 423.62556469999754 11.029 430.4100311000029 10.611 408.57594109999786 10.348 425.66035829999635 11.481 413.9971088000043 9.917 411.0189102000029 11.369 457.14501940000446 11.444 436.81351339999725 11.165 433.07701160000204 10.735 423.54553269999593 9.756 447.3212719999979 11.208)
Error minima by case: (0.3753 3 0.8293 3 6.902 7 0.7392 4 2.5938 3 4.5627 3 3.0 3 2.8061 7 1.7646 4 0.3046 6 16.7244 9 0.0943 3 2.3068 3 0.025 2 5.7017 8 2.2769 3 0.3865 4 0.5211 3 0.9034 3 0.3132 3 2.4982 3 2.8232 4 0.581 8 0.3756 3 5.3374 8)
Average genome size in population (length): 164.22
Average program size in population (points): 165.22
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 78.1279588056941
Average age in population: 76.08458004966938
Median age in population: 76.24605690597872
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.458
Error (vector) diversity:			 0.556
Behavioral diversity:				 0.556
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 153518258
--- Timings ---
Current time: 1529615732619 milliseconds
Total Time:         261.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        80.4 seconds, 30.7%
Fitness Testing:    141.0 seconds, 53.9%
Report:              40.3 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction 52.18393579497885} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_tan} {:instruction 48.59331795639562} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction float_stackdepth} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_add} {:instruction integer_mult} {:instruction float_div} {:instruction float_dup_times} {:instruction print_integer} {:instruction float_inc} {:instruction tagged_37} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction tag_float_741} {:instruction float_dup} {:instruction float_rot})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_stackdepth float_cos 52.18393579497885 integer_min float_max float_dec float_dec float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush integer_shove 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times float_tan 48.59331795639562 integer_flush integer_shove 18 float_stackdepth 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_shove 17 integer_dup 31 float_div integer_yank float_add integer_mult float_div float_dup_times print_integer float_inc tagged_37 integer_yankdup integer_dup tag_float_741 float_dup float_rot)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 167
Size: 168
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10157.221742400005
Median total errors in population: 1243.0735000000002
Error averages by case: (395.0059336999981 9.071 410.19606879999867 10.574 420.21146209999756 12.03 408.560561200002 11.327 424.83080730000364 11.678 267.98748239999935 10.371 329.1182640000008 11.083 433.4488905999986 10.214 425.39947240000026 10.331 263.57476050000054 10.326 441.5894051999979 12.787 262.7006684000009 11.361 399.7870122999962 10.381 403.8192732000012 11.098 409.98319229999726 10.906 421.54154480000255 10.443 398.79917289999815 10.167 419.5994196999966 11.292 400.2291438000042 9.761 400.923868700003 11.186 447.2552897000046 11.24 427.9586888999969 11.011 426.718707100002 10.663 411.2182047999964 9.49 436.8534475999978 11.12)
Error minima by case: (0.3814 6 0.7935 7 9.8775 8 0.2593 8 1.4308 7 0.5569 7 9.9799 8 0.7871 7 5.7655 6 0.2931 6 2.7244 9 0.9057 7 0.6588 7 1.0396 7 4.673 8 1.7241 8 0.415 7 0.521 8 0.8799 6 0.3133 8 6.4845 8 1.2014 8 1.5516 7 0.3756 6 9.3374 7)
Average genome size in population (length): 164.551
Average program size in population (points): 165.551
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 79.72109896379195
Average age in population: 77.50018058699035
Median age in population: 77.64163791742482
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.445
Error (vector) diversity:			 0.531
Behavioral diversity:				 0.533
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 157633783
--- Timings ---
Current time: 1529615738602 milliseconds
Total Time:         267.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        81.8 seconds, 30.6%
Fitness Testing:    144.5 seconds, 54.0%
Report:              41.2 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sin} {:instruction tagged_153} {:instruction integer_min} {:instruction in1} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_swap} {:instruction integer_min} {:instruction float_swap} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction in1} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction float_mod} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction float_stackdepth} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction integer_stackdepth})
Best program: (integer_min integer_min float_sin integer_shove float_sin integer_shove float_stackdepth float_pop float_sin tagged_153 integer_min in1 float_sin float_stackdepth float_pop integer_min tagged_947 integer_fromfloat float_dup_items float_tan integer_mod float_dup_items integer_swap integer_min float_swap integer_shove float_sin integer_dup_items integer_min float_cos float_dup float_max in1 print_integer float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 float_mod tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times float_swap integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 float_stackdepth 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup in2 float_dup integer_stackdepth)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 11068.890775400001
Median total errors in population: 1451.17
Error averages by case: (435.0979596999987 9.245 448.5907961999988 10.693 455.6155642999974 12.023 441.86716650000193 11.436 460.44273120000304 11.74 310.9775397999995 10.518 374.4935615000009 11.24 467.7301608999986 10.28 457.7321068000003 10.446 308.7733641000009 10.522 473.1671459999978 12.773 309.6609379000005 11.51 435.35365639999674 10.536 439.96780130000116 11.148 446.4169326999977 10.978 456.0073140000025 10.524 433.70994779999853 10.347 453.61532249999703 11.376 437.5726758000037 9.908 436.50832630000264 11.259 477.9919322000036 11.299 465.02781359999744 11.078 459.8530348000019 10.723 440.9935579999968 9.629 469.3824250999979 11.11)
Error minima by case: (0.4058 6 0.8243 7 10.8776 7 0.7407 8 2.4063 8 3.4351 6 22.0131 7 1.7871 6 1.7645 7 0.2946 6 2.7244 9 0.0375 8 1.7146 8 0.9305 7 2.3283 8 2.2769 8 0.365 7 0.5202 8 0.9121 6 0.3133 7 1.5154 7 2.177 8 5.419 8 0.3756 6 9.3374 7)
Average genome size in population (length): 164.207
Average program size in population (points): 165.207
Average percent parens in population: 0.006
Minimum age in population: 76.27449397195652
Maximum age in population: 80.61858233872044
Average age in population: 78.85378083015596
Median age in population: 78.89608555256618
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.466
Error (vector) diversity:			 0.584
Behavioral diversity:				 0.584
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 161740483
--- Timings ---
Current time: 1529615744748 milliseconds
Total Time:         273.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        83.3 seconds, 30.4%
Fitness Testing:    148.2 seconds, 54.1%
Report:              42.2 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction 98.50398458161197} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_min} {:instruction tagged_947} {:instruction 98.50398458161197} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_yank} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sin} {:instruction tagged_153} {:instruction integer_min} {:instruction in1} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_pop} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_cos} {:instruction float_dup} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_mult} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_dup} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_dup} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction tag_float_507} {:instruction float_pop} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction integer_max} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 98.50398458161197 float_sin float_dec float_sub integer_yank integer_flush integer_min tagged_947 98.50398458161197 float_sin float_dec float_sub integer_yank integer_flush float_stackdepth float_pop float_sin tagged_153 integer_min in1 float_sin float_stackdepth float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min float_max float_pop float_dup_items float_cos float_swap integer_min float_max float_dec float_cos float_dup integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_mult float_div integer_dec float_pop float_add float_div print_float float_pop float_add float_div print_float print_integer float_dup in1 in2 -36 tag_integer_648 integer_flush integer_flush integer_dup 18 float_dec 31 float_div integer_yank float_pop tag_float_507 float_pop float_div integer_dec float_pop integer_max float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_inc float_pop print_integer float_inc integer_shove 18 integer_dup integer_max float_div integer_yank float_pop 17 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 11292.787847900003
Median total errors in population: 1627.70485
Error averages by case: (442.8933365999985 9.201 457.8813680999985 10.751 464.73287319999764 12.148 457.40765640000205 11.419 474.03407370000326 11.784 307.7584856999994 10.502 361.3715688000012 11.151 478.56884829999825 10.38 470.00743800000043 10.464 300.4460752000005 10.561 486.59593169999783 12.834 301.3306587000007 11.492 449.98465879999645 10.564 452.5115149000015 11.238 460.1299181999976 11.053 472.05418110000255 10.543 450.07345469999774 10.346 461.622140899997 11.424 446.36157820000386 9.977 449.90673310000284 11.297 490.5824165000039 11.372 475.66988559999743 11.081 468.10208180000194 10.751 455.7108592999966 9.697 483.80211039999756 11.218)
Error minima by case: (0.3814 6 4.2002 7 3.8776 8 0.7707 7 15.4408 6 1.4252 7 9.9799 7 2.8161 6 13.7685 8 0.2927 6 1.7244 9 0.8987 7 2.2968 8 0.045 7 5.7217 8 9.7271 7 0.415 7 0.52 8 0.9134 6 0.3377 8 3.56 7 15.2114 8 10.9015 7 0.3757 6 1.3374 8)
Average genome size in population (length): 164.048
Average program size in population (points): 165.048
Average percent parens in population: 0.006
Minimum age in population: 77.47130383886974
Maximum age in population: 82.16378975524599
Average age in population: 80.16304692626305
Median age in population: 80.23612670320588
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.48
Error (vector) diversity:			 0.581
Behavioral diversity:				 0.584
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 165843208
--- Timings ---
Current time: 1529615750804 milliseconds
Total Time:         279.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        84.7 seconds, 30.3%
Fitness Testing:    151.9 seconds, 54.3%
Report:              43.2 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction integer_flush} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub float_sin integer_sub print_float integer_flush in1 integer_flush tagged_153 integer_min integer_shove float_sin tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min integer_fromfloat float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min integer_dup_times float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 173
Size: 174
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10750.927753700007
Median total errors in population: 1309.6685
Error averages by case: (418.61341439999796 9.158 435.2434298999983 10.702 444.20792959999767 12.094 435.74368640000193 11.381 448.986942300004 11.708 293.69052269999946 10.5 346.9185668000013 11.245 456.7232882999982 10.288 447.9658793000004 10.401 285.09698240000046 10.609 463.5790205999978 12.861 283.07366000000076 11.572 429.9830115999965 10.488 432.09118820000145 11.204 434.6318833999972 10.993 448.06392160000274 10.522 427.3212843999977 10.302 439.30206009999677 11.389 424.7006185000043 9.884 427.56327490000297 11.27 468.8254789000042 11.321 451.92014659999705 11.056 445.97998580000194 10.698 425.9428651999957 9.639 462.2507117999977 11.223)
Error minima by case: (0.4058 6 4.1757 7 2.8776 8 0.7392 8 5.4082 8 0.4252 7 54.8996 7 0.2168 7 1.7634 7 0.2933 6 0.7244 9 0.0375 7 1.6588 7 0.045 7 7.7017 8 2.278 8 0.3706 7 1.5201 8 0.9134 6 0.3132 7 2.4982 7 5.1788 7 10.5407 7 0.3743 6 0.3374 7)
Average genome size in population (length): 163.425
Average program size in population (points): 164.425
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 83.26321640596001
Average age in population: 81.41889595989713
Median age in population: 81.59597651928142
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.491
Error (vector) diversity:			 0.576
Behavioral diversity:				 0.578
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 169930633
--- Timings ---
Current time: 1529615756809 milliseconds
Total Time:         285.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        86.1 seconds, 30.1%
Fitness Testing:    155.5 seconds, 54.4%
Report:              44.1 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_dec} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction tagged_947} {:instruction float_swap} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_cos} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_pop} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_mod} {:instruction 18} {:instruction float_min} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_sub} {:instruction 18} {:instruction integer_dup} {:instruction float_dup_items} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_dup} {:instruction in2} {:instruction float_dup} {:instruction float_rot})
Best program: (integer_min tagged_947 float_pop integer_min float_sin integer_sub integer_inc integer_dec in1 float_frominteger tagged_153 integer_min integer_shove float_stackdepth float_pop float_sub integer_dup_items integer_min float_cos float_dup float_frominteger tagged_947 float_swap float_sin integer_dup_items integer_min float_sin float_dup float_max float_yank print_integer float_inc float_cos integer_div integer_min float_max float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_cos integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 integer_pop -36 tag_integer_648 integer_flush float_tan integer_mod 18 float_min 31 float_div integer_yank float_pop tag_float_507 integer_max float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add float_div print_float float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_stackdepth integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_dup_items float_swap integer_flush integer_sub 18 integer_dup float_dup_items float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer integer_yankdup float_dup in2 float_dup float_rot)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10261.489040800001
Median total errors in population: 1250.2201
Error averages by case: (395.49583259999844 9.176 419.7351384999984 10.743 420.1805318999977 12.222 408.783113800002 11.46 429.8200949000036 11.819 288.06486819999935 10.491 351.0980362000019 11.236 432.31586279999874 10.416 422.7549221000004 10.502 289.67890180000074 10.624 437.84512739999786 12.952 288.58261150000124 11.542 401.6247380999966 10.522 403.5014784000013 11.243 413.89546919999776 11.069 421.8033531000024 10.558 399.82162829999794 10.32 416.5322196999972 11.413 396.0571366000038 9.891 403.75932100000267 11.372 446.77082120000387 11.343 437.3030633999973 11.104 422.008738700002 10.734 404.7240374999963 9.634 435.6799938999981 11.266)
Error minima by case: (0.3641 6 0.8243 8 10.8763 8 0.7463 8 1.4072 8 0.5818 6 9.9799 7 0.7613 5 1.7645 8 0.3003 6 2.7231 9 1.0375 7 1.7132 7 0.975 8 4.6818 8 2.2769 8 0.3706 7 0.4639 8 0.9134 6 0.3132 8 8.4846 8 6.8242 8 5.4176 7 0.3756 6 5.6639 7)
Average genome size in population (length): 162.556
Average program size in population (points): 163.556
Average percent parens in population: 0.006
Minimum age in population: 80.68777925965485
Maximum age in population: 84.76783179949197
Average age in population: 82.81136012060205
Median age in population: 82.81457088829005
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.476
Error (vector) diversity:			 0.566
Behavioral diversity:				 0.568
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 173996433
--- Timings ---
Current time: 1529615762941 milliseconds
Total Time:         292.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        87.6 seconds, 30.0%
Fitness Testing:    159.2 seconds, 54.5%
Report:              45.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction float_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction tag_float_59} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_153 integer_min integer_shove tagged_947 float_pop float_sin float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in1 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 float_flush integer_shove 18 integer_dup tag_float_59 float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 147
Size: 148
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10936.235469700001
Median total errors in population: 1338.85085
Error averages by case: (431.50682399999823 9.174 440.36379509999847 10.666 451.0706115999978 12.119 442.59008950000185 11.375 458.40981780000413 11.693 296.9556263999992 10.483 360.0129465000015 11.189 461.84513169999815 10.362 456.1445700000003 10.427 295.1054036000009 10.615 469.3348738999979 12.827 291.64679340000083 11.479 434.8217828999963 10.458 437.0121831000014 11.181 442.1180580999972 11.026 455.0423725000027 10.525 434.205412499998 10.291 447.4789730999968 11.325 433.7898806000043 9.84 436.3473209000032 11.271 476.57126830000414 11.315 458.061776199997 11.032 452.49485020000196 10.731 435.29339219999616 9.654 465.7127155999974 11.241)
Error minima by case: (0.3814 6 1.8299 7 7.9076 8 0.2593 8 2.5348 7 2.5818 7 9.9799 7 0.7626 6 2.2365 7 0.2983 6 16.7144 8 0.8987 7 1.2968 7 1.035 6 5.7017 8 1.7241 7 0.3706 7 0.5201 7 0.9034 6 0.3132 7 2.4982 7 2.7642 8 2.449 7 0.3656 7 3.3674 7)
Average genome size in population (length): 160.953
Average program size in population (points): 161.953
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 86.17293602565742
Average age in population: 83.80196665570415
Median age in population: 84.15942499041373
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.484
Error (vector) diversity:			 0.583
Behavioral diversity:				 0.585
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 178022558
--- Timings ---
Current time: 1529615768793 milliseconds
Total Time:         297.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        89.0 seconds, 29.9%
Fitness Testing:    162.7 seconds, 54.6%
Report:              46.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction float_stackdepth} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_yank} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction integer_mod} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 30} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_dup_times} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min integer_min float_sin integer_sub print_float float_stackdepth in1 float_frominteger tagged_153 float_yank integer_shove tagged_947 float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max integer_mod integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 30 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank float_dup_times 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10735.574714700002
Median total errors in population: 1339.3870499999998
Error averages by case: (415.0124376999985 9.224 432.2549501999984 10.748 436.70966189999723 12.197 430.286889700002 11.459 450.1098979000036 11.775 302.78034949999955 10.501 363.5127542000017 11.233 452.284858099998 10.378 444.0254316000002 10.473 302.4210146000006 10.615 459.0528116999975 12.898 302.33061120000076 11.52 423.2887328999966 10.576 428.5185262000016 11.268 433.8288715999973 11.041 444.8911822000025 10.552 421.8085444999979 10.292 437.18964959999676 11.41 417.5525714000041 9.909 423.45347450000327 11.355 468.56382170000415 11.375 449.6106473999972 11.079 443.3880264000022 10.802 420.3666576999962 9.683 458.63234029999717 11.337)
Error minima by case: (0.3814 5 1.8286 5 5.147 8 0.2579 6 2.4308 5 0.4182 6 9.9799 7 1.7871 7 1.6955 6 0.3147 5 0.7244 8 0.0933 6 1.7132 5 0.045 4 0.3283 8 2.3579 5 0.3706 6 6.4003 5 0.9134 5 0.3132 5 0.51 5 1.1998 6 4.419 8 0.3743 5 7.3374 7)
Average genome size in population (length): 159.539
Average program size in population (points): 160.539
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 87.91279298342707
Average age in population: 85.37681426162261
Median age in population: 85.5216179236023
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.487
Error (vector) diversity:			 0.589
Behavioral diversity:				 0.591
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 182013333
--- Timings ---
Current time: 1529615774741 milliseconds
Total Time:         304.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        90.6 seconds, 29.8%
Fitness Testing:    166.3 seconds, 54.7%
Report:              47.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 137906.8224
Test mean error for best: 68.95341
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction 98.50398458161197} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_swap} {:instruction integer_min} {:instruction float_swap} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_flush} {:instruction float_pop} {:instruction float_sub} {:instruction float_sin} {:instruction float_yankdup} {:instruction in2} {:instruction integer_min} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction float_yank} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_flush} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_tan} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_dup} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup})
Best program: (integer_min tagged_947 98.50398458161197 float_sin float_dec float_sub integer_yank integer_inc integer_yankdup integer_rot float_tan float_dec float_dup_items float_tan integer_mod float_dup_items integer_swap integer_min float_swap integer_shove float_sin integer_yankdup integer_add integer_flush float_pop float_sub float_sin float_yankdup in2 integer_min float_cos integer_div integer_min float_add float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush float_yank integer_dup_items integer_swap -37 float_rot integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth integer_div integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_flush in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_tan integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_dup float_div print_float print_integer float_inc in1 in1 -36 float_tan integer_flush 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc integer_mult integer_yankdup integer_yankdup integer_dup in2 float_dup)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 174
Size: 175
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10209.782744500004
Median total errors in population: 1270.05305
Error averages by case: (398.3732944999983 9.082 412.34966609999873 10.598 422.9898764999977 12.082 409.01756310000206 11.307 428.7091182000037 11.683 269.3648678999993 10.401 335.31211490000095 11.159 437.9796590999983 10.161 424.67873110000033 10.361 270.0720339000005 10.422 442.782058299998 12.771 266.92740880000093 11.432 405.13302089999604 10.392 409.1108077000013 11.12 415.36248319999726 10.857 423.41957870000255 10.451 400.3588744999983 10.159 414.08941519999667 11.308 400.6395565000037 9.75 404.4981757000027 11.242 451.4820909000049 11.247 429.6703005999972 10.98 422.13596930000193 10.592 403.8319082999965 9.524 441.18617059999747 11.227)
Error minima by case: (0.4058 6 1.2001 7 12.0924 7 0.2593 7 6.5579 6 0.5638 6 8.0131 7 2.8155 6 1.7276 7 0.2933 6 6.7244 9 0.1013 6 1.3155 7 0.045 6 0.3283 8 1.7241 7 0.405 7 0.5211 7 0.0779 6 0.3132 7 1.4982 6 6.7873 7 8.419 7 0.4001 6 13.3374 7)
Average genome size in population (length): 159.056
Average program size in population (points): 160.056
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 88.81320113883864
Average age in population: 86.5510351353923
Median age in population: 86.74863283612008
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.499
Error (vector) diversity:			 0.58
Behavioral diversity:				 0.581
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 185991783
--- Timings ---
Current time: 1529615780763 milliseconds
Total Time:         309.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        91.9 seconds, 29.7%
Fitness Testing:    170.0 seconds, 54.9%
Report:              47.8 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction float_frominteger} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_flush} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mult} {:instruction integer_min} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_flush} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mult} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_div} {:instruction -37} {:instruction float_dec} {:instruction tagged_808} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_div} {:instruction -37} {:instruction integer_yank} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_add} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_add} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_mult} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction float_inc} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup})
Best program: (integer_yank integer_min float_sin integer_sub print_float float_frominteger in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_947 float_dec float_sin float_inc float_cos integer_div integer_min float_max float_flush float_dup_items float_cos integer_mult integer_min float_dup_items float_inc float_cos integer_div integer_min float_max float_flush float_dup_items float_cos integer_mult integer_min float_max float_dec float_dup_items float_flush integer_mod integer_div -37 float_dec tagged_808 float_flush integer_mod integer_div -37 integer_yank float_sin float_stackdepth float_pop float_sub integer_div integer_min float_max float_dec float_dup_items float_pop integer_add integer_dup_items integer_min float_cos float_dup integer_pop float_yank print_integer integer_yankdup float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_add integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_mult float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in1 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_stackdepth integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div float_inc in1 integer_yankdup integer_dup in2 float_dup)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 11421.280540900007
Median total errors in population: 1800.5
Error averages by case: (453.11578289999846 9.197 459.7816136999981 10.761 473.3194706999977 12.133 460.83159090000186 11.405 478.33413750000267 11.714 315.4973791999991 10.513 372.7503166000015 11.251 482.5909484999983 10.333 475.01783260000025 10.49 309.76302760000067 10.684 490.3507488999981 12.779 309.89030380000037 11.597 453.8364786999962 10.564 454.2123404000017 11.23 463.6792254999972 11.001 474.1811079000024 10.476 452.5281611999979 10.338 466.31017969999675 11.386 459.41910410000366 9.919 454.36534080000297 11.317 495.57895570000363 11.295 476.7927568999972 11.056 472.78678870000164 10.686 456.598640799997 9.698 486.6923075999977 11.233)
Error minima by case: (0.4058 5 0.7699 7 3.8776 8 0.7307 8 2.5937 7 1.4252 7 17.9869 7 0.7627 7 1.7645 8 0.2933 6 1.7244 7 0.0933 7 1.7132 7 1.0416 6 3.6773 7 2.2769 7 0.415 8 1.464 7 0.0471 6 0.3132 7 2.4982 7 2.823 8 1.449 8 0.3722 6 1.3374 7)
Average genome size in population (length): 158.337
Average program size in population (points): 159.337
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 90.24864271294408
Average age in population: 87.90318435692348
Median age in population: 88.107936557016
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.495
Error (vector) diversity:			 0.601
Behavioral diversity:				 0.603
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 189952158
--- Timings ---
Current time: 1529615786772 milliseconds
Total Time:         315.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        93.4 seconds, 29.6%
Fitness Testing:    173.5 seconds, 54.9%
Report:              48.8 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction float_swap} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction float_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction tag_float_59} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop integer_min tagged_153 integer_min integer_shove tagged_947 float_pop float_sin float_dup float_max float_yank print_integer float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_swap float_swap float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in1 -36 float_tan integer_shove integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 float_flush integer_shove 18 integer_dup tag_float_59 float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup float_yank float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 147
Size: 148
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10442.2263388
Median total errors in population: 1255.76285
Error averages by case: (407.2150403999983 9.257 419.56163349999855 10.788 425.6255999999977 12.124 422.7983267000018 11.493 436.5587969000034 11.808 284.52556729999924 10.545 349.47968480000134 11.215 441.13277219999816 10.378 434.1308078000002 10.615 287.93940170000064 10.634 448.55956009999795 12.911 288.0500466000012 11.584 413.1396032999968 10.618 415.3089878000012 11.316 419.04747479999725 11.039 430.7805557000024 10.656 414.0528579999978 10.408 426.626242799997 11.466 408.4178126000039 9.986 410.9110903000026 11.421 456.76922230000383 11.438 438.55029759999707 11.132 431.9112209000021 10.783 412.6737973999965 9.755 443.7229372999975 11.367)
Error minima by case: (0.3814 6 0.8315 7 6.8776 7 0.2592 8 9.4008 7 0.5685 7 9.9869 7 0.7627 7 13.7634 8 0.3047 6 17.756 8 1.052 8 1.6588 7 1.055 7 5.6773 7 9.722 7 0.3839 7 7.4504 8 0.0471 6 0.2666 8 1.4836 7 9.1714 8 1.419 7 0.3856 7 5.6626 7)
Average genome size in population (length): 158.281
Average program size in population (points): 159.281
Average percent parens in population: 0.006
Minimum age in population: 87.20820298985333
Maximum age in population: 91.34473811093147
Average age in population: 89.39959963378344
Median age in population: 89.39992306020679
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.486
Error (vector) diversity:			 0.577
Behavioral diversity:				 0.58
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 193911258
--- Timings ---
Current time: 1529615792661 milliseconds
Total Time:         321.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        94.9 seconds, 29.5%
Fitness Testing:    177.0 seconds, 55.0%
Report:              49.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yank} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_shove} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_sin} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_shove} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_stackdepth} {:instruction -36} {:instruction float_tan} {:instruction float_mult} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_div} {:instruction integer_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dup} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_shove} {:instruction 18})
Best program: (float_sin float_dec float_sub integer_inc integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_inc integer_inc float_yank float_dec float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items integer_yank float_shove float_dup integer_pop float_yank print_integer integer_yankdup float_sin -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_shove float_add float_div print_float print_integer float_inc in1 integer_stackdepth -36 float_tan float_mult integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_div integer_dec float_shove print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc integer_add integer_yankdup integer_dup integer_max float_dup in2 -36 float_tan integer_flush float_tan integer_shove 18)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10981.1947865
Median total errors in population: 1398.3282
Error averages by case: (431.90577649999784 9.326 442.32016129999784 10.848 447.8722961999978 12.198 439.7552787000019 11.503 457.7845925000039 11.836 312.60947639999927 10.561 371.5293650000018 11.227 461.3942384999979 10.465 454.6223805000003 10.604 307.5068950000003 10.682 469.23472549999786 12.907 308.1764563000009 11.574 432.4756150999965 10.619 436.9632575000016 11.293 441.22958629999675 11.137 451.80369850000255 10.655 431.46325289999714 10.459 446.4753134999969 11.495 435.89400700000493 10.032 431.5369531000032 11.472 475.2109186000039 11.421 459.92961319999654 11.217 451.50421960000193 10.824 440.373890799996 9.821 466.0898179999972 11.357)
Error minima by case: (0.3883 4 1.2001 4 6.098 7 0.2593 5 14.5937 4 0.5638 5 23.0921 6 2.8161 7 5.7655 5 0.3013 6 6.9489 9 0.9197 5 1.7132 4 0.045 3 2.2583 8 1.7241 4 0.415 5 3.4799 4 0.9134 4 0.3133 4 1.4845 4 10.8252 5 4.4576 8 0.3356 4 7.008 7)
Average genome size in population (length): 157.999
Average program size in population (points): 158.999
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 92.79310863336208
Average age in population: 90.56145649721857
Median age in population: 90.80147098907648
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.501
Error (vector) diversity:			 0.61
Behavioral diversity:				 0.612
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 197863683
--- Timings ---
Current time: 1529615798542 milliseconds
Total Time:         327.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.3 seconds, 29.4%
Fitness Testing:    180.7 seconds, 55.1%
Report:              50.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 108442.04030000004
Test mean error for best: 54.22102
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_mod} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction integer_add} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_sin} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_cos} {:instruction in1} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction integer_flush} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction tag_float_740} {:instruction float_div} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction -28.053283393073798} {:instruction 18} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction tagged_416} {:instruction float_sin} {:instruction in2} {:instruction -36} {:instruction float_dup_times} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction tagged_270})
Best program: (integer_min integer_min float_mod integer_sub print_float integer_flush integer_add float_frominteger tagged_153 integer_min integer_min integer_dup_times float_sin integer_sub float_frominteger integer_flush in1 float_frominteger tagged_153 integer_min integer_shove tagged_947 float_pop float_cos float_dup float_max print_integer float_stackdepth float_cos in1 integer_min float_max float_dec integer_flush float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc tag_float_740 float_div in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc float_mod in2 -36 tag_integer_648 integer_flush integer_flush -28.053283393073798 18 float_dec integer_pop integer_dup integer_swap float_div integer_dec float_pop float_add float_div print_float print_integer tagged_416 float_sin in2 -36 float_dup_times integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc integer_min integer_flush integer_shove 18 integer_dup integer_max float_div float_div integer_yank integer_shove 17 integer_shove 17 integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup in2 float_dup tagged_270)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 174
Size: 175
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10705.998178600003
Median total errors in population: 1314.6685
Error averages by case: (412.8421201999981 9.261 432.23082869999814 10.713 442.04474629999737 12.086 428.3874484000023 11.431 445.04066890000377 11.779 307.3180011999989 10.602 365.7765693000017 11.26 451.1235837999985 10.319 440.8414857000005 10.483 306.7893804000008 10.624 458.23565319999756 12.763 308.68462550000095 11.658 419.2346144999955 10.545 423.2840039000014 11.278 431.6540580999971 10.992 438.01033080000303 10.601 419.17417719999764 10.343 435.3258351999958 11.426 414.9810155000041 9.901 419.5707939000029 11.351 463.4916971000046 11.352 449.1702329999968 11.137 443.71944360000214 10.761 421.03870469999623 9.664 454.4301594999976 11.268)
Error minima by case: (0.3814 6 0.7925 7 3.8776 8 0.2593 8 6.5948 7 1.4252 7 46.0475 7 0.2128 7 1.7645 8 0.2953 6 1.7244 9 0.0373 8 1.6588 7 0.045 6 5.7017 8 2.2769 7 0.415 7 0.52 7 0.9134 6 0.3132 7 2.4982 7 6.8242 8 5.419 7 0.3756 5 1.3374 7)
Average genome size in population (length): 158.179
Average program size in population (points): 159.179
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 94.30800769131542
Average age in population: 91.92868680339929
Median age in population: 92.070719825362
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.482
Error (vector) diversity:			 0.576
Behavioral diversity:				 0.579
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 201820958
--- Timings ---
Current time: 1529615804416 milliseconds
Total Time:         333.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        97.7 seconds, 29.3%
Fitness Testing:    184.2 seconds, 55.2%
Report:              51.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_div} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction float_inc} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_dup} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_div} {:instruction integer_min} {:instruction tagged_13} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 30} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_min float_div integer_sub print_float integer_flush in1 float_frominteger tagged_947 float_pop integer_min tagged_947 float_dec float_sin float_inc float_cos integer_div float_inc float_max float_yank print_integer float_dup float_sin integer_dup_items integer_min float_sin float_dup float_sub integer_dup_items float_dec integer_div integer_min tagged_13 float_dec float_dup_items float_cos float_swap integer_min integer_dup_times float_dec float_dup_items float_yank float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in1 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 30 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_dup_items 18 integer_dup integer_max float_pop 17 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 146
Size: 147
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10627.177436500004
Median total errors in population: 1325.1685
Error averages by case: (416.76594429999807 9.181 424.5698140999982 10.646 432.95530219999745 11.975 424.8231649000022 11.368 441.48540410000373 11.71 307.59766709999917 10.533 367.90967260000144 11.315 444.85161959999823 10.207 440.2893351000001 10.417 304.22722830000066 10.548 454.6730229999977 12.692 303.45004680000073 11.617 416.4186347999961 10.494 422.53104400000177 11.192 425.6552467999972 10.9 438.54445200000254 10.481 415.53785969999757 10.265 428.7128105999966 11.327 421.54666200000446 9.854 415.3558203000026 11.273 461.35453550000426 11.265 441.61497869999675 11.026 434.566230000002 10.612 418.55068699999623 9.615 451.5232529999974 11.154)
Error minima by case: (0.4058 5 1.2001 7 8.8776 8 0.7392 8 6.5948 6 0.4181 7 23.092 7 0.2128 7 1.7645 8 0.3047 6 6.7244 9 0.0373 8 0.7145 7 0.0451 7 5.6773 8 1.7241 7 0.415 7 0.5219 8 0.9134 6 0.3132 8 1.5155 7 0.7952 7 2.571 7 0.3756 6 9.6826 8)
Average genome size in population (length): 158.029
Average program size in population (points): 159.029
Average percent parens in population: 0.006
Minimum age in population: 91.01090913604384
Maximum age in population: 95.44128796336803
Average age in population: 93.31469598629731
Median age in population: 93.37225049152111
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.488
Error (vector) diversity:			 0.588
Behavioral diversity:				 0.588
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 205774583
--- Timings ---
Current time: 1529615810220 milliseconds
Total Time:         339.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.1 seconds, 29.2%
Fitness Testing:    187.7 seconds, 55.3%
Report:              52.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_flush} {:instruction float_sin} {:instruction float_dec} {:instruction tagged_947} {:instruction float_pop} {:instruction float_yankdup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_flush} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction float_yank} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_385} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_add} {:instruction float_add} {:instruction integer_dup} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_cos} {:instruction integer_flush} {:instruction integer_flush} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 30} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dec} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_flush float_sin float_dec tagged_947 float_pop float_yankdup float_sin float_stackdepth float_min float_sub integer_shove tagged_947 float_pop integer_min tagged_947 float_dec float_sin float_inc float_cos integer_div integer_min float_max float_flush float_dup_items float_cos float_swap float_yank float_max float_dec float_dup_items float_flush integer_mod integer_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_385 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_add float_add integer_dup print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_cos integer_flush integer_flush in1 -36 float_tan integer_yank integer_flush integer_shove 18 integer_dup 30 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_dec 17 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 143
Size: 144
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10661.965356000002
Median total errors in population: 1314.6685
Error averages by case: (419.51159429999836 9.089 430.7342501999988 10.593 437.7343753999975 11.959 426.273734700002 11.271 445.71173550000367 11.627 296.36784649999936 10.435 355.5904465000019 11.195 449.5374409999986 10.177 442.5439704000002 10.308 290.09476840000065 10.546 457.82817859999784 12.674 288.4814041000008 11.507 419.8748279999964 10.408 423.97598850000116 11.094 430.498447199997 10.888 441.52222470000294 10.385 417.87459679999813 10.184 436.86241629999694 11.255 422.29569920000415 9.751 420.3159103000032 11.206 463.151172700004 11.194 447.87479179999764 10.953 442.2907564000022 10.58 430.24201719999616 9.515 454.8587612999979 11.124)
Error minima by case: (0.3814 6 0.7699 6 0.1424 8 0.2593 7 2.4308 6 0.5702 7 23.0131 8 1.7872 7 1.7645 7 0.3491 6 9.2512 7 0.0943 7 1.6777 6 0.9305 5 4.6731 8 2.2769 6 0.375 7 1.4639 6 0.9121 6 0.3532 6 8.4848 6 2.2014 7 3.419 7 0.3756 6 5.3374 8)
Average genome size in population (length): 157.249
Average program size in population (points): 158.249
Average percent parens in population: 0.006
Minimum age in population: 92.03435483057517
Maximum age in population: 96.86550670562703
Average age in population: 94.62190289026624
Median age in population: 94.66094029920815
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.491
Error (vector) diversity:			 0.59
Behavioral diversity:				 0.592
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 209708308
--- Timings ---
Current time: 1529615816007 milliseconds
Total Time:         345.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       100.5 seconds, 29.1%
Fitness Testing:    191.3 seconds, 55.4%
Report:              53.3 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 153740.2093000001
Test mean error for best: 76.87010
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sub} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_sin} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction -95.39494890491187} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction float_mult} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_yank} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction 92} {:instruction integer_yank} {:instruction tagged_860} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_sub} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_fromfloat tagged_947 float_pop float_sin float_dec float_sub float_pop float_sin float_dec integer_fromfloat integer_div integer_min integer_shove tagged_947 float_pop integer_min tagged_947 float_dec float_sin integer_dup_items integer_mult float_sin in2 integer_stackdepth float_shove integer_dup_items integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_add integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush -95.39494890491187 integer_shove 18 integer_dup float_mult float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_yank integer_flush integer_shove 18 integer_dup integer_max 92 integer_yank tagged_860 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_sub integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10661.973826300002
Median total errors in population: 1321.07505
Error averages by case: (418.1618592999987 9.122 425.51878529999925 10.591 436.2996385999978 12.002 427.93826320000215 11.309 446.2074136000028 11.606 299.5483472999991 10.382 356.4016886000006 11.118 448.5966629999994 10.248 444.4553843000004 10.334 300.8859087000004 10.487 458.83862709999784 12.646 299.86686430000043 11.435 421.1232909999966 10.407 422.3898907000004 11.14 429.6785414999982 10.909 445.2663517000024 10.448 419.5021036999986 10.195 431.3456886999967 11.284 422.17499360000295 9.805 422.46275720000256 11.224 462.2398426000045 11.205 444.05088059999787 10.977 437.0211134000017 10.606 417.6218132999974 9.589 454.2311149999988 11.077)
Error minima by case: (0.3944 6 0.7815 6 17.1088 8 0.2593 8 14.5968 8 0.6013 6 9.9799 7 0.8044 7 9.7665 7 0.2933 6 18.2244 8 0.0943 6 1.6532 7 0.055 7 4.6882 8 5.7251 8 0.3855 7 0.5199 8 0.8869 6 0.3132 8 2.4982 8 14.8262 8 0.919 7 0.3756 6 11.6626 7)
Average genome size in population (length): 156.443
Average program size in population (points): 157.443
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 98.18597719033119
Average age in population: 95.7892844810682
Median age in population: 96.04216454966264
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.502
Error (vector) diversity:			 0.598
Behavioral diversity:				 0.601
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 213622333
--- Timings ---
Current time: 1529615821674 milliseconds
Total Time:         350.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       101.9 seconds, 29.1%
Fitness Testing:    194.7 seconds, 55.5%
Report:              54.1 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 108442.04030000004
Test mean error for best: 54.22102
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_min} {:instruction tagged_153} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_shove} {:instruction float_sin} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_swap} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction float_swap} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_dec} {:instruction print_float} {:instruction -87} {:instruction -80.563610940165} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_max} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_rot} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_max} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 30} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction tag_float_571} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_sub print_float integer_flush float_dec float_frominteger tagged_153 float_sin integer_sub print_float integer_flush float_tan integer_min tagged_153 integer_mod float_swap integer_shove float_sin float_dup_items integer_fromfloat float_sub integer_dup_items integer_div float_sub integer_dup_items float_swap float_cos float_dup integer_pop float_cos integer_div integer_min float_max float_dec float_dup_items float_cos integer_div integer_stackdepth float_yank integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 float_swap integer_stackdepth in2 float_max float_dec print_float -87 -80.563610940165 float_dec float_dup_items float_cos integer_div integer_min float_yank float_max integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_dec in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_max integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_shove integer_pop integer_dup integer_swap float_div integer_dec float_pop float_rot float_div print_float print_integer float_inc integer_max in2 -36 float_tan integer_shove integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_dup 30 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div tag_float_571 float_dup_times integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10485.678901500003
Median total errors in population: 1262.6590999999999
Error averages by case: (407.6228598999983 9.01 420.9348141999995 10.552 432.5769353999971 11.927 421.7802380000022 11.262 438.25854520000246 11.58 286.362346499999 10.319 349.17398470000086 11.037 447.3368981999987 10.115 436.4894278000005 10.308 285.94867250000067 10.345 451.01954189999736 12.657 284.4862252000008 11.315 414.75756199999665 10.362 418.40180450000014 11.057 422.75858229999847 10.827 435.557579700003 10.353 412.969586099999 10.14 426.1295931999972 11.217 414.8163317000029 9.736 414.9161674000022 11.174 459.0571410000044 11.139 438.1237500999979 10.906 433.0744406000023 10.527 416.47791349999704 9.493 448.25895989999793 11.031)
Error minima by case: (0.3903 4 1.8299 4 4.8776 8 0.2593 5 2.4308 4 2.4252 4 9.9799 3 1.7862 7 2.2365 5 0.3003 6 0.7244 8 0.0943 4 2.2868 4 0.045 3 2.3283 8 6.2779 4 0.3839 4 0.5191 4 0.9034 4 0.3132 4 2.4982 3 2.2014 5 4.4189 7 0.6244 4 2.3374 7)
Average genome size in population (length): 156.339
Average program size in population (points): 157.339
Average percent parens in population: 0.006
Minimum age in population: 94.35161416036576
Maximum age in population: 99.53677490068671
Average age in population: 97.29989629567413
Median age in population: 97.34065037872587
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.489
Error (vector) diversity:			 0.588
Behavioral diversity:				 0.588
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 217533783
--- Timings ---
Current time: 1529615827607 milliseconds
Total Time:         356.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       103.4 seconds, 29.0%
Fitness Testing:    198.2 seconds, 55.6%
Report:              54.9 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_dup} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_sin} {:instruction print_integer} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_cos} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_272} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_swap} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_dup} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction -36} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_dup float_sin integer_sub print_float integer_flush in1 float_frominteger integer_div integer_min integer_shove integer_min integer_shove tagged_947 float_pop integer_min tagged_947 float_dec float_sin integer_dup_items integer_min float_sin print_integer float_max float_dec float_dup_items integer_fromfloat float_cos float_dup integer_pop integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_cos integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_272 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 integer_swap -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add float_div print_float -36 float_tan integer_flush integer_dup integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float -36 float_tan integer_stackdepth integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec float_add print_integer float_inc float_swap float_pop 17 integer_dup integer_yank float_pop integer_mult float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 166
Size: 167
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 11373.651512200002
Median total errors in population: 1414.5236
Error averages by case: (444.8725531999979 9.327 458.7294615999982 10.819 467.8982236999972 12.233 457.1510793000022 11.518 474.3298913000034 11.819 318.27682239999933 10.584 377.66814430000153 11.288 481.7181506999981 10.508 473.39339080000025 10.571 316.2892935000005 10.753 489.19199329999776 12.953 313.8593126000009 11.657 451.9607688999963 10.64 454.6697707000014 11.351 461.48529049999746 11.166 471.41041650000307 10.688 449.3193268999978 10.437 462.51827949999677 11.516 447.0408849000042 10.07 451.24456190000313 11.464 493.9597936000041 11.476 474.66518039999704 11.153 469.64656050000224 10.803 451.6090399999965 9.86 484.70532119999774 11.384)
Error minima by case: (0.4058 5 0.7925 6 5.1224 7 0.2593 6 1.4072 6 2.4173 6 3.02 6 1.772 7 3.2923 7 0.2931 6 7.2756 8 0.0943 6 1.6578 6 0.045 6 6.6773 8 5.7251 6 0.3839 7 3.4748 6 0.064 6 0.3132 6 4.45 6 1.1778 7 10.4283 7 0.3756 6 7.6626 7)
Average genome size in population (length): 155.363
Average program size in population (points): 156.363
Average percent parens in population: 0.006
Minimum age in population: 96.02934639702181
Maximum age in population: 100.4779495710029
Average age in population: 98.65109340006502
Median age in population: 98.71313043978759
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.965
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.498
Error (vector) diversity:			 0.604
Behavioral diversity:				 0.606
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 221420708
--- Timings ---
Current time: 1529615833462 milliseconds
Total Time:         362.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       104.8 seconds, 28.9%
Fitness Testing:    201.7 seconds, 55.6%
Report:              56.0 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_shove} {:instruction float_sin} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_yank} {:instruction float_sub} {:instruction float_sub} {:instruction float_shove} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction float_max} {:instruction float_dec} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction float_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction tag_float_59} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction 37} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_sin integer_shove float_sin float_mult float_sin float_dup_times float_yank float_sub float_sub float_shove float_cos float_dup float_frominteger float_mult float_stackdepth float_cos integer_div integer_min float_max float_dec float_dup_items print_integer float_inc float_cos float_max float_dec integer_min integer_mod integer_dup_items integer_swap -37 in2 integer_min float_max float_dec integer_stackdepth float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth integer_fromfloat integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in1 -36 float_tan integer_shove integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 float_flush integer_shove 18 integer_dup tag_float_59 float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc 37 integer_yankdup integer_dup integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 153
Size: 154
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10295.678474900003
Median total errors in population: 1256.5927499999998
Error averages by case: (396.469723999998 9.214 414.6015136999987 10.762 418.0495197999972 12.086 410.7037862000022 11.427 427.494853400003 11.812 294.1072357999994 10.503 353.82793720000063 11.319 434.2793869999985 10.323 427.5289178000001 10.521 291.4968969000008 10.583 442.6543858999975 12.874 289.3660518000009 11.576 403.3600079999966 10.538 408.2096274000007 11.248 412.17522289999783 11.004 425.6376028000029 10.571 401.8144517999979 10.301 416.22215839999706 11.41 400.62041930000356 9.904 404.60104570000254 11.357 447.520082600004 11.336 432.22411509999716 11.075 422.17865310000207 10.701 408.378829399997 9.721 438.74904889999783 11.241)
Error minima by case: (0.3758 5 1.1757 6 11.8776 8 0.7707 6 13.4092 7 1.4182 6 22.081 6 1.7871 7 17.7684 7 0.2933 6 3.7244 8 0.0943 6 1.3412 6 0.045 6 5.6773 8 13.727 6 0.3706 7 7.4504 6 0.9034 6 0.3132 6 1.54 6 13.1798 7 3.551 7 0.6243 6 10.3374 7)
Average genome size in population (length): 155.354
Average program size in population (points): 156.354
Average percent parens in population: 0.006
Minimum age in population: 97.3129112480245
Maximum age in population: 101.9702452519027
Average age in population: 99.95670935917676
Median age in population: 100.001980727938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.474
Error (vector) diversity:			 0.574
Behavioral diversity:				 0.575
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 225306608
--- Timings ---
Current time: 1529615839250 milliseconds
Total Time:         368.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.2 seconds, 28.8%
Fitness Testing:    205.2 seconds, 55.7%
Report:              56.9 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_inc} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction in1} {:instruction float_yank} {:instruction float_dup} {:instruction integer_min} {:instruction float_swap} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction in1} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_stackdepth} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction in2} {:instruction integer_shove} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_shove} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_dup} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction float_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction -36} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction integer_mult} {:instruction print_float} {:instruction print_integer})
Best program: (integer_inc integer_dec integer_mod float_frominteger tagged_153 integer_min integer_shove float_stackdepth float_pop float_sub integer_dup_items integer_min in1 float_yank float_dup integer_min float_swap float_stackdepth float_pop float_sub integer_dup_items integer_min in1 float_cos integer_div integer_min float_max float_dec float_dup_items float_cos float_stackdepth integer_min float_max float_dec float_dup_items float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sub integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 in2 integer_shove tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_shove tag_integer_939 integer_dec float_pop float_add float_div print_float -36 float_tan integer_flush integer_dup integer_shove 18 integer_dup 31 float_div float_flush float_pop float_add integer_dec print_float -36 float_tan integer_stackdepth integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec float_add print_integer float_inc float_swap float_pop 17 integer_dup integer_yank float_pop integer_mult float_div integer_yank float_pop integer_mult integer_mult print_float print_integer)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10668.950501100002
Median total errors in population: 1268.6225000000002
Error averages by case: (418.5494636999983 9.078 431.4559782999988 10.633 439.0386593999973 12.097 428.94823160000226 11.277 443.11097650000346 11.614 299.20882729999903 10.36 361.64445380000154 11.118 448.0080766999987 10.249 442.6317687000003 10.371 299.2366438000004 10.485 458.38852299999763 12.818 299.65362040000076 11.387 416.30813569999657 10.444 423.53067380000084 11.092 428.7156160999977 10.918 439.0161355000027 10.428 420.3797175999982 10.155 431.01338639999705 11.287 421.83663980000404 9.781 422.7411792000026 11.246 460.529379400004 11.186 448.3978552999974 10.985 437.92094220000206 10.632 423.62248699999657 9.548 454.6911298999981 11.183)
Error minima by case: (0.4058 5 1.8243 6 2.902 8 0.2537 6 1.4072 6 0.5818 5 9.9799 5 2.8161 7 5.729 7 0.2947 6 2.7244 9 0.8317 5 2.2955 7 0.045 6 5.7017 8 1.6875 6 0.415 6 0.52 7 0.9134 7 0.3121 6 2.4916 7 10.7886 6 2.5566 7 0.4001 6 2.3374 7)
Average genome size in population (length): 154.826
Average program size in population (points): 155.826
Average percent parens in population: 0.006
Minimum age in population: 98.6418606149327
Maximum age in population: 103.4079064295891
Average age in population: 101.2998652023573
Median age in population: 101.3534384330009
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.478
Error (vector) diversity:			 0.582
Behavioral diversity:				 0.582
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 229178583
--- Timings ---
Current time: 1529615845041 milliseconds
Total Time:         374.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       107.6 seconds, 28.8%
Fitness Testing:    208.6 seconds, 55.8%
Report:              57.8 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_tan} {:instruction float_dec} {:instruction float_shove} {:instruction float_tan} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_1067} {:instruction float_stackdepth} {:instruction integer_min} {:instruction in1} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction tag_integer_939} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction integer_yankdup} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction 18} {:instruction float_stackdepth} {:instruction 32} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_yankdup} {:instruction 17} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup})
Best program: (integer_min in1 integer_yankdup integer_rot float_tan float_dec float_shove float_tan integer_mod float_dup_items integer_dup_items integer_min float_frominteger tagged_153 integer_min integer_shove tagged_1067 float_stackdepth integer_min in1 integer_min float_max float_dec float_dup_items float_cos float_swap integer_min float_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_tan integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_shove integer_pop integer_dup float_dup_times tag_integer_939 integer_dec float_pop float_add integer_yankdup float_inc print_integer float_inc in1 in2 -36 in1 in2 -36 float_tan integer_flush integer_flush integer_dup_times 18 float_stackdepth 32 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_swap integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_yankdup 17 integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 170
Size: 171
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10277.946846300005
Median total errors in population: 1287.0182
Error averages by case: (398.1167621999984 9.016 415.26439779999885 10.559 418.6877938999976 11.987 407.2857367000019 11.339 426.05463150000367 11.681 290.68212739999933 10.489 357.040993600001 11.291 433.41803099999873 10.127 426.8102231000003 10.335 297.5621276000007 10.5 442.2847001999978 12.701 296.5947175000007 11.523 402.26886129999696 10.402 405.4424086000008 11.148 411.1828633999977 10.845 422.8585989000025 10.424 398.5772350999987 10.113 414.96570169999694 11.259 398.6922093000035 9.725 402.5165985000023 11.263 447.78385790000414 11.271 432.61311289999753 10.961 421.0778852000021 10.483 402.54907029999634 9.563 437.5752006999981 11.036)
Error minima by case: (0.4058 6 0.7999 7 10.8776 7 0.7392 8 6.5948 8 0.5638 7 1.9069 7 2.8161 6 1.7645 6 0.2947 6 19.7488 8 0.8987 7 1.6588 7 0.045 7 5.6617 8 1.7241 8 0.3706 7 0.5211 8 0.9134 7 0.6568 8 7.46 8 6.8242 7 4.449 7 0.6244 6 20.6626 7)
Average genome size in population (length): 155.15
Average program size in population (points): 156.15
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 104.7680457668354
Average age in population: 102.4990735857291
Median age in population: 102.6325855664569
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.487
Error (vector) diversity:			 0.581
Behavioral diversity:				 0.582
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 233058683
--- Timings ---
Current time: 1529615850939 milliseconds
Total Time:         379.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.0 seconds, 28.7%
Fitness Testing:    212.1 seconds, 55.8%
Report:              58.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 153740.2093000001
Test mean error for best: 76.87010
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_dup} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_sin} {:instruction in2} {:instruction float_cos} {:instruction float_shove} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_cos} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction -95.39494890491187} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction float_mult} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction -47} {:instruction integer_dec} {:instruction print_float} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -37} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction integer_max} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction float_dup_items} {:instruction 18} {:instruction integer_dup} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min integer_min integer_min float_dup float_sin integer_sub print_float integer_flush in1 float_frominteger integer_div integer_min integer_shove tagged_947 float_pop integer_min tagged_947 float_dec float_dec float_sin integer_dup_items integer_mult float_sin in2 float_cos float_shove integer_dup_items integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_cos float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_add integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush -95.39494890491187 integer_shove 18 integer_dup float_mult float_div integer_yank float_pop -47 integer_dec print_float integer_rot print_float integer_shove integer_pop integer_dup integer_swap float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -37 float_tan integer_stackdepth integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop integer_yank float_pop float_add integer_dec print_float print_integer integer_max float_swap integer_flush integer_shove 18 integer_dup float_dup_items 18 integer_dup integer_dup_times float_div integer_yank integer_shove 17 integer_dup 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup integer_dup integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10732.633128500001
Median total errors in population: 1352.7437
Error averages by case: (424.6639598999981 8.935 433.6721248999993 10.561 441.9410327999977 11.974 428.5758611000023 11.211 444.62393620000324 11.582 299.6057075999993 10.31 359.38520490000076 11.085 455.44949369999927 10.13 441.7612299000006 10.28 303.07926970000057 10.397 460.0643630999978 12.702 302.37516570000105 11.343 426.1114436999966 10.348 423.9564487000004 11.059 430.368303399998 10.803 441.67560800000274 10.328 420.43989359999864 10.083 438.062927999997 11.2 420.84135050000344 9.688 422.1227072000024 11.161 467.11878290000374 11.186 451.626535899998 10.886 445.848066300002 10.498 423.8527674999967 9.525 457.0749432999987 11.061)
Error minima by case: (0.3814 5 1.2087 7 5.1112 8 0.7392 7 2.5938 6 3.4352 7 5.9869 6 1.7738 6 1.7644 7 0.2947 6 3.7244 8 1.0903 7 1.7132 7 1.0406 7 5.7017 8 1.724 7 0.3703 7 0.4404 7 0.8934 6 0.3132 7 2.4982 6 2.8232 7 6.419 8 0.3756 6 7.6515 8)
Average genome size in population (length): 154.718
Average program size in population (points): 155.718
Average percent parens in population: 0.006
Minimum age in population: 52.87408310101981
Maximum age in population: 105.8420782333779
Average age in population: 103.8797393979614
Median age in population: 103.9538175368206
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.485
Error (vector) diversity:			 0.594
Behavioral diversity:				 0.597
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 236928258
--- Timings ---
Current time: 1529615856870 milliseconds
Total Time:         385.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.5 seconds, 28.6%
Fitness Testing:    215.5 seconds, 55.9%
Report:              59.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_dup} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction float_tan} {:instruction float_pop} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_yankdup} {:instruction tagged_947} {:instruction in1} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_sin} {:instruction print_integer} {:instruction float_max} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_min} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction float_yank} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 30} {:instruction integer_mult} {:instruction in1} {:instruction -36} {:instruction float_max} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 30} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_dec} {:instruction float_div} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_swap} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_mod} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_sub})
Best program: (integer_min float_dup float_sin integer_sub print_float float_tan float_pop float_frominteger integer_div integer_min float_sub integer_min integer_shove tagged_947 float_pop integer_yankdup tagged_947 in1 float_sin integer_dup_items integer_min float_sin print_integer float_max -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_min float_div print_float print_integer float_inc in1 in2 float_yank float_tan integer_flush integer_flush integer_shove 18 integer_dup 30 integer_mult in1 -36 float_max integer_yank integer_flush integer_shove 18 integer_dup 30 float_div integer_yank float_pop integer_dec float_div integer_yank integer_flush integer_flush float_dup_items integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec float_add print_integer float_inc float_swap float_pop 17 integer_dup integer_yank float_pop integer_mult float_div integer_yank float_pop float_mod float_div print_float print_integer float_inc float_div integer_yankdup float_inc integer_max float_dup float_sub)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 149
Size: 150
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10460.956602200004
Median total errors in population: 1271.9438000000002
Error averages by case: (410.2934812999982 9.07 424.38960729999826 10.624 429.9037269999975 12.044 417.4633035000021 11.315 436.94824930000414 11.67 293.7429166999992 10.473 357.49882030000157 11.256 439.62190299999816 10.21 432.6810694000002 10.379 294.14215930000057 10.57 448.8927342999978 12.778 294.0330189000009 11.524 408.60786359999645 10.413 412.94993080000125 11.108 421.7338919999971 10.92 430.66228060000253 10.413 409.1049669999979 10.18 423.9099221999966 11.262 411.5599430000041 9.804 409.2810968000029 11.181 453.30222360000414 11.242 441.6353457999967 10.938 430.8979630000018 10.605 411.7771980999961 9.606 445.18898539999753 11.149)
Error minima by case: (0.3814 6 0.8241 6 10.8776 8 0.7392 8 1.4072 8 2.5818 7 22.0151 8 1.7871 7 5.7655 6 0.2933 6 2.7244 9 0.0943 8 1.7132 7 0.045 7 4.6717 8 5.7251 8 0.365 7 1.464 8 0.9134 6 0.3133 8 3.48 8 14.8262 7 5.419 8 0.3256 6 9.3374 8)
Average genome size in population (length): 154.862
Average program size in population (points): 155.862
Average percent parens in population: 0.006
Minimum age in population: 102.3772602338847
Maximum age in population: 107.5867154898354
Average age in population: 105.256556225835
Median age in population: 105.3065209781927
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.495
Error (vector) diversity:			 0.599
Behavioral diversity:				 0.6
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 240801258
--- Timings ---
Current time: 1529615862597 milliseconds
Total Time:         391.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       111.9 seconds, 28.6%
Fitness Testing:    219.0 seconds, 55.9%
Report:              60.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction tagged_947} {:instruction in1} {:instruction float_shove} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_sin} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction float_sin} {:instruction tag_float_470} {:instruction tagged_947} {:instruction float_dup} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction tagged_153} {:instruction integer_min} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction integer_rot} {:instruction float_inc} {:instruction float_cos} {:instruction float_stackdepth} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_rot} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction float_stackdepth} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction float_stackdepth} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_swap} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction tagged_635} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction 84} {:instruction integer_yank} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction float_mod} {:instruction float_div} {:instruction integer_yank} {:instruction tag_float_659} {:instruction float_add} {:instruction float_pop} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dec} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction integer_min} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_min tagged_947 in1 float_shove tagged_153 integer_min integer_shove float_sin tagged_947 float_pop integer_min float_sin tag_float_470 tagged_947 float_dup float_sin integer_dup_items integer_min tagged_153 integer_min float_sub integer_dup_items integer_min float_cos float_dup float_frominteger float_yank integer_rot float_inc float_cos float_stackdepth float_cos integer_div integer_min float_rot float_dec float_dup_items float_cos float_swap float_stackdepth float_max float_dec float_dup_items float_flush float_stackdepth integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_swap float_add float_div print_float print_integer in1 in1 in2 tagged_635 in2 -36 tag_integer_648 integer_flush integer_flush 84 integer_yank integer_mult integer_div integer_flush integer_shove 18 integer_dup float_mod float_div integer_yank tag_float_659 float_add float_pop float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_dec 17 integer_dup integer_yank float_pop integer_mult integer_min print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 156
Size: 157
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10279.069596400004
Median total errors in population: 1302.2076000000002
Error averages by case: (396.3058834999982 9.165 414.4784508999985 10.701 424.26971559999765 12.092 410.5432012000018 11.424 431.1100068000035 11.74 284.09654649999914 10.372 340.3872916000009 11.128 437.1944503999983 10.297 425.5950444000001 10.415 280.6738329000008 10.577 443.83878869999785 12.849 277.49065160000083 11.49 402.85380689999636 10.51 409.6410439000015 11.259 416.503748499997 10.987 427.1351370000026 10.513 401.971859199998 10.235 416.11499449999667 11.386 400.9555010000036 9.883 403.42442370000305 11.275 450.0004875000043 11.356 432.56694119999713 11.013 424.14079320000195 10.658 411.3796913999963 9.67 444.14530429999763 11.257)
Error minima by case: (0.4058 6 0.8095 7 0.8576 8 0.2593 8 6.5947 8 1.4292 7 52.0094 8 0.7626 6 1.7644 7 0.3652 6 0.7244 7 0.0443 8 1.7132 8 0.045 8 4.6873 8 2.277 8 0.3855 8 0.52 9 0.9134 6 0.3132 8 9.46 8 6.824 8 2.4476 7 0.3756 6 1.3374 7)
Average genome size in population (length): 154.36
Average program size in population (points): 155.36
Average percent parens in population: 0.006
Minimum age in population: 104.1273157480706
Maximum age in population: 108.639396683196
Average age in population: 106.6041794548446
Median age in population: 106.6299595402286
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.501
Error (vector) diversity:			 0.595
Behavioral diversity:				 0.596
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 244661733
--- Timings ---
Current time: 1529615868400 milliseconds
Total Time:         397.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.3 seconds, 28.5%
Fitness Testing:    222.5 seconds, 56.0%
Report:              61.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_mult} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction float_min} {:instruction float_sub} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_flush} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_385} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_add} {:instruction float_add} {:instruction integer_dup} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction in2} {:instruction -36} {:instruction tag_integer_626} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_cos} {:instruction integer_yank} {:instruction float_mult} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_pop} {:instruction print_integer} {:instruction integer_add} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction float_tan} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min float_mult integer_shove tagged_947 float_pop integer_min tagged_947 float_dec float_sin integer_sub print_float float_min float_sub integer_shove tagged_947 float_pop integer_min tagged_947 float_dec float_sin float_inc float_cos integer_div integer_min float_max float_flush float_dup_items float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod integer_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_385 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_add float_add integer_dup print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush in2 -36 tag_integer_626 integer_flush integer_flush float_dup_items 18 float_dec 31 float_cos integer_yank float_mult tag_float_507 integer_max float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_inc float_pop print_integer integer_add integer_shove 18 integer_dup 17 integer_dup integer_yank float_pop integer_mult float_div float_tan print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 148
Size: 149
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10605.809894800004
Median total errors in population: 1256.5077500000002
Error averages by case: (415.71371739999836 9.083 428.592028799998 10.621 436.1318675999972 12.073 424.68231850000205 11.303 445.43550040000395 11.649 291.8376738999991 10.245 351.4333146000018 11.062 453.385665999998 10.2 438.2697841000002 10.369 285.6560885000004 10.398 456.14728099999763 12.742 286.1593558000006 11.325 416.30297559999593 10.4 421.3925440000019 11.095 431.7861617999968 10.92 437.0903739000028 10.417 416.1236989999978 10.18 434.88264989999607 11.283 413.1026176000043 9.791 417.4163406000038 11.205 466.85502840000487 11.255 445.6592396999966 10.961 442.4884957000022 10.596 424.37691359999604 9.541 454.98825839999677 11.186)
Error minima by case: (0.3893 6 0.8315 7 3.8776 8 0.7392 8 13.5937 7 0.5638 7 23.092 8 0.7626 6 5.7655 8 0.3247 6 0.7244 9 0.0943 7 1.6588 7 1.0406 6 5.6717 8 1.7241 7 0.3703 7 5.5252 7 0.0966 6 0.3377 7 9.4845 7 10.8252 8 3.4489 8 0.3757 6 1.3374 7)
Average genome size in population (length): 154.303
Average program size in population (points): 155.303
Average percent parens in population: 0.006
Minimum age in population: 105.3982629010353
Maximum age in population: 110.1072777303672
Average age in population: 107.9340243994652
Median age in population: 107.9967857960261
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.471
Error (vector) diversity:			 0.565
Behavioral diversity:				 0.566
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 248520683
--- Timings ---
Current time: 1529615874170 milliseconds
Total Time:         403.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       114.7 seconds, 28.4%
Fitness Testing:    226.0 seconds, 56.0%
Report:              62.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_dec} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_sub} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction float_pop} {:instruction float_sin} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_sin} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction float_add} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_mult} {:instruction tag_float_507} {:instruction integer_max} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_pop} {:instruction print_integer} {:instruction float_inc} {:instruction integer_div} {:instruction 18} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dec} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_pop float_frominteger float_dec tagged_153 integer_min integer_shove tagged_947 float_sub float_shove float_sin float_dec integer_fromfloat tagged_947 float_pop float_sin float_dup_items float_cos float_swap integer_min integer_min float_max float_dec float_dup_items float_flush float_inc float_yankdup integer_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop float_sin float_dup_times float_div integer_dec float_pop float_add float_sin print_float print_integer float_inc in1 in2 -36 tag_integer_648 float_add integer_flush float_dup_items integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_yank float_mult tag_float_507 integer_max float_div integer_dec float_pop float_add float_div print_float print_integer integer_yank in1 in2 -36 float_tan integer_flush integer_flush integer_inc float_pop print_integer float_inc integer_div 18 integer_fromfloat integer_shove 18 integer_dup integer_max float_dec 17 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 158
Size: 159
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10931.896403600002
Median total errors in population: 1479.6319
Error averages by case: (424.629717599998 9.199 446.0718642999985 10.761 446.64461589999746 12.11 437.7659265000021 11.401 454.6616837000038 11.757 310.1298165999991 10.393 369.1052337000011 11.213 460.03860039999864 10.313 452.45618020000023 10.411 309.0096128000008 10.569 467.73396149999763 12.823 306.5252609000008 11.486 429.8450307999966 10.511 432.8437453000008 11.226 440.30752189999737 11.006 449.0541099000029 10.507 429.4077342999979 10.295 448.01409219999675 11.39 428.31337820000437 9.904 429.2226151000027 11.336 470.5908619000039 11.369 463.2731067999974 11.052 454.12565260000235 10.671 437.13259149999635 9.716 462.4064889999981 11.168)
Error minima by case: (0.3811 5 1.2001 7 2.8776 8 0.7392 8 18.5978 6 0.4252 7 22.0131 7 0.2174 6 5.7654 6 0.2933 6 0.7244 9 0.888 7 1.7132 7 0.035 6 2.3283 8 1.724 7 0.405 7 0.5211 7 0.9134 6 0.3119 7 12.45 6 6.1597 7 2.561 7 0.3743 6 0.3374 7)
Average genome size in population (length): 154.779
Average program size in population (points): 155.779
Average percent parens in population: 0.006
Minimum age in population: 106.3982629010353
Maximum age in population: 111.1580130164378
Average age in population: 109.2417670653928
Median age in population: 109.3087223475362
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.48
Error (vector) diversity:			 0.592
Behavioral diversity:				 0.594
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 252391683
--- Timings ---
Current time: 1529615880002 milliseconds
Total Time:         409.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.1 seconds, 28.4%
Fitness Testing:    229.4 seconds, 56.1%
Report:              63.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction print_float} {:instruction float_cos} {:instruction integer_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_min} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_dup} {:instruction float_dup} {:instruction integer_pop} {:instruction print_integer} {:instruction float_sin} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_min} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction -37} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction float_cos} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sub} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_588} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_shove} {:instruction in2} {:instruction 3.021152511657533} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_min integer_min float_sin integer_sub print_float integer_flush in1 float_frominteger tagged_947 integer_fromfloat float_sin integer_dup_items float_yank float_cos float_dup float_max float_yank print_integer print_float float_cos integer_div float_dec float_dup_items integer_min float_dup float_frominteger float_yank print_integer float_dup float_dup integer_pop print_integer float_sin integer_shove float_sin integer_min float_sin float_stackdepth float_dec float_dup_items integer_min integer_mod integer_dup_items integer_shove -37 float_dec float_frominteger tagged_153 integer_min float_cos integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sub integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_588 integer_flush integer_flush float_dup_items integer_pop float_dec 31 float_div integer_shove in2 3.021152511657533 float_tan integer_flush integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10450.390521100002
Median total errors in population: 1262.37725
Error averages by case: (409.2762994999979 9.098 425.59753699999874 10.651 429.45722499999727 12.125 421.4339217000023 11.354 438.5476189000036 11.679 278.59939929999905 10.324 339.4694717000013 11.07 439.90721599999875 10.265 435.4574120000005 10.324 274.2560562000007 10.488 451.41893669999723 12.86 276.18869970000094 11.426 413.6972921999958 10.434 418.5720304000012 11.16 422.5414072999972 10.95 434.9822703000027 10.443 411.565114299998 10.205 428.76820549999604 11.319 413.60548560000456 9.815 411.0202035000028 11.217 460.8645055000046 11.323 443.0365152999974 10.994 434.41243700000217 10.671 418.485245199996 9.601 448.16501529999795 11.269)
Error minima by case: (0.4041 6 1.2001 7 3.8776 8 0.2593 7 2.5728 7 1.4252 7 9.9799 7 0.2129 6 16.7525 7 0.2933 5 1.7244 9 0.1013 7 1.7132 7 0.9649 6 5.7017 8 12.7111 7 0.405 7 4.5396 7 0.9134 6 0.3119 7 12.46 7 2.8022 7 3.449 7 0.3756 6 1.3374 7)
Average genome size in population (length): 155.207
Average program size in population (points): 156.207
Average percent parens in population: 0.006
Minimum age in population: 108.1044395955983
Maximum age in population: 112.4826778394717
Average age in population: 110.5905610154609
Median age in population: 110.6160342045094
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.485
Error (vector) diversity:			 0.586
Behavioral diversity:				 0.588
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 256273308
--- Timings ---
Current time: 1529615885851 milliseconds
Total Time:         415.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.6 seconds, 28.3%
Fitness Testing:    232.9 seconds, 56.1%
Report:              64.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_tan} {:instruction float_cos} {:instruction integer_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_min} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 30} {:instruction integer_flush} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 30} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_mod} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dec} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_max} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_min integer_min float_sin float_dup_items print_float integer_flush in1 float_frominteger tagged_947 integer_fromfloat float_sin integer_dup_items float_yank float_cos float_dup float_max float_yank print_integer float_tan float_cos integer_div float_dec float_dup_items float_tan float_dup float_frominteger float_yank print_integer integer_dup float_dup integer_pop integer_min float_max float_dec integer_dec integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_min float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 30 integer_flush in1 -36 float_tan integer_yank integer_flush integer_shove 18 integer_dup 30 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_mod in2 integer_flush integer_shove 18 integer_dup integer_max float_dec 17 integer_dup integer_yank float_max integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 143
Size: 144
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10112.453476700002
Median total errors in population: 1246.8509
Error averages by case: (392.34998599999847 8.898 407.7523273999985 10.442 416.2997625999972 11.849 404.0821254000023 11.186 423.4360255000031 11.52 280.78463929999924 10.156 340.86122400000124 10.943 429.7056265999985 10.004 421.0465771000005 10.162 279.4583745000007 10.223 436.08606199999747 12.587 278.14878160000075 11.25 397.22882329999624 10.25 400.2029790000009 11.023 405.67898849999756 10.723 418.8801419000029 10.298 395.24111869999814 10.001 409.3314876999966 11.122 396.57313580000346 9.595 398.14597290000245 11.056 441.7499860000046 11.11 425.66391429999754 10.801 414.526494300002 10.395 401.08218429999675 9.41 432.16873799999814 10.964)
Error minima by case: (0.4041 6 0.8243 7 3.8762 7 0.2593 8 14.5508 7 1.4251 6 9.9799 6 1.7871 7 9.7665 7 0.2933 6 1.723 9 0.0619 7 1.7132 7 0.045 6 4.6717 8 5.7251 7 0.415 7 0.5201 7 0.9134 6 0.3132 7 2.5018 7 14.8262 7 10.4434 8 0.3756 6 1.336 7)
Average genome size in population (length): 153.908
Average program size in population (points): 154.908
Average percent parens in population: 0.006
Minimum age in population: 109.3052025314183
Maximum age in population: 113.8860572106799
Average age in population: 111.8994792151834
Median age in population: 111.9366461709871
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.475
Error (vector) diversity:			 0.567
Behavioral diversity:				 0.568
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 260121783
--- Timings ---
Current time: 1529615891915 milliseconds
Total Time:         420.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.0 seconds, 28.3%
Fitness Testing:    236.5 seconds, 56.2%
Report:              65.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_inc} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_pop} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_min} {:instruction in1} {:instruction float_yank} {:instruction integer_min} {:instruction integer_min} {:instruction float_swap} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction tagged_153} {:instruction float_min} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction float_yank} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_max} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_cos} {:instruction float_dup} {:instruction integer_pop} {:instruction float_yank} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_cos} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction integer_shove} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction float_flush} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_min} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_inc integer_dec integer_mod float_frominteger tagged_153 integer_min integer_shove float_stackdepth float_pop integer_dup integer_dup_items integer_min in1 float_yank integer_min integer_min float_swap float_stackdepth float_pop float_sub tagged_153 float_min float_pop integer_min tagged_947 integer_fromfloat float_sin integer_dup_items integer_min float_cos float_dup float_max float_yank print_integer float_stackdepth float_max integer_div integer_min float_max float_cos float_dup integer_pop float_yank print_integer integer_yankdup float_cos float_frominteger integer_min float_max float_dec float_dup_items float_cos integer_div integer_shove float_yank float_max integer_mod float_flush integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_min float_div print_float print_integer float_inc integer_yankdup in1 -36 float_tan integer_flush integer_flush integer_shove 18 integer_swap 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_stackdepth integer_flush integer_shove 18 integer_dup integer_max 17 integer_dup integer_yank float_pop integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10494.505581200003
Median total errors in population: 1245.8973999999998
Error averages by case: (409.05726819999853 9.178 424.9587516999984 10.735 432.9378661999975 12.19 419.61152970000194 11.469 437.24271690000336 11.782 287.208171499999 10.561 349.81232510000103 11.319 445.0514719999982 10.391 436.17613290000025 10.431 289.1917238000008 10.689 454.25075039999786 12.914 285.93355910000054 11.648 412.9253725999963 10.565 416.74220380000133 11.302 424.5709120999973 11.073 433.24174070000254 10.568 411.1336186999979 10.29 426.40785789999666 11.417 411.31374990000364 9.916 413.6823619000027 11.359 460.3119383000043 11.376 442.2649396999971 11.068 434.7278916000019 10.726 412.254507299997 9.693 449.5762191999971 11.26)
Error minima by case: (0.3814 5 0.8123 7 13.8776 8 0.2593 8 13.4102 8 2.4182 7 22.0127 8 2.8161 7 13.7634 7 0.3047 6 6.7244 9 1.0903 8 1.6588 7 0.9263 7 4.6831 8 9.722 8 0.365 7 0.5252 8 0.9134 6 0.3132 8 3.52 8 18.823 8 4.4434 7 0.3756 6 13.3374 8)
Average genome size in population (length): 153.095
Average program size in population (points): 154.095
Average percent parens in population: 0.007
Minimum age in population: 110.5016478760935
Maximum age in population: 115.593449863551
Average age in population: 113.211880526219
Median age in population: 113.2966500984552
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.498
Error (vector) diversity:			 0.589
Behavioral diversity:				 0.592
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 263949783
--- Timings ---
Current time: 1529615897862 milliseconds
Total Time:         426.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       120.4 seconds, 28.2%
Fitness Testing:    240.1 seconds, 56.2%
Report:              66.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_dup} {:instruction float_sin} {:instruction integer_sub} {:instruction tagged_153} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_yank} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_yank} {:instruction float_sin} {:instruction tagged_153} {:instruction integer_min} {:instruction in1} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction float_yank} {:instruction float_flush} {:instruction float_shove} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction float_cos} {:instruction integer_dup_items} {:instruction float_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_min} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_588} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_rot} {:instruction float_max} {:instruction print_float} {:instruction print_integer} {:instruction -21} {:instruction integer_mod} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction in1} {:instruction -36} {:instruction float_tan} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 30} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dec} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_min integer_min float_dup float_sin integer_sub tagged_153 float_sin integer_sub print_float integer_flush integer_min float_sub integer_yank integer_dup_items float_stackdepth float_yank float_sin tagged_153 integer_min in1 integer_dec float_stackdepth float_yank float_flush float_shove integer_flush float_dec float_frominteger tagged_153 integer_min float_cos integer_dup_items float_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_mod integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_min float_div print_float print_integer float_inc float_inc tag_integer_588 integer_flush integer_flush float_dup_items integer_pop integer_dup integer_swap float_div integer_dec float_pop float_rot float_max print_float print_integer -21 integer_mod in2 -36 float_tan integer_flush integer_flush in1 -36 float_tan integer_yank float_dup_times integer_shove 18 integer_dup 30 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_dec 17 integer_dup integer_yank float_pop integer_mult float_swap print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10508.6211397
Median total errors in population: 1278.2639
Error averages by case: (412.93030639999813 9.125 421.1922574999984 10.683 430.75648849999754 12.057 414.50295660000194 11.347 434.1596696000034 11.687 304.9722255999994 10.43 364.9985699000012 11.245 442.1266811999984 10.218 432.78621000000015 10.382 302.5562537000008 10.554 452.34517049999795 12.763 304.45872100000065 11.556 406.99456979999616 10.47 413.1306192000014 11.183 422.1752218999974 10.918 429.7143563000024 10.443 407.03108199999804 10.217 427.2661387999963 11.324 407.44596570000385 9.856 411.94445770000283 11.267 454.9465352000048 11.287 438.22362149999765 10.986 435.31463350000183 10.593 416.9263652999967 9.625 448.36306229999775 11.143)
Error minima by case: (0.4058 6 0.7699 7 17.098 8 0.2593 8 3.4063 8 3.4351 7 22.0131 6 1.7626 7 1.291 7 0.3003 6 19.2756 9 0.0375 8 1.6588 7 0.045 7 4.6773 7 2.3339 7 0.365 8 0.5201 9 0.9134 6 0.312 7 9.0321 7 3.177 8 10.419 8 0.3756 6 12.6626 8)
Average genome size in population (length): 153.317
Average program size in population (points): 154.317
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 116.3251417850625
Average age in population: 114.3967009833337
Median age in population: 114.5480549458716
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.474
Error (vector) diversity:			 0.581
Behavioral diversity:				 0.581
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 267783358
--- Timings ---
Current time: 1529615903681 milliseconds
Total Time:         432.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.8 seconds, 28.2%
Fitness Testing:    243.6 seconds, 56.3%
Report:              67.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction print_float} {:instruction integer_flush} {:instruction in1} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_shove} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_yank} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_shove} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction float_yank} {:instruction float_flush} {:instruction float_shove} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction float_cos} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction tag_float_129} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_153} {:instruction integer_min} {:instruction float_cos} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction float_div} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction float_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction tag_float_59} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_dup} {:instruction tag_float_59} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction float_inc} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction print_float} {:instruction print_float} {:instruction print_integer} {:instruction float_inc})
Best program: (integer_min integer_sub integer_sub integer_inc integer_dec integer_mod float_frominteger tagged_153 integer_min integer_shove float_stackdepth integer_sub print_float integer_flush in1 tagged_153 integer_min integer_shove tagged_947 float_shove float_dup float_frominteger float_yank print_integer float_inc float_yank integer_dup_times float_inc float_cos integer_div integer_min float_dec integer_shove float_yankdup float_yank float_dec in1 integer_dec float_stackdepth float_yank float_flush float_shove integer_flush float_dec float_frominteger tagged_153 integer_min float_cos integer_dup_items integer_swap integer_min float_max float_dec tag_float_129 float_flush integer_mod integer_div -37 in2 integer_stackdepth integer_flush float_dec float_frominteger tagged_153 integer_min float_cos integer_dup_items integer_swap float_cos float_swap integer_min float_max float_dec float_dup_items float_flush integer_mod float_div print_float -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 integer_shove integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 float_flush integer_shove 18 integer_dup tag_float_59 float_div integer_yank integer_shove integer_dup tag_float_59 float_div integer_yank integer_shove 17 float_inc 31 float_div integer_yank float_pop integer_mult print_float print_float print_integer float_inc)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 180
Size: 181
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10377.692732600002
Median total errors in population: 1250.308
Error averages by case: (405.3592100999985 9.108 418.5776805999996 10.669 430.64358039999735 12.092 414.94730980000196 11.382 436.5630570000031 11.714 284.31484599999936 10.35 336.7991923000008 11.182 442.6970049999986 10.263 429.57350430000025 10.411 274.9618966000007 10.464 447.3459388999977 12.809 272.04117580000104 11.448 407.34614009999746 10.456 416.30426430000057 11.262 423.2210571999983 10.959 430.3488124000023 10.498 406.40783629999873 10.202 423.6935765999974 11.326 406.7206352000031 9.822 408.9153242000022 11.308 454.5503373000037 11.339 435.8224561999982 10.985 431.52573660000235 10.612 419.8802406999974 9.641 447.6099186999978 11.22)
Error minima by case: (0.4058 6 0.7699 7 4.098 8 0.2593 8 6.5937 8 0.4182 7 23.0923 8 0.7626 6 1.7634 7 0.7067 6 2.7644 9 0.0943 8 1.6721 8 0.045 7 4.7017 8 1.7241 8 0.365 7 0.5211 8 0.0621 6 0.3132 8 10.44 8 6.823 8 0.4435 7 0.6244 7 5.6626 7)
Average genome size in population (length): 155.049
Average program size in population (points): 156.049
Average percent parens in population: 0.006
Minimum age in population: 113.1095499039682
Maximum age in population: 117.8545354704971
Average age in population: 115.8162915792987
Median age in population: 115.8609028545586
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.482
Error (vector) diversity:			 0.578
Behavioral diversity:				 0.58
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 271660383
--- Timings ---
Current time: 1529615909698 milliseconds
Total Time:         438.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       123.3 seconds, 28.1%
Fitness Testing:    247.1 seconds, 56.3%
Report:              68.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 149105.54140000005
Test mean error for best: 74.55277
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_shove} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_yank} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_min} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_yank} {:instruction float_dec} {:instruction float_cos} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dec} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction integer_add} {:instruction tag_float_507} {:instruction float_min} {:instruction float_dec} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_swap} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_pop} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_shove} {:instruction in1} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction 17} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction integer_shove})
Best program: (integer_dup_items integer_sub integer_shove float_sin integer_shove float_sin float_stackdepth float_yank float_sub integer_dup_items integer_min float_cos float_dup float_frominteger integer_min tagged_153 integer_min integer_shove tagged_947 float_yank float_dec float_cos integer_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yankdup integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dec float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_div integer_yank integer_add tag_float_507 float_min float_dec integer_dec float_pop float_add float_swap print_float print_integer float_inc in1 in2 integer_mult in2 integer_flush integer_flush integer_inc float_pop float_dup_times float_inc integer_shove in1 integer_flush integer_shove 18 integer_dup float_frominteger float_pop 17 integer_fromfloat integer_yank float_pop integer_mult float_div print_float print_integer integer_shove)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10664.407692600005
Median total errors in population: 1268.87155
Error averages by case: (418.903778099998 9.238 433.19350509999816 10.786 438.11233069999736 12.17 428.5409154000023 11.47 446.1072114000043 11.791 292.1617191999991 10.514 353.09946170000114 11.281 454.8705989999979 10.35 441.35498390000004 10.505 290.3293136000006 10.606 458.65582299999767 12.882 289.916215700001 11.551 419.1032480999961 10.569 422.90794210000143 11.268 431.78674159999684 11.059 439.2075055000027 10.53 420.21656819999754 10.331 435.53382789999637 11.421 419.4804375000046 9.948 421.89081500000304 11.306 467.08997920000473 11.386 449.3831774999968 11.074 442.83787700000215 10.699 420.34975219999615 9.744 455.63896399999743 11.256)
Error minima by case: (0.3758 6 0.811 7 11.8776 8 0.2593 8 1.4072 8 2.4182 7 22.0131 7 2.8161 7 1.719 8 0.3047 6 3.7244 8 0.898 7 1.7132 7 1.045 8 4.6617 8 2.3224 7 0.3706 8 4.5731 9 0.9121 6 0.3132 8 9.4845 8 1.1778 8 6.419 7 0.3756 6 10.3374 8)
Average genome size in population (length): 153.4
Average program size in population (points): 154.4
Average percent parens in population: 0.007
Minimum age in population: 114.9122222274457
Maximum age in population: 119.0618767782902
Average age in population: 117.2202317371704
Median age in population: 117.2486505491746
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.487
Error (vector) diversity:			 0.579
Behavioral diversity:				 0.579
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 275496308
--- Timings ---
Current time: 1529615915322 milliseconds
Total Time:         444.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.7 seconds, 28.1%
Fitness Testing:    250.5 seconds, 56.4%
Report:              69.1 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction float_add} {:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_sin} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction float_swap} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_shove} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction float_shove} {:instruction float_inc} {:instruction float_yank} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_cos} {:instruction integer_add} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_dup_times} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_sin} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_swap} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction float_cos} {:instruction float_dup_times} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -35} {:instruction tag_integer_648} {:instruction float_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction float_shove} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_pop integer_min float_add integer_sub tagged_947 float_dup float_sin tagged_947 float_dec float_sin integer_dup_items integer_min tagged_675 float_sub float_max float_swap integer_min float_frominteger integer_min integer_shove tagged_947 float_shove float_dup float_frominteger float_yank float_shove float_inc float_yank integer_dup_times float_inc float_cos integer_add integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min float_yank float_max integer_mod integer_dup_items integer_dup_times -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_sin integer_inc in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_swap integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop float_cos float_dup_times integer_dup integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -35 tag_integer_648 float_flush integer_flush float_dup_items in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush float_inc in2 integer_flush integer_shove in2 integer_flush integer_shove 18 integer_dup integer_max float_pop 17 integer_dup integer_yank float_pop integer_mult float_div float_shove print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10282.364220300002
Median total errors in population: 1309.6685
Error averages by case: (400.1455915999982 9.121 416.05363809999847 10.693 422.21624849999773 12.023 409.33673210000217 11.352 429.10026120000344 11.713 292.199585499999 10.49 348.26866080000093 11.242 432.3246776999988 10.215 425.41484780000025 10.403 285.4131955000006 10.589 440.61667749999776 12.715 284.25160330000114 11.566 400.8103197999975 10.505 405.84947430000125 11.183 413.82949469999795 10.949 424.4815988000022 10.466 400.765046599998 10.28 417.59188249999767 11.327 405.519791100004 9.807 404.1763703000026 11.309 444.31398990000355 11.302 433.3764026999974 11.025 423.443939700002 10.576 413.1178114999969 9.665 438.0813787999979 11.149)
Error minima by case: (0.3814 6 0.8243 8 4.098 7 0.2593 8 1.4072 7 3.4182 7 22.0575 8 0.7927 6 1.7637 7 0.3047 6 1.7361 7 1.0903 8 1.6632 7 0.075 7 4.2983 6 2.2777 8 0.3706 8 0.5201 8 0.8859 6 0.3119 8 1.5101 8 5.2448 8 6.5566 7 0.3743 6 6.6382 7)
Average genome size in population (length): 152.767
Average program size in population (points): 153.767
Average percent parens in population: 0.007
Minimum age in population: 116.0607567323314
Maximum age in population: 120.7859701879665
Average age in population: 118.5690074061258
Median age in population: 118.6110931202792
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.477
Error (vector) diversity:			 0.573
Behavioral diversity:				 0.574
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 279316108
--- Timings ---
Current time: 1529615920956 milliseconds
Total Time:         450.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.1 seconds, 28.0%
Fitness Testing:    254.0 seconds, 56.4%
Report:              69.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_yank} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction float_min} {:instruction float_sub} {:instruction integer_shove} {:instruction tagged_947} {:instruction float_pop} {:instruction print_integer} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_min} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_div} {:instruction print_integer} {:instruction float_dup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_yank} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_max} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_max} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_mod} {:instruction integer_flush} {:instruction integer_yank} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction float_add} {:instruction float_dec} {:instruction 17} {:instruction print_float} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_inc})
Best program: (integer_min float_yank integer_shove tagged_947 float_pop integer_min tagged_947 float_dec float_sin integer_sub print_float float_min float_sub integer_shove tagged_947 float_pop print_integer float_dup_items float_cos integer_div float_dec float_dup_items integer_min float_dup float_frominteger integer_div print_integer float_dup float_dup integer_pop integer_min float_max float_dec float_yank float_flush integer_mod integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot float_dup_times integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div print_float print_integer float_inc in1 in2 -36 float_tan integer_flush integer_flush integer_shove 18 integer_dup 31 float_max integer_yank float_pop integer_flush integer_shove 18 integer_flush integer_flush integer_shove 18 integer_dup 31 float_max integer_yank float_pop float_add integer_dec print_float print_integer float_inc float_mod integer_flush integer_yank 18 integer_dup integer_max float_div float_add float_dec 17 print_float 31 float_div integer_yank float_pop integer_mult float_div print_float print_integer float_inc float_div integer_yankdup float_inc)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 153
Size: 154
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10255.864992100003
Median total errors in population: 1256.7517000000003
Error averages by case: (403.7572764999982 8.867 417.26723319999894 10.44 426.4802747999974 11.838 414.14019160000225 11.078 433.17867230000303 11.47 265.32955329999936 10.136 331.7748878000003 10.953 438.7564885999987 9.939 426.7246339000004 10.113 265.3732993000006 10.205 443.88457329999756 12.542 264.397524700001 11.229 404.6506451999968 10.184 409.30067370000097 10.915 417.9360163999978 10.7 425.6196050000028 10.192 405.1204997999983 9.977 422.242050699997 11.05 404.32170340000374 9.524 404.66168590000274 11.019 451.133150900004 11.04 434.73584669999747 10.77 428.7744052000021 10.335 409.2360641999968 9.366 442.332035699998 10.854)
Error minima by case: (0.3814 6 0.8299 8 6.8776 8 0.7402 8 1.4072 8 0.5569 7 22.0201 8 1.7874 6 1.7645 7 0.2993 6 18.2756 7 0.0603 8 0.3412 7 0.045 7 6.6717 7 2.2769 8 0.3663 7 1.4615 8 0.0966 6 0.3133 8 5.4845 8 1.1778 7 1.419 7 0.3656 6 5.3374 8)
Average genome size in population (length): 151.964
Average program size in population (points): 152.964
Average percent parens in population: 0.007
Minimum age in population: 117.2025509704139
Maximum age in population: 121.7497566215032
Average age in population: 119.9125489970739
Median age in population: 119.9916038769222
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.464
Error (vector) diversity:			 0.549
Behavioral diversity:				 0.553
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 283115733
--- Timings ---
Current time: 1529615926649 milliseconds
Total Time:         455.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.5 seconds, 28.0%
Fitness Testing:    257.3 seconds, 56.5%
Report:              70.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 118897.09950000001
Test mean error for best: 59.44855
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_dup} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction float_tan} {:instruction float_pop} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_cos} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_flush} {:instruction integer_min} {:instruction float_max} {:instruction float_flush} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_yank} {:instruction integer_min} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dup} {:instruction integer_mod} {:instruction float_sin} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_dup} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sub} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_385} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_add} {:instruction float_add} {:instruction integer_dup} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction tag_integer_648} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_min} {:instruction integer_shove} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction float_div} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dec} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_tan} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction print_integer})
Best program: (integer_min float_dup float_sin integer_sub print_float float_tan float_pop float_frominteger integer_div float_yank print_integer float_inc float_cos integer_div integer_min float_cos float_dec integer_shove float_min integer_flush integer_min float_max float_flush integer_yankdup float_cos integer_yank integer_min float_max float_max float_dec float_dup integer_mod float_sin integer_swap -37 in2 integer_dup in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sub integer_dup_items in2 tag_float_385 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_add float_add integer_dup print_float print_integer float_inc in1 in2 -36 tag_integer_648 integer_flush integer_flush float_dup_items tag_integer_648 integer_flush integer_flush float_dup_items 18 float_dec 31 float_min integer_shove in2 -36 float_tan float_div float_tan integer_stackdepth integer_flush integer_shove 18 integer_swap float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_dec 17 integer_dup integer_yank float_tan integer_mult float_swap print_float print_integer)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 145
Size: 146
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10792.934476400003
Median total errors in population: 1327.7595999999999
Error averages by case: (424.97086479999837 9.021 442.4115378999986 10.607 449.64466689999733 11.949 433.42044680000214 11.267 455.4280771000038 11.648 276.1128118999994 10.403 340.9826464000012 11.166 461.6874518999983 10.123 453.3678820000003 10.257 280.2355502000008 10.445 468.76161669999766 12.702 279.28113940000094 11.51 425.12081409999627 10.367 433.3832277000012 11.116 442.0298336999972 10.845 448.61388850000253 10.358 425.13443219999783 10.12 445.7920752999968 11.275 424.3984990000041 9.719 430.533714400003 11.162 472.02006680000414 11.247 458.43384259999726 10.933 453.851004300002 10.516 434.60314489999604 9.549 463.36224089999786 11.048)
Error minima by case: (0.3883 6 1.2001 8 18.1224 8 0.268 8 5.4082 8 0.5566 7 2.1075 8 2.8061 7 5.7637 8 0.3047 6 7.7244 9 0.8977 8 0.2968 7 0.0468 8 5.7017 8 1.7223 8 0.405 7 0.52 8 0.9121 6 0.3132 8 1.56 8 10.8233 8 1.551 7 0.6226 7 14.3374 7)
Average genome size in population (length): 152.759
Average program size in population (points): 153.759
Average percent parens in population: 0.007
Minimum age in population: 118.4911681902927
Maximum age in population: 123.1969042021542
Average age in population: 121.2077368439964
Median age in population: 121.2541019879482
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.474
Error (vector) diversity:			 0.563
Behavioral diversity:				 0.564
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 286935358
--- Timings ---
Current time: 1529615932452 milliseconds
Total Time:         461.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.9 seconds, 27.9%
Fitness Testing:    260.7 seconds, 56.5%
Report:              71.8 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 137902.36800000002
Test mean error for best: 68.95118
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03517306  
Correct output: 119.1092560212 | Program output: 29.08917306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06617306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07417306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_min} {:instruction float_yankdup} {:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_sin} {:instruction tagged_947} {:instruction integer_dup_items} {:instruction float_sin} {:instruction tag_float_817} {:instruction integer_stackdepth} {:instruction float_sin} {:instruction tagged_153} {:instruction integer_min} {:instruction integer_shove} {:instruction tagged_984} {:instruction float_pop} {:instruction integer_min} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_max} {:instruction integer_min} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction float_flush} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_swap} {:instruction integer_min} {:instruction integer_dup} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_rot} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_397} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_add} {:instruction float_add} {:instruction integer_dup} {:instruction print_float} {:instruction print_integer} {:instruction integer_dup_times} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction tagged_797} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction tag_integer_634} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 18} {:instruction float_dec} {:instruction 31} {:instruction float_min} {:instruction integer_shove} {:instruction in2} {:instruction -36} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_pop} {:instruction 17} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_mult} {:instruction float_div} {:instruction float_shove} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_dup integer_min integer_min float_yankdup integer_sub tagged_947 float_dup float_sin tagged_947 integer_dup_items float_sin tag_float_817 integer_stackdepth float_sin tagged_153 integer_min integer_shove tagged_984 float_pop integer_min integer_min float_cos float_dup float_max integer_min float_cos integer_div integer_min float_max float_flush float_dup_items float_cos float_swap integer_min integer_dup float_dec float_dup_items float_flush integer_mod integer_div -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_rot in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_397 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_add float_add integer_dup print_float print_integer integer_dup_times in1 in2 -36 tagged_797 integer_flush integer_flush float_dup_items tag_integer_634 integer_flush integer_flush float_dup_items 18 float_dec 31 float_min integer_shove in2 -36 float_tan integer_inc integer_sub integer_shove 18 integer_dup 31 float_div integer_yankdup float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_pop 17 integer_dup integer_yank float_pop integer_mult float_div float_shove print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4252 9 90.0201 10 72.2374 8 49.739 9 7.3003 8 85.2756 12 7.054 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9132999999997
Mean: 23.638266
Genome size: 155
Size: 156
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10578.194180000002
Median total errors in population: 1315.66835
Error averages by case: (412.1585245999986 9.228 426.5733945999989 10.776 435.0560564999972 12.17 424.16353750000206 11.427 444.27992100000336 11.754 295.6261778999993 10.493 348.1929746000016 11.252 449.6122960999986 10.399 439.33869240000024 10.447 288.9841005000004 10.711 455.5885961999976 12.822 285.0823111000006 11.633 417.6082974999963 10.531 420.485508900001 11.234 428.22640149999773 11.046 435.4313041000027 10.516 415.8532244999983 10.316 430.72374669999664 11.396 416.18452490000334 9.885 417.0033526000028 11.384 464.324625500004 11.354 443.30773819999723 11.044 437.840160500002 10.675 421.2504745999968 9.707 451.9072374999975 11.191)
Error minima by case: (0.4058 6 4.1418 7 3.8776 8 0.7392 8 10.5778 6 0.5638 7 2.0961 7 1.7871 6 1.7644 7 0.3003 6 1.7244 8 0.8987 6 1.3168 7 0.045 6 1.677 7 1.7061 7 0.3706 7 0.52 7 0.9134 6 0.3133 7 0.9082 7 6.824 7 4.419 7 0.6244 6 1.3374 7)
Average genome size in population (length): 152.984
Average program size in population (points): 153.984
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 124.7566262973079
Average age in population: 122.3672780747336
Median age in population: 122.5514406212831
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.504
Error (vector) diversity:			 0.598
Behavioral diversity:				 0.599
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 290760833
--- Timings ---
Current time: 1529615938239 milliseconds
Total Time:         467.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.4 seconds, 27.9%
Fitness Testing:    264.1 seconds, 56.5%
Report:              72.7 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 137926.30479999987
Test mean error for best: 68.96315
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542306  
Correct output: 119.1092560212 | Program output: 29.08996306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06673306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07481306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_add float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc in1 in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 8 85.2756 12 7.0547 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9123999999997
Mean: 23.638248
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10328.373184800006
Median total errors in population: 1252.0701999999999
Error averages by case: (402.5058961999983 9.012 412.82806149999897 10.548 422.93249699999774 11.966 416.312976700002 11.244 435.90910810000275 11.56 283.08705789999925 10.293 340.0239391000009 11.059 437.9312150999989 10.121 430.4096573000003 10.284 277.4385002000006 10.395 446.237107099998 12.676 279.25300120000094 11.379 408.3480772999968 10.329 411.3043266000008 11.051 416.19673729999784 10.818 432.6542618000025 10.337 407.6432272999981 10.097 422.5877439999972 11.184 403.7546371000035 9.708 409.52335500000197 11.134 452.24305630000396 11.159 432.83577679999803 10.871 427.878824700002 10.55 407.231353599997 9.456 443.010789599998 11.061)
Error minima by case: (0.3958 5 0.7699 6 2.8777 8 0.2218 6 2.4063 6 0.4252 6 9.9799 6 1.7625 7 5.7655 7 0.3047 6 0.7244 8 0.0375 6 1.3168 6 0.045 5 1.6772 8 1.7241 6 0.405 6 0.5681 6 0.9089 6 0.3097 6 2.51 6 0.2014 7 2.449 7 0.3756 6 0.3374 7)
Average genome size in population (length): 152.413
Average program size in population (points): 153.413
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 125.9256682230793
Average age in population: 123.6492232472304
Median age in population: 123.817005738982
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.487
Error (vector) diversity:			 0.576
Behavioral diversity:				 0.577
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 294572408
--- Timings ---
Current time: 1529615944038 milliseconds
Total Time:         473.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.8 seconds, 27.8%
Fitness Testing:    267.7 seconds, 56.6%
Report:              73.6 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 137926.30479999987
Test mean error for best: 68.96315
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542306  
Correct output: 119.1092560212 | Program output: 29.08996306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06673306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07481306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_add float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc in1 in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 8 85.2756 12 7.0547 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9123999999997
Mean: 23.638248
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10443.908006800004
Median total errors in population: 1273.1331500000001
Error averages by case: (409.6371206999982 9.269 420.25630089999817 10.777 423.7075275999976 12.196 416.325554000002 11.488 437.0715240000038 11.784 290.8335522999994 10.645 359.394615400001 11.38 438.308774299998 10.413 431.4912794000002 10.497 296.1630172000008 10.777 445.6988123999979 12.923 293.7629035000009 11.732 408.5976606999962 10.58 413.47943930000156 11.32 418.9517337999968 11.049 430.9081652000028 10.606 407.6060328999978 10.372 425.18877809999657 11.486 409.89055550000415 9.961 408.85538090000307 11.39 453.38354630000464 11.423 438.255482099997 11.126 429.7848132000019 10.791 417.7987240999964 9.733 443.50871299999744 11.33)
Error minima by case: (0.3971 4 0.8175 4 2.9076 8 0.7392 5 2.4308 4 0.5638 4 13.0131 5 1.7871 7 5.7655 5 0.2933 6 2.7244 9 0.0319 4 1.7132 4 0.0437 3 6.6717 8 1.7241 4 0.415 5 4.525 4 0.9119 4 0.3132 4 9.46 4 2.2014 5 2.551 7 0.3756 4 9.3374 7)
Average genome size in population (length): 152.235
Average program size in population (points): 153.235
Average percent parens in population: 0.007
Minimum age in population: 122.7214633573887
Maximum age in population: 127.451713407992
Average age in population: 125.1114797013978
Median age in population: 125.1356238480071
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.494
Error (vector) diversity:			 0.581
Behavioral diversity:				 0.582
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 298379383
--- Timings ---
Current time: 1529615949976 milliseconds
Total Time:         479.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.2 seconds, 27.8%
Fitness Testing:    271.2 seconds, 56.6%
Report:              74.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 137926.30479999987
Test mean error for best: 68.96315
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542306  
Correct output: 119.1092560212 | Program output: 29.08996306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06673306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07481306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc in1 in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 8 85.2756 12 7.0547 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9123999999997
Mean: 23.638248
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10136.803910100001
Median total errors in population: 1244.2353999999998
Error averages by case: (394.21531429999817 9.024 410.05752159999895 10.608 412.8780726999972 11.925 400.512494400002 11.289 420.5103206000035 11.642 296.5675323999993 10.316 356.15405060000114 11.194 427.1971771999985 10.098 415.9499302000002 10.302 293.91232450000075 10.371 432.2889319999977 12.654 294.489839300001 11.492 391.74058679999746 10.382 398.344646200001 11.156 404.2882941999976 10.839 413.4297677000027 10.384 391.7657428999987 10.137 412.05628619999754 11.252 395.72167510000367 9.725 393.5039162000025 11.241 440.14029710000364 11.239 428.26441809999744 10.943 418.03073350000244 10.507 395.55906789999676 9.526 429.98496839999757 10.994)
Error minima by case: (0.3814 6 3.1757 6 5.1224 7 0.739 7 3.7762 6 0.5638 7 9.9079 7 2.213 7 1.7645 7 0.3047 6 7.2756 9 0.0943 8 1.6588 6 1.0395 5 4.6773 8 1.7241 6 0.3855 7 1.464 6 0.0866 6 0.6568 6 1.5155 6 6.8242 7 3.5566 8 0.3756 6 7.6626 8)
Average genome size in population (length): 151.525
Average program size in population (points): 152.525
Average percent parens in population: 0.007
Minimum age in population: 124.2037286915282
Maximum age in population: 128.451713407992
Average age in population: 126.4120901822664
Median age in population: 126.4305938456779
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.472
Error (vector) diversity:			 0.583
Behavioral diversity:				 0.584
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 302168483
--- Timings ---
Current time: 1529615955901 milliseconds
Total Time:         484.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.7 seconds, 27.8%
Fitness Testing:    274.6 seconds, 56.6%
Report:              75.5 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 137926.30479999987
Test mean error for best: 68.96315
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542306  
Correct output: 119.1092560212 | Program output: 29.08996306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06673306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07481306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction tag_integer_496} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 tag_integer_496 float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_add float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc in1 in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 integer_rot integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 8 85.2756 12 7.0547 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9123999999997
Mean: 23.638248
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10700.6009698
Median total errors in population: 1254.4577499999996
Error averages by case: (417.19085419999857 9.095 433.30952219999887 10.647 441.7795568999973 12.03 429.6971143000022 11.351 448.1100524000034 11.72 291.74454229999947 10.436 353.2789164000011 11.178 454.4419065999984 10.255 444.34454140000025 10.373 290.9096061000006 10.445 461.7930784999974 12.821 288.4290117000006 11.489 422.401981899996 10.437 427.61350820000087 11.233 433.98328419999734 10.93 442.97777630000274 10.498 421.2599787999981 10.206 435.5742396999962 11.343 422.53254240000376 9.796 421.7943481000029 11.282 468.65262250000484 11.327 451.22921589999703 11.06 443.28649940000207 10.584 423.16400289999666 9.644 459.7462664999975 11.176)
Error minima by case: (0.3758 5 1.8399 6 10.8776 8 0.2693 6 6.5937 5 0.5569 5 20.0111 4 1.7954 7 1.7634 6 0.2933 6 2.7243 9 0.9197 5 0.3412 5 1.045 4 5.6889 8 2.2769 5 0.4063 5 1.4639 6 0.9121 6 0.3132 5 2.4982 5 6.823 6 5.4189 7 0.3756 3 9.3373 7)
Average genome size in population (length): 151.237
Average program size in population (points): 152.237
Average percent parens in population: 0.007
Minimum age in population: 125.5355454079312
Maximum age in population: 130.0529451976797
Average age in population: 127.748319888553
Median age in population: 127.7805787866819
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.472
Error (vector) diversity:			 0.576
Behavioral diversity:				 0.582
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 305950458
--- Timings ---
Current time: 1529615961642 milliseconds
Total Time:         490.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       136.2 seconds, 27.7%
Fitness Testing:    278.1 seconds, 56.7%
Report:              76.5 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 137926.30479999987
Test mean error for best: 68.96315
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542306  
Correct output: 119.1092560212 | Program output: 29.08996306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06673306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07481306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction float_max} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items float_max -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 8 85.2756 12 7.0547 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9123999999997
Mean: 23.638248
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 9835.1145684
Median total errors in population: 1235.5463
Error averages by case: (379.16868389999854 9.037 393.5796756999987 10.605 404.19370339999745 12.136 391.8364118000018 11.354 411.6363355000036 11.733 265.72197759999915 10.41 330.0027427000009 11.209 419.56325669999865 10.165 407.2376875000005 10.348 265.7687509000007 10.513 426.3783576999977 12.883 264.7203289000011 11.482 384.08224389999674 10.463 389.68278610000084 11.227 398.1036887999976 10.915 404.0904397000024 10.45 382.9739488999984 10.147 403.19210869999694 11.363 383.4785346000037 9.781 384.6957005000027 11.274 433.5567955000041 11.298 411.9885621999973 10.986 411.6672910000021 10.625 393.4567210999961 9.546 423.16683509999785 11.221)
Error minima by case: (0.4058 5 1.1757 6 19.0908 9 0.2593 7 17.5937 6 0.575 7 23.0923 7 1.7871 7 9.7155 7 0.2933 6 3.7244 9 0.0375 8 1.7132 6 0.9305 5 6.6702 7 5.7251 6 0.3706 7 0.5211 6 0.9034 6 0.3033 6 3.5499 6 14.8262 7 10.419 7 0.4001 6 11.6626 7)
Average genome size in population (length): 151.415
Average program size in population (points): 152.415
Average percent parens in population: 0.007
Minimum age in population: 126.5355454079312
Maximum age in population: 130.95675870301
Average age in population: 129.0799295587228
Median age in population: 129.1068070591725
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.462
Error (vector) diversity:			 0.541
Behavioral diversity:				 0.546
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 309736783
--- Timings ---
Current time: 1529615967410 milliseconds
Total Time:         496.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.6 seconds, 27.7%
Fitness Testing:    281.5 seconds, 56.7%
Report:              77.3 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 118902.09849999998
Test mean error for best: 59.45105
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03568306  
Correct output: 119.1092560212 | Program output: 29.08968306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06668306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07468306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction float_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 69.46510511651965} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_stackdepth in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 float_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 69.46510511651965 float_dup_items float_pop integer_fromfloat integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4247 9 90.0196 10 72.2374 8 49.739 9 7.2998 9 85.2756 12 7.0545 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9122999999995
Mean: 23.638247
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10228.380181300001
Median total errors in population: 1242.21775
Error averages by case: (393.1275638999985 8.988 411.31768469999844 10.567 419.64528689999753 12.006 407.6902899000022 11.292 427.00419200000357 11.656 290.2074585999991 10.417 349.04447440000155 11.193 435.1038996999983 10.106 425.4044349000004 10.287 288.51874760000067 10.499 441.9367807999977 12.734 287.176120600001 11.47 400.5569933999959 10.371 402.74168430000134 11.06 411.73269569999763 10.853 421.5197859000026 10.367 398.6098793999977 10.095 409.78818249999637 11.235 400.7634327000038 9.722 402.12242690000323 11.153 447.90294830000425 11.218 429.20874349999696 10.96 417.14779430000186 10.509 404.1506860999963 9.45 436.67499429999776 11.075)
Error minima by case: (0.3814 2 0.8213 2 6.098 9 0.7721 3 18.5978 2 0.5638 2 22.0121 3 1.7871 7 5.7655 3 0.3147 6 8.2512 7 0.0702 2 1.7133 2 0.045 1 2.3283 8 1.7241 2 0.405 3 0.5202 2 0.9134 2 0.3132 2 12.46 2 10.8252 3 3.419 8 0.4056 2 8.6382 7)
Average genome size in population (length): 150.501
Average program size in population (points): 151.501
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 132.3552798184987
Average age in population: 130.2845613544203
Median age in population: 130.4319951955258
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.448
Error (vector) diversity:			 0.547
Behavioral diversity:				 0.549
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 313500108
--- Timings ---
Current time: 1529615973283 milliseconds
Total Time:         502.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.1 seconds, 27.7%
Fitness Testing:    285.1 seconds, 56.7%
Report:              78.3 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 118902.09849999998
Test mean error for best: 59.45105
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03568306  
Correct output: 119.1092560212 | Program output: 29.08968306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06668306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07468306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction float_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 69.46510511651965} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_stackdepth in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 float_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 69.46510511651965 float_dup_items float_pop integer_fromfloat integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4247 9 90.0196 10 72.2374 8 49.739 9 7.2998 9 85.2756 12 7.0545 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9122999999995
Mean: 23.638247
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10283.768820300005
Median total errors in population: 1277.9937
Error averages by case: (405.1484538999984 9.085 418.3891260999992 10.656 425.3973558999973 12.063 415.292747200002 11.378 434.0199907000035 11.725 256.47677479999913 10.461 329.15949110000037 11.247 442.70739599999905 10.226 430.2209731000003 10.34 260.87920130000066 10.541 446.69929389999766 12.839 260.605120200001 11.528 407.4800387999975 10.488 409.8125028000006 11.165 419.8478257999981 10.932 428.2693126000023 10.452 406.6792360999989 10.147 423.7006719999976 11.329 406.5777741000031 9.814 407.91655330000214 11.256 453.5624303000032 11.317 435.8764585999976 11.02 430.6945991000022 10.58 414.30130349999683 9.604 442.75518909999835 11.106)
Error minima by case: (0.3658 5 0.8243 6 1.8932 8 0.7392 7 2.5928 6 0.5658 7 22.0131 6 1.7871 6 1.7645 7 0.2933 6 0.26 9 0.6956 5 1.6588 6 0.0435 6 5.6917 8 2.2769 6 0.3706 6 0.52 7 0.9134 6 0.3119 6 3.51 6 2.8222 6 0.4434 7 0.3756 5 0.6471 7)
Average genome size in population (length): 148.307
Average program size in population (points): 149.307
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 133.5464187099608
Average age in population: 131.5873112898833
Median age in population: 131.7759173388589
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.489
Error (vector) diversity:			 0.567
Behavioral diversity:				 0.57
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 317208608
--- Timings ---
Current time: 1529615978972 milliseconds
Total Time:         508.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.5 seconds, 27.6%
Fitness Testing:    288.5 seconds, 56.8%
Report:              79.1 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 118902.09849999998
Test mean error for best: 59.45105
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03568306  
Correct output: 119.1092560212 | Program output: 29.08968306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06668306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07468306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction float_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 69.46510511651965} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_stackdepth in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 float_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 69.46510511651965 float_dup_items float_pop integer_fromfloat integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4247 9 90.0196 10 72.2374 8 49.739 9 7.2998 9 85.2756 12 7.0545 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9122999999995
Mean: 23.638247
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10629.8343875
Median total errors in population: 1280.8348500000002
Error averages by case: (418.02410459999845 8.9 437.79574549999785 10.533 440.2474975999974 11.872 426.5064741000021 11.212 445.95264930000417 11.544 283.5682187999987 10.191 345.8066107000011 10.984 453.05016879999783 10.017 441.9041637000001 10.25 281.28697180000023 10.291 459.5077259999977 12.614 280.59899440000027 11.272 419.9792497999961 10.292 424.288805700002 11.003 431.8213300999968 10.791 440.9110469000029 10.28 418.03146079999766 10.062 433.1352786999964 11.171 416.4022826000043 9.634 420.5610624000031 11.095 465.6544308000045 11.158 454.6807696999971 10.875 441.1457063000023 10.413 425.66329419999573 9.427 456.4933441999973 10.936)
Error minima by case: (0.3814 6 3.2001 6 2.1424 7 0.2492 7 6.5948 6 1.4187 6 23.092 6 2.8062 7 1.7645 7 0.2891 6 1.2756 9 0.8987 6 1.6588 6 0.045 5 4.6717 8 2.2769 6 0.405 6 1.5596 6 0.9134 6 0.3132 6 2.4982 6 6.8242 7 5.389 7 0.3756 6 1.6626 7)
Average genome size in population (length): 147.458
Average program size in population (points): 148.458
Average percent parens in population: 0.007
Minimum age in population: 130.0876815675298
Maximum age in population: 135.2347757469031
Average age in population: 132.9900276820523
Median age in population: 133.0461930338296
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.482
Error (vector) diversity:			 0.577
Behavioral diversity:				 0.581
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 320895708
--- Timings ---
Current time: 1529615984626 milliseconds
Total Time:         513.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.0 seconds, 27.6%
Fitness Testing:    291.8 seconds, 56.8%
Report:              79.9 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 132259.42949999985
Test mean error for best: 66.12971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642306  
Correct output: 119.1092560212 | Program output: 29.09096306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06773306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07581306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction float_add} {:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction float_swap} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_dup_times} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_tan} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_swap} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_pop integer_min float_add integer_sub tagged_947 float_dup float_tan tagged_947 float_dec float_sin integer_dup_items integer_flush tagged_675 float_sub float_max float_swap integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth float_add integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div float_dup_times print_integer float_inc in1 in2 integer_dup 31 float_div float_dup_items float_pop integer_yank integer_shove float_tan 18 integer_max 31 float_div integer_swap float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 9 85.2756 12 7.0557 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9103999999998
Mean: 23.638208
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10040.0687036
Median total errors in population: 1237.9204
Error averages by case: (395.15079699999785 8.821 411.9588021999982 10.557 416.1189590999972 11.954 405.42087310000244 11.248 424.87705430000415 11.643 250.16177379999863 10.358 317.2269250000005 11.138 432.1351128999988 10.028 421.64766710000043 10.179 248.38670670000099 10.331 438.6964586999975 12.735 247.73329060000088 11.408 397.4494748999957 10.314 401.6922522000015 11.128 410.0609020999969 10.801 420.31106980000317 10.331 396.20405439999763 9.98 411.68434679999604 11.253 394.74430450000455 9.659 398.5218471000034 11.142 445.11690350000515 11.248 429.79364039999734 10.888 418.997441200002 10.394 404.1252191999958 9.464 433.8198269999974 11.031)
Error minima by case: (0.3883 6 4.7499 7 8.902 8 0.7707 8 1.4072 8 0.5639 7 6.0982 8 1.7871 6 5.7125 7 0.2891 6 2.7544 9 0.9625 8 1.6778 7 1.0695 7 4.6717 8 1.6711 8 0.365 7 0.5211 9 0.0866 6 0.6563 7 1.4982 7 1.1888 8 3.4434 7 0.4001 6 1.4413 7)
Average genome size in population (length): 145.306
Average program size in population (points): 146.306
Average percent parens in population: 0.007
Minimum age in population: 131.913502901435
Maximum age in population: 136.1772389392242
Average age in population: 134.1672067338144
Median age in population: 134.2203936406141
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.481
Error (vector) diversity:			 0.564
Behavioral diversity:				 0.567
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 324528908
--- Timings ---
Current time: 1529615990160 milliseconds
Total Time:         519.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.4 seconds, 27.6%
Fitness Testing:    295.1 seconds, 56.8%
Report:              80.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 132259.42949999985
Test mean error for best: 66.12971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642306  
Correct output: 119.1092560212 | Program output: 29.09096306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06773306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07581306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction float_add} {:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction float_swap} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_dup_times} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_tan} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_swap} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_pop integer_min float_add integer_sub tagged_947 float_dup float_tan tagged_947 float_dec float_sin integer_dup_items integer_flush tagged_675 float_sub float_max float_swap integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth float_add integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div float_dup_times print_integer float_inc in1 in2 integer_dup 31 float_div float_dup_items float_pop integer_yank integer_shove float_tan 18 integer_max 31 float_div integer_swap float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 9 85.2756 12 7.0557 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9103999999998
Mean: 23.638208
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10606.953046000004
Median total errors in population: 1277.6826999999998
Error averages by case: (419.1455563999986 8.954 432.18113919999854 10.612 443.78174649999755 11.956 430.71929290000196 11.259 448.37331540000315 11.655 262.0242498999988 10.348 328.420736000001 11.047 457.41759229999866 10.027 446.1601451000004 10.259 260.60084020000096 10.289 461.59321639999786 12.681 260.1929638000008 11.298 424.0269147999962 10.381 427.9268259000011 11.086 433.2976963999978 10.842 445.0393940000025 10.361 422.13171139999815 10.096 438.4842910999968 11.286 425.3902442000036 9.709 425.1072659000025 11.196 467.08945930000397 11.267 449.4298079999976 10.88 444.63626800000173 10.394 426.6741977999968 9.551 458.7171750999982 10.957)
Error minima by case: (0.3893 6 0.8243 7 3.8776 8 0.7392 8 10.5492 7 0.564 7 9.9799 8 0.2074 6 5.719 7 0.2947 5 1.7244 9 0.898 7 1.7132 6 0.0556 6 4.6773 8 1.6775 7 0.365 7 0.52 7 0.9034 6 0.3132 7 2.4982 7 6.1597 8 1.4092 7 0.3856 7 1.3374 7)
Average genome size in population (length): 142.808
Average program size in population (points): 143.808
Average percent parens in population: 0.007
Minimum age in population: 133.0407164019926
Maximum age in population: 137.372193401415
Average age in population: 135.533458758102
Median age in population: 135.5596623480693
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.519
Error (vector) diversity:			 0.603
Behavioral diversity:				 0.607
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 328099583
--- Timings ---
Current time: 1529615995629 milliseconds
Total Time:         524.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.9 seconds, 27.6%
Fitness Testing:    298.3 seconds, 56.8%
Report:              81.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 132259.42949999985
Test mean error for best: 66.12971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642306  
Correct output: 119.1092560212 | Program output: 29.09096306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06773306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07581306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_pop} {:instruction integer_min} {:instruction float_add} {:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction float_swap} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_dup_times} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction integer_dup} {:instruction 31} {:instruction float_div} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_tan} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_swap} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_pop integer_min float_add integer_sub tagged_947 float_dup float_tan tagged_947 float_dec float_sin integer_dup_items integer_flush tagged_675 float_sub float_max float_swap integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth float_add integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_pop float_add float_div float_dup_times print_integer float_inc in1 in2 integer_dup 31 float_div float_dup_items float_pop integer_yank integer_shove float_tan 18 integer_max 31 float_div integer_swap float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 9 85.2756 12 7.0557 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1181.9103999999998
Mean: 23.638208
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 9957.847610200002
Median total errors in population: 1246.5004
Error averages by case: (389.3236715999986 8.781 414.51481729999847 10.479 411.88862709999773 11.898 402.4162739000017 11.148 423.6069111000041 11.548 239.42185669999876 10.226 304.5393463000009 10.833 427.5776124999983 9.886 418.5023788000002 10.099 239.95928870000103 10.2 434.16612809999805 12.626 241.9195885000006 11.159 394.42834009999603 10.297 401.2589948000016 10.937 407.4138861999974 10.658 416.589234700002 10.158 393.517219299998 9.924 413.1507185999964 11.117 394.645213800004 9.603 395.8317947000032 11.124 441.48937620000476 11.115 432.158225399997 10.76 419.1610482000018 10.29 401.55020779999603 9.414 433.6338497999976 10.903)
Error minima by case: (0.4058 6 1.2001 7 10.8776 9 0.2593 7 18.5988 6 1.4271 7 9.9807 7 1.2168 7 13.7685 7 0.2927 6 0.7491 9 0.044 7 0.6588 8 0.985 7 3.2983 8 9.7271 7 0.415 7 0.5201 8 0.9098 6 0.3097 7 0.46 7 18.8282 7 5.419 7 0.5996 6 7.3621 7)
Average genome size in population (length): 141.695
Average program size in population (points): 142.695
Average percent parens in population: 0.007
Minimum age in population: 134.8088505534413
Maximum age in population: 139.0923572429894
Average age in population: 136.886574159462
Median age in population: 136.9354768153874
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.515
Error (vector) diversity:			 0.584
Behavioral diversity:				 0.591
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 331642283
--- Timings ---
Current time: 1529616001199 milliseconds
Total Time:         530.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.4 seconds, 27.6%
Fitness Testing:    301.5 seconds, 56.8%
Report:              82.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 137904.26299999998
Test mean error for best: 68.95213
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03543306  
Correct output: 119.1092560212 | Program output: 29.08997306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06674306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07482306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction tag_integer_496} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_dup} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction 31} {:instruction float_div} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_tan} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_swap} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_div} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 tag_integer_496 float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_dup in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_add float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_flush float_pop float_add float_div float_inc in1 in2 integer_inc 31 float_div float_dup_items float_pop integer_yank integer_shove float_tan 18 integer_max 31 float_div integer_swap float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove float_pop integer_div integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_swap print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 8 90.0193 10 72.2374 8 49.739 9 7.2997 8 85.2756 12 7.0547 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1180.9123999999997
Mean: 23.618248
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10731.546685100002
Median total errors in population: 1268.78235
Error averages by case: (423.41070039999835 8.859 443.9495895999983 10.542 445.5613289999974 11.962 437.9459254000021 11.217 457.2159990000043 11.557 252.55882199999826 10.354 326.76431630000127 10.931 461.7151395999981 10.019 451.5164056000003 10.11 259.825466400001 10.336 467.25947009999766 12.753 260.0585152000007 11.221 428.46954539999604 10.321 435.6857714000014 10.969 442.04683019999663 10.759 450.40059470000284 10.244 429.48258539999796 10.026 448.37438449999564 11.196 425.86953790000393 9.705 430.06798740000323 11.115 473.22456880000504 11.175 461.7211510999968 10.85 454.6916976000021 10.373 430.72629199999557 9.479 465.9840600999973 10.947)
Error minima by case: (0.4058 6 1.2001 7 9.8776 8 0.7392 8 18.5978 8 0.6166 6 22.0123 7 1.7871 7 13.7675 7 0.3091 6 4.7244 9 0.095 8 0.6588 8 0.975 7 4.6773 8 9.7261 8 0.3855 7 0.5211 9 0.0466 6 0.6468 8 3.4845 7 18.8271 8 4.419 8 0.4001 6 11.3374 8)
Average genome size in population (length): 140.983
Average program size in population (points): 141.983
Average percent parens in population: 0.007
Minimum age in population: 136.1254448170387
Maximum age in population: 140.3087760089786
Average age in population: 138.1340027876523
Median age in population: 138.1729034778924
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.501
Error (vector) diversity:			 0.584
Behavioral diversity:				 0.589
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 335167312
--- Timings ---
Current time: 1529616006997 milliseconds
Total Time:         536.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.9 seconds, 27.6%
Fitness Testing:    305.0 seconds, 56.9%
Report:              83.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 137904.26299999998
Test mean error for best: 68.95213
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03543306  
Correct output: 119.1092560212 | Program output: 29.08997306   
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.06674306   
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.07482306    
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction tag_integer_496} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_dup} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_div} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction 31} {:instruction float_div} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_tan} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_swap} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_div} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_flush} {:instruction integer_shove} {:instruction 18} {:instruction integer_dup} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 tag_integer_496 float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_dup in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_add float_div print_float print_integer in1 integer_div integer_pop integer_dup float_rot integer_pop integer_flush float_pop float_add float_div float_inc in1 in2 integer_inc 31 float_div float_dup_items float_pop integer_yank integer_shove float_tan 18 integer_max 31 float_div integer_swap float_pop float_add integer_dec print_float print_integer float_inc in2 integer_flush integer_shove float_pop integer_div integer_dec print_float print_integer float_inc in2 integer_flush integer_shove 18 integer_dup integer_max float_div integer_yank integer_shove 17 integer_mult float_swap print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 8 90.0193 10 72.2374 8 49.739 9 7.2997 8 85.2756 12 7.0547 10 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1180.9123999999997
Mean: 23.618248
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10355.229575899999
Median total errors in population: 1238.9243
Error averages by case: (410.55914099999796 8.7 423.953847299998 10.385 430.9626904999972 11.851 419.26804290000223 11.107 438.4626819000045 11.528 253.10718819999872 10.129 320.13222380000065 10.74 443.2564996999981 9.836 435.87024130000026 10.083 254.08505380000116 10.09 453.1725489999977 12.641 253.3991977000003 11.012 411.67533109999664 10.201 416.8878254000017 10.918 424.1709660999967 10.61 433.63862060000275 10.192 410.46760139999753 9.894 427.3497616999965 11.093 414.9117162000049 9.58 412.87080160000363 11.07 457.8272113000044 11.09 441.5116025999969 10.767 434.61771510000204 10.245 419.85549009999545 9.274 449.2725755999977 10.907)
Error minima by case: (0.3814 6 1.8299 7 9.8725 9 0.2593 8 22.5544 7 2.57 7 22.013 7 0.7874 7 9.7665 6 0.2927 6 21.7244 9 0.095 7 0.6717 7 1.0386 6 3.6717 8 5.7251 7 0.3706 8 3.4356 7 0.0466 6 0.338 7 4.5135 7 14.8262 8 4.4139 7 0.3756 6 21.3374 7)
Average genome size in population (length): 140.888
Average program size in population (points): 141.888
Average percent parens in population: 0.007
Minimum age in population: 137.1704309725097
Maximum age in population: 141.4500500773553
Average age in population: 139.5250624951597
Median age in population: 139.543255290553
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.506
Error (vector) diversity:			 0.592
Behavioral diversity:				 0.595
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 338690037
--- Timings ---
Current time: 1529616012642 milliseconds
Total Time:         541.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.3 seconds, 27.6%
Fitness Testing:    308.4 seconds, 56.9%
Report:              84.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 138001.30549999984
Test mean error for best: 69.00065
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542731  
Correct output: 119.1092560212 | Program output: 29.089961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.066731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.074811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_swap} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 print_float float_sin print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_swap float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 7 85.2756 12 7.0547 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9123999999997
Mean: 23.598248
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10883.283169800005
Median total errors in population: 1346.4357999999997
Error averages by case: (434.3276084999981 8.843 455.50736259999854 10.557 455.9214100999973 11.917 447.2345009000022 11.144 464.5172840000041 11.55 249.58893289999924 10.186 321.5149470000007 10.842 466.90076919999854 9.914 461.4898788000001 10.087 252.4103288000011 10.433 475.65564909999773 12.657 251.46311670000014 11.135 439.80642459999655 10.335 442.4015142000012 10.965 448.73886849999707 10.707 460.30829620000287 10.262 438.833124099998 10.018 452.2228688999965 11.221 435.5241546000043 9.684 440.5330233000029 11.103 483.4230361000044 11.156 473.54624129999735 10.854 457.9941311000022 10.325 434.6429193999959 9.483 472.4727788999979 10.926)
Error minima by case: (0.3944 3 0.7899 4 3.8776 8 0.1818 3 6.5948 4 0.5819 3 22.0161 3 1.2168 7 1.7645 3 1.2931 7 1.7244 8 1.092 3 0.6832 2 0.045 3 4.6773 8 2.2769 3 0.405 2 0.5212 3 0.9134 3 0.3032 3 8.5225 3 6.8241 4 5.4176 8 0.6129 3 1.3374 8)
Average genome size in population (length): 140.583
Average program size in population (points): 141.583
Average percent parens in population: 0.007
Minimum age in population: 138.6973955931283
Maximum age in population: 142.7584574737221
Average age in population: 140.9697650243465
Median age in population: 141.0022509518191
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.537
Error (vector) diversity:			 0.61
Behavioral diversity:				 0.616
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 342204987
--- Timings ---
Current time: 1529616018013 milliseconds
Total Time:         547.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.7 seconds, 27.5%
Fitness Testing:    311.6 seconds, 56.9%
Report:              84.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 138001.30549999984
Test mean error for best: 69.00065
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542731  
Correct output: 119.1092560212 | Program output: 29.089961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.066731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.074811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction float_cos} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_swap} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float float_cos tagged_947 print_float float_sin print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div -37 in2 integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_swap float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 7 85.2756 12 7.0547 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9123999999997
Mean: 23.598248
Genome size: 146
Size: 147
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10328.687775799997
Median total errors in population: 1240.4777999999997
Error averages by case: (408.002381999998 8.671 425.2487559999978 10.322 426.9406582999972 11.796 419.80422410000233 11.024 436.86998380000443 11.433 249.7508854999994 10.137 318.9209130000004 10.769 442.18588409999774 9.698 436.7397352000002 9.991 256.6113695000012 10.319 449.5988981999978 12.543 256.9602855999999 10.952 413.0377038999954 10.18 418.24868180000203 10.799 418.81776849999636 10.561 435.69749260000265 10.079 410.96199469999743 9.795 425.75327639999557 11.032 411.32190730000525 9.471 415.39956340000373 10.971 455.64391660000564 10.988 442.6909674999966 10.663 430.1242206000023 10.126 413.9314464999951 9.221 447.0958606999972 10.788)
Error minima by case: (0.3972 3 1.8299 3 4.8774 9 0.2593 4 4.5938 4 0.5818 3 22.013 3 2.8161 7 13.7675 3 0.2931 6 0.2796 9 0.095 3 1.7132 2 0.9305 3 4.6817 8 9.7261 3 0.405 4 0.5211 3 0.0866 3 0.3032 3 3.4845 2 6.1597 3 0.5817 7 1.4056 3 6.3341 7)
Average genome size in population (length): 140.903
Average program size in population (points): 141.903
Average percent parens in population: 0.007
Minimum age in population: 140.3485718393593
Maximum age in population: 144.3721898475771
Average age in population: 142.3278054928028
Median age in population: 142.3399038090991
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.511
Error (vector) diversity:			 0.597
Behavioral diversity:				 0.607
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 345727812
--- Timings ---
Current time: 1529616023618 milliseconds
Total Time:         552.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.1 seconds, 27.5%
Fitness Testing:    314.8 seconds, 57.0%
Report:              85.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 138001.30549999984
Test mean error for best: 69.00065
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542731  
Correct output: 119.1092560212 | Program output: 29.089961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.066731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.074811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_max} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_swap} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 print_float float_sin print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div float_frominteger float_max integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_swap float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 7 85.2756 12 7.0547 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9123999999997
Mean: 23.598248
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10341.354006299998
Median total errors in population: 1238.9593499999999
Error averages by case: (407.7145302999982 8.488 422.11765719999806 10.228 431.13010909999736 11.625 419.1359253000022 10.858 439.1917939000041 11.296 255.33676329999992 9.922 317.60709640000016 10.453 447.0633178999978 9.541 434.8677079000004 9.866 252.11297080000116 10.111 452.40017219999777 12.425 251.9405312999996 10.783 411.57507379999555 10.02 415.9566514000019 10.729 425.1050515999968 10.387 432.7036485000029 9.98 410.3262156999977 9.713 426.4950007999958 10.912 413.0438912000044 9.325 412.7348644000037 10.843 459.7412157000048 10.908 438.6821468999971 10.57 434.253879800002 10.026 422.84765839999545 9.143 448.4801324999976 10.638)
Error minima by case: (0.3763 6 1.8299 7 3.8776 9 0.2593 7 6.5948 8 1.4247 7 23.0123 6 0.2168 7 1.7645 7 0.2927 6 1.7244 9 1.0783 8 2.3467 7 0.075 7 5.6719 8 2.2769 8 0.355 7 0.5211 8 0.0866 6 0.3032 8 2.46 8 6.8242 7 1.581 8 0.3756 6 1.3374 7)
Average genome size in population (length): 141.576
Average program size in population (points): 142.576
Average percent parens in population: 0.007
Minimum age in population: 141.5090418417079
Maximum age in population: 145.7904503828077
Average age in population: 143.5975260047217
Median age in population: 143.6043111537454
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.501
Error (vector) diversity:			 0.618
Behavioral diversity:				 0.625
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 349267337
--- Timings ---
Current time: 1529616029094 milliseconds
Total Time:         558.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.6 seconds, 27.5%
Fitness Testing:    318.0 seconds, 57.0%
Report:              86.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 138001.30549999984
Test mean error for best: 69.00065
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03542731  
Correct output: 119.1092560212 | Program output: 29.089961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.066731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.074811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_max} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_sin} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_swap} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 print_float float_sin print_float integer_dup_items integer_div integer_min float_max tagged_947 integer_min float_flush integer_mod integer_dup_items integer_div float_frominteger float_max integer_stackdepth in2 float_max float_sub integer_dup_items integer_min integer_yank integer_flush integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth integer_inc float_sin float_add in2 integer_stackdepth in1 integer_inc integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_swap float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.425 9 90.0193 10 72.2374 8 49.739 9 7.2997 7 85.2756 12 7.0547 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9123999999997
Mean: 23.598248
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10730.985914299998
Median total errors in population: 1279.3634500000003
Error averages by case: (426.07638239999847 8.739 440.4314978999982 10.397 447.25003889999766 11.715 432.939695200002 11.073 453.4233939000038 11.443 268.64156749999944 10.099 337.5329998000003 10.674 462.4892740999981 9.796 448.1686100000001 10.02 272.4016311000014 10.379 464.95257789999806 12.534 272.55796979999974 11.067 426.6455612999967 10.229 431.7931407000014 10.891 439.2764329999972 10.61 447.077324100002 10.156 424.6571163999981 9.934 442.86952539999675 11.075 432.300382600004 9.549 427.03001640000275 10.995 473.1013555000042 11.088 457.3197392999972 10.77 449.9556393000021 10.186 425.7046686999965 9.302 462.90137309999767 10.767)
Error minima by case: (0.3894 6 0.7986 7 3.8763 8 0.2593 7 10.5423 8 0.565 7 22.0856 7 0.7871 6 5.7655 7 0.2934 6 1.7231 9 0.096 7 1.2968 7 0.045 7 3.6717 8 1.7241 7 0.405 8 3.4638 8 0.9134 6 0.3019 8 9.46 8 10.8252 8 5.419 7 0.3491 6 1.3361 7)
Average genome size in population (length): 143.396
Average program size in population (points): 144.396
Average percent parens in population: 0.007
Minimum age in population: 142.6960949795766
Maximum age in population: 147.1237048600249
Average age in population: 144.9880635449086
Median age in population: 145.0229747827565
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.965
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.535
Error (vector) diversity:			 0.634
Behavioral diversity:				 0.646
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 352852412
--- Timings ---
Current time: 1529616034887 milliseconds
Total Time:         564.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.0 seconds, 27.5%
Fitness Testing:    321.5 seconds, 57.0%
Report:              87.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10546.072335100003
Median total errors in population: 1287.66105
Error averages by case: (417.0075124999985 8.795 427.1534951999983 10.45 433.04244609999773 11.877 422.6605412000017 11.081 440.46288800000383 11.46 290.3319533999991 10.069 349.45279099999954 10.585 448.3961662999986 9.914 439.31318420000014 10.114 287.1572681000006 10.322 455.35971849999817 12.633 286.15934189999984 11.062 415.03998109999674 10.247 419.8995815000015 10.879 425.5098613999972 10.696 436.27606630000264 10.171 414.0851800999977 9.932 429.48293499999676 11.091 414.4487015000043 9.561 417.07006590000304 11.019 460.8293780000039 11.069 444.5185689999972 10.752 436.66924240000196 10.283 419.70579329999595 9.35 451.68967319999797 10.938)
Error minima by case: (0.3814 6 0.7999 7 2.8776 8 0.7392 8 2.4308 8 0.424 7 22.0123 7 1.7871 7 7.261 7 0.2927 7 0.7244 9 0.095 8 1.6721 7 1.045 7 4.6773 8 8.6875 8 0.4063 7 1.5596 9 0.9121 6 0.3132 8 2.49 8 2.2014 7 2.4434 8 0.3756 6 0.3374 7)
Average genome size in population (length): 144.37
Average program size in population (points): 145.37
Average percent parens in population: 0.007
Minimum age in population: 144.3038855556673
Maximum age in population: 148.1463204316015
Average age in population: 146.2252590602996
Median age in population: 146.2286774488182
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.955
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.955
Total error diversity:				 0.524
Error (vector) diversity:			 0.655
Behavioral diversity:				 0.663
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 356461962
--- Timings ---
Current time: 1529616040535 milliseconds
Total Time:         569.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.5 seconds, 27.5%
Fitness Testing:    324.8 seconds, 57.0%
Report:              88.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10734.1535685
Median total errors in population: 1261.9828499999999
Error averages by case: (421.82077619999825 8.713 437.6566412999985 10.435 449.7928414999976 11.831 434.66886930000186 11.048 451.435581200004 11.502 273.1322970999991 10.048 338.91161660000074 10.731 459.9177991999985 9.853 448.14385010000046 10.093 275.7389419000009 10.105 464.80594159999794 12.595 276.12195339999994 10.999 427.43103849999676 10.25 430.74895000000134 10.932 437.68714079999705 10.642 447.85926750000283 10.184 426.2711450999975 9.89 444.690876299997 11.058 427.0123898000046 9.568 427.76298030000305 11.056 470.4791151000039 11.087 454.6631051999971 10.749 451.79415670000213 10.2 429.7300373999959 9.325 462.08525639999795 10.897)
Error minima by case: (0.4058 6 1.1757 7 5.1224 9 0.7707 8 6.5948 7 1.418 7 22.0123 7 0.2574 7 1.7645 8 0.2992 7 7.2756 9 0.095 7 1.3253 7 0.045 7 6.7017 8 2.2769 8 0.3706 8 0.5201 8 0.9134 6 0.2632 8 9.46 8 6.8241 8 8.399 7 0.3956 6 7.6626 7)
Average genome size in population (length): 145.244
Average program size in population (points): 146.244
Average percent parens in population: 0.007
Minimum age in population: 145.7315132359828
Maximum age in population: 149.5585434159832
Average age in population: 147.5029871292475
Median age in population: 147.5323636928009
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.95
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.95
Total error diversity:				 0.514
Error (vector) diversity:			 0.64
Behavioral diversity:				 0.653
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 360093362
--- Timings ---
Current time: 1529616046280 milliseconds
Total Time:         575.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.0 seconds, 27.5%
Fitness Testing:    328.2 seconds, 57.0%
Report:              89.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10541.284584199997
Median total errors in population: 1254.4842000000003
Error averages by case: (410.1831213999982 8.802 428.215767999999 10.411 436.4662722999977 11.867 422.3003885000017 11.147 442.1152156000039 11.541 283.65084429999814 10.063 345.543606000001 10.702 451.97286329999827 9.941 437.77227380000005 10.18 283.0033833 9.908 455.52895289999793 12.642 280.7942446999998 10.785 414.83846819999644 10.273 418.8251550000013 10.971 428.38637179999705 10.719 434.71766410000254 10.267 413.74205389999815 9.99 433.25481339999646 11.148 416.36126330000445 9.668 414.9368585000029 11.092 461.96900560000444 11.159 445.4244395999975 10.793 441.13519190000204 10.365 422.89584729999626 9.368 452.4495174999976 10.999)
Error minima by case: (0.3883 6 1.2001 7 10.902 8 0.2593 7 2.5948 7 0.5823 7 22.0123 7 0.2088 7 2.2355 8 0.2897 7 0.7544 9 1.091 7 0.3412 8 0.045 7 4.6718 8 6.2769 8 0.3856 7 0.52 8 0.9121 6 0.3132 8 3.56 8 2.8242 8 2.5524 8 0.3756 6 7.3674 7)
Average genome size in population (length): 144.356
Average program size in population (points): 145.356
Average percent parens in population: 0.007
Minimum age in population: 146.8215946838704
Maximum age in population: 150.7934582335049
Average age in population: 148.7809781569122
Median age in population: 148.825015145681
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.515
Error (vector) diversity:			 0.648
Behavioral diversity:				 0.654
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 363702737
--- Timings ---
Current time: 1529616051712 milliseconds
Total Time:         580.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.4 seconds, 27.4%
Fitness Testing:    331.4 seconds, 57.0%
Report:              90.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10456.462946900007
Median total errors in population: 1278.6649000000002
Error averages by case: (415.7771035999991 8.625 434.61685419999895 10.25 436.90159719999747 11.72 424.0323765000019 10.923 444.7805949000032 11.264 247.2425892999987 9.986 316.89620080000117 10.607 452.35876499999875 9.759 439.6532359000002 9.908 251.12448590000085 9.633 457.65679179999773 12.473 251.09580130000023 10.43 417.58912249999713 10.069 421.73291960000137 10.683 431.8370544999976 10.532 438.5121324000023 9.97 415.5678888999981 9.781 433.0254420999972 10.915 418.0722315000034 9.437 417.90701640000276 10.891 463.98550600000385 10.838 451.81353709999763 10.628 441.62382320000245 10.203 418.54739399999636 9.115 454.67848229999794 10.794)
Error minima by case: (0.3873 6 0.7933 7 6.0924 8 0.7392 7 2.5938 5 0.575 6 3.0 5 0.7626 6 2.2365 7 0.2929 6 8.2456 7 0.905 6 1.7132 7 0.035 6 4.6717 8 6.2779 6 0.395 6 1.5596 7 0.9134 6 0.3132 7 9.4845 6 2.8232 7 9.9302 8 0.3756 6 5.6626 7)
Average genome size in population (length): 143.128
Average program size in population (points): 144.128
Average percent parens in population: 0.007
Minimum age in population: 147.8805103961017
Maximum age in population: 152.1720430889189
Average age in population: 150.1471225991874
Median age in population: 150.1828780416366
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.947
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.947
Total error diversity:				 0.518
Error (vector) diversity:			 0.62
Behavioral diversity:				 0.623
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 367281362
--- Timings ---
Current time: 1529616057215 milliseconds
Total Time:         586.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.8 seconds, 27.4%
Fitness Testing:    334.7 seconds, 57.1%
Report:              90.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 9864.231385600002
Median total errors in population: 1232.4177999999997
Error averages by case: (384.6843304999984 8.693 408.4452026999985 10.323 410.80057859999727 11.803 399.3248258000024 10.983 418.15268010000403 11.43 238.35236019999815 10.257 300.3585582000023 10.826 426.6666029999982 9.778 415.60720460000044 9.949 234.38736550000132 9.433 433.8441808999975 12.582 232.06504210000054 10.402 392.48762999999593 10.116 396.81291540000154 10.788 403.255391699997 10.589 413.2819274000025 10.084 390.1512955999984 9.757 407.97688769999604 11.002 390.0415670000042 9.452 392.54992020000265 10.926 440.8468284000054 10.985 426.44844719999713 10.698 415.84677600000236 10.219 400.12022849999585 9.162 430.63663829999706 10.849)
Error minima by case: (0.4058 6 0.8035 7 1.8777 8 0.7392 8 10.5786 8 0.5719 7 22.0193 8 0.7626 6 15.7634 7 0.2927 6 0.2756 7 1.091 8 1.6588 8 0.045 7 5.7017 8 11.722 8 0.3963 7 1.4748 8 0.0867 6 0.2632 8 14.44 8 20.823 8 2.4375 7 0.4056 6 0.6626 8)
Average genome size in population (length): 142.166
Average program size in population (points): 143.166
Average percent parens in population: 0.007
Minimum age in population: 149.0738581504767
Maximum age in population: 153.6066278794033
Average age in population: 151.3942995910243
Median age in population: 151.4167429098193
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.468
Error (vector) diversity:			 0.568
Behavioral diversity:				 0.569
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 370835812
--- Timings ---
Current time: 1529616062649 milliseconds
Total Time:         591.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.2 seconds, 27.4%
Fitness Testing:    337.9 seconds, 57.1%
Report:              91.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_sub} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction integer_inc})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_max float_max tagged_947 integer_min -37 in2 integer_stackdepth in2 float_max float_sub integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer integer_inc)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10742.271975300002
Median total errors in population: 1245.2196
Error averages by case: (429.5453085999982 8.62 440.9004855999983 10.285 446.4191580999973 11.796 437.3749096000022 10.96 454.2534214000044 11.432 260.12334469999837 10.197 329.70700070000106 10.747 462.0403615999984 9.734 450.0014738000005 9.936 266.39199300000104 9.396 467.9328579999976 12.516 267.7489252000006 10.228 430.06244059999585 10.078 430.6608650000013 10.756 438.4885303999969 10.602 447.7708332000028 10.022 428.80207859999786 9.731 446.74727099999586 10.982 428.9026232000049 9.425 429.34716230000333 10.892 475.8464071000052 10.93 458.63125849999693 10.69 454.6504760000021 10.184 433.9436790999955 9.128 465.9631099999974 10.749)
Error minima by case: (0.3958 6 1.1825 7 6.098 8 0.2537 7 2.5392 7 0.564 7 22.0203 8 1.7626 7 5.7655 7 0.2991 6 2.7244 8 0.898 7 1.7132 7 0.045 6 4.6773 7 1.7241 6 0.365 7 6.4504 7 0.0866 6 0.3132 7 9.46 7 5.2314 7 5.419 8 0.3756 6 8.6382 7)
Average genome size in population (length): 142.476
Average program size in population (points): 143.476
Average percent parens in population: 0.007
Minimum age in population: 150.3042099981295
Maximum age in population: 154.822791388813
Average age in population: 152.671888405593
Median age in population: 152.6824037619228
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.962
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.962
Total error diversity:				 0.454
Error (vector) diversity:			 0.554
Behavioral diversity:				 0.556
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 374398137
--- Timings ---
Current time: 1529616068213 milliseconds
Total Time:         597.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.6 seconds, 27.4%
Fitness Testing:    341.1 seconds, 57.1%
Report:              92.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction in2} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_rot} {:instruction float_shove} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat in2 print_float float_sin integer_sub print_float integer_min float_rot float_shove integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min integer_inc integer_min float_inc float_cos float_add integer_min integer_min integer_rot integer_dup_items float_cos float_min float_sub float_cos integer_div integer_min float_dup_items -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add print_integer float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10332.079905300003
Median total errors in population: 1244.5988499999999
Error averages by case: (406.7446050999983 8.633 419.06171229999853 10.335 436.0060232999974 11.799 418.3861104000021 10.972 437.372871800004 11.465 257.42048259999825 10.197 323.55255000000096 10.725 445.13965249999814 9.736 433.28225340000034 9.961 256.91884100000175 9.42 451.4017554999978 12.546 256.08233880000046 10.204 410.7633808999961 10.132 416.0057752000014 10.825 424.18297079999707 10.574 432.21294910000233 10.065 409.67745509999804 9.763 425.41522969999625 11.003 412.1059479000046 9.436 412.0059266000033 10.928 457.65280770000516 10.958 436.65497119999736 10.676 434.272905000002 10.135 410.92236329999605 9.175 448.4100260999976 10.765)
Error minima by case: (0.3814 6 0.7999 7 5.1224 9 0.2537 8 10.5931 7 0.4181 7 22.0113 8 0.1974 7 5.7634 7 0.2991 6 7.2756 7 0.102 8 1.7132 7 1.0406 6 4.6717 8 1.7219 7 0.415 7 0.5211 7 0.9134 6 0.3132 7 9.46 7 6.1597 8 8.4435 7 1.4156 7 6.6226 7)
Average genome size in population (length): 141.886
Average program size in population (points): 142.886
Average percent parens in population: 0.007
Minimum age in population: 151.3042099981295
Maximum age in population: 155.9568455660088
Average age in population: 154.0032356047874
Median age in population: 154.0248012866637
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.46
Error (vector) diversity:			 0.549
Behavioral diversity:				 0.55
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 377945712
--- Timings ---
Current time: 1529616073786 milliseconds
Total Time:         603.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.2 seconds, 27.4%
Fitness Testing:    344.4 seconds, 57.1%
Report:              93.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction float_shove} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction integer_inc})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_max float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min float_shove integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer integer_inc)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 147
Size: 148
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10378.164895800002
Median total errors in population: 1237.67375
Error averages by case: (413.89672049999825 8.634 427.0988302999991 10.355 433.0736900999975 11.714 419.1772745000021 10.945 437.199899100004 11.463 246.42540319999904 10.401 324.4981677999998 10.753 447.1099621999985 9.627 435.7061277000002 9.967 255.82102800000155 9.674 454.2342235999977 12.463 257.31200389999947 10.383 410.66468199999616 10.134 416.1031667000011 10.772 423.9755170999974 10.534 432.58739780000275 9.995 410.5536559999986 9.785 430.31604709999635 10.977 416.17519010000416 9.448 412.99258560000317 10.942 461.51288630000454 10.927 444.4764041999974 10.705 438.7910972000021 10.14 418.3058087999959 9.209 449.51012599999797 10.7)
Error minima by case: (0.4058 6 0.7999 6 11.8776 8 0.2593 7 6.5948 8 0.565 7 23.0131 7 2.8061 6 1.7645 7 0.2927 6 3.7244 8 1.091 8 0.3243 7 1.0406 7 5.7017 8 1.6875 7 0.415 7 0.5211 7 0.0866 6 0.3119 7 12.46 7 6.8242 8 6.419 7 2.4 7 10.3374 7)
Average genome size in population (length): 142.599
Average program size in population (points): 143.599
Average percent parens in population: 0.007
Minimum age in population: 152.3042099981295
Maximum age in population: 157.4320641466707
Average age in population: 155.3988255819526
Median age in population: 155.4370066993412
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.469
Error (vector) diversity:			 0.565
Behavioral diversity:				 0.566
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 381511262
--- Timings ---
Current time: 1529616079429 milliseconds
Total Time:         608.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.5 seconds, 27.4%
Fitness Testing:    347.7 seconds, 57.1%
Report:              94.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_flush} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mod} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_yankdup} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min float_flush float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc integer_fromfloat float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 integer_mod float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_yankdup float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 143
Size: 144
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10275.423263000004
Median total errors in population: 1235.9184
Error averages by case: (403.9688166999985 8.493 425.7233307999982 10.221 427.97680489999726 11.561 418.9645406000021 10.811 437.25334630000424 11.341 243.26013499999937 10.293 311.2292171000001 10.422 440.18737489999825 9.504 434.83770810000016 9.822 243.23086580000228 9.523 449.7451563999978 12.317 245.40734719999912 10.182 411.11808979999563 9.948 415.1817354000016 10.602 420.6140558999968 10.365 431.61731140000256 9.816 408.5706092999978 9.605 429.1737576999956 10.844 413.4209928000048 9.289 412.02831490000335 10.768 456.50161930000564 10.718 443.29631949999674 10.55 435.61875920000193 10.003 414.97501759999574 9.013 445.00303639999714 10.508)
Error minima by case: (0.4058 6 1.2001 7 5.1224 8 0.7392 7 14.5968 8 3.434 7 10.0986 7 0.2374 7 9.7665 8 0.2891 6 2.7244 9 0.898 8 1.7132 7 0.045 7 4.6731 8 5.7251 7 0.375 8 3.4799 8 0.0471 6 0.3132 7 9.46 7 14.8262 8 1.4434 8 0.3756 6 7.6626 7)
Average genome size in population (length): 144.383
Average program size in population (points): 145.383
Average percent parens in population: 0.007
Minimum age in population: 154.4998312645084
Maximum age in population: 158.7619304714593
Average age in population: 156.8052776466077
Median age in population: 156.8236897035919
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.457
Error (vector) diversity:			 0.546
Behavioral diversity:				 0.548
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 385121312
--- Timings ---
Current time: 1529616084979 milliseconds
Total Time:         614.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       168.0 seconds, 27.3%
Fitness Testing:    351.0 seconds, 57.2%
Report:              95.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 132319.43089999986
Test mean error for best: 66.15972
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction float_yank} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_frominteger} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_dec} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_339} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_yank} {:instruction float_inc} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 print_float float_sin print_float integer_flush integer_div integer_min float_max tagged_947 integer_min float_flush float_yank integer_dup_items integer_div float_frominteger integer_dup_items float_frominteger integer_min float_dec float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub in2 integer_stackdepth in2 integer_stackdepth integer_inc float_yankdup float_add in2 integer_stackdepth in1 tagged_339 integer_sub integer_stackdepth float_add integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_inc integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_div integer_swap integer_dec float_pop float_add float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_flush float_pop float_add integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_dup_times integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_yank float_inc print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 9845.080878000002
Median total errors in population: 1234.8873499999997
Error averages by case: (390.50561419999815 8.474 403.6681881999984 10.194 414.1271732999974 11.54 402.4753899000022 10.818 421.8757622000046 11.342 226.11468919999933 10.278 296.5047483999992 10.405 426.45357279999814 9.433 418.82019770000045 9.804 225.14408860000222 9.626 435.9267701999976 12.33 226.16406209999855 10.273 394.39866759999524 10.003 399.7570160000015 10.597 406.8261961999965 10.307 415.9833119000025 9.853 393.7459471999975 9.62 403.5224547999958 10.842 391.45710950000466 9.287 395.69469310000335 10.749 440.9132872000055 10.78 421.7695627999966 10.529 411.91144850000194 9.932 392.91038919999534 8.986 431.90253719999737 10.506)
Error minima by case: (0.3903 5 0.7925 7 6.1224 8 0.2593 8 6.5948 8 3.448 8 9.9817 7 1.7871 7 1.7645 7 0.2791 7 3.7244 7 0.096 7 1.7032 7 0.045 7 4.7017 8 1.3025 8 0.415 7 4.48 8 0.9121 6 0.3132 8 12.46 7 6.8242 8 3.419 8 0.6244 7 5.3374 8)
Average genome size in population (length): 144.586
Average program size in population (points): 145.586
Average percent parens in population: 0.007
Minimum age in population: 155.4998312645084
Maximum age in population: 160.2123215947065
Average age in population: 158.2036576435504
Median age in population: 158.233443930416
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.436
Error (vector) diversity:			 0.53
Behavioral diversity:				 0.534
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 388736112
--- Timings ---
Current time: 1529616090534 milliseconds
Total Time:         619.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.4 seconds, 27.3%
Fitness Testing:    354.3 seconds, 57.2%
Report:              95.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction tagged_947} {:instruction integer_sub} {:instruction tagged_947} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction float_swap} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_dec} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_sin tagged_947 integer_sub tagged_947 float_sin integer_sub print_float float_swap float_max integer_fromfloat integer_min float_frominteger integer_min float_inc integer_fromfloat float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_max float_div integer_yank integer_shove 17 integer_mult float_dec print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 149
Size: 150
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 9686.911549000006
Median total errors in population: 1235.9184
Error averages by case: (380.8306155999982 8.494 410.45646299999896 10.243 403.0143679999972 11.489 392.32350330000213 10.79 414.13011070000323 11.354 216.46360879999983 10.111 294.3626087999992 10.205 417.99387069999887 9.384 408.9515799000004 9.826 225.3001961000024 9.498 425.72420989999773 12.259 225.2295958999987 10.118 384.11694649999674 9.997 390.1497957000007 10.629 399.1322459999977 10.322 407.8124010000027 9.877 383.0254108999987 9.605 402.50906309999675 10.823 383.31452520000346 9.296 386.3846451000025 10.817 432.94276300000433 10.782 428.41891859999737 10.556 409.4026782000022 9.91 385.64958439999685 9.015 423.3868405999981 10.485)
Error minima by case: (0.3893 6 0.8299 7 10.902 8 0.7407 8 2.4063 9 1.4461 8 23.0131 7 0.2074 6 7.2366 7 0.2927 6 2.7488 9 0.1013 8 1.2968 7 1.045 7 4.6633 8 8.6875 7 0.3855 8 1.5596 9 0.9134 6 0.3132 8 8.4736 8 2.177 8 2.551 8 0.3756 6 9.3618 7)
Average genome size in population (length): 144.673
Average program size in population (points): 145.673
Average percent parens in population: 0.007
Minimum age in population: 157.2099366799317
Maximum age in population: 161.7918187200891
Average age in population: 159.5957878921773
Median age in population: 159.6328267008917
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.967
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.449
Error (vector) diversity:			 0.541
Behavioral diversity:				 0.545
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 392353062
--- Timings ---
Current time: 1529616096198 milliseconds
Total Time:         625.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.8 seconds, 27.3%
Fitness Testing:    357.5 seconds, 57.2%
Report:              96.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_yank} {:instruction print_float} {:instruction integer_min} {:instruction float_rot} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_yank print_float integer_min float_rot integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min integer_inc integer_min float_inc float_cos float_add integer_stackdepth float_sub float_max integer_fromfloat integer_min integer_inc integer_min float_inc float_cos float_add integer_min integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add print_integer float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank integer_swap float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10557.01758990001
Median total errors in population: 1246.2660999999998
Error averages by case: (422.069873099998 8.647 437.5366563999981 10.377 444.68197759999737 11.692 434.2320051000023 10.904 450.7506710000042 11.437 233.7310127999998 10.462 304.2946895999989 10.482 456.5969635999983 9.707 449.7135245000004 9.981 236.80996030000253 9.829 466.6489233999977 12.504 237.2222127999983 10.374 426.51655599999543 10.134 429.9734456000012 10.779 435.98454119999684 10.564 446.56239380000295 10.028 425.4183184999977 9.828 437.9505044999959 10.977 424.9724795000047 9.419 427.99025040000294 10.919 471.83793030000544 10.974 454.6681241999971 10.676 444.8544059000021 10.116 433.2675856999955 9.268 461.98458409999716 10.67)
Error minima by case: (0.4058 6 0.1685 7 9.8761 9 0.2593 7 16.5592 8 0.6139 7 22.0131 8 0.7626 6 11.729 7 0.2891 7 3.7244 8 1.092 8 1.7132 7 0.045 7 4.7017 8 7.6875 8 0.405 8 0.5211 9 0.0866 6 0.3132 7 2.49 8 16.7886 8 1.4481 8 0.6132 7 5.6626 7)
Average genome size in population (length): 144.675
Average program size in population (points): 145.675
Average percent parens in population: 0.007
Minimum age in population: 158.2099366799317
Maximum age in population: 162.8607337308095
Average age in population: 160.9500548914305
Median age in population: 160.9875349341989
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.452
Error (vector) diversity:			 0.551
Behavioral diversity:				 0.552
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 395970012
--- Timings ---
Current time: 1529616101905 milliseconds
Total Time:         631.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.3 seconds, 27.3%
Fitness Testing:    360.8 seconds, 57.2%
Report:              97.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction tag_integer_931} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_max} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min integer_rot float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 tag_integer_931 float_sin integer_dup float_rot integer_pop integer_dec in1 integer_flush integer_pop integer_dup float_rot integer_max integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank float_pop 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 156
Size: 157
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 9807.907763900002
Median total errors in population: 1238.9831999999997
Error averages by case: (390.7801970999984 8.517 407.909399999999 10.205 408.6252892999972 11.572 395.2685545000024 10.737 416.6905117000031 11.252 223.2327557999997 10.234 298.17430389999925 10.339 423.10118739999876 9.504 411.4102313000006 9.822 234.0600388000022 9.724 430.7326312999975 12.324 232.56682589999863 10.214 388.6677042999969 10.013 394.1993035000008 10.627 401.856973899998 10.398 408.2387433000027 9.897 386.59504139999876 9.616 408.32418379999655 10.817 391.1986759000032 9.278 390.27307660000236 10.782 438.1090131000046 10.774 425.67341919999757 10.503 417.06659780000206 9.975 400.92542779999627 9.1 427.43967629999787 10.564)
Error minima by case: (0.3814 5 1.8243 6 4.8776 8 0.2537 7 6.5947 6 0.5653 6 22.0123 6 2.8161 7 1.7644 7 0.2891 7 2.7244 7 0.1013 6 1.7132 6 0.0698 5 4.6708 8 1.724 6 0.365 6 1.4921 6 0.9034 6 0.3377 6 6.52 6 6.824 7 2.419 8 0.5996 6 2.3374 8)
Average genome size in population (length): 145.049
Average program size in population (points): 146.049
Average percent parens in population: 0.007
Minimum age in population: 159.8362563344559
Maximum age in population: 164.4462518384081
Average age in population: 162.2851388666803
Median age in population: 162.3299031003377
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.465
Error (vector) diversity:			 0.54
Behavioral diversity:				 0.54
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 399596312
--- Timings ---
Current time: 1529616107535 milliseconds
Total Time:         636.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.8 seconds, 27.3%
Fitness Testing:    364.1 seconds, 57.2%
Report:              98.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction float_max} {:instruction tagged_947} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction -36.31734967061793} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_flush} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -88.23912295571688})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min in2 integer_rot integer_sub print_float integer_dup_items integer_div integer_max float_max tagged_947 float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos -36.31734967061793 integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_mult integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_flush print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_yankdup integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -88.23912295571688)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 146
Size: 147
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 9971.115531700007
Median total errors in population: 1238.978
Error averages by case: (397.0271101999981 8.436 411.24148489999936 10.143 420.39133229999726 11.434 406.44824620000213 10.714 426.00969340000415 11.277 229.56347929999993 10.179 296.66499809999914 10.2 433.60179849999844 9.35 422.61786630000023 9.752 229.06532270000264 9.563 439.47122509999775 12.196 228.07015469999848 10.153 399.5942589999957 9.906 401.2941342000007 10.584 411.0441919999974 10.24 419.4334710000029 9.779 397.36010569999877 9.555 413.8769161999959 10.747 400.90765020000424 9.207 399.22832610000296 10.753 446.8272165000056 10.717 429.19537389999726 10.459 420.80892660000205 9.872 402.0309456999958 8.97 434.67430289999766 10.481)
Error minima by case: (0.4058 6 0.8299 7 17.0924 7 0.7407 8 2.4308 8 0.5539 8 22.0496 7 2.2074 6 1.7645 8 0.2891 7 26.7544 8 0.096 8 1.7132 8 0.045 6 4.6717 8 1.7241 7 0.3706 7 0.5211 8 0.9134 6 0.3119 8 6.4845 8 2.2014 7 3.449 7 0.3756 6 19.3674 7)
Average genome size in population (length): 145.488
Average program size in population (points): 146.488
Average percent parens in population: 0.007
Minimum age in population: 160.8362563344559
Maximum age in population: 165.9733107519497
Average age in population: 163.6004831018516
Median age in population: 163.6332836880722
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.967
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.45
Error (vector) diversity:			 0.541
Behavioral diversity:				 0.542
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 403233587
--- Timings ---
Current time: 1529616113150 milliseconds
Total Time:         642.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.3 seconds, 27.3%
Fitness Testing:    367.4 seconds, 57.2%
Report:              99.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_pop} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction tagged_947} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_max} {:instruction tagged_926} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_pop print_float float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos tagged_947 integer_min float_flush integer_mod integer_dup_items integer_rot float_max tagged_926 integer_min float_flush integer_mod integer_dup_items integer_div integer_add float_yankdup float_yank integer_div integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10285.529593900008
Median total errors in population: 1242.4981999999998
Error averages by case: (406.36799679999785 8.596 425.5525787999985 10.321 427.7762127999976 11.589 418.533373300002 10.836 437.68460640000404 11.379 246.0536628999996 10.398 314.868201999999 10.382 442.16928909999825 9.564 434.5977220000002 9.942 247.97774640000262 9.742 449.84446119999774 12.368 247.28069339999846 10.276 410.63631729999577 10.096 414.33662560000124 10.722 422.020309399997 10.415 432.4619122000028 9.969 409.2699071999981 9.692 427.25163619999597 10.94 408.5320704000042 9.39 411.465596200003 10.852 456.23665130000495 10.895 443.1701720999971 10.592 433.4378648000022 10.068 412.3424176999958 9.159 446.7885683999976 10.69)
Error minima by case: (0.4058 6 1.8299 7 2.8776 8 0.2593 7 25.5692 8 0.424 6 23.1093 7 2.2074 6 20.739 8 0.3091 7 0.7244 7 0.1083 8 1.7132 8 0.0437 7 4.6717 8 16.6975 8 0.4148 8 6.4504 8 0.9134 6 0.3132 8 8.4845 8 25.7986 8 2.601 7 0.6257 7 0.3374 7)
Average genome size in population (length): 145.872
Average program size in population (points): 146.872
Average percent parens in population: 0.007
Minimum age in population: 161.8362563344559
Maximum age in population: 166.9001364003001
Average age in population: 164.8717082810348
Median age in population: 164.9203760024285
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.962
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.962
Total error diversity:				 0.429
Error (vector) diversity:			 0.529
Behavioral diversity:				 0.533
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 406880462
--- Timings ---
Current time: 1529616118705 milliseconds
Total Time:         647.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.7 seconds, 27.3%
Fitness Testing:    370.7 seconds, 57.2%
Report:             100.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_rot} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction tagged_675} {:instruction tagged_947} {:instruction integer_max} {:instruction float_sin} {:instruction float_sub} {:instruction float_max} {:instruction float_div} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_sin} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_294} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_dup_times} {:instruction print_integer} {:instruction in1} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_sub tagged_947 float_dup float_rot tagged_947 float_dec float_sin integer_dup_items integer_min tagged_675 tagged_947 integer_max float_sin float_sub float_max float_div integer_min float_frominteger integer_min float_sin float_sin float_stackdepth integer_sub integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_294 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_dup_times print_integer in1 float_rot integer_pop integer_dec float_pop in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add print_integer float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank integer_swap float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 149
Size: 150
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10160.949328900004
Median total errors in population: 1254.31545
Error averages by case: (403.7621593999984 8.658 424.53625489999826 10.307 426.2353774999976 11.615 412.0642546000019 10.893 434.18040540000425 11.391 235.54515940000002 10.331 309.6949668999992 10.377 437.59788539999823 9.589 428.0137413000002 9.961 240.3731128000025 9.781 443.69938669999783 12.321 239.47634559999827 10.315 404.5216537999961 10.091 408.0182780000013 10.747 418.7546176999971 10.439 424.17503410000245 9.97 401.55277429999825 9.706 422.03505099999643 10.897 408.8213935000041 9.387 405.0478322000031 10.9 451.2513498000047 10.831 441.8497929999969 10.598 430.1516860000019 10.051 411.62242339999585 9.176 438.9593921999977 10.677)
Error minima by case: (0.3883 6 1.2085 7 4.1724 9 0.7392 8 9.5492 8 0.445 8 22.0123 8 1.7871 7 4.719 7 0.2891 7 6.3256 7 0.0955 8 1.6778 7 0.045 7 2.3283 7 0.6775 7 0.3856 8 0.521 8 0.9134 6 0.3132 8 2.4982 8 6.1597 8 3.449 7 0.3931 7 6.7126 7)
Average genome size in population (length): 147.423
Average program size in population (points): 148.423
Average percent parens in population: 0.007
Minimum age in population: 163.3527049600107
Maximum age in population: 168.5115807867703
Average age in population: 166.1502256393373
Median age in population: 166.156146196607
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.459
Error (vector) diversity:			 0.546
Behavioral diversity:				 0.547
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 410566087
--- Timings ---
Current time: 1529616124306 milliseconds
Total Time:         653.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.2 seconds, 27.3%
Fitness Testing:    374.1 seconds, 57.2%
Report:             101.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_rot} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_mult} {:instruction integer_min} {:instruction integer_min} {:instruction float_max} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_cos} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dup_times} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_cos} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction float_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_rot integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min integer_inc integer_min float_inc float_cos float_mult integer_min integer_min float_max integer_stackdepth float_add integer_min integer_min integer_rot integer_dup_items float_cos float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth float_dup_times float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_cos float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop float_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10326.463328900003
Median total errors in population: 1257.59715
Error averages by case: (407.0579020999984 8.78 429.18646039999845 10.492 430.11621649999734 11.724 419.9484019000022 11.033 439.0464566000036 11.532 248.22972600000014 10.474 316.1683289999992 10.526 442.86729449999854 9.711 436.66993610000054 10.093 248.87913360000258 9.901 451.3190750999977 12.456 249.27930139999845 10.501 412.77458639999634 10.226 416.6459498000013 10.879 424.0916772999971 10.577 433.57472290000237 10.138 409.8359884999978 9.902 427.05483829999656 11.065 409.1502021000041 9.515 413.81060620000267 11.04 457.75887460000433 11.019 445.7542757999973 10.781 434.5682910000022 10.189 412.5804705999963 9.354 447.38661219999796 10.8)
Error minima by case: (0.3814 5 0.8243 7 10.8776 9 0.7392 8 6.5948 8 0.582 7 22.0123 7 0.2129 6 1.7645 8 0.2891 7 2.7244 8 0.0383 8 1.7132 7 0.045 7 4.6717 8 2.2769 7 0.415 7 3.4639 8 0.0866 6 0.655 8 2.4982 8 6.8242 8 1.581 8 0.4056 7 9.3374 8)
Average genome size in population (length): 147.305
Average program size in population (points): 148.305
Average percent parens in population: 0.007
Minimum age in population: 164.9675006176163
Maximum age in population: 170.0007373985268
Average age in population: 167.5144715528866
Median age in population: 167.5939408119126
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.452
Error (vector) diversity:			 0.557
Behavioral diversity:				 0.558
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 414248812
--- Timings ---
Current time: 1529616129757 milliseconds
Total Time:         659.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.6 seconds, 27.2%
Fitness Testing:    377.3 seconds, 57.3%
Report:             102.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 131327.1125
Test mean error for best: 65.66356
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03742731  
Correct output: 119.1092560212 | Program output: 29.091961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.068731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.076811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction -88.33090617234159} {:instruction integer_min} {:instruction integer_min} {:instruction float_shove} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction float_dec} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction integer_swap} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_pop} {:instruction float_tan} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction tagged_302} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction float_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_mod} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction integer_inc})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub integer_dup_times integer_min in2 float_sin integer_sub float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth -88.33090617234159 integer_min integer_min float_shove integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min float_dec in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div integer_swap print_integer in1 integer_flush float_sin integer_dup integer_pop integer_pop float_tan float_pop float_add float_div tagged_302 integer_div in2 -36 float_pop integer_yank integer_shove integer_shove float_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_mod 17 integer_mult float_div print_float print_integer integer_inc)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.423 9 90.0173 9 72.2374 8 49.739 9 7.2977 8 85.2756 12 7.0567 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9083999999998
Mean: 23.598167
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10145.966056600002
Median total errors in population: 1255.4896
Error averages by case: (399.8335036999981 8.719 420.7619171999995 10.348 421.67805789999716 11.622 411.57197350000234 10.975 432.5786437000033 11.435 244.9792764000001 10.421 316.22278899999907 10.395 436.14244359999924 9.623 427.4887323000005 9.99 249.53579450000245 9.802 441.82318059999756 12.392 247.4562249999985 10.331 403.801649699997 10.184 409.2428701000002 10.748 416.06375939999816 10.488 425.9298960000028 9.992 402.19458569999875 9.784 417.41095189999703 10.96 401.05477030000344 9.444 405.63031760000223 10.901 449.62893700000456 10.91 438.4455038999978 10.663 423.13632360000213 10.14 402.6820783999968 9.231 440.46887559999846 10.705)
Error minima by case: (0.3814 5 0.8199 7 3.8776 8 0.2593 8 5.4008 8 0.565 7 6.9404 8 1.7626 7 1.7645 7 0.2891 7 1.7244 8 0.897 7 1.2968 8 0.045 7 4.7017 8 1.7241 7 0.415 7 0.5196 8 0.0666 6 0.3132 8 3.53 8 6.8242 8 3.439 8 0.6244 7 1.3374 7)
Average genome size in population (length): 146.795
Average program size in population (points): 147.795
Average percent parens in population: 0.007
Minimum age in population: 165.9675006176163
Maximum age in population: 171.0220916038039
Average age in population: 168.789957461656
Median age in population: 168.820674418445
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.457
Error (vector) diversity:			 0.547
Behavioral diversity:				 0.552
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 417918887
--- Timings ---
Current time: 1529616135369 milliseconds
Total Time:         664.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.0 seconds, 27.2%
Fitness Testing:    380.7 seconds, 57.3%
Report:             102.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 131327.1125
Test mean error for best: 65.66356
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03742731  
Correct output: 119.1092560212 | Program output: 29.091961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.068731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.076811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_shove} {:instruction print_float} {:instruction integer_dup} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction -88.33090617234159} {:instruction integer_min} {:instruction integer_min} {:instruction float_shove} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction float_dec} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction integer_swap} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_pop} {:instruction float_tan} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction tagged_302} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction float_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_mod} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction integer_inc})
Best program: (integer_fromfloat float_shove print_float integer_dup integer_sub print_float integer_min float_sin integer_fromfloat integer_min integer_dup float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush in2 integer_stackdepth in2 integer_stackdepth -88.33090617234159 integer_min integer_min float_shove integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min float_dec in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div integer_swap print_integer in1 integer_flush float_sin integer_dup integer_pop integer_pop float_tan float_pop float_add float_div tagged_302 integer_div in2 -36 float_pop integer_yank integer_shove integer_shove float_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_mod 17 integer_mult float_div print_float print_integer integer_inc)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.423 9 90.0173 9 72.2374 8 49.739 9 7.2977 8 85.2756 12 7.0567 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9083999999998
Mean: 23.598167
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10646.860073800006
Median total errors in population: 1276.6257999999998
Error averages by case: (424.73095649999857 8.711 438.3971360999987 10.427 442.27127849999755 11.656 435.9004170000017 10.959 450.57839570000357 11.482 260.7232798999998 10.412 324.9913856999991 10.443 455.56391829999825 9.641 450.47714070000006 10.05 260.6991420000024 9.843 463.37892829999777 12.401 262.03383789999856 10.359 428.1334468999962 10.159 430.70653520000127 10.826 434.2238372999973 10.543 449.03741240000244 10.059 427.7609782999978 9.891 438.8855010999967 11.003 423.54741680000404 9.465 428.0462914000029 10.998 468.5433687000043 10.918 455.4797949999975 10.698 444.692789600002 10.113 428.19020679999664 9.311 458.8046776999975 10.694)
Error minima by case: (0.4058 6 1.2001 7 3.8776 7 0.7707 8 2.5392 9 1.424 8 71.0123 7 2.2866 6 1.7645 8 0.2987 7 1.7244 8 0.898 8 1.7132 7 0.0695 7 4.67 8 2.2769 7 0.415 8 0.521 8 0.0522 6 0.2732 8 6.46 8 6.8242 7 4.419 7 0.3956 7 1.3374 7)
Average genome size in population (length): 146.965
Average program size in population (points): 147.965
Average percent parens in population: 0.007
Minimum age in population: 166.9675006176163
Maximum age in population: 172.1842721212664
Average age in population: 170.0851139808766
Median age in population: 170.1132402737489
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.464
Error (vector) diversity:			 0.559
Behavioral diversity:				 0.565
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 421593137
--- Timings ---
Current time: 1529616140976 milliseconds
Total Time:         670.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.5 seconds, 27.2%
Fitness Testing:    384.0 seconds, 57.3%
Report:             103.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 131327.1125
Test mean error for best: 65.66356
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03742731  
Correct output: 119.1092560212 | Program output: 29.091961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.068731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.076811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_shove} {:instruction print_float} {:instruction integer_dup} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction -88.33090617234159} {:instruction integer_min} {:instruction integer_min} {:instruction float_shove} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction float_dec} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction integer_swap} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_pop} {:instruction float_tan} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction tagged_302} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction float_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_mod} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction integer_inc})
Best program: (integer_fromfloat float_shove print_float integer_dup integer_sub print_float integer_min float_sin integer_fromfloat integer_min integer_dup float_sin integer_sub print_float integer_min float_sin integer_dup_items integer_flush in2 integer_stackdepth in2 integer_stackdepth -88.33090617234159 integer_min integer_min float_shove integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min float_dec in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div integer_swap print_integer in1 integer_flush float_sin integer_dup integer_pop integer_pop float_tan float_pop float_add float_div tagged_302 integer_div in2 -36 float_pop integer_yank integer_shove integer_shove float_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_mod 17 integer_mult float_div print_float print_integer integer_inc)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.423 9 90.0173 9 72.2374 8 49.739 9 7.2977 8 85.2756 12 7.0567 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9083999999998
Mean: 23.598167
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10591.362586800005
Median total errors in population: 1282.2512
Error averages by case: (422.65409249999766 8.846 446.2705595999976 10.491 443.65376699999746 11.76 433.1416902000021 11.055 451.7139726000044 11.516 243.77365309999993 10.574 306.19649449999923 10.58 458.0702504999978 9.791 447.2212914000002 10.096 240.15689360000263 9.996 464.1914302999978 12.502 239.39340099999865 10.512 425.69386339999494 10.241 430.45966440000194 10.906 438.0808127999965 10.68 445.1457378000028 10.157 424.6881983999973 9.932 439.4905893999952 11.059 426.8454437000051 9.591 426.14722330000365 11.027 471.10556300000576 11.037 463.10287299999646 10.796 447.2941786000019 10.254 431.6486006999955 9.389 461.631341999997 10.803)
Error minima by case: (0.3958 6 1.8299 7 2.9076 9 0.2593 8 17.5592 8 2.4177 8 22.0123 7 1.7738 7 9.7664 8 0.2891 7 8.2456 7 0.102 8 1.7132 7 0.065 7 4.6617 8 5.725 7 0.415 8 1.5596 8 0.9134 6 0.3132 8 2.4982 8 14.826 8 1.449 7 0.3956 7 0.3674 6)
Average genome size in population (length): 147.381
Average program size in population (points): 148.381
Average percent parens in population: 0.007
Minimum age in population: 169.0692290137681
Maximum age in population: 173.4413679556645
Average age in population: 171.4413198277956
Median age in population: 171.463892344131
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.476
Error (vector) diversity:			 0.574
Behavioral diversity:				 0.576
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 425277812
--- Timings ---
Current time: 1529616146706 milliseconds
Total Time:         675.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.9 seconds, 27.2%
Fitness Testing:    387.4 seconds, 57.3%
Report:             104.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_swap} {:instruction tagged_947} {:instruction integer_min} {:instruction integer_flush} {:instruction tagged_675} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_inc} {:instruction tagged_667} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_cos} {:instruction -59} {:instruction in2} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction 4.741052553819401} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_dup_items} {:instruction float_dup_items} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_dup_times} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction print_integer} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction float_dec} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_add} {:instruction float_dec} {:instruction print_integer} {:instruction integer_inc})
Best program: (integer_fromfloat integer_dup_items print_float float_sin integer_sub print_float integer_swap tagged_947 integer_min integer_flush tagged_675 tagged_675 float_sub float_max integer_fromfloat integer_min integer_inc tagged_667 float_inc float_dup_items float_add integer_min integer_min integer_rot integer_dup_items float_cos -59 in2 float_cos integer_div integer_dup_items float_cos float_min float_sub float_cos integer_div integer_min 4.741052553819401 integer_add float_yankdup float_yank float_dec float_frominteger integer_dup_items float_dup_items -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sub integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup integer_dec float_div float_dup_times print_integer in1 integer_flush float_sin integer_dup print_integer integer_pop integer_dec float_pop float_mult float_div print_float float_dec in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_max float_div integer_yank integer_shove 17 integer_mult float_add float_dec print_integer integer_inc)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 151
Size: 152
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10474.527019200004
Median total errors in population: 1311.6230000000003
Error averages by case: (425.362306699998 8.761 437.841854499999 10.426 440.8351056999972 11.636 428.84895880000226 10.999 446.2208639000037 11.52 234.7906024999999 10.616 310.5513330999992 10.641 452.147138499999 9.66 442.47355270000025 10.046 239.46753590000236 10.04 457.93686889999765 12.425 240.03109209999826 10.513 419.8910104999962 10.16 424.0797644000006 10.851 431.91530749999754 10.538 441.5587423000029 10.086 420.2890507999982 9.854 435.00397229999675 11.016 422.84745510000386 9.54 421.469762000003 11.042 463.7890648000043 10.946 454.9316620999975 10.728 441.681066400002 10.136 423.3652917999964 9.278 455.03565589999823 10.704)
Error minima by case: (0.3893 6 2.2001 7 3.8776 9 0.7392 8 2.4308 8 1.3648 8 2.1093 7 1.7871 7 7.261 7 0.2791 7 1.7244 7 0.0953 8 1.7132 7 0.935 7 2.6717 7 5.7251 8 0.405 7 0.5252 8 0.9134 6 0.3132 8 1.46 7 2.2014 8 5.4175 8 0.4001 6 1.3374 7)
Average genome size in population (length): 147.083
Average program size in population (points): 148.083
Average percent parens in population: 0.007
Minimum age in population: 170.185970040265
Maximum age in population: 174.824269221691
Average age in population: 172.7978588281494
Median age in population: 172.8498544588508
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.471
Error (vector) diversity:			 0.567
Behavioral diversity:				 0.568
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 428955087
--- Timings ---
Current time: 1529616152394 milliseconds
Total Time:         681.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.3 seconds, 27.2%
Fitness Testing:    390.7 seconds, 57.3%
Report:             105.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction 86.50372365157088} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_swap} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_min} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (print_integer tagged_947 print_float float_sin print_float integer_dup_items integer_div integer_div integer_min float_dup_items integer_add float_yankdup float_max integer_fromfloat integer_mult float_frominteger integer_min float_frominteger float_cos float_add integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items integer_yank float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin float_sin integer_stackdepth float_pop 86.50372365157088 integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth print_float integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_min float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot float_div integer_shove integer_pop integer_swap float_div integer_swap integer_dec float_pop float_mult float_div print_float print_integer in1 integer_flush integer_pop integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max float_pop float_add integer_dec float_min print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10780.542522000003
Median total errors in population: 1357.0828000000001
Error averages by case: (432.51586239999824 8.626 451.7308357999986 10.361 451.1231972999975 11.523 437.745827100002 10.86 458.55348320000394 11.36 251.80050099999974 10.292 323.41126439999886 10.372 465.9888163999983 9.545 452.7039703000002 9.922 254.49079020000218 9.755 469.8854636999976 12.229 256.2162175999985 10.344 432.3364986999958 10.077 439.34039330000144 10.704 445.689844599997 10.408 453.7645140000026 9.957 429.57316289999824 9.743 444.1018397999963 10.905 434.6530994000041 9.4 432.9904706000034 10.853 477.3373387000048 10.877 468.13547079999756 10.562 451.67496520000225 10.032 436.7652244999959 9.219 469.4944700999977 10.593)
Error minima by case: (0.3943 5 0.8285 7 3.8776 9 0.7392 7 1.4074 7 0.61 8 20.0596 8 1.8044 7 2.2365 7 0.2927 7 1.7244 7 0.0953 8 1.6777 7 0.0451 6 5.6717 7 6.2779 7 0.405 7 0.5211 7 0.9133 6 0.6468 7 0.49 7 1.178 7 3.5395 8 0.6243 7 1.3374 7)
Average genome size in population (length): 146.815
Average program size in population (points): 147.815
Average percent parens in population: 0.007
Minimum age in population: 171.8872581828177
Maximum age in population: 176.1813562648138
Average age in population: 174.0942493765579
Median age in population: 174.1232849268191
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.46
Error (vector) diversity:			 0.577
Behavioral diversity:				 0.577
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 432625587
--- Timings ---
Current time: 1529616158181 milliseconds
Total Time:         687.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.8 seconds, 27.2%
Fitness Testing:    394.0 seconds, 57.3%
Report:             106.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_rot} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_max} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_div} {:instruction integer_min} {:instruction float_max} {:instruction tagged_947} {:instruction float_dup_items} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction tag_integer_665} {:instruction float_dup} {:instruction float_pop} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_min} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_swap} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_rot} {:instruction float_max} {:instruction integer_dec} {:instruction float_pop} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 31} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min float_rot float_sin integer_sub print_float integer_max in2 float_sin integer_sub float_flush integer_dup integer_div integer_min float_max tagged_947 float_dup_items float_flush integer_mod integer_dup_items -37 in2 integer_stackdepth in2 tag_integer_665 float_dup float_pop integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div integer_min integer_dup_items integer_min integer_rot integer_min float_dup float_frominteger integer_div float_yankdup float_yank float_dec integer_mult integer_dup_items integer_swap -37 in2 integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_swap float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush print_integer in1 integer_flush integer_pop integer_dup float_rot float_max integer_dec float_pop integer_yankdup float_div float_inc integer_div in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 31 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 167
Size: 168
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10648.503843999999
Median total errors in population: 1305.2552500000002
Error averages by case: (426.07908229999816 8.615 440.8677410999985 10.354 444.2188652999972 11.633 435.55849750000226 10.867 456.6744538000037 11.353 245.49147509999986 10.3 313.8585367999988 10.343 461.27055509999803 9.607 450.9291392000004 9.961 250.8484695000028 9.762 466.4876409999976 12.314 250.00501389999835 10.271 428.8516656999956 10.03 434.4562179000015 10.701 442.6198618999971 10.461 448.8893113000027 9.968 426.98486219999796 9.747 441.24067049999593 10.903 427.4508339000043 9.395 429.03732820000334 10.862 474.20289300000496 10.859 457.7128670999972 10.619 447.8131744000019 10.083 424.4664051999964 9.206 463.6752820999976 10.599)
Error minima by case: (0.3958 6 0.8299 7 4.8776 9 0.2238 6 18.5828 7 0.5573 6 3.0 6 2.2074 7 5.7645 7 0.2891 7 2.7244 8 0.897 7 0.3412 8 1.045 7 4.7017 7 1.7231 8 0.3706 8 0.5201 8 0.9121 6 0.3132 8 3.44 7 7.1597 8 1.551 7 0.3756 6 2.3374 7)
Average genome size in population (length): 147.404
Average program size in population (points): 148.404
Average percent parens in population: 0.007
Minimum age in population: 172.9520483875699
Maximum age in population: 177.3715824836527
Average age in population: 175.4556423982033
Median age in population: 175.4935466963676
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.467
Error (vector) diversity:			 0.563
Behavioral diversity:				 0.565
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 436310912
--- Timings ---
Current time: 1529616164028 milliseconds
Total Time:         693.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.4 seconds, 27.2%
Fitness Testing:    397.4 seconds, 57.3%
Report:             107.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup} {:instruction tagged_675} {:instruction tagged_947} {:instruction integer_max} {:instruction float_sin} {:instruction float_sub} {:instruction float_max} {:instruction float_div} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_sin} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_dec} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_294} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_dup_times} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_mult} {:instruction float_div} {:instruction print_float} {:instruction integer_max} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_max} {:instruction in2} {:instruction -36} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_dup tagged_675 tagged_947 integer_max float_sin float_sub float_max float_div integer_min float_frominteger integer_min float_sin float_sin float_stackdepth integer_sub integer_min integer_min integer_rot integer_dup_items float_stackdepth float_min float_dec float_cos integer_div integer_min float_dup_items integer_add float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_294 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_dup_times print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_mult float_div print_float integer_max in2 -36 integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_max in2 -36 integer_shove 18 float_dup_items float_dec integer_yank integer_shove integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10661.684330200007
Median total errors in population: 1303.642
Error averages by case: (425.76452599999857 8.673 442.2593858999985 10.419 451.43184789999736 11.65 435.3465455000021 10.917 452.884510700004 11.417 249.71589959999991 10.462 319.9069327999989 10.49 460.4880976999983 9.658 450.49345880000027 9.966 248.13687500000228 9.924 468.2498910999977 12.393 248.97798339999866 10.399 427.2092700999955 10.133 430.6524032000015 10.789 440.448345699997 10.527 447.4765665000027 10.019 427.0992749999975 9.796 442.35379449999573 10.977 429.96253500000415 9.432 429.4942736000035 10.9 473.679245500005 10.954 458.98873999999694 10.686 450.384095200002 10.123 426.73869319999574 9.281 462.89813829999747 10.658)
Error minima by case: (0.3958 6 0.8299 7 14.1224 8 0.2238 7 5.4312 8 0.565 7 21.0751 7 2.8155 6 2.7085 7 0.2891 7 16.2756 7 0.096 8 1.6588 8 0.0437 7 4.6717 8 1.3329 8 0.415 8 0.5214 8 0.9121 6 0.3119 8 9.45 8 5.2018 8 10.9015 7 0.3868 7 16.6626 7)
Average genome size in population (length): 147.524
Average program size in population (points): 148.524
Average percent parens in population: 0.007
Minimum age in population: 174.7233689442325
Maximum age in population: 178.9230196901482
Average age in population: 176.8521457519163
Median age in population: 176.8751108651322
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.479
Error (vector) diversity:			 0.573
Behavioral diversity:				 0.575
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 439999362
--- Timings ---
Current time: 1529616169568 milliseconds
Total Time:         698.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.8 seconds, 27.2%
Fitness Testing:    400.6 seconds, 57.3%
Report:             108.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 132318.43089999986
Test mean error for best: 66.15922
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction integer_min} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_min} {:instruction integer_min} {:instruction tag_float_646} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_pop} {:instruction float_tan} {:instruction float_pop} {:instruction float_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer})
Best program: (integer_fromfloat integer_min print_float integer_min float_sin integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min float_frominteger integer_min float_inc float_cos float_add integer_min integer_min tag_float_646 float_stackdepth float_min float_sub float_cos integer_div integer_min float_dup_items float_frominteger float_yankdup float_yank float_dec integer_min integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot float_dec integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop in1 integer_flush float_sin integer_pop float_tan float_pop float_add print_integer float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10230.864572800006
Median total errors in population: 1245.9883
Error averages by case: (409.8964275999983 8.592 423.84346639999876 10.269 430.5622147999973 11.47 418.2531999000023 10.851 437.30191280000406 11.345 238.7410280999998 10.201 300.9784190999993 10.255 440.92415059999826 9.476 434.97366530000033 9.891 232.41484660000194 9.586 449.73122089999754 12.226 233.9358868999987 10.176 411.5403699999965 10.053 414.1257964000012 10.664 421.3494030999974 10.333 429.56002820000253 9.898 407.9230590999981 9.723 424.3992609999968 10.861 414.87815610000405 9.333 412.270016500003 10.818 456.01990800000465 10.868 441.228499499997 10.525 431.25733010000204 9.978 412.7674454999963 9.131 444.92286029999775 10.543)
Error minima by case: (0.4041 6 0.8246 7 2.4567 8 0.2479 8 2.4321 8 1.4237 7 22.0133 8 0.7625 6 1.7645 8 0.2891 7 1.7231 7 0.8987 7 1.6825 7 0.045 7 4.2628 7 2.2769 7 0.405 8 0.5211 8 0.9121 6 0.3032 8 3.49 8 2.2027 7 3.419 7 0.4156 7 1.3361 7)
Average genome size in population (length): 147.366
Average program size in population (points): 148.366
Average percent parens in population: 0.007
Minimum age in population: 175.7233689442325
Maximum age in population: 180.3629921256007
Average age in population: 178.2375715281875
Median age in population: 178.2659722794977
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.467
Error (vector) diversity:			 0.573
Behavioral diversity:				 0.574
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 443683837
--- Timings ---
Current time: 1529616175387 milliseconds
Total Time:         704.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       191.3 seconds, 27.2%
Fitness Testing:    404.0 seconds, 57.3%
Report:             109.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 102860.10319999992
Test mean error for best: 51.43005
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_dup} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_yank} {:instruction print_float} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dec} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_min} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_inc} {:instruction print_integer} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -88.808442589172})
Best program: (integer_fromfloat integer_dup print_float float_sin integer_sub print_float integer_min float_yank print_float integer_mult float_rot integer_dup_items integer_flush tagged_675 float_sub float_max integer_fromfloat integer_min integer_inc integer_min float_inc float_cos float_add integer_stackdepth float_sub integer_rot integer_dup_items float_stackdepth float_min float_sub float_cos integer_div float_yankdup float_yank float_dec integer_min float_dup_items integer_min float_dup float_frominteger integer_yankdup float_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 float_dec integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop in1 integer_flush float_sin integer_dup float_rot integer_pop integer_inc print_integer float_inc integer_div in2 -36 float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -88.808442589172)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.424 9 90.0183 9 72.2374 8 49.739 9 7.2987 8 85.2756 12 7.0557 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1179.9103999999998
Mean: 23.598207
Genome size: 148
Size: 149
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10860.417717200002
Median total errors in population: 1311.6230000000003
Error averages by case: (431.90561379999855 8.769 448.51332839999833 10.477 451.86418479999753 11.693 441.69872120000196 11.044 459.7889892000044 11.503 270.26536169999974 10.546 334.78000609999873 10.527 464.89954829999766 9.748 456.00538389999997 10.085 269.0372814000021 9.965 472.133054299998 12.461 271.812782199999 10.528 431.9833834999958 10.238 439.6535882000021 10.848 445.81232489999684 10.599 455.1895840000024 10.124 433.17606749999766 9.908 448.98246299999613 11.048 429.2617794000045 9.554 435.29814860000334 11.012 476.98045940000486 11.013 465.34110029999687 10.708 456.26749230000206 10.169 437.79808279999554 9.349 469.2789879999971 10.774)
Error minima by case: (0.3814 6 2.8243 7 6.0924 9 0.7392 8 1.4401 8 3.371 8 5.904 7 1.7871 7 1.7645 7 0.2791 7 2.7244 7 0.8985 8 1.7132 7 1.0406 7 4.2628 8 2.2769 7 0.3706 7 4.5221 8 0.0641 6 0.3132 8 9.4587 8 6.8241 7 5.419 7 0.4001 6 8.6326 7)
Average genome size in population (length): 147.065
Average program size in population (points): 148.065
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 181.7305272569968
Average age in population: 179.4141407792844
Median age in population: 179.6318132666349
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.454
Error (vector) diversity:			 0.575
Behavioral diversity:				 0.577
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 447360912
--- Timings ---
Current time: 1529616181003 milliseconds
Total Time:         710.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.7 seconds, 27.1%
Fitness Testing:    407.4 seconds, 57.4%
Report:             110.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 89613.68549999985
Test mean error for best: 44.80684
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction float_max} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_max} {:instruction 18} {:instruction integer_max} {:instruction 32} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction print_float} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float integer_fromfloat integer_min integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_max float_max float_min float_sub float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_fromfloat integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_yank integer_shove integer_max 18 integer_max 32 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 print_float integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.424 9 90.0183 9 72.2448 9 49.7315 8 7.2987 8 85.283 12 7.0557 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1179.9016
Mean: 23.598032
Genome size: 160
Size: 161
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10407.776801500004
Median total errors in population: 1273.1797499999996
Error averages by case: (419.4194916999981 8.619 432.9321628999988 10.383 437.59502609999754 11.637 424.6118566000021 10.935 446.99000480000404 11.415 233.2164969999998 10.369 302.9611906999993 10.344 449.8360165999988 9.642 443.00736900000004 9.974 230.54496170000198 9.782 457.3236527999979 12.394 231.10885009999853 10.311 418.69796629999615 10.122 424.50243960000114 10.794 430.84515599999725 10.476 438.8821147000024 10.003 414.34832069999834 9.814 439.01410239999643 10.974 418.00184640000435 9.437 419.8743447000031 10.935 464.44204410000447 10.918 449.94658099999754 10.636 445.233850700002 10.056 422.11665589999575 9.265 452.46629899999783 10.623)
Error minima by case: (0.4058 6 3.1757 7 16.098 8 0.7392 8 6.5948 8 0.4161 7 22.0123 7 0.7726 7 1.7645 7 0.2891 7 25.7229 9 0.0915 8 1.2953 7 0.045 7 3.6773 7 1.7243 8 0.405 8 0.5211 8 0.9134 6 0.3133 8 8.4845 7 6.8242 8 3.449 7 0.5826 7 19.3674 7)
Average genome size in population (length): 147.724
Average program size in population (points): 148.724
Average percent parens in population: 0.007
Minimum age in population: 178.30360536548
Maximum age in population: 183.0581025433492
Average age in population: 180.9454247386877
Median age in population: 180.9985389377294
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.47
Error (vector) diversity:			 0.559
Behavioral diversity:				 0.56
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 451054362
--- Timings ---
Current time: 1529616186939 milliseconds
Total Time:         716.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       194.2 seconds, 27.1%
Fitness Testing:    410.8 seconds, 57.4%
Report:             110.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 89613.68549999985
Test mean error for best: 44.80684
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction float_max} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_max} {:instruction 18} {:instruction integer_max} {:instruction 32} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction print_float} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float integer_fromfloat integer_min integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min print_float float_sin integer_sub print_float integer_min in2 float_sin integer_sub print_float integer_dup_items integer_div integer_max float_max float_min float_sub float_cos integer_div integer_dup float_dup_items integer_add float_yankdup integer_max float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_fromfloat integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_yank integer_shove integer_max 18 integer_max 32 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 print_float integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.424 9 90.0183 9 72.2448 9 49.7315 8 7.2987 8 85.283 12 7.0557 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1179.9016
Mean: 23.598032
Genome size: 160
Size: 161
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10183.28967480001
Median total errors in population: 1257.87885
Error averages by case: (401.81399449999793 8.722 416.90480079999884 10.441 425.7886436999977 11.705 411.1989870000019 11.064 430.1215510000033 11.556 246.55805259999968 10.537 317.7528871999992 10.549 437.6876902999984 9.692 429.77847240000017 10.083 250.55959140000255 9.921 445.823298799998 12.447 250.90948179999845 10.535 407.971551499997 10.231 406.44083370000084 10.897 415.6844477999979 10.526 426.72551190000246 10.075 402.4333108999987 9.899 421.6900804999973 11.017 408.38103290000396 9.513 407.04863600000226 11.042 453.17404670000417 10.979 434.55515249999746 10.717 428.485092100002 10.127 403.0737990999969 9.273 440.45372769999796 10.727)
Error minima by case: (0.4058 6 0.7999 7 6.902 9 0.2579 8 6.5948 8 0.582 8 22.0183 7 1.7871 7 1.7645 7 0.2791 7 0.7244 8 1.0619 8 1.7132 7 0.965 7 4.6717 8 2.2769 8 0.3706 8 0.521 8 0.9134 6 0.3132 7 5.43 7 6.1597 7 1.4434 7 0.4001 6 1.6332 8)
Average genome size in population (length): 147.316
Average program size in population (points): 148.316
Average percent parens in population: 0.007
Minimum age in population: 179.8369831169645
Maximum age in population: 184.1899496855143
Average age in population: 182.2024366417996
Median age in population: 182.2431000590199
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.471
Error (vector) diversity:			 0.563
Behavioral diversity:				 0.568
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 454737512
--- Timings ---
Current time: 1529616192809 milliseconds
Total Time:         721.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       195.6 seconds, 27.1%
Fitness Testing:    414.3 seconds, 57.4%
Report:             111.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 89613.68549999985
Test mean error for best: 44.80684
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_yank} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_675} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_max} {:instruction float_max} {:instruction tagged_947} {:instruction integer_min} {:instruction -37} {:instruction in2} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction float_max} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_max} {:instruction 18} {:instruction integer_max} {:instruction 32} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction print_float} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float float_sin integer_sub print_float integer_min float_yank integer_dup_items integer_flush tagged_675 float_sub integer_dup_items integer_fromfloat integer_min float_frominteger integer_max float_max tagged_947 integer_min -37 in2 print_float integer_dup_items integer_div integer_max float_max float_min float_sub float_cos integer_div integer_dup float_dup_items integer_add float_yankdup integer_max float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_fromfloat integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_yank integer_shove integer_max 18 integer_max 32 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 print_float integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.424 9 90.0183 9 72.2448 9 49.7315 8 7.2987 8 85.283 12 7.0557 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1179.9016
Mean: 23.598032
Genome size: 162
Size: 163
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10945.292781300002
Median total errors in population: 2075.3051000000005
Error averages by case: (437.23549059999846 8.755 454.2233794999984 10.48 455.7111881999973 11.702 443.470979900002 11.014 466.3063902000041 11.468 271.77366479999995 10.486 333.46504819999893 10.597 470.61031679999826 9.744 458.3974878000001 10.029 268.94047290000174 9.933 474.34377219999766 12.472 271.08675109999905 10.52 436.2824540999962 10.202 441.6947236000017 10.851 452.44091949999694 10.59 456.2796915000025 10.068 434.9503275999977 9.918 456.42782449999635 11.03 436.4725987000042 9.486 437.2508348000032 10.982 482.3648765000045 11.006 470.5653705999968 10.72 463.3717668000021 10.135 437.0545641999962 9.341 472.33788669999757 10.705)
Error minima by case: (0.3894 6 3.1601 7 5.1224 8 0.7392 8 1.4072 7 1.4182 7 9.9817 6 0.2129 7 1.7645 7 0.2891 7 2.7244 9 0.0953 7 1.7132 7 1.0026 6 5.6731 8 0.7241 7 0.415 8 3.4748 7 0.9134 6 0.3132 7 2.4845 7 1.1778 8 2.449 7 0.3756 6 7.6626 7)
Average genome size in population (length): 148.75
Average program size in population (points): 149.75
Average percent parens in population: 0.007
Minimum age in population: 180.8369831169645
Maximum age in population: 185.4619987797698
Average age in population: 183.5001975429216
Median age in population: 183.5259211618256
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.469
Error (vector) diversity:			 0.563
Behavioral diversity:				 0.567
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 458456662
--- Timings ---
Current time: 1529616198461 milliseconds
Total Time:         727.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.0 seconds, 27.1%
Fitness Testing:    417.7 seconds, 57.4%
Report:             112.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 89613.68549999985
Test mean error for best: 44.80684
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03642731  
Correct output: 119.1092560212 | Program output: 29.090961649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067731258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075811394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction float_max} {:instruction float_min} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_pop} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction in2} {:instruction -36} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_max} {:instruction 18} {:instruction integer_max} {:instruction 32} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction print_float} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 print_float float_sin integer_fromfloat tagged_947 print_float float_sin print_float integer_flush integer_mult float_sin integer_sub float_frominteger integer_dup_items integer_div integer_max float_max float_min float_sub float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_pop float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_pop integer_dec float_pop float_add float_div float_inc integer_div in2 -36 float_pop integer_yank integer_fromfloat integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_yank integer_shove integer_max 18 integer_max 32 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 print_float integer_shove 18 float_rot integer_max float_div integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.424 9 90.0183 9 72.2448 9 49.7315 8 7.2987 8 85.283 12 7.0557 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1179.9016
Mean: 23.598032
Genome size: 153
Size: 154
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 10824.090980800007
Median total errors in population: 1311.6230000000003
Error averages by case: (431.6960833999979 8.879 446.4364269999986 10.516 453.53944659999775 11.734 442.12849510000217 11.062 462.3621956000041 11.535 258.4640535999998 10.484 324.19442339999904 10.479 466.9130644999986 9.813 456.4672014000003 10.096 258.38405310000223 9.916 472.30736009999794 12.457 259.0703328999986 10.44 433.66660579999626 10.24 437.31795200000107 10.881 447.946679299997 10.623 454.5075689000027 10.109 433.7006826999981 9.958 451.60243029999646 11.06 432.9807309000042 9.587 434.7049786000028 11.015 478.10736080000436 11.033 463.27799849999735 10.772 458.100007400002 10.261 434.64445239999606 9.363 468.50439649999777 10.753)
Error minima by case: (0.3814 6 1.8299 7 5.1224 8 0.2592 7 18.5977 7 0.566 7 22.0123 7 1.7862 7 5.7645 7 0.2791 7 2.7244 8 0.096 7 2.2933 7 1.0026 6 4.6717 8 1.7231 7 0.365 6 0.5211 8 0.9134 6 0.3133 7 3.46 8 10.8242 7 1.4375 8 0.3942 6 7.6626 8)
Average genome size in population (length): 148.021
Average program size in population (points): 149.021
Average percent parens in population: 0.007
Minimum age in population: 182.5290875243626
Maximum age in population: 186.5800762803371
Average age in population: 184.784386128898
Median age in population: 184.8408224608025
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.477
Error (vector) diversity:			 0.584
Behavioral diversity:				 0.589
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 462157487
--- Timings ---
Current time: 1529616204235 milliseconds
Total Time:         733.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.4 seconds, 27.1%
Fitness Testing:    421.0 seconds, 57.4%
Report:             113.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 132311.45819999994
Test mean error for best: 66.15573
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_rot} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_div} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction print_integer} {:instruction integer_flush} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_min} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_sub tagged_947 float_dup float_rot tagged_947 float_dec float_sin integer_dup_items integer_min integer_dec integer_min integer_dup_items integer_swap -37 float_stackdepth integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_shove float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_pop integer_dup integer_pop integer_dec float_div float_add float_div float_inc print_integer integer_flush print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_min integer_dec float_pop float_add float_div float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4242 9 90.0187 9 72.2374 8 49.739 9 7.2991 7 85.2756 12 7.0553 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1178.9109999999996
Mean: 23.57822
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10571.070760700002
Median total errors in population: 1306.6230000000003
Error averages by case: (416.43597759999807 8.682 430.06443139999806 10.368 441.57223329999744 11.58 430.85890230000217 10.849 447.16741510000406 11.348 259.1993024999998 10.18 328.00586049999885 10.316 453.164153099998 9.601 444.25642030000023 9.907 259.75265250000245 9.673 459.7573524999979 12.295 261.44329609999863 10.262 425.0977548999966 10.097 427.7148476000015 10.737 432.4409592999971 10.461 440.6018260000025 9.942 421.5849775999974 9.83 437.26400759999683 10.928 424.40656470000454 9.407 424.09304330000316 10.846 469.86676760000387 10.897 447.0890913999971 10.607 443.9492573000022 10.052 429.75213189999636 9.246 456.8085342999974 10.612)
Error minima by case: (0.4058 6 0.1817 7 6.9176 9 0.2593 7 5.4082 7 0.565 8 22.0123 8 0.4565 7 5.7645 7 0.3047 7 17.7344 8 0.0683 7 1.2933 7 1.0695 7 5.6717 8 1.7231 6 0.3706 6 0.5211 8 0.0631 6 0.3033 7 2.4846 7 5.1788 7 0.429 7 0.4001 6 24.3474 7)
Average genome size in population (length): 148.217
Average program size in population (points): 149.217
Average percent parens in population: 0.007
Minimum age in population: 183.5290875243626
Maximum age in population: 188.0832786353571
Average age in population: 186.0211510427243
Median age in population: 186.0651218691828
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.472
Error (vector) diversity:			 0.568
Behavioral diversity:				 0.572
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 465863512
--- Timings ---
Current time: 1529616209979 milliseconds
Total Time:         739.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.8 seconds, 27.0%
Fitness Testing:    424.5 seconds, 57.4%
Report:             114.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 132311.45819999994
Test mean error for best: 66.15573
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_rot} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_div} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction print_integer} {:instruction integer_flush} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_min} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_sub tagged_947 float_dup float_rot tagged_947 float_dec float_sin float_dec integer_min integer_dec integer_min integer_dup_items integer_swap -37 float_stackdepth integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_shove float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_pop integer_dup integer_pop integer_dec float_div float_add float_div float_inc print_integer integer_flush print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_min integer_dec float_pop float_add float_div float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4242 9 90.0187 9 72.2374 8 49.739 9 7.2991 7 85.2756 12 7.0553 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1178.9109999999996
Mean: 23.57822
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 10045.347065100003
Median total errors in population: 1264.7152999999998
Error averages by case: (401.6866680999985 8.542 410.29558759999895 10.357 422.7447026999977 11.478 409.69853280000183 10.883 426.73266560000354 11.354 238.34345749999991 10.222 299.5072867999992 10.262 435.7343358999986 9.564 425.4511045000001 9.857 233.22833020000215 9.626 442.1672208999981 12.272 232.89870919999845 10.231 401.8717043999972 10.049 406.77897840000054 10.762 412.5217085999981 10.358 423.37002010000253 9.843 400.95888369999847 9.809 417.57576989999774 10.792 402.1563405000035 9.342 402.94328770000266 10.784 447.537873100003 10.9 427.88019839999805 10.579 424.543572400002 9.911 401.22232349999723 9.229 440.0238025999978 10.468)
Error minima by case: (0.4058 6 0.8095 7 2.9163 8 0.8112 8 1.4072 8 2.418 8 17.9877 7 0.2218 7 1.7645 7 0.2891 7 8.7643 8 0.047 7 1.7132 8 0.045 6 4.6783 8 2.2769 7 0.3675 7 0.5211 8 0.9089 6 0.3132 8 3.46 8 1.1778 8 1.551 7 0.3256 7 13.6626 7)
Average genome size in population (length): 149.436
Average program size in population (points): 150.436
Average percent parens in population: 0.007
Minimum age in population: 184.5290875243626
Maximum age in population: 189.4318985898747
Average age in population: 187.3089906869654
Median age in population: 187.3256707254537
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.482
Error (vector) diversity:			 0.573
Behavioral diversity:				 0.574
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 469599862
--- Timings ---
Current time: 1529616215687 milliseconds
Total Time:         744.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.3 seconds, 27.0%
Fitness Testing:    427.8 seconds, 57.4%
Report:             115.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 132311.45819999994
Test mean error for best: 66.15573
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_rot} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_div} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction print_integer} {:instruction integer_flush} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_min} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_sub tagged_947 float_dup float_rot tagged_947 float_dec float_sin float_dec integer_min integer_dec integer_min integer_dup_items integer_swap -37 float_stackdepth integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_shove float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_pop integer_dup integer_pop integer_dec float_div float_add float_div float_inc print_integer integer_flush print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_min integer_dec float_pop float_add float_div float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4242 9 90.0187 9 72.2374 8 49.739 9 7.2991 7 85.2756 12 7.0553 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1178.9109999999996
Mean: 23.57822
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8690.1838118
Median total errors in population: 1235.9184
Error averages by case: (336.36228969999905 8.499 354.60662 10.324 360.284922999998 11.474 348.51797550000117 10.831 367.61319340000244 11.321 211.36671009999998 10.134 284.3828395999994 10.211 375.31892159999865 9.571 365.3002454999997 9.804 216.12281970000194 9.578 382.74268449999835 12.248 217.25631299999873 10.164 339.95864009999815 9.971 343.1791388 10.796 351.4819967999992 10.312 362.0620247000023 9.768 338.9651603999996 9.781 356.0339688999987 10.682 338.83705200000196 9.251 340.1533368000015 10.718 388.27594810000187 10.897 374.2419236999987 10.517 363.1256985000021 9.832 339.2600356999984 9.166 378.46635169999837 10.417)
Error minima by case: (0.3883 2 0.7699 2 6.8952 8 0.2593 3 5.4242 2 0.565 2 5.9404 3 1.7926 7 5.767 3 0.2891 7 8.753 9 0.9281 2 0.6932 2 0.015 1 4.6717 8 1.7256 2 0.415 3 0.52 2 0.9079 2 0.3132 2 2.46 2 10.7442 3 0.5579 7 0.3243 2 12.3674 7)
Average genome size in population (length): 151.7
Average program size in population (points): 152.7
Average percent parens in population: 0.007
Minimum age in population: 186.2390029343858
Maximum age in population: 190.8008538609639
Average age in population: 188.6229254306687
Median age in population: 188.6173936526363
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.508
Error (vector) diversity:			 0.584
Behavioral diversity:				 0.585
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 473392712
--- Timings ---
Current time: 1529616221228 milliseconds
Total Time:         750.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.6 seconds, 27.0%
Fitness Testing:    431.2 seconds, 57.5%
Report:             116.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 132311.45819999994
Test mean error for best: 66.15573
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_rot} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_div} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction print_integer} {:instruction integer_flush} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_min} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_sub tagged_947 float_dup float_rot tagged_947 float_dec float_sin float_dec integer_min integer_dec integer_min integer_dup_items integer_swap -37 float_stackdepth integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_shove float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_pop integer_dup integer_pop integer_dec float_div float_add float_div float_inc print_integer integer_flush print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_min integer_dec float_pop float_add float_div float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4242 9 90.0187 9 72.2374 8 49.739 9 7.2991 7 85.2756 12 7.0553 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1178.9109999999996
Mean: 23.57822
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8295.226947500003
Median total errors in population: 1234.5283999999997
Error averages by case: (318.1484839999996 8.556 329.479130900001 10.406 336.9417632999978 11.481 327.8458847000009 10.862 351.59670980000146 11.332 220.7318752 10.197 290.63211499999954 10.23 354.08378399999896 9.654 346.60493189999954 9.754 221.62140060000192 9.592 362.97275229999815 12.261 222.88673219999862 10.159 319.5188345999988 9.975 324.044203699999 10.894 332.50328519999977 10.294 344.41481850000235 9.7 318.0094279000006 9.858 334.60343259999905 10.591 319.0082033000009 9.269 320.35448920000056 10.688 370.26165020000093 10.956 349.5305607999996 10.59 340.5101674000025 9.742 324.6631298999998 9.216 357.67218029999856 10.33)
Error minima by case: (0.3814 6 1.1757 6 3.8742 8 0.7392 5 1.5392 4 0.5653 6 22.0123 5 1.7871 6 2.2365 5 0.2891 7 1.721 7 0.8917 6 1.7132 6 0.045 5 4.6832 8 6.2779 4 0.415 4 0.5201 6 0.9069 6 0.3119 5 4.5184 5 1.7686 5 3.4415 7 0.3256 5 1.3339 7)
Average genome size in population (length): 152.954
Average program size in population (points): 153.954
Average percent parens in population: 0.007
Minimum age in population: 187.5453516955765
Maximum age in population: 192.1025452000761
Average age in population: 189.9288325519527
Median age in population: 189.9501997485667
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.967
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.514
Error (vector) diversity:			 0.592
Behavioral diversity:				 0.594
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 477216837
--- Timings ---
Current time: 1529616227035 milliseconds
Total Time:         756.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.1 seconds, 27.0%
Fitness Testing:    434.7 seconds, 57.5%
Report:             117.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 132311.45819999994
Test mean error for best: 66.15573
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_rot} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_div} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction print_integer} {:instruction integer_flush} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_min} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_sub tagged_947 float_dup float_rot tagged_947 float_dec float_sin float_dec integer_min integer_dec integer_min integer_dup_items integer_swap -37 float_stackdepth integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_shove float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_pop integer_dup integer_pop integer_dec float_div float_add float_div float_inc print_integer integer_flush print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_min integer_dec float_pop float_add float_div float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4242 9 90.0187 9 72.2374 8 49.739 9 7.2991 7 85.2756 12 7.0553 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1178.9109999999996
Mean: 23.57822
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7686.442918600004
Median total errors in population: 1236.398
Error averages by case: (277.43437660000086 8.577 300.8745280000008 10.549 309.27528859999853 11.464 299.00701370000064 10.952 319.31568810000067 11.402 234.11170379999976 10.229 300.0405252999991 10.234 324.50226009999835 9.778 316.96785899999884 9.69 229.67068540000216 9.553 334.3762979999989 12.233 231.86142199999887 10.178 290.6382018999993 10.058 293.30547089999857 11.082 300.91103220000053 10.355 314.66502720000227 9.626 288.7210762000008 10.027 301.7964153999999 10.488 285.1577587000001 9.287 288.5860921999997 10.62 341.3550275999992 11.144 321.9549196000001 10.659 308.44022110000236 9.651 287.9564881000011 9.401 328.06553889999896 10.215)
Error minima by case: (0.4058 6 0.1815 7 4.9076 8 0.7392 7 2.5973 7 1.4183 7 6.9404 7 0.6881 7 1.7662 7 0.2991 7 0.741 9 0.096 8 1.7147 7 0.9937 8 4.6717 8 2.2752 8 0.365 7 0.5211 8 0.0921 6 0.3132 8 2.49 8 2.8299 8 0.551 7 0.3242 7 7.3539 7)
Average genome size in population (length): 154.888
Average program size in population (points): 155.888
Average percent parens in population: 0.006
Minimum age in population: 188.5453516955765
Maximum age in population: 193.2945656104002
Average age in population: 191.1705141685351
Median age in population: 191.1802125888946
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.523
Error (vector) diversity:			 0.597
Behavioral diversity:				 0.598
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 481089412
--- Timings ---
Current time: 1529616232707 milliseconds
Total Time:         761.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.5 seconds, 27.0%
Fitness Testing:    438.1 seconds, 57.5%
Report:             118.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 132311.45819999994
Test mean error for best: 66.15573
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0417306   
Correct output: -80.8416452312 | Program output: -56.0417306   
Correct output: -30.9193529897 | Program output: -78.0417306   
Correct output: -129.2709853231 | Program output: -106.0417306  
Correct output: -142.6109625327 | Program output: -88.0417306   
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.0417306   
Correct output: -163.7806987108 | Program output: -114.0417306  
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.0417306  
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.0417306   
Correct output: -94.0867625621 | Program output: -113.0417306  
Correct output: -53.340003998  | Program output: -88.0417306   
Correct output: -171.739275996 | Program output: -126.0417306  
Correct output: -113.6467160746 | Program output: -106.0417306  
Correct output: -99.4921227055 | Program output: -64.0417306   
Correct output: -67.9651207486 | Program output: -63.0417306   
Correct output: -109.3549767957 | Program output: -122.0417306  
Correct output: 14.5017756451  | Program output: -81.0417306   
Correct output: -110.8403243704 | Program output: -56.0417306   
Correct output: -11.4606904356 | Program output: -64.0417306   
Correct output: -32.4173586228 | Program output: -52.0417306   
Correct output: -28.3791179266 | Program output: -107.0417306  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction tagged_947} {:instruction float_dup} {:instruction float_rot} {:instruction tagged_947} {:instruction float_dec} {:instruction float_sin} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_div} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction print_integer} {:instruction integer_flush} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_min} {:instruction integer_dec} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_sub tagged_947 float_dup float_rot tagged_947 float_dec float_sin float_dec integer_min integer_dec integer_min integer_dup_items integer_swap -37 float_stackdepth integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_shove float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_yank integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_pop integer_dup integer_pop integer_dec float_div float_add float_div float_inc print_integer integer_flush print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_sin integer_dup float_rot integer_min integer_dec float_pop float_add float_div float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5942 7 24.7999 9 47.1224 11 23.2293 10 54.5692 11 15.4242 9 90.0187 9 72.2374 8 49.739 9 7.2991 7 85.2756 12 7.0553 9 10.3168 9 18.955 10 34.7017 9 45.6975 9 7.605 8 35.4504 10 4.9234 8 12.6868 10 95.5435 10 54.7986 10 52.581 9 19.6244 7 78.6626 10]
Total: 1178.9109999999996
Mean: 23.57822
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 6832.327593500003
Median total errors in population: 1214.7683000000002
Error averages by case: (248.83614940000214 8.395 267.151748300002 10.452 276.46027139999825 11.354 264.8699336000002 10.864 287.04704329999964 11.286 193.79364590000006 10.08 260.0135010999995 10.074 292.07189219999805 9.713 285.7870090999984 9.496 188.06118760000152 9.435 302.4472948999985 12.158 187.90634389999914 10.074 256.7000494999983 9.868 258.6393452999976 11.036 267.0054805000019 10.139 282.46941840000255 9.436 254.06325280000172 9.906 270.46970399999924 10.261 249.85805019999887 9.124 256.713164899999 10.41 308.77273629999945 11.045 289.35284320000113 10.558 276.4819255000027 9.451 255.4897717000022 9.302 297.8538304999981 10.095)
Error minima by case: (0.3641 6 0.1764 8 3.8962 8 0.2478 8 2.407 8 0.445 8 22.0123 7 1.7738 6 1.7645 7 0.2791 7 1.743 8 1.0913 8 1.7147 7 0.035 7 4.6702 7 1.7256 7 0.3642 7 2.4741 7 0.9079 6 0.3318 8 2.43 8 6.8242 8 0.5545 7 0.3242 7 1.3559 7)
Average genome size in population (length): 154.639
Average program size in population (points): 155.639
Average percent parens in population: 0.006
Minimum age in population: 190.2106213602014
Maximum age in population: 194.6475796755694
Average age in population: 192.4660525969996
Median age in population: 192.5284420383471
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.533
Error (vector) diversity:			 0.581
Behavioral diversity:				 0.582
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 484955562
--- Timings ---
Current time: 1529616238449 milliseconds
Total Time:         767.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.9 seconds, 27.0%
Fitness Testing:    441.7 seconds, 57.5%
Report:             119.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 108596.25919999996
Test mean error for best: 54.29813
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_swap} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_max} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction float_flush} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_swap float_sin integer_sub print_float integer_max in2 float_sin integer_sub float_flush float_sub float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 9 72.2448 9 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1178.9022
Mean: 23.578045
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7344.532194800002
Median total errors in population: 1236.398
Error averages by case: (263.9189180000018 8.646 282.36725140000135 10.626 291.9740273999986 11.476 283.0096150000002 11.068 305.3804611000008 11.457 238.02540830000007 10.3 294.23208819999945 10.317 306.5033989999979 9.914 302.79588099999876 9.716 225.24289180000156 9.605 317.3910737999987 12.27 224.08270229999908 10.317 272.7218991999989 10.083 277.96860409999823 11.267 285.24320200000113 10.341 300.8930053000023 9.687 272.3607424000009 10.102 288.63684259999985 10.472 268.3270235999992 9.344 274.24536939999973 10.602 322.84415149999916 11.249 304.0752438000002 10.723 293.6739854000025 9.702 276.6285229000016 9.554 312.8548852999981 10.297)
Error minima by case: (0.3814 6 0.7655 7 3.8702 7 0.739 8 10.5968 7 0.566 6 22.0596 6 1.781 7 5.7665 7 0.2891 6 1.717 7 1.8977 7 1.6532 7 0.035 7 4.6832 7 1.7251 6 0.395 7 0.5191 8 0.9068 6 0.3318 7 2.4885 8 10.7442 8 0.4365 7 0.3243 6 1.3299 7)
Average genome size in population (length): 153.669
Average program size in population (points): 154.669
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 195.9217935716402
Average age in population: 193.5933179502237
Median age in population: 193.8562749444343
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.542
Error (vector) diversity:			 0.61
Behavioral diversity:				 0.612
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 488797537
--- Timings ---
Current time: 1529616244213 milliseconds
Total Time:         773.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.3 seconds, 26.9%
Fitness Testing:    445.2 seconds, 57.6%
Report:             119.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 95104.1358999999
Test mean error for best: 47.55207
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction print_float} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction float_shove} {:instruction float_sin} {:instruction integer_sub} {:instruction -39} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_dup} {:instruction float_max} {:instruction float_min} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction integer_add} {:instruction in2} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min integer_fromfloat integer_min integer_fromfloat print_float print_integer integer_fromfloat tagged_947 print_float float_sin print_float integer_flush float_shove float_sin integer_sub -39 integer_dup_items integer_div integer_dup float_max float_min integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_pop float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max integer_add in2 integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 9 72.2448 9 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1178.9022
Mean: 23.578045
Genome size: 149
Size: 150
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7716.968126800002
Median total errors in population: 1215.3332
Error averages by case: (285.0907090000012 8.478 301.7313458000009 10.504 313.3326990999988 11.39 302.76934730000005 10.837 323.01554500000094 11.312 221.51539590000013 10.242 283.1275544999995 10.19 329.72324029999777 9.742 321.54123249999844 9.605 216.37595920000112 9.418 339.4153623999989 12.16 216.0539104999991 10.199 293.3480382999996 9.884 297.27875499999897 11.0 304.85993550000046 10.237 319.1044221000022 9.516 292.40749230000057 9.992 307.5855963000001 10.396 289.92900380000015 9.221 293.2627805000002 10.515 345.843813999999 11.031 322.74103980000007 10.619 314.6088986000024 9.58 291.95249720000106 9.281 334.8785518999982 10.126)
Error minima by case: (0.3758 6 0.7655 7 2.8702 7 0.8262 8 6.5976 7 0.424 7 22.0932 6 2.8161 6 1.7661 7 0.2891 6 0.717 7 0.94 7 1.7132 7 0.9304 7 4.6832 8 1.7255 7 0.3825 7 3.3999 7 0.907 6 0.3132 7 0.53 8 6.8302 8 0.5545 7 0.3256 7 0.3299 6)
Average genome size in population (length): 151.85
Average program size in population (points): 152.85
Average percent parens in population: 0.007
Minimum age in population: 192.6345879737467
Maximum age in population: 197.363593102445
Average age in population: 195.0870491516124
Median age in population: 195.1055318482761
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.955
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.955
Total error diversity:				 0.537
Error (vector) diversity:			 0.612
Behavioral diversity:				 0.612
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 492594112
--- Timings ---
Current time: 1529616249919 milliseconds
Total Time:         779.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.7 seconds, 26.9%
Fitness Testing:    448.6 seconds, 57.6%
Report:             120.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 108596.25919999996
Test mean error for best: 54.29813
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_swap} {:instruction float_sin} {:instruction integer_sub} {:instruction print_float} {:instruction integer_max} {:instruction in2} {:instruction float_sin} {:instruction integer_sub} {:instruction float_flush} {:instruction float_sub} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction tagged_963} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_swap float_sin integer_sub print_float integer_max in2 float_sin integer_sub float_flush float_sub float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup tagged_963 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 9 72.2448 9 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1178.9022
Mean: 23.578045
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8096.7766084999985
Median total errors in population: 1239.83575
Error averages by case: (305.11616419999996 8.58 321.81312399999973 10.512 330.63594899999816 11.479 322.15189420000087 10.914 341.32116420000165 11.343 215.9879635 10.218 284.50393809999906 10.183 346.9381037999974 9.803 340.2214653999989 9.714 212.1013908000014 9.35 356.0072402999984 12.266 210.9630030999996 10.194 314.04964969999924 10.006 316.51151920000007 11.025 322.6160236999999 10.311 337.8065651000026 9.678 311.92287249999924 9.998 326.2784735999997 10.519 305.65220520000094 9.276 314.7801810000016 10.649 362.9599493999997 11.053 341.8737228999986 10.637 332.0667200000028 9.697 313.8646604999996 9.379 351.5436650999973 10.305)
Error minima by case: (0.4058 6 1.2365 7 6.0978 8 0.2258 8 1.4031 8 0.555 8 22.0126 7 0.2129 7 1.7662 7 0.2931 6 3.7244 9 0.898 8 0.6757 7 0.9264 8 4.6717 7 1.7257 7 0.355 8 0.5209 7 0.0941 7 0.3133 7 0.5194 8 1.1705 8 1.419 7 0.3256 6 5.3568 7)
Average genome size in population (length): 149.311
Average program size in population (points): 150.311
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 198.6170845087893
Average age in population: 195.9614856884213
Median age in population: 196.3671703375687
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.964
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.964
Total error diversity:				 0.578
Error (vector) diversity:			 0.649
Behavioral diversity:				 0.652
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 496327062
--- Timings ---
Current time: 1529616255621 milliseconds
Total Time:         784.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.1 seconds, 26.9%
Fitness Testing:    452.1 seconds, 57.6%
Report:             121.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 108596.25919999996
Test mean error for best: 54.29813
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction float_add} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_sub} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_rot float_tan float_add integer_sub integer_fromfloat float_dup float_tan tagged_947 float_dec integer_min float_frominteger integer_min float_sub float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_sub integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 9 72.2448 9 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1178.9022
Mean: 23.578045
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 9122.295114000002
Median total errors in population: 1249.9542999999999
Error averages by case: (351.2465332999995 8.565 365.1867007999992 10.434 375.2375521999983 11.536 364.5534016000007 10.881 384.3506315000024 11.293 246.94961110000057 10.216 309.0474292999992 10.217 389.89416929999777 9.77 381.43533129999895 9.792 242.18289980000088 9.271 397.7812541999986 12.307 238.64939570000038 10.188 355.13682489999917 9.981 358.97873430000044 10.954 368.5292456999986 10.34 379.25543010000234 9.778 355.2479511999991 9.971 372.1606559999996 10.565 353.845792500002 9.315 356.9750985000015 10.672 403.59084300000063 11.052 383.9005762999986 10.586 378.9278688000023 9.753 358.28601399999894 9.373 393.70916859999784 10.426)
Error minima by case: (0.4058 6 3.2001 7 3.878 9 0.7392 7 2.4392 8 1.4243 7 5.9809 6 0.7832 7 7.2695 7 0.2927 6 1.2456 9 0.096 7 2.2923 7 0.045 6 4.6717 7 9.7271 7 0.365 7 0.6042 7 0.9079 6 0.315 7 5.5214 8 2.2098 8 1.4435 7 0.3256 6 1.3378 7)
Average genome size in population (length): 147.478
Average program size in population (points): 148.478
Average percent parens in population: 0.007
Minimum age in population: 195.3514395477134
Maximum age in population: 199.7101824107242
Average age in population: 197.6536973640388
Median age in population: 197.7175648056764
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.578
Error (vector) diversity:			 0.651
Behavioral diversity:				 0.657
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 500014137
--- Timings ---
Current time: 1529616261361 milliseconds
Total Time:         790.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.6 seconds, 26.9%
Fitness Testing:    455.6 seconds, 57.6%
Report:             122.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 108596.25919999996
Test mean error for best: 54.29813
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917306  
Correct output: -80.8416452312 | Program output: -56.04917306  
Correct output: -30.9193529897 | Program output: -78.04917306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04917306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.04917306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04917306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04917306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.04917306  
Correct output: -110.8403243704 | Program output: -56.04917306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.04817306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction float_add} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_rot float_tan float_add integer_sub integer_fromfloat float_dup float_tan tagged_947 float_dec integer_min float_frominteger integer_min float_sub float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_shove 17 integer_mult float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 9 72.2448 9 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 10 52.5885 8 19.6308 8 78.6701 9]
Total: 1178.9022
Mean: 23.578045
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8720.7212978
Median total errors in population: 1240.4552000000003
Error averages by case: (333.3683288999996 8.456 350.70209859999915 10.323 360.3769382999982 11.453 348.4840070000006 10.764 370.0640420000025 11.225 226.08391220000053 10.086 288.28859649999896 10.037 374.8573232999976 9.644 366.8409900999988 9.608 219.32328710000073 8.945 384.79990819999847 12.223 217.71859720000077 10.044 341.0008509999991 9.886 345.0726683000001 10.865 354.2408148999988 10.24 363.6516892000023 9.609 339.0105670999991 9.83 355.6905135999998 10.468 337.941072700002 9.178 341.0179677000015 10.56 391.7478743000001 10.993 370.0313299999984 10.493 363.5278998000024 9.662 343.2340720999991 9.264 379.553947699998 10.236)
Error minima by case: (0.3758 6 0.1815 7 1.098 8 0.7392 8 5.4208 8 0.5818 7 22.0123 7 0.2168 7 0.291 7 0.2827 6 1.717 9 0.904 7 1.7132 7 0.045 7 4.6773 8 4.3325 8 0.405 7 0.604 8 0.9069 6 0.3132 7 1.5274 7 4.7686 7 1.4374 7 0.3256 6 1.3299 7)
Average genome size in population (length): 145.401
Average program size in population (points): 146.401
Average percent parens in population: 0.007
Minimum age in population: 196.6728764704459
Maximum age in population: 200.8663949695142
Average age in population: 198.9959692952036
Median age in population: 199.0071093882197
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.964
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.964
Total error diversity:				 0.57
Error (vector) diversity:			 0.648
Behavioral diversity:				 0.649
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 503649337
--- Timings ---
Current time: 1529616267069 milliseconds
Total Time:         796.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       214.1 seconds, 26.9%
Fitness Testing:    459.0 seconds, 57.6%
Report:             123.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 90489.94489999993
Test mean error for best: 45.24497
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04717306  
Correct output: -80.8416452312 | Program output: -56.04117306  
Correct output: -30.9193529897 | Program output: -78.03517306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04517306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.03217306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04417306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04517306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.03817306  
Correct output: -110.8403243704 | Program output: -56.04117306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.03317306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_max} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction tagged_627} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction integer_mod} {:instruction print_integer} {:instruction -88.808442589172})
Best program: (integer_min tagged_947 print_float float_sin integer_fromfloat tagged_947 print_float float_sin print_float integer_flush integer_mult float_sin integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_pop float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec float_max print_integer float_inc in2 integer_yank float_pop 18 float_rot integer_max float_div integer_yank integer_shove float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank tagged_627 17 integer_mult float_div integer_mod print_integer -88.808442589172)
Errors: [0.5887 7 24.8005 9 47.1158 10 23.2218 10 54.5658 11 15.4242 9 90.0187 9 72.2278 10 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3143 9 18.9624 11 34.7052 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5399 11 54.7992 10 52.5885 8 19.6158 9 78.6701 9]
Total: 1178.8682000000001
Mean: 23.577364
Genome size: 162
Size: 163
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 8124.548547400002
Median total errors in population: 1234.4047999999998
Error averages by case: (301.7479393000002 8.529 321.4239411999997 10.444 332.150240999998 11.568 319.41953520000055 10.819 340.8079765000022 11.317 232.23168100000143 10.277 289.9009281999994 10.217 350.04829489999787 9.857 339.25176609999914 9.688 222.06068360000077 9.125 357.6294708999984 12.331 221.02236070000149 10.263 311.58315209999927 9.976 315.3306807 10.972 322.18354229999943 10.319 336.08920590000264 9.656 309.5884300999995 9.952 326.9579225 10.464 307.4383632000016 9.223 311.4547281000012 10.601 363.02226049999973 11.015 341.5642128999987 10.615 334.3043994000026 9.71 309.5241079999994 9.256 351.29172309999774 10.327)
Error minima by case: (0.4058 5 0.2001 6 3.8776 8 0.2258 6 1.4031 5 0.5655 5 22.0127 5 0.7562 7 5.7671 6 0.2927 6 1.7244 9 0.8994 5 1.6832 5 0.045 5 1.6773 8 1.7257 5 0.415 5 0.6041 6 0.9039 5 0.3438 6 7.49 5 1.1705 6 4.5875 7 0.3256 5 1.3374 7)
Average genome size in population (length): 144.361
Average program size in population (points): 145.361
Average percent parens in population: 0.007
Minimum age in population: 198.1976828989976
Maximum age in population: 202.4163619003953
Average age in population: 200.3136994495069
Median age in population: 200.3421359917399
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.945
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.945
Total error diversity:				 0.546
Error (vector) diversity:			 0.617
Behavioral diversity:				 0.618
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 507258387
--- Timings ---
Current time: 1529616272862 milliseconds
Total Time:         801.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.5 seconds, 26.9%
Fitness Testing:    462.3 seconds, 57.7%
Report:             124.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 90489.94489999993
Test mean error for best: 45.24497
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04717306  
Correct output: -80.8416452312 | Program output: -56.04117306  
Correct output: -30.9193529897 | Program output: -78.03517306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04517306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.03217306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04417306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04517306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.03817306  
Correct output: -110.8403243704 | Program output: -56.04117306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.03317306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_max} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction tagged_627} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction integer_mod} {:instruction print_integer} {:instruction -88.808442589172})
Best program: (integer_min tagged_947 print_float float_sin integer_fromfloat tagged_947 print_float float_sin print_float integer_flush integer_mult float_sin integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_pop float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec float_max print_integer float_inc in2 integer_yank float_pop 18 float_rot integer_max float_div integer_yank integer_shove float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank tagged_627 17 integer_mult float_div integer_mod print_integer -88.808442589172)
Errors: [0.5887 7 24.8005 9 47.1158 10 23.2218 10 54.5658 11 15.4242 9 90.0187 9 72.2278 10 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3143 9 18.9624 11 34.7052 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5399 11 54.7992 10 52.5885 8 19.6158 9 78.6701 9]
Total: 1178.8682000000001
Mean: 23.577364
Genome size: 162
Size: 163
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 8399.389805500003
Median total errors in population: 1240.1237999999998
Error averages by case: (314.51183300000054 8.576 332.746037 10.552 342.8669034999982 11.618 333.0733371000006 10.905 353.0948972000021 11.31 236.4054566000012 10.069 295.0879134999986 9.991 358.5649565999975 9.929 350.98265329999896 9.654 226.66386490000136 8.868 369.08811849999876 12.353 226.8279523000014 10.126 323.44814319999983 9.963 327.3280058 11.135 336.6027001000001 10.393 348.67666430000224 9.6 323.4643679999991 10.011 338.1708200000002 10.407 319.84140720000084 9.259 325.45464860000124 10.559 375.11078599999837 11.128 352.55188029999874 10.618 345.7984886000027 9.672 322.9028104 9.45 363.6991594999981 10.28)
Error minima by case: (0.3903 6 0.7625 7 2.8702 8 0.739 8 2.5973 7 0.4242 7 22.0127 6 0.2238 7 2.2346 7 0.2921 5 0.717 8 0.0956 7 1.7132 7 0.005 6 4.6773 8 1.722 7 0.4185 8 3.3998 7 0.0641 6 0.3132 7 11.4701 8 2.8299 8 1.4375 7 0.3256 6 0.3299 6)
Average genome size in population (length): 143.84
Average program size in population (points): 144.84
Average percent parens in population: 0.007
Minimum age in population: 199.3350873048964
Maximum age in population: 204.1533964886915
Average age in population: 201.6518997714802
Median age in population: 201.6560549079525
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.538
Error (vector) diversity:			 0.623
Behavioral diversity:				 0.627
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 510854562
--- Timings ---
Current time: 1529616278591 milliseconds
Total Time:         807.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.9 seconds, 26.9%
Fitness Testing:    465.7 seconds, 57.7%
Report:             125.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 90489.94489999993
Test mean error for best: 45.24497
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04717306  
Correct output: -80.8416452312 | Program output: -56.04117306  
Correct output: -30.9193529897 | Program output: -78.03517306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04517306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.03217306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04417306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04517306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.03817306  
Correct output: -110.8403243704 | Program output: -56.04117306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.03317306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_max} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction tagged_627} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction integer_mod} {:instruction print_integer} {:instruction -88.808442589172})
Best program: (integer_min tagged_947 float_rot print_float float_sin print_float integer_flush integer_mult float_sin integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_pop float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec float_max print_integer float_inc in2 integer_yank float_pop 18 float_rot integer_max float_div integer_yank integer_shove float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank tagged_627 17 integer_mult float_div integer_mod print_integer -88.808442589172)
Errors: [0.5887 7 24.8005 9 47.1158 10 23.2218 10 54.5658 11 15.4242 9 90.0187 9 72.2278 10 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3143 9 18.9624 11 34.7052 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5399 11 54.7992 10 52.5885 8 19.6158 9 78.6701 9]
Total: 1178.8682000000001
Mean: 23.577364
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 7160.415937199999
Median total errors in population: 1235.3974000000003
Error averages by case: (262.65761130000203 8.443 279.28488920000143 10.417 289.0280674999985 11.432 278.27370470000005 10.827 300.4401840000001 11.182 207.102908600001 10.01 269.10740479999816 9.898 304.16679629999754 9.872 298.65367619999824 9.454 199.57655120000084 8.768 315.3972071999988 12.273 200.09859790000144 10.036 270.08621329999846 9.866 272.6736418999983 11.013 278.7035058000018 10.225 294.26764140000256 9.405 267.0679802000014 9.932 287.2083959999996 10.166 264.4646002999992 9.111 269.3916029999996 10.341 321.1555897999988 11.101 301.0911978000008 10.532 293.185197600003 9.485 273.4341613000018 9.32 310.66860989999765 10.121)
Error minima by case: (0.3903 6 0.7625 8 2.8962 8 0.2248 7 2.4382 7 0.4186 8 22.0137 7 0.7626 6 5.767 7 0.2927 6 0.743 8 0.0956 8 1.6932 7 0.0756 7 2.2948 8 1.7256 7 0.4185 7 1.5596 7 0.0601 6 0.3132 7 7.4845 7 2.2088 8 4.581 7 0.3243 6 0.3559 7)
Average genome size in population (length): 143.766
Average program size in population (points): 144.766
Average percent parens in population: 0.007
Minimum age in population: 200.8931784866796
Maximum age in population: 205.1469482393544
Average age in population: 202.9655425277699
Median age in population: 202.9866824278689
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.947
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.947
Total error diversity:				 0.55
Error (vector) diversity:			 0.604
Behavioral diversity:				 0.605
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 514448812
--- Timings ---
Current time: 1529616284477 milliseconds
Total Time:         813.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.4 seconds, 26.8%
Fitness Testing:    469.1 seconds, 57.7%
Report:             125.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 90489.94489999993
Test mean error for best: 45.24497
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04717306  
Correct output: -80.8416452312 | Program output: -56.04117306  
Correct output: -30.9193529897 | Program output: -78.03517306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04517306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.03217306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04417306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04517306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.03817306  
Correct output: -110.8403243704 | Program output: -56.04117306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.03317306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_max} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction tagged_627} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction integer_mod} {:instruction print_integer} {:instruction -88.808442589172})
Best program: (integer_min tagged_947 float_rot print_float float_sin print_float integer_flush integer_mult float_sin integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_pop float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec float_max print_integer float_inc in2 integer_yank float_pop 18 float_rot integer_max float_div integer_yank integer_shove float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank tagged_627 17 integer_mult float_div integer_mod print_integer -88.808442589172)
Errors: [0.5887 7 24.8005 9 47.1158 10 23.2218 10 54.5658 11 15.4242 9 90.0187 9 72.2278 10 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3143 9 18.9624 11 34.7052 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5399 11 54.7992 10 52.5885 8 19.6158 9 78.6701 9]
Total: 1178.8682000000001
Mean: 23.577364
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 6970.412709800001
Median total errors in population: 1217.2404999999999
Error averages by case: (253.17791800000256 8.484 268.47054950000177 10.466 279.7576922999983 11.529 268.4112850000001 10.816 290.6755355000003 11.226 206.79734470000065 9.965 272.2846303999979 9.876 296.8011123999974 9.933 289.1362067999984 9.49 201.0899571000011 8.751 307.03803539999865 12.322 199.89512460000176 9.989 260.597298099998 9.842 262.62709669999754 11.067 270.90746880000233 10.259 283.7477972000024 9.457 257.5998557000016 9.941 277.4727419999995 10.221 256.021755299999 9.158 260.28261029999913 10.325 314.5959112999983 11.109 290.4861562000003 10.581 283.92931270000315 9.572 262.3960054000025 9.353 302.27530839999804 10.206)
Error minima by case: (0.3814 6 0.7445 8 6.896 8 0.739 8 1.4031 8 0.5969 7 51.0191 6 1.7871 7 6.2354 7 0.2927 6 2.74 7 0.0956 8 1.6932 7 0.055 6 4.6793 7 9.7272 7 0.405 7 0.6041 7 0.9069 7 0.3132 8 3.4982 7 1.1705 8 1.4374 7 0.3182 7 5.3675 7)
Average genome size in population (length): 143.545
Average program size in population (points): 144.545
Average percent parens in population: 0.007
Minimum age in population: 201.966687428631
Maximum age in population: 206.6041483966392
Average age in population: 204.2619479315713
Median age in population: 204.2910363185328
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.962
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.962
Total error diversity:				 0.547
Error (vector) diversity:			 0.601
Behavioral diversity:				 0.606
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 518037512
--- Timings ---
Current time: 1529616290187 milliseconds
Total Time:         819.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.9 seconds, 26.8%
Fitness Testing:    472.4 seconds, 57.7%
Report:             126.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 90489.94489999993
Test mean error for best: 45.24497
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04717306  
Correct output: -80.8416452312 | Program output: -56.04117306  
Correct output: -30.9193529897 | Program output: -78.03517306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04517306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.03217306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04417306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04517306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.03817306  
Correct output: -110.8403243704 | Program output: -56.04117306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.03317306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_max} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction tagged_627} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction integer_mod} {:instruction print_integer} {:instruction -88.808442589172})
Best program: (integer_min tagged_947 float_rot print_float float_sin print_float integer_flush integer_mult float_sin integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_pop float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec float_max print_integer float_inc in2 integer_yank float_pop 18 float_rot integer_max float_div integer_yank integer_shove float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank tagged_627 17 integer_mult float_div integer_mod print_integer -88.808442589172)
Errors: [0.5887 7 24.8005 9 47.1158 10 23.2218 10 54.5658 11 15.4242 9 90.0187 9 72.2278 10 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3143 9 18.9624 11 34.7052 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5399 11 54.7992 10 52.5885 8 19.6158 9 78.6701 9]
Total: 1178.8682000000001
Mean: 23.577364
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 7851.059775600002
Median total errors in population: 1239.4054
Error averages by case: (289.7823767000005 8.635 306.0990099000005 10.5 316.066143699999 11.639 308.72663909999966 10.875 330.4628896000016 11.204 231.4499960000008 10.078 296.2404053999991 9.978 330.7191677999976 10.101 325.75190019999826 9.648 226.753746700001 9.016 340.4961776999993 12.406 225.91052420000133 10.115 298.28668430000005 9.921 301.5652392999995 11.074 309.89500260000034 10.435 326.41582070000214 9.556 298.4944793999999 10.022 312.89159020000085 10.287 290.5526314000007 9.268 299.0675742000009 10.442 348.8530305999982 11.081 326.9369457999994 10.585 317.9535876000026 9.715 297.43730580000084 9.435 337.8799066999979 10.355)
Error minima by case: (0.4058 6 0.7653 7 0.1378 8 0.8263 7 2.5973 7 0.5514 6 22.0117 6 1.7632 7 2.2346 7 0.2931 6 2.291 9 0.8984 6 1.7132 7 0.0756 6 4.6717 8 1.7256 7 0.3875 7 3.3999 7 0.088 6 0.3318 7 6.46 7 2.8299 8 0.4195 7 0.3256 6 2.6781 7)
Average genome size in population (length): 143.48
Average program size in population (points): 144.48
Average percent parens in population: 0.007
Minimum age in population: 202.966687428631
Maximum age in population: 207.6219229290662
Average age in population: 205.6652696230404
Median age in population: 205.7005801870785
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.965
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.57
Error (vector) diversity:			 0.63
Behavioral diversity:				 0.632
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 521624612
--- Timings ---
Current time: 1529616295934 milliseconds
Total Time:         825.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       221.2 seconds, 26.8%
Fitness Testing:    475.9 seconds, 57.7%
Report:             127.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 90489.94489999993
Test mean error for best: 45.24497
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04717306  
Correct output: -80.8416452312 | Program output: -56.04117306  
Correct output: -30.9193529897 | Program output: -78.03517306  
Correct output: -129.2709853231 | Program output: -106.04917306 
Correct output: -142.6109625327 | Program output: -88.04517306  
Correct output: -28.4603903776 | Program output: -13.03617731  
Correct output: 119.1092560212 | Program output: 29.090601649  
Correct output: -2.804364668   | Program output: -75.03217306  
Correct output: -163.7806987108 | Program output: -114.04917306 
Correct output: 19.3664379282  | Program output: 12.067371258  
Correct output: -28.7661462515 | Program output: -114.04917306 
Correct output: -2.9798498499  | Program output: 4.075451394   
Correct output: -97.3585137143 | Program output: -87.04417306  
Correct output: -94.0867625621 | Program output: -113.04917306 
Correct output: -53.340003998  | Program output: -88.04517306  
Correct output: -171.739275996 | Program output: -126.04917306 
Correct output: -113.6467160746 | Program output: -106.04917306 
Correct output: -99.4921227055 | Program output: -64.04917306  
Correct output: -67.9651207486 | Program output: -63.04917306  
Correct output: -109.3549767957 | Program output: -122.04917306 
Correct output: 14.5017756451  | Program output: -81.03817306  
Correct output: -110.8403243704 | Program output: -56.04117306  
Correct output: -11.4606904356 | Program output: -64.04917306  
Correct output: -32.4173586228 | Program output: -52.03317306  
Correct output: -28.3791179266 | Program output: -107.04917306 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_shove} {:instruction 18} {:instruction float_dup_items} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_rot} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_max} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction float_pop} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction tagged_627} {:instruction 17} {:instruction integer_mult} {:instruction float_div} {:instruction integer_mod} {:instruction print_integer} {:instruction -88.808442589172})
Best program: (integer_min tagged_947 float_rot print_float float_sin print_float integer_flush integer_mult float_sin integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_pop float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_shove 18 float_dup_items float_pop integer_yank integer_shove integer_shove integer_rot integer_max 33 float_div integer_yank float_pop float_add integer_dec float_max print_integer float_inc in2 integer_yank float_pop 18 float_rot integer_max float_div integer_yank integer_shove float_inc in2 integer_yank integer_shove 18 float_rot integer_max float_div integer_yank tagged_627 17 integer_mult float_div integer_mod print_integer -88.808442589172)
Errors: [0.5887 7 24.8005 9 47.1158 10 23.2218 10 54.5658 11 15.4242 9 90.0187 9 72.2278 10 49.7315 8 7.2991 7 85.283 12 7.0553 9 10.3143 9 18.9624 11 34.7052 9 45.6901 8 7.5975 9 35.4429 9 4.9159 8 12.6942 9 95.5399 11 54.7992 10 52.5885 8 19.6158 9 78.6701 9]
Total: 1178.8682000000001
Mean: 23.577364
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 7869.110181100002
Median total errors in population: 1236.9389999999996
Error averages by case: (291.94838680000123 8.599 307.12773840000057 10.517 317.0540980999984 11.638 310.6300861 10.902 330.8601839000014 11.303 230.47414300000085 10.112 292.1448262999989 10.018 332.6690198999972 10.116 327.66164829999826 9.578 222.9657720000009 8.943 342.4893102999988 12.459 223.34669170000134 10.126 299.3375445999993 9.921 302.8427376999993 11.197 309.91559140000044 10.454 325.40676130000253 9.509 300.41294300000015 10.082 316.1109695000002 10.269 294.7427026000004 9.242 300.00041970000075 10.48 348.2440580999985 11.134 328.2859013999996 10.637 320.81932710000285 9.721 298.83068460000106 9.454 338.06863529999737 10.309)
Error minima by case: (0.3758 6 0.1702 7 6.8776 8 0.8207 7 22.5988 5 0.5569 6 20.0127 5 0.2168 7 17.7685 7 0.2927 5 11.713 9 0.0949 6 1.2968 7 0.9264 6 4.6717 8 13.7271 6 0.4185 6 3.3999 7 0.9059 6 0.3232 7 0.51 6 22.7562 7 0.5545 7 0.3256 6 3.3618 7)
Average genome size in population (length): 143.174
Average program size in population (points): 144.174
Average percent parens in population: 0.007
Minimum age in population: 204.5889094208039
Maximum age in population: 208.8194839329022
Average age in population: 206.9263577489084
Median age in population: 206.9511057204917
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.547
Error (vector) diversity:			 0.611
Behavioral diversity:				 0.615
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 525204187
--- Timings ---
Current time: 1529616301756 milliseconds
Total Time:         830.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       222.7 seconds, 26.8%
Fitness Testing:    479.2 seconds, 57.7%
Report:             128.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 108500.25909999997
Test mean error for best: 54.25013
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917528  
Correct output: -80.8416452312 | Program output: -56.04917528  
Correct output: -30.9193529897 | Program output: -78.04917528  
Correct output: -129.2709853231 | Program output: -106.04917528 
Correct output: -142.6109625327 | Program output: -88.04917528  
Correct output: -28.4603903776 | Program output: -13.03617528  
Correct output: 119.1092560212 | Program output: 29.09060528   
Correct output: -2.804364668   | Program output: -75.04917528  
Correct output: -163.7806987108 | Program output: -114.04917528 
Correct output: 19.3664379282  | Program output: 12.06737528   
Correct output: -28.7661462515 | Program output: -114.04917528 
Correct output: -2.9798498499  | Program output: 4.07545528    
Correct output: -97.3585137143 | Program output: -87.04917528  
Correct output: -94.0867625621 | Program output: -113.04917528 
Correct output: -53.340003998  | Program output: -88.04917528  
Correct output: -171.739275996 | Program output: -126.04917528 
Correct output: -113.6467160746 | Program output: -106.04917528 
Correct output: -99.4921227055 | Program output: -64.04917528  
Correct output: -67.9651207486 | Program output: -63.04917528  
Correct output: -109.3549767957 | Program output: -122.04917528 
Correct output: 14.5017756451  | Program output: -81.04917528  
Correct output: -110.8403243704 | Program output: -56.04917528  
Correct output: -11.4606904356 | Program output: -64.04917528  
Correct output: -32.4173586228 | Program output: -52.04817528  
Correct output: -28.3791179266 | Program output: -107.04917528 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction float_add} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_978} {:instruction float_dec} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction 18.047472855540832} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction integer_add} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction 33} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_mult} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_mult} {:instruction 16} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer})
Best program: (integer_min tagged_947 float_rot float_tan float_add integer_sub integer_fromfloat float_dup float_tan tagged_978 float_dec integer_min float_frominteger integer_min float_sub float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_inc 18.047472855540832 in2 -36 integer_add float_mod integer_shove integer_shove in1 integer_flush float_pop float_add integer_add integer_add float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add 33 integer_dup integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_stackdepth 18 integer_swap integer_max float_div float_mult integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_mult 16 integer_mult float_div print_float print_integer)
Errors: [0.5867 8 24.7925 9 47.1298 9 23.2218 10 54.5618 10 15.4242 10 90.0187 8 72.2448 8 49.7315 8 7.2991 6 85.283 11 7.0553 10 10.3093 9 18.9624 10 34.7092 9 45.6901 8 7.5975 10 35.4429 9 4.9159 9 12.6942 9 95.551 11 54.7911 12 52.5885 10 19.6308 7 78.6701 9]
Total: 1177.9022
Mean: 23.558044
Genome size: 148
Size: 149
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7535.2544042000045
Median total errors in population: 1209.76
Error averages by case: (277.5574462000018 8.425 293.8943251000013 10.477 303.3884531999986 11.497 294.9528601999998 10.79 316.32976040000085 11.265 223.7194130000008 10.018 283.90533229999846 9.926 321.2737577999974 9.939 314.3744780999984 9.463 213.75507650000114 8.818 329.495425999999 12.339 212.82210180000146 10.042 285.36567119999887 9.844 288.38061729999833 11.105 296.4719922000017 10.269 311.18531910000235 9.416 284.4668478000006 9.998 300.0085713999995 10.216 278.4771772999996 9.175 285.51822260000023 10.351 335.3231472999982 11.107 315.3917433000006 10.583 305.1711396000026 9.584 285.8027908000015 9.34 324.0107336999978 10.225)
Error minima by case: (0.3814 6 0.7655 7 5.8742 8 0.2258 8 4.4112 7 0.5573 7 5.9877 7 0.2168 7 1.7675 7 0.2931 6 2.7244 8 0.0347 7 1.2912 7 0.0337 7 4.6773 8 1.722 7 0.3706 7 0.4699 7 0.9059 7 0.27 8 1.4845 7 6.8272 8 1.419 8 0.3256 6 3.3339 7)
Average genome size in population (length): 143.163
Average program size in population (points): 144.163
Average percent parens in population: 0.007
Minimum age in population: 205.749777651818
Maximum age in population: 210.2836045539957
Average age in population: 208.2684101086239
Median age in population: 208.3612602999794
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.551
Error (vector) diversity:			 0.609
Behavioral diversity:				 0.612
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 528783537
--- Timings ---
Current time: 1529616307585 milliseconds
Total Time:         836.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.1 seconds, 26.8%
Fitness Testing:    482.7 seconds, 57.7%
Report:             129.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 108500.25909999997
Test mean error for best: 54.25013
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.04917528  
Correct output: -80.8416452312 | Program output: -56.04917528  
Correct output: -30.9193529897 | Program output: -78.04917528  
Correct output: -129.2709853231 | Program output: -106.04917528 
Correct output: -142.6109625327 | Program output: -88.04917528  
Correct output: -28.4603903776 | Program output: -13.03617528  
Correct output: 119.1092560212 | Program output: 29.09060528   
Correct output: -2.804364668   | Program output: -75.04917528  
Correct output: -163.7806987108 | Program output: -114.04917528 
Correct output: 19.3664379282  | Program output: 12.06737528   
Correct output: -28.7661462515 | Program output: -114.04917528 
Correct output: -2.9798498499  | Program output: 4.07545528    
Correct output: -97.3585137143 | Program output: -87.04917528  
Correct output: -94.0867625621 | Program output: -113.04917528 
Correct output: -53.340003998  | Program output: -88.04917528  
Correct output: -171.739275996 | Program output: -126.04917528 
Correct output: -113.6467160746 | Program output: -106.04917528 
Correct output: -99.4921227055 | Program output: -64.04917528  
Correct output: -67.9651207486 | Program output: -63.04917528  
Correct output: -109.3549767957 | Program output: -122.04917528 
Correct output: 14.5017756451  | Program output: -81.04917528  
Correct output: -110.8403243704 | Program output: -56.04917528  
Correct output: -11.4606904356 | Program output: -64.04917528  
Correct output: -32.4173586228 | Program output: -52.04817528  
Correct output: -28.3791179266 | Program output: -107.04917528 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_max} {:instruction float_max} {:instruction float_min} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_dup} {:instruction float_tan} {:instruction tagged_978} {:instruction float_dec} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction 18.047472855540832} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction in1} {:instruction integer_flush} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction integer_add} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction 33} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_mult} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction 18} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_mult} {:instruction 16} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction print_integer})
Best program: (integer_fromfloat integer_min print_float float_sin print_float float_yank integer_mult float_sin integer_sub float_frominteger integer_dup_items integer_div integer_max float_max float_min float_sub integer_inc integer_div integer_dup float_tan tagged_978 float_dec integer_min float_frominteger integer_min float_sub float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_inc 18.047472855540832 in2 -36 integer_add float_mod integer_shove integer_shove in1 integer_flush float_pop float_add integer_add integer_add float_add integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add 33 integer_dup integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_stackdepth 18 integer_swap integer_max float_div float_mult integer_yank in2 integer_yank integer_shove 18 float_rot integer_max integer_mod integer_yank integer_mult 16 integer_mult float_div print_float print_integer)
Errors: [0.5867 8 24.7925 9 47.1298 9 23.2218 10 54.5618 10 15.4242 10 90.0187 8 72.2448 8 49.7315 8 7.2991 6 85.283 11 7.0553 10 10.3093 9 18.9624 10 34.7092 9 45.6901 8 7.5975 10 35.4429 9 4.9159 9 12.6942 9 95.551 11 54.7911 12 52.5885 10 19.6308 7 78.6701 9]
Total: 1177.9022
Mean: 23.558044
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 6714.082352900002
Median total errors in population: 1211.7370999999998
Error averages by case: (241.09528280000129 8.404 256.7973687000019 10.377 269.6441714999987 11.411 258.56081329999995 10.745 280.3705186999994 11.179 199.68340490000048 9.949 267.6288987999981 9.818 286.7521665999978 9.905 278.78760789999825 9.418 191.08243050000064 8.659 296.98636109999893 12.221 191.49784870000147 10.01 248.76918929999823 9.753 252.29672569999803 11.007 260.6398641000017 10.199 276.2030427000024 9.343 247.60938030000145 9.945 265.81579849999906 10.124 244.02900639999942 9.085 249.13934359999942 10.26 302.9174872999993 11.083 279.2753507000012 10.53 272.87319690000254 9.493 251.1449448000009 9.305 292.21414909999817 10.045)
Error minima by case: (0.3758 6 0.8243 8 8.1258 8 0.254 8 2.5391 8 0.5819 7 22.0187 7 0.2348 7 1.7686 7 0.2927 6 2.2756 8 0.0347 7 0.3072 7 0.0756 7 4.6702 8 2.274 7 0.415 7 0.4639 7 0.9069 6 0.3318 8 6.5454 8 2.7685 8 2.5785 7 0.3182 6 4.3374 7)
Average genome size in population (length): 144.877
Average program size in population (points): 145.877
Average percent parens in population: 0.007
Minimum age in population: 206.9949504686542
Maximum age in population: 211.4520661773875
Average age in population: 209.6185780925918
Median age in population: 209.6555428235181
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.571
Error (vector) diversity:			 0.63
Behavioral diversity:				 0.636
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 532405862
--- Timings ---
Current time: 1529616313365 milliseconds
Total Time:         842.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.5 seconds, 26.8%
Fitness Testing:    486.0 seconds, 57.7%
Report:             130.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 108383.25929999995
Test mean error for best: 54.19163
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491735   
Correct output: -80.8416452312 | Program output: -56.0491735   
Correct output: -30.9193529897 | Program output: -78.0491735   
Correct output: -129.2709853231 | Program output: -106.0491735  
Correct output: -142.6109625327 | Program output: -88.0491735   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491735   
Correct output: -163.7806987108 | Program output: -114.0491735  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491735  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491735   
Correct output: -94.0867625621 | Program output: -113.0491735  
Correct output: -53.340003998  | Program output: -88.0491735   
Correct output: -171.739275996 | Program output: -126.0491735  
Correct output: -113.6467160746 | Program output: -106.0491735  
Correct output: -99.4921227055 | Program output: -64.0491735   
Correct output: -67.9651207486 | Program output: -63.0491735   
Correct output: -109.3549767957 | Program output: -122.0491735  
Correct output: 14.5017756451  | Program output: -81.0491735   
Correct output: -110.8403243704 | Program output: -56.0491735   
Correct output: -11.4606904356 | Program output: -64.0491735   
Correct output: -32.4173586228 | Program output: -52.0481735   
Correct output: -28.3791179266 | Program output: -107.0491735  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction float_add} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction integer_min} {:instruction float_div} {:instruction integer_min} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_rot float_tan float_add float_cos integer_fromfloat float_dup float_tan tagged_947 float_dec integer_min float_div integer_min float_sub float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 10 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 9 49.7315 9 7.2991 7 85.283 11 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 9 7.5975 9 35.4429 8 4.9159 9 12.6942 8 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 10]
Total: 1176.9022
Mean: 23.538044
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7420.500381600002
Median total errors in population: 1231.9159999999997
Error averages by case: (270.49449650000116 8.668 287.2817225000014 10.517 299.2537778999995 11.585 287.0049009 10.938 309.94178130000074 11.316 219.88006060000086 10.128 288.35278959999863 9.978 314.6142316999978 10.177 306.4024367999985 9.662 218.2389075000007 8.956 324.85687109999907 12.431 218.90474730000125 10.22 277.68117539999923 9.968 281.4181905999984 11.214 291.0879946000009 10.472 303.94216340000224 9.599 276.50383450000066 10.117 293.2261060999998 10.351 273.24310909999934 9.297 278.22669030000003 10.521 331.9621861999991 11.255 308.8989369000006 10.7 300.62273300000237 9.759 280.43362039999977 9.604 320.1829173999982 10.411)
Error minima by case: (0.3814 5 0.1875 5 3.8332 7 0.8142 6 6.5978 5 0.4152 5 22.0127 6 1.7522 7 1.7675 6 0.2927 5 0.745 9 0.8984 5 0.2868 5 0.9244 4 1.7052 7 2.2739 5 0.3865 6 0.6031 5 0.9049 5 0.2898 5 4.5434 5 6.8272 6 1.581 7 0.3256 5 1.2929 7)
Average genome size in population (length): 145.13
Average program size in population (points): 146.13
Average percent parens in population: 0.007
Minimum age in population: 208.3590677551612
Maximum age in population: 212.7990995328341
Average age in population: 210.83974006966
Median age in population: 210.9003908943856
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.6
Error (vector) diversity:			 0.655
Behavioral diversity:				 0.66
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 536034362
--- Timings ---
Current time: 1529616319027 milliseconds
Total Time:         848.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       227.0 seconds, 26.8%
Fitness Testing:    489.4 seconds, 57.7%
Report:             131.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 108383.25929999995
Test mean error for best: 54.19163
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491735   
Correct output: -80.8416452312 | Program output: -56.0491735   
Correct output: -30.9193529897 | Program output: -78.0491735   
Correct output: -129.2709853231 | Program output: -106.0491735  
Correct output: -142.6109625327 | Program output: -88.0491735   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491735   
Correct output: -163.7806987108 | Program output: -114.0491735  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491735  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491735   
Correct output: -94.0867625621 | Program output: -113.0491735  
Correct output: -53.340003998  | Program output: -88.0491735   
Correct output: -171.739275996 | Program output: -126.0491735  
Correct output: -113.6467160746 | Program output: -106.0491735  
Correct output: -99.4921227055 | Program output: -64.0491735   
Correct output: -67.9651207486 | Program output: -63.0491735   
Correct output: -109.3549767957 | Program output: -122.0491735  
Correct output: 14.5017756451  | Program output: -81.0491735   
Correct output: -110.8403243704 | Program output: -56.0491735   
Correct output: -11.4606904356 | Program output: -64.0491735   
Correct output: -32.4173586228 | Program output: -52.0481735   
Correct output: -28.3791179266 | Program output: -107.0491735  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction float_max} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction integer_min} {:instruction float_div} {:instruction integer_min} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_rot float_tan float_max float_cos integer_fromfloat float_dup float_tan tagged_947 float_dec integer_min float_div integer_min float_sub float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 10 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 9 49.7315 9 7.2991 7 85.283 11 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 9 7.5975 9 35.4429 8 4.9159 9 12.6942 8 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 10]
Total: 1176.9022
Mean: 23.538044
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 6422.427488400005
Median total errors in population: 1200.922
Error averages by case: (228.45603550000087 8.343 245.32352350000176 10.215 257.85226709999887 11.193 247.48356799999985 10.68 268.3733031999997 11.111 185.13864430000035 9.881 254.6642596999978 9.734 274.4743236999978 9.837 268.23466559999855 9.308 181.42054910000087 8.659 285.1177197999987 12.167 182.9215414000017 9.924 236.96270199999856 9.725 241.3027843999983 10.989 246.324793700001 10.091 266.84576420000224 9.272 236.22976080000151 9.838 255.04802279999868 10.025 231.64779329999965 9.036 238.394896699999 10.199 291.3496891000002 11.051 268.25970260000145 10.455 261.12432910000234 9.396 238.5529172999998 9.383 280.31693149999813 10.095)
Error minima by case: (0.3904 4 0.7499 5 3.9024 7 0.7463 5 14.5258 5 1.4434 3 36.0931 4 1.2118 7 9.7696 5 0.2927 6 1.7491 9 0.8984 4 1.6977 4 0.0756 4 1.7052 8 5.727 4 0.355 4 1.404 4 0.9059 4 0.3318 4 1.4806 4 14.7592 4 0.4455 7 0.3256 4 1.3621 7)
Average genome size in population (length): 146.742
Average program size in population (points): 147.742
Average percent parens in population: 0.007
Minimum age in population: 209.3590677551612
Maximum age in population: 213.9331816365397
Average age in population: 212.0101259539576
Median age in population: 212.0537737493138
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.581
Error (vector) diversity:			 0.619
Behavioral diversity:				 0.62
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 539703337
--- Timings ---
Current time: 1529616324744 milliseconds
Total Time:         854.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.4 seconds, 26.7%
Fitness Testing:    492.9 seconds, 57.7%
Report:             132.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 108383.25929999995
Test mean error for best: 54.19163
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491735   
Correct output: -80.8416452312 | Program output: -56.0491735   
Correct output: -30.9193529897 | Program output: -78.0491735   
Correct output: -129.2709853231 | Program output: -106.0491735  
Correct output: -142.6109625327 | Program output: -88.0491735   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491735   
Correct output: -163.7806987108 | Program output: -114.0491735  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491735  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491735   
Correct output: -94.0867625621 | Program output: -113.0491735  
Correct output: -53.340003998  | Program output: -88.0491735   
Correct output: -171.739275996 | Program output: -126.0491735  
Correct output: -113.6467160746 | Program output: -106.0491735  
Correct output: -99.4921227055 | Program output: -64.0491735   
Correct output: -67.9651207486 | Program output: -63.0491735   
Correct output: -109.3549767957 | Program output: -122.0491735  
Correct output: 14.5017756451  | Program output: -81.0491735   
Correct output: -110.8403243704 | Program output: -56.0491735   
Correct output: -11.4606904356 | Program output: -64.0491735   
Correct output: -32.4173586228 | Program output: -52.0481735   
Correct output: -28.3791179266 | Program output: -107.0491735  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod integer_min tagged_947 float_rot float_tan integer_mod float_sin print_float float_yank integer_mult float_sin integer_sub float_cos float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 10 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 9 49.7315 9 7.2991 7 85.283 11 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 9 7.5975 9 35.4429 8 4.9159 9 12.6942 8 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 10]
Total: 1176.9022
Mean: 23.538044
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7203.775719400001
Median total errors in population: 1216.7378999999996
Error averages by case: (266.0601846000004 8.448 280.5391673000015 10.13 287.5985121999995 11.199 280.5135238999999 10.703 301.91320470000016 11.116 212.14549530000087 9.923 276.87322719999815 9.744 304.6890602999982 9.92 300.2231029999986 9.444 203.64967810000093 8.604 316.19243459999933 12.168 204.28611110000165 9.928 270.1820394999989 9.788 274.2305007999988 10.988 282.16749660000056 10.15 298.57065790000183 9.364 268.7811180000011 9.929 287.38705679999987 10.074 266.0855254999996 9.093 272.00110339999986 10.298 319.59897869999946 11.039 302.3281247000008 10.503 293.1539790000022 9.478 271.56650589999975 9.368 311.50193029999843 10.138)
Error minima by case: (0.3758 6 0.7645 6 3.8702 7 0.8162 7 2.5977 8 1.4186 7 22.0632 6 0.2129 7 2.2346 7 0.2891 6 1.2552 8 0.0956 7 1.6976 7 0.9264 7 4.6703 7 0.2748 8 0.3706 7 1.5371 8 0.8934 6 0.3318 8 0.46 7 2.8299 7 0.4394 7 0.3241 6 1.3299 7)
Average genome size in population (length): 148.451
Average program size in population (points): 149.451
Average percent parens in population: 0.007
Minimum age in population: 210.3590677551612
Maximum age in population: 215.3738393795722
Average age in population: 213.3543634150219
Median age in population: 213.3671393980689
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.576
Error (vector) diversity:			 0.634
Behavioral diversity:				 0.635
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 543414737
--- Timings ---
Current time: 1529616330580 milliseconds
Total Time:         859.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       230.0 seconds, 26.7%
Fitness Testing:    496.4 seconds, 57.7%
Report:             133.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 108383.25929999995
Test mean error for best: 54.19163
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491735   
Correct output: -80.8416452312 | Program output: -56.0491735   
Correct output: -30.9193529897 | Program output: -78.0491735   
Correct output: -129.2709853231 | Program output: -106.0491735  
Correct output: -142.6109625327 | Program output: -88.0491735   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491735   
Correct output: -163.7806987108 | Program output: -114.0491735  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491735  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491735   
Correct output: -94.0867625621 | Program output: -113.0491735  
Correct output: -53.340003998  | Program output: -88.0491735   
Correct output: -171.739275996 | Program output: -126.0491735  
Correct output: -113.6467160746 | Program output: -106.0491735  
Correct output: -99.4921227055 | Program output: -64.0491735   
Correct output: -67.9651207486 | Program output: -63.0491735   
Correct output: -109.3549767957 | Program output: -122.0491735  
Correct output: 14.5017756451  | Program output: -81.0491735   
Correct output: -110.8403243704 | Program output: -56.0491735   
Correct output: -11.4606904356 | Program output: -64.0491735   
Correct output: -32.4173586228 | Program output: -52.0481735   
Correct output: -28.3791179266 | Program output: -107.0491735  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction integer_flush} {:instruction float_sin} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction integer_sub} {:instruction float_sin} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_sin} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_div} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_frominteger} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction tagged_701} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_yank} {:instruction integer_max} {:instruction integer_add} {:instruction in2} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_max} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 print_float float_sin integer_fromfloat tagged_947 integer_flush float_sin print_float integer_dup_items integer_mult float_sin integer_sub integer_div integer_div integer_sub float_sin integer_sub integer_div integer_div float_dup_items integer_add float_yankdup float_sin integer_dup_items integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_div integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div print_float print_integer in1 integer_flush float_inc float_frominteger in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop tagged_701 integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_shove float_yank integer_max integer_add in2 integer_yank float_rot integer_max float_rot integer_max integer_mod integer_yank integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 10 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 9 49.7315 9 7.2991 7 85.283 11 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 9 7.5975 9 35.4429 8 4.9159 9 12.6942 8 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 10]
Total: 1176.9022
Mean: 23.538044
Genome size: 147
Size: 148
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 6660.304091300003
Median total errors in population: 1231.8270000000002
Error averages by case: (239.4368148999994 8.406 256.02058220000185 10.0 268.0574791999995 11.021 259.8700604999998 10.65 282.25231830000087 11.043 190.19700760000032 9.9 252.3608252999984 9.662 285.5526804999979 9.881 278.9267411999982 9.372 183.9298813000007 8.642 295.342719499999 12.034 184.68119690000123 9.919 249.03100649999877 9.744 251.5947771999984 10.932 261.2193273000003 10.024 276.5590296000023 9.345 249.01732800000144 9.876 264.95423529999846 9.979 241.41632449999986 9.059 249.65990929999924 10.19 301.75645640000033 11.047 278.2727812000013 10.413 270.56708800000234 9.384 248.09465169999976 9.429 291.50086889999784 10.08)
Error minima by case: (0.3658 6 0.7925 7 3.8842 8 0.2478 7 2.4308 7 1.4242 7 3.0 6 0.7626 5 7.261 7 0.2927 5 0.74 8 0.0347 7 0.3033 6 0.0756 7 0.3138 8 3.7267 8 0.4184 7 0.6011 8 0.0866 6 0.3298 8 0.54 7 2.2014 6 1.419 7 0.3243 7 1.3299 7)
Average genome size in population (length): 150.844
Average program size in population (points): 151.844
Average percent parens in population: 0.007
Minimum age in population: 212.4887759032682
Maximum age in population: 216.4842810628846
Average age in population: 214.6140394015451
Median age in population: 214.6842394412927
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.962
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.962
Total error diversity:				 0.6
Error (vector) diversity:			 0.649
Behavioral diversity:				 0.65
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 547186137
--- Timings ---
Current time: 1529616336363 milliseconds
Total Time:         865.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.4 seconds, 26.7%
Fitness Testing:    499.9 seconds, 57.8%
Report:             134.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 89403.54179999993
Test mean error for best: 44.70177
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491735   
Correct output: -80.8416452312 | Program output: -56.0491735   
Correct output: -30.9193529897 | Program output: -78.0491735   
Correct output: -129.2709853231 | Program output: -106.0491735  
Correct output: -142.6109625327 | Program output: -88.0491735   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491735   
Correct output: -163.7806987108 | Program output: -114.0491735  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491735  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491735   
Correct output: -94.0867625621 | Program output: -113.0491735  
Correct output: -53.340003998  | Program output: -88.0491735   
Correct output: -171.739275996 | Program output: -126.0491735  
Correct output: -113.6467160746 | Program output: -106.0491735  
Correct output: -99.4921227055 | Program output: -64.0491735   
Correct output: -67.9651207486 | Program output: -63.0491735   
Correct output: -109.3549767957 | Program output: -122.0491735  
Correct output: 14.5017756451  | Program output: -81.0491735   
Correct output: -110.8403243704 | Program output: -56.0491735   
Correct output: -11.4606904356 | Program output: -64.0491735   
Correct output: -32.4173586228 | Program output: -52.0451735   
Correct output: -28.3791179266 | Program output: -107.0491735  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction -7} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_pop} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction integer_shove} {:instruction float_inc} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod integer_min tagged_947 float_rot float_tan integer_mod float_sin print_float float_yank -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_sub integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items -7 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_pop float_div integer_dec float_div print_float print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add integer_shove float_inc 18 integer_max 33 float_div integer_yank float_pop integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7925 10 47.1298 10 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 9 49.7315 9 7.2991 7 85.283 11 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 9 7.5975 9 35.4429 8 4.9159 9 12.6942 8 95.5509 11 54.7912 11 52.5885 8 19.6278 8 78.6701 10]
Total: 1176.8992
Mean: 23.537985
Genome size: 131
Size: 132
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 6903.242891400002
Median total errors in population: 1234.6967
Error averages by case: (254.35480009999932 8.504 273.55521590000177 10.022 276.85248039999965 10.927 273.5661087999998 10.616 297.5257288000008 11.065 178.5338532000003 9.843 239.59356189999826 9.52 297.26573689999833 9.859 292.7493834999985 9.438 168.81694420000056 8.546 307.57754339999923 11.893 171.5625550000016 9.772 264.48565589999913 9.738 266.7826733999984 10.93 275.0208736000002 10.022 290.3177987000022 9.414 262.71378600000156 9.964 279.97834179999955 9.957 258.31806739999945 9.208 263.98344819999943 10.147 314.5929469999996 11.003 295.5803985000009 10.591 284.63581920000235 9.382 261.2167935000003 9.496 303.7463760999981 10.059)
Error minima by case: (0.3814 6 0.7763 7 2.8692 8 0.2593 6 2.4352 7 0.4242 7 22.0127 6 0.7832 7 2.2316 7 0.2927 6 0.716 8 0.0647 8 1.6978 7 0.0756 7 4.6717 8 6.2743 7 0.366 7 0.5701 7 0.0866 6 0.3244 7 0.5294 8 2.2018 8 1.4385 7 0.3243 6 0.3289 6)
Average genome size in population (length): 150.192
Average program size in population (points): 151.192
Average percent parens in population: 0.007
Minimum age in population: 213.8779948475336
Maximum age in population: 217.7829729050336
Average age in population: 215.8959952150333
Median age in population: 215.9422379558251
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.952
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.608
Error (vector) diversity:			 0.651
Behavioral diversity:				 0.654
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 550941362
--- Timings ---
Current time: 1529616342002 milliseconds
Total Time:         871.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       232.8 seconds, 26.7%
Fitness Testing:    503.4 seconds, 57.8%
Report:             135.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 107606.69649999998
Test mean error for best: 53.80335
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491735   
Correct output: -80.8416452312 | Program output: -56.0461735   
Correct output: -30.9193529897 | Program output: -78.0491735   
Correct output: -129.2709853231 | Program output: -106.0491735  
Correct output: -142.6109625327 | Program output: -88.0491735   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491735   
Correct output: -163.7806987108 | Program output: -114.0491735  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491735  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491735   
Correct output: -94.0867625621 | Program output: -113.0491735  
Correct output: -53.340003998  | Program output: -88.0491735   
Correct output: -171.739275996 | Program output: -126.0491735  
Correct output: -113.6467160746 | Program output: -106.0491735  
Correct output: -99.4921227055 | Program output: -64.0491735   
Correct output: -67.9651207486 | Program output: -63.0491735   
Correct output: -109.3549767957 | Program output: -122.0491735  
Correct output: 14.5017756451  | Program output: -81.0491735   
Correct output: -110.8403243704 | Program output: -56.0461735   
Correct output: -11.4606904356 | Program output: -64.0491735   
Correct output: -32.4173586228 | Program output: -52.0421735   
Correct output: -28.3791179266 | Program output: -107.0491735  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction print_float} {:instruction float_sin} {:instruction tagged_281} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_rot print_float float_sin tagged_281 integer_rot integer_mult float_sin integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove integer_pop integer_dup integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_max integer_mod integer_yank integer_yank 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7955 9 47.1298 10 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 9 49.7315 9 7.2991 7 85.283 11 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 9 7.5975 9 35.4429 8 4.9159 9 12.6942 8 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 10]
Total: 1175.9022000000002
Mean: 23.518044
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7571.039763200004
Median total errors in population: 1232.7368000000001
Error averages by case: (284.43079160000036 8.673 296.2912261000016 10.204 310.47002830000025 10.999 302.41561839999986 10.699 321.55520470000056 11.21 194.09398410000043 10.032 260.2250486999981 9.386 327.26426519999717 9.984 321.48470739999834 9.718 186.6629999000006 8.692 338.253179299999 11.934 188.38535380000147 9.791 292.57152639999964 9.862 297.63463679999904 11.039 303.0517457000007 10.183 319.23960520000264 9.635 291.9097230000002 10.097 307.5398909 9.956 284.83771400000023 9.398 293.78275820000084 10.1 346.26160089999917 11.094 316.5668345000007 10.787 314.02947100000245 9.575 284.3517482000011 9.571 334.7101008999974 10.401)
Error minima by case: (0.3901 6 0.7655 7 3.867 8 0.7464 8 2.4342 8 1.4231 8 22.013 6 1.7871 6 1.7662 7 0.2947 6 1.7138 8 0.0956 6 1.2903 7 0.0251 7 4.7017 8 2.2738 6 0.4185 7 1.4029 7 0.0866 6 0.3318 8 8.4846 7 2.2008 7 1.4433 7 0.3256 7 1.3268 7)
Average genome size in population (length): 146.978
Average program size in population (points): 147.978
Average percent parens in population: 0.007
Minimum age in population: 215.2469832410495
Maximum age in population: 218.9530342896924
Average age in population: 217.2321072731604
Median age in population: 217.2470793378202
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.585
Error (vector) diversity:			 0.643
Behavioral diversity:				 0.649
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 554616337
--- Timings ---
Current time: 1529616347764 milliseconds
Total Time:         877.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.3 seconds, 26.7%
Fitness Testing:    506.8 seconds, 57.8%
Report:             135.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 107606.69649999998
Test mean error for best: 53.80335
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491735   
Correct output: -80.8416452312 | Program output: -56.0461735   
Correct output: -30.9193529897 | Program output: -78.0491735   
Correct output: -129.2709853231 | Program output: -106.0491735  
Correct output: -142.6109625327 | Program output: -88.0491735   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491735   
Correct output: -163.7806987108 | Program output: -114.0491735  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491735  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491735   
Correct output: -94.0867625621 | Program output: -113.0491735  
Correct output: -53.340003998  | Program output: -88.0491735   
Correct output: -171.739275996 | Program output: -126.0491735  
Correct output: -113.6467160746 | Program output: -106.0491735  
Correct output: -99.4921227055 | Program output: -64.0491735   
Correct output: -67.9651207486 | Program output: -63.0491735   
Correct output: -109.3549767957 | Program output: -122.0491735  
Correct output: 14.5017756451  | Program output: -81.0491735   
Correct output: -110.8403243704 | Program output: -56.0461735   
Correct output: -11.4606904356 | Program output: -64.0491735   
Correct output: -32.4173586228 | Program output: -52.0421735   
Correct output: -28.3791179266 | Program output: -107.0491735  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction print_float} {:instruction float_sin} {:instruction tagged_281} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_div} {:instruction print_integer} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 18} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_947 float_rot print_float float_sin tagged_281 integer_rot integer_mult float_sin integer_div print_integer float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove integer_pop integer_dup integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 18 integer_swap integer_max float_div float_div integer_yank in2 integer_yank integer_max integer_mod integer_yank integer_yank 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 7 24.7955 9 47.1298 10 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 9 49.7315 9 7.2991 7 85.283 11 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 9 7.5975 9 35.4429 8 4.9159 9 12.6942 8 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 10]
Total: 1175.9022000000002
Mean: 23.518044
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8009.660834100004
Median total errors in population: 1234.1839499999999
Error averages by case: (305.8534173000005 8.784 319.6719722000017 10.286 331.3512916999999 10.968 320.85012749999953 10.627 343.3990729000013 11.214 196.84533030000014 10.03 262.9247818999982 9.104 345.63377559999697 10.072 339.4386399999979 9.882 191.25556260000099 8.961 355.076810799999 11.825 192.4841287000015 9.688 312.66506130000016 9.843 315.84080289999946 11.06 322.6375764000005 10.278 338.3180717000024 9.839 310.98526639999983 10.195 328.7389793000009 9.783 306.9023096000005 9.622 313.94567840000104 9.941 361.9748088999978 10.995 340.2836919000005 10.922 334.8304331000031 9.708 313.116049100001 9.519 350.809193599997 10.682)
Error minima by case: (0.3814 6 0.7655 6 4.886 8 0.1838 7 6.517 7 0.5514 6 22.0133 6 0.2874 6 1.7687 6 0.2927 6 1.255 8 0.0446 6 1.6588 5 0.0754 6 4.6717 8 2.2739 6 0.4185 6 0.6041 6 0.9069 6 0.3119 6 1.4844 6 6.7503 6 0.4395 7 0.3239 6 2.3458 7)
Average genome size in population (length): 141.728
Average program size in population (points): 142.728
Average percent parens in population: 0.007
Minimum age in population: 216.2469832410495
Maximum age in population: 220.7981665843377
Average age in population: 218.5523138912987
Median age in population: 218.6251280821711
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.602
Error (vector) diversity:			 0.665
Behavioral diversity:				 0.666
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 558159737
--- Timings ---
Current time: 1529616353244 milliseconds
Total Time:         882.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       235.6 seconds, 26.7%
Fitness Testing:    510.1 seconds, 57.8%
Report:             136.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 108383.25929999996
Test mean error for best: 54.19163
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0491736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361761   
Correct output: 119.1092560212 | Program output: 29.09060115   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673792    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.07545100    
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0491736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0481736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_rot} {:instruction float_tan} {:instruction float_max} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction integer_min} {:instruction float_div} {:instruction integer_min} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction float_shove} {:instruction integer_shove} {:instruction 18} {:instruction float_mult} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min float_rot float_tan float_max float_cos integer_fromfloat float_dup float_tan tagged_947 float_dec integer_min float_div integer_min float_sub float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 float_shove integer_shove 18 float_mult integer_max float_div float_div integer_yank integer_inc integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 6 85.283 12 7.0553 10 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 9]
Total: 1175.9022
Mean: 23.518044
Genome size: 126
Size: 127
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8374.5639975
Median total errors in population: 1239.7395499999998
Error averages by case: (316.20342320000134 8.958 330.78936790000114 10.47 343.409074699999 11.146 336.5355205999997 10.758 353.075974400001 11.345 222.01503740000058 10.16 290.3787804999984 8.911 358.22225789999675 10.222 353.8225417999983 10.191 217.7070031000011 8.948 368.04563339999874 11.857 218.25024610000176 9.495 326.2418847000001 9.9 328.56642250000004 11.173 332.78083380000055 10.44 350.56708030000215 10.111 326.4656929999993 10.344 341.80055700000054 9.805 318.6367201000004 9.883 325.1706882000013 9.907 375.11072579999814 11.061 351.1163724999998 11.184 346.354804000003 9.811 321.09239510000083 9.55 365.5909594999972 10.984)
Error minima by case: (0.3815 6 0.7655 8 6.1258 8 0.2258 7 6.518 8 0.4152 7 22.0191 6 1.7926 7 1.7688 7 0.2926 6 2.7108 8 0.0956 7 1.7132 7 0.0756 7 4.6617 8 1.7256 7 0.4183 7 0.6041 8 0.9069 7 0.3317 7 1.4846 7 6.1597 8 0.4425 7 0.324 6 4.3299 7)
Average genome size in population (length): 137.457
Average program size in population (points): 138.457
Average percent parens in population: 0.007
Minimum age in population: 217.2469832410495
Maximum age in population: 222.0952142195709
Average age in population: 219.8945908139904
Median age in population: 219.9216686025495
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.588
Error (vector) diversity:			 0.651
Behavioral diversity:				 0.657
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 561596487
--- Timings ---
Current time: 1529616358922 milliseconds
Total Time:         888.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.0 seconds, 26.7%
Fitness Testing:    513.5 seconds, 57.8%
Report:             137.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 108383.25929999996
Test mean error for best: 54.19163
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0491736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361761   
Correct output: 119.1092560212 | Program output: 29.09060115   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673792    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.07545100    
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0491736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0481736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_rot} {:instruction float_tan} {:instruction float_max} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_tan} {:instruction tagged_947} {:instruction float_dec} {:instruction integer_min} {:instruction float_div} {:instruction integer_min} {:instruction float_sub} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction float_shove} {:instruction integer_shove} {:instruction 18} {:instruction float_mult} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min float_rot float_tan float_max float_cos integer_fromfloat float_dup float_tan tagged_947 float_dec integer_min float_div integer_min float_sub float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 float_shove integer_shove 18 float_mult integer_max float_div float_div integer_yank integer_inc integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 6 85.283 12 7.0553 10 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 9]
Total: 1175.9022
Mean: 23.518044
Genome size: 126
Size: 127
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8264.880258800004
Median total errors in population: 1239.7424999999996
Error averages by case: (309.60982630000115 8.912 325.7296058000003 10.482 336.9029104999984 11.092 328.7276956000001 10.702 349.2324080000014 11.336 227.26495780000056 10.082 292.2768073999985 8.707 353.287940199997 10.213 347.0103298999985 10.181 220.84788680000116 8.905 362.6207795999985 11.76 220.53122430000147 9.254 318.8511972 9.853 322.8517918999994 11.141 330.14317910000045 10.445 344.82003800000234 10.18 318.73824949999914 10.306 335.1478983000006 9.639 314.24645500000054 9.946 320.11733880000133 9.746 367.6472039999979 11.051 346.1905690999998 11.203 340.66891690000307 9.792 317.6213767000009 9.52 358.3296720999978 11.016)
Error minima by case: (0.3903 6 0.7655 7 3.8702 8 0.8262 8 2.5392 7 1.4242 7 14.0186 6 1.787 7 2.291 7 0.2926 6 1.717 8 0.8984 7 1.7147 7 0.035 7 4.6717 7 5.7262 7 0.415 7 3.3999 6 0.9034 7 0.3318 7 12.48 7 2.7686 8 0.5615 7 0.3256 7 1.3299 8)
Average genome size in population (length): 134.802
Average program size in population (points): 135.802
Average percent parens in population: 0.007
Minimum age in population: 219.1036200841602
Maximum age in population: 223.2219578974592
Average age in population: 221.2541646230442
Median age in population: 221.3078309149303
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.951
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.951
Total error diversity:				 0.538
Error (vector) diversity:			 0.614
Behavioral diversity:				 0.615
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 564966712
--- Timings ---
Current time: 1529616364407 milliseconds
Total Time:         893.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       238.5 seconds, 26.7%
Fitness Testing:    516.7 seconds, 57.8%
Report:             138.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 108396.25939999997
Test mean error for best: 54.19813
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0491736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0491736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0481736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float tagged_947 print_float float_sin integer_fromfloat tagged_947 integer_flush float_sin integer_sub float_cos float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_sub integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 9]
Total: 1174.9022
Mean: 23.498043
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8867.963764400001
Median total errors in population: 1239.4596499999998
Error averages by case: (341.45042229999984 8.886 357.92913629999885 10.49 368.6919604999987 10.999 360.49682769999976 10.596 379.4604717000037 11.291 213.8987760000009 10.077 277.79777929999807 8.658 383.6234958999966 10.139 378.0962617999979 10.246 207.1505827000014 8.895 393.59601229999896 11.689 208.31127180000175 9.268 349.9978219000017 9.827 354.3412365000015 11.099 361.61152109999875 10.385 375.77722420000214 10.14 350.83801479999715 10.28 367.06599480000284 9.603 345.9581164000025 9.938 351.51729230000296 9.723 397.4223151999958 10.971 377.50830209999765 11.235 372.53883280000304 9.758 349.74600669999927 9.466 388.45208729999734 11.027)
Error minima by case: (0.3903 6 0.7655 7 5.9076 8 0.7742 7 2.5973 7 0.5818 7 22.0127 5 0.2408 7 2.2336 7 0.289 6 3.7544 8 0.0956 6 1.2933 7 0.0746 6 4.6717 8 6.276 7 0.385 8 0.5891 7 0.9069 6 0.3132 6 2.4666 7 2.7552 8 1.449 8 0.3239 7 3.3674 8)
Average genome size in population (length): 133.227
Average program size in population (points): 134.227
Average percent parens in population: 0.007
Minimum age in population: 220.2266200625046
Maximum age in population: 224.4885880218572
Average age in population: 222.5712040743357
Median age in population: 222.6162014037823
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.549
Error (vector) diversity:			 0.616
Behavioral diversity:				 0.621
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 568297512
--- Timings ---
Current time: 1529616369775 milliseconds
Total Time:         898.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.9 seconds, 26.7%
Fitness Testing:    519.8 seconds, 57.8%
Report:             139.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 108396.25939999997
Test mean error for best: 54.19813
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0491736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0491736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0481736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float tagged_947 print_float float_sin integer_fromfloat tagged_947 integer_flush float_sin integer_sub float_cos float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_sub integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 9]
Total: 1174.9022
Mean: 23.498043
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8036.315775800001
Median total errors in population: 1235.9092
Error averages by case: (301.60776420000093 8.737 318.7396712000006 10.281 332.2000951999986 10.756 322.11967009999984 10.506 342.70519080000184 11.205 201.80617640000008 9.922 273.7678948999983 8.396 347.3764614999971 9.878 340.63491839999836 10.097 199.0942630000012 8.535 356.9801631999991 11.415 198.14711560000143 9.041 312.83725809999976 9.716 316.2698002999996 10.959 324.84202990000017 10.175 338.4204348000023 10.038 312.02915319999954 10.14 328.36604760000085 9.402 305.40421130000044 9.83 313.4209230000014 9.517 362.701888599998 10.873 339.3687209999996 11.091 334.91902500000253 9.491 309.76614480000035 9.323 352.72475369999796 10.742)
Error minima by case: (0.3893 6 0.2055 7 6.8776 8 0.2258 8 10.5998 8 0.5648 7 22.0632 6 0.2148 7 5.767 7 0.2926 6 6.7488 8 0.8984 6 1.7147 6 0.045 7 4.6712 8 1.7256 8 0.4185 7 0.6041 6 0.0766 6 0.3288 7 1.5224 7 6.1597 8 1.419 7 0.3256 7 11.6681 8)
Average genome size in population (length): 133.033
Average program size in population (points): 134.033
Average percent parens in population: 0.007
Minimum age in population: 221.4660153314716
Maximum age in population: 225.6763315492887
Average age in population: 223.9331516421158
Median age in population: 223.9568305588074
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.552
Error (vector) diversity:			 0.622
Behavioral diversity:				 0.624
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 571623412
--- Timings ---
Current time: 1529616375123 milliseconds
Total Time:         904.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.4 seconds, 26.7%
Fitness Testing:    522.9 seconds, 57.8%
Report:             140.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 108396.25939999997
Test mean error for best: 54.19813
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0491736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0491736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0481736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float tagged_947 print_float float_sin integer_fromfloat tagged_947 integer_flush float_sin integer_sub float_cos float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_sub integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 9]
Total: 1174.9022
Mean: 23.498043
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7915.215403100003
Median total errors in population: 1215.3393999999998
Error averages by case: (302.12443870000106 8.654 316.3904161000003 10.242 328.23574089999846 10.839 317.03200579999975 10.501 338.1375523000017 11.217 193.28650790000026 9.899 254.80420189999802 8.421 345.1479603999967 9.891 335.72487269999846 10.035 185.9218373000009 8.62 353.62812549999893 11.511 184.36115910000174 9.178 309.08757249999985 9.683 313.0322398999998 11.026 320.78009000000026 10.19 333.2150869000023 9.923 306.93184079999946 10.036 324.826539500001 9.393 304.7655016000009 9.772 309.00632300000126 9.456 360.9295498999975 10.894 337.12489330000005 11.118 332.318382600003 9.523 308.2167471999994 9.301 350.08081729999765 10.782)
Error minima by case: (0.3758 6 0.7775 7 3.0924 8 0.2258 7 6.4372 7 0.4242 8 22.0187 6 0.2408 7 9.759 7 0.3026 6 3.714 8 0.1016 6 1.7147 7 0.005 7 0.3188 7 5.7175 7 0.395 8 1.4049 6 0.9034 7 0.3132 7 1.46 7 6.2078 8 1.419 8 0.3182 7 3.3269 7)
Average genome size in population (length): 132.667
Average program size in population (points): 133.667
Average percent parens in population: 0.008
Minimum age in population: 222.8403339881419
Maximum age in population: 227.0112584499685
Average age in population: 225.2640109780816
Median age in population: 225.3191166564769
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.937
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.937
Total error diversity:				 0.534
Error (vector) diversity:			 0.604
Behavioral diversity:				 0.61
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 574940237
--- Timings ---
Current time: 1529616380505 milliseconds
Total Time:         909.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       242.8 seconds, 26.7%
Fitness Testing:    526.0 seconds, 57.8%
Report:             140.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 108396.25939999997
Test mean error for best: 54.19813
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0491736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0491736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0481736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float tagged_947 print_float float_sin integer_fromfloat tagged_947 integer_flush float_sin integer_sub float_cos float_max integer_fromfloat integer_fromfloat print_float -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_sub integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items in2 float_sin integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7925 10 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7912 11 52.5885 8 19.6308 8 78.6701 9]
Total: 1174.9022
Mean: 23.498043
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8149.4677711
Median total errors in population: 1236.9071999999999
Error averages by case: (309.7288047000008 8.592 325.96352400000075 10.216 337.77566769999845 10.948 329.0249657999998 10.501 349.67068080000155 11.23 198.43713000000037 10.025 261.72651899999795 8.589 354.49509149999716 9.832 347.4286188999983 10.086 193.73360570000082 8.713 362.72230939999906 11.628 193.00607380000142 9.367 320.8651418000002 9.701 323.2683043999999 10.926 329.7801778000003 10.196 345.1660986000023 9.9 318.9660311999993 9.999 334.56523940000096 9.52 313.47231270000134 9.698 320.39440420000113 9.603 368.6972382999977 10.862 346.5679564000001 11.16 339.63149980000264 9.562 315.1350358999997 9.32 358.4043392999979 10.667)
Error minima by case: (0.3903 6 0.1701 7 0.8662 8 0.2256 7 20.5228 7 1.5818 7 22.0132 6 0.2168 7 15.6925 7 0.2927 5 1.255 8 1.0633 7 1.6532 7 0.035 7 4.32 8 11.6511 6 0.385 7 1.4039 7 0.9059 7 0.3318 8 3.4486 7 20.7872 7 0.4395 7 0.3238 6 1.6741 7)
Average genome size in population (length): 132.213
Average program size in population (points): 133.213
Average percent parens in population: 0.008
Minimum age in population: 223.8403339881419
Maximum age in population: 228.7315347452525
Average age in population: 226.6103860436615
Median age in population: 226.6114673035324
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.583
Error (vector) diversity:			 0.646
Behavioral diversity:				 0.651
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 578245912
--- Timings ---
Current time: 1529616385895 milliseconds
Total Time:         915.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.1 seconds, 26.7%
Fitness Testing:    529.3 seconds, 57.8%
Report:             141.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod integer_min tagged_947 float_rot float_tan integer_mod float_sin print_float float_yank integer_mult float_sin integer_sub float_cos float_max integer_fromfloat integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 131
Size: 132
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8249.436068700003
Median total errors in population: 1234.7818499999998
Error averages by case: (313.844699600001 8.49 328.57905010000053 10.259 339.2874433999985 10.967 330.93362509999963 10.489 351.19531790000195 11.197 208.8956468000007 9.993 275.5515164999983 8.515 355.81182419999635 9.638 348.9689890999981 10.104 205.61622730000124 8.523 365.1975013999987 11.674 203.3299170000016 9.45 321.9644410000005 9.731 325.79088899999954 10.926 332.90151519999966 10.179 346.71228090000227 9.768 321.105373199999 9.877 337.2587061000012 9.716 316.68339930000127 9.564 322.88699630000156 9.812 371.22233499999754 10.871 348.84171759999975 11.152 343.09728920000316 9.509 322.78323709999916 9.317 360.8221303999971 10.433)
Error minima by case: (0.3903 5 0.7655 5 5.1136 8 0.2258 6 5.4008 6 0.5778 5 6.9368 5 1.7782 7 9.7678 5 0.2926 5 1.255 9 0.0347 5 0.2893 4 0.9264 5 0.6812 8 5.7264 5 0.4183 6 0.5196 5 0.4888 5 0.3318 5 0.5114 5 8.7422 5 0.4395 7 0.3256 5 3.3569 7)
Average genome size in population (length): 131.062
Average program size in population (points): 132.062
Average percent parens in population: 0.008
Minimum age in population: 225.6366454915886
Maximum age in population: 229.9525893453746
Average age in population: 227.8879603916277
Median age in population: 227.9434177707092
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.934
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.934
Total error diversity:				 0.569
Error (vector) diversity:			 0.643
Behavioral diversity:				 0.645
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 581522587
--- Timings ---
Current time: 1529616391134 milliseconds
Total Time:         920.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       245.5 seconds, 26.7%
Fitness Testing:    532.3 seconds, 57.8%
Report:             142.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod integer_min tagged_947 float_rot float_tan integer_mod float_sin print_float float_yank integer_mult float_sin integer_sub float_cos float_max integer_fromfloat integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 131
Size: 132
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7569.499357400001
Median total errors in population: 1208.3419999999999
Error averages by case: (282.733166200002 8.189 296.41140360000077 10.217 312.00179939999845 11.103 302.8841840999998 10.464 323.3969995000013 11.152 190.39650280000055 9.868 256.4037661999976 8.483 328.4802671999967 9.489 321.6582498999981 10.048 188.22748440000103 8.58 338.0809497999989 11.861 188.0521031000015 9.582 294.6810331999992 9.656 297.3532503999992 10.933 302.0624319000006 10.122 318.4502708000025 9.535 292.58180129999977 9.618 308.8206282000006 9.801 285.5194437000002 9.295 294.2908858000005 9.895 343.8990322999977 10.911 317.61795359999996 11.068 314.318756100003 9.426 288.81265120000035 9.229 333.52934269999764 10.31)
Error minima by case: (0.3758 6 0.7775 7 0.1258 8 0.2258 7 2.5992 7 0.5808 7 6.9873 6 1.7562 7 2.2336 7 0.2926 5 2.279 9 0.8853 6 1.7147 7 0.0756 7 0.6617 8 1.7257 8 0.4183 6 0.5891 6 0.0881 7 0.3317 7 1.5274 8 2.7552 8 0.429 7 0.3182 6 2.6661 7)
Average genome size in population (length): 129.439
Average program size in population (points): 130.439
Average percent parens in population: 0.008
Minimum age in population: 226.9804203214504
Maximum age in population: 231.1367000089987
Average age in population: 229.2029891995317
Median age in population: 229.2451221029309
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.923
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.923
Total error diversity:				 0.573
Error (vector) diversity:			 0.634
Behavioral diversity:				 0.639
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 584758637
--- Timings ---
Current time: 1529616396383 milliseconds
Total Time:         925.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       247.0 seconds, 26.7%
Fitness Testing:    535.4 seconds, 57.8%
Report:             143.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min float_rot float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add integer_add print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 132
Size: 133
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8465.863987600002
Median total errors in population: 1229.0690999999997
Error averages by case: (326.6249909000009 8.046 339.5967549000007 10.437 351.2256790999986 11.226 339.9549347999997 10.532 360.5697428000019 11.292 208.89395660000045 10.083 276.81524449999796 8.629 366.0041893999967 9.333 358.08667309999805 10.107 202.84480170000114 8.587 376.1007995999987 12.108 202.75265800000167 9.638 330.4496292000003 9.714 335.1765648999998 11.022 343.42585980000024 10.205 355.6151362000024 9.462 330.15271089999936 9.546 346.8660577000009 10.076 328.34477210000125 9.204 333.0026868000018 10.096 382.32033849999743 11.007 359.81214129999995 11.224 354.33467850000295 9.507 334.6081695 9.357 371.7058167999975 10.141)
Error minima by case: (0.3753 6 0.8243 8 6.9076 8 0.2293 6 5.4308 7 0.4242 8 2.0967 6 2.1974 7 17.7694 7 0.2826 6 2.2442 8 0.0391 6 1.7132 7 0.0756 8 0.7022 8 13.728 7 0.4185 6 0.5496 8 0.906 6 0.3132 7 8.43 8 22.7702 9 1.449 7 0.3182 7 3.3618 7)
Average genome size in population (length): 127.714
Average program size in population (points): 128.714
Average percent parens in population: 0.008
Minimum age in population: 227.9804203214504
Maximum age in population: 232.6504485294971
Average age in population: 230.4757128952709
Median age in population: 230.4933051874839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.922
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.922
Total error diversity:				 0.535
Error (vector) diversity:			 0.618
Behavioral diversity:				 0.619
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 587951787
--- Timings ---
Current time: 1529616401673 milliseconds
Total Time:         930.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       248.4 seconds, 26.7%
Fitness Testing:    538.5 seconds, 57.8%
Report:             143.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min float_rot float_dup_items integer_add float_inc float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add integer_add print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 132
Size: 133
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8160.338486600002
Median total errors in population: 1227.7122499999996
Error averages by case: (307.4342506000009 8.121 322.8835884000003 10.474 334.7221060999984 11.347 325.65628019999934 10.63 346.55595180000194 11.358 213.70193140000094 10.249 281.77202689999785 9.024 349.48216769999686 9.376 345.107402999998 10.206 214.49064210000128 9.26 359.87522709999894 12.244 213.15575630000185 9.805 316.45923830000055 9.866 319.97424950000016 11.084 326.3449183 10.284 342.75191690000236 9.466 315.445443299999 9.555 331.6190948000013 10.249 308.3571183000011 9.283 317.0090453000019 10.311 365.0350078999973 11.082 343.57826049999954 11.275 335.6299859000031 9.576 315.0689495 9.461 354.5509264999975 10.091)
Error minima by case: (0.3758 6 0.7655 5 5.8782 9 0.2258 4 1.5738 5 0.4229 6 22.0177 5 1.7552 7 3.2565 5 0.2951 6 3.725 8 0.9007 5 1.7148 6 0.055 5 4.6717 8 5.7264 3 0.395 4 0.6041 6 0.9078 6 0.3318 5 9.4866 5 1.8032 4 0.5625 7 0.3256 5 3.3379 7)
Average genome size in population (length): 126.579
Average program size in population (points): 127.579
Average percent parens in population: 0.008
Minimum age in population: 229.3626247293039
Maximum age in population: 233.6696252542235
Average age in population: 231.7630008645518
Median age in population: 231.7724796388905
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.928
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.928
Total error diversity:				 0.52
Error (vector) diversity:			 0.586
Behavioral diversity:				 0.587
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 591116437
--- Timings ---
Current time: 1529616406829 milliseconds
Total Time:         936.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       249.8 seconds, 26.7%
Fitness Testing:    541.5 seconds, 57.8%
Report:             144.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction 18} {:instruction integer_max} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction float_yank} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod integer_min tagged_947 float_rot float_tan integer_mod float_sin print_float float_yank integer_mult float_sin integer_sub float_cos float_max integer_fromfloat integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_max 33 float_div integer_yank 18 integer_max integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank float_yank 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7920.954502200002
Median total errors in population: 1227.3381999999997
Error averages by case: (306.85397850000174 7.847 320.5613450000011 10.29 329.90559989999844 11.267 322.7518973999996 10.496 343.63505860000123 11.21 172.23775389999972 10.02 243.41760549999802 8.676 344.61822389999696 9.121 341.4568213999984 10.103 169.09137160000063 8.907 354.8091030999988 12.182 169.5183189000015 9.449 314.27889169999963 9.747 316.8598921999989 10.914 322.911170200001 10.098 339.1483139000023 9.276 312.4049287 9.37 328.2786664000006 10.153 307.76786920000046 9.096 313.98699370000094 10.161 360.56558059999776 10.97 341.3397419000002 11.143 331.70337750000283 9.402 313.34029840000073 9.295 350.41370009999764 9.905)
Error minima by case: (0.3883 6 0.7655 7 5.1298 9 0.7408 7 2.4382 7 2.5828 7 22.0632 6 0.2392 6 7.2685 8 0.2927 6 3.717 9 0.0956 6 1.7147 7 0.025 7 4.6717 8 5.7264 7 0.385 7 0.5891 8 0.9078 6 0.3318 7 0.5399 7 2.2088 9 0.4433 7 0.3256 7 5.3374 7)
Average genome size in population (length): 126.952
Average program size in population (points): 127.952
Average percent parens in population: 0.008
Minimum age in population: 230.7044097829321
Maximum age in population: 235.0118073784888
Average age in population: 233.0899700233766
Median age in population: 233.1323798571313
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.921
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.921
Total error diversity:				 0.53
Error (vector) diversity:			 0.58
Behavioral diversity:				 0.583
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 594290487
--- Timings ---
Current time: 1529616412288 milliseconds
Total Time:         941.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       251.2 seconds, 26.7%
Fitness Testing:    544.7 seconds, 57.9%
Report:             145.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction print_float} {:instruction float_sin} {:instruction tagged_281} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_sin} {:instruction float_inc} {:instruction print_integer} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_max} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_min tagged_947 float_rot print_float float_sin tagged_281 integer_rot integer_mult float_sin float_inc print_integer float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup float_max print_float integer_stackdepth integer_shove float_flush integer_dup integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7809.826746700002
Median total errors in population: 1228.7368000000001
Error averages by case: (298.0577825000013 7.825 312.58694920000033 10.218 324.9066528999985 11.234 315.83684249999976 10.446 336.7027780000015 11.203 177.81713290000033 9.869 246.90330579999792 8.707 341.7515814999969 9.082 334.60438139999854 10.062 174.24272040000105 8.919 351.56002959999864 12.154 172.50867030000143 9.309 306.3152848999995 9.68 309.25348769999965 10.927 318.5027752999997 10.066 332.45564350000257 9.237 305.4793638999998 9.291 322.2618750000007 10.159 300.8029623000006 9.034 307.39118680000104 10.16 357.4440625999982 10.973 333.44199940000004 11.107 328.75709320000254 9.352 304.9396371999999 9.282 347.0895478999974 9.917)
Error minima by case: (0.3815 5 0.7653 7 3.8776 8 0.2188 7 10.5998 7 0.5648 7 22.0632 6 1.2278 6 5.767 8 0.3226 6 1.7244 9 0.1016 7 1.7147 7 0.9274 8 4.6733 8 1.7256 6 0.4185 7 3.4781 8 0.0911 6 0.3318 7 2.5156 7 10.7612 8 5.4155 7 0.3256 7 1.3374 7)
Average genome size in population (length): 127.878
Average program size in population (points): 128.878
Average percent parens in population: 0.008
Minimum age in population: 232.2762626045458
Maximum age in population: 236.2682303026622
Average age in population: 234.4374088025516
Median age in population: 234.4530007389801
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.529
Error (vector) diversity:			 0.58
Behavioral diversity:				 0.585
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 597487712
--- Timings ---
Current time: 1529616417559 milliseconds
Total Time:         946.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       252.6 seconds, 26.7%
Fitness Testing:    547.8 seconds, 57.9%
Report:             146.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min float_rot float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_max 33 float_div integer_yank float_pop float_add integer_add integer_dec float_sub print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8008.765204600002
Median total errors in population: 1227.6734499999998
Error averages by case: (305.87400730000155 7.793 318.08668960000125 10.031 332.20116579999865 11.222 323.7952136999996 10.412 344.425014900001 11.147 192.28010720000034 9.892 258.5462725999978 8.524 348.2271182999964 9.078 342.529191899998 10.001 185.83258780000097 8.692 357.8605650999988 12.14 186.44492260000143 9.167 315.3046942999994 9.651 319.58476509999934 10.927 325.31819260000066 10.03 339.3650919000027 9.199 313.6860221000002 9.288 327.9358223000003 10.098 307.73005350000034 8.988 314.6794477000008 10.127 362.5575289999978 10.934 338.98927440000097 11.074 333.89749360000314 9.302 312.26798719999925 9.251 354.46897409999707 9.909)
Error minima by case: (0.3658 5 0.7655 7 3.8702 8 0.2258 6 5.4008 7 1.4182 7 6.9368 6 1.2374 7 1.7667 7 0.2826 6 1.717 9 0.9044 6 1.6558 7 0.0756 7 4.7052 8 2.2752 7 0.4185 7 0.5196 8 0.9079 6 0.3318 7 0.4905 7 6.7582 8 0.4435 7 0.3256 6 1.3299 7)
Average genome size in population (length): 129.056
Average program size in population (points): 130.056
Average percent parens in population: 0.008
Minimum age in population: 233.7257253588198
Maximum age in population: 237.9637003333444
Average age in population: 235.7299436427518
Median age in population: 235.7485652258265
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.515
Error (vector) diversity:			 0.578
Behavioral diversity:				 0.58
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 600714112
--- Timings ---
Current time: 1529616423008 milliseconds
Total Time:         952.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       254.0 seconds, 26.7%
Fitness Testing:    550.9 seconds, 57.9%
Report:             147.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction tagged_947} {:instruction print_float} {:instruction float_sin} {:instruction float_dup} {:instruction tagged_947} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_pop} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float tagged_947 print_float float_sin float_dup tagged_947 integer_flush float_sin integer_pop float_cos float_max integer_fromfloat integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc float_swap integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_yankdup integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 125
Size: 126
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8490.337231000001
Median total errors in population: 1233.85905
Error averages by case: (332.61634670000035 7.776 344.0499768000008 9.91 358.27481949999867 11.138 351.1076846999993 10.361 370.2563447000029 11.104 174.42945260000013 9.698 238.80435169999768 8.152 376.09686649999634 8.996 366.83047679999777 9.932 167.89932590000097 8.343 383.28489039999903 12.015 168.26275760000178 8.821 342.7158585000008 9.568 344.4156101000006 10.845 353.29743599999915 9.959 363.6622341000023 9.151 341.5318841999985 9.209 354.54900410000164 10.026 337.0072856000021 8.926 339.65741570000216 10.107 391.7165113999965 10.87 363.9188505000007 11.0 360.8596750000034 9.253 341.6453877999984 9.206 379.29278409999716 9.788)
Error minima by case: (0.3753 6 0.7655 8 6.1224 8 0.8262 7 2.5973 7 0.5518 7 22.0173 6 1.2408 7 2.2346 7 0.2826 6 4.709 9 1.0646 6 1.7147 7 0.0754 7 0.7017 8 0.2872 7 0.4184 7 0.6042 8 0.9089 6 0.3318 7 6.4826 8 2.8299 8 1.419 7 0.3256 6 3.3374 7)
Average genome size in population (length): 129.996
Average program size in population (points): 130.996
Average percent parens in population: 0.008
Minimum age in population: 235.0104821463563
Maximum age in population: 239.5982203459142
Average age in population: 237.0706412480092
Median age in population: 237.0789859655907
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.499
Error (vector) diversity:			 0.556
Behavioral diversity:				 0.56
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 603964162
--- Timings ---
Current time: 1529616428412 milliseconds
Total Time:         957.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.5 seconds, 26.7%
Fitness Testing:    554.0 seconds, 57.9%
Report:             148.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 107622.7766
Test mean error for best: 53.81139
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_dec} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_mult} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_dup} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min float_rot float_dup_items integer_add float_inc float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_dec integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_mult integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 integer_rot integer_yank float_pop float_add integer_dec float_sub print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank integer_sub integer_yank integer_max integer_mod integer_dup integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 129
Size: 130
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7947.079320100005
Median total errors in population: 1236.297
Error averages by case: (304.44822430000124 7.907 319.91646910000094 9.976 331.9183667999984 11.192 325.7215025999997 10.394 346.09637950000115 11.105 175.01628679999993 9.776 239.6617036999982 8.346 346.8287033999965 9.079 344.29826799999825 10.048 169.89588660000084 8.548 357.2814208999987 12.057 168.79292360000142 9.06 316.1592555999997 9.596 319.1044729999996 10.796 326.3588574000005 10.039 342.22645250000215 9.272 315.53462459999923 9.322 327.6283906000003 10.092 308.3097359000006 9.002 316.62217990000084 10.115 363.2001741999983 10.882 340.55827820000064 11.006 331.6095364000032 9.387 310.725419899998 9.276 352.9828065999974 9.91)
Error minima by case: (0.3811 4 0.7655 4 3.8702 8 0.8102 5 10.5998 5 0.5648 4 6.0187 5 1.2408 6 5.767 4 0.2926 6 1.255 9 0.0933 4 0.7117 3 0.035 4 0.6717 8 1.7256 4 0.4184 5 3.3999 4 0.9079 4 0.3317 4 8.4746 4 10.7612 4 0.4395 7 0.3256 4 1.3299 7)
Average genome size in population (length): 130.65
Average program size in population (points): 131.65
Average percent parens in population: 0.008
Minimum age in population: 236.0755705998033
Maximum age in population: 240.6078097988711
Average age in population: 238.4657790613408
Median age in population: 238.4947872135071
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.523
Error (vector) diversity:			 0.568
Behavioral diversity:				 0.57
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 607230437
--- Timings ---
Current time: 1529616433622 milliseconds
Total Time:         962.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       256.9 seconds, 26.7%
Fitness Testing:    557.0 seconds, 57.9%
Report:             148.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction tagged_947} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_inc} {:instruction integer_add} {:instruction tagged_309} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction tagged_965} {:instruction print_float} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction tagged_947} {:instruction float_dup_times} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction integer_pop} {:instruction float_mod} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float tagged_947 integer_min tagged_947 float_rot float_inc integer_add tagged_309 float_sin integer_fromfloat integer_fromfloat integer_min print_float tagged_965 print_float float_sin integer_fromfloat tagged_947 float_dup_times integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove integer_pop float_mod integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7669.040147800006
Median total errors in population: 1213.7759
Error averages by case: (294.20231300000165 7.773 312.1389373000012 9.882 321.03125819999843 11.146 310.9673068999998 10.395 332.2614414000015 11.101 163.74631670000002 9.783 231.8842366999977 8.345 337.27734399999656 9.057 329.7478222999983 9.988 159.77575810000096 8.491 346.90001719999873 12.017 161.2508808000017 9.017 301.5974754 9.544 304.7911694999997 10.841 313.5949060000003 9.98 327.28862100000254 9.143 300.4280032999993 9.27 317.9129730000007 9.995 297.08919580000037 8.95 303.6573161000017 10.05 353.0286420999975 10.879 333.071981300001 11.019 324.1492432000032 9.289 302.8529368999984 9.248 343.33705159999727 9.854)
Error minima by case: (0.3903 6 0.7655 7 6.8776 8 0.8262 7 6.4302 7 0.6114 7 22.0127 6 0.215 7 1.7085 8 0.2826 6 3.2512 9 0.8982 6 0.2868 7 0.045 7 0.7012 8 2.3329 6 0.4165 7 1.4571 7 0.0766 6 0.3318 8 3.5624 8 6.2008 8 1.419 7 0.3238 6 3.3618 7)
Average genome size in population (length): 131.937
Average program size in population (points): 132.937
Average percent parens in population: 0.008
Minimum age in population: 237.5077465314834
Maximum age in population: 241.7298607921299
Average age in population: 239.854879394206
Median age in population: 239.8989369558404
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.497
Error (vector) diversity:			 0.553
Behavioral diversity:				 0.555
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 610529012
--- Timings ---
Current time: 1529616438846 milliseconds
Total Time:         968.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.3 seconds, 26.7%
Fitness Testing:    560.1 seconds, 57.9%
Report:             149.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction float_mult} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction float_pop} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod integer_min tagged_947 float_rot float_tan integer_mod float_sin print_float float_yank integer_mult float_sin integer_sub float_cos float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 float_mult integer_add in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_max 33 integer_rot integer_yank float_pop float_add integer_dec float_sub print_integer integer_dup_items in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot float_pop integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7770.160788600007
Median total errors in population: 1227.7251499999998
Error averages by case: (300.96714640000124 7.857 313.7198682000009 9.95 327.26119569999804 11.237 317.91553269999986 10.483 338.9632729000019 11.194 161.05759490000017 9.809 227.01765359999797 8.268 343.03441279999646 9.161 336.6489593999984 10.035 154.29943190000049 8.427 352.4825251999986 12.113 154.61236560000145 8.994 308.51251189999965 9.633 311.8347363999999 10.907 320.03292510000034 10.1 334.3556981000028 9.262 307.5568175999993 9.318 323.5273675000008 10.097 302.93863700000077 9.02 309.00178490000116 10.145 358.6578960999972 11.0 334.7441096000009 11.093 328.948616100003 9.383 307.2058739999983 9.327 348.0928549999972 9.958)
Error minima by case: (0.3815 6 0.7775 7 0.1424 8 0.8262 6 10.5998 8 2.4242 7 22.0127 6 1.7512 7 5.767 7 0.2926 6 5.281 9 0.9253 6 1.6597 7 0.045 7 1.672 8 1.7256 7 0.4185 6 0.5891 7 0.9079 6 0.3032 8 1.4746 8 10.7612 8 1.4135 7 0.3256 7 3.3374 7)
Average genome size in population (length): 132.003
Average program size in population (points): 133.003
Average percent parens in population: 0.008
Minimum age in population: 238.8275614162131
Maximum age in population: 243.1110621841351
Average age in population: 241.2138015075944
Median age in population: 241.2404440749259
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.498
Error (vector) diversity:			 0.546
Behavioral diversity:				 0.547
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 613829312
--- Timings ---
Current time: 1529616444335 milliseconds
Total Time:         973.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       259.7 seconds, 26.7%
Fitness Testing:    563.3 seconds, 57.9%
Report:             150.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_279} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction integer_swap} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items float_yankdup integer_shove float_rot integer_rot integer_sub integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_279 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_add float_mod integer_shove integer_shove integer_shove 18 integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank integer_dup_times integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div integer_swap print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7992.9082896000045
Median total errors in population: 1228.8146
Error averages by case: (314.2473478000008 7.723 327.68590090000146 9.831 336.6538717999986 11.103 329.1160787999994 10.283 348.54804160000197 11.043 155.17895360000003 9.619 222.90013249999805 8.077 353.5823768999963 8.973 348.45899199999826 9.925 151.71291390000044 8.304 362.05157299999877 11.957 151.18105430000145 8.843 321.5844749000002 9.522 325.15264209999964 10.783 328.92928669999975 9.946 345.3155629000023 9.139 318.8274316999988 9.143 335.18828500000126 9.99 316.9523924000014 8.874 322.3592862000019 10.031 368.7450997999972 10.828 348.1213776000009 10.945 339.285000800003 9.203 319.38692489999823 9.183 358.69728749999723 9.778)
Error minima by case: (0.3815 6 0.7655 8 5.8982 9 0.8102 7 9.5293 8 0.5818 8 2.9167 6 0.2148 7 9.6835 8 0.2926 5 3.2756 9 0.8984 6 1.7147 7 0.0756 8 3.7017 8 5.6421 7 0.4185 7 0.5891 8 0.0881 6 0.3308 8 0.46 7 6.1597 8 0.4395 7 0.3256 7 3.3374 7)
Average genome size in population (length): 132.197
Average program size in population (points): 133.197
Average percent parens in population: 0.008
Minimum age in population: 239.8275614162131
Maximum age in population: 244.3846519893738
Average age in population: 242.5755469410989
Median age in population: 242.6227369157787
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.486
Error (vector) diversity:			 0.538
Behavioral diversity:				 0.539
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 617134387
--- Timings ---
Current time: 1529616449645 milliseconds
Total Time:         978.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       261.0 seconds, 26.7%
Fitness Testing:    566.4 seconds, 57.9%
Report:             151.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tagged_979} {:instruction print_float} {:instruction print_float} {:instruction float_sin} {:instruction tagged_281} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_sin} {:instruction float_inc} {:instruction print_integer} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_max} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction float_shove} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction float_dec} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_min tagged_979 print_float print_float float_sin tagged_281 integer_rot integer_mult float_sin float_inc print_integer float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_rot integer_div integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup float_max print_float integer_stackdepth integer_shove float_flush integer_dup integer_dec float_div float_sin print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 float_shove integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float float_dec print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8001.276538700007
Median total errors in population: 1223.02865
Error averages by case: (308.86415410000154 7.763 325.21621460000114 9.883 339.8244379999984 11.188 328.3447194999996 10.305 348.93355260000186 11.071 160.9116151000001 9.77 229.26717469999792 8.299 354.3589303999963 9.058 347.62255249999816 10.002 157.14894690000077 8.413 364.57431919999857 12.094 155.67112510000155 8.976 320.06769860000014 9.6 322.6472019000005 10.812 331.3764760999999 10.002 345.30991200000256 9.194 318.1619271999991 9.235 332.8762803000008 10.072 312.65701200000103 8.93 319.6978232000014 10.079 368.7349038999973 10.917 345.7602660000008 11.023 339.81689490000326 9.272 318.12938649999785 9.269 360.2330133999972 9.843)
Error minima by case: (0.3815 5 0.7655 7 3.8702 8 0.8262 6 21.4051 8 0.5614 7 22.0161 6 1.2408 6 17.7635 8 0.2881 6 1.717 9 0.9353 7 1.7107 7 0.9234 7 1.7012 8 13.7221 6 0.405 6 3.3999 7 0.9079 6 0.3318 7 2.5234 8 21.1725 9 0.4395 7 0.3256 7 0.3579 6)
Average genome size in population (length): 132.496
Average program size in population (points): 133.496
Average percent parens in population: 0.008
Minimum age in population: 241.782806787513
Maximum age in population: 245.5645947132335
Average age in population: 243.8636582721759
Median age in population: 243.9177576931593
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.961
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.961
Total error diversity:				 0.498
Error (vector) diversity:			 0.549
Behavioral diversity:				 0.55
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 620447187
--- Timings ---
Current time: 1529616455054 milliseconds
Total Time:         984.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       262.4 seconds, 26.7%
Fitness Testing:    569.5 seconds, 57.9%
Report:             152.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction print_float} {:instruction tagged_947} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_inc} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction float_min} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min print_float tagged_947 integer_min tagged_947 float_rot float_inc integer_add float_yankdup float_yank float_rot integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup float_yank integer_stackdepth integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer float_min integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 128
Size: 129
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7361.568511900004
Median total errors in population: 1221.3113500000002
Error averages by case: (279.0203643000022 7.795 295.7033394000013 9.889 307.1424101999982 11.144 296.8313897999998 10.395 318.2368485000011 11.144 160.83877619999987 9.75 229.89599009999816 8.301 325.55524159999646 9.047 315.9090375999983 10.014 156.13028060000067 8.406 333.2933194999985 12.004 155.3129133000015 8.998 289.32170429999945 9.624 291.82345419999916 10.878 299.6291610000006 9.967 313.59858160000266 9.196 286.3600942000001 9.247 303.5279652000003 10.065 284.7257146 8.958 287.8396304000006 10.11 341.8138413999983 10.956 316.95072710000073 11.053 310.3458382000029 9.23 286.9449200999985 9.25 329.63496849999734 9.761)
Error minima by case: (0.3913 6 0.7655 7 2.8702 9 0.7464 6 9.4832 8 0.4242 7 22.0187 6 1.2408 6 4.7465 7 0.2927 6 0.717 9 0.0647 7 1.6432 7 0.0756 7 1.7592 8 0.7051 6 0.3676 7 3.4089 8 0.0522 6 0.3114 7 0.5344 7 9.2538 8 1.419 7 0.3256 6 0.3299 6)
Average genome size in population (length): 132.84
Average program size in population (points): 133.84
Average percent parens in population: 0.008
Minimum age in population: 242.8157641021333
Maximum age in population: 247.108274986215
Average age in population: 245.140352857595
Median age in population: 245.20500721179
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.504
Error (vector) diversity:			 0.552
Behavioral diversity:				 0.553
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 623768487
--- Timings ---
Current time: 1529616460401 milliseconds
Total Time:         989.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       263.8 seconds, 26.7%
Fitness Testing:    572.5 seconds, 57.9%
Report:             153.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_178} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_mult} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod integer_min tagged_947 float_rot float_tan integer_mod float_sin print_float float_yank integer_mult float_sin integer_sub float_cos float_max integer_fromfloat integer_dup_items integer_swap -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_178 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_div integer_dec float_div float_sin print_integer in1 integer_flush float_mult integer_add in2 -36 integer_add integer_add float_mod integer_shove integer_shove integer_shove 18 in1 integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_cos integer_shove 18 integer_max float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_max integer_mod integer_yank integer_shove float_dup integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7766.012183600003
Median total errors in population: 1221.2591999999997
Error averages by case: (292.670151200002 7.87 308.34188600000124 10.011 322.6995981999987 11.229 311.1455955999998 10.457 333.99777410000104 11.224 187.11279949999997 9.908 254.77249549999814 8.504 336.8951592999968 9.163 329.83127989999826 10.114 185.1880655000007 8.619 347.28436459999904 12.159 185.62187110000175 9.149 303.6996940999992 9.729 307.636396599999 11.005 316.22130690000097 10.088 328.4734483000024 9.311 300.7774202000002 9.36 314.13553910000024 10.167 294.4684852999999 9.027 304.5838204000002 10.275 354.5607685999982 10.971 329.2744703000007 11.132 321.05320630000296 9.358 301.78843039999833 9.318 345.65515659999716 9.975)
Error minima by case: (0.3658 5 0.7885 8 6.1224 8 0.8102 6 6.5995 8 1.4186 7 22.0127 6 1.2418 7 1.7667 8 0.2931 6 8.2756 9 1.0347 7 1.7147 7 0.0756 8 0.3288 8 2.2752 7 0.415 7 3.4009 8 0.9079 6 0.3132 8 3.4738 8 6.7582 8 1.419 7 0.3256 7 8.6626 7)
Average genome size in population (length): 132.628
Average program size in population (points): 133.628
Average percent parens in population: 0.008
Minimum age in population: 243.8157641021333
Maximum age in population: 248.4276649147156
Average age in population: 246.4551445036803
Median age in population: 246.5164648981949
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.495
Error (vector) diversity:			 0.554
Behavioral diversity:				 0.556
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 627084562
--- Timings ---
Current time: 1529616465799 milliseconds
Total Time:         994.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       265.2 seconds, 26.7%
Fitness Testing:    575.6 seconds, 57.9%
Report:             153.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction float_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction integer_add} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction integer_dup} {:instruction in1} {:instruction float_div} {:instruction integer_dec} {:instruction float_dup} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_dup integer_mod float_sin print_float float_yank float_mult float_sin integer_sub integer_add float_max integer_fromfloat integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth integer_pop integer_dup in1 float_div integer_dec float_dup float_sin print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div float_yank float_rot integer_yank integer_max integer_mod float_mod integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 122
Size: 123
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7237.824877300005
Median total errors in population: 1203.2476000000001
Error averages by case: (276.77065510000233 7.782 294.0364903000016 9.89 305.9205120999981 11.184 294.9703953999994 10.492 317.7920560000014 11.214 140.97410549999947 9.775 208.3748614999981 8.318 321.58423689999603 8.987 315.18931399999775 9.991 133.18685980000055 8.46 332.2874846999987 12.071 134.4086353000017 9.045 286.16944699999897 9.623 290.51000229999937 10.915 298.28693980000077 9.968 312.76752660000295 9.223 284.1525129000005 9.277 301.96532310000015 10.074 283.48136540000013 8.989 285.52155890000034 10.113 337.86678969999764 11.064 315.59210180000093 11.079 308.07161540000345 9.272 284.41565729999814 9.238 327.64343049999695 9.841)
Error minima by case: (0.3903 5 0.7775 7 3.8702 8 0.8262 7 14.6001 7 1.4186 7 22.0187 6 0.7326 6 9.7678 7 0.2926 6 1.717 8 0.0956 6 1.7147 7 0.035 7 4.6832 8 5.7264 7 0.3716 7 0.5891 8 0.0861 7 0.3132 8 5.4699 8 14.7642 8 1.4175 7 0.3241 6 1.3299 7)
Average genome size in population (length): 132.347
Average program size in population (points): 133.347
Average percent parens in population: 0.008
Minimum age in population: 245.316937196739
Maximum age in population: 250.3105073739562
Average age in population: 247.824253559563
Median age in population: 247.8566548298774
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.952
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.503
Error (vector) diversity:			 0.547
Behavioral diversity:				 0.55
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 630393362
--- Timings ---
Current time: 1529616471130 milliseconds
Total Time:        1000.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       266.7 seconds, 26.7%
Fitness Testing:    578.7 seconds, 57.8%
Report:             154.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_div} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_305} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_max} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_max} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_dup} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction float_pop} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (float_rot integer_rot integer_shove float_cos integer_dup integer_dup float_dup_items integer_add float_yankdup float_yank integer_stackdepth integer_rot integer_dup_items integer_mult float_yank float_rot integer_rot integer_shove float_rot integer_div integer_mod float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_305 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup float_max print_float integer_stackdepth integer_shove float_flush integer_dup integer_dec float_div float_max print_integer in1 integer_flush float_inc integer_add in2 -36 integer_add integer_yankdup float_cos integer_shove 18 integer_max float_div integer_yank float_pop float_dup integer_dec print_float print_integer float_inc in2 integer_yankdup float_pop 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7955.213519800007
Median total errors in population: 1201.8123
Error averages by case: (303.74558910000115 7.846 321.9727072000011 9.94 335.82498749999854 11.265 325.4139953999995 10.474 346.0111172000016 11.196 171.27803380000017 9.753 236.1722910999978 8.345 349.9099808999968 9.139 342.75556959999824 10.031 163.62952170000068 8.535 360.0561183999987 12.148 164.3210004000016 9.081 314.4121177999998 9.643 319.2422281000001 10.984 328.4648583999999 10.09 340.42384680000225 9.262 315.1549308999993 9.321 328.85649790000065 10.072 309.6433803000011 9.017 316.90329340000125 10.106 365.5465280999977 11.04 342.38981060000106 11.126 335.91559630000285 9.36 315.2886140999982 9.316 354.8059047999975 9.985)
Error minima by case: (0.4133 6 0.7655 6 3.8702 8 0.8262 7 10.5936 6 0.555 5 28.0127 5 2.2408 7 5.7633 7 0.2909 6 1.717 9 0.8984 5 0.3023 6 0.9265 5 1.7012 8 1.7219 6 0.405 7 0.5891 6 0.091 6 0.3132 6 4.4526 6 10.7632 7 1.419 7 0.3256 6 1.3299 7)
Average genome size in population (length): 131.887
Average program size in population (points): 132.887
Average percent parens in population: 0.008
Minimum age in population: 247.1178825519355
Maximum age in population: 251.3590459925651
Average age in population: 249.2606298793109
Median age in population: 249.2813198834873
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.493
Error (vector) diversity:			 0.541
Behavioral diversity:				 0.543
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 633690662
--- Timings ---
Current time: 1529616476605 milliseconds
Total Time:        1005.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       268.1 seconds, 26.7%
Fitness Testing:    581.9 seconds, 57.9%
Report:             155.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_add} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction tag_float_794} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_flush} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction float_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction integer_swap} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat float_dup_items integer_add float_yankdup float_yank float_add integer_rot integer_shove float_cos integer_div integer_dup float_dup_items integer_add float_yankdup integer_stackdepth integer_fromfloat integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min tag_float_794 in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_flush in2 -36 integer_add float_mod float_cos integer_shove 18 integer_max float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup float_shove 19 integer_swap integer_max float_div float_div integer_yank integer_swap integer_max float_div float_div integer_yank integer_dup_times integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div integer_swap print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7679.399760400005
Median total errors in population: 1227.8679000000002
Error averages by case: (288.25810710000184 7.838 307.864708500001 9.965 318.87856049999834 11.279 309.0238963999995 10.442 328.3602660000007 11.186 184.96033830000025 9.872 246.34181909999802 8.404 335.4860144999968 9.061 327.8651811999978 10.041 176.88490410000094 8.602 345.2335030999987 12.129 178.87665510000147 9.095 301.469111099999 9.637 302.4184624999996 10.976 310.72044890000086 10.055 326.48105340000245 9.221 298.6279870000002 9.271 311.7786330999996 10.117 292.11650830000065 9.018 301.2281063000005 10.111 352.1230891999983 10.932 328.85162180000117 11.076 318.9016625000026 9.336 298.0221622999986 9.322 341.71396009999745 9.927)
Error minima by case: (0.4133 6 0.7775 7 6.0978 9 0.8262 7 2.4382 7 0.5818 7 22.0121 6 1.2148 6 7.2685 7 0.2926 6 3.717 9 0.0446 6 0.2893 7 0.9264 7 0.3283 8 5.7251 7 0.4185 7 0.4639 8 0.9079 7 0.3317 8 1.5274 8 2.2058 8 1.4172 7 0.3256 7 3.3374 7)
Average genome size in population (length): 132.041
Average program size in population (points): 133.041
Average percent parens in population: 0.008
Minimum age in population: 248.1351005901163
Maximum age in population: 252.5193608970739
Average age in population: 250.6391147340898
Median age in population: 250.688524769443
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.504
Error (vector) diversity:			 0.55
Behavioral diversity:				 0.551
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 636991787
--- Timings ---
Current time: 1529616482005 milliseconds
Total Time:        1011.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       269.5 seconds, 26.6%
Fitness Testing:    585.1 seconds, 57.9%
Report:             156.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_705} {:instruction integer_swap} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction integer_add} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction float_dec} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_705 integer_swap integer_min tagged_947 float_rot float_tan integer_mod float_sin integer_add float_yank integer_mult float_sin integer_sub float_cos float_max integer_fromfloat integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth integer_pop float_add float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add integer_shove float_tan integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 float_dec integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 126
Size: 127
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 8095.948981200005
Median total errors in population: 1234.3714
Error averages by case: (320.2621442000007 7.871 334.28455820000164 9.894 343.8265699999986 11.158 335.1654403999997 10.382 355.8222539000023 11.11 146.14034989999948 9.764 215.32970289999804 8.383 361.34518449999644 9.019 352.522964699998 9.998 141.75973590000052 8.552 368.5224203999992 12.029 143.26196990000156 9.029 327.1776882000003 9.624 329.3192968000001 10.79 336.5856262999997 9.999 350.1871283000022 9.2 324.217314599999 9.283 342.71439170000133 10.081 323.82807640000135 8.978 325.4494820000018 10.102 376.6670719999972 10.926 355.6975319000008 11.019 348.7517686000031 9.296 326.37499479999775 9.283 365.132314699997 9.833)
Error minima by case: (0.3973 6 0.7655 7 3.9076 9 0.7537 7 18.5936 7 0.5822 7 26.0491 5 2.2174 6 7.3055 8 0.2926 6 1.7544 9 0.0956 7 1.7032 7 0.0756 6 0.204 8 9.7219 7 0.3761 7 0.5252 7 0.064 6 0.3114 8 1.4901 7 18.7672 8 1.419 7 0.3238 7 0.3319 6)
Average genome size in population (length): 131.935
Average program size in population (points): 132.935
Average percent parens in population: 0.008
Minimum age in population: 249.1351005901163
Maximum age in population: 253.9602244237512
Average age in population: 252.0095389971243
Median age in population: 252.0796344872615
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.518
Error (vector) diversity:			 0.554
Behavioral diversity:				 0.555
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 640290262
--- Timings ---
Current time: 1529616487260 milliseconds
Total Time:        1016.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       270.9 seconds, 26.6%
Fitness Testing:    588.3 seconds, 57.9%
Report:             157.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction integer_min} {:instruction tagged_883} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_cos} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_div} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction float_dec} {:instruction integer_max} {:instruction integer_max} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_fromfloat integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod integer_min tagged_883 float_rot float_tan integer_mod integer_sub float_cos -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_div float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth integer_pop float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add integer_shove float_tan integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 float_dec integer_max integer_max integer_mod float_mod integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 8132.309708400003
Median total errors in population: 1234.6563
Error averages by case: (312.7659215000005 7.861 329.12912680000125 9.94 340.20141829999875 11.174 330.0557455999999 10.429 350.60372560000224 11.123 185.52424270000023 9.77 246.49256899999813 8.262 355.88031809999694 9.07 349.2626489999983 10.041 175.19303100000104 8.443 364.9444107999991 12.004 177.98453510000158 9.013 321.9488409000002 9.621 325.10557490000014 10.849 332.30919029999984 9.996 347.8817394000023 9.23 319.8538448999988 9.3 336.558059600001 10.111 317.40602750000124 8.981 323.1892203000016 10.152 371.28528039999725 10.944 349.3972406000011 11.027 342.18952760000275 9.312 320.78903539999845 9.311 360.5654330999975 9.829)
Error minima by case: (0.3758 6 0.7713 7 3.8702 9 0.8264 8 8.5618 7 0.5648 7 21.9368 5 0.7862 7 3.7315 7 0.2926 6 1.255 9 0.8984 7 0.2893 7 0.0096 7 4.6617 8 0.3099 7 0.4185 7 3.3999 7 0.9079 6 0.3318 7 8.4807 7 1.7986 8 0.4375 7 0.3256 6 0.3579 6)
Average genome size in population (length): 130.63
Average program size in population (points): 131.63
Average percent parens in population: 0.008
Minimum age in population: 250.1351005901163
Maximum age in population: 255.5628807528758
Average age in population: 253.3927431191355
Median age in population: 253.4161902181876
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.531
Error (vector) diversity:			 0.588
Behavioral diversity:				 0.588
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 643556062
--- Timings ---
Current time: 1529616492442 milliseconds
Total Time:        1021.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       272.3 seconds, 26.7%
Fitness Testing:    591.3 seconds, 57.9%
Report:             158.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_min} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction tagged_923} {:instruction integer_min} {:instruction tagged_947} {:instruction float_rot} {:instruction print_float} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction float_yank} {:instruction integer_mult} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction float_dup} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_div} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_sin} {:instruction integer_yank} {:instruction float_cos} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (float_swap integer_min integer_sub integer_fromfloat integer_min float_rot float_dup_items integer_add float_yankdup float_yank float_rot tagged_923 integer_min tagged_947 float_rot print_float integer_sub float_cos float_max float_yank integer_mult integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min float_dup in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div print_integer in1 integer_flush float_sin integer_add in2 -36 integer_add float_mod integer_shove float_div integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_shove 19 integer_swap integer_max float_div float_sin integer_yank float_cos integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 7840.613886900002
Median total errors in population: 1227.5335
Error averages by case: (298.3365683000019 7.943 313.8909551000014 9.946 326.90987109999867 11.247 317.62353159999935 10.495 337.72533080000136 11.19 185.61407879999987 9.84 247.04629159999817 8.355 343.0636417999969 9.148 334.3640793999984 10.063 177.9198209000009 8.557 351.6328466999989 12.096 178.55104200000162 9.039 307.56491919999957 9.668 309.94733809999923 10.914 318.82404210000067 10.056 332.8666320000024 9.24 307.2801526999999 9.337 319.60299270000047 10.141 301.17457160000043 9.029 307.84136300000034 10.12 358.8826990999978 10.925 334.7272174000009 11.089 326.36873770000307 9.401 307.70669029999806 9.299 348.02147289999755 9.989)
Error minima by case: (0.3811 6 0.7825 7 0.895 9 0.7608 6 5.4208 8 0.5648 5 6.9268 5 0.7126 7 1.7667 7 0.2926 5 7.7144 9 0.8953 6 0.2893 7 0.925 6 0.2983 7 1.7256 7 0.3925 7 0.5396 7 0.9069 6 0.3318 6 2.4982 7 6.7582 7 1.439 7 0.3238 5 3.3674 7)
Average genome size in population (length): 130.883
Average program size in population (points): 131.883
Average percent parens in population: 0.008
Minimum age in population: 252.3659643806989
Maximum age in population: 256.986366428241
Average age in population: 254.7149395773878
Median age in population: 254.782837124227
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.942
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.942
Total error diversity:				 0.514
Error (vector) diversity:			 0.575
Behavioral diversity:				 0.577
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 646828262
--- Timings ---
Current time: 1529616497749 milliseconds
Total Time:        1027.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       273.7 seconds, 26.7%
Fitness Testing:    594.5 seconds, 57.9%
Report:             158.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 107620.69659999998
Test mean error for best: 53.81035
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_703} {:instruction integer_mod} {:instruction float_yank} {:instruction tagged_947} {:instruction float_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction float_sin} {:instruction print_float} {:instruction float_yank} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_sub} {:instruction in2} {:instruction integer_sub} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction float_yankdup} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_div} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction integer_min} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction float_mod} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction float_swap} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (float_swap integer_min integer_fromfloat integer_fromfloat tagged_703 integer_mod float_yank tagged_947 float_rot float_tan integer_mod float_sin print_float float_yank integer_mult float_yank integer_sub in2 integer_sub float_cos float_max integer_fromfloat integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min float_yankdup in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup float_frominteger integer_sub integer_dup_items integer_rot float_div integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_stackdepth integer_shove float_sub integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add integer_dup float_dup_times float_div integer_dec float_div integer_min print_integer in1 integer_flush float_inc float_mod in2 -36 integer_add float_mod integer_shove integer_shove integer_shove 18 integer_shove integer_shove integer_shove 18 integer_max 33 float_div float_swap float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8613.592290700006
Median total errors in population: 1232.7974
Error averages by case: (336.2522581000003 8.038 349.1037863000012 10.057 361.6435710999984 11.315 351.6039349999995 10.63 372.0853544000024 11.32 193.34919400000044 9.862 256.4080287999975 8.481 376.38406969999613 9.28 369.63326069999795 10.219 186.84095180000114 8.657 384.8151314999985 12.209 187.03420340000176 9.137 343.2224873000012 9.791 345.3762033000011 11.05 354.6388798999993 10.213 367.3932312000023 9.434 341.7581618999982 9.529 357.91253640000184 10.23 338.3689128000022 9.165 343.3787539000025 10.275 390.0355656999973 11.094 368.36006850000103 11.17 363.66666490000335 9.502 343.450822599998 9.496 380.663257499997 10.059)
Error minima by case: (0.4133 6 0.7775 7 4.1224 8 0.8262 7 14.6001 7 2.4232 7 22.0185 6 1.2398 7 9.7678 7 0.2926 6 17.7244 9 0.8984 6 1.7147 7 0.045 7 4.6882 8 5.7264 7 0.4185 7 0.5891 8 0.0921 6 0.314 7 1.48 8 14.7642 9 1.4433 7 0.3256 7 11.6681 7)
Average genome size in population (length): 131.096
Average program size in population (points): 132.096
Average percent parens in population: 0.008
Minimum age in population: 253.4832533614176
Maximum age in population: 258.067103838397
Average age in population: 256.0688063640113
Median age in population: 256.1359312370087
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.511
Error (vector) diversity:			 0.574
Behavioral diversity:				 0.576
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 650105866
--- Timings ---
Current time: 1529616502985 milliseconds
Total Time:        1032.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       275.1 seconds, 26.7%
Fitness Testing:    597.5 seconds, 57.9%
Report:             159.5 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 107622.7766
Test mean error for best: 53.81139
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_yank} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -40} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction 18} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction float_dec} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_dup} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_fromfloat integer_min float_yank float_yankdup float_yank float_rot integer_rot integer_sub integer_mult -37 in2 integer_dup float_dup_items integer_add float_yankdup float_yank float_rot integer_rot integer_dup_items integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_rot float_min integer_inc in2 integer_stackdepth float_yankdup float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -40 integer_yankdup integer_stackdepth integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_pop integer_dup float_dup_times float_div integer_dec float_div float_sin print_integer in1 integer_flush float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove integer_shove float_dec 18 integer_shove integer_shove integer_shove integer_shove 18 integer_max 33 float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 float_dec integer_max float_div float_div integer_yank integer_yank integer_yank integer_max integer_mod integer_dup integer_shove float_dup integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4242 9 90.0187 7 72.2448 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9022000000002
Mean: 23.478045
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8140.1941171000035
Median total errors in population: 1230.3974000000003
Error averages by case: (314.59536840000055 7.849 327.27417540000096 9.928 341.84781929999883 11.18 334.0886971999999 10.474 353.4727935000021 11.195 179.6737459 9.755 242.19783259999798 8.334 355.7125776999968 9.099 352.4924774999983 10.085 172.8497207000008 8.44 364.92090539999907 12.068 173.09237530000166 8.953 324.3535085000004 9.674 327.1999327000002 10.909 333.52370659999946 10.011 350.5275702000021 9.282 323.7390864999993 9.373 337.8805295000016 10.128 317.4335229000011 9.042 324.8251387000012 10.208 370.80490779999724 10.904 347.91680770000085 11.053 341.60639290000273 9.337 320.04176779999835 9.285 361.63375639999765 9.923)
Error minima by case: (0.4133 6 0.7825 7 3.8689 8 0.7708 8 11.5458 8 1.423 6 22.0127 6 0.787 7 17.7205 7 0.2926 5 0.5323 9 0.0655 6 1.6577 7 0.0756 7 4.7017 7 13.6791 7 0.4175 7 3.4319 7 0.9079 7 0.3132 8 0.5484 6 21.2088 7 0.4395 7 0.3182 6 1.3286 7)
Average genome size in population (length): 131.436
Average program size in population (points): 132.436
Average percent parens in population: 0.008
Minimum age in population: 254.7957912303523
Maximum age in population: 259.4428160017708
Average age in population: 257.3710144678833
Median age in population: 257.401401434599
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.947
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.947
Total error diversity:				 0.505
Error (vector) diversity:			 0.575
Behavioral diversity:				 0.577
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 653391841
--- Timings ---
Current time: 1529616508400 milliseconds
Total Time:        1037.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       276.5 seconds, 26.7%
Fitness Testing:    600.6 seconds, 57.9%
Report:             160.3 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 70799.52949999996
Test mean error for best: 35.39976
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0371760   
Correct output: 119.1092560212 | Program output: 29.09160114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0683791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0764599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_yank} {:instruction float_rot} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction 14.620427692976762} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction in1} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_662} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction tagged_97} {:instruction integer_dec} {:instruction integer_max} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_max} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_pop} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction integer_mod} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_yankdup integer_fromfloat integer_add float_yankdup float_dup_items integer_add float_yankdup float_yank integer_stackdepth integer_rot integer_dup_items integer_mult float_yank float_rot integer_sub integer_shove float_rot integer_stackdepth integer_dup float_dup_items integer_add 14.620427692976762 float_yank float_rot integer_rot integer_dup_items integer_dup_items in1 -37 in2 integer_stackdepth in2 integer_stackdepth float_rot float_min integer_inc in2 integer_stackdepth in1 tagged_662 integer_sub integer_stackdepth float_mod integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop tagged_97 integer_dec integer_max float_sin print_integer in1 integer_flush float_max integer_add in2 -36 integer_add float_mod float_cos integer_shove 18 integer_max 33 float_pop integer_yank float_pop float_add float_add integer_dec float_sub print_integer integer_mod in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4232 9 90.0177 7 72.2448 8 49.7315 9 7.2981 7 85.283 12 7.0563 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9002
Mean: 23.478004
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8395.191449700005
Median total errors in population: 1234.0727500000003
Error averages by case: (324.0452624000012 7.883 338.09877810000137 9.957 348.9170404999986 11.237 341.1807949999995 10.447 361.08567620000196 11.149 199.94188700000032 9.797 260.586935599998 8.401 365.12324089999635 9.169 359.1108203999984 10.054 190.95561140000103 8.576 374.20971729999906 12.088 192.13085530000177 9.059 332.1644613000005 9.652 335.70453140000046 10.896 342.33660439999943 10.103 357.79374900000244 9.24 331.29299829999894 9.361 344.4490379000011 10.126 324.7507342000012 9.024 332.8546520000017 10.151 381.0936235999975 10.94 358.10365820000106 11.048 349.89260240000254 9.44 331.3836715999982 9.329 370.88450529999744 9.973)
Error minima by case: (0.3893 6 0.2076 6 3.8702 9 0.8262 7 6.5993 7 1.4242 7 22.0187 6 0.2168 7 1.7665 6 0.2926 6 1.717 9 1.0636 7 1.7147 5 0.0756 6 5.7012 8 2.2754 6 0.4175 7 0.5891 6 0.9089 6 0.3318 6 4.4876 6 6.7562 6 1.419 7 0.3256 6 1.3299 7)
Average genome size in population (length): 131.879
Average program size in population (points): 132.879
Average percent parens in population: 0.008
Minimum age in population: 256.0306667931134
Maximum age in population: 260.7721461453976
Average age in population: 258.6383522706223
Median age in population: 258.6865688433833
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.519
Error (vector) diversity:			 0.582
Behavioral diversity:				 0.585
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 656688916
--- Timings ---
Current time: 1529616513951 milliseconds
Total Time:        1042.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       277.9 seconds, 26.6%
Fitness Testing:    603.7 seconds, 57.9%
Report:             161.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 70799.52949999996
Test mean error for best: 35.39976
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0371760   
Correct output: 119.1092560212 | Program output: 29.09160114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0683791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0764599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_yank} {:instruction float_rot} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction 14.620427692976762} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction in1} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_662} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction tagged_97} {:instruction integer_dec} {:instruction integer_max} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_max} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_pop} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction integer_mod} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_yankdup integer_fromfloat integer_add float_yankdup float_dup_items integer_add float_yankdup float_yank integer_stackdepth integer_rot integer_dup_items integer_mult float_yank float_rot integer_sub integer_shove float_rot integer_stackdepth integer_dup float_dup_items integer_add 14.620427692976762 float_yank float_rot integer_rot integer_dup_items integer_dup_items in1 -37 in2 integer_stackdepth in2 integer_stackdepth float_rot float_min integer_inc in2 integer_stackdepth in1 tagged_662 integer_sub integer_stackdepth float_mod integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop tagged_97 integer_dec integer_max float_sin print_integer in1 integer_flush float_max integer_add in2 -36 integer_add float_mod float_cos integer_shove 18 integer_max 33 float_pop integer_yank float_pop float_add float_add integer_dec float_sub print_integer integer_mod in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4232 9 90.0177 7 72.2448 8 49.7315 9 7.2981 7 85.283 12 7.0563 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9002
Mean: 23.478004
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8431.291542400008
Median total errors in population: 1238.78635
Error averages by case: (324.3062579000011 7.961 342.948845800001 10.009 352.6938372999985 11.116 342.81668019999955 10.448 363.79630500000115 11.175 194.1399731 9.791 256.2841792999983 8.357 366.4763822999969 9.095 360.3642341999984 10.115 186.98039360000087 8.533 374.98396239999886 12.058 188.1001819000014 8.96 335.50798639999965 9.684 336.78957750000006 10.882 345.9875719 10.066 360.17669690000196 9.295 332.95818459999975 9.443 348.64846060000053 10.169 329.894190700001 9.075 336.3295374000009 10.279 383.16890719999805 10.913 362.1355167000007 11.039 354.3143990000026 9.374 332.7066382999986 9.393 371.6446421999978 9.908)
Error minima by case: (0.3815 6 0.2355 7 5.8776 8 0.2188 8 6.611 7 0.5548 7 22.0187 6 0.7726 6 13.7515 7 0.2926 5 3.7244 8 0.0347 6 0.3433 7 0.005 8 3.2988 8 9.7101 6 0.4175 7 0.5371 7 0.9089 6 0.3318 8 5.4844 8 18.8112 9 2.449 7 0.3256 5 3.3374 7)
Average genome size in population (length): 131.634
Average program size in population (points): 132.634
Average percent parens in population: 0.008
Minimum age in population: 257.5038792569831
Maximum age in population: 262.1875517640855
Average age in population: 259.9730766476511
Median age in population: 259.980521288618
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.523
Error (vector) diversity:			 0.601
Behavioral diversity:				 0.603
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 659979941
--- Timings ---
Current time: 1529616519303 milliseconds
Total Time:        1048.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       279.4 seconds, 26.6%
Fitness Testing:    606.7 seconds, 57.9%
Report:             162.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 70799.52949999996
Test mean error for best: 35.39976
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0371760   
Correct output: 119.1092560212 | Program output: 29.09160114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0683791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0764599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_yank} {:instruction float_rot} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction 14.620427692976762} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction in1} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_662} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction tagged_97} {:instruction integer_dec} {:instruction integer_max} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_max} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction integer_mult} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_yankdup integer_fromfloat integer_add float_yankdup float_dup_items integer_add float_yankdup float_yank integer_stackdepth integer_rot integer_dup_items integer_mult float_yank float_rot integer_sub integer_shove float_rot integer_stackdepth integer_dup float_dup_items integer_add 14.620427692976762 float_yank float_rot integer_rot integer_dup_items integer_dup_items in1 -37 in2 integer_stackdepth in2 integer_stackdepth float_rot float_min integer_inc in2 integer_stackdepth in1 tagged_662 integer_sub integer_stackdepth float_mod integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop tagged_97 integer_dec integer_max float_sin print_integer in1 integer_flush float_max integer_add in2 -36 integer_add float_mod 18 integer_max 33 integer_shove 18 integer_max float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div integer_mult integer_yank float_rot integer_mult integer_max integer_mod integer_yank integer_shove 17 integer_add integer_add print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4232 9 90.0177 7 72.2448 8 49.7315 9 7.2981 7 85.283 12 7.0563 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9002
Mean: 23.478004
Genome size: 140
Size: 141
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7455.419638300005
Median total errors in population: 1211.3120999999999
Error averages by case: (283.3260650000024 7.845 300.0685840000015 9.89 310.44783979999886 11.123 300.27019559999974 10.449 321.5036783000011 11.085 169.5927770999997 9.781 235.0914995999978 8.382 326.56289789999624 9.068 320.14475839999807 10.006 162.9122788000007 8.568 337.1625054999993 12.002 161.9292240000017 9.061 290.79095629999915 9.632 294.59052689999885 10.849 303.0887663000008 9.992 317.72946650000233 9.192 289.8301170000005 9.319 305.8910224000001 10.076 287.2042737999998 9.042 291.5299490000005 10.056 342.41868819999786 10.946 321.15035490000054 11.012 312.44803870000277 9.332 292.11859399999827 9.279 331.72158029999713 9.908)
Error minima by case: (0.3758 6 0.7655 7 2.8962 8 0.8102 6 10.5998 7 0.5648 7 22.0596 6 2.2188 7 5.767 8 0.2926 6 5.257 9 0.9044 6 1.7147 7 0.0756 7 4.6717 8 1.7256 7 0.4185 7 0.4269 8 0.0641 6 0.3032 8 4.53 8 10.7612 9 1.419 7 0.3256 6 1.3559 7)
Average genome size in population (length): 132.848
Average program size in population (points): 133.848
Average percent parens in population: 0.008
Minimum age in population: 258.8390844048556
Maximum age in population: 263.5438005782552
Average age in population: 261.3138081284773
Median age in population: 261.3974049801264
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.537
Error (vector) diversity:			 0.587
Behavioral diversity:				 0.59
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 663301441
--- Timings ---
Current time: 1529616524786 milliseconds
Total Time:        1053.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       280.8 seconds, 26.6%
Fitness Testing:    609.8 seconds, 57.9%
Report:             163.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 70799.52949999996
Test mean error for best: 35.39976
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0371760   
Correct output: 119.1092560212 | Program output: 29.09160114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0683791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0764599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_yank} {:instruction float_rot} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction 14.620427692976762} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction in1} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_662} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction tagged_97} {:instruction integer_dec} {:instruction integer_max} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_max} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction integer_mult} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_yankdup integer_fromfloat integer_add float_yankdup float_dup_items integer_add float_yankdup float_yank integer_stackdepth integer_rot integer_dup_items integer_mult float_yank float_rot integer_sub integer_shove float_rot integer_stackdepth integer_dup float_dup_items integer_add 14.620427692976762 float_yank float_rot integer_rot integer_dup_items integer_dup_items in1 -37 in2 integer_stackdepth in2 integer_stackdepth float_rot float_min integer_inc in2 integer_stackdepth in1 tagged_662 integer_sub integer_stackdepth float_mod integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop tagged_97 integer_dec integer_max float_sin print_integer in1 integer_flush float_max integer_add in2 -36 integer_add float_mod 18 integer_max 33 integer_shove 18 integer_max float_div integer_yank float_pop float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div integer_mult integer_yank float_rot integer_mult integer_max integer_mod integer_yank integer_shove 17 integer_add integer_add print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4232 9 90.0177 7 72.2448 8 49.7315 9 7.2981 7 85.283 12 7.0563 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9002
Mean: 23.478004
Genome size: 140
Size: 141
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7729.375478400003
Median total errors in population: 1225.8334499999999
Error averages by case: (298.2309825000021 7.915 314.3835469000017 9.989 323.57542319999845 11.163 314.6837573999996 10.508 335.38939070000094 11.173 164.51591689999992 9.875 233.23997069999731 8.389 338.307253999996 9.122 333.17655299999836 10.077 161.08930010000077 8.542 348.7050717999986 12.021 161.64762310000188 9.086 304.47768469999943 9.69 309.15915269999897 10.929 316.07506680000074 10.041 330.0431564000028 9.258 304.60328639999983 9.361 321.0345108000005 10.118 300.00375570000006 9.03 305.2822124000008 10.199 354.11706779999776 10.956 334.9871401000012 11.107 326.4090861000031 9.351 304.74324479999825 9.372 344.3323233999968 9.891)
Error minima by case: (0.3883 6 0.2345 7 2.8712 8 0.2258 6 2.4382 7 3.4486 7 22.0187 6 0.2168 7 1.7667 7 0.2926 6 0.718 9 0.0956 7 1.7147 6 0.925 8 4.2908 8 2.2752 7 0.4185 7 1.3989 7 0.9016 6 0.3133 7 3.4855 7 2.2058 8 0.4405 7 0.3256 6 0.3309 7)
Average genome size in population (length): 133.115
Average program size in population (points): 134.115
Average percent parens in population: 0.008
Minimum age in population: 260.3127861254806
Maximum age in population: 264.2613072008045
Average age in population: 262.5911716035037
Median age in population: 262.6208271268136
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.514
Error (vector) diversity:			 0.562
Behavioral diversity:				 0.563
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 666629666
--- Timings ---
Current time: 1529616530216 milliseconds
Total Time:        1059.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       282.2 seconds, 26.6%
Fitness Testing:    613.0 seconds, 57.9%
Report:             164.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 70799.52949999996
Test mean error for best: 35.39976
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0371760   
Correct output: 119.1092560212 | Program output: 29.09160114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0683791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0764599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_max} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_yank} {:instruction float_rot} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction 14.620427692976762} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction in1} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_662} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction tagged_97} {:instruction integer_dec} {:instruction integer_max} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_max} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_pop} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction integer_mod} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_yankdup integer_max integer_add float_yankdup float_dup_items integer_add float_yankdup float_yank integer_stackdepth integer_rot integer_dup_items integer_mult float_yank float_rot integer_sub integer_shove float_rot integer_stackdepth integer_dup float_dup_items integer_add 14.620427692976762 float_yank float_rot integer_rot integer_dup_items integer_dup_items in1 -37 in2 integer_stackdepth in2 integer_stackdepth float_rot float_min integer_inc in2 integer_stackdepth in1 tagged_662 integer_sub integer_stackdepth float_mod integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop tagged_97 integer_dec integer_max float_sin print_integer in1 integer_flush float_max integer_add in2 -36 integer_add float_mod float_cos integer_shove 18 integer_max 33 float_pop integer_yank float_pop float_add float_add integer_dec float_sub print_integer integer_mod in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4232 9 90.0177 7 72.2448 8 49.7315 9 7.2981 7 85.283 12 7.0563 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9002
Mean: 23.478004
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7822.826415100003
Median total errors in population: 1234.9071999999999
Error averages by case: (298.2710426000012 7.941 312.76815430000113 9.912 324.16837039999876 11.146 317.3775737999996 10.42 338.0127482000013 11.13 181.8516602000001 9.867 248.16387709999793 8.58 340.38347649999724 9.13 336.0193814999988 10.019 175.64214150000078 8.753 349.88245949999913 11.96 175.55279820000143 9.181 306.7869149999999 9.618 310.6793395999995 10.826 317.47151030000026 10.022 333.8430433000021 9.254 307.13958079999964 9.338 322.4437373000009 10.108 301.14000080000045 9.014 308.1453235000009 10.114 356.67452549999786 10.926 333.61339860000055 11.036 326.6936857000026 9.353 307.64027389999836 9.294 345.56939699999754 9.95)
Error minima by case: (0.3754 6 0.1817 7 5.8982 9 0.8262 6 1.4011 8 0.5572 7 22.0127 6 1.2408 7 2.2367 7 0.2926 6 1.255 9 0.9184 6 1.7147 6 0.005 6 0.7012 8 1.7219 7 0.4185 6 0.591 7 0.9079 6 0.3317 7 1.49 7 1.2478 7 0.4247 7 0.3256 6 5.3579 7)
Average genome size in population (length): 132.848
Average program size in population (points): 133.848
Average percent parens in population: 0.008
Minimum age in population: 261.3127861254806
Maximum age in population: 265.8865941553664
Average age in population: 263.9185555718829
Median age in population: 263.9703016818775
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.544
Error (vector) diversity:			 0.614
Behavioral diversity:				 0.617
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 669951691
--- Timings ---
Current time: 1529616535655 milliseconds
Total Time:        1064.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       283.6 seconds, 26.6%
Fitness Testing:    616.1 seconds, 57.9%
Report:             165.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 70799.52949999996
Test mean error for best: 35.39976
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0491736   
Correct output: -80.8416452312 | Program output: -56.0461736   
Correct output: -30.9193529897 | Program output: -78.0491736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0491736   
Correct output: -28.4603903776 | Program output: -13.0371760   
Correct output: 119.1092560212 | Program output: 29.09160114   
Correct output: -2.804364668   | Program output: -75.0491736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0683791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0764599     
Correct output: -97.3585137143 | Program output: -87.0491736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0491736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0491736   
Correct output: -110.8403243704 | Program output: -56.0461736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0421736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_max} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_yank} {:instruction float_rot} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction 14.620427692976762} {:instruction float_yank} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction in1} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_662} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_yank} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction tagged_97} {:instruction integer_dec} {:instruction integer_max} {:instruction float_sin} {:instruction print_integer} {:instruction in1} {:instruction integer_flush} {:instruction float_max} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction float_cos} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_pop} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_add} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_div} {:instruction integer_max} {:instruction float_swap} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_fromfloat integer_min integer_yankdup integer_max integer_add float_yankdup float_dup_items integer_add float_yankdup float_yank integer_stackdepth integer_rot integer_dup_items integer_mult float_yank float_rot integer_sub integer_shove float_rot integer_stackdepth integer_dup float_dup_items integer_add 14.620427692976762 float_yank float_rot integer_rot integer_dup_items integer_dup_items in1 -37 in2 integer_stackdepth in2 integer_stackdepth float_rot float_min integer_inc in2 integer_stackdepth in1 tagged_662 integer_sub integer_stackdepth float_mod integer_inc integer_dup_items -39 integer_yankdup integer_stackdepth integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_dup_times float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 integer_yank integer_rot print_float integer_shove integer_stackdepth print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop tagged_97 integer_dec integer_max float_sin print_integer in1 integer_flush float_max integer_add in2 -36 integer_add float_mod float_cos integer_shove 18 integer_max 33 float_pop integer_yank float_pop float_add float_add integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 integer_swap integer_max float_div float_div integer_yank float_rot integer_div integer_max float_swap integer_yank float_rot integer_yank float_div float_div integer_yank float_rot integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add integer_add print_float print_integer -87.83828339275286)
Errors: [0.5867 6 24.7955 9 47.1298 11 23.2218 10 54.5618 11 15.4232 9 90.0177 7 72.2448 8 49.7315 9 7.2981 7 85.283 12 7.0563 8 10.3093 9 18.9624 11 34.7092 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5509 11 54.7942 11 52.5885 8 19.6248 8 78.6701 9]
Total: 1173.9002
Mean: 23.478004
Genome size: 146
Size: 147
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 7757.0402550000035
Median total errors in population: 1232.7925999999998
Error averages by case: (292.88460150000196 7.912 308.59254940000113 9.98 318.65681799999885 11.116 313.10702469999967 10.478 333.68759500000056 11.149 190.6099913000004 9.782 255.07225339999783 8.461 334.6324069999968 9.071 332.03590659999844 10.057 182.954940600001 8.511 345.80298069999884 11.948 188.00723390000147 9.044 303.0132742999992 9.622 305.68088709999887 10.864 313.32551030000093 10.007 329.92489890000223 9.247 302.58870439999987 9.373 317.50894129999983 10.082 296.7142158000001 9.023 303.0618542000005 10.185 349.38893719999845 10.872 329.6181324000009 11.078 321.9551600000029 9.349 300.51481579999864 9.285 341.3776211999976 9.827)
Error minima by case: (0.3893 6 0.7775 7 1.1124 8 0.8262 7 2.5918 7 0.5518 7 13.0132 6 1.2408 6 13.7686 7 0.2926 6 0.716 8 0.904 6 0.2893 7 0.005 6 3.6917 8 9.7272 7 0.3675 6 0.5891 8 0.9037 7 0.3116 8 4.4886 7 10.823 9 1.409 7 0.3256 7 0.3289 7)
Average genome size in population (length): 133.537
Average program size in population (points): 134.537
Average percent parens in population: 0.007
Minimum age in population: 262.8367055082892
Maximum age in population: 267.2914222027087
Average age in population: 265.279836051788
Median age in population: 265.3159478730722
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.549
Error (vector) diversity:			 0.612
Behavioral diversity:				 0.615
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 673291591
--- Timings ---
Current time: 1529616541083 milliseconds
Total Time:        1070.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       285.0 seconds, 26.6%
Fitness Testing:    619.2 seconds, 57.9%
Report:             165.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 115286.66900000001
Test mean error for best: 57.64333
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0481736   
Correct output: -80.8416452312 | Program output: -56.0421736   
Correct output: -30.9193529897 | Program output: -78.0361736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0461736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0331736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0451736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0461736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0391736   
Correct output: -110.8403243704 | Program output: -56.0421736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0341736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_inc} {:instruction float_yank} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_sin} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_max} {:instruction 33} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction integer_swap} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_add integer_inc float_yank float_rot float_tan integer_shove float_cos integer_div float_dup_items float_dup_items integer_add float_yankdup float_yank float_rot integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_inc integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_sin float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_add integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_sub integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_max 33 integer_dec integer_yank float_pop float_add float_add integer_dec float_sub print_integer float_inc integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 float_dec integer_max integer_yankdup float_div float_div integer_yank integer_min integer_max float_div float_div integer_yank float_dec integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div integer_swap print_integer -87.83828339275286)
Errors: [0.5877 6 24.7995 10 47.1168 11 23.2218 10 54.5648 10 15.4242 9 90.0187 7 72.2288 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3133 8 18.9624 11 34.7062 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5409 11 54.7982 10 52.5885 8 19.6168 8 78.6701 9]
Total: 1171.8682
Mean: 23.437365
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8088.8887041000025
Median total errors in population: 1227.7398
Error averages by case: (307.0598747000012 7.922 322.40203890000106 10.035 335.1165607999987 11.24 327.40677419999963 10.489 346.93750710000177 11.203 200.6562587000006 10.008 258.18306669999816 8.79 351.99712749999657 9.196 344.62062109999823 10.11 190.03756760000073 8.88 361.352721499999 12.134 188.7085192000012 9.338 317.32210790000005 9.733 320.7933434000002 10.957 327.74609489999955 10.081 342.40999470000264 9.228 317.2761906999988 9.402 330.98963160000085 10.168 311.8717814000009 9.072 317.05755330000125 10.233 368.5681331999971 10.968 342.7831474000008 11.132 337.23567410000294 9.417 314.39247289999804 9.294 356.93894059999707 9.995)
Error minima by case: (0.3825 6 0.7825 8 2.8702 8 0.7882 6 10.5998 8 0.4242 7 22.0632 6 1.7812 7 5.767 7 0.2926 6 0.717 7 1.0606 6 0.2893 7 0.995 7 1.7012 8 1.7255 7 0.4185 7 0.5891 8 0.0881 6 0.3318 8 4.45 8 10.761 8 0.4375 7 0.3256 6 0.3299 6)
Average genome size in population (length): 133.347
Average program size in population (points): 134.347
Average percent parens in population: 0.007
Minimum age in population: 264.1806749520031
Maximum age in population: 268.5474027003909
Average age in population: 266.6287146851323
Median age in population: 266.6944180893091
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.944
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.944
Total error diversity:				 0.533
Error (vector) diversity:			 0.581
Behavioral diversity:				 0.581
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 676628016
--- Timings ---
Current time: 1529616546434 milliseconds
Total Time:        1075.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       286.5 seconds, 26.6%
Fitness Testing:    622.2 seconds, 57.8%
Report:             166.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 115286.66900000001
Test mean error for best: 57.64333
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0481736   
Correct output: -80.8416452312 | Program output: -56.0421736   
Correct output: -30.9193529897 | Program output: -78.0361736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0461736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0331736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0451736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0461736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0391736   
Correct output: -110.8403243704 | Program output: -56.0421736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0341736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_inc} {:instruction float_yank} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_sin} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_max} {:instruction 33} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction integer_swap} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_add integer_inc float_yank float_rot float_tan integer_shove float_cos integer_div float_dup_items float_dup_items integer_add float_yankdup float_yank float_rot integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_inc integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_sin float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_add integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_sub integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_max 33 integer_dec integer_yank float_pop float_add float_add integer_dec float_sub print_integer float_inc integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 float_dec integer_max integer_yankdup float_div float_div integer_yank integer_min integer_max float_div float_div integer_yank float_dec integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div integer_swap print_integer -87.83828339275286)
Errors: [0.5877 6 24.7995 10 47.1168 11 23.2218 10 54.5648 10 15.4242 9 90.0187 7 72.2288 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3133 8 18.9624 11 34.7062 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5409 11 54.7982 10 52.5885 8 19.6168 8 78.6701 9]
Total: 1171.8682
Mean: 23.437365
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8833.322475700004
Median total errors in population: 1234.6687499999998
Error averages by case: (339.2337031000008 8.141 351.3309600000011 10.181 363.4246907999987 11.527 352.8049059999998 10.69 373.748478500002 11.357 233.57225359999995 10.076 298.16571969999916 8.92 379.6290532999965 9.574 371.2140218999988 10.349 228.87890870000138 9.11 387.52727519999905 12.388 229.834166400001 9.41 346.2777918000001 9.891 348.4818856 11.113 356.85501189999934 10.41 369.0770424000023 9.505 343.1752374999987 9.638 360.0473331000012 10.35 339.1934343000012 9.274 345.67323910000135 10.384 394.3383670999976 11.207 370.85143660000085 11.253 366.60547730000263 9.741 345.631905999998 9.537 383.3751757999974 10.349)
Error minima by case: (0.3893 5 0.8257 8 3.8692 8 0.81 7 5.4014 8 0.5548 7 23.1058 6 0.7726 6 5.7655 7 0.2921 6 1.716 9 0.9364 6 0.7132 7 0.0676 7 1.7417 7 1.7241 7 0.3706 7 3.4139 8 0.9079 6 0.2918 7 1.4483 8 5.2508 8 0.4433 7 0.3256 7 1.3289 7)
Average genome size in population (length): 133.841
Average program size in population (points): 134.841
Average percent parens in population: 0.007
Minimum age in population: 265.1806749520031
Maximum age in population: 270.3387351768231
Average age in population: 267.9557846632991
Median age in population: 267.9882123367386
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.555
Error (vector) diversity:			 0.618
Behavioral diversity:				 0.619
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 679979470
--- Timings ---
Current time: 1529616552072 milliseconds
Total Time:        1081.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       288.1 seconds, 26.6%
Fitness Testing:    625.4 seconds, 57.8%
Report:             167.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 115286.66900000001
Test mean error for best: 57.64333
;;------------------------------
Outputs of best individual on training cases:
Correct output: -59.6358937036 | Program output: -59.0481736   
Correct output: -80.8416452312 | Program output: -56.0421736   
Correct output: -30.9193529897 | Program output: -78.0361736   
Correct output: -129.2709853231 | Program output: -106.0491736  
Correct output: -142.6109625327 | Program output: -88.0461736   
Correct output: -28.4603903776 | Program output: -13.0361760   
Correct output: 119.1092560212 | Program output: 29.09060114   
Correct output: -2.804364668   | Program output: -75.0331736   
Correct output: -163.7806987108 | Program output: -114.0491736  
Correct output: 19.3664379282  | Program output: 12.0673791    
Correct output: -28.7661462515 | Program output: -114.0491736  
Correct output: -2.9798498499  | Program output: 4.0754599     
Correct output: -97.3585137143 | Program output: -87.0451736   
Correct output: -94.0867625621 | Program output: -113.0491736  
Correct output: -53.340003998  | Program output: -88.0461736   
Correct output: -171.739275996 | Program output: -126.0491736  
Correct output: -113.6467160746 | Program output: -106.0491736  
Correct output: -99.4921227055 | Program output: -64.0491736   
Correct output: -67.9651207486 | Program output: -63.0491736   
Correct output: -109.3549767957 | Program output: -122.0491736  
Correct output: 14.5017756451  | Program output: -81.0391736   
Correct output: -110.8403243704 | Program output: -56.0421736   
Correct output: -11.4606904356 | Program output: -64.0491736   
Correct output: -32.4173586228 | Program output: -52.0341736   
Correct output: -28.3791179266 | Program output: -107.0491736  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_inc} {:instruction float_yank} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_div} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_mult} {:instruction -37} {:instruction in2} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction -39} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_274} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_sin} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction integer_rot} {:instruction print_float} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_div} {:instruction float_sin} {:instruction print_integer} {:instruction integer_add} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_add} {:instruction in2} {:instruction -36} {:instruction integer_add} {:instruction float_mod} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_shove} {:instruction 18} {:instruction integer_max} {:instruction 33} {:instruction float_div} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_max} {:instruction 33} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_pop} {:instruction float_add} {:instruction float_add} {:instruction integer_dec} {:instruction float_sub} {:instruction print_integer} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction print_integer} {:instruction float_inc} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction 19} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_max} {:instruction float_div} {:instruction float_div} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction 17} {:instruction integer_add} {:instruction float_div} {:instruction integer_swap} {:instruction print_integer} {:instruction -87.83828339275286})
Best program: (integer_add integer_inc float_yank float_rot float_tan integer_shove float_cos integer_div float_dup_items float_dup_items integer_add float_yankdup float_yank float_rot integer_mult -37 in2 integer_stackdepth in2 integer_stackdepth float_pop float_min integer_inc in2 integer_stackdepth in1 float_flush integer_sub integer_stackdepth integer_inc integer_inc integer_dup_items -39 integer_inc integer_stackdepth float_add float_sin integer_dup_items in2 tag_float_274 float_rot integer_mod in2 integer_stackdepth integer_inc integer_inc in2 integer_stackdepth float_dec integer_sub integer_stackdepth integer_dec integer_sub integer_mod float_sin float_frominteger integer_sub integer_dup_items integer_rot print_float integer_stackdepth in2 float_sub integer_rot print_float integer_shove integer_pop integer_dup integer_stackdepth print_float integer_stackdepth integer_shove float_add integer_dup integer_dec float_div float_sin print_integer integer_add integer_flush float_inc integer_add in2 -36 integer_add float_mod integer_shove float_sub integer_shove 18 integer_max 33 float_div integer_yank float_pop integer_max 33 integer_dec integer_yank float_pop float_add float_add integer_dec float_sub print_integer float_inc integer_dec print_float print_integer float_inc in2 integer_yankdup integer_shove 19 float_dec integer_max integer_yankdup float_div float_div integer_yank integer_min integer_max float_div float_div integer_yank float_dec integer_yank integer_max integer_mod integer_yank integer_shove 17 integer_add float_div integer_swap print_integer -87.83828339275286)
Errors: [0.5877 6 24.7995 10 47.1168 11 23.2218 10 54.5648 10 15.4242 9 90.0187 7 72.2288 8 49.7315 9 7.2991 7 85.283 12 7.0553 8 10.3133 8 18.9624 11 34.7062 9 45.6901 8 7.5975 8 35.4429 9 4.9159 8 12.6942 9 95.5409 11 54.7982 10 52.5885 8 19.6168 8 78.6701 9]
Total: 1171.8682
Mean: 23.437365
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 8649.175484200005
Median total errors in population: 1235.9559000000002
Error averages by case: (325.5053357000013 8.133 343.17161610000164 10.125 352.1894488999989 11.544 346.41298899999924 10.671 366.37995960000194 11.328 237.009579 10.015 301.9958946999993 9.351 366.4673563999966 9.552 363.57603319999794 10.299 236.3363688000017 9.266 375.51017799999937 12.328 238.7207628000005 9.605 336.8728105000004 9.835 338.9348789000001 10.963 346.8286290000001 10.312 361.52395090000186 9.445 336.7194495999994 9.577 349.56063830000096 10.312 328.2128155000008 9.209 337.4737806000016 10.348 382.0943356999969 11.147 362.851350900001 11.207 353.1054845000032 9.715 336.4565231999977 9.46 371.2453143999976 10.273)
Error minima by case: (0.3658 6 0.8025 6 1.8476 8 2.7474 7 1.4282 6 1.4242 6 2.9873 5 1.2174 6 13.7525 7 0.2926 6 0.2452 9 0.0453 6 1.7147 6 0.0756 5 0.2583 7 9.7111 6 0.3935 7 0.5361 6 0.0951 6 0.3318 6 1.47 6 18.7672 7 1.389 7 0.3241 6 0.3579 6)
Average genome size in population (length): 134.86
Average program size in population (points): 135.86
Average percent parens in population: 0.007
Minimum age in population: 266.4002173582419
Maximum age in population: 270.9513351834795
Average age in population: 269.1929435828108
Median age in population: 269.232984056559
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.563
Error (vector) diversity:			 0.641
Behavioral diversity:				 0.643
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 683360820
--- Timings ---
Current time: 1529616557654 milliseconds
Total Time:        1086.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       289.5 seconds, 26.6%
Fitness Testing:    628.8 seconds, 57.8%
Report:             168.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
