Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-37.89552285548381 63] 25.10447714451619]
Train Case:   1 | Input/Output: [[99.46037445848438 -22] 77.46037445848438]
Train Case:   2 | Input/Output: [[91.61991399072011 -22] 69.61991399072011]
Train Case:   3 | Input/Output: [[-63.91152103992059 -16] -79.91152103992059]
Train Case:   4 | Input/Output: [[55.406388470558795 1] 56.406388470558795]
Train Case:   5 | Input/Output: [[-91.6303704081424 -37] -128.6303704081424]
Train Case:   6 | Input/Output: [[-15.511018777818109 -82] -97.51101877781811]
Train Case:   7 | Input/Output: [[35.27548967057771 -45] -9.724510329422287]
Train Case:   8 | Input/Output: [[13.348258774473607 19] 32.34825877447361]
Train Case:   9 | Input/Output: [[-25.460969190542613 -99] -124.46096919054261]
Train Case:  10 | Input/Output: [[3.2951873639582345 47] 50.295187363958235]
Train Case:  11 | Input/Output: [[-66.86810062495776 16] -50.86810062495776]
Train Case:  12 | Input/Output: [[-69.46157702720848 93] 23.538422972791523]
Train Case:  13 | Input/Output: [[-53.96409863932941 44] -9.964098639329407]
Train Case:  14 | Input/Output: [[48.331071107072916 -75] -26.668928892927084]
Train Case:  15 | Input/Output: [[-37.12031203531283 12] -25.12031203531283]
Train Case:  16 | Input/Output: [[-7.286306007460098 -24] -31.286306007460098]
Train Case:  17 | Input/Output: [[-10.965668318879509 44] 33.03433168112049]
Train Case:  18 | Input/Output: [[-32.462871704190974 39] 6.537128295809026]
Train Case:  19 | Input/Output: [[88.04057823088237 95] 183.04057823088237]
Train Case:  20 | Input/Output: [[82.83188623997717 -43] 39.831886239977166]
Train Case:  21 | Input/Output: [[-26.143905324126962 35] 8.856094675873038]
Train Case:  22 | Input/Output: [[80.80486439242307 71] 151.80486439242307]
Train Case:  23 | Input/Output: [[-17.572357300001485 -44] -61.572357300001485]
Train Case:  24 | Input/Output: [[33.50604307913528 -21] 12.506043079135281]
Test Case:   0 | Input/Output: [[98.49711216647452 34] 132.49711216647452]
Test Case:   1 | Input/Output: [[13.231231423274536 83] 96.23123142327454]
Test Case:   2 | Input/Output: [[38.51998050714269 7] 45.51998050714269]
Test Case:   3 | Input/Output: [[55.627917975831224 67] 122.62791797583122]
Test Case:   4 | Input/Output: [[21.39392799076245 100] 121.39392799076245]
Test Case:   5 | Input/Output: [[-59.834834300614844 -93] -152.83483430061483]
Test Case:   6 | Input/Output: [[39.749152598712385 89] 128.74915259871239]
Test Case:   7 | Input/Output: [[-65.68106214148622 -94] -159.68106214148622]
Test Case:   8 | Input/Output: [[22.964493500996426 61] 83.96449350099643]
Test Case:   9 | Input/Output: [[-85.22006553104103 -36] -121.22006553104103]
Test Case:  10 | Input/Output: [[-23.111491098707802 6] -17.111491098707802]
Test Case:  11 | Input/Output: [[-1.3200494722064917 92] 90.67995052779351]
Test Case:  12 | Input/Output: [[92.38671189458861 -11] 81.38671189458861]
Test Case:  13 | Input/Output: [[92.12106675216694 -18] 74.12106675216694]
Test Case:  14 | Input/Output: [[16.017227260982565 21] 37.017227260982565]
Test Case:  15 | Input/Output: [[-30.989347280356895 -29] -59.989347280356895]
Test Case:  16 | Input/Output: [[-81.36943213917792 -15] -96.36943213917792]
Test Case:  17 | Input/Output: [[-69.92091239069403 -95] -164.920912390694]
Test Case:  18 | Input/Output: [[31.52619298501014 -83] -51.47380701498986]
Test Case:  19 | Input/Output: [[-48.83934883031924 27] -21.83934883031924]
Test Case:  20 | Input/Output: [[-12.00458812180247 95] 82.99541187819753]
Test Case:  21 | Input/Output: [[-20.785761080992927 80] 59.21423891900707]
Test Case:  22 | Input/Output: [[-49.31619193255834 53] 3.6838080674416602]
Test Case:  23 | Input/Output: [[8.225307628010754 -91] -82.77469237198925]
Test Case:  24 | Input/Output: [[-89.07255495191744 -50] -139.07255495191743]
Test Case:  25 | Input/Output: [[68.96943342684418 -97] -28.030566573155824]
Test Case:  26 | Input/Output: [[-19.784759824913124 -21] -40.784759824913124]
Test Case:  27 | Input/Output: [[-81.26090221595291 85] 3.7390977840470896]
Test Case:  28 | Input/Output: [[-92.67186571662616 -74] -166.67186571662614]
Test Case:  29 | Input/Output: [[-28.962481110035682 46] 17.037518889964318]
Test Case:  30 | Input/Output: [[1.4158715575971428 8] 9.415871557597143]
Test Case:  31 | Input/Output: [[88.96529504616854 -14] 74.96529504616854]
Test Case:  32 | Input/Output: [[78.54577998244514 66] 144.54577998244514]
Test Case:  33 | Input/Output: [[81.01144742063474 58] 139.01144742063474]
Test Case:  34 | Input/Output: [[-13.784913129220925 -46] -59.784913129220925]
Test Case:  35 | Input/Output: [[-37.09337025277595 -13] -50.09337025277595]
Test Case:  36 | Input/Output: [[93.81627764563848 -43] 50.81627764563848]
Test Case:  37 | Input/Output: [[-48.99438646239369 -98] -146.9943864623937]
Test Case:  38 | Input/Output: [[-54.66874493212144 98] 43.33125506787856]
Test Case:  39 | Input/Output: [[19.427071744092487 97] 116.42707174409249]
Test Case:  40 | Input/Output: [[-37.38524640375287 -72] -109.38524640375287]
Test Case:  41 | Input/Output: [[-20.35065688920514 19] -1.3506568892051405]
Test Case:  42 | Input/Output: [[-46.62975784751859 80] 33.37024215248141]
Test Case:  43 | Input/Output: [[-28.888943242606445 87] 58.111056757393555]
Test Case:  44 | Input/Output: [[-23.167100516084844 -58] -81.16710051608484]
Test Case:  45 | Input/Output: [[20.91301022137702 93] 113.91301022137702]
Test Case:  46 | Input/Output: [[-2.045484962567997 75] 72.954515037432]
Test Case:  47 | Input/Output: [[74.57814934343446 -61] 13.578149343434461]
Test Case:  48 | Input/Output: [[3.8268583395784077 44] 47.82685833957841]
Test Case:  49 | Input/Output: [[10.011919083474012 61] 71.01191908347401]
Test Case:  50 | Input/Output: [[26.153344271512097 -26] 0.15334427151209695]
Test Case:  51 | Input/Output: [[32.95903709864206 -76] -43.04096290135794]
Test Case:  52 | Input/Output: [[64.67909163443906 -85] -20.32090836556094]
Test Case:  53 | Input/Output: [[-57.2474207845161 85] 27.752579215483898]
Test Case:  54 | Input/Output: [[-57.681107705016956 47] -10.681107705016956]
Test Case:  55 | Input/Output: [[-55.728064712879146 99] 43.271935287120854]
Test Case:  56 | Input/Output: [[28.06935432593332 -57] -28.93064567406668]
Test Case:  57 | Input/Output: [[82.83843832535723 -67] 15.838438325357231]
Test Case:  58 | Input/Output: [[-60.12430911579194 -37] -97.12430911579193]
Test Case:  59 | Input/Output: [[-24.672001737401033 -83] -107.67200173740103]
Test Case:  60 | Input/Output: [[-93.00561119119111 11] -82.00561119119111]
Test Case:  61 | Input/Output: [[36.600339062059504 55] 91.6003390620595]
Test Case:  62 | Input/Output: [[45.76303565663741 7] 52.76303565663741]
Test Case:  63 | Input/Output: [[30.044185056302894 17] 47.044185056302894]
Test Case:  64 | Input/Output: [[-18.166269918997415 -67] -85.16626991899741]
Test Case:  65 | Input/Output: [[71.20085697591219 18] 89.20085697591219]
Test Case:  66 | Input/Output: [[-10.049604670583065 13] 2.950395329416935]
Test Case:  67 | Input/Output: [[-42.79518402822158 18] -24.795184028221577]
Test Case:  68 | Input/Output: [[40.8071793471712 68] 108.8071793471712]
Test Case:  69 | Input/Output: [[17.21204464542663 -13] 4.21204464542663]
Test Case:  70 | Input/Output: [[83.94876227849483 85] 168.94876227849483]
Test Case:  71 | Input/Output: [[43.01658361078708 -81] -37.98341638921292]
Test Case:  72 | Input/Output: [[5.204539981653895 1] 6.204539981653895]
Test Case:  73 | Input/Output: [[60.00800072572622 -55] 5.00800072572622]
Test Case:  74 | Input/Output: [[-10.220146762155437 -43] -53.22014676215544]
Test Case:  75 | Input/Output: [[49.92180224773875 87] 136.92180224773875]
Test Case:  76 | Input/Output: [[-7.804237054040968 34] 26.195762945959032]
Test Case:  77 | Input/Output: [[-92.74040377420667 65] -27.74040377420667]
Test Case:  78 | Input/Output: [[95.13621141552372 51] 146.13621141552372]
Test Case:  79 | Input/Output: [[-77.87185427627976 21] -56.87185427627976]
Test Case:  80 | Input/Output: [[19.784141987978416 -33] -13.215858012021584]
Test Case:  81 | Input/Output: [[-39.02863553816842 6] -33.02863553816842]
Test Case:  82 | Input/Output: [[90.1445141598225 -29] 61.144514159822506]
Test Case:  83 | Input/Output: [[0.3107279096193736 93] 93.31072790961937]
Test Case:  84 | Input/Output: [[79.89034214946929 -100] -20.10965785053071]
Test Case:  85 | Input/Output: [[-98.83448205083995 -24] -122.83448205083995]
Test Case:  86 | Input/Output: [[70.41154700362097 90] 160.41154700362097]
Test Case:  87 | Input/Output: [[17.668370538195717 26] 43.66837053819572]
Test Case:  88 | Input/Output: [[60.76568900293441 -8] 52.76568900293441]
Test Case:  89 | Input/Output: [[1.7022767399917882 12] 13.702276739991788]
Test Case:  90 | Input/Output: [[-44.39914151402897 62] 17.60085848597103]
Test Case:  91 | Input/Output: [[-92.11720488413759 90] -2.1172048841375926]
Test Case:  92 | Input/Output: [[61.206161071265655 84] 145.20616107126565]
Test Case:  93 | Input/Output: [[94.37779515615597 19] 113.37779515615597]
Test Case:  94 | Input/Output: [[0.11120846502734594 33] 33.111208465027346]
Test Case:  95 | Input/Output: [[-27.498658146893177 -44] -71.49865814689318]
Test Case:  96 | Input/Output: [[26.42781116819239 -9] 17.42781116819239]
Test Case:  97 | Input/Output: [[-95.48172257575753 -16] -111.48172257575753]
Test Case:  98 | Input/Output: [[-74.19834484059278 96] 21.80165515940722]
Test Case:  99 | Input/Output: [[24.153087439971173 9] 33.15308743997117]
Test Case: 100 | Input/Output: [[28.31465644392344 37] 65.31465644392344]
Test Case: 101 | Input/Output: [[-43.828619885383624 -33] -76.82861988538363]
Test Case: 102 | Input/Output: [[-84.68697487719167 -46] -130.6869748771917]
Test Case: 103 | Input/Output: [[-68.28981747986975 68] -0.2898174798697539]
Test Case: 104 | Input/Output: [[75.56832970479223 -52] 23.568329704792234]
Test Case: 105 | Input/Output: [[84.74690890421249 -97] -12.25309109578751]
Test Case: 106 | Input/Output: [[-0.2918880191890736 -44] -44.291888019189074]
Test Case: 107 | Input/Output: [[11.583899287589958 35] 46.58389928758996]
Test Case: 108 | Input/Output: [[-36.409546403389534 53] 16.590453596610466]
Test Case: 109 | Input/Output: [[42.743219835992306 -19] 23.743219835992306]
Test Case: 110 | Input/Output: [[80.45801590381149 -71] 9.458015903811486]
Test Case: 111 | Input/Output: [[46.06867547249675 -17] 29.06867547249675]
Test Case: 112 | Input/Output: [[58.99194047055258 91] 149.99194047055258]
Test Case: 113 | Input/Output: [[91.81786579820647 44] 135.81786579820647]
Test Case: 114 | Input/Output: [[-46.071960724922675 84] 37.928039275077325]
Test Case: 115 | Input/Output: [[-92.89009969012405 45] -47.890099690124046]
Test Case: 116 | Input/Output: [[-6.54950745310974 97] 90.45049254689026]
Test Case: 117 | Input/Output: [[66.17238344728648 69] 135.17238344728648]
Test Case: 118 | Input/Output: [[29.87040999367656 40] 69.87040999367656]
Test Case: 119 | Input/Output: [[83.53180239953846 -56] 27.531802399538464]
Test Case: 120 | Input/Output: [[-78.83110587095341 -38] -116.83110587095341]
Test Case: 121 | Input/Output: [[95.96681795248554 14] 109.96681795248554]
Test Case: 122 | Input/Output: [[28.53142394667077 37] 65.53142394667077]
Test Case: 123 | Input/Output: [[-37.19604338112592 -4] -41.19604338112592]
Test Case: 124 | Input/Output: [[84.64741591619983 -81] 3.647415916199833]
Test Case: 125 | Input/Output: [[-27.764335253344584 91] 63.23566474665542]
Test Case: 126 | Input/Output: [[68.63072434904848 28] 96.63072434904848]
Test Case: 127 | Input/Output: [[-64.08655009564427 -21] -85.08655009564427]
Test Case: 128 | Input/Output: [[-25.20606269129 -93] -118.20606269129]
Test Case: 129 | Input/Output: [[-62.671783784724376 83] 20.328216215275624]
Test Case: 130 | Input/Output: [[-6.715253306611984 37] 30.284746693388016]
Test Case: 131 | Input/Output: [[30.369364433351166 66] 96.36936443335117]
Test Case: 132 | Input/Output: [[-52.4323372091025 0] -52.4323372091025]
Test Case: 133 | Input/Output: [[79.24178615353065 76] 155.24178615353065]
Test Case: 134 | Input/Output: [[48.25213130422952 34] 82.25213130422952]
Test Case: 135 | Input/Output: [[-46.98046676692933 -37] -83.98046676692934]
Test Case: 136 | Input/Output: [[-55.36987673539233 -8] -63.36987673539233]
Test Case: 137 | Input/Output: [[-47.04318623072421 -100] -147.04318623072422]
Test Case: 138 | Input/Output: [[-91.84475754929426 16] -75.84475754929426]
Test Case: 139 | Input/Output: [[60.80980083255935 -12] 48.80980083255935]
Test Case: 140 | Input/Output: [[-94.01145346656483 66] -28.01145346656483]
Test Case: 141 | Input/Output: [[-67.21006179144895 70] 2.7899382085510496]
Test Case: 142 | Input/Output: [[33.43720514957883 17] 50.43720514957883]
Test Case: 143 | Input/Output: [[12.034430723802544 -2] 10.034430723802544]
Test Case: 144 | Input/Output: [[93.32772159202702 74] 167.32772159202702]
Test Case: 145 | Input/Output: [[-77.65054296110779 -61] -138.6505429611078]
Test Case: 146 | Input/Output: [[51.68751799371614 -83] -31.312482006283858]
Test Case: 147 | Input/Output: [[-77.4319337453263 14] -63.431933745326305]
Test Case: 148 | Input/Output: [[71.24252736723821 -92] -20.75747263276179]
Test Case: 149 | Input/Output: [[-63.992950362014575 97] 33.007049637985425]
Test Case: 150 | Input/Output: [[-99.74624639478267 -91] -190.74624639478267]
Test Case: 151 | Input/Output: [[62.160646132725475 -51] 11.160646132725475]
Test Case: 152 | Input/Output: [[33.50718945243773 72] 105.50718945243773]
Test Case: 153 | Input/Output: [[54.11939303236224 -81] -26.88060696763776]
Test Case: 154 | Input/Output: [[-90.35364271886633 -30] -120.35364271886633]
Test Case: 155 | Input/Output: [[-91.12616034486685 87] -4.126160344866847]
Test Case: 156 | Input/Output: [[-28.59245700460417 -87] -115.59245700460417]
Test Case: 157 | Input/Output: [[49.0147469832028 68] 117.0147469832028]
Test Case: 158 | Input/Output: [[41.600115528346805 86] 127.6001155283468]
Test Case: 159 | Input/Output: [[-24.34108776116514 93] 68.65891223883486]
Test Case: 160 | Input/Output: [[-79.89136001028334 80] 0.10863998971666433]
Test Case: 161 | Input/Output: [[4.886643309125205 -45] -40.113356690874795]
Test Case: 162 | Input/Output: [[68.26222523651307 48] 116.26222523651307]
Test Case: 163 | Input/Output: [[-36.55286911375419 -91] -127.55286911375418]
Test Case: 164 | Input/Output: [[-21.463366315908644 -42] -63.463366315908644]
Test Case: 165 | Input/Output: [[-84.34044372381473 -94] -178.34044372381473]
Test Case: 166 | Input/Output: [[38.35568300706754 28] 66.35568300706754]
Test Case: 167 | Input/Output: [[-12.219429677395667 43] 30.780570322604333]
Test Case: 168 | Input/Output: [[67.50455498290083 -6] 61.50455498290083]
Test Case: 169 | Input/Output: [[-52.962183559775575 -63] -115.96218355977558]
Test Case: 170 | Input/Output: [[-90.43377504056022 -34] -124.43377504056022]
Test Case: 171 | Input/Output: [[82.89693867886336 0] 82.89693867886336]
Test Case: 172 | Input/Output: [[-78.18254548609225 73] -5.182545486092252]
Test Case: 173 | Input/Output: [[-91.33657986361908 10] -81.33657986361908]
Test Case: 174 | Input/Output: [[48.313009104701564 -11] 37.313009104701564]
Test Case: 175 | Input/Output: [[87.72567700528185 41] 128.72567700528185]
Test Case: 176 | Input/Output: [[-99.88011866368196 17] -82.88011866368196]
Test Case: 177 | Input/Output: [[-17.942268221748336 -86] -103.94226822174834]
Test Case: 178 | Input/Output: [[81.73569231837388 -22] 59.73569231837388]
Test Case: 179 | Input/Output: [[-50.03302942290671 91] 40.96697057709329]
Test Case: 180 | Input/Output: [[16.917863102715188 80] 96.91786310271519]
Test Case: 181 | Input/Output: [[31.942142853685908 27] 58.94214285368591]
Test Case: 182 | Input/Output: [[-68.0405429413822 5] -63.0405429413822]
Test Case: 183 | Input/Output: [[-18.889314344802187 -74] -92.88931434480219]
Test Case: 184 | Input/Output: [[-88.8965987847404 -40] -128.8965987847404]
Test Case: 185 | Input/Output: [[10.368364742555642 -42] -31.63163525744436]
Test Case: 186 | Input/Output: [[-27.83701415901065 -35] -62.83701415901065]
Test Case: 187 | Input/Output: [[-41.774137728764615 -95] -136.77413772876463]
Test Case: 188 | Input/Output: [[83.40234259843115 86] 169.40234259843115]
Test Case: 189 | Input/Output: [[-23.390664307895676 -4] -27.390664307895676]
Test Case: 190 | Input/Output: [[78.5909674124494 35] 113.5909674124494]
Test Case: 191 | Input/Output: [[6.4144102865539026 -77] -70.5855897134461]
Test Case: 192 | Input/Output: [[-8.557178119684465 -2] -10.557178119684465]
Test Case: 193 | Input/Output: [[-49.953313316752435 -27] -76.95331331675243]
Test Case: 194 | Input/Output: [[84.56896700890516 -23] 61.56896700890516]
Test Case: 195 | Input/Output: [[-55.21298156839587 -23] -78.21298156839586]
Test Case: 196 | Input/Output: [[8.141232677930816 82] 90.14123267793082]
Test Case: 197 | Input/Output: [[-80.72918453855186 -98] -178.72918453855186]
Test Case: 198 | Input/Output: [[95.51187085675141 54] 149.51187085675141]
Test Case: 199 | Input/Output: [[48.97321608579628 79] 127.97321608579628]
Test Case: 200 | Input/Output: [[63.92796742300618 -29] 34.92796742300618]
Test Case: 201 | Input/Output: [[90.77145815946639 -81] 9.771458159466391]
Test Case: 202 | Input/Output: [[98.68760965671342 56] 154.68760965671342]
Test Case: 203 | Input/Output: [[-72.46065962936788 39] -33.46065962936788]
Test Case: 204 | Input/Output: [[-50.89204931402749 -38] -88.89204931402749]
Test Case: 205 | Input/Output: [[80.19591908535708 -90] -9.804080914642924]
Test Case: 206 | Input/Output: [[38.89785897319001 91] 129.89785897319]
Test Case: 207 | Input/Output: [[82.06467179339836 19] 101.06467179339836]
Test Case: 208 | Input/Output: [[-58.974348590682915 -9] -67.97434859068292]
Test Case: 209 | Input/Output: [[56.71573681841798 -12] 44.71573681841798]
Test Case: 210 | Input/Output: [[-43.15347067623099 89] 45.84652932376901]
Test Case: 211 | Input/Output: [[-70.4074563621871 56] -14.407456362187105]
Test Case: 212 | Input/Output: [[-20.98350302693062 -81] -101.98350302693062]
Test Case: 213 | Input/Output: [[99.360432031693 -60] 39.360432031692994]
Test Case: 214 | Input/Output: [[-54.01813754886173 29] -25.01813754886173]
Test Case: 215 | Input/Output: [[-12.122427883625448 -98] -110.12242788362545]
Test Case: 216 | Input/Output: [[-93.68596134195857 -44] -137.68596134195857]
Test Case: 217 | Input/Output: [[43.195133204812066 22] 65.19513320481207]
Test Case: 218 | Input/Output: [[-76.2650102189177 -76] -152.2650102189177]
Test Case: 219 | Input/Output: [[-86.8871526839218 46] -40.8871526839218]
Test Case: 220 | Input/Output: [[50.084261398359416 -81] -30.915738601640584]
Test Case: 221 | Input/Output: [[97.66159757928315 -1] 96.66159757928315]
Test Case: 222 | Input/Output: [[29.357373457743392 93] 122.35737345774339]
Test Case: 223 | Input/Output: [[-85.69046373844313 -45] -130.69046373844313]
Test Case: 224 | Input/Output: [[61.82783258260389 62] 123.82783258260389]
Test Case: 225 | Input/Output: [[-75.43493574313197 66] -9.434935743131973]
Test Case: 226 | Input/Output: [[21.567327905288863 -60] -38.43267209471114]
Test Case: 227 | Input/Output: [[-12.814819673114357 -6] -18.814819673114357]
Test Case: 228 | Input/Output: [[-57.978758392389466 100] 42.021241607610534]
Test Case: 229 | Input/Output: [[-80.29590671045834 -23] -103.29590671045834]
Test Case: 230 | Input/Output: [[-56.7346286796849 23] -33.7346286796849]
Test Case: 231 | Input/Output: [[26.624371486413096 -18] 8.624371486413096]
Test Case: 232 | Input/Output: [[-45.1238234833913 85] 39.8761765166087]
Test Case: 233 | Input/Output: [[40.79564427719768 76] 116.79564427719768]
Test Case: 234 | Input/Output: [[33.619283863181465 62] 95.61928386318147]
Test Case: 235 | Input/Output: [[69.30548312496481 82] 151.3054831249648]
Test Case: 236 | Input/Output: [[-69.87373934751587 -95] -164.87373934751588]
Test Case: 237 | Input/Output: [[19.911921814556237 -63] -43.08807818544376]
Test Case: 238 | Input/Output: [[77.91478863740485 -60] 17.914788637404854]
Test Case: 239 | Input/Output: [[-48.76618443290985 16] -32.76618443290985]
Test Case: 240 | Input/Output: [[-71.32408713405891 36] -35.324087134058914]
Test Case: 241 | Input/Output: [[-39.98641648494434 36] -3.9864164849443426]
Test Case: 242 | Input/Output: [[-87.11429276944149 28] -59.11429276944149]
Test Case: 243 | Input/Output: [[81.14838371947982 11] 92.14838371947982]
Test Case: 244 | Input/Output: [[-35.96251089326185 -66] -101.96251089326185]
Test Case: 245 | Input/Output: [[-86.31438787544081 81] -5.314387875440815]
Test Case: 246 | Input/Output: [[98.89142104542191 -20] 78.89142104542191]
Test Case: 247 | Input/Output: [[-53.0066536136931 -63] -116.0066536136931]
Test Case: 248 | Input/Output: [[-30.220577772522887 6] -24.220577772522887]
Test Case: 249 | Input/Output: [[81.74087139620275 99] 180.74087139620275]
Test Case: 250 | Input/Output: [[-13.27170890748522 -67] -80.27170890748522]
Test Case: 251 | Input/Output: [[75.22099623113488 25] 100.22099623113488]
Test Case: 252 | Input/Output: [[-59.72337668919443 -61] -120.72337668919442]
Test Case: 253 | Input/Output: [[-55.84974476966651 37] -18.849744769666508]
Test Case: 254 | Input/Output: [[22.21911793199891 64] 86.21911793199891]
Test Case: 255 | Input/Output: [[-28.43579528501938 -51] -79.43579528501938]
Test Case: 256 | Input/Output: [[7.890767415863024 -63] -55.109232584136976]
Test Case: 257 | Input/Output: [[-55.39230598931728 -90] -145.39230598931726]
Test Case: 258 | Input/Output: [[20.349579433079995 81] 101.34957943308]
Test Case: 259 | Input/Output: [[20.983873859444998 34] 54.983873859445]
Test Case: 260 | Input/Output: [[-91.54537006873753 -52] -143.54537006873753]
Test Case: 261 | Input/Output: [[55.77186406926165 -55] 0.7718640692616532]
Test Case: 262 | Input/Output: [[-60.264994020690295 -19] -79.2649940206903]
Test Case: 263 | Input/Output: [[-22.04186601873998 18] -4.041866018739981]
Test Case: 264 | Input/Output: [[-72.76918421318015 -18] -90.76918421318015]
Test Case: 265 | Input/Output: [[-39.186004455899614 37] -2.1860044558996137]
Test Case: 266 | Input/Output: [[-52.619097148973836 -78] -130.61909714897382]
Test Case: 267 | Input/Output: [[50.17973351942862 -44] 6.179733519428623]
Test Case: 268 | Input/Output: [[24.501252810320366 -33] -8.498747189679634]
Test Case: 269 | Input/Output: [[-29.409605772699237 51] 21.590394227300763]
Test Case: 270 | Input/Output: [[91.5849828841155 -56] 35.584982884115504]
Test Case: 271 | Input/Output: [[-75.88804481206836 -6] -81.88804481206836]
Test Case: 272 | Input/Output: [[-24.692295958780903 90] 65.3077040412191]
Test Case: 273 | Input/Output: [[-95.02727551948169 30] -65.02727551948169]
Test Case: 274 | Input/Output: [[49.215265926738994 -20] 29.215265926738994]
Test Case: 275 | Input/Output: [[11.30259664420052 46] 57.30259664420052]
Test Case: 276 | Input/Output: [[84.07867135124164 -79] 5.078671351241638]
Test Case: 277 | Input/Output: [[11.874658592673342 -7] 4.874658592673342]
Test Case: 278 | Input/Output: [[48.228890756120336 -21] 27.228890756120336]
Test Case: 279 | Input/Output: [[67.67222891873826 43] 110.67222891873826]
Test Case: 280 | Input/Output: [[66.38391574164984 39] 105.38391574164984]
Test Case: 281 | Input/Output: [[37.81590416054556 36] 73.81590416054556]
Test Case: 282 | Input/Output: [[-59.639307145848576 -60] -119.63930714584858]
Test Case: 283 | Input/Output: [[80.30517445172345 -69] 11.305174451723445]
Test Case: 284 | Input/Output: [[80.20916794147985 -75] 5.209167941479848]
Test Case: 285 | Input/Output: [[22.442463240672538 -91] -68.55753675932746]
Test Case: 286 | Input/Output: [[10.538384497685357 82] 92.53838449768536]
Test Case: 287 | Input/Output: [[-16.404735168489353 -67] -83.40473516848935]
Test Case: 288 | Input/Output: [[-10.253828079001764 18] 7.746171920998236]
Test Case: 289 | Input/Output: [[-40.09609538115433 -54] -94.09609538115433]
Test Case: 290 | Input/Output: [[-46.35154501819858 36] -10.351545018198578]
Test Case: 291 | Input/Output: [[18.049730884968554 5] 23.049730884968554]
Test Case: 292 | Input/Output: [[-38.7600697648469 42] 3.2399302351531034]
Test Case: 293 | Input/Output: [[-23.74352210060762 -100] -123.74352210060762]
Test Case: 294 | Input/Output: [[-97.92576155025927 77] -20.925761550259267]
Test Case: 295 | Input/Output: [[-32.6232527297702 -49] -81.6232527297702]
Test Case: 296 | Input/Output: [[-14.081438666858205 -22] -36.081438666858205]
Test Case: 297 | Input/Output: [[7.840925243309883 -45] -37.15907475669012]
Test Case: 298 | Input/Output: [[45.74266699434705 -43] 2.742666994347047]
Test Case: 299 | Input/Output: [[-17.54999475862364 -67] -84.54999475862364]
Test Case: 300 | Input/Output: [[-50.96888884675958 62] 11.031111153240417]
Test Case: 301 | Input/Output: [[-61.880100429482376 -16] -77.88010042948238]
Test Case: 302 | Input/Output: [[16.857886523468153 35] 51.85788652346815]
Test Case: 303 | Input/Output: [[61.941182000050304 38] 99.9411820000503]
Test Case: 304 | Input/Output: [[45.12074677031518 -31] 14.12074677031518]
Test Case: 305 | Input/Output: [[-3.5183459254859457 -41] -44.518345925485946]
Test Case: 306 | Input/Output: [[69.40776861509806 67] 136.40776861509806]
Test Case: 307 | Input/Output: [[-13.956266478668127 -53] -66.95626647866813]
Test Case: 308 | Input/Output: [[-5.173474410045813 -73] -78.17347441004581]
Test Case: 309 | Input/Output: [[-58.80057380071779 14] -44.80057380071779]
Test Case: 310 | Input/Output: [[3.752605285391766 79] 82.75260528539177]
Test Case: 311 | Input/Output: [[-58.58946235532687 81] 22.410537644673127]
Test Case: 312 | Input/Output: [[-26.122680887086204 90] 63.877319112913796]
Test Case: 313 | Input/Output: [[19.949805672673833 86] 105.94980567267383]
Test Case: 314 | Input/Output: [[-46.07095841094557 -7] -53.07095841094557]
Test Case: 315 | Input/Output: [[84.22222197810697 22] 106.22222197810697]
Test Case: 316 | Input/Output: [[70.95238410745645 58] 128.95238410745645]
Test Case: 317 | Input/Output: [[-10.019671271377774 8] -2.0196712713777742]
Test Case: 318 | Input/Output: [[-39.048696939147476 -91] -130.04869693914748]
Test Case: 319 | Input/Output: [[-85.05214069628322 -35] -120.05214069628322]
Test Case: 320 | Input/Output: [[-34.319247369424914 73] 38.680752630575086]
Test Case: 321 | Input/Output: [[-64.75563279251358 -23] -87.75563279251358]
Test Case: 322 | Input/Output: [[-63.898101646856674 -25] -88.89810164685667]
Test Case: 323 | Input/Output: [[0.7733017769881769 -94] -93.22669822301182]
Test Case: 324 | Input/Output: [[-30.272465012320254 -52] -82.27246501232025]
Test Case: 325 | Input/Output: [[72.80045181301216 -68] 4.80045181301216]
Test Case: 326 | Input/Output: [[-99.9865423878418 -24] -123.9865423878418]
Test Case: 327 | Input/Output: [[-93.2886936695698 92] -1.2886936695697955]
Test Case: 328 | Input/Output: [[57.018053116207255 -31] 26.018053116207255]
Test Case: 329 | Input/Output: [[35.241033934338674 65] 100.24103393433867]
Test Case: 330 | Input/Output: [[-63.7635096066909 9] -54.7635096066909]
Test Case: 331 | Input/Output: [[-45.31981411683499 24] -21.31981411683499]
Test Case: 332 | Input/Output: [[-36.895721745369016 78] 41.104278254630984]
Test Case: 333 | Input/Output: [[97.06689311905797 -99] -1.9331068809420344]
Test Case: 334 | Input/Output: [[-30.998972621666425 -73] -103.99897262166643]
Test Case: 335 | Input/Output: [[88.05248099707799 89] 177.052480997078]
Test Case: 336 | Input/Output: [[-90.84539436375123 86] -4.845394363751225]
Test Case: 337 | Input/Output: [[-72.9037482601788 -16] -88.9037482601788]
Test Case: 338 | Input/Output: [[37.82169118313175 -85] -47.17830881686825]
Test Case: 339 | Input/Output: [[93.83631470243122 5] 98.83631470243122]
Test Case: 340 | Input/Output: [[-37.891639883415905 52] 14.108360116584095]
Test Case: 341 | Input/Output: [[-24.60505313718923 -100] -124.60505313718923]
Test Case: 342 | Input/Output: [[-24.35209759065586 14] -10.352097590655859]
Test Case: 343 | Input/Output: [[46.50746730118368 -60] -13.49253269881632]
Test Case: 344 | Input/Output: [[96.51288554554796 7] 103.51288554554796]
Test Case: 345 | Input/Output: [[73.1088263238793 -100] -26.8911736761207]
Test Case: 346 | Input/Output: [[62.950462615112826 52] 114.95046261511283]
Test Case: 347 | Input/Output: [[66.99654425839111 75] 141.9965442583911]
Test Case: 348 | Input/Output: [[-50.910165211614554 -99] -149.91016521161455]
Test Case: 349 | Input/Output: [[-77.17496896335598 -89] -166.17496896335598]
Test Case: 350 | Input/Output: [[89.1385543027931 82] 171.1385543027931]
Test Case: 351 | Input/Output: [[74.51053625350065 -39] 35.510536253500646]
Test Case: 352 | Input/Output: [[84.55137840374093 -73] 11.551378403740927]
Test Case: 353 | Input/Output: [[50.82166063334634 -76] -25.17833936665366]
Test Case: 354 | Input/Output: [[86.12104754046928 28] 114.12104754046928]
Test Case: 355 | Input/Output: [[67.4371382885243 -67] 0.43713828852429515]
Test Case: 356 | Input/Output: [[5.485237708808327 13] 18.485237708808327]
Test Case: 357 | Input/Output: [[88.67195381495887 -75] 13.671953814958869]
Test Case: 358 | Input/Output: [[-22.9770283058413 -31] -53.9770283058413]
Test Case: 359 | Input/Output: [[-31.734303475671595 16] -15.734303475671595]
Test Case: 360 | Input/Output: [[89.71559489916808 21] 110.71559489916808]
Test Case: 361 | Input/Output: [[80.53596234411751 -46] 34.53596234411751]
Test Case: 362 | Input/Output: [[-60.03603222095046 -39] -99.03603222095046]
Test Case: 363 | Input/Output: [[-82.54340248261671 44] -38.54340248261671]
Test Case: 364 | Input/Output: [[-67.29508117229986 1] -66.29508117229986]
Test Case: 365 | Input/Output: [[48.35972627034346 58] 106.35972627034346]
Test Case: 366 | Input/Output: [[67.25923102139356 68] 135.25923102139356]
Test Case: 367 | Input/Output: [[-46.75926090111033 47] 0.24073909888966938]
Test Case: 368 | Input/Output: [[-92.07650696090155 31] -61.076506960901554]
Test Case: 369 | Input/Output: [[-74.71377577929479 -57] -131.7137757792948]
Test Case: 370 | Input/Output: [[-44.62913335722858 21] -23.629133357228582]
Test Case: 371 | Input/Output: [[-44.22869035546828 -9] -53.22869035546828]
Test Case: 372 | Input/Output: [[-30.48031947794118 -52] -82.48031947794118]
Test Case: 373 | Input/Output: [[-62.50715169012431 -26] -88.50715169012432]
Test Case: 374 | Input/Output: [[-14.705664743718998 -48] -62.705664743719]
Test Case: 375 | Input/Output: [[58.9462450664023 -17] 41.9462450664023]
Test Case: 376 | Input/Output: [[38.55508558162322 62] 100.55508558162322]
Test Case: 377 | Input/Output: [[-59.317714075860664 54] -5.317714075860664]
Test Case: 378 | Input/Output: [[-12.866398714376245 -20] -32.866398714376245]
Test Case: 379 | Input/Output: [[44.16384877418528 30] 74.16384877418528]
Test Case: 380 | Input/Output: [[57.350163188250264 -35] 22.350163188250264]
Test Case: 381 | Input/Output: [[-4.550861220868413 0] -4.550861220868413]
Test Case: 382 | Input/Output: [[-60.38325071545212 -65] -125.38325071545212]
Test Case: 383 | Input/Output: [[66.65662345420421 -4] 62.65662345420421]
Test Case: 384 | Input/Output: [[-38.47095494085255 -100] -138.47095494085255]
Test Case: 385 | Input/Output: [[-19.76170274057452 28] 8.23829725942548]
Test Case: 386 | Input/Output: [[1.9832998698857267 23] 24.983299869885727]
Test Case: 387 | Input/Output: [[25.11705306691816 -58] -32.88294693308184]
Test Case: 388 | Input/Output: [[66.35005906284457 43] 109.35005906284457]
Test Case: 389 | Input/Output: [[-59.45970404778214 71] 11.54029595221786]
Test Case: 390 | Input/Output: [[97.81403114690767 -79] 18.814031146907666]
Test Case: 391 | Input/Output: [[-25.12767268861589 68] 42.87232731138411]
Test Case: 392 | Input/Output: [[25.46071265322361 4] 29.46071265322361]
Test Case: 393 | Input/Output: [[-12.88971026392349 -48] -60.88971026392349]
Test Case: 394 | Input/Output: [[88.34352778724391 -42] 46.343527787243914]
Test Case: 395 | Input/Output: [[81.55662070638542 50] 131.55662070638542]
Test Case: 396 | Input/Output: [[-5.6900271579273465 65] 59.30997284207265]
Test Case: 397 | Input/Output: [[26.99593577748196 43] 69.99593577748196]
Test Case: 398 | Input/Output: [[-21.449286126434558 31] 9.550713873565442]
Test Case: 399 | Input/Output: [[2.7103558713648397 -91] -88.28964412863516]
Test Case: 400 | Input/Output: [[9.162200055246544 70] 79.16220005524654]
Test Case: 401 | Input/Output: [[82.01246739997211 -88] -5.98753260002789]
Test Case: 402 | Input/Output: [[94.53550552325916 69] 163.53550552325916]
Test Case: 403 | Input/Output: [[3.357449943088838 26] 29.357449943088838]
Test Case: 404 | Input/Output: [[-68.64169689706803 100] 31.35830310293197]
Test Case: 405 | Input/Output: [[-82.5030705182058 93] 10.496929481794197]
Test Case: 406 | Input/Output: [[-33.518507136853756 20] -13.518507136853756]
Test Case: 407 | Input/Output: [[51.714263758685036 -68] -16.285736241314964]
Test Case: 408 | Input/Output: [[-41.832271939618025 6] -35.832271939618025]
Test Case: 409 | Input/Output: [[91.21987513787582 -100] -8.780124862124183]
Test Case: 410 | Input/Output: [[-56.8842436171473 67] 10.115756382852702]
Test Case: 411 | Input/Output: [[-25.542500003543765 -36] -61.542500003543765]
Test Case: 412 | Input/Output: [[96.60815894735194 30] 126.60815894735194]
Test Case: 413 | Input/Output: [[29.184606434119047 -67] -37.81539356588095]
Test Case: 414 | Input/Output: [[-2.4501597575666665 98] 95.54984024243333]
Test Case: 415 | Input/Output: [[-30.51963305782577 -59] -89.51963305782577]
Test Case: 416 | Input/Output: [[16.3161799233621 -37] -20.6838200766379]
Test Case: 417 | Input/Output: [[88.99948927707214 10] 98.99948927707214]
Test Case: 418 | Input/Output: [[30.623382485658823 -67] -36.37661751434118]
Test Case: 419 | Input/Output: [[37.55435740676609 -2] 35.55435740676609]
Test Case: 420 | Input/Output: [[47.148507932638836 -31] 16.148507932638836]
Test Case: 421 | Input/Output: [[-76.41835505762688 28] -48.41835505762688]
Test Case: 422 | Input/Output: [[-34.30653438098463 65] 30.69346561901537]
Test Case: 423 | Input/Output: [[1.0789675142645763 -90] -88.92103248573542]
Test Case: 424 | Input/Output: [[69.91568056738191 61] 130.9156805673819]
Test Case: 425 | Input/Output: [[-2.976376360152784 13] 10.023623639847216]
Test Case: 426 | Input/Output: [[48.183649767220714 -92] -43.816350232779286]
Test Case: 427 | Input/Output: [[-91.38572648902448 61] -30.385726489024478]
Test Case: 428 | Input/Output: [[-55.847044457175386 86] 30.152955542824614]
Test Case: 429 | Input/Output: [[77.77271398778012 48] 125.77271398778012]
Test Case: 430 | Input/Output: [[68.44799854131779 -82] -13.552001458682213]
Test Case: 431 | Input/Output: [[23.47580354278793 -94] -70.52419645721207]
Test Case: 432 | Input/Output: [[46.01095128218523 -90] -43.98904871781477]
Test Case: 433 | Input/Output: [[10.687649459319843 1] 11.687649459319843]
Test Case: 434 | Input/Output: [[-95.75976993116575 -73] -168.75976993116575]
Test Case: 435 | Input/Output: [[59.39737687335764 37] 96.39737687335764]
Test Case: 436 | Input/Output: [[-52.16318201824925 -20] -72.16318201824924]
Test Case: 437 | Input/Output: [[10.917696770153015 -77] -66.08230322984699]
Test Case: 438 | Input/Output: [[96.27524163972717 67] 163.27524163972717]
Test Case: 439 | Input/Output: [[-75.67655898781196 74] -1.6765589878119584]
Test Case: 440 | Input/Output: [[-52.44833694172601 20] -32.44833694172601]
Test Case: 441 | Input/Output: [[59.56893822766648 -78] -18.43106177233352]
Test Case: 442 | Input/Output: [[-37.850619090044255 53] 15.149380909955745]
Test Case: 443 | Input/Output: [[92.73204130905188 49] 141.73204130905188]
Test Case: 444 | Input/Output: [[81.11465872002967 -5] 76.11465872002967]
Test Case: 445 | Input/Output: [[15.487534818239794 -10] 5.487534818239794]
Test Case: 446 | Input/Output: [[29.076678860045348 -45] -15.923321139954652]
Test Case: 447 | Input/Output: [[-93.06100982752059 33] -60.06100982752059]
Test Case: 448 | Input/Output: [[-84.9471293354662 -92] -176.9471293354662]
Test Case: 449 | Input/Output: [[-10.614774745232864 28] 17.385225254767136]
Test Case: 450 | Input/Output: [[-32.924905113749745 -16] -48.924905113749745]
Test Case: 451 | Input/Output: [[-19.27306826458232 11] -8.27306826458232]
Test Case: 452 | Input/Output: [[-27.80794116036718 36] 8.192058839632821]
Test Case: 453 | Input/Output: [[59.74323144866406 37] 96.74323144866406]
Test Case: 454 | Input/Output: [[-97.5876083093601 -62] -159.58760830936012]
Test Case: 455 | Input/Output: [[-0.5407337502426657 69] 68.45926624975733]
Test Case: 456 | Input/Output: [[61.21462277119363 7] 68.21462277119363]
Test Case: 457 | Input/Output: [[-6.568999109832035 26] 19.431000890167965]
Test Case: 458 | Input/Output: [[81.78291430116042 10] 91.78291430116042]
Test Case: 459 | Input/Output: [[-10.481509510819038 81] 70.51849048918096]
Test Case: 460 | Input/Output: [[94.94818061901788 20] 114.94818061901788]
Test Case: 461 | Input/Output: [[58.408709089839334 -39] 19.408709089839334]
Test Case: 462 | Input/Output: [[52.53089801320908 -81] -28.469101986790918]
Test Case: 463 | Input/Output: [[-92.78317421375174 29] -63.783174213751735]
Test Case: 464 | Input/Output: [[2.55328768271103 -62] -59.44671231728897]
Test Case: 465 | Input/Output: [[16.31360624631786 97] 113.31360624631786]
Test Case: 466 | Input/Output: [[21.90461809164219 20] 41.90461809164219]
Test Case: 467 | Input/Output: [[75.4079634221124 55] 130.4079634221124]
Test Case: 468 | Input/Output: [[-90.40341769545384 42] -48.40341769545384]
Test Case: 469 | Input/Output: [[-79.22039556892358 77] -2.2203955689235784]
Test Case: 470 | Input/Output: [[17.586355577894167 -89] -71.41364442210583]
Test Case: 471 | Input/Output: [[-77.42338743027273 -41] -118.42338743027273]
Test Case: 472 | Input/Output: [[70.1011736673506 44] 114.1011736673506]
Test Case: 473 | Input/Output: [[1.1710163258384227 -80] -78.82898367416158]
Test Case: 474 | Input/Output: [[-5.61819654104589 80] 74.38180345895411]
Test Case: 475 | Input/Output: [[-56.628683811455495 92] 35.371316188544505]
Test Case: 476 | Input/Output: [[-61.5296747960216 -39] -100.5296747960216]
Test Case: 477 | Input/Output: [[5.94828025482272 66] 71.94828025482272]
Test Case: 478 | Input/Output: [[29.449436191237226 95] 124.44943619123723]
Test Case: 479 | Input/Output: [[-11.280164343217749 -28] -39.28016434321775]
Test Case: 480 | Input/Output: [[5.295206970997384 67] 72.29520697099738]
Test Case: 481 | Input/Output: [[8.749005024468872 90] 98.74900502446887]
Test Case: 482 | Input/Output: [[26.138274829987452 -65] -38.86172517001255]
Test Case: 483 | Input/Output: [[96.0901301483539 -14] 82.0901301483539]
Test Case: 484 | Input/Output: [[-1.8934397321547465 -79] -80.89343973215475]
Test Case: 485 | Input/Output: [[-10.886209737189901 -37] -47.8862097371899]
Test Case: 486 | Input/Output: [[9.520741250000796 21] 30.520741250000796]
Test Case: 487 | Input/Output: [[40.006139094473866 85] 125.00613909447387]
Test Case: 488 | Input/Output: [[69.28695211773328 -30] 39.28695211773328]
Test Case: 489 | Input/Output: [[-43.90581021208793 54] 10.094189787912072]
Test Case: 490 | Input/Output: [[-47.5615776083826 78] 30.4384223916174]
Test Case: 491 | Input/Output: [[-65.91048899565641 -72] -137.9104889956564]
Test Case: 492 | Input/Output: [[11.977976379191006 -69] -57.022023620808994]
Test Case: 493 | Input/Output: [[-94.2799709756469 -24] -118.2799709756469]
Test Case: 494 | Input/Output: [[-9.842218378747106 -20] -29.842218378747106]
Test Case: 495 | Input/Output: [[35.845588544815996 -16] 19.845588544815996]
Test Case: 496 | Input/Output: [[38.88033331631661 -96] -57.11966668368339]
Test Case: 497 | Input/Output: [[55.354642055407226 -70] -14.645357944592774]
Test Case: 498 | Input/Output: [[-57.910181828587696 -20] -77.9101818285877]
Test Case: 499 | Input/Output: [[41.99730740638037 75] 116.99730740638037]
Test Case: 500 | Input/Output: [[-78.02427435401404 14] -64.02427435401404]
Test Case: 501 | Input/Output: [[85.67943053181136 -59] 26.679430531811363]
Test Case: 502 | Input/Output: [[-72.31739318691166 80] 7.682606813088341]
Test Case: 503 | Input/Output: [[95.68733514107484 -96] -0.31266485892516016]
Test Case: 504 | Input/Output: [[75.30369562645919 72] 147.3036956264592]
Test Case: 505 | Input/Output: [[27.93345369654709 40] 67.93345369654709]
Test Case: 506 | Input/Output: [[11.180484763473771 46] 57.18048476347377]
Test Case: 507 | Input/Output: [[29.24791339192211 92] 121.24791339192211]
Test Case: 508 | Input/Output: [[25.06226796707098 -15] 10.06226796707098]
Test Case: 509 | Input/Output: [[-9.881049648877067 -49] -58.88104964887707]
Test Case: 510 | Input/Output: [[-93.67746743936809 57] -36.67746743936809]
Test Case: 511 | Input/Output: [[-94.80012238918309 -12] -106.80012238918309]
Test Case: 512 | Input/Output: [[22.632607166052793 4] 26.632607166052793]
Test Case: 513 | Input/Output: [[55.228994274468846 -80] -24.771005725531154]
Test Case: 514 | Input/Output: [[-82.99264524212253 -60] -142.99264524212253]
Test Case: 515 | Input/Output: [[21.77776980617041 14] 35.77776980617041]
Test Case: 516 | Input/Output: [[-75.45035889198519 29] -46.45035889198519]
Test Case: 517 | Input/Output: [[90.141093407521 -72] 18.141093407520998]
Test Case: 518 | Input/Output: [[-13.815337066961646 -88] -101.81533706696165]
Test Case: 519 | Input/Output: [[-70.20107380585112 70] -0.20107380585112367]
Test Case: 520 | Input/Output: [[3.4327038738371556 64] 67.43270387383716]
Test Case: 521 | Input/Output: [[-47.303922755021446 -11] -58.303922755021446]
Test Case: 522 | Input/Output: [[-76.0694334913415 -78] -154.0694334913415]
Test Case: 523 | Input/Output: [[-5.333645606567174 -27] -32.333645606567174]
Test Case: 524 | Input/Output: [[35.03894809496023 -69] -33.96105190503977]
Test Case: 525 | Input/Output: [[-20.012697811919324 97] 76.98730218808068]
Test Case: 526 | Input/Output: [[-49.11470357248922 51] 1.8852964275107809]
Test Case: 527 | Input/Output: [[-99.637921803442 -25] -124.637921803442]
Test Case: 528 | Input/Output: [[30.179027270816135 13] 43.179027270816135]
Test Case: 529 | Input/Output: [[-82.0480390432948 49] -33.04803904329481]
Test Case: 530 | Input/Output: [[-49.01601502847419 -34] -83.01601502847419]
Test Case: 531 | Input/Output: [[41.874792485133895 -52] -10.125207514866105]
Test Case: 532 | Input/Output: [[-21.38956172824207 17] -4.389561728242072]
Test Case: 533 | Input/Output: [[-36.841741717735374 -9] -45.841741717735374]
Test Case: 534 | Input/Output: [[59.93403793893623 -8] 51.93403793893623]
Test Case: 535 | Input/Output: [[46.34207618333525 -22] 24.34207618333525]
Test Case: 536 | Input/Output: [[89.60075327501352 8] 97.60075327501352]
Test Case: 537 | Input/Output: [[-32.17254692712012 12] -20.172546927120123]
Test Case: 538 | Input/Output: [[-93.33105894344989 -23] -116.33105894344989]
Test Case: 539 | Input/Output: [[-3.5298774827840163 -73] -76.52987748278402]
Test Case: 540 | Input/Output: [[88.50121918455633 24] 112.50121918455633]
Test Case: 541 | Input/Output: [[78.55611076406004 30] 108.55611076406004]
Test Case: 542 | Input/Output: [[-20.939801031622167 -97] -117.93980103162217]
Test Case: 543 | Input/Output: [[-10.971295533283282 -12] -22.971295533283282]
Test Case: 544 | Input/Output: [[-48.67658142026969 -67] -115.67658142026968]
Test Case: 545 | Input/Output: [[-93.44709267693277 -18] -111.44709267693277]
Test Case: 546 | Input/Output: [[57.23419654378577 61] 118.23419654378577]
Test Case: 547 | Input/Output: [[85.26791772031135 -44] 41.267917720311345]
Test Case: 548 | Input/Output: [[-94.91360260602137 -98] -192.91360260602136]
Test Case: 549 | Input/Output: [[-57.627023780937115 -8] -65.62702378093712]
Test Case: 550 | Input/Output: [[68.10719647817837 -16] 52.107196478178366]
Test Case: 551 | Input/Output: [[-76.54922487726061 44] -32.54922487726061]
Test Case: 552 | Input/Output: [[33.1999622206238 94] 127.1999622206238]
Test Case: 553 | Input/Output: [[-2.9091498127580024 -14] -16.909149812758002]
Test Case: 554 | Input/Output: [[7.554761637473078 -41] -33.44523836252692]
Test Case: 555 | Input/Output: [[-19.81362170213876 -88] -107.81362170213876]
Test Case: 556 | Input/Output: [[-6.849937421940282 -51] -57.84993742194028]
Test Case: 557 | Input/Output: [[3.3628306608976004 80] 83.3628306608976]
Test Case: 558 | Input/Output: [[-46.68759369182918 17] -29.68759369182918]
Test Case: 559 | Input/Output: [[5.2255924462381245 -74] -68.77440755376188]
Test Case: 560 | Input/Output: [[32.07901293801197 -65] -32.92098706198803]
Test Case: 561 | Input/Output: [[-34.85449342761267 -5] -39.85449342761267]
Test Case: 562 | Input/Output: [[-49.14978626922062 -46] -95.14978626922061]
Test Case: 563 | Input/Output: [[-42.01174393144071 20] -22.011743931440712]
Test Case: 564 | Input/Output: [[-1.2926354444929018 -69] -70.2926354444929]
Test Case: 565 | Input/Output: [[40.06397027657357 -49] -8.93602972342643]
Test Case: 566 | Input/Output: [[97.98713356300317 -81] 16.98713356300317]
Test Case: 567 | Input/Output: [[-94.94122873762227 -63] -157.94122873762228]
Test Case: 568 | Input/Output: [[-73.85766530235534 -41] -114.85766530235534]
Test Case: 569 | Input/Output: [[-37.152779911102485 -19] -56.152779911102485]
Test Case: 570 | Input/Output: [[-73.967657539973 -99] -172.967657539973]
Test Case: 571 | Input/Output: [[69.61280910772629 88] 157.6128091077263]
Test Case: 572 | Input/Output: [[31.961827130956976 87] 118.96182713095698]
Test Case: 573 | Input/Output: [[-38.465914396590776 -92] -130.4659143965908]
Test Case: 574 | Input/Output: [[14.850364487056055 16] 30.850364487056055]
Test Case: 575 | Input/Output: [[-94.83733171324012 -97] -191.83733171324013]
Test Case: 576 | Input/Output: [[99.1343974318074 79] 178.1343974318074]
Test Case: 577 | Input/Output: [[72.18009522362615 -44] 28.180095223626154]
Test Case: 578 | Input/Output: [[17.042010048173566 -47] -29.957989951826434]
Test Case: 579 | Input/Output: [[-31.762204925310698 50] 18.237795074689302]
Test Case: 580 | Input/Output: [[60.13172834238031 47] 107.13172834238031]
Test Case: 581 | Input/Output: [[-37.22107744641394 -11] -48.22107744641394]
Test Case: 582 | Input/Output: [[-95.12499421882569 -52] -147.1249942188257]
Test Case: 583 | Input/Output: [[12.042445521843419 -68] -55.95755447815658]
Test Case: 584 | Input/Output: [[90.27896323451671 -59] 31.27896323451671]
Test Case: 585 | Input/Output: [[45.39383289052887 -92] -46.60616710947113]
Test Case: 586 | Input/Output: [[78.24781719048778 34] 112.24781719048778]
Test Case: 587 | Input/Output: [[67.29816058370176 58] 125.29816058370176]
Test Case: 588 | Input/Output: [[79.67837882482937 95] 174.67837882482937]
Test Case: 589 | Input/Output: [[15.157388415388667 67] 82.15738841538867]
Test Case: 590 | Input/Output: [[22.859505391426538 -83] -60.14049460857346]
Test Case: 591 | Input/Output: [[-96.49287656216447 25] -71.49287656216447]
Test Case: 592 | Input/Output: [[64.23472415442541 88] 152.2347241544254]
Test Case: 593 | Input/Output: [[86.58759532659076 -43] 43.58759532659076]
Test Case: 594 | Input/Output: [[4.847746210015231 54] 58.84774621001523]
Test Case: 595 | Input/Output: [[-45.382696057712415 1] -44.382696057712415]
Test Case: 596 | Input/Output: [[-62.09162399967683 93] 30.908376000323173]
Test Case: 597 | Input/Output: [[77.0811693189699 -87] -9.918830681030101]
Test Case: 598 | Input/Output: [[71.85629113209004 87] 158.85629113209004]
Test Case: 599 | Input/Output: [[-77.75646887006675 21] -56.756468870066755]
Test Case: 600 | Input/Output: [[35.18298890415929 43] 78.18298890415929]
Test Case: 601 | Input/Output: [[-46.82749997993005 -62] -108.82749997993005]
Test Case: 602 | Input/Output: [[50.72596176044283 -76] -25.27403823955717]
Test Case: 603 | Input/Output: [[68.70757663160225 77] 145.70757663160225]
Test Case: 604 | Input/Output: [[67.39877814724414 48] 115.39877814724414]
Test Case: 605 | Input/Output: [[19.83713235564673 -72] -52.16286764435327]
Test Case: 606 | Input/Output: [[-66.2301351361983 96] 29.7698648638017]
Test Case: 607 | Input/Output: [[-36.33616546611256 -84] -120.33616546611256]
Test Case: 608 | Input/Output: [[-88.0896638716872 -87] -175.0896638716872]
Test Case: 609 | Input/Output: [[48.12095060221367 -55] -6.879049397786332]
Test Case: 610 | Input/Output: [[4.669131115748982 -81] -76.33086888425102]
Test Case: 611 | Input/Output: [[82.75704773615456 95] 177.75704773615456]
Test Case: 612 | Input/Output: [[-87.7372407275823 -64] -151.7372407275823]
Test Case: 613 | Input/Output: [[41.8045200009353 65] 106.8045200009353]
Test Case: 614 | Input/Output: [[51.51428225430345 17] 68.51428225430345]
Test Case: 615 | Input/Output: [[41.19744131438276 81] 122.19744131438276]
Test Case: 616 | Input/Output: [[-81.99778291756141 70] -11.997782917561409]
Test Case: 617 | Input/Output: [[55.522642541445265 -76] -20.477357458554735]
Test Case: 618 | Input/Output: [[14.117838396229729 47] 61.11783839622973]
Test Case: 619 | Input/Output: [[82.10268176542564 83] 165.10268176542564]
Test Case: 620 | Input/Output: [[15.737398521790553 45] 60.73739852179055]
Test Case: 621 | Input/Output: [[-99.88683522912135 77] -22.886835229121345]
Test Case: 622 | Input/Output: [[-8.319649595891377 -93] -101.31964959589138]
Test Case: 623 | Input/Output: [[63.41016222866324 77] 140.41016222866324]
Test Case: 624 | Input/Output: [[6.173838256389018 -88] -81.82616174361098]
Test Case: 625 | Input/Output: [[-35.583605598627884 24] -11.583605598627884]
Test Case: 626 | Input/Output: [[-32.65421270823356 -63] -95.65421270823356]
Test Case: 627 | Input/Output: [[-95.8043708590431 -55] -150.8043708590431]
Test Case: 628 | Input/Output: [[52.59991642388266 -44] 8.59991642388266]
Test Case: 629 | Input/Output: [[43.52667585422796 -39] 4.52667585422796]
Test Case: 630 | Input/Output: [[-92.96224720696071 -97] -189.9622472069607]
Test Case: 631 | Input/Output: [[27.978569807281303 -52] -24.021430192718697]
Test Case: 632 | Input/Output: [[41.90113902715967 -65] -23.098860972840328]
Test Case: 633 | Input/Output: [[-52.87426605783241 -50] -102.87426605783241]
Test Case: 634 | Input/Output: [[-14.76013067362139 57] 42.23986932637861]
Test Case: 635 | Input/Output: [[70.2656708838744 69] 139.2656708838744]
Test Case: 636 | Input/Output: [[-67.92630931892955 49] -18.926309318929555]
Test Case: 637 | Input/Output: [[53.97921055992822 -64] -10.02078944007178]
Test Case: 638 | Input/Output: [[-41.01596820739735 48] 6.98403179260265]
Test Case: 639 | Input/Output: [[90.90205381175 -25] 65.90205381175]
Test Case: 640 | Input/Output: [[61.72653841028574 76] 137.72653841028574]
Test Case: 641 | Input/Output: [[-66.74970150029615 -95] -161.74970150029617]
Test Case: 642 | Input/Output: [[-41.397149429783006 -49] -90.39714942978301]
Test Case: 643 | Input/Output: [[21.92979549863226 91] 112.92979549863226]
Test Case: 644 | Input/Output: [[50.49414371060078 85] 135.49414371060078]
Test Case: 645 | Input/Output: [[-8.786239727742 4] -4.786239727742]
Test Case: 646 | Input/Output: [[-36.91747251335891 11] -25.91747251335891]
Test Case: 647 | Input/Output: [[-15.569402649951854 -81] -96.56940264995185]
Test Case: 648 | Input/Output: [[96.05291181775104 -76] 20.05291181775104]
Test Case: 649 | Input/Output: [[32.47868623375865 -5] 27.47868623375865]
Test Case: 650 | Input/Output: [[89.43514532219675 2] 91.43514532219675]
Test Case: 651 | Input/Output: [[-17.144259690099986 93] 75.85574030990001]
Test Case: 652 | Input/Output: [[69.61990713170593 16] 85.61990713170593]
Test Case: 653 | Input/Output: [[-82.3672216226 -25] -107.3672216226]
Test Case: 654 | Input/Output: [[-77.95834287435352 85] 7.041657125646481]
Test Case: 655 | Input/Output: [[-18.60166668114954 -49] -67.60166668114954]
Test Case: 656 | Input/Output: [[-16.79161823498498 63] 46.20838176501502]
Test Case: 657 | Input/Output: [[89.2076635682244 -77] 12.207663568224405]
Test Case: 658 | Input/Output: [[64.10957117320694 16] 80.10957117320694]
Test Case: 659 | Input/Output: [[90.39902393223599 87] 177.399023932236]
Test Case: 660 | Input/Output: [[0.8838349665295482 62] 62.88383496652955]
Test Case: 661 | Input/Output: [[-53.82177145636995 60] 6.178228543630048]
Test Case: 662 | Input/Output: [[84.07608992155275 -89] -4.92391007844725]
Test Case: 663 | Input/Output: [[-40.33688562035429 -44] -84.33688562035428]
Test Case: 664 | Input/Output: [[-4.091069630350148 77] 72.90893036964985]
Test Case: 665 | Input/Output: [[-17.536554713850222 -6] -23.536554713850222]
Test Case: 666 | Input/Output: [[-17.02363525243213 9] -8.023635252432129]
Test Case: 667 | Input/Output: [[77.76824018863007 -18] 59.768240188630074]
Test Case: 668 | Input/Output: [[-57.927512625923974 93] 35.072487374076026]
Test Case: 669 | Input/Output: [[73.47502170519076 86] 159.47502170519076]
Test Case: 670 | Input/Output: [[-95.65867823427409 -14] -109.65867823427409]
Test Case: 671 | Input/Output: [[-2.4765230231812865 -45] -47.47652302318129]
Test Case: 672 | Input/Output: [[-91.45448423045454 31] -60.45448423045454]
Test Case: 673 | Input/Output: [[53.2150680412642 -98] -44.7849319587358]
Test Case: 674 | Input/Output: [[-52.45295298795991 -56] -108.45295298795992]
Test Case: 675 | Input/Output: [[-60.66841450587334 50] -10.668414505873344]
Test Case: 676 | Input/Output: [[67.88533344224302 -12] 55.885333442243024]
Test Case: 677 | Input/Output: [[70.76466339679641 78] 148.7646633967964]
Test Case: 678 | Input/Output: [[-3.246400029953378 -8] -11.246400029953378]
Test Case: 679 | Input/Output: [[-27.224036906426605 0] -27.224036906426605]
Test Case: 680 | Input/Output: [[59.31080055333345 1] 60.31080055333345]
Test Case: 681 | Input/Output: [[-7.444827683161634 32] 24.555172316838366]
Test Case: 682 | Input/Output: [[21.42672765311235 -77] -55.57327234688765]
Test Case: 683 | Input/Output: [[75.03904781612724 -88] -12.960952183872763]
Test Case: 684 | Input/Output: [[38.46686350359897 -36] 2.4668635035989723]
Test Case: 685 | Input/Output: [[-31.4552187458291 9] -22.4552187458291]
Test Case: 686 | Input/Output: [[91.12918917534373 41] 132.12918917534373]
Test Case: 687 | Input/Output: [[22.073975103738405 61] 83.0739751037384]
Test Case: 688 | Input/Output: [[5.4164447442049095 42] 47.41644474420491]
Test Case: 689 | Input/Output: [[70.80190500896225 90] 160.80190500896225]
Test Case: 690 | Input/Output: [[-29.97551346296541 83] 53.02448653703459]
Test Case: 691 | Input/Output: [[-52.812222011733056 -70] -122.81222201173306]
Test Case: 692 | Input/Output: [[45.521435015499776 -76] -30.478564984500224]
Test Case: 693 | Input/Output: [[-25.535636192249783 -43] -68.53563619224978]
Test Case: 694 | Input/Output: [[-83.06358598836596 44] -39.06358598836596]
Test Case: 695 | Input/Output: [[53.94715759378363 77] 130.94715759378363]
Test Case: 696 | Input/Output: [[33.92688482830283 -5] 28.926884828302832]
Test Case: 697 | Input/Output: [[-23.720109057923594 -95] -118.7201090579236]
Test Case: 698 | Input/Output: [[-90.45810871804332 0] -90.45810871804332]
Test Case: 699 | Input/Output: [[6.433985873060394 94] 100.4339858730604]
Test Case: 700 | Input/Output: [[-64.48729961878061 57] -7.487299618780611]
Test Case: 701 | Input/Output: [[-7.267820200382545 36] 28.732179799617455]
Test Case: 702 | Input/Output: [[-86.481116992921 -39] -125.481116992921]
Test Case: 703 | Input/Output: [[60.805405545388055 -15] 45.805405545388055]
Test Case: 704 | Input/Output: [[-43.22642140827973 34] -9.226421408279727]
Test Case: 705 | Input/Output: [[23.014775712750605 38] 61.014775712750605]
Test Case: 706 | Input/Output: [[99.55010641297952 28] 127.55010641297952]
Test Case: 707 | Input/Output: [[-85.39370809681289 74] -11.393708096812887]
Test Case: 708 | Input/Output: [[-97.47601503833678 64] -33.47601503833678]
Test Case: 709 | Input/Output: [[-11.642702789817363 -9] -20.642702789817363]
Test Case: 710 | Input/Output: [[-46.80803981147164 74] 27.191960188528363]
Test Case: 711 | Input/Output: [[67.22947107050001 67] 134.2294710705]
Test Case: 712 | Input/Output: [[20.55659364798386 51] 71.55659364798386]
Test Case: 713 | Input/Output: [[69.56565854221054 -67] 2.5656585422105422]
Test Case: 714 | Input/Output: [[-56.89864522636705 -53] -109.89864522636705]
Test Case: 715 | Input/Output: [[-86.08731363246997 -18] -104.08731363246997]
Test Case: 716 | Input/Output: [[-31.579354984421727 88] 56.42064501557827]
Test Case: 717 | Input/Output: [[73.42817546582364 -99] -25.571824534176358]
Test Case: 718 | Input/Output: [[-79.9976184139991 -7] -86.9976184139991]
Test Case: 719 | Input/Output: [[66.32732867489275 -36] 30.327328674892755]
Test Case: 720 | Input/Output: [[70.10651739457191 69] 139.1065173945719]
Test Case: 721 | Input/Output: [[-97.11516530522886 -63] -160.11516530522886]
Test Case: 722 | Input/Output: [[-18.70123904258665 -4] -22.70123904258665]
Test Case: 723 | Input/Output: [[70.74166734019542 45] 115.74166734019542]
Test Case: 724 | Input/Output: [[86.3794357244266 -43] 43.3794357244266]
Test Case: 725 | Input/Output: [[79.61224802045487 -38] 41.61224802045487]
Test Case: 726 | Input/Output: [[-83.00127042563636 39] -44.00127042563636]
Test Case: 727 | Input/Output: [[-79.48233096177697 -60] -139.48233096177697]
Test Case: 728 | Input/Output: [[2.711771018440885 -98] -95.28822898155912]
Test Case: 729 | Input/Output: [[-77.36622009803557 62] -15.36622009803557]
Test Case: 730 | Input/Output: [[-45.82562047714514 54] 8.174379522854863]
Test Case: 731 | Input/Output: [[-81.56749657440065 -6] -87.56749657440065]
Test Case: 732 | Input/Output: [[-63.15526886116531 93] 29.84473113883469]
Test Case: 733 | Input/Output: [[61.49711013797776 6] 67.49711013797776]
Test Case: 734 | Input/Output: [[-98.86987784174539 57] -41.86987784174539]
Test Case: 735 | Input/Output: [[8.071778387737936 4] 12.071778387737936]
Test Case: 736 | Input/Output: [[-51.37722070029489 67] 15.622779299705108]
Test Case: 737 | Input/Output: [[-45.615401391972355 5] -40.615401391972355]
Test Case: 738 | Input/Output: [[49.43900191145622 48] 97.43900191145622]
Test Case: 739 | Input/Output: [[73.51787641709137 92] 165.51787641709137]
Test Case: 740 | Input/Output: [[25.912826472828016 -57] -31.087173527171984]
Test Case: 741 | Input/Output: [[16.19755494782879 -32] -15.802445052171208]
Test Case: 742 | Input/Output: [[78.12008143830815 -50] 28.120081438308148]
Test Case: 743 | Input/Output: [[18.34645976065252 42] 60.34645976065252]
Test Case: 744 | Input/Output: [[46.726417198873804 -77] -30.273582801126196]
Test Case: 745 | Input/Output: [[87.38319827822133 -70] 17.38319827822133]
Test Case: 746 | Input/Output: [[-23.500065643140005 10] -13.500065643140005]
Test Case: 747 | Input/Output: [[83.16789318886453 -16] 67.16789318886453]
Test Case: 748 | Input/Output: [[45.80742882554222 -98] -52.19257117445778]
Test Case: 749 | Input/Output: [[-99.10580365917458 41] -58.10580365917458]
Test Case: 750 | Input/Output: [[-30.646876648410142 89] 58.35312335158986]
Test Case: 751 | Input/Output: [[42.765916807310305 -89] -46.234083192689695]
Test Case: 752 | Input/Output: [[7.580698635170947 30] 37.58069863517095]
Test Case: 753 | Input/Output: [[34.975164219029296 -75] -40.024835780970704]
Test Case: 754 | Input/Output: [[-45.69302501624399 -27] -72.693025016244]
Test Case: 755 | Input/Output: [[-74.18407747765309 -100] -174.1840774776531]
Test Case: 756 | Input/Output: [[93.49388961509939 68] 161.4938896150994]
Test Case: 757 | Input/Output: [[35.21815593471379 96] 131.2181559347138]
Test Case: 758 | Input/Output: [[-27.636565179210848 65] 37.36343482078915]
Test Case: 759 | Input/Output: [[56.94347565240338 28] 84.94347565240338]
Test Case: 760 | Input/Output: [[-57.61341491368941 52] -5.613414913689411]
Test Case: 761 | Input/Output: [[58.23771525464761 -97] -38.76228474535239]
Test Case: 762 | Input/Output: [[-19.2880518082883 93] 73.7119481917117]
Test Case: 763 | Input/Output: [[5.087676391341091 -37] -31.91232360865891]
Test Case: 764 | Input/Output: [[-12.08507350723282 -31] -43.08507350723282]
Test Case: 765 | Input/Output: [[-28.081917411104 -23] -51.081917411104]
Test Case: 766 | Input/Output: [[23.34458854558632 66] 89.34458854558632]
Test Case: 767 | Input/Output: [[54.10962339854771 52] 106.10962339854771]
Test Case: 768 | Input/Output: [[80.0560933775619 -76] 4.0560933775618935]
Test Case: 769 | Input/Output: [[-90.16345549564859 75] -15.163455495648591]
Test Case: 770 | Input/Output: [[9.120119858854835 21] 30.120119858854835]
Test Case: 771 | Input/Output: [[-43.69313723902772 -8] -51.69313723902772]
Test Case: 772 | Input/Output: [[5.8909583362922575 -56] -50.10904166370774]
Test Case: 773 | Input/Output: [[94.53378553686477 -65] 29.53378553686477]
Test Case: 774 | Input/Output: [[99.56220596521476 -90] 9.562205965214758]
Test Case: 775 | Input/Output: [[56.205529541815224 -53] 3.205529541815224]
Test Case: 776 | Input/Output: [[38.088520813437725 -46] -7.911479186562275]
Test Case: 777 | Input/Output: [[-24.149934932568115 71] 46.850065067431885]
Test Case: 778 | Input/Output: [[19.33452027255163 -30] -10.665479727448371]
Test Case: 779 | Input/Output: [[-14.312203815135533 67] 52.68779618486447]
Test Case: 780 | Input/Output: [[-98.15611012013916 -69] -167.15611012013915]
Test Case: 781 | Input/Output: [[-66.33437906481592 -83] -149.33437906481592]
Test Case: 782 | Input/Output: [[-48.60624142801595 28] -20.60624142801595]
Test Case: 783 | Input/Output: [[97.26997735676915 -61] 36.26997735676915]
Test Case: 784 | Input/Output: [[96.60946964042952 -11] 85.60946964042952]
Test Case: 785 | Input/Output: [[4.903140327047666 -64] -59.096859672952334]
Test Case: 786 | Input/Output: [[33.12561672921288 55] 88.12561672921288]
Test Case: 787 | Input/Output: [[-56.46284755960544 -17] -73.46284755960545]
Test Case: 788 | Input/Output: [[5.357147832381372 -57] -51.64285216761863]
Test Case: 789 | Input/Output: [[18.862195802024573 -31] -12.137804197975427]
Test Case: 790 | Input/Output: [[38.7813751132656 78] 116.7813751132656]
Test Case: 791 | Input/Output: [[-97.64299715328961 10] -87.64299715328961]
Test Case: 792 | Input/Output: [[-88.84318794326988 89] 0.1568120567301179]
Test Case: 793 | Input/Output: [[-84.50781005903791 -64] -148.50781005903792]
Test Case: 794 | Input/Output: [[9.022949168384613 -57] -47.97705083161539]
Test Case: 795 | Input/Output: [[8.50263548004142 10] 18.50263548004142]
Test Case: 796 | Input/Output: [[-74.88997146297842 46] -28.889971462978423]
Test Case: 797 | Input/Output: [[-24.02923989459056 80] 55.97076010540944]
Test Case: 798 | Input/Output: [[-84.80781005377449 72] -12.807810053774489]
Test Case: 799 | Input/Output: [[77.1762103587377 63] 140.1762103587377]
Test Case: 800 | Input/Output: [[41.066494631535676 -35] 6.066494631535676]
Test Case: 801 | Input/Output: [[-55.49855547189302 -4] -59.49855547189302]
Test Case: 802 | Input/Output: [[-9.225394424097686 69] 59.774605575902314]
Test Case: 803 | Input/Output: [[-89.53524170028173 24] -65.53524170028173]
Test Case: 804 | Input/Output: [[55.68681351689008 -14] 41.68681351689008]
Test Case: 805 | Input/Output: [[-75.85157078929558 -77] -152.85157078929558]
Test Case: 806 | Input/Output: [[-27.794791673505316 56] 28.205208326494684]
Test Case: 807 | Input/Output: [[-23.539519059269253 -18] -41.53951905926925]
Test Case: 808 | Input/Output: [[22.52292014324422 -46] -23.47707985675578]
Test Case: 809 | Input/Output: [[-23.54196544514093 13] -10.541965445140931]
Test Case: 810 | Input/Output: [[47.7596284219791 50] 97.7596284219791]
Test Case: 811 | Input/Output: [[59.81327805135669 -84] -24.18672194864331]
Test Case: 812 | Input/Output: [[-12.779306982806247 -87] -99.77930698280625]
Test Case: 813 | Input/Output: [[97.12418922554025 -92] 5.124189225540249]
Test Case: 814 | Input/Output: [[0.49126515220731903 95] 95.49126515220732]
Test Case: 815 | Input/Output: [[30.89907345123669 -81] -50.10092654876331]
Test Case: 816 | Input/Output: [[-18.456141247447476 -73] -91.45614124744748]
Test Case: 817 | Input/Output: [[-88.94773085096969 20] -68.94773085096969]
Test Case: 818 | Input/Output: [[-53.90649417234093 69] 15.093505827659072]
Test Case: 819 | Input/Output: [[-82.63553617843588 -22] -104.63553617843588]
Test Case: 820 | Input/Output: [[-60.80405257577597 -47] -107.80405257577597]
Test Case: 821 | Input/Output: [[41.79503408907814 71] 112.79503408907814]
Test Case: 822 | Input/Output: [[73.04883381459743 79] 152.04883381459743]
Test Case: 823 | Input/Output: [[92.85661667338195 58] 150.85661667338195]
Test Case: 824 | Input/Output: [[83.63250449295535 23] 106.63250449295535]
Test Case: 825 | Input/Output: [[58.463662712542884 -2] 56.463662712542884]
Test Case: 826 | Input/Output: [[-49.093628892955856 -18] -67.09362889295585]
Test Case: 827 | Input/Output: [[-4.812611595877186 -57] -61.812611595877186]
Test Case: 828 | Input/Output: [[96.56521502052345 -33] 63.56521502052345]
Test Case: 829 | Input/Output: [[96.49496237544903 -44] 52.494962375449035]
Test Case: 830 | Input/Output: [[-19.538130406454485 80] 60.461869593545515]
Test Case: 831 | Input/Output: [[-30.813810932376214 -59] -89.81381093237621]
Test Case: 832 | Input/Output: [[-53.20361582197233 -22] -75.20361582197233]
Test Case: 833 | Input/Output: [[-60.67622638184347 92] 31.32377361815653]
Test Case: 834 | Input/Output: [[-62.084323620163204 34] -28.084323620163204]
Test Case: 835 | Input/Output: [[82.66647819898674 -76] 6.666478198986738]
Test Case: 836 | Input/Output: [[97.3926155010075 -8] 89.3926155010075]
Test Case: 837 | Input/Output: [[-27.752615097533933 -13] -40.75261509753393]
Test Case: 838 | Input/Output: [[-42.99889763664368 -66] -108.99889763664368]
Test Case: 839 | Input/Output: [[49.494967441300076 9] 58.494967441300076]
Test Case: 840 | Input/Output: [[-39.753254281183125 78] 38.246745718816875]
Test Case: 841 | Input/Output: [[-84.6029935037037 53] -31.6029935037037]
Test Case: 842 | Input/Output: [[77.3589701023541 -29] 48.35897010235411]
Test Case: 843 | Input/Output: [[-52.23011970330855 -70] -122.23011970330856]
Test Case: 844 | Input/Output: [[87.10893450735824 88] 175.10893450735824]
Test Case: 845 | Input/Output: [[93.56685331090992 -39] 54.56685331090992]
Test Case: 846 | Input/Output: [[-66.47364312673236 -20] -86.47364312673236]
Test Case: 847 | Input/Output: [[-42.015143105395666 -5] -47.015143105395666]
Test Case: 848 | Input/Output: [[-78.81430212405567 -73] -151.81430212405567]
Test Case: 849 | Input/Output: [[-89.84843176318694 -45] -134.84843176318694]
Test Case: 850 | Input/Output: [[-17.251505026743757 38] 20.748494973256243]
Test Case: 851 | Input/Output: [[-92.2182690138861 70] -22.2182690138861]
Test Case: 852 | Input/Output: [[23.41830361825697 97] 120.41830361825697]
Test Case: 853 | Input/Output: [[-52.34537892536868 -36] -88.34537892536868]
Test Case: 854 | Input/Output: [[42.09187530907241 -6] 36.09187530907241]
Test Case: 855 | Input/Output: [[92.48994390096567 68] 160.48994390096567]
Test Case: 856 | Input/Output: [[12.640885989714292 65] 77.64088598971429]
Test Case: 857 | Input/Output: [[76.1844809269007 75] 151.1844809269007]
Test Case: 858 | Input/Output: [[-55.163037568684814 81] 25.836962431315186]
Test Case: 859 | Input/Output: [[21.136008960257044 -89] -67.86399103974296]
Test Case: 860 | Input/Output: [[23.798888128780106 70] 93.7988881287801]
Test Case: 861 | Input/Output: [[14.576976093196478 -71] -56.42302390680352]
Test Case: 862 | Input/Output: [[97.32172247644434 99] 196.32172247644434]
Test Case: 863 | Input/Output: [[-61.96276677452484 -98] -159.96276677452482]
Test Case: 864 | Input/Output: [[-49.23195405126106 81] 31.768045948738937]
Test Case: 865 | Input/Output: [[-85.35136021373376 -5] -90.35136021373376]
Test Case: 866 | Input/Output: [[-56.43345550144503 -44] -100.43345550144502]
Test Case: 867 | Input/Output: [[-7.979227992303834 -10] -17.979227992303834]
Test Case: 868 | Input/Output: [[-56.43594575364577 -58] -114.43594575364577]
Test Case: 869 | Input/Output: [[-1.2352238267284292 -18] -19.23522382672843]
Test Case: 870 | Input/Output: [[-93.73547407770259 69] -24.73547407770259]
Test Case: 871 | Input/Output: [[5.238586275216605 4] 9.238586275216605]
Test Case: 872 | Input/Output: [[23.132450006169506 65] 88.1324500061695]
Test Case: 873 | Input/Output: [[25.84728922859574 27] 52.84728922859574]
Test Case: 874 | Input/Output: [[44.67747072887559 -29] 15.67747072887559]
Test Case: 875 | Input/Output: [[36.55287544971429 -35] 1.5528754497142927]
Test Case: 876 | Input/Output: [[88.80667835684804 15] 103.80667835684804]
Test Case: 877 | Input/Output: [[-6.030146843118132 -55] -61.03014684311813]
Test Case: 878 | Input/Output: [[13.666275194339676 14] 27.666275194339676]
Test Case: 879 | Input/Output: [[14.111598184399469 66] 80.11159818439947]
Test Case: 880 | Input/Output: [[7.281409571758914 28] 35.281409571758914]
Test Case: 881 | Input/Output: [[-96.78185973413763 47] -49.781859734137626]
Test Case: 882 | Input/Output: [[-87.60993571773133 -58] -145.60993571773133]
Test Case: 883 | Input/Output: [[31.61152685012837 -40] -8.38847314987163]
Test Case: 884 | Input/Output: [[78.15445350603906 -75] 3.1544535060390615]
Test Case: 885 | Input/Output: [[42.45840766642942 18] 60.45840766642942]
Test Case: 886 | Input/Output: [[69.13700131312447 -4] 65.13700131312447]
Test Case: 887 | Input/Output: [[81.85484108102881 43] 124.85484108102881]
Test Case: 888 | Input/Output: [[-97.82217960909712 -100] -197.82217960909713]
Test Case: 889 | Input/Output: [[-77.64938841118179 -2] -79.64938841118179]
Test Case: 890 | Input/Output: [[22.958698015960735 -47] -24.041301984039265]
Test Case: 891 | Input/Output: [[30.303205659579078 40] 70.30320565957908]
Test Case: 892 | Input/Output: [[76.89023382458274 -99] -22.109766175417263]
Test Case: 893 | Input/Output: [[19.171446542412255 -16] 3.171446542412255]
Test Case: 894 | Input/Output: [[-37.388666025773134 64] 26.611333974226866]
Test Case: 895 | Input/Output: [[24.196933888667346 6] 30.196933888667346]
Test Case: 896 | Input/Output: [[27.73655558255757 30] 57.73655558255757]
Test Case: 897 | Input/Output: [[-72.43647868814173 55] -17.436478688141733]
Test Case: 898 | Input/Output: [[-61.59268938154072 -22] -83.59268938154072]
Test Case: 899 | Input/Output: [[75.74554389496657 -64] 11.745543894966573]
Test Case: 900 | Input/Output: [[-9.930775548145391 -94] -103.93077554814539]
Test Case: 901 | Input/Output: [[84.30232973617805 77] 161.30232973617805]
Test Case: 902 | Input/Output: [[58.50480770731522 -7] 51.50480770731522]
Test Case: 903 | Input/Output: [[51.84738721276847 -14] 37.84738721276847]
Test Case: 904 | Input/Output: [[83.68111940383162 77] 160.68111940383162]
Test Case: 905 | Input/Output: [[76.15446626973338 8] 84.15446626973338]
Test Case: 906 | Input/Output: [[-89.53403530050375 -22] -111.53403530050375]
Test Case: 907 | Input/Output: [[43.4247967162554 -82] -38.5752032837446]
Test Case: 908 | Input/Output: [[-39.937838760914545 -28] -67.93783876091454]
Test Case: 909 | Input/Output: [[85.7885352829176 25] 110.7885352829176]
Test Case: 910 | Input/Output: [[-78.41665226452392 10] -68.41665226452392]
Test Case: 911 | Input/Output: [[-95.59076378438314 -9] -104.59076378438314]
Test Case: 912 | Input/Output: [[33.26621223323838 -88] -54.73378776676162]
Test Case: 913 | Input/Output: [[98.60473376693608 -37] 61.60473376693608]
Test Case: 914 | Input/Output: [[49.19679119666864 9] 58.19679119666864]
Test Case: 915 | Input/Output: [[-4.346598046806122 -64] -68.34659804680612]
Test Case: 916 | Input/Output: [[64.86543119411076 -97] -32.134568805889245]
Test Case: 917 | Input/Output: [[62.43842243513927 9] 71.43842243513927]
Test Case: 918 | Input/Output: [[72.3284457226869 11] 83.3284457226869]
Test Case: 919 | Input/Output: [[99.14165103442218 44] 143.14165103442218]
Test Case: 920 | Input/Output: [[69.79256593277393 -55] 14.792565932773925]
Test Case: 921 | Input/Output: [[-16.61475196581756 -13] -29.61475196581756]
Test Case: 922 | Input/Output: [[42.36328006064113 74] 116.36328006064113]
Test Case: 923 | Input/Output: [[8.678117314733697 -78] -69.3218826852663]
Test Case: 924 | Input/Output: [[-57.11471279225528 75] 17.885287207744717]
Test Case: 925 | Input/Output: [[3.033279800318269 -94] -90.96672019968173]
Test Case: 926 | Input/Output: [[-39.676542375352206 -22] -61.676542375352206]
Test Case: 927 | Input/Output: [[-33.833001671841274 -28] -61.833001671841274]
Test Case: 928 | Input/Output: [[-3.849959719951272 -52] -55.84995971995127]
Test Case: 929 | Input/Output: [[94.80321629234544 -82] 12.80321629234544]
Test Case: 930 | Input/Output: [[-89.00024062332797 5] -84.00024062332797]
Test Case: 931 | Input/Output: [[-84.33363219738565 -87] -171.33363219738567]
Test Case: 932 | Input/Output: [[79.19605826419857 -44] 35.19605826419857]
Test Case: 933 | Input/Output: [[-47.79084512542231 -46] -93.79084512542231]
Test Case: 934 | Input/Output: [[-46.913770110914484 61] 14.086229889085516]
Test Case: 935 | Input/Output: [[-17.19851540893667 -52] -69.19851540893667]
Test Case: 936 | Input/Output: [[48.480533374298886 -4] 44.480533374298886]
Test Case: 937 | Input/Output: [[66.96352472215884 -75] -8.036475277841163]
Test Case: 938 | Input/Output: [[77.40745771659019 -46] 31.407457716590187]
Test Case: 939 | Input/Output: [[-19.616820453123452 98] 78.38317954687655]
Test Case: 940 | Input/Output: [[94.55582767179001 -59] 35.55582767179001]
Test Case: 941 | Input/Output: [[-87.16240899398433 7] -80.16240899398433]
Test Case: 942 | Input/Output: [[84.22061028182492 100] 184.22061028182492]
Test Case: 943 | Input/Output: [[-61.734014181998845 -31] -92.73401418199884]
Test Case: 944 | Input/Output: [[41.69546839093675 42] 83.69546839093675]
Test Case: 945 | Input/Output: [[-17.470762194551142 -6] -23.470762194551142]
Test Case: 946 | Input/Output: [[7.80015686946787 42] 49.80015686946787]
Test Case: 947 | Input/Output: [[-18.694108631653876 -53] -71.69410863165388]
Test Case: 948 | Input/Output: [[28.711479010047015 83] 111.71147901004701]
Test Case: 949 | Input/Output: [[63.58765780286032 -83] -19.41234219713968]
Test Case: 950 | Input/Output: [[15.384324652477773 -32] -16.615675347522227]
Test Case: 951 | Input/Output: [[-4.597802967849745 -10] -14.597802967849745]
Test Case: 952 | Input/Output: [[56.88503328697985 -11] 45.88503328697985]
Test Case: 953 | Input/Output: [[38.73663294955716 77] 115.73663294955716]
Test Case: 954 | Input/Output: [[-1.3978282181833919 12] 10.602171781816608]
Test Case: 955 | Input/Output: [[8.223597800264699 30] 38.2235978002647]
Test Case: 956 | Input/Output: [[-22.123476444676854 -36] -58.123476444676854]
Test Case: 957 | Input/Output: [[88.60080711772352 -15] 73.60080711772352]
Test Case: 958 | Input/Output: [[-49.901804998166234 28] -21.901804998166234]
Test Case: 959 | Input/Output: [[-99.65238893810296 8] -91.65238893810296]
Test Case: 960 | Input/Output: [[-68.00414941364409 38] -30.004149413644086]
Test Case: 961 | Input/Output: [[-6.34470108507135 31] 24.65529891492865]
Test Case: 962 | Input/Output: [[-69.22697048417822 83] 13.773029515821776]
Test Case: 963 | Input/Output: [[-79.35098649498718 100] 20.649013505012817]
Test Case: 964 | Input/Output: [[16.460273646028043 39] 55.46027364602804]
Test Case: 965 | Input/Output: [[32.63609495729108 -42] -9.363905042708922]
Test Case: 966 | Input/Output: [[-63.659728252964975 -24] -87.65972825296498]
Test Case: 967 | Input/Output: [[50.764380726787095 -57] -6.2356192732129045]
Test Case: 968 | Input/Output: [[-89.55269250095088 -95] -184.55269250095088]
Test Case: 969 | Input/Output: [[-38.37300002559299 37] -1.3730000255929866]
Test Case: 970 | Input/Output: [[45.341589047919484 -84] -38.658410952080516]
Test Case: 971 | Input/Output: [[18.44951980137985 48] 66.44951980137985]
Test Case: 972 | Input/Output: [[-76.85144829813777 -73] -149.85144829813777]
Test Case: 973 | Input/Output: [[-46.84395540428452 84] 37.15604459571548]
Test Case: 974 | Input/Output: [[-11.340231902350936 -99] -110.34023190235094]
Test Case: 975 | Input/Output: [[-93.48079049703857 -85] -178.48079049703858]
Test Case: 976 | Input/Output: [[-84.1887160532722 3] -81.1887160532722]
Test Case: 977 | Input/Output: [[-79.2944816129954 -58] -137.2944816129954]
Test Case: 978 | Input/Output: [[-56.40679741741135 37] -19.406797417411347]
Test Case: 979 | Input/Output: [[34.41647501016399 -41] -6.5835249898360075]
Test Case: 980 | Input/Output: [[-29.630645333573796 -99] -128.6306453335738]
Test Case: 981 | Input/Output: [[64.34666019949645 31] 95.34666019949645]
Test Case: 982 | Input/Output: [[61.30240851681316 -16] 45.30240851681316]
Test Case: 983 | Input/Output: [[-28.344204254384664 88] 59.655795745615336]
Test Case: 984 | Input/Output: [[-74.1786866137455 -58] -132.1786866137455]
Test Case: 985 | Input/Output: [[-11.00842012420435 -68] -79.00842012420435]
Test Case: 986 | Input/Output: [[-43.378711676265816 -59] -102.37871167626582]
Test Case: 987 | Input/Output: [[-49.22168796498694 -40] -89.22168796498694]
Test Case: 988 | Input/Output: [[89.79419512660624 3] 92.79419512660624]
Test Case: 989 | Input/Output: [[-84.37321270110127 -35] -119.37321270110127]
Test Case: 990 | Input/Output: [[-12.890419736669088 -88] -100.89041973666909]
Test Case: 991 | Input/Output: [[66.89052414684019 -9] 57.89052414684019]
Test Case: 992 | Input/Output: [[83.66569622975834 -85] -1.334303770241661]
Test Case: 993 | Input/Output: [[-75.35216220035252 -64] -139.35216220035252]
Test Case: 994 | Input/Output: [[-85.72123585050144 97] 11.278764149498556]
Test Case: 995 | Input/Output: [[-3.076070053936945 -39] -42.076070053936945]
Test Case: 996 | Input/Output: [[-32.20179063802942 -29] -61.20179063802942]
Test Case: 997 | Input/Output: [[95.05212194526788 39] 134.05212194526788]
Test Case: 998 | Input/Output: [[-85.53783072640806 49] -36.53783072640806]
Test Case: 999 | Input/Output: [[36.32182090030793 37] 73.32182090030793]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -62 -13 70 117 -48 -72 65 -60 38 39 -43 -125 13 -26 -58 86
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 55880.0
Test mean error for best: 27.94000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -37.8955228555
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 13.3482587745 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 3.295187364   
Correct output: -50.868100625  | Program output: -66.868100625 
Correct output: 23.5384229728  | Program output: -69.4615770272
Correct output: -9.9640986393  | Program output: -53.9640986393
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -37.1203120353
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: -10.9656683189
Correct output: 6.5371282958   | Program output: -32.4628717042
Correct output: 183.0405782309 | Program output: 88.0405782309 
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: -26.1439053241
Correct output: 151.8048643924 | Program output: 80.8048643924 
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_dec} {:instruction print_float} {:instruction float_yank} {:instruction integer_pop} {:instruction integer_dup} {:instruction tag_integer_579} {:instruction in2} {:instruction float_cos} {:instruction float_flush} {:instruction integer_pop} {:instruction integer_flush} {:instruction tag_integer_132} {:instruction float_inc} {:instruction integer_dec} {:instruction float_flush} {:instruction float_yank} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_max} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction in1} {:instruction float_swap} {:instruction print_float} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_shove} {:instruction float_yank} {:instruction float_dec} {:instruction float_sin} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction tagged_820} {:instruction float_min} {:instruction integer_swap})
Best program: (float_swap float_dec print_float float_yank integer_pop integer_dup tag_integer_579 in2 float_cos float_flush integer_pop integer_flush tag_integer_132 float_inc integer_dec float_flush float_yank float_dup_times integer_fromfloat integer_dec print_integer integer_yankdup float_max integer_dup float_stackdepth in1 float_swap print_float float_mult integer_dup_times float_shove float_yank float_dec float_sin float_stackdepth integer_mult tagged_820 float_min integer_swap)
Errors: [63.0 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 19.0 2 99.0 2 47.0 2 16.0 2 93.0 12 44.0 2 75.0 13 12.0 2 24.0 2 44.0 11 39.0 12 95.0 2 43.0 2 35.0 13 71.0 3 44.0 2 21.0 2]
Total: 1230.0
Mean: 24.6
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 17628.572864
Median total errors in population: 25329.0
Error averages by case: (685.1624458000007 13.176 700.5335429999982 12.532 700.3863150000014 12.465 701.2198341000005 13.118 669.5747718999977 12.365 716.5784573000026 13.949 710.0119096000027 13.202 689.5065110000005 12.736 673.6311419999998 12.523 716.9682584000014 13.889 682.447254300001 11.47 685.4611773 12.267 689.3931611 13.121 682.2988543999988 12.397 694.8984321000005 14.14 678.2749969999993 13.066 689.2035973000003 13.107 681.1744034000011 13.026 678.6931538999994 12.311 719.9765703999983 13.089 693.2724177999986 10.954 677.9333389999988 12.313 710.871804299998 13.203 696.7508403999987 10.877 686.7156732000009 12.338)
Error minima by case: (3.1045 8 1.5396 2 0.0985 2 0.0885 2 0.0 1 3.3812 3 0.511 2 1.3674 8 2.3483 2 3.3618 2 0.7048 2 0.803 2 1.5384 8 2.1228 2 1.3311 9 0.1608 2 0.0367 2 2.9657 8 1.5371 8 3.9594 2 0.8319 2 1.2138 9 9.8049 3 0.5724 2 0.3224 2)
Average genome size in population (length): 52.822
Average program size in population (points): 53.822
Average percent parens in population: 0.039
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.343
Error (vector) diversity:			 0.373
Behavioral diversity:				 0.393
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1324362
--- Timings ---
Current time: 1529614780868 milliseconds
Total Time:           3.5 seconds
Initialization:       0.1 seconds,  3.2%
Reproduction:         0.6 seconds, 15.8%
Fitness Testing:      2.8 seconds, 81.0%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction integer_mod} {:instruction float_pop} {:instruction float_rot} {:instruction float_flush} {:instruction float_tan} {:instruction float_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_div} {:instruction float_swap} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_yankdup} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sin} {:instruction in1} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_inc} {:instruction float_sub})
Best program: (float_add integer_shove float_dup float_stackdepth integer_fromfloat print_float integer_mult float_inc integer_dup_items float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_tan integer_max float_cos float_rot in1 integer_mod float_pop float_rot float_flush float_tan float_mod integer_mod integer_min float_div float_swap integer_yankdup integer_pop float_yankdup float_pop float_sin float_dec float_sin in1 float_dup_times integer_dec float_inc float_sub)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 6017.888668000009
Median total errors in population: 1700.4674
Error averages by case: (212.92947929999954 12.416 244.86020610000173 10.401 241.438894899999 10.188 246.05172259999824 10.623 197.11572010000194 10.067 277.1317392999987 11.375 262.6935586999994 10.758 215.96499080000015 11.606 197.93321040000095 10.416 278.7053723000019 11.162 210.7026962999983 9.293 219.5967556000001 9.9 224.3118721999997 12.273 208.1712991000009 10.117 231.95918629999986 13.324 202.0406838000003 10.564 218.26209900000185 10.545 210.5064643999999 11.985 201.67578209999968 11.667 294.2372350000011 10.644 230.4940998999989 9.151 200.62552730000036 11.735 272.95130289999815 10.878 237.19804160000132 9.03 210.24272799999858 9.97)
Error minima by case: (1.6523 8 1.5396 2 2.6199 2 1.8528 2 0.0 0 4.3086 3 2.511 2 1.3674 8 2.3483 2 3.3618 1 2.2248 2 0.803 2 0.0862 8 2.9641 2 1.3311 9 0.1608 2 0.0367 2 2.9657 8 1.5371 8 3.9594 2 1.6914 2 1.1439 8 1.8049 2 2.3674 2 0.3224 2)
Average genome size in population (length): 62.843
Average program size in population (points): 63.843
Average percent parens in population: 0.019
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.512
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.31
Error (vector) diversity:			 0.337
Behavioral diversity:				 0.37
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2899037
--- Timings ---
Current time: 1529614784975 milliseconds
Total Time:           7.6 seconds
Initialization:       0.1 seconds,  1.5%
Reproduction:         2.5 seconds, 32.5%
Fitness Testing:      4.5 seconds, 58.9%
Report:               0.5 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_cos} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sub} {:instruction float_sub} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction float_mod} {:instruction tag_float_935} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction integer_mod} {:instruction float_pop} {:instruction float_rot} {:instruction float_flush} {:instruction float_tan} {:instruction float_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_div} {:instruction float_swap} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_yankdup} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sin} {:instruction in1} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_pop} {:instruction float_swap} {:instruction float_pop} {:instruction integer_inc} {:instruction float_tan} {:instruction float_cos} {:instruction integer_stackdepth})
Best program: (integer_sub float_cos integer_yankdup integer_dup_items in2 float_sub float_sub integer_min integer_dup_times integer_inc float_inc float_dup_times float_stackdepth float_mod tag_float_935 float_mod integer_rot integer_max integer_mult integer_flush float_frominteger float_rot in2 integer_dup_items integer_inc integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_tan integer_max float_cos float_rot in1 integer_mod float_pop float_rot float_flush float_tan float_mod integer_mod integer_min float_div float_swap integer_yankdup integer_pop float_yankdup float_pop float_sin float_dec float_sin in1 float_dup_times integer_dec float_inc float_sub integer_inc float_pop float_swap float_pop integer_inc float_tan float_cos integer_stackdepth)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 76
Size: 77
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 4710.0381335
Median total errors in population: 1260.2432
Error averages by case: (184.50574840000016 13.159 177.4385586000002 6.353 176.00845099999992 5.908 171.73474969999987 6.351 142.3736357000005 5.45 192.95565529999948 7.15 212.18693399999978 6.376 181.17481979999994 11.861 151.43076419999989 6.163 225.63350700000035 6.426 170.2361072999995 5.527 160.00815440000034 6.069 208.1987080000002 12.723 173.91591840000015 6.172 203.87445660000014 13.819 150.24486909999985 6.327 167.01125120000052 6.263 169.42989289999997 12.136 167.85789800000023 12.568 224.4569073000001 6.127 184.88030769999978 5.634 164.65165909999996 13.022 204.64554349999963 6.817 182.3223242000004 5.633 162.83531209999953 5.992)
Error minima by case: (8.9412 9 10.5836 1 8.015 1 14.0 2 0.0 0 30.0189 3 1.1004 1 5.3213 9 7.8752 2 24.461 1 2.2952 2 5.9063 2 6.0886 8 8.2664 2 3.1493 10 0.1608 2 1.4681 2 7.1891 8 3.5328 8 17.9594 2 0.3915 2 1.2138 9 49.1951 2 16.5724 2 0.3224 2)
Average genome size in population (length): 56.014
Average program size in population (points): 57.014
Average percent parens in population: 0.021
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.955
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.721
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.721
Total error diversity:				 0.144
Error (vector) diversity:			 0.16
Behavioral diversity:				 0.176
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4302225
--- Timings ---
Current time: 1529614788717 milliseconds
Total Time:          11.3 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         3.9 seconds, 34.8%
Fitness Testing:      6.2 seconds, 54.7%
Report:               1.1 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction float_shove} {:instruction float_add} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction float_inc})
Best program: (integer_mult float_sub float_dec integer_yank integer_stackdepth float_mod float_shove float_add integer_dup float_stackdepth integer_yankdup float_div tagged_146 float_cos float_max float_add float_sub float_dup_times integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times float_inc)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 3817.8257390000003
Median total errors in population: 1230.0
Error averages by case: (162.59848839999998 12.725 127.1314429 3.558 126.98208590000003 3.337 124.83047890000002 3.587 106.37463810000003 2.426 144.12916279999993 4.483 182.30811879999996 3.575 146.06397919999998 11.596 121.48881329999998 3.399 197.6604679 3.52 144.93600799999996 3.214 122.31337240000005 3.489 188.7201862 12.591 145.88447479999994 3.521 172.55618660000005 13.638 118.31566999999997 3.559 130.75309090000005 3.524 146.16003030000002 11.73 141.4348564 12.551 190.45959200000001 3.414 144.9110431 3.269 137.9845722 13.409 168.93787890000002 4.267 148.65858830000002 3.305 125.13051269999998 3.415)
Error minima by case: (24.1573 10 8.4604 1 0.6199 1 13.574 2 0.0 0 30.0189 2 1.1004 1 6.9742 9 13.3483 1 25.461 1 3.2952 2 15.0 2 22.5672 10 7.2138 2 23.9186 11 11.0 2 7.2863 2 10.9657 9 5.5733 9 86.0406 2 29.1681 2 7.9326 10 54.8049 2 4.7652 2 11.6379 1)
Average genome size in population (length): 48.98
Average program size in population (points): 49.98
Average percent parens in population: 0.023
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.41675
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.654
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.654
Total error diversity:				 0.065
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5528725
--- Timings ---
Current time: 1529614792042 milliseconds
Total Time:          14.8 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         5.3 seconds, 35.8%
Fitness Testing:      7.7 seconds, 52.1%
Report:               1.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_cos} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sub} {:instruction float_sub} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction float_mod} {:instruction tag_float_935} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_mult} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_dup} {:instruction float_tan} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_rot} {:instruction float_flush} {:instruction float_tan} {:instruction float_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_div} {:instruction float_swap} {:instruction float_sin} {:instruction integer_pop} {:instruction float_yankdup} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sin} {:instruction in1} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_inc} {:instruction float_sub})
Best program: (integer_sub float_cos integer_yankdup integer_dup_items in2 float_sub float_sub integer_min integer_dup_times integer_inc float_inc float_dup_times float_stackdepth float_mod tag_float_935 float_mod integer_rot integer_max integer_mult integer_flush float_frominteger float_rot in2 integer_dup_items integer_inc integer_stackdepth in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_mult 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_dup float_tan integer_mod float_frominteger float_rot float_flush float_tan float_mod integer_mod integer_min float_div float_swap float_sin integer_pop float_yankdup float_pop float_sin float_dec float_sin in1 float_dup_times integer_dec float_inc float_sub)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3799.6043792000005
Median total errors in population: 1230.0
Error averages by case: (164.2769649 12.592 124.825464 3.633 124.75996020000001 3.223 122.2383195 3.379 103.4534385 1.995 141.2792834 4.323 179.75131459999994 3.36 144.25919840000003 11.462 122.27698989999999 3.343 195.1685969 3.052 146.8109601 3.228 123.38016410000003 3.384 191.0178831 12.5 147.67184370000004 3.413 171.1805269 13.491 119.2816414 3.454 127.9391814 3.325 147.1678682 11.67 142.8936196 12.45 191.2703276 3.418 143.1455785 3.101 139.2790362 13.328 169.86409229999998 3.989 145.95885450000003 3.097 122.98227129999998 3.261)
Error minima by case: (24.1045 10 15.5396 1 20.0 1 14.0 2 0.0 0 35.0 2 14.511 1 8.7245 10 14.3483 1 24.461 1 4.2952 2 5.35 2 22.5384 10 8.9641 2 18.8491 11 11.0 2 6.2863 2 9.9657 10 5.5371 10 5.0 1 37.5945 2 7.8561 10 29.0 2 1.9833 2 11.506 1)
Average genome size in population (length): 50.147
Average program size in population (points): 51.147
Average percent parens in population: 0.022
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 5.92425
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.713
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.713
Total error diversity:				 0.05
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6784361
--- Timings ---
Current time: 1529614795454 milliseconds
Total Time:          18.2 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         6.7 seconds, 36.8%
Fitness Testing:      9.3 seconds, 51.2%
Report:               2.1 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_dup} {:instruction float_mod} {:instruction float_shove} {:instruction integer_add} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction float_inc})
Best program: (float_div float_sub float_dec integer_yank integer_dup float_mod float_shove integer_add integer_dup float_stackdepth integer_yankdup float_div tagged_146 float_cos float_max float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times float_inc)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 3026.2319904
Median total errors in population: 1227.0
Error averages by case: (133.2315631 12.444 94.50334179999999 3.768 94.44617900000001 2.801 89.99450430000002 2.913 72.4493636 1.006 109.5810762 3.87 150.87181680000003 2.908 115.4628618 11.339 91.8400984 2.892 166.66168610000003 2.021 116.605874 2.793 90.13113460000001 2.906 160.7972808 12.368 115.72898699999999 2.935 143.17881039999997 13.376 86.4407019 2.956 97.14710430000001 2.864 115.79479570000001 11.439 111.1216158 12.352 162.4543654 2.916 113.7152017 2.727 107.4525185 13.266 140.2207605 2.965 115.6915556 2.7 93.34779309999999 2.836)
Error minima by case: (24.0674 10 18.4604 1 10.6199 1 14.0 2 0.0 0 35.0 2 52.4194 1 2.979 7 18.0 1 79.3694 1 8.7048 2 5.7765 2 22.7727 11 9.9641 2 18.4227 12 11.0 2 13.8053 2 25.9657 11 6.403 8 94.0 2 19.1681 2 8.7035 9 70.0 2 16.4808 2 10.6379 1)
Average genome size in population (length): 52.909
Average program size in population (points): 53.909
Average percent parens in population: 0.019
Minimum age in population: 5.0
Maximum age in population: 9.0625
Average age in population: 7.40525
Median age in population: 7.4375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.691
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.691
Total error diversity:				 0.034
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 8109147
--- Timings ---
Current time: 1529614798764 milliseconds
Total Time:          21.6 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         8.0 seconds, 37.2%
Fitness Testing:     10.9 seconds, 50.6%
Report:               2.5 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_cos} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sub} {:instruction float_sub} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_124} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_swap} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_yankdup} {:instruction float_pop} {:instruction float_sin} {:instruction float_dec} {:instruction float_sin} {:instruction in1} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_pop} {:instruction float_swap} {:instruction float_pop} {:instruction integer_inc} {:instruction float_tan} {:instruction float_cos} {:instruction integer_stackdepth})
Best program: (integer_sub float_cos integer_yankdup integer_dup_items in2 float_sub float_sub integer_min float_stackdepth integer_yankdup float_div tagged_124 float_cos float_max float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_div float_swap integer_yankdup integer_pop float_yankdup float_pop float_sin float_dec float_sin in1 float_dup_times integer_dec float_inc float_sub integer_inc float_pop float_swap float_pop integer_inc float_tan float_cos integer_stackdepth)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3627.8678022
Median total errors in population: 1227.0
Error averages by case: (155.7073475 12.642 119.90152239999999 4.106 119.86135460000001 3.102 114.4825751 3.232 98.1775042 1.29 133.4659484 4.172 173.7391512 3.231 140.3479898 11.487 116.2347338 3.197 189.06880040000001 2.311 140.7855436 3.067 113.63060490000002 3.209 182.6461648 12.544 138.6519381 3.253 167.34051140000003 13.579 110.0370633 3.275 121.51285270000002 3.152 138.6551201 11.602 134.1386311 12.532 184.7763884 3.227 138.6681864 2.979 130.5488785 13.433 163.1811674 3.24 139.5433059 2.954 118.80751819999999 3.141)
Error minima by case: (24.0674 11 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 2.979 7 13.3483 2 25.461 1 3.2952 1 14.0 2 22.7727 11 9.5355 2 25.3156 12 10.0 1 7.2863 2 10.9657 11 6.5841 10 88.0406 2 38.9952 2 8.8673 10 69.0 2 17.5724 2 12.4546 2)
Average genome size in population (length): 52.767
Average program size in population (points): 53.767
Average percent parens in population: 0.020
Minimum age in population: 6.375
Maximum age in population: 10.875
Average age in population: 8.90996875
Median age in population: 9.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.796
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.796
Total error diversity:				 0.035
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9430670
--- Timings ---
Current time: 1529614802256 milliseconds
Total Time:          24.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:         9.4 seconds, 37.6%
Fitness Testing:     12.6 seconds, 50.4%
Report:               2.9 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_dup} {:instruction float_mod} {:instruction float_shove} {:instruction float_add} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction integer_mod} {:instruction float_pop} {:instruction float_flush})
Best program: (integer_yank integer_dup float_mod float_shove float_add integer_dup integer_yankdup float_div tagged_146 float_cos float_max float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_tan integer_max float_cos float_rot in1 integer_mod float_pop float_flush)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3271.7308844
Median total errors in population: 1227.0
Error averages by case: (141.5687805 12.498 105.4057519 3.968 105.3587089 2.981 101.91847950000002 3.084 83.2976151 1.155 121.2157928 4.054 161.7540765 3.087 126.0420105 11.366 99.53838269999999 3.088 177.30077639999996 2.191 125.0341703 2.977 99.04421909999999 3.094 168.9319128 12.435 124.3347951 3.125 153.4320105 13.416 95.24173230000001 3.153 108.86672829999999 3.037 124.22492100000001 11.494 119.7179154 12.408 169.3972331 3.133 124.39131709999998 2.85 116.0652773 13.31 147.41781890000001 3.145 127.14844480000001 2.831 104.1960136 3.006)
Error minima by case: (24.1045 11 18.4604 2 10.6199 2 16.0 2 0.0 0 37.0 3 15.511 2 0.735 9 12.3483 2 25.461 1 2.2952 1 14.0 2 22.5384 10 0.9746 2 17.6794 9 10.0 1 7.2863 2 10.9657 11 5.5371 9 87.0406 2 19.1681 2 7.8561 10 69.0 2 17.5724 2 11.506 2)
Average genome size in population (length): 52.586
Average program size in population (points): 53.586
Average percent parens in population: 0.020
Minimum age in population: 7.40625
Maximum age in population: 12.40625
Average age in population: 10.401015625
Median age in population: 10.4140625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.823
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.823
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 10747829
--- Timings ---
Current time: 1529614805602 milliseconds
Total Time:          28.4 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        10.7 seconds, 37.8%
Fitness Testing:     14.2 seconds, 49.9%
Report:               3.4 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_dup} {:instruction float_mod} {:instruction float_shove} {:instruction float_add} {:instruction float_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction in2} {:instruction float_shove} {:instruction integer_dup} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction tagged_369} {:instruction float_mult} {:instruction float_swap} {:instruction integer_yank} {:instruction integer_pop} {:instruction integer_stackdepth})
Best program: (integer_mult float_sub float_dec integer_yank integer_dup float_mod float_shove float_add float_mult float_stackdepth integer_yankdup float_div tagged_146 float_cos float_max float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_tan integer_max float_cos float_rot in1 in2 float_shove integer_dup float_max integer_dup_times float_frominteger tagged_369 float_mult float_swap integer_yank integer_pop integer_stackdepth)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3490.5677154
Median total errors in population: 1227.0
Error averages by case: (150.8849289 12.452 114.38678200000001 4.038 114.35542009999999 3.074 108.68916100000001 3.188 92.49858110000001 1.263 127.8296744 4.147 167.35831910000002 3.185 134.42212429999998 11.395 110.8811612 3.14 182.97924309999996 2.304 134.8816479 3.018 108.85711330000001 3.134 178.1720943 12.391 133.94769989999998 3.172 161.69419760000002 13.414 104.87409139999998 3.216 114.97347119999999 3.136 133.3792029 11.454 129.12241219999999 12.35 180.7843512 3.192 133.15726809999998 2.93 125.42904349999999 13.25 159.020937 3.2 133.14055670000002 2.911 112.79323299999999 3.101)
Error minima by case: (24.1045 10 17.456 2 22.0 2 8.0239 2 0.0 0 30.0189 3 0.1004 2 9.8109 10 17.0 2 25.8495 1 8.5266 1 14.0 2 22.5384 11 10.0505 2 26.7553 11 10.0 1 24.0 2 32.0343 9 5.5371 11 88.1242 2 38.8319 2 7.8561 8 56.8885 2 10.3153 2 11.506 2)
Average genome size in population (length): 51.592
Average program size in population (points): 52.592
Average percent parens in population: 0.020
Minimum age in population: 8.625
Maximum age in population: 14.0390625
Average age in population: 11.878828125
Median age in population: 11.921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.842
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.842
Total error diversity:				 0.034
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 12040151
--- Timings ---
Current time: 1529614808960 milliseconds
Total Time:          31.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.1 seconds, 38.1%
Fitness Testing:     15.7 seconds, 49.5%
Report:               3.8 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction print_float} {:instruction tag_integer_273} {:instruction float_shove} {:instruction integer_max} {:instruction integer_flush} {:instruction print_float} {:instruction integer_sub} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction integer_mod} {:instruction float_min} {:instruction in2} {:instruction float_inc} {:instruction -18} {:instruction integer_shove} {:instruction float_inc} {:instruction float_max} {:instruction float_shove} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_shove} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction integer_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction float_inc})
Best program: (integer_yank print_float tag_integer_273 float_shove integer_max integer_flush print_float integer_sub float_dup_items float_dec float_shove integer_mod float_min in2 float_inc -18 integer_shove float_inc float_max float_shove integer_mult integer_stackdepth integer_swap integer_min integer_shove 58 integer_yank integer_mult tag_float_375 tagged_10 integer_swap float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times float_inc)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3663.2384013
Median total errors in population: 1227.0
Error averages by case: (158.47332139999997 12.597 120.05252130000001 4.151 120.0160198 3.163 114.5763222 3.285 98.30737950000001 1.369 133.59124179999998 4.242 173.66541510000002 3.288 140.30894779999997 11.462 119.20250079999998 3.235 189.00201960000004 2.395 143.6296309 3.097 116.65091039999999 3.241 185.291836 12.509 141.4923732 3.294 167.25177920000002 13.521 112.94909719999998 3.321 121.4853284 3.226 141.4972727 11.566 136.99971530000002 12.482 187.5953873 3.288 138.72252179999998 3.022 133.4259728 13.37 166.07992339999998 3.301 139.5162622 3.001 118.83170119999998 3.197)
Error minima by case: (24.1237 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 13.511 2 7.454 9 13.3483 2 23.461 1 3.2952 1 14.0 2 22.5979 10 7.2144 2 9.4904 10 7.9418 1 5.2863 2 8.9657 8 6.0369 9 88.0406 2 39.4238 2 8.3252 9 69.0 2 15.5724 2 13.0023 2)
Average genome size in population (length): 51.083
Average program size in population (points): 52.083
Average percent parens in population: 0.020
Minimum age in population: 9.625
Maximum age in population: 15.40625
Average age in population: 13.38798828125
Median age in population: 13.46875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.028
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 13321072
--- Timings ---
Current time: 1529614812322 milliseconds
Total Time:          35.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.4 seconds, 38.3%
Fitness Testing:     17.3 seconds, 49.2%
Report:               4.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_dup} {:instruction float_mod} {:instruction float_shove} {:instruction float_add} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_frominteger} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction integer_shove} {:instruction in2} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_frominteger})
Best program: (float_shove float_yankdup integer_dup float_mod float_shove float_add integer_dup float_stackdepth integer_yankdup float_div tagged_146 float_cos float_max float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_stackdepth print_float in1 float_swap float_inc integer_dec print_float float_frominteger 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_tan integer_max integer_shove in2 integer_shove integer_inc float_frominteger)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3506.0546423
Median total errors in population: 1227.0
Error averages by case: (153.8621951 12.451 112.03779829999999 3.953 112.0217312 2.975 108.5289412 3.083 90.12372240000002 1.148 127.6117613 4.056 168.2288263 3.082 132.7673422 11.354 112.2799919 3.102 183.65059960000002 2.197 137.5447434 2.985 111.6195162 3.107 180.8923397 12.379 136.7654569 3.132 160.00706540000002 13.362 107.96378759999999 3.173 115.6637295 3.045 136.7420005 11.452 132.2388659 12.337 181.05800530000002 3.144 131.0287508 2.855 128.6348474 13.246 159.37237829999998 3.149 133.806102 2.843 110.9981439 2.996)
Error minima by case: (24.2996 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 2 15.511 2 10.0667 9 13.3483 2 25.461 1 3.2952 1 13.0 2 22.8781 11 11.4928 2 26.7343 12 9.0 1 7.2863 2 10.9657 11 6.403 8 88.0406 2 37.9189 2 8.7035 9 68.0 2 17.5724 2 10.6379 2)
Average genome size in population (length): 50.825
Average program size in population (points): 51.825
Average percent parens in population: 0.020
Minimum age in population: 12.21875
Maximum age in population: 16.890625
Average age in population: 14.946353515625
Median age in population: 14.9921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.032
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 14595617
--- Timings ---
Current time: 1529614815629 milliseconds
Total Time:          38.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.8 seconds, 38.4%
Fitness Testing:     18.9 seconds, 49.1%
Report:               4.7 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_dup} {:instruction float_mod} {:instruction tag_float_935} {:instruction float_add} {:instruction integer_rot} {:instruction integer_max} {:instruction integer_mult} {:instruction float_dup} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction integer_mod} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction float_tan} {:instruction integer_swap} {:instruction float_frominteger} {:instruction tag_float_867} {:instruction print_integer} {:instruction float_sin} {:instruction float_frominteger} {:instruction 98.94674242556161} {:instruction float_min} {:instruction float_mod})
Best program: (integer_mult float_sub float_dec integer_yank integer_dup float_mod tag_float_935 float_add integer_rot integer_max integer_mult float_dup float_cos float_max float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_inc integer_dec print_float integer_max float_cos float_rot in1 integer_mod integer_max integer_shove integer_inc float_frominteger float_frominteger float_tan integer_swap float_frominteger tag_float_867 print_integer float_sin float_frominteger 98.94674242556161 float_min float_mod)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3570.1289429000003
Median total errors in population: 1227.0
Error averages by case: (153.81816479999998 12.519 117.914227 4.078 117.0044406 3.091 112.66320840000002 3.209 95.39118510000002 1.287 131.7382218 4.165 172.06889569999998 3.215 137.60119799999998 11.431 113.36438559999999 3.147 187.46096230000003 2.315 137.22531320000002 3.021 111.642708 3.159 180.78380669999999 12.449 136.69231170000003 3.194 164.6708586 13.472 107.97275069999999 3.234 119.6611122 3.152 136.794561 11.506 132.1891331 12.414 182.0654459 3.195 135.8382886 2.957 128.59990679999999 13.317 160.4221725 3.203 137.7681519 2.941 115.9885327 3.118)
Error minima by case: (24.1237 10 9.1939 2 1.3535 2 16.0 2 0.0 0 37.0 3 82.0 2 8.9714 10 17.0 2 99.0 1 36.0 2 14.0 2 22.5979 10 9.1153 2 26.3131 10 10.0 2 24.0 2 32.0343 8 6.0369 9 6.0 1 28.4346 2 8.3252 9 30.0 1 44.0 2 11.5147 2)
Average genome size in population (length): 50.394
Average program size in population (points): 51.394
Average percent parens in population: 0.021
Minimum age in population: 13.94140625
Maximum age in population: 18.1982421875
Average age in population: 16.4319931640625
Median age in population: 16.455078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.861
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.861
Total error diversity:				 0.032
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 15859624
--- Timings ---
Current time: 1529614818964 milliseconds
Total Time:          41.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.1 seconds, 38.6%
Fitness Testing:     20.4 seconds, 49.0%
Report:               5.1 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_cos} {:instruction integer_yankdup} {:instruction integer_min} {:instruction in2} {:instruction float_sub} {:instruction float_sub} {:instruction integer_min} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction float_mod} {:instruction tag_float_935} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction float_dup_times} {:instruction tag_float_477})
Best program: (integer_sub float_cos integer_yankdup integer_min in2 float_sub float_sub integer_min float_inc integer_inc float_inc float_dup_times float_stackdepth float_mod tag_float_935 float_mod integer_rot integer_max integer_mult integer_flush float_frominteger float_rot in2 integer_dup_items integer_inc integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max float_dup_times tag_float_477)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3441.7130263
Median total errors in population: 1227.0
Error averages by case: (149.1461965 12.575 111.27072789999997 4.057 111.22079179999999 3.048 107.8204064 3.186 89.51358440000001 1.247 127.05631469999999 4.135 167.4616323 3.187 131.7819681 11.421 107.57287549999998 3.155 182.9555781 2.28 132.3457402 3.024 106.90039370000001 3.162 176.1702036 12.504 131.96614639999999 3.212 158.97713789999997 13.498 103.2689992 3.236 114.83995770000001 3.11 132.09355349999998 11.547 127.45001100000002 12.483 176.9713731 3.19 130.1026706 2.921 123.85525120000001 13.378 155.1146881 3.201 133.00393320000003 2.897 110.10689119999999 3.092)
Error minima by case: (24.0674 9 18.456 2 22.0 2 1.0123 2 0.0 0 37.0 3 18.6118 2 2.979 7 17.0 2 45.5617 1 45.0 1 14.0 2 22.7727 12 8.9641 2 25.3156 11 10.0 1 24.0 2 33.0343 10 6.5371 10 87.1242 2 37.8319 2 8.8561 10 55.8885 2 17.3269 2 12.506 2)
Average genome size in population (length): 49.422
Average program size in population (points): 50.422
Average percent parens in population: 0.021
Minimum age in population: 14.94140625
Maximum age in population: 19.7353515625
Average age in population: 17.92982275390625
Median age in population: 17.977294921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.839
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.839
Total error diversity:				 0.034
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 17098742
--- Timings ---
Current time: 1529614822195 milliseconds
Total Time:          45.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        17.4 seconds, 38.7%
Fitness Testing:     22.0 seconds, 48.8%
Report:               5.5 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_tan} {:instruction 53} {:instruction integer_max} {:instruction float_add} {:instruction integer_dup_times} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_add} {:instruction float_rot} {:instruction float_sin} {:instruction float_shove} {:instruction float_add} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_687} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction integer_max} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction in1} {:instruction integer_mod} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove})
Best program: (float_tan 53 integer_max float_add integer_dup_times float_mod integer_dup_items integer_add float_rot float_sin float_shove float_add integer_min float_stackdepth integer_yankdup float_div tagged_146 float_cos float_max float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_687 float_mult float_yankdup float_div integer_swap in2 integer_dec integer_max in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times in1 integer_mod integer_shove integer_max integer_shove)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3433.8472531
Median total errors in population: 1227.0
Error averages by case: (149.1878955 12.409 110.94246040000002 3.91 110.93461989999999 2.928 107.5259115 3.045 88.4344064 1.106 126.6216304 4.01 167.405511 3.047 131.8497245 11.343 107.3536517 2.991 182.851461 2.149 132.25029519999998 2.869 106.68186809999999 3.0 176.3694616 12.34 132.0089641 3.032 159.1366689 13.364 103.0321203 3.069 114.7332863 2.998 131.9659657 11.391 127.4624629 12.309 176.50904060000002 3.032 129.9938319 2.803 123.8361439 13.224 154.6858049 3.044 132.9035724 2.786 110.011494 2.96)
Error minima by case: (8.8955 11 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 43.7245 11 1.6517 2 99.0 1 16.2952 1 14.0 2 10.4616 11 42.0 2 60.6689 13 10.0 1 24.0 2 0.9657 11 27.4629 11 93.0 2 5.8319 2 25.1439 11 69.0 2 44.0 2 21.0 2)
Average genome size in population (length): 48.832
Average program size in population (points): 49.832
Average percent parens in population: 0.021
Minimum age in population: 16.955078125
Maximum age in population: 21.281982421875
Average age in population: 19.37123852539062
Median age in population: 19.3836669921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.84
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.84
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 18323071
--- Timings ---
Current time: 1529614825527 milliseconds
Total Time:          48.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        18.8 seconds, 38.8%
Fitness Testing:     23.6 seconds, 48.8%
Report:               5.9 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_489} {:instruction float_shove} {:instruction integer_swap} {:instruction float_cos} {:instruction in2} {:instruction integer_inc} {:instruction integer_max} {:instruction float_shove} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction float_pop} {:instruction in2} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction integer_shove} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_yank} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction float_min} {:instruction in1} {:instruction float_div} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1})
Best program: (tag_integer_489 float_shove integer_swap float_cos in2 integer_inc integer_max float_shove integer_dup_items integer_shove float_pop in2 integer_dup float_stackdepth integer_yankdup float_div tagged_146 integer_shove float_max float_add float_sub float_sin integer_yank float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec float_min in1 float_div float_inc integer_dec print_float integer_max float_cos float_rot in1)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3857.6639377
Median total errors in population: 1227.0
Error averages by case: (165.13253029999998 12.639 128.826333 4.199 128.7956395 3.2 123.3525494 3.337 107.43015670000003 1.423 142.1575217 4.288 181.99507250000002 3.336 148.96354929999998 11.491 126.17750939999999 3.381 197.19769280000003 2.447 149.95520019999998 3.237 123.49613310000002 3.381 191.70631079999998 12.566 148.2221648 3.417 175.6376089 13.531 119.90139099999999 3.456 130.0115288 3.266 148.28130099999998 11.641 143.7946269 12.528 194.11622300000002 3.413 147.3235737 3.056 140.25988329999998 13.42 172.72760709999997 3.423 148.18006439999996 3.035 127.67876609999999 3.232)
Error minima by case: (23.4103 9 22.0 2 22.0 2 16.0 2 0.0 0 30.0189 3 1.1004 2 9.0667 10 17.0 2 25.8495 1 45.0 1 14.0 2 21.7444 8 10.0606 2 25.7343 11 10.0 1 24.0 2 32.0343 10 4.5382 9 93.0 2 38.8319 2 6.8562 10 69.0 2 37.0391 2 11.506 2)
Average genome size in population (length): 48.42
Average program size in population (points): 49.42
Average percent parens in population: 0.021
Minimum age in population: 18.4453125
Maximum age in population: 22.69677734375
Average age in population: 20.83253271484375
Median age in population: 20.899658203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.826
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.826
Total error diversity:				 0.04
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 19536999
--- Timings ---
Current time: 1529614828747 milliseconds
Total Time:          51.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.0 seconds, 38.9%
Fitness Testing:     25.1 seconds, 48.7%
Report:               6.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_sub} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction tag_integer_579} {:instruction float_stackdepth} {:instruction float_cos} {:instruction float_yank} {:instruction integer_pop} {:instruction integer_flush} {:instruction tag_integer_132} {:instruction float_inc} {:instruction integer_dec} {:instruction float_flush} {:instruction float_yank} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dec} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction integer_add} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction integer_mod} {:instruction float_pop} {:instruction float_rot} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_shove} {:instruction float_shove} {:instruction integer_dup} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction tagged_369} {:instruction float_mult} {:instruction float_swap} {:instruction integer_yank} {:instruction integer_pop} {:instruction integer_stackdepth})
Best program: (integer_mult float_sub float_dec integer_yank float_stackdepth integer_yankdup float_add float_sub float_max float_add float_sub float_sin integer_min tag_integer_579 float_stackdepth float_cos float_yank integer_pop integer_flush tag_integer_132 float_inc integer_dec float_flush float_yank float_dup_times integer_fromfloat integer_dec float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float integer_add 94.91637758043163 float_dup_times float_yankdup integer_yank float_dup_times integer_yankdup float_tan integer_max float_cos float_rot in1 integer_mod float_pop float_rot float_dup_times tag_float_477 integer_yank float_shove float_shove integer_dup float_max integer_dup_times float_frominteger tagged_369 float_mult float_swap integer_yank integer_pop integer_stackdepth)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 69
Size: 70
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3797.3018491000003
Median total errors in population: 1227.0
Error averages by case: (165.12608559999998 12.65 124.03942840000002 4.187 124.009417 3.202 118.62618400000001 3.333 102.42427649999999 1.408 137.5496828 4.28 177.3691297 3.324 144.2703133 11.486 126.19975 3.357 192.64447879999997 2.436 150.3678258 3.218 123.689913 3.36 191.706126 12.569 148.3340741 3.405 171.06071080000004 13.532 120.0443847 3.441 125.5437493 3.261 148.29309629999997 11.635 143.8625662 12.53 194.00848009999999 3.405 142.6419859 3.057 140.3185355 13.427 172.65342320000002 3.415 143.4446454 3.034 122.8875867 3.234)
Error minima by case: (23.1237 9 18.456 2 22.0 2 16.0 2 0.0 0 30.4803 3 0.639 2 9.7245 9 14.3483 2 24.461 1 4.2952 1 14.0 2 21.5979 11 9.9641 2 26.6689 11 10.0 1 6.2863 2 9.9657 10 5.0369 10 87.1242 2 38.4238 2 7.3252 9 55.8885 2 16.5724 2 12.0023 2)
Average genome size in population (length): 48.15
Average program size in population (points): 49.15
Average percent parens in population: 0.021
Minimum age in population: 19.55419921875
Maximum age in population: 24.2955322265625
Average age in population: 22.34477655029297
Median age in population: 22.40695190429688
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.83
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.83
Total error diversity:				 0.037
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 20744517
--- Timings ---
Current time: 1529614832051 milliseconds
Total Time:          54.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.3 seconds, 39.0%
Fitness Testing:     26.6 seconds, 48.6%
Report:               6.7 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_min} {:instruction float_min} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction float_add} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction tag_float_569} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_tan} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_max} {:instruction float_yank} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction float_inc})
Best program: (float_add integer_shove float_dup float_stackdepth integer_min float_min integer_mult float_inc integer_dup_items float_add float_sub float_sin float_add integer_dup float_stackdepth tag_float_569 float_div tagged_146 float_cos float_max float_tan float_sub float_sin integer_min float_flush 58 integer_max float_yank tag_float_375 tagged_10 tag_integer_505 float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times float_inc)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3313.9191653999997
Median total errors in population: 1227.0
Error averages by case: (145.24582709999996 12.463 106.3842116 3.979 104.5785709 3.003 103.98436230000002 3.111 81.54725239999999 1.184 123.30772360000002 4.086 163.76848899999996 3.114 125.2064693 11.358 100.69163979999999 3.135 179.3304201 2.229 126.0635196 3.026 102.99550000000004 3.132 172.39146599999998 12.413 128.0481512 3.165 152.62189450000002 13.387 99.19906329999999 3.21 110.87623330000001 3.066 128.0756483 11.489 123.47252379999999 12.368 170.397334 3.188 123.53359359999999 2.869 119.85936509999998 13.272 148.48499999999996 3.2 129.17030350000002 2.856 103.35760309999999 3.024)
Error minima by case: (23.1237 10 18.4604 2 10.6199 2 15.0 2 0.0 0 36.0 2 15.511 2 8.7353 10 13.3483 1 25.461 1 3.2952 1 14.0 2 21.5979 10 9.1153 2 25.7343 11 10.0 1 7.2863 2 10.9657 8 5.0369 9 6.0 1 19.1681 2 7.3252 9 30.0 1 17.5724 2 11.6379 1)
Average genome size in population (length): 47.732
Average program size in population (points): 48.732
Average percent parens in population: 0.022
Minimum age in population: 20.73828125
Maximum age in population: 25.63241577148438
Average age in population: 23.83616851806641
Median age in population: 23.86465454101562
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.829
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.829
Total error diversity:				 0.033
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 21941112
--- Timings ---
Current time: 1529614835283 milliseconds
Total Time:          58.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.7 seconds, 39.0%
Fitness Testing:     28.2 seconds, 48.5%
Report:               7.2 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction float_shove} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_inc} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction float_max} {:instruction float_add} {:instruction float_inc} {:instruction float_dup} {:instruction in2} {:instruction float_mod} {:instruction tag_float_935} {:instruction integer_shove} {:instruction integer_rot} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction tag_float_302} {:instruction float_div} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_rot} {:instruction float_flush})
Best program: (integer_mult float_sub float_dec float_shove integer_dup_items float_frominteger in2 integer_inc float_add float_sub float_sin float_max float_add float_inc float_dup in2 float_mod tag_float_935 integer_shove integer_rot integer_max integer_mult integer_flush float_frominteger float_rot in2 integer_dup_items integer_inc integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float tag_float_302 float_div tag_float_477 integer_yank float_dup_times integer_yankdup float_rot float_flush)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3583.8089848
Median total errors in population: 1227.0
Error averages by case: (155.6585083 12.628 115.9704325 4.12 115.94134890000001 3.122 112.661038 3.25 94.1765391 1.324 131.73319769999998 4.212 172.0631324 3.253 136.5411557 11.478 114.2850092 3.262 187.45741290000004 2.351 139.2824928 3.128 113.7047415 3.267 182.5355284 12.557 138.628579 3.317 163.6395158 13.525 110.02031829999999 3.348 119.65867980000002 3.186 138.6515836 11.618 134.118621 12.523 183.0842852 3.299 134.776419 2.988 130.53919249999998 13.418 161.40845659999997 3.312 137.7603397 2.968 114.90145689999999 3.157)
Error minima by case: (23.1237 10 19.4604 2 11.6199 2 16.0 2 0.0 0 37.0 3 82.0 2 9.7245 9 17.0 2 99.0 1 7.7048 1 14.0 2 21.5979 10 9.9641 2 26.6689 12 10.0 1 24.0 2 24.9657 11 5.0369 9 93.0 2 18.1681 2 7.3252 9 69.0 2 44.0 2 11.4546 2)
Average genome size in population (length): 47.836
Average program size in population (points): 48.836
Average percent parens in population: 0.021
Minimum age in population: 22.1865234375
Maximum age in population: 27.45590209960938
Average age in population: 25.31560585021973
Median age in population: 25.37523651123047
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.842
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.842
Total error diversity:				 0.034
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 23140332
--- Timings ---
Current time: 1529614838553 milliseconds
Total Time:          61.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.0 seconds, 39.1%
Fitness Testing:     29.7 seconds, 48.4%
Report:               7.5 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mod} {:instruction float_shove} {:instruction float_add} {:instruction tag_integer_124} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_flush} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_inc} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction integer_add} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction float_add} {:instruction float_cos} {:instruction float_rot})
Best program: (integer_mult float_sub float_dec float_sub integer_dup float_mod float_shove float_add tag_integer_124 float_stackdepth integer_yankdup float_div integer_flush float_cos float_max float_add float_sub float_inc integer_min float_flush 58 integer_yank integer_mult in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float integer_add 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_tan float_add float_cos float_rot)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 4083.8922106
Median total errors in population: 1227.0
Error averages by case: (174.460913 12.583 137.49178700000002 4.244 137.46792460000003 3.256 135.13067489999997 3.404 113.38707710000001 1.49 153.67396509999998 4.353 193.00272489999998 3.407 157.53257719999996 11.488 132.92327659999998 3.327 207.97412430000003 2.525 154.7609845 3.173 133.32917010000003 3.338 200.8001217 12.506 157.79039470000004 3.382 183.97964710000002 13.516 129.7403234 3.422 141.9992273 3.331 157.7822431 11.573 153.3707844 12.461 200.17664270000003 3.381 155.87821699999998 3.101 149.8606937 13.348 178.98783339999997 3.395 159.60766460000002 3.072 136.4152182 3.292)
Error minima by case: (22.7179 10 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 14.511 2 9.235 9 14.3483 1 24.461 1 4.2952 1 13.0 2 21.782 10 11.4928 2 26.5817 11 9.0 1 6.2863 2 9.9657 11 3.9185 8 89.0406 2 37.9189 2 5.8463 9 68.0 2 16.5724 2 10.6379 1)
Average genome size in population (length): 47.681
Average program size in population (points): 48.681
Average percent parens in population: 0.022
Minimum age in population: 24.43460083007812
Maximum age in population: 28.77396392822266
Average age in population: 26.79736813354492
Median age in population: 26.84243011474609
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.855
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.855
Total error diversity:				 0.034
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 24336177
--- Timings ---
Current time: 1529614841770 milliseconds
Total Time:          64.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.3 seconds, 39.2%
Fitness Testing:     31.2 seconds, 48.4%
Report:               7.9 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction float_mod} {:instruction float_shove} {:instruction float_add} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction float_sub} {:instruction float_div} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction integer_max} {:instruction float_mod} {:instruction float_mult} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction tag_float_731} {:instruction integer_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.2611022058374} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction in1} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction float_cos} {:instruction integer_shove} {:instruction in1} {:instruction integer_mod} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_shove})
Best program: (float_cos float_mod float_shove float_add integer_dup integer_max integer_yankdup integer_yankdup float_div tagged_146 float_cos float_max float_add float_sub float_div integer_stackdepth float_dup_items integer_max float_mod float_mult integer_flush integer_dup_times tag_float_731 integer_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.2611022058374 float_dup_times tag_float_477 in1 float_inc integer_yankdup float_tan integer_max float_cos integer_shove in1 integer_mod integer_stackdepth float_rot float_shove)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3401.2323644000003
Median total errors in population: 1227.0
Error averages by case: (148.14664270000003 12.412 109.189661 3.975 109.15590440000001 2.999 105.72176089999999 3.105 88.32979620000002 1.19 124.9439326 4.07 165.590183 3.105 129.80980069999998 11.372 106.4343192 3.042 181.0994656 2.212 131.29859029999997 2.926 105.7682113 3.047 175.26052889999997 12.356 130.9172154 3.075 157.1193247 13.39 102.0511085 3.121 112.7754564 3.06 131.03564899999998 11.421 126.3779094 12.321 175.89407470000003 3.08 128.10307799999998 2.877 122.7710575 13.228 154.0264082 3.095 131.0215432 2.869 108.02174260000001 3.021)
Error minima by case: (23.1302 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 10.598 10 17.0 2 99.0 1 45.0 1 14.0 2 21.5526 10 9.3413 2 27.6689 11 10.0 1 24.0 2 31.1179 10 4.567 10 93.0 2 37.5945 2 6.8929 10 69.0 2 44.0 2 10.4753 2)
Average genome size in population (length): 47.875
Average program size in population (points): 48.875
Average percent parens in population: 0.022
Minimum age in population: 25.80517578125
Maximum age in population: 30.3044548034668
Average age in population: 28.20736336517334
Median age in population: 28.24934577941895
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.032
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 25536674
--- Timings ---
Current time: 1529614845076 milliseconds
Total Time:          67.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.7 seconds, 39.3%
Fitness Testing:     32.8 seconds, 48.3%
Report:               8.3 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -93.261470783979} {:instruction 53} {:instruction integer_max} {:instruction float_add} {:instruction integer_dup_times} {:instruction in1} {:instruction float_max} {:instruction integer_flush} {:instruction float_dup} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction float_mod} {:instruction tag_float_935} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_mod})
Best program: (-93.261470783979 53 integer_max float_add integer_dup_times in1 float_max integer_flush float_dup float_inc float_dup_times float_stackdepth float_mod tag_float_935 float_mod integer_rot integer_max integer_mult integer_flush float_frominteger float_rot in2 integer_dup_items integer_inc integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_mod)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3793.3962810000003
Median total errors in population: 1227.0
Error averages by case: (162.277826 12.558 126.56732090000001 4.142 126.5594805 3.163 121.296051 3.301 103.2232669 1.361 140.0977698 4.255 180.25165049999998 3.3 147.122864 11.454 123.1014877 3.235 195.4596004 2.414 146.90374609999998 3.102 120.5817437 3.244 189.0425242 12.479 145.4350317 3.286 173.9298084 13.495 116.93650039999999 3.324 128.3914257 3.236 145.3521738 11.546 140.92552799999999 12.448 191.1739823 3.285 145.2873076 3.006 137.3505711 13.34 169.7202751 3.298 146.28171179999998 2.99 125.6686334 3.196)
Error minima by case: (11.791 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 45.0 11 9.7912 2 99.0 1 8.1557 1 14.0 2 18.601 10 42.0 2 68.8084 12 10.0 1 24.0 2 9.1051 10 24.9257 11 93.0 2 2.3076 2 16.2878 11 69.0 2 44.0 2 21.0 2)
Average genome size in population (length): 47.697
Average program size in population (points): 48.697
Average percent parens in population: 0.022
Minimum age in population: 26.82821655273438
Maximum age in population: 31.65094375610352
Average age in population: 29.6597673740387
Median age in population: 29.68001747131348
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.836
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.836
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 26733158
--- Timings ---
Current time: 1529614848275 milliseconds
Total Time:          71.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.0 seconds, 39.3%
Fitness Testing:     34.3 seconds, 48.2%
Report:               8.7 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction integer_mult} {:instruction tag_float_375} {:instruction float_frominteger} {:instruction tag_float_375} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_mod} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_dec} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction tagged_205} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction integer_mod} {:instruction float_shove} {:instruction float_rot} {:instruction float_flush})
Best program: (integer_mult float_sub float_dec integer_mult tag_float_375 float_frominteger tag_float_375 float_flush 58 integer_yank integer_yank float_mod tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec integer_dup_times in1 float_swap float_inc integer_dec integer_dec print_float float_max integer_dec float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_tan tagged_205 float_cos float_rot in1 integer_mod float_shove float_rot float_flush)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3261.8825921999996
Median total errors in population: 1227.0
Error averages by case: (142.490553 12.386 104.49652440000001 3.896 104.44948149999999 2.915 99.88870700000001 3.017 80.6352004 1.075 119.20702029999998 3.977 159.790304 3.015 125.073789 11.335 101.47685179999999 2.958 175.35400389999998 2.103 124.84053319999998 2.84 99.9984465 2.959 169.85368530000002 12.318 125.28902249999999 2.986 152.48990019999997 13.357 96.19595980000001 3.02 106.84495580000001 2.968 125.14669350000001 11.375 120.6410895 12.286 171.16100559999998 2.986 123.48575340000004 2.801 116.9870498 13.203 149.2535914 2.993 125.14667230000002 2.788 103.1917981 2.937)
Error minima by case: (17.8665 11 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 10.7245 9 13.3483 2 24.461 1 3.2952 1 14.0 2 16.3005 11 10.9641 2 27.6689 12 10.0 1 6.2863 2 9.9657 11 0.7008 9 88.0406 2 32.5939 2 1.6181 10 69.0 2 16.5724 2 5.2681 2)
Average genome size in population (length): 47.233
Average program size in population (points): 48.233
Average percent parens in population: 0.022
Minimum age in population: 28.70900726318359
Maximum age in population: 33.1464204788208
Average age in population: 31.12384687137604
Median age in population: 31.20136976242065
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.831
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.831
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 27918666
--- Timings ---
Current time: 1529614851586 milliseconds
Total Time:          74.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        29.3 seconds, 39.4%
Fitness Testing:     35.9 seconds, 48.2%
Report:               9.1 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_489} {:instruction float_shove} {:instruction integer_swap} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_add} {:instruction float_mod} {:instruction tag_integer_875} {:instruction float_add} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_add} {:instruction float_rot} {:instruction float_sin} {:instruction float_shove} {:instruction float_add} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction integer_min} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_687} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction in2} {:instruction integer_max} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank})
Best program: (tag_integer_489 float_shove integer_swap float_cos integer_dup_times float_mod float_add float_mod tag_integer_875 float_add float_mod integer_dup_items integer_add float_rot float_sin float_shove float_add integer_min float_stackdepth integer_yankdup float_div tagged_146 float_cos integer_min float_add float_sub float_sin integer_min float_flush 58 integer_yank integer_stackdepth tag_float_375 tagged_10 tag_integer_687 float_mult float_yankdup float_div integer_swap in2 in2 integer_max in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 integer_yank)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 4038.0039635999997
Median total errors in population: 1227.0
Error averages by case: (175.2501874 12.558 133.8964893 4.279 132.96557020000003 3.305 128.6887575 3.433 110.80020750000003 1.556 147.50227239999998 4.387 186.59638679999998 3.428 152.7927268 11.462 136.0108923 3.47 201.7157373 2.574 159.21707619999995 3.304 134.65493130000002 3.447 201.43880620000002 12.489 158.73032100000003 3.487 179.30368070000003 13.459 130.932431 3.543 135.2512355 3.37 158.67093319999998 11.564 154.28077130000003 12.422 203.05632820000002 3.528 151.2763708 3.142 150.7910412 13.302 181.99240849999998 3.536 153.0253623 3.094 131.68203869999996 3.342)
Error minima by case: (24.1045 9 18.456 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 8.7245 9 13.3483 2 24.461 1 3.2952 1 14.0 2 22.5384 10 8.9641 2 25.6689 11 10.0 1 6.2863 2 9.9657 8 5.5371 8 6.0 1 37.9189 2 7.8561 9 30.0 1 16.5724 2 10.6379 2)
Average genome size in population (length): 46.752
Average program size in population (points): 47.752
Average percent parens in population: 0.022
Minimum age in population: 29.70900726318359
Maximum age in population: 34.40141248703003
Average age in population: 32.60473629426956
Median age in population: 32.60793280601501
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.829
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.829
Total error diversity:				 0.039
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 29092461
--- Timings ---
Current time: 1529614854782 milliseconds
Total Time:          77.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        30.6 seconds, 39.5%
Fitness Testing:     37.3 seconds, 48.1%
Report:               9.5 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_inc} {:instruction tagged_10} {:instruction tag_integer_531} {:instruction integer_mult} {:instruction tag_float_563} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction float_stackdepth} {:instruction in2} {:instruction integer_dec} {:instruction float_tan} {:instruction in1} {:instruction 35} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction tagged_717})
Best program: (float_shove float_yankdup integer_swap integer_fromfloat print_float integer_inc tagged_10 tag_integer_531 integer_mult tag_float_563 tagged_10 tag_integer_505 float_mult float_yankdup float_div float_stackdepth in2 integer_dec float_tan in1 35 float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 tagged_717)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 3746.1876260000004
Median total errors in population: 1227.0
Error averages by case: (159.3798962 12.449 125.81842429999999 4.091 125.7870623 3.118 121.4969748 3.252 102.43220830000001 1.317 140.38856929999997 4.209 180.1929723 3.253 146.0508663 11.391 119.1839759 3.164 195.42372230000004 2.378 142.1677635 3.035 117.63975780000001 3.178 186.13519789999998 12.384 142.4112378 3.216 172.8447551 13.423 113.94301879999999 3.258 128.3578488 3.193 142.4556856 11.443 137.91619400000002 12.337 187.57874510000002 3.22 144.3999103 2.973 134.355151 13.233 166.04580230000002 3.232 146.2692793 2.956 124.66660669999999 3.143)
Error minima by case: (23.6872 11 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 10.7245 9 13.3483 2 25.461 1 3.2952 1 14.0 2 22.1211 11 8.9641 2 27.6689 12 10.0 1 7.2863 2 10.9657 11 5.1198 10 88.0406 2 38.4146 2 7.4388 10 69.0 2 17.5724 2 11.0887 2)
Average genome size in population (length): 45.717
Average program size in population (points): 46.717
Average percent parens in population: 0.023
Minimum age in population: 31.38992691040039
Maximum age in population: 35.83705973625183
Average age in population: 34.14042004799843
Median age in population: 34.1834671497345
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.032
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 30240544
--- Timings ---
Current time: 1529614857918 milliseconds
Total Time:          80.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.0 seconds, 39.6%
Fitness Testing:     38.8 seconds, 48.0%
Report:               9.9 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_add} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction print_float} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction float_mod} {:instruction tag_float_935} {:instruction integer_max} {:instruction float_yank} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_529} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_dec} {:instruction float_dup_times})
Best program: (integer_mult float_sub float_dec integer_yank integer_dup integer_dup integer_dup float_add integer_dup integer_dup integer_yankdup float_div float_add integer_yankdup integer_rot print_float float_dup_times float_stackdepth float_mod tag_float_935 integer_max float_yank tag_float_375 tagged_10 tag_integer_529 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max integer_dec float_dup_times)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3600.8064673999997
Median total errors in population: 1227.0
Error averages by case: (155.7692996 12.49 116.8383379 4.039 116.8301113 3.046 116.3390297 3.169 95.268316 1.245 135.2471309 4.13 175.6253153 3.17 137.54006669999998 11.418 112.29264359999999 3.089 190.9181386 2.274 136.44344819999998 2.957 113.54464809999999 3.093 182.7378781 12.414 138.6754928 3.134 164.64673430000002 13.452 109.9226673 3.165 123.47444320000001 3.114 138.6950348 11.474 134.175403 12.385 181.07196470000002 3.12 135.76191889999998 2.922 130.5817035 13.288 159.3695734 3.126 141.4665296 2.907 115.8686379 3.081)
Error minima by case: (24.2996 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 10.0667 11 17.0 2 99.0 1 45.0 1 14.0 2 22.8781 12 11.4928 2 26.7343 12 10.0 1 24.0 2 31.0348 11 6.403 8 93.0 2 37.9189 2 8.7035 9 69.0 2 44.0 2 10.6379 2)
Average genome size in population (length): 45.426
Average program size in population (points): 46.426
Average percent parens in population: 0.023
Minimum age in population: 33.54625225067139
Maximum age in population: 37.49808943271637
Average age in population: 35.61318312859535
Median age in population: 35.66639775037766
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.03
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 31380841
--- Timings ---
Current time: 1529614861109 milliseconds
Total Time:          83.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.3 seconds, 39.7%
Fitness Testing:     40.3 seconds, 48.0%
Report:              10.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction float_rot} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction print_float} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction float_sub} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction float_inc})
Best program: (float_add integer_shove float_rot float_stackdepth integer_yank print_float integer_mult float_inc integer_dup_items float_add float_sub float_sin float_sub float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times float_inc)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3602.3440513000005
Median total errors in population: 1227.0
Error averages by case: (154.55754650000003 12.456 119.29524090000001 4.12 119.2072702 3.15 114.10980490000001 3.271 94.82204600000003 1.359 133.3365008 4.232 173.0447927 3.277 139.22241599999998 11.418 115.31478639999999 3.204 188.4717237 2.4 137.5744125 3.062 113.07362120000002 3.212 181.34305499999996 12.407 137.6281405 3.249 166.1368408 13.42 109.2210489 3.292 120.69527110000001 3.222 137.6479219 11.475 133.07174239999998 12.351 184.47628650000001 3.253 137.6773513 3.006 129.50654509999998 13.253 162.7982981 3.254 138.833445 2.981 117.7869429 3.167)
Error minima by case: (23.4103 9 22.0 2 16.6199 2 16.0 2 0.0 0 37.0 3 14.511 2 8.7245 10 9.8365 2 24.461 1 1.9427 1 14.0 2 21.7444 8 8.9641 2 25.6689 12 10.0 1 6.2863 2 9.9657 11 4.5382 8 89.0406 2 13.1681 2 6.8562 9 69.0 2 16.5724 2 9.521 2)
Average genome size in population (length): 45.482
Average program size in population (points): 46.482
Average percent parens in population: 0.023
Minimum age in population: 34.762934923172
Maximum age in population: 38.93461185693741
Average age in population: 37.07872178125381
Median age in population: 37.09583330154419
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.815
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.815
Total error diversity:				 0.037
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 32523014
--- Timings ---
Current time: 1529614864275 milliseconds
Total Time:          87.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.6 seconds, 39.7%
Fitness Testing:     41.8 seconds, 48.0%
Report:              10.6 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_dup} {:instruction float_yankdup} {:instruction float_div} {:instruction float_tan} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction 35} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank})
Best program: (float_dup float_sub float_dec float_rot float_dup float_stackdepth integer_fromfloat print_float integer_dup float_yankdup float_div float_tan in2 integer_dec print_float in1 35 float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 integer_yank)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 3832.2362038
Median total errors in population: 1227.0
Error averages by case: (164.13220809999999 12.44 128.61781539999998 4.124 127.68737420000001 3.159 124.3348399 3.292 105.22852020000002 1.369 143.12899649999997 4.255 182.9956384 3.289 147.93110540000004 11.413 123.0142877 3.213 198.17248830000003 2.426 146.04807539999996 3.079 122.4797097 3.221 190.76750989999996 12.376 147.2209977 3.252 174.69110529999998 13.401 118.8504663 3.31 131.2929643 3.248 147.2839976 11.459 142.76450599999998 12.321 191.105057 3.264 146.30022219999998 3.011 139.21946290000002 13.217 169.66811409999997 3.269 149.1438225 3.001 126.5669188 3.181)
Error minima by case: (22.9991 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 10.7245 10 17.0 2 99.0 1 34.0 1 14.0 2 21.4331 11 9.9641 2 27.6689 12 10.0 1 24.0 2 30.929 11 4.4318 10 93.0 2 37.7265 2 6.7507 10 69.0 2 44.0 2 10.4007 2)
Average genome size in population (length): 45.549
Average program size in population (points): 46.549
Average percent parens in population: 0.023
Minimum age in population: 36.22823452949524
Maximum age in population: 40.63029187917709
Average age in population: 38.5424591858685
Median age in population: 38.57193244993687
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.814
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.814
Total error diversity:				 0.036
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 33666999
--- Timings ---
Current time: 1529614867464 milliseconds
Total Time:          90.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.9 seconds, 39.8%
Fitness Testing:     43.3 seconds, 47.9%
Report:              11.0 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_tan} {:instruction 53} {:instruction integer_max} {:instruction float_add} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction float_inc})
Best program: (float_tan 53 integer_max float_add integer_mult float_inc integer_dup_items float_add float_sub float_sin integer_min float_flush 58 integer_yank 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times float_inc)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 3920.3790414
Median total errors in population: 1227.0
Error averages by case: (168.86270990000003 12.46 130.6232612 4.128 129.862648 3.145 128.199938 3.283 107.5879517 1.368 146.8818724 4.241 186.6444611 3.28 149.9532134 11.41 126.19524620000001 3.188 201.74438229999998 2.404 149.3580342 3.035 127.3685217 3.19 195.3796225 12.38 152.0385534 3.227 176.6103285 13.424 123.78177960000001 3.273 135.18272950000002 3.225 152.0829264 11.452 147.6099412 12.341 194.20865220000002 3.233 148.36079420000002 3.003 144.07855969999997 13.229 172.81280049999998 3.244 152.9434529 2.974 128.68866069999999 3.181)
Error minima by case: (24.2996 9 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 9.8712 10 17.0 2 99.0 1 45.0 1 14.0 2 22.7444 8 9.0606 2 26.7343 12 10.0 1 24.0 2 31.0348 11 5.5382 8 93.0 2 37.8319 2 7.8562 9 69.0 2 44.0 2 10.506 2)
Average genome size in population (length): 45.142
Average program size in population (points): 46.142
Average percent parens in population: 0.023
Minimum age in population: 37.22823452949524
Maximum age in population: 41.97441093623638
Average age in population: 40.00590078164637
Median age in population: 40.08234056085348
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.03
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 34799809
--- Timings ---
Current time: 1529614870633 milliseconds
Total Time:          93.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.3 seconds, 39.9%
Fitness Testing:     44.8 seconds, 47.9%
Report:              11.4 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction tag_float_935} {:instruction float_sin} {:instruction integer_flush} {:instruction float_yank} {:instruction float_tan} {:instruction print_integer} {:instruction in2} {:instruction float_min} {:instruction float_flush} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_sin} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_9895} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction print_float} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup})
Best program: (integer_mult float_sub float_dec integer_yank integer_dup integer_fromfloat tag_float_935 float_sin integer_flush float_yank float_tan print_integer in2 float_min float_flush float_yankdup float_swap float_sin float_flush 58 integer_yank integer_mult tag_float_375 tagged_9895 tag_integer_505 float_mult float_tan integer_swap in2 integer_dec print_float in1 float_swap float_inc integer_dec print_float print_float 94.91637758043163 float_dup_times 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3875.0627529
Median total errors in population: 1227.0
Error averages by case: (166.08396409999997 12.573 129.0157901 4.258 128.9530662 3.294 125.6511851 3.423 107.5235453 1.511 144.5419361 4.379 183.93798109999997 3.422 148.9242089 11.501 125.15319649999999 3.345 199.1305809 2.551 147.75346850000003 3.2 124.74783780000001 3.354 192.6670962 12.51 149.3420294 3.393 175.52643129999998 13.526 121.05065429999999 3.439 132.3424259 3.363 149.2341043 11.578 144.85709880000002 12.452 193.3374317 3.4 147.42209830000002 3.12 141.3084609 13.345 171.919546 3.413 150.17247210000002 3.101 127.7001431 3.315)
Error minima by case: (24.1045 10 18.4604 2 10.6199 2 15.0 2 0.0 0 36.0 2 17.511 2 6.2934 8 4.5117 1 27.461 1 1.2952 1 3.4606 2 22.5384 10 10.9641 2 2.5636 10 4.1122 1 2.0538 2 12.9657 10 5.5371 10 86.0406 2 19.1681 2 7.8561 10 69.0 2 14.1649 2 11.506 1)
Average genome size in population (length): 44.662
Average program size in population (points): 45.662
Average percent parens in population: 0.023
Minimum age in population: 38.22823452949524
Maximum age in population: 43.61328259110451
Average age in population: 41.46981316241622
Median age in population: 41.54501331597567
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.816
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.816
Total error diversity:				 0.034
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 35920121
--- Timings ---
Current time: 1529614873817 milliseconds
Total Time:          96.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.6 seconds, 39.9%
Fitness Testing:     46.3 seconds, 47.9%
Report:              11.7 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction float_mod} {:instruction tag_float_935} {:instruction integer_max} {:instruction float_yank} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction integer_rot} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction integer_mod} {:instruction float_pop} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477})
Best program: (integer_mult float_add integer_shove float_dup float_stackdepth integer_fromfloat float_dup_times float_stackdepth float_mod tag_float_935 integer_max float_yank integer_flush float_frominteger float_rot in2 integer_dup_items integer_inc integer_stackdepth float_tan integer_dec print_float in1 float_swap float_inc integer_dec print_float integer_rot float_cos float_rot in1 integer_mod float_pop float_max 94.91637758043163 float_dup_times tag_float_477)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3176.8094493000003
Median total errors in population: 1227.0
Error averages by case: (139.7091686 12.439 100.26198129999999 3.893 99.3466739 2.917 97.1053286 2.988 78.2416857 1.082 116.5407562 3.957 157.5155636 2.99 120.49635649999998 11.388 96.6940723 2.987 173.1894114 2.083 121.24026799999999 2.872 97.1243407 2.961 167.0710688 12.376 122.45581569999999 2.995 148.09147049999999 13.4 93.349336 3.025 104.17358060000002 2.945 122.37472 11.428 117.83986379999999 12.349 166.67090590000004 3.012 118.57374669999999 2.819 114.1898629 13.267 144.6029742 3.026 122.60364800000002 2.776 98.4278494 2.944)
Error minima by case: (24.4103 9 9.5976 2 1.7571 2 16.0 2 0.0 0 37.0 3 82.0 2 9.7245 10 18.0 2 99.0 1 2.7048 2 14.1319 2 22.7444 8 9.0606 2 26.6689 12 10.8797 2 24.0 2 19.9657 11 5.5382 9 6.0 1 13.1681 2 7.8562 10 30.0 1 44.0 2 12.506 2)
Average genome size in population (length): 43.919
Average program size in population (points): 44.919
Average percent parens in population: 0.023
Minimum age in population: 40.26147255301476
Maximum age in population: 45.02011092752218
Average age in population: 42.94739743935317
Median age in population: 42.9747081939131
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.037
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 37021708
--- Timings ---
Current time: 1529614877007 milliseconds
Total Time:          99.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.8 seconds, 39.9%
Fitness Testing:     47.8 seconds, 47.9%
Report:              12.1 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction integer_div} {:instruction float_add} {:instruction integer_dup} {:instruction integer_dup_times} {:instruction float_shove} {:instruction float_add} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction -61} {:instruction in1} {:instruction float_inc} {:instruction print_float} {:instruction float_tan} {:instruction integer_add} {:instruction integer_swap} {:instruction 93.88889286735335} {:instruction tag_integer_595} {:instruction float_cos} {:instruction float_dup} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_flush} {:instruction float_inc} {:instruction float_yank} {:instruction float_max} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_add} {:instruction integer_min} {:instruction integer_mult})
Best program: (float_min float_yankdup integer_swap integer_fromfloat print_float integer_mult integer_div float_add integer_dup integer_dup_times float_shove float_add integer_dup float_stackdepth integer_yankdup float_div tagged_146 -61 in1 float_inc print_float float_tan integer_add integer_swap 93.88889286735335 tag_integer_595 float_cos float_dup float_dup_items print_integer float_flush float_inc float_yank float_max float_stackdepth float_stackdepth float_add integer_min integer_mult)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3755.6924032
Median total errors in population: 1227.0
Error averages by case: (163.04594679999997 12.416 122.1588555 4.16 122.10490000000003 3.205 120.84656170000002 3.33 100.78654890000003 1.435 139.8276531 4.301 179.28210579999998 3.331 142.216622 11.374 120.22102249999999 3.29 194.53720890000002 2.484 145.0045429 3.144 121.87014550000005 3.284 189.6244929 12.368 146.309686 3.32 169.0576403 13.367 118.09552039999997 3.381 127.47301130000004 3.287 146.22008179999997 11.453 141.7722647 12.301 188.62604750000003 3.348 140.64754890000003 3.036 138.22590979999995 13.184 167.12968310000002 3.355 145.40634990000004 3.02 120.81105299999999 3.217)
Error minima by case: (14.5082 9 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 9.7353 9 13.3483 2 25.461 1 3.2952 1 14.0 2 12.9422 9 10.5355 2 26.8647 11 10.0 1 7.2863 2 10.9657 11 4.0591 9 83.0406 2 29.2357 2 1.7401 10 51.8049 2 17.5724 2 1.9098 2)
Average genome size in population (length): 43.267
Average program size in population (points): 44.267
Average percent parens in population: 0.024
Minimum age in population: 41.37011739611626
Maximum age in population: 46.1518405713141
Average age in population: 44.43314469701797
Median age in population: 44.48636020254344
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.817
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.817
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 38107383
--- Timings ---
Current time: 1529614880124 milliseconds
Total Time:         103.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.2 seconds, 40.0%
Fitness Testing:     49.2 seconds, 47.8%
Report:              12.5 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction float_rot} {:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction float_mod} {:instruction tag_float_935} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_178} {:instruction tag_integer_505} {:instruction float_mult} {:instruction in1} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_rot} {:instruction integer_dec} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction float_frominteger})
Best program: (float_add integer_shove float_rot float_shove float_yankdup integer_swap integer_fromfloat print_float integer_mult float_inc integer_dup_items float_add float_sub float_sin integer_min integer_rot float_inc float_dup_times float_stackdepth float_mod tag_float_935 float_mod integer_rot integer_min integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_flush 58 integer_yank integer_mult tag_float_375 tagged_178 tag_integer_505 float_mult in1 integer_yankdup float_div tagged_146 float_cos integer_stackdepth float_add float_sub float_sin integer_min float_flush in1 float_swap float_inc integer_dec print_float float_rot integer_dec float_dup_times tag_float_477 integer_yank float_dup_times integer_yankdup float_tan integer_max float_cos float_rot in1 float_frominteger)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3895.8477708
Median total errors in population: 1227.0
Error averages by case: (165.08230350000002 12.393 132.49946039999998 4.206 131.61461989999998 3.258 126.987 3.384 110.21581280000001 1.48 145.7946304 4.358 185.633511 3.378 151.9822755 11.403 125.1270519 3.266 200.722461 2.54 149.9437308 3.13 123.47435790000002 3.266 191.72089949999997 12.352 148.21626949999998 3.302 178.6353311 13.389 119.84701439999999 3.369 134.1792863 3.341 148.2514625 11.421 143.75326819999998 12.281 192.84004560000002 3.339 150.2538319 3.07 140.2034524 13.164 171.50761589999996 3.344 151.9295724 3.053 130.668506 3.277)
Error minima by case: (24.1045 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 36.2755 10 14.3483 2 24.461 1 4.2952 1 14.0 2 22.5384 11 9.3413 2 49.3311 12 10.0 1 6.2863 2 9.9657 10 5.5371 10 6.0 1 43.0 2 7.8561 10 30.0 1 16.5724 2 21.0 2)
Average genome size in population (length): 42.833
Average program size in population (points): 43.833
Average percent parens in population: 0.024
Minimum age in population: 42.84291215240955
Maximum age in population: 47.98723038099706
Average age in population: 45.92782424115296
Median age in population: 45.97974652564153
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.816
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.816
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 39182183
--- Timings ---
Current time: 1529614883369 milliseconds
Total Time:         106.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.5 seconds, 40.0%
Fitness Testing:     50.7 seconds, 47.8%
Report:              12.8 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction float_rot} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction print_float} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_div} {:instruction tagged_146} {:instruction float_cos} {:instruction float_max} {:instruction float_add} {:instruction integer_max} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_max} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_add} {:instruction float_sub} {:instruction float_flush} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction integer_swap} {:instruction in2} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction float_yank} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction float_inc})
Best program: (float_add integer_shove float_rot float_stackdepth integer_yank print_float integer_dup float_stackdepth integer_yankdup float_div tagged_146 float_cos float_max float_add integer_max float_swap integer_flush integer_dup_items integer_max in2 integer_dup_items integer_inc float_add float_sub float_flush integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 integer_swap in2 tag_integer_505 float_mult float_yankdup float_div float_mod float_yank integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times float_inc)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3650.4289387
Median total errors in population: 1227.0
Error averages by case: (157.51427600000002 12.465 119.975608 4.084 119.9364055 3.122 115.65616300000002 3.269 97.59774440000001 1.351 134.63847629999998 4.221 174.57931509999997 3.267 140.373245 11.394 117.19943539999998 3.172 189.86984280000001 2.396 140.53471219999997 3.032 115.7450345 3.181 184.4005403 12.402 140.6005145 3.23 167.30935619999997 13.406 112.0362955 3.267 122.5062707 3.21 140.480488 11.468 136.08454550000002 12.362 185.7055902 3.233 138.6671897 2.96 132.4912696 13.258 164.0941354 3.247 140.501273 2.963 118.82921189999999 3.142)
Error minima by case: (23.1045 9 0.0 0 0.0 0 16.0 2 0.0 0 37.0 3 15.511 2 11.7245 10 13.3483 2 25.461 1 0.3988 1 0.0 0 21.5384 11 0.0 0 28.6689 10 0.0 0 7.2863 2 10.9657 10 4.5371 10 88.0406 2 0.0 0 6.8561 10 69.0 2 17.5724 2 0.0 0)
Average genome size in population (length): 43.009
Average program size in population (points): 44.009
Average percent parens in population: 0.024
Minimum age in population: 45.10348641872406
Maximum age in population: 49.27768906159326
Average age in population: 47.44479662787588
Median age in population: 47.47816318692639
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.032
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 40261283
--- Timings ---
Current time: 1529614886514 milliseconds
Total Time:         109.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.8 seconds, 40.0%
Fitness Testing:     52.1 seconds, 47.7%
Report:              13.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 59} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_388} {:instruction 58} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_div})
Best program: (float_add integer_shove float_dup float_stackdepth integer_fromfloat print_float integer_mult integer_add integer_mult float_inc integer_dup_items integer_inc float_sub float_sin integer_min float_flush 59 integer_yank integer_mult tag_float_388 58 integer_yank float_dec integer_dec print_float in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163 float_dup_times tag_float_477 integer_yank float_dup_times float_tan float_dup_times integer_div)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3233.464463
Median total errors in population: 1227.0
Error averages by case: (140.64905670000002 12.403 103.41686179999998 3.952 103.38549900000001 2.976 100.00825590000001 3.077 80.74345060000002 1.166 119.36857379999998 4.051 160.041804 3.08 124.1502799 11.379 98.60834849999998 3.005 175.639529 2.191 122.9779076 2.887 98.09199610000002 3.008 168.0090447 12.363 123.38256859999998 3.038 151.60416099999998 13.379 94.28949739999997 3.069 106.98038310000003 3.04 123.32112149999999 11.415 118.7610611 12.321 168.5454297 3.04 122.46034580000001 2.86 115.1130685 13.237 146.5180145 3.049 125.3221797 2.844 102.24302449999999 3.003)
Error minima by case: (24.1309 9 18.456 2 21.0 2 15.0 2 0.0 0 36.0 2 15.511 2 9.6106 9 12.3483 1 25.461 1 2.2952 1 14.0 2 22.5528 10 9.8502 2 26.555 9 10.0 1 7.2863 2 10.9657 10 5.5679 9 87.0406 2 38.8198 2 7.8943 9 55.8885 2 17.5724 2 11.4762 1)
Average genome size in population (length): 42.403
Average program size in population (points): 43.403
Average percent parens in population: 0.024
Minimum age in population: 46.28730185097083
Maximum age in population: 51.19025891134515
Average age in population: 48.89909845948126
Median age in population: 48.94407094526105
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.029
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 41325232
--- Timings ---
Current time: 1529614889662 milliseconds
Total Time:         112.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.1 seconds, 40.1%
Fitness Testing:     53.6 seconds, 47.6%
Report:              13.7 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_pop} {:instruction float_add} {:instruction float_sub} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_sub} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction 56} {:instruction float_sin} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_619} {:instruction float_mult} {:instruction float_pop} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction integer_mod})
Best program: (float_add integer_shove float_dup float_stackdepth integer_fromfloat print_float integer_mult float_inc integer_pop float_add float_sub float_inc integer_mult float_inc integer_dup_items float_add float_sub float_sin integer_min float_flush 56 float_sin integer_mult tag_float_375 tagged_10 tag_integer_619 float_mult float_pop print_float in1 float_swap float_inc integer_dec print_float in1 integer_mod)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 3598.7292523999995
Median total errors in population: 1227.0
Error averages by case: (155.5722311 12.362 118.12922800000001 4.093 117.19869510000001 3.144 114.77736730000001 3.263 96.44391410000003 1.351 133.84906209999997 4.239 173.7711115 3.258 137.53493559999998 11.363 113.37613929999999 3.166 189.12568870000004 2.413 137.90957159999996 3.042 113.8459661 3.164 182.4207054 12.313 138.6194151 3.198 164.55616629999997 13.345 110.08719439999999 3.258 121.573057 3.223 138.5761717 11.386 134.0741444 12.248 182.1757719 3.234 135.89985879999998 2.982 130.4964326 13.149 160.5494793 3.235 139.6248113 2.966 115.98613369999998 3.161)
Error minima by case: (23.1045 10 21.6491 2 13.8086 2 16.0 2 0.0 0 37.0 3 13.511 2 8.9714 9 13.3483 2 23.461 1 3.2952 1 14.0 2 21.5384 10 9.1153 2 26.3133 11 10.0 1 5.2863 2 8.9657 8 4.5371 8 6.0 1 15.9794 2 6.8561 9 30.0 1 15.5724 2 10.506 2)
Average genome size in population (length): 42.303
Average program size in population (points): 43.303
Average percent parens in population: 0.024
Minimum age in population: 47.67867351463065
Maximum age in population: 52.39363909000531
Average age in population: 50.42661035435135
Median age in population: 50.47029471269343
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.027
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 42386432
--- Timings ---
Current time: 1529614892765 milliseconds
Total Time:         115.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.4 seconds, 40.1%
Fitness Testing:     55.0 seconds, 47.6%
Report:              14.1 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_tan} {:instruction 53} {:instruction integer_yank} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_flush} {:instruction print_float} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction integer_mod} {:instruction print_float} {:instruction integer_dec} {:instruction float_inc} {:instruction -18} {:instruction integer_shove} {:instruction float_rot} {:instruction float_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_min} {:instruction float_flush} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction float_min} {:instruction in1} {:instruction float_div} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction integer_max} {:instruction float_cos} {:instruction float_rot} {:instruction in1})
Best program: (float_add integer_shove integer_yank float_tan 53 integer_yank integer_dup float_flush integer_flush print_float integer_max float_dup_items float_dec float_shove integer_mod print_float integer_dec float_inc -18 integer_shove float_rot float_max float_yankdup float_add float_sub float_yankdup integer_min float_flush 58 integer_yank integer_mult tag_float_375 tagged_10 float_yankdup float_div integer_swap in2 integer_dec float_min in1 float_div float_inc integer_dec print_float integer_max float_cos float_rot in1)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3308.9457497
Median total errors in population: 1227.0
Error averages by case: (141.64389549999999 12.411 109.09638120000001 3.96 109.0728597 2.983 103.7317345 3.106 86.12440640000001 1.161 122.94589119999998 4.066 163.0216137 3.098 129.9257245 11.366 100.6678726 2.972 178.953183 2.207 125.58414180000001 2.852 98.91460430000001 2.989 169.0354616 12.347 124.3558923 3.033 157.2426689 13.4 95.1853609 3.062 109.92166280000002 3.053 123.3562459 11.396 119.73483809999999 12.317 171.12812179999997 3.021 128.13183189999998 2.848 115.7205038 13.226 149.1704147 3.03 128.4379326 2.846 108.08450599999999 3.008)
Error minima by case: (23.1045 10 18.4604 2 10.6199 2 16.0 2 0.0 0 37.0 3 14.511 2 11.7245 10 14.3483 2 24.461 1 4.2952 1 14.0 2 21.5384 11 11.9641 2 28.6689 12 10.0 1 6.2863 2 9.9657 11 4.5371 9 89.0406 2 19.1681 2 6.8561 10 69.0 2 16.5724 2 10.506 2)
Average genome size in population (length): 41.698
Average program size in population (points): 42.698
Average percent parens in population: 0.025
Minimum age in population: 49.35760349966586
Maximum age in population: 53.72623889066745
Average age in population: 51.89816971139965
Median age in population: 51.89890845547779
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.028
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 43432131
--- Timings ---
Current time: 1529614895879 milliseconds
Total Time:         118.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.7 seconds, 40.2%
Fitness Testing:     56.5 seconds, 47.6%
Report:              14.4 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_swap} {:instruction float_sub} {:instruction float_sin} {:instruction float_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_div} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_pop} {:instruction integer_flush} {:instruction tag_integer_132} {:instruction -98.6114314663352} {:instruction float_mult} {:instruction integer_yank} {:instruction print_integer} {:instruction float_flush} {:instruction in1} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_pop} {:instruction integer_dec} {:instruction integer_mod} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.2611022058374} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_max} {:instruction float_cos} {:instruction float_max} {:instruction in1} {:instruction integer_dec} {:instruction float_pop} {:instruction float_rot} {:instruction float_flush})
Best program: (float_add integer_shove float_dup float_stackdepth integer_fromfloat print_float integer_mult float_inc integer_dup_items float_swap float_sub float_sin float_rot float_dec float_dup_times float_div integer_div integer_mult float_mod integer_yank integer_pop integer_flush tag_integer_132 -98.6114314663352 float_mult integer_yank print_integer float_flush in1 integer_sub float_pop integer_rot float_yankdup float_div integer_swap integer_pop integer_dec integer_mod in1 float_swap float_inc integer_dec print_float float_max 94.2611022058374 float_dup_times tag_float_477 integer_yank integer_mod integer_yankdup float_tan integer_max float_cos float_max in1 integer_dec float_pop float_rot float_flush)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3652.3213627000005
Median total errors in population: 1227.0
Error averages by case: (157.55313309999997 12.461 119.9323885 4.135 119.85061470000001 3.162 115.5145422 3.273 99.2178842 1.364 134.5517991 4.238 174.7486425 3.271 140.3044844 11.434 117.23338439999999 3.196 190.0736864 2.398 141.52939070000002 3.063 115.58822780000001 3.194 184.3732386 12.404 140.5108511 3.233 166.39782630000002 13.433 111.918072 3.277 122.518918 3.222 140.5879288 11.469 136.00174660000002 12.357 185.7865711 3.254 138.6091836 3.013 132.4539487 13.252 164.19645699999998 3.263 140.55295370000002 2.989 118.77548920000001 3.185)
Error minima by case: (22.1237 9 22.0 2 16.0085 2 16.0 2 0.0 0 37.0 3 82.0 2 8.849 9 17.0 2 99.0 1 45.0 1 14.0 2 20.5979 9 9.0885 2 25.7934 10 1.7495 1 24.0 2 31.0642 11 4.0369 9 93.0 2 28.2205 2 6.3252 9 69.0 2 44.0 2 9.5993 2)
Average genome size in population (length): 40.755
Average program size in population (points): 41.755
Average percent parens in population: 0.025
Minimum age in population: 50.45739831076935
Maximum age in population: 55.31223695838707
Average age in population: 53.3890029020879
Median age in population: 53.44060008942324
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.812
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.812
Total error diversity:				 0.031
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 44453993
--- Timings ---
Current time: 1529614899122 milliseconds
Total Time:         121.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.0 seconds, 40.2%
Fitness Testing:     57.9 seconds, 47.6%
Report:              14.8 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_sub} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_dec} {:instruction float_dup_times} {:instruction tag_float_477} {:instruction integer_yank} {:instruction float_dup_times})
Best program: (integer_mult float_sub float_dec integer_mult float_inc float_dup_times tag_integer_505 float_mult float_sub float_div integer_swap in2 integer_dec integer_dup_times in1 float_swap float_inc integer_dec integer_dec print_float float_max integer_dec float_dup_times tag_float_477 integer_yank float_dup_times)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 3626.3017931
Median total errors in population: 1227.0
Error averages by case: (157.5631148 12.566 117.86135499999999 4.119 117.83783269999999 3.127 114.576735 3.252 95.421185 1.306 133.5808964 4.211 173.89748459999998 3.245 138.500218 11.483 115.3719536 3.183 189.2443598 2.338 139.847566 3.052 115.64960540000001 3.199 184.4115367 12.496 140.58688990000002 3.235 165.5510435 13.526 111.9923501 3.269 121.6147378 3.186 140.56610940000002 11.568 136.0715098 12.463 184.16817550000002 3.223 136.68680369999998 3.0 132.48919819999998 13.355 162.50799580000003 3.23 139.6656763 2.986 116.85946009999999 3.16)
Error minima by case: (15.0884 9 18.4604 2 10.6199 2 16.0 2 0.0 0 37.0 3 82.0 2 11.7529 9 17.0 2 99.0 1 8.7048 1 14.0 2 13.5223 11 11.9456 2 28.6896 12 10.0 1 24.0 2 23.0182 10 3.479 9 93.0 2 19.1681 2 1.16 9 69.0 2 44.0 2 2.4899 2)
Average genome size in population (length): 40.609
Average program size in population (points): 41.609
Average percent parens in population: 0.025
Minimum age in population: 51.45739831076935
Maximum age in population: 56.95804952264007
Average age in population: 54.85817678696601
Median age in population: 54.89894074824406
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.799
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.799
Total error diversity:				 0.033
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 45472630
--- Timings ---
Current time: 1529614902236 milliseconds
Total Time:         125.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.3 seconds, 40.2%
Fitness Testing:     59.4 seconds, 47.5%
Report:              15.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_inc} {:instruction 59} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_146} {:instruction integer_dup_times} {:instruction float_max} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction print_float} {:instruction float_mult} {:instruction float_tan} {:instruction float_div} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_rot} {:instruction print_float} {:instruction integer_yankdup} {:instruction 94.91637758043163})
Best program: (float_sin integer_mult float_dup_items integer_inc 59 float_stackdepth float_dup_items float_cos float_stackdepth integer_yankdup float_stackdepth tagged_146 integer_dup_times float_max integer_mult tag_float_375 tagged_10 print_float float_mult float_tan float_div in1 float_swap float_inc integer_rot print_float integer_yankdup 94.91637758043163)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 3903.0639812000004
Median total errors in population: 1227.0
Error averages by case: (166.8295831 12.519 130.8068524 4.2 130.7574156 3.221 127.45733890000001 3.367 106.52188780000002 1.444 146.23094369999998 4.317 185.64500510000002 3.369 150.80313389999998 11.465 126.07729929999998 3.261 200.76616490000004 2.486 148.07716019999995 3.123 125.63794410000003 3.277 193.31821949999997 12.443 150.0826093 3.319 177.4117053 13.48 121.92907229999999 3.367 134.20588930000005 3.302 150.0947529 11.496 145.62102850000002 12.402 194.0734713 3.307 149.1833506 3.067 142.09118189999998 13.288 172.7124561 3.325 151.99248140000003 3.054 129.5860338 3.252)
Error minima by case: (14.8955 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 3.5359 10 7.6517 2 24.461 1 4.2952 2 15.0 2 16.4616 10 3.2963 2 13.4085 11 11.0 2 6.2863 2 6.9657 9 5.0369 9 89.0406 2 0.1681 2 7.3252 9 70.0 2 16.5724 2 11.506 2)
Average genome size in population (length): 40.142
Average program size in population (points): 41.142
Average percent parens in population: 0.026
Minimum age in population: 53.79166082036681
Maximum age in population: 58.10064761342073
Average age in population: 56.36683827299438
Median age in population: 56.42840882685414
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.806
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.806
Total error diversity:				 0.034
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 46478867
--- Timings ---
Current time: 1529614905332 milliseconds
Total Time:         128.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.6 seconds, 40.3%
Fitness Testing:     60.8 seconds, 47.5%
Report:              15.6 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_pop} {:instruction float_add} {:instruction float_cos} {:instruction float_mod} {:instruction tagged_701} {:instruction float_add} {:instruction integer_dup} {:instruction float_inc} {:instruction 59} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction 8} {:instruction integer_dup_items} {:instruction in2} {:instruction float_sub} {:instruction float_sub} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_inc} {:instruction float_shove} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction float_yank} {:instruction tagged_146} {:instruction float_mod} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_sub} {:instruction 58} {:instruction integer_yank} {:instruction float_dup_times} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction in2} {:instruction integer_dec} {:instruction float_dup} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163})
Best program: (float_add integer_shove integer_stackdepth float_stackdepth integer_fromfloat print_float integer_mult float_inc integer_pop float_add float_cos float_mod tagged_701 float_add integer_dup float_inc 59 integer_dup_times float_dup_items 8 integer_dup_items in2 float_sub float_sub integer_min integer_dup_times integer_rot float_inc float_shove integer_dup_items integer_shove float_yank tagged_146 float_mod integer_yankdup integer_swap integer_min integer_sub 58 integer_yank float_dup_times tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup float_div float_mod in2 integer_dec float_dup in1 float_swap float_inc integer_dec print_float float_max 94.91637758043163)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3203.3190688
Median total errors in population: 1227.0
Error averages by case: (140.61935649999998 12.366 101.52177950000001 3.931 100.6143454 2.953 98.97635480000001 3.055 79.47963480000001 1.133 118.3572896 4.032 159.15207850000002 3.053 121.4464252 11.34 96.7542828 2.974 174.74843159999998 2.173 121.77396239999999 2.856 98.03106890000001 2.978 167.94725949999997 12.321 123.32139319999999 3.014 148.990499 13.34 94.2634466 3.052 106.05010750000001 3.015 123.345421 11.375 118.7429885 12.282 166.6933981 3.02 119.7503583 2.829 115.10759080000001 13.187 144.66674080000004 3.035 124.39201560000001 2.816 99.4678399 2.975)
Error minima by case: (16.1045 10 17.456 2 22.0 2 9.9115 2 0.0 0 37.0 3 16.511 2 9.7245 9 12.3483 2 26.461 1 2.2952 1 12.8681 2 15.4616 10 0.0359 2 26.6689 11 10.0 1 8.2863 2 11.9657 10 5.5841 9 6.0 1 37.9952 2 7.8673 10 30.0 1 18.5724 2 11.4546 2)
Average genome size in population (length): 39.871
Average program size in population (points): 40.871
Average percent parens in population: 0.026
Minimum age in population: 54.79166082036681
Maximum age in population: 59.85633962526117
Average age in population: 57.84904939343045
Median age in population: 57.90906447751877
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.796
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.796
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 47478067
--- Timings ---
Current time: 1529614908487 milliseconds
Total Time:         131.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.9 seconds, 40.3%
Fitness Testing:     62.3 seconds, 47.4%
Report:              16.0 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_max} {:instruction 54.30476101524997} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_cos} {:instruction 87} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_sub} {:instruction float_add} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction float_max} {:instruction float_flush} {:instruction 58} {:instruction float_swap} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_dec} {:instruction tag_float_477} {:instruction integer_yank} {:instruction 94.91637758043163} {:instruction integer_rot})
Best program: (integer_mult integer_mult float_sub integer_max 54.30476101524997 integer_yankdup integer_swap integer_sub float_cos 87 float_yankdup float_inc integer_dup_items float_add float_sub float_add float_sub integer_fromfloat float_max float_flush 58 float_swap integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_yankdup integer_dec print_float in1 float_swap float_inc integer_dec integer_dec print_float float_max integer_dec tag_float_477 integer_yank 94.91637758043163 integer_rot)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 3117.4860126
Median total errors in population: 1227.0
Error averages by case: (136.8553559 12.325 99.4741354 3.834 97.68093290000002 2.848 96.9377241 2.959 74.48886540000001 1.002 116.37531839999997 3.934 157.34972159999998 2.961 118.5227891 11.309 91.84957490000001 2.857 173.0224714 2.059 116.44830939999999 2.743 93.98350710000001 2.867 164.29752539999998 12.276 119.39898709999999 2.896 146.1775111 13.304 90.19476809999999 2.931 104.00659810000002 2.924 119.5100051 11.326 114.802519 12.244 162.21903640000002 2.885 116.83099290000001 2.75 111.15411390000001 13.158 140.0788579 2.894 122.43802840000002 2.751 96.47636359999998 2.875)
Error minima by case: (24.1045 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 9.7245 11 17.0 2 99.0 1 36.0 1 14.0 2 22.5384 10 9.9641 2 26.6689 11 10.0 1 24.0 2 32.0343 11 5.5371 10 6.0 1 38.8319 2 7.8561 8 30.0 1 44.0 2 11.506 2)
Average genome size in population (length): 39.596
Average program size in population (points): 40.596
Average percent parens in population: 0.026
Minimum age in population: 56.62434382570791
Maximum age in population: 61.25547127685786
Average age in population: 59.33777854986938
Median age in population: 59.40256881456116
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.784
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.784
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 48470567
--- Timings ---
Current time: 1529614911619 milliseconds
Total Time:         134.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.3 seconds, 40.4%
Fitness Testing:     63.7 seconds, 47.3%
Report:              16.4 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 55887.0
Test mean error for best: 27.94350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -36.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: -65.868100625 
Correct output: 23.5384229728  | Program output: -68.4615770272
Correct output: -9.9640986393  | Program output: -52.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -36.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: -31.4628717042
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -25.1439053241
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_flush} {:instruction float_frominteger} {:instruction 58} {:instruction integer_yank} {:instruction integer_mult} {:instruction in2} {:instruction tagged_9959} {:instruction float_max} {:instruction float_mult} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_swap} {:instruction float_flush} {:instruction 58} {:instruction float_add} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_max} {:instruction float_sub} {:instruction float_sub} {:instruction integer_min} {:instruction print_float} {:instruction integer_inc} {:instruction float_inc} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction print_float} {:instruction tag_float_345} {:instruction integer_swap} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_dec} {:instruction float_inc} {:instruction float_mod} {:instruction print_float})
Best program: (integer_mult integer_stackdepth integer_max integer_mult integer_flush float_frominteger 58 integer_yank integer_mult in2 tagged_9959 float_max float_mult tagged_10 integer_dup float_swap float_flush 58 float_add float_mult integer_mult float_inc integer_mult float_mult float_max float_sub float_sub integer_min print_float integer_inc float_inc float_cos in2 integer_dec print_float tag_float_345 integer_swap print_float in1 float_swap float_inc integer_dec print_float float_max integer_dec float_inc float_mod print_float)
Errors: [62.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 18.0 2 100.0 1 46.0 2 15.0 2 92.0 12 43.0 2 76.0 13 11.0 2 25.0 2 43.0 11 38.0 12 94.0 2 44.0 2 34.0 13 70.0 2 45.0 2 22.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3231.5230556
Median total errors in population: 1227.0
Error averages by case: (140.8207906 12.395 102.98373480000001 3.942 102.92062479999998 2.985 99.8513679 3.066 82.835576 1.18 119.26657709999999 4.049 159.8373001 3.061 123.3435702 11.326 98.0296131 3.07 175.46162239999998 2.196 123.5461522 2.96 98.0289302 3.05 168.1162371 12.347 123.4677749 3.083 150.65340139999998 13.318 94.3629493 3.123 107.04172530000001 3.03 123.55338560000001 11.418 118.92575939999998 12.305 168.263423 3.126 121.8272525 2.851 115.29269780000001 13.215 146.2223818 3.138 125.23381190000002 2.82 101.5723962 3.01)
Error minima by case: (24.1045 10 19.4604 2 11.6199 2 12.5281 2 0.0 0 31.0189 3 0.1004 2 9.0667 10 14.3483 2 24.461 1 4.2952 1 14.0 2 22.5384 8 10.4928 2 5.054 8 10.0 1 6.2863 2 9.9657 10 5.5371 9 5.0 1 18.1681 2 7.8561 10 29.0 2 5.8111 2 10.506 2)
Average genome size in population (length): 39.503
Average program size in population (points): 40.503
Average percent parens in population: 0.026
Minimum age in population: 58.09296449156682
Maximum age in population: 62.6760769259572
Average age in population: 60.84006897475508
Median age in population: 60.89273649869938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 49460888
--- Timings ---
Current time: 1529614914715 milliseconds
Total Time:         137.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.6 seconds, 40.4%
Fitness Testing:     65.1 seconds, 47.3%
Report:              16.8 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 55368.0
Test mean error for best: 27.68400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -35.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 15.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 5.295187364   
Correct output: -50.868100625  | Program output: -64.868100625 
Correct output: 23.5384229728  | Program output: -67.4615770272
Correct output: -9.9640986393  | Program output: -51.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -35.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -8.9656683189 
Correct output: 6.5371282958   | Program output: -30.4628717042
Correct output: 183.0405782309 | Program output: 90.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -24.1439053241
Correct output: 151.8048643924 | Program output: 82.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dec})
Best program: (integer_mult integer_dup_times integer_rot integer_shove float_dup integer_rot float_add integer_shove float_dup tagged_10 integer_dup float_mult float_yankdup float_div integer_swap in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc in1 float_yankdup float_inc integer_dec print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_dup_items integer_dec)
Errors: [61.0 11 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 17.0 2 100.0 1 45.0 1 14.0 2 91.0 12 42.0 2 76.0 13 10.0 1 25.0 2 42.0 11 37.0 12 93.0 3 44.0 2 33.0 13 69.0 3 45.0 2 22.0 2]
Total: 1214.0
Mean: 24.28
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3529.2554942
Median total errors in population: 1227.0
Error averages by case: (152.8944355 12.326 115.2578063 3.991 115.20541139999999 3.031 112.71860649999999 3.148 90.7553037 1.233 131.79162939999998 4.12 171.92549469999997 3.153 135.5939443 11.314 109.5742647 3.055 187.3203145 2.289 133.5993579 2.927 110.8474409 3.058 179.83121609999998 12.275 135.8279196 3.083 162.6452325 13.306 107.1534487 3.136 119.69225210000002 3.115 135.8497735 11.345 131.3049914 12.228 178.72439160000002 3.115 133.956963 2.893 127.7176203 13.13 156.97722509999997 3.128 137.73164870000002 2.885 114.0208018 3.054)
Error minima by case: (23.1045 9 7.124 2 0.7165 2 16.0 2 0.0 0 32.0189 3 0.8996 2 9.8712 10 13.3483 2 25.461 1 3.2952 1 14.0 2 21.5384 8 9.0606 2 27.2632 10 10.0 1 7.2863 2 10.9657 10 4.5371 8 6.0 1 30.5045 2 6.8561 10 30.0 1 17.5724 2 10.506 2)
Average genome size in population (length): 39.499
Average program size in population (points): 40.499
Average percent parens in population: 0.026
Minimum age in population: 59.09296449156682
Maximum age in population: 64.39735370071094
Average age in population: 62.33388829273341
Median age in population: 62.41402901824654
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 50451137
--- Timings ---
Current time: 1529614917837 milliseconds
Total Time:         140.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.9 seconds, 40.5%
Fitness Testing:     66.5 seconds, 47.3%
Report:              17.1 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 55368.0
Test mean error for best: 27.68400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -35.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 15.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 5.295187364   
Correct output: -50.868100625  | Program output: -64.868100625 
Correct output: 23.5384229728  | Program output: -67.4615770272
Correct output: -9.9640986393  | Program output: -51.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -35.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -8.9656683189 
Correct output: 6.5371282958   | Program output: -30.4628717042
Correct output: 183.0405782309 | Program output: 90.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -24.1439053241
Correct output: 151.8048643924 | Program output: 82.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dec})
Best program: (integer_mult integer_dup_times integer_rot integer_shove float_dup integer_rot float_add integer_shove float_dup tagged_10 integer_dup float_mult float_yankdup float_div integer_swap in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc in1 float_yankdup float_inc integer_dec print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_dup_items integer_dec)
Errors: [61.0 11 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 17.0 2 100.0 1 45.0 1 14.0 2 91.0 12 42.0 2 76.0 13 10.0 1 25.0 2 42.0 11 37.0 12 93.0 3 44.0 2 33.0 13 69.0 3 45.0 2 22.0 2]
Total: 1214.0
Mean: 24.28
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3545.9511137
Median total errors in population: 1227.0
Error averages by case: (152.81335270000002 12.411 116.2816836 4.069 116.22440650000001 3.108 112.6958796 3.219 93.5776651 1.306 131.83320319999999 4.192 171.8911453 3.221 136.44929330000002 11.384 111.4450763 3.129 187.2942549 2.348 135.1895429 2.999 110.78634050000001 3.126 179.7156845 12.364 135.6984441 3.163 163.47188100000002 13.394 107.07150129999998 3.207 119.59510979999999 3.176 135.8432312 11.423 131.194048 12.304 180.6728392 3.194 134.8932172 2.961 127.61750820000002 13.207 158.92746670000002 3.201 137.65141580000002 2.948 114.9279228 3.135)
Error minima by case: (24.1045 10 22.0 2 22.0 2 8.9727 2 0.0 0 37.0 3 14.511 2 9.8437 9 14.3483 2 24.461 1 4.2952 1 14.0 2 22.5384 10 9.3413 2 26.7881 10 10.0 1 6.2863 2 9.9657 9 5.5371 9 89.0406 2 37.5945 2 7.8561 9 69.0 2 9.3665 2 11.506 2)
Average genome size in population (length): 39.342
Average program size in population (points): 40.342
Average percent parens in population: 0.026
Minimum age in population: 60.09296449156682
Maximum age in population: 65.84105433670993
Average age in population: 63.84516592252119
Median age in population: 63.89614795629927
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.034
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 51437685
--- Timings ---
Current time: 1529614920933 milliseconds
Total Time:         143.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.2 seconds, 40.5%
Fitness Testing:     67.9 seconds, 47.2%
Report:              17.5 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 55368.0
Test mean error for best: 27.68400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -35.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 15.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 5.295187364   
Correct output: -50.868100625  | Program output: -64.868100625 
Correct output: 23.5384229728  | Program output: -67.4615770272
Correct output: -9.9640986393  | Program output: -51.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -35.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -8.9656683189 
Correct output: 6.5371282958   | Program output: -30.4628717042
Correct output: 183.0405782309 | Program output: 90.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -24.1439053241
Correct output: 151.8048643924 | Program output: 82.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dec})
Best program: (integer_mult integer_dup_times integer_rot integer_shove float_dup integer_rot float_add integer_shove float_dup tagged_10 integer_dup float_mult float_yankdup integer_max integer_swap in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc in1 float_yankdup float_inc integer_dec print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_dup_items integer_dec)
Errors: [61.0 11 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 17.0 2 100.0 1 45.0 1 14.0 2 91.0 12 42.0 2 76.0 13 10.0 1 25.0 2 42.0 11 37.0 12 93.0 3 44.0 2 33.0 13 69.0 3 45.0 2 22.0 2]
Total: 1214.0
Mean: 24.28
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3113.9974435999998
Median total errors in population: 1227.0
Error averages by case: (134.9193867 12.31 99.6688728 3.883 99.6117513 2.911 94.2792265 3.036 78.6489898 1.12 113.8943741 4.011 154.69821209999998 3.045 120.26663520000001 11.296 94.78035620000001 2.933 170.46252170000005 2.156 119.8931268 2.798 92.24728020000002 2.946 162.3021196 12.292 117.52474970000002 2.984 147.7766317 13.292 88.4175846 3.001 101.24274170000001 2.995 117.64308079999999 11.338 112.91819039999999 12.25 165.3975214 2.997 118.56991820000002 2.796 109.27757780000002 13.152 143.20812319999996 3.005 119.72398440000002 2.799 98.3424867 2.936)
Error minima by case: (9.8955 10 16.905 2 22.0 2 0.282 2 0.0 0 37.0 3 17.8815 2 8.7353 8 2.6517 2 44.8314 1 15.2952 1 14.0 2 11.4616 10 9.3413 2 25.7343 9 10.0 1 24.0 2 1.9657 10 4.5371 8 88.6752 2 4.8319 2 6.8561 8 57.4395 2 18.0572 2 9.6379 2)
Average genome size in population (length): 38.903
Average program size in population (points): 39.903
Average percent parens in population: 0.027
Minimum age in population: 62.17544033581987
Maximum age in population: 67.18702862971202
Average age in population: 65.29324870066611
Median age in population: 65.34892095373147
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 52412568
--- Timings ---
Current time: 1529614924133 milliseconds
Total Time:         146.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.5 seconds, 40.5%
Fitness Testing:     69.3 seconds, 47.2%
Report:              17.9 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 55368.0
Test mean error for best: 27.68400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -35.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 15.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 5.295187364   
Correct output: -50.868100625  | Program output: -64.868100625 
Correct output: 23.5384229728  | Program output: -67.4615770272
Correct output: -9.9640986393  | Program output: -51.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -35.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -8.9656683189 
Correct output: 6.5371282958   | Program output: -30.4628717042
Correct output: 183.0405782309 | Program output: 90.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -24.1439053241
Correct output: 151.8048643924 | Program output: 82.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dec})
Best program: (integer_mult integer_dup_times integer_rot integer_shove float_dup integer_rot float_add integer_shove float_dup tagged_10 integer_dup float_mult float_yankdup float_div integer_swap in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc in1 float_yankdup float_inc integer_dec print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_dup_items integer_dec)
Errors: [61.0 11 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 17.0 2 100.0 1 45.0 1 14.0 2 91.0 12 42.0 2 76.0 13 10.0 1 25.0 2 42.0 11 37.0 12 93.0 3 44.0 2 33.0 13 69.0 3 45.0 2 22.0 2]
Total: 1214.0
Mean: 24.28
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3201.0651614
Median total errors in population: 1227.0
Error averages by case: (137.82385639999998 12.268 103.54851430000001 3.933 103.50147129999999 2.997 99.0583094 3.082 82.5141903 1.196 118.4334819 4.047 159.2106241 3.081 124.21264989999999 11.371 96.6464484 2.992 174.8493741 2.221 122.27434230000001 2.771 95.09709240000001 2.99 165.24229030000004 12.343 120.48457239999998 3.016 151.6404275 13.389 91.3123534 2.928 106.11461080000001 3.046 120.4657862 11.398 115.869289 12.301 166.8421745 3.162 122.50307949999998 2.876 112.21560799999997 13.224 144.74237000000002 3.178 124.4454691 2.862 102.3297759 3.015)
Error minima by case: (24.1045 9 19.4501 2 15.6199 2 16.0 2 0.0 0 31.789 3 0.6696 2 9.7245 10 3.6517 2 27.6196 1 3.7048 1 13.0 2 22.5384 11 9.9641 2 26.6689 10 9.0 1 17.7137 2 20.9657 9 5.5371 10 4.9594 2 14.1681 2 7.8561 10 11.8049 2 27.4276 2 10.506 2)
Average genome size in population (length): 38.979
Average program size in population (points): 39.979
Average percent parens in population: 0.027
Minimum age in population: 63.26645253310107
Maximum age in population: 68.65158395012412
Average age in population: 66.68101378877618
Median age in population: 66.73460518536626
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.747
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.747
Total error diversity:				 0.039
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 53389440
--- Timings ---
Current time: 1529614927231 milliseconds
Total Time:         150.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.8 seconds, 40.5%
Fitness Testing:     70.8 seconds, 47.2%
Report:              18.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 55368.0
Test mean error for best: 27.68400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -35.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 15.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 5.295187364   
Correct output: -50.868100625  | Program output: -64.868100625 
Correct output: 23.5384229728  | Program output: -67.4615770272
Correct output: -9.9640986393  | Program output: -51.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -35.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -8.9656683189 
Correct output: 6.5371282958   | Program output: -30.4628717042
Correct output: 183.0405782309 | Program output: 90.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -24.1439053241
Correct output: 151.8048643924 | Program output: 82.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dec})
Best program: (integer_mult integer_dup_times integer_rot integer_shove float_dup integer_rot float_add integer_shove float_dup tagged_10 integer_dup float_mult float_yankdup integer_max integer_swap in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc in1 float_yankdup float_inc integer_dec print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_dup_items integer_dec)
Errors: [61.0 11 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 17.0 2 100.0 1 45.0 1 14.0 2 91.0 12 42.0 2 76.0 13 10.0 1 25.0 2 42.0 11 37.0 12 93.0 3 44.0 2 33.0 13 69.0 3 45.0 2 22.0 2]
Total: 1214.0
Mean: 24.28
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2952.0135184
Median total errors in population: 1214.0
Error averages by case: (128.7358199 11.78 93.55750760000001 3.788 93.48694339999999 2.861 88.5308395 2.951 69.4129052 1.072 108.2263093 3.93 148.5348267 2.946 114.63325850000001 11.291 87.43572 2.871 164.79104569999996 2.114 111.2853303 2.267 86.0118229 2.877 156.33742619999998 12.245 111.4034638 2.897 142.3479805 13.282 82.1015558 2.418 94.5073029 2.917 110.32614659999999 11.295 106.6887264 12.211 159.14573229999996 3.435 112.7537371 2.762 102.65124270000001 13.126 136.8329682 3.446 113.395575 2.754 92.4663319 2.877)
Error minima by case: (11.6381 9 8.3783 2 0.5379 2 16.0 2 0.0 0 37.0 3 15.511 2 9.7245 9 13.3483 2 25.461 1 3.2952 1 13.0 2 10.072 8 9.9641 2 26.6689 10 9.0 1 7.2863 2 10.9657 10 4.0369 9 88.0406 2 19.1681 2 4.6103 8 68.0 2 17.5724 2 0.9604 2)
Average genome size in population (length): 41.502
Average program size in population (points): 42.502
Average percent parens in population: 0.025
Minimum age in population: 65.8235495393642
Maximum age in population: 70.22433466310181
Average age in population: 68.05584026818288
Median age in population: 68.0924070611945
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 97
Genome diversity (% unique Plush genomes):	 0.681
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 97
Syntactic diversity (% unique Push programs):	 0.681
Total error diversity:				 0.035
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 54429063
--- Timings ---
Current time: 1529614930358 milliseconds
Total Time:         153.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.1 seconds, 40.6%
Fitness Testing:     72.2 seconds, 47.2%
Report:              18.7 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 55368.0
Test mean error for best: 27.68400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -35.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 15.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 5.295187364   
Correct output: -50.868100625  | Program output: -64.868100625 
Correct output: 23.5384229728  | Program output: -67.4615770272
Correct output: -9.9640986393  | Program output: -51.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -35.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -8.9656683189 
Correct output: 6.5371282958   | Program output: -30.4628717042
Correct output: 183.0405782309 | Program output: 90.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -24.1439053241
Correct output: 151.8048643924 | Program output: 82.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_tan} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_290} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dec})
Best program: (integer_mult integer_dup_times integer_dec integer_shove float_dup integer_rot float_add integer_shove float_tan tagged_10 integer_dup float_mult float_yankdup float_div integer_swap in2 tag_float_668 float_tan integer_dec print_float in1 float_inc in1 float_yankdup float_inc integer_dec print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_290 tagged_10 tag_integer_505 float_mult float_tan float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_dup_items integer_dec)
Errors: [61.0 11 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 17.0 2 100.0 1 45.0 1 14.0 2 91.0 12 42.0 2 76.0 13 10.0 1 25.0 2 42.0 11 37.0 12 93.0 3 44.0 2 33.0 13 69.0 3 45.0 2 22.0 2]
Total: 1214.0
Mean: 24.28
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2982.6845884
Median total errors in population: 1214.0
Error averages by case: (129.5571075 11.674 94.7617454 3.902 94.7162988 2.91 89.01847190000001 2.997 73.4295324 1.097 108.58790339999999 3.958 149.8435197 3.006 115.5515322 11.414 88.94267959999999 2.92 165.627894 2.077 114.8344469 1.956 86.2873002 2.93 157.2740995 12.437 111.9951282 2.973 143.27188800000002 13.503 82.4915057 2.133 96.16375889999999 2.942 112.01892870000002 11.474 107.34520179999998 12.428 159.6169598 3.779 113.93882190000002 2.819 103.65376719999999 13.365 137.3866231 3.82 114.6663258 2.804 93.4481478 2.937)
Error minima by case: (23.3846 9 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 9.0667 9 4.6517 2 25.461 1 3.2952 1 10.1644 2 21.7444 8 9.5355 2 25.7343 10 10.0 1 7.2863 2 10.9657 9 4.5382 9 5.9594 2 37.9952 2 6.8562 10 10.8049 2 0.5398 2 11.4546 2)
Average genome size in population (length): 44.091
Average program size in population (points): 45.091
Average percent parens in population: 0.022
Minimum age in population: 66.84541583131886
Maximum age in population: 71.6965951078259
Average age in population: 69.43556488953094
Median age in population: 69.46615855034052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 107
Genome diversity (% unique Plush genomes):	 0.634
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 107
Syntactic diversity (% unique Push programs):	 0.634
Total error diversity:				 0.035
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 55534413
--- Timings ---
Current time: 1529614933612 milliseconds
Total Time:         156.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.4 seconds, 40.6%
Fitness Testing:     73.7 seconds, 47.2%
Report:              19.1 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 54860.0
Test mean error for best: 27.43000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -34.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 16.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 6.295187364   
Correct output: -50.868100625  | Program output: -63.868100625 
Correct output: 23.5384229728  | Program output: -66.4615770272
Correct output: -9.9640986393  | Program output: -50.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -34.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -7.9656683189 
Correct output: 6.5371282958   | Program output: -29.4628717042
Correct output: 183.0405782309 | Program output: 91.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -23.1439053241
Correct output: 151.8048643924 | Program output: 83.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_swap} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dec})
Best program: (integer_mult integer_dup_times integer_rot integer_shove float_dup integer_rot float_add integer_shove float_dup tagged_10 integer_dup float_mult float_yankdup float_swap integer_swap in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_dup_items integer_dec)
Errors: [60.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 16.0 2 100.0 1 44.0 2 13.0 2 90.0 12 41.0 2 76.0 13 9.0 2 25.0 2 41.0 11 36.0 12 92.0 3 44.0 2 32.0 13 68.0 3 45.0 2 22.0 2]
Total: 1205.0
Mean: 24.1
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2494.3880478999995
Median total errors in population: 1214.0
Error averages by case: (110.7714297 11.408 75.0658441 3.616 75.0355367 2.631 70.22573129999999 2.682 50.2486357 0.759 90.11000229999999 3.653 132.4541458 2.686 96.5211467 11.257 68.2019879 2.646 148.5302437 1.754 93.5161804 1.7 66.5137772 2.641 139.15144370000002 12.248 92.83910610000001 2.661 124.90159430000001 13.274 62.6282889 1.798 77.63728630000001 2.653 92.83032469999999 11.274 88.06715190000001 12.22 140.3995295 3.551 94.7828753 2.558 84.28304659999999 13.176 117.6737931 3.562 96.5459233 2.54 73.8620227 2.643)
Error minima by case: (23.3035 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 9.8712 10 3.6517 2 25.461 1 3.2952 1 13.0 2 21.8995 10 9.8366 2 27.2632 11 9.0 1 7.2863 2 10.9657 9 5.9579 9 4.9594 2 36.8319 2 8.3064 9 11.8049 2 17.5724 2 9.506 2)
Average genome size in population (length): 44.446
Average program size in population (points): 45.446
Average percent parens in population: 0.022
Minimum age in population: 67.92825489656843
Maximum age in population: 72.93726398027763
Average age in population: 70.846512729419
Median age in population: 70.88128772322636
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 70
Genome diversity (% unique Plush genomes):	 0.689
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 70
Syntactic diversity (% unique Push programs):	 0.689
Total error diversity:				 0.035
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 56649338
--- Timings ---
Current time: 1529614936815 milliseconds
Total Time:         159.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.8 seconds, 40.6%
Fitness Testing:     75.3 seconds, 47.1%
Report:              19.5 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 54860.0
Test mean error for best: 27.43000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -34.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 16.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 6.295187364   
Correct output: -50.868100625  | Program output: -63.868100625 
Correct output: 23.5384229728  | Program output: -66.4615770272
Correct output: -9.9640986393  | Program output: -50.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -34.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -7.9656683189 
Correct output: 6.5371282958   | Program output: -29.4628717042
Correct output: 183.0405782309 | Program output: 91.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -23.1439053241
Correct output: 151.8048643924 | Program output: 83.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_dup_times} {:instruction tag_integer_276} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_dup} {:instruction tagged_10} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_swap} {:instruction integer_swap} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dec})
Best program: (integer_mult integer_dup_times tag_integer_276 integer_shove float_dup integer_rot float_add integer_shove float_dup tagged_10 integer_dup float_mult float_yankdup float_swap integer_swap in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_dup_items integer_dec)
Errors: [60.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 16.0 2 100.0 1 44.0 2 13.0 2 90.0 12 41.0 2 76.0 13 9.0 2 25.0 2 41.0 11 36.0 12 92.0 3 44.0 2 32.0 13 68.0 3 45.0 2 22.0 2]
Total: 1205.0
Mean: 24.1
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2671.936509
Median total errors in population: 1214.0
Error averages by case: (118.2130428 11.479 81.72292329999999 3.689 81.70829690000001 2.701 77.08481979999999 2.776 59.2438229 0.857 96.8573719 3.75 138.2987595 2.779 103.16259570000001 11.311 75.2778075 2.74 154.7174266 1.858 100.85977030000001 1.797 74.3715572 2.745 146.256937 12.304 100.3886348 2.776 131.3369321 13.324 70.52983590000001 1.933 83.5679492 2.747 99.5887083 11.332 95.70016620000001 12.273 147.85849420000002 3.618 101.3472115 2.633 91.61782219999999 13.223 125.27075669999999 3.646 102.65285580000001 2.631 80.6570107 2.723)
Error minima by case: (24.2996 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 9.7245 10 16.0 2 99.0 1 36.1417 1 13.0 2 22.8781 10 8.9641 2 26.6689 11 9.0 1 24.0 2 31.0348 11 5.9579 8 92.0 2 39.8319 2 8.3064 9 68.0 2 44.0 2 12.506 2)
Average genome size in population (length): 44.669
Average program size in population (points): 45.669
Average percent parens in population: 0.022
Minimum age in population: 69.90711074181269
Maximum age in population: 74.48217630314544
Average age in population: 72.35934243625022
Median age in population: 72.40779451138754
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 42
Genome diversity (% unique Plush genomes):	 0.749
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 42
Syntactic diversity (% unique Push programs):	 0.749
Total error diversity:				 0.035
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 57770663
--- Timings ---
Current time: 1529614940051 milliseconds
Total Time:         162.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.1 seconds, 40.6%
Fitness Testing:     76.8 seconds, 47.2%
Report:              19.9 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 54860.0
Test mean error for best: 27.43000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -34.8955228555
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 16.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 6.295187364   
Correct output: -50.868100625  | Program output: -63.868100625 
Correct output: 23.5384229728  | Program output: -66.4615770272
Correct output: -9.9640986393  | Program output: -50.9640986393
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: -34.1203120353
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -7.9656683189 
Correct output: 6.5371282958   | Program output: -29.4628717042
Correct output: 183.0405782309 | Program output: 91.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: -23.1439053241
Correct output: 151.8048643924 | Program output: 83.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult})
Best program: (float_shove float_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc in1 float_max float_inc in1 float_yankdup float_inc integer_dec print_float float_max integer_stackdepth integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult)
Errors: [60.0 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 16.0 2 100.0 1 44.0 2 13.0 2 90.0 12 41.0 2 76.0 13 9.0 2 25.0 2 41.0 11 36.0 12 92.0 3 44.0 2 32.0 13 68.0 3 45.0 2 22.0 2]
Total: 1205.0
Mean: 24.1
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2909.9439295
Median total errors in population: 1214.0
Error averages by case: (126.633843 11.695 91.61057129999998 3.87 91.5753496 2.847 87.039827 2.929 70.2581454 1.02 106.6619071 3.884 148.1635121 2.946 112.63465579999999 11.447 84.9197069 2.86 163.99678510000004 1.985 110.48541090000002 1.89 83.210086 2.875 154.4078792 12.481 108.975619 2.921 140.48612720000003 13.541 79.4083218 2.068 94.24600590000001 2.882 109.1394368 11.495 104.33879540000001 12.467 155.9010943 3.728 110.89701610000002 2.785 100.6437816 13.418 133.5379155 3.766 112.8776653 2.785 90.42447119999999 2.885)
Error minima by case: (24.1315 10 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 8.7353 10 16.0 2 99.0 1 44.0 1 13.0 2 22.5418 11 8.9641 2 25.8647 11 9.0 1 24.0 2 33.4775 10 5.7219 9 92.0 2 37.5945 2 8.0207 8 68.0 2 44.0 2 12.4546 2)
Average genome size in population (length): 44.672
Average program size in population (points): 45.672
Average percent parens in population: 0.022
Minimum age in population: 71.39954766361564
Maximum age in population: 75.8711574778858
Average age in population: 73.86185435858769
Median age in population: 73.88629149029686
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.781
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.781
Total error diversity:				 0.037
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 58891863
--- Timings ---
Current time: 1529614943301 milliseconds
Total Time:         166.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.4 seconds, 40.6%
Fitness Testing:     78.3 seconds, 47.1%
Report:              20.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 54860.0
Test mean error for best: 27.43000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: -35.8955228555
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 15.3482587745 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 5.295187364   
Correct output: -50.868100625  | Program output: -64.868100625 
Correct output: 23.5384229728  | Program output: -67.4615770272
Correct output: -9.9640986393  | Program output: -51.9640986393
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -35.1203120353
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: -8.9656683189 
Correct output: 6.5371282958   | Program output: -30.4628717042
Correct output: 183.0405782309 | Program output: 90.0405782309 
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: -24.1439053241
Correct output: 151.8048643924 | Program output: 82.8048643924 
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_swap} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction integer_rot} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult})
Best program: (float_shove float_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_swap float_inc in1 float_max float_inc in1 float_yankdup integer_rot integer_dec print_float float_max integer_stackdepth integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult)
Errors: [61.0 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 17.0 2 99.0 2 45.0 1 14.0 2 91.0 12 42.0 2 75.0 13 10.0 1 24.0 2 42.0 11 37.0 12 93.0 3 43.0 2 33.0 13 69.0 3 44.0 2 21.0 2]
Total: 1204.0
Mean: 24.08
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3117.7750118999998
Median total errors in population: 1214.0
Error averages by case: (135.02317010000002 11.771 100.3667852 3.978 100.351646 2.971 94.991601 3.067 77.33378060000001 1.155 114.42348030000001 4.014 154.84142549999999 3.072 121.3447184 11.464 93.8750195 2.994 170.9473212 2.144 118.2561513 2.088 92.15860489999999 3.006 162.5318826 12.475 117.63041960000001 3.044 148.91851540000005 13.538 88.43466670000001 2.291 101.20330569999999 3.008 116.68711439999998 11.519 112.99776139999999 12.453 164.92596900000004 3.848 119.5668305 2.872 108.9815438 13.402 142.8115785 3.9 119.9227115 2.866 99.3170088 2.992)
Error minima by case: (23.0674 9 18.456 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 8.7353 10 13.3483 2 25.461 1 3.2952 1 13.0 2 21.7727 11 9.3209 2 25.8647 12 9.0 1 7.2863 2 10.9657 10 5.5841 8 88.0406 2 37.9189 2 7.8673 9 68.0 2 17.5724 2 10.6379 2)
Average genome size in population (length): 45.052
Average program size in population (points): 46.052
Average percent parens in population: 0.022
Minimum age in population: 73.0106130150226
Maximum age in population: 77.28912878133465
Average age in population: 75.4237715627757
Median age in population: 75.49680451429975
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.781
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.781
Total error diversity:				 0.041
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 60023813
--- Timings ---
Current time: 1529614946501 milliseconds
Total Time:         169.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.7 seconds, 40.6%
Fitness Testing:     79.9 seconds, 47.2%
Report:              20.7 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 51997.06449999998
Test mean error for best: 25.99853
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 2.8010237281  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 15.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 5.295187364   
Correct output: -50.868100625  | Program output: 1.7535824737  
Correct output: 23.5384229728  | Program output: 2.6388891333  
Correct output: -9.9640986393  | Program output: 2.3771891746  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 3.6534544261  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -8.9656683189 
Correct output: 6.5371282958   | Program output: 1.268958283   
Correct output: 183.0405782309 | Program output: 90.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 1.4036711153  
Correct output: 151.8048643924 | Program output: 82.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult})
Best program: (float_shove float_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc in1 float_yankdup float_inc integer_dec print_float float_max integer_stackdepth integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult)
Errors: [22.3035 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 17.0 2 100.0 1 45.0 1 52.6217 12 20.8995 9 12.3413 12 76.0 13 28.7738 13 25.0 2 42.0 11 5.2682 9 93.0 3 44.0 2 7.4524 10 69.0 3 45.0 2 22.0 2]
Total: 1097.6604
Mean: 21.953209
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2757.4633823000004
Median total errors in population: 1214.0
Error averages by case: (120.40534509999999 11.917 85.88747030000002 3.778 85.83020439999999 2.773 80.4529556 2.865 62.581882799999995 0.938 100.3090666 3.822 141.77707569999998 2.876 106.8866977 11.345 79.72818910000001 2.795 157.7536706 1.943 103.8107144 2.199 77.2253182 2.838 148.17968280000002 12.356 102.7104877 2.866 134.87577359999997 13.425 73.31307000000001 2.372 87.48062650000001 2.815 102.92755399999999 11.394 98.01330360000001 12.328 151.45522119999998 3.693 105.1717589 2.696 94.32970559999998 13.295 128.9493808 3.731 106.270769 2.689 84.5844581 2.804)
Error minima by case: (22.0674 9 21.0 2 17.6854 2 15.0 2 0.0 0 36.0 2 14.511 2 8.9714 9 14.3483 1 24.461 1 4.2952 1 12.0 2 20.5979 8 6.9641 1 26.3133 11 8.0 1 6.2863 2 9.9657 10 4.0369 8 89.0406 2 12.1027 2 6.3252 9 67.0 2 16.5724 2 12.506 1)
Average genome size in population (length): 45.706
Average program size in population (points): 46.706
Average percent parens in population: 0.022
Minimum age in population: 74.11620238575026
Maximum age in population: 78.98859979442496
Average age in population: 76.98561620975794
Median age in population: 76.98257923155423
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.744
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.046
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 61174888
--- Timings ---
Current time: 1529614949706 milliseconds
Total Time:         172.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.0 seconds, 40.6%
Fitness Testing:     81.4 seconds, 47.2%
Report:              21.0 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 51760.91909999997
Test mean error for best: 25.88046
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 1.8010237281  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: 0.7535824737  
Correct output: 23.5384229728  | Program output: 1.6388891333  
Correct output: -9.9640986393  | Program output: 1.3771891746  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.6534544261  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: 0.268958283   
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 0.4036711153  
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult})
Best program: (float_shove float_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc in1 float_yankdup integer_flush integer_dec print_float float_max integer_stackdepth integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult)
Errors: [23.3035 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 18.0 2 99.0 2 46.0 2 51.6217 12 21.8995 10 11.3413 12 75.0 13 27.7738 12 24.0 2 43.0 11 6.2682 9 94.0 2 43.0 2 8.4524 10 70.0 2 44.0 2 21.0 2]
Total: 1093.6604
Mean: 21.873207
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3020.6683061000003
Median total errors in population: 1205.0
Error averages by case: (130.3691523 12.355 96.54869989999997 3.865 96.5104618 2.898 90.95023580000002 2.975 75.3635261 1.121 110.4651563 3.932 151.7398676 2.985 117.3857626 11.386 90.05097279999998 2.917 167.4894682 2.091 115.87207859999998 2.73 87.58091210000002 2.971 157.8689966 12.378 112.8919641 2.985 145.06671649999998 13.436 83.6900514 2.946 98.11583980000002 2.931 113.0599656 11.427 108.2387019 12.332 160.64861100000002 3.785 115.6998384 2.81 104.58627190000001 13.287 138.4363604 3.829 116.6385362 2.801 95.3021582 2.925)
Error minima by case: (22.1045 10 22.0 2 22.0 2 16.0 1 0.0 0 37.0 2 14.511 2 8.9714 10 14.0 2 24.461 1 4.2952 1 11.0 2 20.5384 9 9.8366 1 26.3133 11 7.0 1 6.2863 1 9.9657 10 3.5371 8 89.0406 2 36.8319 2 5.8561 9 66.0 2 16.5724 2 9.506 2)
Average genome size in population (length): 46.441
Average program size in population (points): 47.441
Average percent parens in population: 0.022
Minimum age in population: 76.04143255980628
Maximum age in population: 80.51473980801735
Average age in population: 78.64887745980629
Median age in population: 78.6867830482086
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.658
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.658
Total error diversity:				 0.041
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 62348463
--- Timings ---
Current time: 1529614952931 milliseconds
Total Time:         175.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.3 seconds, 40.6%
Fitness Testing:     82.9 seconds, 47.2%
Report:              21.4 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 51760.91909999997
Test mean error for best: 25.88046
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 1.8010237281  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 14.3482587745 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 4.295187364   
Correct output: -50.868100625  | Program output: 0.7535824737  
Correct output: 23.5384229728  | Program output: 1.6388891333  
Correct output: -9.9640986393  | Program output: 1.3771891746  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.6534544261  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: -9.9656683189 
Correct output: 6.5371282958   | Program output: 0.268958283   
Correct output: 183.0405782309 | Program output: 89.0405782309 
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 0.4036711153  
Correct output: 151.8048643924 | Program output: 81.8048643924 
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult})
Best program: (float_shove float_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc in1 float_yankdup integer_flush integer_dec print_float float_max integer_stackdepth integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult)
Errors: [23.3035 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 18.0 2 99.0 2 46.0 2 51.6217 12 21.8995 10 11.3413 12 75.0 13 27.7738 12 24.0 2 43.0 11 6.2682 9 94.0 2 43.0 2 8.4524 10 70.0 2 44.0 2 21.0 2]
Total: 1093.6604
Mean: 21.873207
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2499.1428505000003
Median total errors in population: 1205.0
Error averages by case: (109.90010019999997 12.167 75.9325295 3.535 75.8918976 2.672 71.30218909999999 2.745 52.626706 0.966 91.2938389 3.713 131.97778350000002 2.751 97.2396361 11.309 66.81545289999998 2.707 148.9460325 1.953 91.7553103 2.463 67.56049870000002 2.928 137.43321840000002 12.245 92.16007849999998 2.885 125.5523444 13.357 63.276712000000025 2.834 76.67631120000001 2.707 91.07922799999999 11.33 87.3282027 12.206 141.02133539999997 3.579 95.520601 2.607 82.99584909999994 13.179 118.2589507 3.613 96.1861363 2.604 74.6649075 2.692)
Error minima by case: (22.0674 10 21.0 2 21.0 2 15.0 1 0.0 0 36.0 2 14.511 2 8.7245 10 14.0 2 24.461 1 4.2952 1 11.0 2 20.7727 9 6.9641 1 25.6689 11 7.0 1 6.2863 1 9.9657 9 4.5841 8 89.0406 2 36.5945 2 6.8673 8 66.0 2 16.5724 2 11.6379 1)
Average genome size in population (length): 46.446
Average program size in population (points): 47.446
Average percent parens in population: 0.022
Minimum age in population: 77.37497279874181
Maximum age in population: 82.10264330206262
Average age in population: 80.20809236838836
Median age in population: 80.2693969563082
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.697
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.697
Total error diversity:				 0.055
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.065
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 63521550
--- Timings ---
Current time: 1529614956142 milliseconds
Total Time:         179.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.6 seconds, 40.6%
Fitness Testing:     84.5 seconds, 47.2%
Report:              21.7 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 51315.329499999985
Test mean error for best: 25.65766
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.8010237281  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 18.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 8.295187364   
Correct output: -50.868100625  | Program output: 4.7535824737  
Correct output: 23.5384229728  | Program output: 5.6388891333  
Correct output: -9.9640986393  | Program output: 5.3771891746  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 6.6534544261  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -5.9656683189 
Correct output: 6.5371282958   | Program output: 4.268958283   
Correct output: 183.0405782309 | Program output: 93.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 4.4036711153  
Correct output: 151.8048643924 | Program output: 85.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction tag_integer_818} {:instruction integer_dec})
Best program: (float_shove float_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush tag_integer_818 integer_dec)
Errors: [19.3035 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 14.0 2 100.0 1 42.0 2 55.6217 12 17.8995 10 15.3413 12 76.0 13 31.7738 13 25.0 2 39.0 11 2.2682 9 90.0 2 44.0 2 4.4524 10 66.0 2 45.0 2 22.0 2]
Total: 1079.6604000000002
Mean: 21.593208
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2714.8709673
Median total errors in population: 1204.0
Error averages by case: (115.70587009999979 11.986 84.4087012 3.441 84.38245719999999 2.753 78.7472675 2.823 62.520441 1.219 98.4901794 3.78 140.4918388 2.83 105.6904696 11.352 78.2355804 2.817 156.43171170000002 2.213 103.8114668 2.408 78.92853630000019 3.722 140.84786929999996 12.106 98.6882309 3.491 133.7653282 13.404 73.28594240000005 3.582 86.13055130000001 2.781 101.65039249999998 11.391 93.86520200000017 12.029 150.05348379999998 3.563 103.903012 2.679 90.70474579999984 13.008 127.50747779999999 3.624 104.8945887 2.671 83.2796226 2.777)
Error minima by case: (19.3035 10 21.0 2 21.0 2 15.0 1 0.0 0 36.0 2 81.0 2 9.2736 9 14.0 2 98.0 1 42.0 1 11.0 2 17.8995 9 10.3413 1 26.7346 10 7.0 1 23.0 1 32.54 10 2.2682 9 90.0 2 35.5945 2 4.4524 10 66.0 2 43.0 2 11.112 1)
Average genome size in population (length): 46.571
Average program size in population (points): 47.571
Average percent parens in population: 0.022
Minimum age in population: 79.39474138217628
Maximum age in population: 83.5675159642504
Average age in population: 81.61397564420162
Median age in population: 81.66399054193467
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.675
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.675
Total error diversity:				 0.045
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 64697912
--- Timings ---
Current time: 1529614959460 milliseconds
Total Time:         182.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.9 seconds, 40.6%
Fitness Testing:     86.1 seconds, 47.2%
Report:              22.1 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 51315.329499999985
Test mean error for best: 25.65766
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.8010237281  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 18.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 8.295187364   
Correct output: -50.868100625  | Program output: 4.7535824737  
Correct output: 23.5384229728  | Program output: 5.6388891333  
Correct output: -9.9640986393  | Program output: 5.3771891746  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 6.6534544261  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -5.9656683189 
Correct output: 6.5371282958   | Program output: 4.268958283   
Correct output: 183.0405782309 | Program output: 93.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 4.4036711153  
Correct output: 151.8048643924 | Program output: 85.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction tag_integer_818} {:instruction integer_dec})
Best program: (float_shove float_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush tag_integer_818 integer_dec)
Errors: [19.3035 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 14.0 2 100.0 1 42.0 2 55.6217 12 17.8995 10 15.3413 12 76.0 13 31.7738 13 25.0 2 39.0 11 2.2682 9 90.0 2 44.0 2 4.4524 10 66.0 2 45.0 2 22.0 2]
Total: 1079.6604000000002
Mean: 21.593208
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2627.2918157999975
Median total errors in population: 1179.0
Error averages by case: (102.32985649999964 11.657 82.7709123 3.572 82.72197610000002 2.729 77.36224659999999 2.855 60.436768799999996 1.053 97.3042913 3.829 138.05767889999998 2.86 104.0338055 11.312 75.2959464 2.8 154.4573931 2.086 100.69068469999999 2.445 88.06567300000076 6.632 118.36089529999983 11.28 87.85281890000002 6.439 132.1753089 13.353 76.55571520000022 6.916 83.4062922 2.832 98.5447837 11.351 82.47206780000023 11.071 147.9031237 3.318 102.34085499999999 2.656 80.75270429999985 12.051 125.386044 3.359 102.51589799999999 2.714 81.5720756 2.756)
Error minima by case: (1.0586 9 21.0 2 21.0 1 15.0 1 0.0 0 36.0 2 14.511 1 3.979 7 4.6517 2 24.461 1 4.2952 1 8.0 1 0.5074 9 10.3413 1 26.3156 11 4.0 1 6.2863 1 8.9885 9 1.0369 9 5.9594 2 40.3593 2 3.3252 9 10.8049 2 16.5724 2 11.5576 1)
Average genome size in population (length): 46.087
Average program size in population (points): 47.087
Average percent parens in population: 0.022
Minimum age in population: 80.94260070744168
Maximum age in population: 84.75844899653487
Average age in population: 83.11733905473301
Median age in population: 83.1585088921767
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 69
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 69
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.064
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 65864024
--- Timings ---
Current time: 1529614962788 milliseconds
Total Time:         185.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.2 seconds, 40.5%
Fitness Testing:     87.6 seconds, 47.2%
Report:              22.5 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 51315.329499999985
Test mean error for best: 25.65766
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.8010237281  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 18.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 8.295187364   
Correct output: -50.868100625  | Program output: 4.7535824737  
Correct output: 23.5384229728  | Program output: 5.6388891333  
Correct output: -9.9640986393  | Program output: 5.3771891746  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 6.6534544261  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -5.9656683189 
Correct output: 6.5371282958   | Program output: 4.268958283   
Correct output: 183.0405782309 | Program output: 93.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 4.4036711153  
Correct output: 151.8048643924 | Program output: 85.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_sub} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction tag_integer_818} {:instruction integer_dec})
Best program: (float_shove float_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_sub float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush tag_integer_818 integer_dec)
Errors: [19.3035 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 14.0 2 100.0 1 42.0 2 55.6217 12 17.8995 10 15.3413 12 76.0 13 31.7738 13 25.0 2 39.0 11 2.2682 9 90.0 2 44.0 2 4.4524 10 66.0 2 45.0 2 22.0 2]
Total: 1079.6604000000002
Mean: 21.593208
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2424.3789675000153
Median total errors in population: 1093.6604
Error averages by case: (78.69411590000064 11.041 75.96089020000001 3.143 75.85340499999998 2.687 70.6596002 2.82 53.42710319999999 1.392 90.9850802 3.803 132.20794030000002 2.841 96.6876545 11.26 70.8187477 2.859 148.43404619999998 2.452 95.9221517 2.455 100.27075740000174 11.235 79.93368449999969 10.21 67.60430380000004 11.359 124.97384909999998 13.289 79.19780060000042 11.789 77.19454450000002 2.801 94.55327429999997 11.292 62.11557299999929 9.6 144.52521509999997 3.165 95.18122520000001 2.625 63.62679350000027 10.576 121.64051719999999 3.22 96.33352799999999 2.703 74.24216619999999 2.718)
Error minima by case: (14.5921 9 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 67.489 2 8.9714 9 3.6517 1 74.539 1 40.0 1 9.0 1 17.8995 9 9.3413 1 25.7343 11 5.0 1 17.7137 2 32.1255 9 2.2682 8 4.9594 2 35.5945 2 4.4524 9 11.8049 2 27.4276 2 11.4762 1)
Average genome size in population (length): 41.383
Average program size in population (points): 42.383
Average percent parens in population: 0.024
Minimum age in population: 82.17291640961605
Maximum age in population: 86.52820483716533
Average age in population: 84.62845660379288
Median age in population: 84.66293930590427
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 166
Genome diversity (% unique Plush genomes):	 0.529
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 166
Syntactic diversity (% unique Push programs):	 0.529
Total error diversity:				 0.061
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 66901749
--- Timings ---
Current time: 1529614965961 milliseconds
Total Time:         188.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        76.5 seconds, 40.5%
Fitness Testing:     89.1 seconds, 47.2%
Report:              23.0 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 50591.323699999986
Test mean error for best: 25.29566
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 6.8010237281  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 19.3482587745 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 9.295187364   
Correct output: -50.868100625  | Program output: 5.7535824737  
Correct output: 23.5384229728  | Program output: 6.6388891333  
Correct output: -9.9640986393  | Program output: 6.3771891746  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 7.6534544261  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: -4.9656683189 
Correct output: 6.5371282958   | Program output: 5.268958283   
Correct output: 183.0405782309 | Program output: 94.0405782309 
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 5.4036711153  
Correct output: 151.8048643924 | Program output: 86.8048643924 
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_dec} {:instruction print_float} {:instruction float_max} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult})
Best program: (float_shove float_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc float_inc float_inc float_inc in1 float_max float_inc in1 float_yankdup integer_flush integer_dec print_float float_max integer_stackdepth integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult)
Errors: [18.3035 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 13.0 2 99.0 2 41.0 2 56.6217 12 16.8995 10 16.3413 12 75.0 13 32.7738 13 24.0 2 38.0 11 1.2682 9 89.0 3 43.0 2 3.4524 10 65.0 3 44.0 2 21.0 2]
Total: 1066.6604000000002
Mean: 21.333208
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2370.4700533000146
Median total errors in population: 1093.6604
Error averages by case: (75.10154780000019 11.164 74.7068943 2.892 74.59126419999998 2.65 69.71266739999999 2.797 50.59309769999999 1.469 90.263032 3.789 131.1428399 2.841 95.43617439999998 11.212 68.01352000000004 2.86 147.45988780000002 2.668 93.1062995 2.754 97.12048010000186 11.219 76.37270829999967 10.448 64.16497560000003 11.379 123.67140799999999 13.23 75.86888540000017 11.628 76.06671820000003 2.81 91.80326559999995 11.247 58.18485709999922 9.558 142.62076899999994 2.905 93.85374930000002 2.589 59.79470960000051 10.525 119.56219199999997 2.991 95.28023839999999 2.705 73.0058717 2.642)
Error minima by case: (5.5221 9 21.0 2 21.0 2 11.426 2 0.0 0 36.0 2 29.0255 2 9.7245 7 12.7658 1 55.9754 1 30.7128 1 10.0 1 3.956 9 9.3413 2 26.6689 11 6.0 1 23.0 2 13.4519 9 1.2682 9 89.0 2 20.2495 2 3.4524 9 65.0 2 6.9132 2 7.0764 1)
Average genome size in population (length): 42.905
Average program size in population (points): 43.905
Average percent parens in population: 0.023
Minimum age in population: 83.85008617306283
Maximum age in population: 88.25829936152513
Average age in population: 86.16215159318382
Median age in population: 86.21311851518784
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 144
Genome diversity (% unique Plush genomes):	 0.58
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 144
Syntactic diversity (% unique Push programs):	 0.58
Total error diversity:				 0.063
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 67978699
--- Timings ---
Current time: 1529614969110 milliseconds
Total Time:         191.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.8 seconds, 40.5%
Fitness Testing:     90.6 seconds, 47.2%
Report:              23.4 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 51465.12
Test mean error for best: 25.73256
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 8.7751937037  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 20.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 10.295187364  
Correct output: -50.868100625  | Program output: 7.5912692192  
Correct output: 23.5384229728  | Program output: 8.542797282   
Correct output: -9.9640986393  | Program output: 8.2400545097  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 24.9483248664 
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: 16.9163588939 
Correct output: 6.5371282958   | Program output: 6.8083196311  
Correct output: 183.0405782309 | Program output: 95.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 7.0907145954  
Correct output: 151.8048643924 | Program output: 87.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove float_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc float_inc float_tan float_inc in1 float_max float_inc float_inc in1 float_max float_inc float_inc float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [16.3293 12 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 12.0 2 100.0 1 40.0 1 58.4594 11 14.9956 6 18.2042 10 76.0 13 50.0686 11 25.0 2 16.118 11 0.2712 10 88.0 3 44.0 2 1.7654 9 64.0 3 45.0 2 22.0 2]
Total: 1056.2117
Mean: 21.124233
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2420.1538617000137
Median total errors in population: 1079.6604000000002
Error averages by case: (76.56030010000023 10.795 76.61750459999999 3.285 76.56592479999999 2.633 70.890277 2.803 53.83925579999999 1.05 91.36481460000006 3.73 132.38155740000002 2.829 97.96103229999999 11.21 69.43257890000004 2.86 149.17020250000007 2.247 94.22456770000001 2.744 101.71949780000195 11.123 77.96852449999966 10.434 68.85564230000004 11.365 126.23447069999999 13.21 80.48577759999984 12.014 76.69724040000004 2.794 92.89015469999995 11.253 59.67363899999913 9.587 144.01144729999996 2.951 96.1804742 2.569 61.222685200000804 10.543 121.18056979999999 3.053 96.28068739999999 2.682 75.40403509999999 2.577)
Error minima by case: (16.3293 10 7.1934 2 0.647 2 15.0 2 0.0 0 36.0 2 15.511 1 8.9714 9 12.0 1 25.461 1 3.2952 1 10.0 1 14.9956 6 9.3413 1 26.3133 10 6.0 1 7.2863 1 10.9657 10 0.2712 8 88.0 2 30.435 2 1.7654 8 64.0 2 17.5724 1 9.2553 1)
Average genome size in population (length): 48.004
Average program size in population (points): 49.004
Average percent parens in population: 0.021
Minimum age in population: 84.85008617306283
Maximum age in population: 89.79050850165169
Average age in population: 87.5390928492679
Median age in population: 87.62624262121678
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.64
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.64
Total error diversity:				 0.084
Error (vector) diversity:			 0.091
Behavioral diversity:				 0.093
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 69189199
--- Timings ---
Current time: 1529614972380 milliseconds
Total Time:         195.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.1 seconds, 40.5%
Fitness Testing:     92.1 seconds, 47.2%
Report:              23.8 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 51129.31919999998
Test mean error for best: 25.56466
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 7.645622878   
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 20.3482587745 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 10.295187364  
Correct output: -50.868100625  | Program output: 2.5901907424  
Correct output: 23.5384229728  | Program output: 7.4501819331  
Correct output: -9.9640986393  | Program output: 7.0411318619  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 8.5618055546  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: 8.4943403439  
Correct output: 6.5371282958   | Program output: 11.2118058598 
Correct output: 183.0405782309 | Program output: 95.0405782309 
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 13.9277252655 
Correct output: 151.8048643924 | Program output: 87.8048643924 
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove float_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_inc in1 float_max float_inc float_inc float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [17.4589 11 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 12.0 2 100.0 1 40.0 1 53.4583 10 16.0882 11 17.0052 10 76.0 13 33.6821 11 25.0 2 24.54 10 4.6747 10 88.0 3 44.0 2 5.0716 11 64.0 3 45.0 2 22.0 2]
Total: 1055.9789999999998
Mean: 21.11958
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2521.402050500014
Median total errors in population: 1079.6604000000002
Error averages by case: (79.82646530000011 10.696 80.7463812 3.611 80.7228597 2.697 75.19732610000001 2.914 59.47541 0.972 95.63467019999997 3.904 136.3966421 2.93 102.11917349999999 11.311 72.1225738 2.906 152.57171290000005 2.083 98.08476500000002 2.808 107.01918570000198 11.343 81.06571399999966 10.555 74.48595810000002 11.337 130.3100067 13.348 86.07126199999999 12.162 81.61384690000003 2.889 95.2731139 11.365 63.15291749999919 9.645 146.2582252 3.038 100.33149570000002 2.628 64.73632390000023 10.586 123.52384189999998 3.079 100.75666120000001 2.781 79.61351799999998 2.704)
Error minima by case: (16.3035 10 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 33.372 2 9.7245 10 11.0 2 32.2877 1 28.5514 1 10.0 1 14.8995 6 2.3644 1 26.6689 12 6.0 1 14.5671 2 16.118 9 0.2682 8 87.0 2 38.8319 2 1.4524 8 63.0 2 43.0 2 11.506 1)
Average genome size in population (length): 51.549
Average program size in population (points): 52.549
Average percent parens in population: 0.020
Minimum age in population: 86.22632882661043
Maximum age in population: 90.91047195916684
Average age in population: 88.9700234985604
Median age in population: 89.01028545147223
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.711
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.711
Total error diversity:				 0.077
Error (vector) diversity:			 0.084
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 70493149
--- Timings ---
Current time: 1529614975873 milliseconds
Total Time:         198.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        80.4 seconds, 40.5%
Fitness Testing:     93.7 seconds, 47.2%
Report:              24.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 50046.92790000003
Test mean error for best: 25.02346
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.6020474562  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 29.6965175489 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 9.5903747279  
Correct output: -50.868100625  | Program output: 2.5071649473  
Correct output: 23.5384229728  | Program output: 4.2777782666  
Correct output: -9.9640986393  | Program output: 3.7543783492  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 6.3069088523  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -18.9313366378
Correct output: 6.5371282958   | Program output: 1.5379165659  
Correct output: 183.0405782309 | Program output: 179.0811564618
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 1.8073422306  
Correct output: 151.8048643924 | Program output: 164.6097287848
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_cos} {:instruction float_max} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_tan} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction tag_integer_818} {:instruction integer_dec})
Best program: (float_shove integer_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_cos float_max in1 float_max float_inc float_tan in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_dup float_inc float_inc float_add in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush tag_integer_818 integer_dec)
Errors: [20.5024 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 2.6517 10 100.0 1 40.7048 10 53.3753 11 19.2606 12 13.7185 9 76.0 13 31.4272 11 25.0 2 51.9657 9 4.9992 7 3.9594 11 44.0 2 7.0488 10 12.8049 11 45.0 2 22.0 2]
Total: 970.4184999999997
Mean: 19.40837
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2572.628545000016
Median total errors in population: 1079.6604000000002
Error averages by case: (81.18121890000013 10.91 83.56430569999999 3.376 83.5148803 2.668 78.7736101 2.841 55.01277229999999 1.118 98.95570680000002 3.782 139.8801089 2.865 104.69012629999999 11.292 74.29818810000002 2.866 155.99124819999997 2.21 97.36065550000001 2.736 109.2738202000016 11.418 82.76416539999964 10.52 75.35301050000001 11.372 132.75614670000002 13.334 86.53597479999993 12.057 85.31836850000002 2.804 98.58073680000003 11.351 64.58745849999946 9.646 148.5050957 3.237 102.9196311 2.612 66.17849730000054 10.479 125.90169279999998 3.267 104.3064693 2.694 82.3156563 2.654)
Error minima by case: (15.3035 9 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 81.0 1 9.598 8 2.6517 1 98.0 1 2.6565 1 10.0 1 13.8995 6 2.3644 2 27.2632 11 6.0 1 23.0 1 14.6044 9 0.2682 7 3.9594 2 7.8068 2 0.4524 8 12.8049 2 43.0 1 11.506 1)
Average genome size in population (length): 50.299
Average program size in population (points): 51.299
Average percent parens in population: 0.020
Minimum age in population: 87.90118996166836
Maximum age in population: 92.77262010962038
Average age in population: 90.52990880039593
Median age in population: 90.54164250452641
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.702
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.702
Total error diversity:				 0.098
Error (vector) diversity:			 0.112
Behavioral diversity:				 0.114
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 71763200
--- Timings ---
Current time: 1529614979347 milliseconds
Total Time:         202.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.8 seconds, 40.5%
Fitness Testing:     95.3 seconds, 47.2%
Report:              24.8 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 50046.92790000003
Test mean error for best: 25.02346
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.6020474562  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 29.6965175489 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 9.5903747279  
Correct output: -50.868100625  | Program output: 2.5071649473  
Correct output: 23.5384229728  | Program output: 4.2777782666  
Correct output: -9.9640986393  | Program output: 3.7543783492  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 6.3069088523  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -18.9313366378
Correct output: 6.5371282958   | Program output: 1.5379165659  
Correct output: 183.0405782309 | Program output: 179.0811564618
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 1.8073422306  
Correct output: 151.8048643924 | Program output: 164.6097287848
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_cos} {:instruction float_max} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_tan} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction tag_integer_818} {:instruction integer_dec})
Best program: (float_mult integer_yankdup integer_swap integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_cos float_max in1 float_max float_inc float_tan in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_dup float_inc float_inc float_add in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush tag_integer_818 integer_dec)
Errors: [20.5024 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 2.6517 10 100.0 1 40.7048 10 53.3753 11 19.2606 12 13.7185 9 76.0 13 31.4272 11 25.0 2 51.9657 9 4.9992 7 3.9594 11 44.0 2 7.0488 10 12.8049 11 45.0 2 22.0 2]
Total: 970.4184999999997
Mean: 19.40837
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2801.0783893000125
Median total errors in population: 1072.8638
Error averages by case: (91.75686069999925 11.422 91.882928 3.26 91.8699084 2.763 86.45031890000003 3.002 66.9860693 1.46 106.64402390000005 3.847 147.55374619999998 3.013 113.0720073 11.35 84.59758489999999 2.95 163.64085770000008 2.58 107.57943290000001 2.749 118.74339400000139 11.078 93.05256069999957 10.548 86.74092690000006 11.0 140.91646529999997 13.404 98.13283479999917 11.655 93.01213940000004 2.946 105.63847539999998 11.322 75.46318730000036 9.873 156.1880167 3.644 111.2746985 2.669 76.78274269999979 10.611 133.9377487 3.724 111.97417109999999 2.827 90.82528959999999 2.665)
Error minima by case: (11.3035 9 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 81.0 2 9.7337 10 2.6517 1 98.0 1 34.0 1 9.0 1 5.9575 6 9.3413 2 26.7307 10 4.3465 1 23.0 2 16.118 2 0.2682 7 3.9594 2 37.8755 1 0.0287 8 12.8049 2 43.0 2 10.112 1)
Average genome size in population (length): 47.65
Average program size in population (points): 48.65
Average percent parens in population: 0.022
Minimum age in population: 89.37964090356272
Maximum age in population: 94.12242086574484
Average age in population: 92.10970547201383
Median age in population: 92.16610267773214
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 66
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.113
Error (vector) diversity:			 0.126
Behavioral diversity:				 0.13
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 72961475
--- Timings ---
Current time: 1529614982722 milliseconds
Total Time:         205.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.1 seconds, 40.4%
Fitness Testing:     96.9 seconds, 47.2%
Report:              25.3 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 50437.50550000003
Test mean error for best: 25.21875
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 12.6020474562 
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 37.6965175489 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 17.5903747279 
Correct output: -50.868100625  | Program output: 10.5071649473 
Correct output: 23.5384229728  | Program output: 12.2777782666 
Correct output: -9.9640986393  | Program output: 11.7543783492 
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 14.3069088523 
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -10.9313366378
Correct output: 6.5371282958   | Program output: 9.5379165659  
Correct output: 183.0405782309 | Program output: 187.0811564618
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 9.8073422306  
Correct output: 151.8048643924 | Program output: 172.6097287848
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove float_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc float_inc float_inc float_inc in1 float_tan float_inc in1 float_max float_inc float_inc in1 float_max float_add float_inc float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [12.5024 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 5.3483 9 100.0 1 32.7048 10 61.3753 11 11.2606 12 21.7185 9 76.0 13 39.4272 11 25.0 2 43.9657 9 3.0008 7 4.0406 10 44.0 2 0.9512 10 20.8049 11 45.0 2 22.0 2]
Total: 963.1002999999998
Mean: 19.262007
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2688.552520100013
Median total errors in population: 1066.1240000000003
Error averages by case: (85.29386909999957 11.394 88.53591199999998 3.483 88.48375269999998 2.758 83.82331630000002 2.974 63.20384919999999 1.321 103.94955260000002 3.9 144.50426339999999 2.985 109.46251659999999 11.296 78.17627030000001 3.136 160.54296850000003 2.345 102.44521220000006 2.841 112.60720740000112 10.69 87.51284869999954 10.579 82.37439589999993 10.579 137.3799628 13.332 93.9980040999998 11.49 90.23678420000002 2.939 97.47379809999973 10.93 70.57987820000024 9.853 149.37341530000003 3.996 107.76627030000002 2.667 71.1489351 10.722 127.55066610000002 4.06 109.1199811 2.784 87.21888989999998 2.736)
Error minima by case: (7.8619 8 21.0 2 21.0 1 15.0 2 0.0 0 36.0 2 81.0 2 8.7245 10 2.6517 1 98.0 1 32.7048 1 5.0 1 0.9575 5 1.502 1 25.6689 10 1.0 1 23.0 2 8.1629 1 0.0245 7 3.9594 2 33.5945 1 0.0287 8 12.8049 2 43.0 1 10.112 1)
Average genome size in population (length): 52.331
Average program size in population (points): 53.331
Average percent parens in population: 0.020
Minimum age in population: 90.37964090356272
Maximum age in population: 95.6458446511076
Average age in population: 93.5427423462926
Median age in population: 93.5919538073096
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 43
Genome diversity (% unique Plush genomes):	 0.654
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 43
Syntactic diversity (% unique Push programs):	 0.654
Total error diversity:				 0.166
Error (vector) diversity:			 0.177
Behavioral diversity:				 0.177
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 74273912
--- Timings ---
Current time: 1529614986134 milliseconds
Total Time:         208.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.4 seconds, 40.4%
Fitness Testing:     98.6 seconds, 47.2%
Report:              25.8 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 49994.661700000026
Test mean error for best: 24.99733
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 8.6020474562  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 33.6965175489 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 13.5903747279 
Correct output: -50.868100625  | Program output: 6.5071649473  
Correct output: 23.5384229728  | Program output: 8.2777782666  
Correct output: -9.9640986393  | Program output: 7.7543783492  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 10.3069088523 
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: -5.9656683189 
Correct output: 6.5371282958   | Program output: 5.5379165659  
Correct output: 183.0405782309 | Program output: 183.0811564618
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 5.8073422306  
Correct output: 151.8048643924 | Program output: 168.6097287848
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction in1} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_cos} {:instruction float_max} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_tan} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove float_yankdup integer_yank integer_fromfloat print_float integer_mult in1 integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc float_inc in1 float_tan float_inc float_cos float_max in1 float_max float_inc float_tan in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_dup float_inc float_inc float_add in1 float_max float_inc float_inc float_inc float_inc in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [16.5024 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 1.3483 9 100.0 1 36.7048 10 57.3753 11 15.2606 12 17.7185 9 76.0 13 35.4272 11 25.0 2 39.0 11 0.9992 7 0.0406 9 44.0 2 3.0488 10 16.8049 11 45.0 2 22.0 2]
Total: 947.2305999999999
Mean: 18.944613
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2740.380866200003
Median total errors in population: 1055.9789999999998
Error averages by case: (87.83747639999925 11.354 92.1036854 3.77 92.03039840000001 2.849 86.17527880000002 3.137 66.6559305 1.355 106.89608970000003 4.065 146.25898780000006 3.138 112.75779340000001 11.379 79.0178982000001 3.985 162.49937000000003 2.295 104.46260130000024 3.541 115.78763980000002 10.451 89.28493009999914 11.135 85.35099969999993 10.074 140.6352055 13.43 97.89577550000064 11.064 91.77953040000001 3.111 96.00372149999946 10.306 72.93323200000061 10.015 143.70123560000027 4.847 111.3310571 2.77 72.85039129999994 10.871 125.04269490000021 4.926 110.82806249999996 2.97 90.59088039999999 2.832)
Error minima by case: (0.2392 9 21.0 2 21.0 2 6.3103 2 0.0 0 36.0 2 11.2892 2 9.7245 10 0.6517 1 25.461 1 3.2952 1 0.6867 1 0.0425 5 8.3844 2 26.6689 10 1.0 1 7.2863 2 2.9265 1 0.0435 7 0.0406 2 32.823 1 0.0287 6 11.8049 2 17.5724 1 4.112 1)
Average genome size in population (length): 61.254
Average program size in population (points): 62.254
Average percent parens in population: 0.017
Minimum age in population: 92.04234530146243
Maximum age in population: 97.02331341882737
Average age in population: 95.16058981513444
Median age in population: 95.17839330786389
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 55
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.221
Error (vector) diversity:			 0.231
Behavioral diversity:				 0.232
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 75812887
--- Timings ---
Current time: 1529614989792 milliseconds
Total Time:         212.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        85.7 seconds, 40.4%
Fitness Testing:    100.3 seconds, 47.2%
Report:              26.3 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 49886.58119999999
Test mean error for best: 24.94329
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 6.5348618114  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: 6.1309413319  
Correct output: 23.5384229728  | Program output: 6.3894502279  
Correct output: -9.9640986393  | Program output: 6.1961431792  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 6.9931870564  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: 6.7256566076  
Correct output: 6.5371282958   | Program output: 6.4708816335  
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 6.3535799029  
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction float_max} {:instruction float_dup_items} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_cos} {:instruction float_cos} {:instruction float_max} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction tag_integer_818} {:instruction integer_dec})
Best program: (float_shove integer_yankdup integer_swap integer_fromfloat print_float float_max float_dup_items integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_cos float_cos float_max in1 float_max float_inc in1 float_max float_dup float_inc float_inc float_add in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush tag_integer_818 integer_dec)
Errors: [18.5696 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 0.6517 9 100.0 1 38.7048 10 56.999 12 17.149 9 16.1602 10 76.0 13 32.1135 11 25.0 2 26.3087 11 0.0662 9 1.9594 10 44.0 2 2.5025 9 14.8049 11 45.0 2 22.0 2]
Total: 933.9895000000001
Mean: 18.67979
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2737.3236457000025
Median total errors in population: 1036.5423999999998
Error averages by case: (89.07637139999932 11.01 93.21456650000002 3.742 93.25812930000002 2.877 87.31240980000001 3.073 67.6482821 1.326 107.55936870000005 3.989 147.50273009999995 3.095 113.78080630000002 11.381 75.98412640000035 6.539 163.4441559 2.284 104.72794400000122 6.416 117.89433590000003 10.645 90.44448129999921 11.641 85.86334770000069 9.693 141.6929101 13.438 96.91222540000058 10.817 93.3283962 3.019 106.22622100000024 9.888 75.32170849999993 9.166 116.85179520000106 7.366 112.37021500000002 2.796 75.70498889999972 10.687 109.33648810000085 7.462 112.40001290000001 2.94 91.33762899999999 2.84)
Error minima by case: (0.2392 9 21.0 2 21.0 1 15.0 2 0.0 0 36.0 2 69.489 2 10.3444 10 0.3454 1 39.4844 1 28.7048 1 3.0 1 0.0425 6 2.6679 1 27.2888 11 1.0 1 19.7137 2 12.118 1 0.0369 7 0.0406 2 36.5401 1 0.0287 6 10.8049 2 29.4276 2 9.4464 1)
Average genome size in population (length): 63.031
Average program size in population (points): 64.031
Average percent parens in population: 0.016
Minimum age in population: 94.0037629865287
Maximum age in population: 98.57004440920883
Average age in population: 96.7487254186469
Median age in population: 96.78328970748001
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.753
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.753
Total error diversity:				 0.221
Error (vector) diversity:			 0.233
Behavioral diversity:				 0.234
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 77406337
--- Timings ---
Current time: 1529614993393 milliseconds
Total Time:         216.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.0 seconds, 40.3%
Fitness Testing:    102.1 seconds, 47.3%
Report:              26.8 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 49886.58119999999
Test mean error for best: 24.94329
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 6.5348618114  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: 6.1309413319  
Correct output: 23.5384229728  | Program output: 6.3894502279  
Correct output: -9.9640986393  | Program output: 6.1961431792  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 6.9931870564  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: 6.7256566076  
Correct output: 6.5371282958   | Program output: 6.4708816335  
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 6.3535799029  
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction print_float} {:instruction float_max} {:instruction float_dup_items} {:instruction integer_max} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_cos} {:instruction float_cos} {:instruction float_max} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction tag_integer_818} {:instruction integer_dec})
Best program: (float_shove integer_yankdup integer_swap integer_fromfloat print_float float_max float_dup_items integer_max float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_cos float_cos float_max in1 float_max float_inc in1 float_max float_dup float_inc float_inc float_add in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush tag_integer_818 integer_dec)
Errors: [18.5696 10 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 0.6517 9 100.0 1 38.7048 10 56.999 12 17.149 9 16.1602 10 76.0 13 32.1135 11 25.0 2 26.3087 11 0.0662 9 1.9594 10 44.0 2 2.5025 9 14.8049 11 45.0 2 22.0 2]
Total: 933.9895000000001
Mean: 18.67979
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3427.781998199998
Median total errors in population: 970.4184999999997
Error averages by case: (118.58017149999868 10.83 121.45998390000001 4.192 121.3870351 3.205 116.30729270000002 3.341 95.97751040000003 1.525 135.77424880000007 4.286 174.9976948 3.362 141.5207192 11.583 103.5829979000005 9.679 190.45503109999999 2.453 132.16971170000278 9.759 147.02257630000113 11.094 119.59343499999818 12.327 115.05544990000136 9.58 168.56714670000005 13.663 127.80634570000171 11.128 122.60739260000001 3.266 142.5300770000004 10.173 105.06821480000075 8.394 114.61647870000121 10.563 140.0821733 3.127 105.82588210000027 10.816 120.41962720000153 10.739 140.9104736 3.178 119.97232819999999 3.229)
Error minima by case: (7.5024 8 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 81.0 2 11.2497 9 0.3454 1 98.0 1 3.2952 1 1.4928 2 1.9575 7 9.9641 1 26.6828 10 0.3465 2 23.0 2 10.2016 2 8.0E-4 6 0.0406 2 30.3572 2 0.0209 6 11.8049 2 43.0 2 10.5309 1)
Average genome size in population (length): 66.179
Average program size in population (points): 67.179
Average percent parens in population: 0.015
Minimum age in population: 95.84031183110152
Maximum age in population: 100.1528179413337
Average age in population: 98.31751965574034
Median age in population: 98.37389844976173
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 55
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.149
Error (vector) diversity:			 0.165
Behavioral diversity:				 0.166
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 79083537
--- Timings ---
Current time: 1529614997072 milliseconds
Total Time:         219.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        88.4 seconds, 40.2%
Fitness Testing:    104.0 seconds, 47.3%
Report:              27.3 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 51582.06220000002
Test mean error for best: 25.79103
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.9532772243  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: -41.5238916198
Correct output: 23.5384229728  | Program output: 5.4975139386  
Correct output: -9.9640986393  | Program output: 4.4484109247  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 7.7763455972  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: 7.6572719436  
Correct output: 6.5371282958   | Program output: 11.2107179576 
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 13.2712754927 
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_sub} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_sub float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [19.1512 8 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 0.6517 9 100.0 1 38.7048 10 9.3442 11 18.0409 11 14.4125 11 76.0 13 32.8967 12 25.0 2 25.3771 11 4.6736 10 1.9594 10 44.0 2 4.4152 12 14.8049 11 45.0 2 22.0 2]
Total: 897.4322
Mean: 17.948645
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3518.3037785000065
Median total errors in population: 963.1002999999998
Error averages by case: (122.08483479999884 10.954 125.68398609999994 4.344 125.34356240000004 3.444 119.71492080000003 3.601 99.44798480000007 2.061 139.65471410000004 4.545 177.1039827 3.633 143.88435180000005 11.601 108.14640109999972 9.157 193.58793150000002 2.808 134.37934960000246 9.631 151.76508250000106 10.959 124.01192099999864 12.212 121.52861210000124 9.618 170.5629261 13.66 132.79529970000146 10.979 124.69663480000001 3.506 141.85266780000026 10.597 108.35405440000012 8.794 120.8092404999996 9.954 143.25220170000006 3.342 108.23608120000017 10.881 128.14107180000138 10.545 143.2189404 3.373 122.37502479999995 3.473)
Error minima by case: (7.9544 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 3.979 7 0.3454 1 25.461 1 3.2952 1 4.2464 1 7.2606 6 1.5209 1 24.8156 10 0.3465 2 7.2863 2 6.5611 2 8.0E-4 6 0.0406 2 29.3572 2 0.0488 6 11.8049 2 17.5724 2 8.2015 2)
Average genome size in population (length): 67.104
Average program size in population (points): 68.104
Average percent parens in population: 0.015
Minimum age in population: 97.17117974226386
Maximum age in population: 101.8811053976962
Average age in population: 99.91084324496364
Median age in population: 99.9502042864016
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 62
Genome diversity (% unique Plush genomes):	 0.771
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 62
Syntactic diversity (% unique Push programs):	 0.771
Total error diversity:				 0.206
Error (vector) diversity:			 0.222
Behavioral diversity:				 0.223
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 80776049
--- Timings ---
Current time: 1529615000798 milliseconds
Total Time:         223.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        89.7 seconds, 40.1%
Fitness Testing:    105.9 seconds, 47.4%
Report:              27.8 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 51582.06220000002
Test mean error for best: 25.79103
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.9532772243  
Correct output: 77.4603744585  | Program output: 100.4603744585
Correct output: 69.6199139907  | Program output: 92.6199139907 
Correct output: -79.9115210399 | Program output: -62.9115210399
Correct output: 56.4063884706  | Program output: 56.4063884706 
Correct output: -128.6303704081 | Program output: -90.6303704081
Correct output: -97.5110187778 | Program output: -14.5110187778
Correct output: -9.7245103294  | Program output: 36.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -24.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: -41.5238916198
Correct output: 23.5384229728  | Program output: 5.4975139386  
Correct output: -9.9640986393  | Program output: 4.4484109247  
Correct output: -26.6689288929 | Program output: 49.3310711071 
Correct output: -25.1203120353 | Program output: 7.7763455972  
Correct output: -31.2863060075 | Program output: -6.2863060075 
Correct output: 33.0343316811  | Program output: 7.6572719436  
Correct output: 6.5371282958   | Program output: 11.2107179576 
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 83.83188624   
Correct output: 8.8560946759   | Program output: 13.2712754927 
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -16.5723573   
Correct output: 12.5060430791  | Program output: 34.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_sub} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_sub float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup float_inc integer_dup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [19.1512 8 23.0 3 23.0 2 17.0 2 0.0 0 38.0 3 83.0 2 46.0 11 0.6517 9 100.0 1 38.7048 10 9.3442 11 18.0409 11 14.4125 11 76.0 13 32.8967 12 25.0 2 25.3771 11 4.6736 10 1.9594 10 44.0 2 4.4152 12 14.8049 11 45.0 2 22.0 2]
Total: 897.4322
Mean: 17.948645
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 4049.597930800006
Median total errors in population: 947.2305999999999
Error averages by case: (143.07661179999914 11.112 147.77079010000006 4.536 147.67409039999998 3.578 141.78193010000004 3.768 123.5269108000001 2.22 160.51473650000003 4.677 197.845363 3.814 166.21656779999998 11.805 128.8785657 9.39 212.89697579999998 2.95 156.40601080000297 9.981 172.99560340000133 11.05 144.59902339999988 11.959 141.0774319000009 10.069 192.47318500000003 13.946 153.08260260000168 11.249 146.9626861 3.643 156.0357691999996 11.568 129.03947900000085 9.447 139.89468900000034 10.117 165.36400509999996 3.473 129.79482840000082 11.006 148.01141750000042 10.948 164.70343929999999 3.498 145.53121809999993 3.64)
Error minima by case: (2.0304 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 1.6452 7 0.113 2 24.461 1 4.2952 1 1.5575 1 1.0071 6 1.4056 1 5.136 9 0.6535 2 0.5186 2 5.5611 8 8.0E-4 6 0.0406 2 36.5945 2 0.0488 6 10.8049 2 16.5724 2 11.6072 2)
Average genome size in population (length): 69.904
Average program size in population (points): 70.904
Average percent parens in population: 0.014
Minimum age in population: 98.76947311371248
Maximum age in population: 103.4009168292375
Average age in population: 101.3541043958704
Median age in population: 101.4077139600067
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.235
Error (vector) diversity:			 0.271
Behavioral diversity:				 0.272
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 82540499
--- Timings ---
Current time: 1529615004566 milliseconds
Total Time:         227.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        91.1 seconds, 40.1%
Fitness Testing:    107.9 seconds, 47.5%
Report:              28.2 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 51046.368400000036
Test mean error for best: 25.52318
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.9532772243  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -42.5238916198
Correct output: 23.5384229728  | Program output: 4.4975139386  
Correct output: -9.9640986393  | Program output: 3.4484109247  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.7763455972  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.6572719436  
Correct output: 6.5371282958   | Program output: 10.2107179576 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 12.2712754927 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_sub} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_sub float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [20.1512 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 8.3442 11 19.0409 11 13.4125 11 75.0 13 31.8967 12 24.0 2 26.3771 11 3.6736 10 2.9594 10 43.0 2 3.4152 12 13.8049 11 44.0 2 21.0 2]
Total: 887.4322
Mean: 17.748644
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3776.4715503
Median total errors in population: 943.0234
Error averages by case: (133.89838759999955 10.937 136.36161099999998 4.408 136.19203220000009 3.543 130.9674668 3.73 115.30789650000008 2.17 150.34926190000004 4.648 187.9381983 3.733 155.1579292 11.694 117.02275170000084 9.273 203.293899 2.981 148.36900990000302 9.837 159.04615000000084 10.919 135.1872318000008 11.148 130.67885650000082 10.358 181.84055310000002 13.757 142.26775510000107 11.293 136.4140787 3.641 139.22046109999917 11.708 119.2927379000005 10.101 127.68632150000231 10.204 154.34234570000004 3.4 119.9636899000011 10.852 134.94167380000133 10.881 154.45767429999998 3.444 134.03557679999992 3.578)
Error minima by case: (1.4976 8 17.456 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 9.0903 9 0.113 2 24.461 1 3.2952 1 8.3442 1 0.3776 7 0.4791 2 26.5928 10 0.7924 1 6.2863 2 3.7225 6 8.0E-4 6 0.0406 2 33.0989 1 0.0488 6 10.8049 2 16.5724 2 3.418 2)
Average genome size in population (length): 65.835
Average program size in population (points): 66.835
Average percent parens in population: 0.015
Minimum age in population: 99.973845800002
Maximum age in population: 105.1053498462908
Average age in population: 102.8633502314575
Median age in population: 102.8960640874813
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.762
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.762
Total error diversity:				 0.223
Error (vector) diversity:			 0.241
Behavioral diversity:				 0.242
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 84200124
--- Timings ---
Current time: 1529615008317 milliseconds
Total Time:         231.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        92.3 seconds, 40.0%
Fitness Testing:    109.8 seconds, 47.6%
Report:              28.7 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 51046.368400000036
Test mean error for best: 25.52318
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.9532772243  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -42.5238916198
Correct output: 23.5384229728  | Program output: 4.4975139386  
Correct output: -9.9640986393  | Program output: 3.4484109247  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.7763455972  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.6572719436  
Correct output: 6.5371282958   | Program output: 10.2107179576 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 12.2712754927 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_sub} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_sub float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [20.1512 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 8.3442 11 19.0409 11 13.4125 11 75.0 13 31.8967 12 24.0 2 26.3771 11 3.6736 10 2.9594 10 43.0 2 3.4152 12 13.8049 11 44.0 2 21.0 2]
Total: 887.4322
Mean: 17.748644
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3002.602368599999
Median total errors in population: 933.6164999999997
Error averages by case: (103.5502717999994 10.432 105.4163225 3.981 105.2679847 3.063 100.40486809999999 3.305 82.55402660000004 1.767 120.41647779999998 4.249 159.53323269999999 3.306 125.48528030000003 11.45 86.87204760000078 8.921 175.52512280000002 2.511 117.77079480000214 9.42 118.25601910000081 10.583 105.27561450000084 10.732 99.19775100000003 10.154 153.10484749999998 13.443 109.43079279999984 10.997 106.1602509 3.252 107.68408769999945 11.288 88.99599359999988 10.243 99.82248840000136 9.799 124.29421320000003 2.985 89.27517640000086 10.997 106.42633710000132 10.514 124.7642175 3.089 103.51514919999998 3.122)
Error minima by case: (0.1653 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 66.489 2 2.979 7 0.113 2 73.539 1 18.9883 1 5.3442 2 0.3453 7 0.4791 2 25.3156 10 0.7924 2 16.7137 2 8.2016 6 0.0287 6 0.0406 2 31.4742 2 0.1547 6 11.8049 2 26.4276 2 5.7018 2)
Average genome size in population (length): 64.821
Average program size in population (points): 65.821
Average percent parens in population: 0.015
Minimum age in population: 100.973845800002
Maximum age in population: 106.912958215889
Average age in population: 104.4099424911574
Median age in population: 104.4591027928196
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.25
Error (vector) diversity:			 0.257
Behavioral diversity:				 0.257
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 85831599
--- Timings ---
Current time: 1529615011949 milliseconds
Total Time:         234.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        93.7 seconds, 39.9%
Fitness Testing:    111.7 seconds, 47.6%
Report:              29.2 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 50031.88330000001
Test mean error for best: 25.01594
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.2325477245  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -91.6765042969
Correct output: 23.5384229728  | Program output: 4.6352603657  
Correct output: -9.9640986393  | Program output: 3.4717066681  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.1947856343 
Correct output: 6.5371282958   | Program output: 8.0938535697  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.8408746222  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_sub} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_sub float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [19.8719 7 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 40.8084 10 18.9032 11 13.4358 11 75.0 13 31.3185 10 24.0 2 1.8395 9 1.5567 10 2.9594 10 43.0 2 0.9848 8 13.8049 11 44.0 2 21.0 2]
Total: 878.8395999999998
Mean: 17.576792
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2490.188691999999
Median total errors in population: 897.4322
Error averages by case: (83.94323799999914 9.587 85.8087997 3.833 85.62525900000003 2.897 81.33836710000003 3.134 60.55719849999999 1.441 101.84989099999997 4.054 141.33755050000002 3.142 106.01531270000005 11.367 65.30228630000052 8.752 157.63720109999997 2.296 97.26401600000166 9.398 83.89824900000069 10.624 85.16645570000112 11.18 78.71404850000002 10.373 134.24636149999995 13.34 90.44988869999926 11.195 86.8251721 3.121 87.60987729999954 11.193 70.0335727 10.386 77.28699200000084 9.64 105.04340190000003 2.834 68.65451050000092 11.684 84.59732800000118 10.456 105.78892469999994 2.982 83.35778949999997 2.928)
Error minima by case: (0.1653 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 67.489 2 10.0903 11 0.113 2 74.539 1 22.1144 1 4.3442 2 5.2606 7 0.4791 2 26.8156 11 1.2237 1 17.7137 2 1.8395 8 0.0304 6 0.0406 2 38.9654 2 0.1239 6 10.7949 2 27.4276 2 10.462 2)
Average genome size in population (length): 65.581
Average program size in population (points): 66.581
Average percent parens in population: 0.015
Minimum age in population: 102.3677664851611
Maximum age in population: 108.0087286038631
Average age in population: 106.0060103183497
Median age in population: 106.0348218650873
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 54
Genome diversity (% unique Plush genomes):	 0.75
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 54
Syntactic diversity (% unique Push programs):	 0.75
Total error diversity:				 0.194
Error (vector) diversity:			 0.202
Behavioral diversity:				 0.203
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 87476474
--- Timings ---
Current time: 1529615015552 milliseconds
Total Time:         238.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        95.0 seconds, 39.9%
Fitness Testing:    113.5 seconds, 47.6%
Report:              29.7 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 50031.88330000001
Test mean error for best: 25.01594
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.2325477245  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -91.6765042969
Correct output: 23.5384229728  | Program output: 4.6352603657  
Correct output: -9.9640986393  | Program output: 3.4717066681  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.1947856343 
Correct output: 6.5371282958   | Program output: 8.0938535697  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.8408746222  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_sub} {:instruction float_mod} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat print_float integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_yankdup integer_sub float_mod in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [19.8719 7 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 40.8084 10 18.9032 11 13.4358 11 75.0 13 31.3185 10 24.0 2 1.8395 9 1.5567 10 2.9594 10 43.0 2 0.9848 8 13.8049 11 44.0 2 21.0 2]
Total: 878.8395999999998
Mean: 17.576792
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2745.170853799998
Median total errors in population: 897.4322
Error averages by case: (95.10492079999852 9.697 96.19500540000001 3.781 96.1045377 2.951 91.21601360000001 3.156 71.9020778 1.518 111.3085334 4.102 150.491518 3.152 116.62125620000002 11.414 76.08077190000064 8.665 167.02425440000002 2.413 107.27653480000176 9.169 89.25598120000126 10.53 95.87116040000157 11.355 88.46244520000059 10.338 144.4568658 13.442 100.72972189999903 11.201 96.36707709999999 3.123 97.95316569999933 11.29 79.21533889999986 10.497 90.51414410000149 9.544 115.27300349999999 2.852 78.90996190000115 11.954 96.57837740000122 10.328 115.35484739999997 2.967 94.48533929999999 2.979)
Error minima by case: (0.3806 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 9.2736 10 0.113 2 99.0 1 15.3979 1 4.3442 2 3.45 7 1.5209 2 26.7346 10 2.3465 2 24.0 2 1.8395 8 0.1487 7 0.0406 2 37.5945 2 0.0488 7 11.8049 2 44.0 2 10.462 2)
Average genome size in population (length): 65.131
Average program size in population (points): 66.131
Average percent parens in population: 0.015
Minimum age in population: 104.9886332569317
Maximum age in population: 109.9128204236425
Average age in population: 107.4820144326903
Median age in population: 107.4926001385023
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 42
Genome diversity (% unique Plush genomes):	 0.772
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 42
Syntactic diversity (% unique Push programs):	 0.772
Total error diversity:				 0.165
Error (vector) diversity:			 0.175
Behavioral diversity:				 0.176
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 89110049
--- Timings ---
Current time: 1529615019183 milliseconds
Total Time:         241.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.4 seconds, 39.8%
Fitness Testing:    115.3 seconds, 47.7%
Report:              30.1 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 51290.08000000004
Test mean error for best: 25.64504
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 3.9924687642  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.5282660093  
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 29.1128 13 24.0 2 26.5061 12 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 875.3913999999997
Mean: 17.507828
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2507.500707200002
Median total errors in population: 897.1288
Error averages by case: (85.85266199999887 9.725 86.97002030000003 3.329 86.80823869999999 2.893 81.33799940000002 3.044 62.02806579999999 1.849 101.7314611 3.978 141.66007650000003 3.07 107.01630600000003 11.335 67.28161930000064 8.831 157.8575896 2.661 98.66154100000176 9.1 79.71513770000085 10.753 86.04466900000128 11.232 79.04413540000029 10.654 135.2101089 13.355 92.971182799999 11.492 87.28884930000002 3.023 89.8906617999993 11.148 69.47924759999988 10.299 77.34188690000092 9.767 106.06468860000001 2.798 69.55458650000105 11.831 84.3429190000013 10.569 106.16718649999997 2.882 84.6588675 2.903)
Error minima by case: (0.6194 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 52.3042 2 9.9751 9 0.113 2 79.2541 1 27.7048 1 1.4624 2 1.0371 7 1.5209 2 18.5379 11 6.6118 2 13.9205 2 1.8395 8 8.0E-4 6 0.0406 2 34.0989 2 0.0281 7 11.8049 2 16.3655 2 4.418 2)
Average genome size in population (length): 64.667
Average program size in population (points): 65.667
Average percent parens in population: 0.015
Minimum age in population: 106.4440661423152
Maximum age in population: 110.8719097018108
Average age in population: 108.9465533071755
Median age in population: 108.9822782038552
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 76
Genome diversity (% unique Plush genomes):	 0.756
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 76
Syntactic diversity (% unique Push programs):	 0.756
Total error diversity:				 0.184
Error (vector) diversity:			 0.197
Behavioral diversity:				 0.197
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 90730674
--- Timings ---
Current time: 1529615022870 milliseconds
Total Time:         245.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        97.7 seconds, 39.8%
Fitness Testing:    117.2 seconds, 47.7%
Report:              30.6 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 51290.08000000004
Test mean error for best: 25.64504
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 3.9924687642  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.5282660093  
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_yankdup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 29.1128 13 24.0 2 26.5061 12 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 875.3913999999997
Mean: 17.507828
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2610.483726599998
Median total errors in population: 887.4322
Error averages by case: (90.60768869999818 9.884 90.1278323 3.01 89.98610160000003 2.956 83.83807420000002 3.071 69.3063193 2.311 104.2075154 3.998 144.7631457 3.09 110.24307680000003 11.336 72.7580032000011 8.923 160.97810090000004 3.081 105.28942450000254 8.88 84.97640620000105 10.635 91.44183150000191 11.268 82.82110260000059 10.532 138.26003859999997 13.373 95.75497699999873 11.315 90.79063800000002 3.049 92.6770607999995 11.022 73.86287060000042 10.346 84.67233950000144 9.841 109.09951260000003 2.836 73.52698950000126 11.691 90.43175290000154 10.656 109.04830809999999 2.922 88.01961609999998 2.969)
Error minima by case: (0.1653 7 2.9587 2 4.8818 2 16.0 2 0.0 0 37.0 3 70.489 2 8.9714 9 0.3483 2 77.539 1 25.1144 1 1.4624 2 1.0371 8 2.5209 2 26.3133 11 6.3465 2 20.7137 2 0.8395 8 8.0E-4 5 0.0406 2 34.0989 2 0.0488 7 11.8049 2 30.4276 2 4.418 2)
Average genome size in population (length): 63.325
Average program size in population (points): 64.325
Average percent parens in population: 0.016
Minimum age in population: 107.4440661423152
Maximum age in population: 112.2888359796257
Average age in population: 110.3840700399443
Median age in population: 110.4394891669568
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 63
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 63
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.173
Error (vector) diversity:			 0.182
Behavioral diversity:				 0.182
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 92317524
--- Timings ---
Current time: 1529615026470 milliseconds
Total Time:         249.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.0 seconds, 39.7%
Fitness Testing:    118.9 seconds, 47.7%
Report:              31.1 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 51290.08000000004
Test mean error for best: 25.64504
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 3.9924687642  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.5282660093  
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_rot float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 29.1128 13 24.0 2 26.5061 12 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 875.3913999999997
Mean: 17.507828
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2304.134384100008
Median total errors in population: 886.1007999999999
Error averages by case: (79.72164869999935 9.547 77.77039310000002 2.699 77.68100339999998 2.667 72.2755133 2.794 52.74361209999999 1.937 92.58379000000001 3.74 133.72224839999998 2.801 98.72709020000002 11.258 60.062242000000666 8.708 150.06152730000005 2.809 90.91770900000151 8.678 78.89168270000042 10.28 80.6847821000005 11.181 71.73996069999956 10.332 127.09052929999999 13.276 84.30343609999933 10.743 78.88385750000002 2.759 77.61861300000027 10.486 61.47013380000041 10.14 71.81511800000011 9.592 97.28255370000001 2.588 61.22617860000038 10.726 77.40718040000128 10.365 97.89888839999998 2.658 76.10669229999999 2.684)
Error minima by case: (1.6398 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 9.2736 9 0.3483 2 99.0 2 27.1144 1 1.4624 2 1.0371 6 2.5209 2 26.7346 10 4.3465 2 24.0 2 0.1605 8 0.0141 7 0.9594 2 35.8319 2 0.0152 6 11.8049 2 44.0 2 8.506 2)
Average genome size in population (length): 63.746
Average program size in population (points): 64.746
Average percent parens in population: 0.016
Minimum age in population: 108.4440661423152
Maximum age in population: 113.6803354014404
Average age in population: 111.8039748863341
Median age in population: 111.8452225159851
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.177
Error (vector) diversity:			 0.185
Behavioral diversity:				 0.185
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 93915699
--- Timings ---
Current time: 1529615030049 milliseconds
Total Time:         252.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       100.4 seconds, 39.7%
Fitness Testing:    120.7 seconds, 47.8%
Report:              31.6 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 51290.08000000004
Test mean error for best: 25.64504
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 3.9924687642  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.5282660093  
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_sin integer_dec float_flush float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 29.1128 13 24.0 2 26.5061 12 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 875.3913999999997
Mean: 17.507828
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3036.4381918000013
Median total errors in population: 878.8395999999998
Error averages by case: (108.69821709999876 9.543 107.98635119999999 3.157 107.89338140000002 3.13 101.3006472 3.269 83.92158760000004 2.441 121.13500839999999 4.178 161.11967159999998 3.27 127.75720230000005 11.457 89.18226060000114 8.959 177.03073369999998 3.297 120.43786530000266 8.941 115.0662826999997 10.133 110.10090310000028 11.462 100.33601250000102 10.558 155.40770080000001 13.481 110.90099709999893 10.568 108.2033716 3.224 99.96657850000037 10.541 89.63641150000053 10.622 102.48659180000209 9.858 126.86660030000003 3.012 89.37369850000051 9.905 107.84388860000155 10.643 126.08727469999997 3.077 105.82295369999997 3.15)
Error minima by case: (0.2769 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 6.5708 9 0.3483 2 77.539 2 23.1144 1 0.5376 2 1.0371 5 0.2689 2 25.713 10 3.8018 2 20.7137 2 0.1605 8 8.0E-4 6 0.9594 2 36.8777 2 0.0064 7 11.8049 2 30.4276 2 10.7429 2)
Average genome size in population (length): 63.279
Average program size in population (points): 64.279
Average percent parens in population: 0.016
Minimum age in population: 110.9173441872609
Maximum age in population: 115.1602328929665
Average age in population: 113.1594103628401
Median age in population: 113.2131264031293
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.741
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.741
Total error diversity:				 0.205
Error (vector) diversity:			 0.211
Behavioral diversity:				 0.211
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 95501799
--- Timings ---
Current time: 1529615033572 milliseconds
Total Time:         256.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       101.7 seconds, 39.7%
Fitness Testing:    122.5 seconds, 47.8%
Report:              32.0 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 51402.71770000007
Test mean error for best: 25.70136
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.1947856343 
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 float_mult float_tan integer_flush)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 31.3185 10 24.0 2 1.8395 9 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 846.9304999999998
Mean: 16.93861
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2227.8752604999963
Median total errors in population: 878.8395999999998
Error averages by case: (75.37861869999878 10.049 75.08911690000002 2.714 75.05967129999999 2.704 69.19398650000001 2.746 51.54337969999999 1.933 89.50451550000001 3.72 130.9529953 2.761 95.87674390000004 11.265 56.790038700000615 8.732 147.2453617 2.792 88.85664720000122 8.772 76.33535069999968 9.923 76.90807979999957 11.297 68.63868079999983 10.679 124.37230189999998 13.276 80.83264590000056 11.263 75.92746580000001 2.723 71.5202691999998 10.911 57.90657850000061 10.792 68.28162330000025 9.678 94.5725265 2.608 57.44769980000012 9.468 74.72981910000134 10.551 94.9830501 2.645 73.2260937 2.7)
Error minima by case: (1.2769 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 7.5223 8 0.3483 2 77.539 1 25.1144 1 0.4624 2 0.379 5 0.2689 2 26.7997 11 8.9794 2 20.7137 2 0.1605 7 8.0E-4 6 0.9594 2 32.874 2 0.0064 6 11.8049 2 30.4276 2 7.6519 2)
Average genome size in population (length): 61.778
Average program size in population (points): 62.778
Average percent parens in population: 0.016
Minimum age in population: 111.9173441872609
Maximum age in population: 116.3442330276364
Average age in population: 114.3864281286972
Median age in population: 114.4352625751934
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 64
Genome diversity (% unique Plush genomes):	 0.719
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 64
Syntactic diversity (% unique Push programs):	 0.719
Total error diversity:				 0.164
Error (vector) diversity:			 0.168
Behavioral diversity:				 0.168
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 97048874
--- Timings ---
Current time: 1529615037139 milliseconds
Total Time:         259.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       103.1 seconds, 39.7%
Fitness Testing:    124.3 seconds, 47.8%
Report:              32.4 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 51402.71770000007
Test mean error for best: 25.70136
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.1947856343 
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction integer_dec} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 integer_dec integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 float_mult float_tan integer_flush)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 31.3185 10 24.0 2 1.8395 9 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 846.9304999999998
Mean: 16.93861
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2317.8525181000005
Median total errors in population: 875.3913999999997
Error averages by case: (78.66765589999898 11.208 79.16058920000005 2.806 79.17351379999998 2.811 73.93841090000004 2.882 55.302662399999996 2.137 94.37379739999999 3.834 134.92374449999997 2.894 99.39633650000005 11.28 59.41271870000035 8.755 150.97931139999997 2.938 91.61834220000111 8.73 69.2703537999994 9.831 80.63261889999913 11.349 72.45826019999986 10.662 128.01661529999993 13.28 83.66312070000093 12.041 80.04681560000002 2.861 82.61186009999936 11.839 61.779149900000505 11.113 69.11312040000018 9.648 98.60213370000002 2.691 61.52352840000064 9.736 75.97663010000115 10.538 99.08859009999998 2.75 76.69963800000001 2.809)
Error minima by case: (7.041 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 45.0 10 0.3483 2 77.539 1 20.8055 1 0.4624 2 0.379 7 0.2689 2 75.0 11 4.9794 2 20.7137 2 0.1605 8 0.0634 7 0.9594 2 43.0 2 0.0064 7 11.8049 2 30.4276 2 21.0 2)
Average genome size in population (length): 61.116
Average program size in population (points): 62.116
Average percent parens in population: 0.016
Minimum age in population: 112.9173441872609
Maximum age in population: 117.7885799425242
Average age in population: 115.6690348857854
Median age in population: 115.7064268376689
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 74
Genome diversity (% unique Plush genomes):	 0.724
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 74
Syntactic diversity (% unique Push programs):	 0.724
Total error diversity:				 0.143
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 98580049
--- Timings ---
Current time: 1529615040653 milliseconds
Total Time:         263.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       104.3 seconds, 39.6%
Fitness Testing:    126.0 seconds, 47.8%
Report:              32.9 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 51402.71770000007
Test mean error for best: 25.70136
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.1947856343 
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 float_mult float_tan integer_flush)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 31.3185 10 24.0 2 1.8395 9 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 846.9304999999998
Mean: 16.93861
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2099.4881390000005
Median total errors in population: 875.3913999999997
Error averages by case: (69.62433009999882 11.265 70.55840330000004 2.703 70.54701669999997 2.686 64.5347473 2.769 48.6558564 1.911 85.08292479999999 3.724 126.50451410000001 2.775 91.28359210000002 11.243 50.88172630000032 8.774 142.7264497 2.801 84.85276040000109 8.759 59.17439879999916 9.802 72.08322009999902 11.246 63.129040799999885 10.691 119.99083299999997 13.257 74.13847300000107 11.942 71.1329357 2.743 73.01922069999944 11.74 51.990211000000336 11.039 61.5002108999998 9.682 90.14469760000001 2.597 51.47201640000063 9.64 67.9620346000013 10.543 90.34052079999996 2.643 68.4890044 2.694)
Error minima by case: (5.041 7 21.0 2 21.0 2 15.0 2 1.0 1 36.0 2 81.0 2 6.3948 9 0.3483 1 97.6766 2 27.7679 1 0.4624 2 0.379 7 0.2689 2 25.7343 10 5.453 2 23.0 2 1.8395 8 0.0634 7 0.9594 2 38.823 2 0.001 6 11.8049 2 43.0 2 10.112 1)
Average genome size in population (length): 61.474
Average program size in population (points): 62.474
Average percent parens in population: 0.016
Minimum age in population: 114.5053081748332
Maximum age in population: 119.2736898195343
Average age in population: 117.0264871347758
Median age in population: 117.0484329006631
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 43
Genome diversity (% unique Plush genomes):	 0.755
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 43
Syntactic diversity (% unique Push programs):	 0.755
Total error diversity:				 0.163
Error (vector) diversity:			 0.166
Behavioral diversity:				 0.166
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 100120724
--- Timings ---
Current time: 1529615044212 milliseconds
Total Time:         266.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.7 seconds, 39.6%
Fitness Testing:    127.8 seconds, 47.9%
Report:              33.4 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 51402.71770000007
Test mean error for best: 25.70136
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.1947856343 
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction float_mod} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub float_mod float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 float_mult float_tan integer_flush)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 31.3185 10 24.0 2 1.8395 9 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 846.9304999999998
Mean: 16.93861
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2345.7755371000026
Median total errors in population: 875.3913999999997
Error averages by case: (80.14116189999905 11.483 79.80058119999998 2.849 79.7458685 2.826 74.46260350000001 2.968 57.22526099999999 2.119 95.13565200000002 3.904 135.11705920000003 2.997 99.79697550000003 11.262 61.66868640000063 8.734 151.35335129999996 3.032 94.26503210000168 8.727 68.43756929999945 9.368 82.83465289999917 11.165 72.96054469999987 10.492 128.19724619999997 13.263 83.09561310000059 11.396 80.10971030000002 2.979 81.55998629999952 11.577 62.472648400000615 11.01 77.6913874000009 9.625 98.83963960000004 2.709 61.99881340000048 9.577 82.11661720000104 10.371 99.28810229999998 2.837 77.35377339999998 2.837)
Error minima by case: (6.2857 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 8.5925 9 0.3483 2 98.6766 1 18.8055 1 0.4624 2 0.379 7 0.2689 2 25.7288 10 5.8607 2 20.7137 2 1.8395 8 0.0634 7 0.9594 2 36.5945 2 0.0064 7 11.8049 2 30.4276 2 6.718 2)
Average genome size in population (length): 61.679
Average program size in population (points): 62.679
Average percent parens in population: 0.016
Minimum age in population: 116.0360695461086
Maximum age in population: 120.387969496411
Average age in population: 118.4148416956745
Median age in population: 118.402255718092
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.777
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.777
Total error diversity:				 0.179
Error (vector) diversity:			 0.187
Behavioral diversity:				 0.187
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 101666349
--- Timings ---
Current time: 1529615047752 milliseconds
Total Time:         270.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.9 seconds, 39.5%
Fitness Testing:    129.6 seconds, 47.9%
Report:              33.9 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 51402.71770000007
Test mean error for best: 25.70136
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 5.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -49.4057407266
Correct output: 23.5384229728  | Program output: 4.8001435322  
Correct output: -9.9640986393  | Program output: 3.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 6.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.1947856343 
Correct output: 6.5371282958   | Program output: 8.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.8496633699 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_tan float_inc in1 float_max float_inc float_inc integer_shove float_inc float_tan float_max float_inc float_inc float_add float_tan float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 float_mult float_tan integer_flush)
Errors: [19.6182 11 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 1.4624 10 18.7383 11 13.5098 11 75.0 13 31.3185 10 24.0 2 1.8395 9 2.3294 11 2.9594 10 43.0 2 1.9936 9 13.8049 11 44.0 2 21.0 2]
Total: 846.9304999999998
Mean: 16.93861
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2478.2484836000035
Median total errors in population: 874.3913999999997
Error averages by case: (85.8699881999991 11.56 85.5278701 2.903 85.6897052 2.888 79.59451170000001 2.942 60.9103818 2.148 99.88682389999997 3.879 140.41142599999998 2.944 105.67131210000004 11.361 67.59960860000055 8.966 156.37256960000002 2.974 98.15158200000161 8.887 75.62544899999976 9.426 87.77971339999922 11.096 78.01538109999987 10.554 133.88974059999998 13.385 89.5522676000001 10.801 85.8370486 2.911 81.95142309999986 11.036 67.77808090000052 10.98 84.18063250000112 9.829 104.65450340000001 2.795 67.61465240000027 9.476 87.65375010000105 10.567 104.80885099999996 2.808 83.21621069999998 2.889)
Error minima by case: (7.041 7 22.0 2 22.0 2 13.2565 2 0.0 0 37.0 3 82.0 2 8.9714 9 0.3483 2 98.6766 2 20.8055 1 0.4624 2 0.379 7 0.7311 2 26.3133 10 2.9794 2 22.5803 2 0.1605 8 0.0141 7 0.9594 2 33.8141 2 0.0064 6 9.8049 2 44.0 2 3.718 2)
Average genome size in population (length): 62.864
Average program size in population (points): 63.864
Average percent parens in population: 0.016
Minimum age in population: 117.0360695461086
Maximum age in population: 121.8038134650496
Average age in population: 119.6945432030024
Median age in population: 119.7233535381253
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.723
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.723
Total error diversity:				 0.214
Error (vector) diversity:			 0.221
Behavioral diversity:				 0.222
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 103240724
--- Timings ---
Current time: 1529615051358 milliseconds
Total Time:         274.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.2 seconds, 39.5%
Fitness Testing:    131.4 seconds, 47.9%
Report:              34.3 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 51338.05780000007
Test mean error for best: 25.66903
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 4.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_mult} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_mult in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 29.3185 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 841.0184999999998
Mean: 16.82037
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2564.821595500003
Median total errors in population: 846.9304999999998
Error averages by case: (88.27155459999894 11.305 88.63808339999999 2.967 88.545269 2.966 83.70598170000001 3.047 67.3018213 2.29 104.09477629999998 3.992 144.11383700000002 3.055 108.43505120000003 11.364 69.74419350000076 8.915 160.1591292 3.1 101.687995300002 8.846 84.38555339999994 9.875 90.43785239999914 11.33 81.4384753999999 10.625 136.56112269999994 13.363 93.579955199999 10.12 90.04483880000001 3.009 76.99200410000049 10.161 71.24090610000079 11.108 90.6577515000018 9.787 107.62410900000003 2.859 71.15010380000058 9.878 90.73401670000126 10.628 108.68720729999998 2.896 86.13200659999998 2.972)
Error minima by case: (2.8889 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 8.9751 8 0.3483 2 77.539 2 14.1737 1 0.4624 2 0.379 6 6.0001 2 24.816 9 4.8018 2 20.7137 2 0.1605 8 0.0348 7 0.3246 2 37.7595 2 1.0E-4 5 8.0445 2 30.4276 2 3.8347 2)
Average genome size in population (length): 64.514
Average program size in population (points): 65.514
Average percent parens in population: 0.015
Minimum age in population: 118.0360695461086
Maximum age in population: 123.1590872985673
Average age in population: 120.957990880745
Median age in population: 121.0097392666119
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 66
Genome diversity (% unique Plush genomes):	 0.722
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.722
Total error diversity:				 0.203
Error (vector) diversity:			 0.211
Behavioral diversity:				 0.211
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 104855074
--- Timings ---
Current time: 1529615055081 milliseconds
Total Time:         277.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.6 seconds, 39.4%
Fitness Testing:    133.3 seconds, 48.0%
Report:              34.8 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 51338.05780000007
Test mean error for best: 25.66903
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 4.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_mult} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_mult in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 29.3185 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 841.0184999999998
Mean: 16.82037
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2439.2997322000033
Median total errors in population: 846.9304999999998
Error averages by case: (84.70455629999887 11.208 83.11205330000001 2.806 83.0715645 2.795 78.35680560000002 2.891 59.962613399999995 2.071 98.55312809999998 3.846 139.365069 2.901 103.71360960000003 11.297 66.22252120000057 8.732 155.35777809999993 2.956 97.55972330000178 8.685 76.42507959999962 9.817 86.54036849999906 11.326 77.83213409999992 10.524 132.079901 13.295 90.4452336999992 9.909 84.79850980000002 2.884 71.37008770000051 9.939 67.55386730000068 11.076 84.81621990000104 9.631 102.59267650000001 2.699 67.56112000000057 9.835 85.24683980000127 10.481 103.70430159999998 2.757 81.18697030000001 2.806)
Error minima by case: (6.9282 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 12.3745 10 0.3483 2 77.539 2 25.1144 1 0.4624 2 0.379 7 3.9573 2 30.477 11 5.8018 2 20.7137 2 0.1605 8 0.0164 7 0.9594 2 36.2436 2 0.0064 5 8.0445 2 30.4276 2 3.8347 2)
Average genome size in population (length): 65.116
Average program size in population (points): 66.116
Average percent parens in population: 0.015
Minimum age in population: 119.6752918082353
Maximum age in population: 124.4191688817614
Average age in population: 122.3646392266827
Median age in population: 122.4222610309896
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 48
Genome diversity (% unique Plush genomes):	 0.747
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 48
Syntactic diversity (% unique Push programs):	 0.747
Total error diversity:				 0.196
Error (vector) diversity:			 0.199
Behavioral diversity:				 0.2
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 106483849
--- Timings ---
Current time: 1529615058663 milliseconds
Total Time:         281.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.9 seconds, 39.4%
Fitness Testing:    135.1 seconds, 48.0%
Report:              35.3 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 51364.092200000065
Test mean error for best: 25.68205
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: -50.4057407266
Correct output: 23.5384229728  | Program output: 3.8001435322  
Correct output: -9.9640986393  | Program output: 2.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 5.1981827536  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 30.1947856343 
Correct output: 6.5371282958   | Program output: 7.8665396064  
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.8496633699  
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_mult} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_tan float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_mult in1 float_max float_inc float_dup float_inc float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.6517 9 99.0 2 38.7048 10 0.4624 8 19.7383 10 12.5098 11 75.0 13 30.3185 9 24.0 2 2.8395 9 1.3294 11 1.9594 10 43.0 2 0.9936 8 14.8049 11 44.0 2 21.0 2]
Total: 839.9304999999998
Mean: 16.79861
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2221.6819648000023
Median total errors in population: 846.9304999999998
Error averages by case: (76.27173819999904 11.342 75.80743260000003 2.775 75.67298619999998 2.753 69.99232370000001 2.834 50.1941493 2.033 90.55167129999998 3.786 131.22322909999997 2.843 95.97977220000004 11.261 57.51791610000061 8.687 147.50745949999998 2.875 88.01030590000138 8.633 65.42277369999914 9.507 78.48742649999922 11.224 68.75172719999989 10.388 124.46809579999997 13.235 80.8306739999994 9.724 76.10283 2.8 62.78981510000036 9.916 58.77120140000054 11.072 73.26333240000025 9.52 95.03098209999999 2.669 58.35223540000054 9.681 76.59539710000112 10.374 95.2602148 2.716 73.42227520000002 2.756)
Error minima by case: (5.5899 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 78.969 2 8.5223 10 0.3483 2 99.0 2 14.5103 1 0.4624 2 1.621 7 0.2689 2 11.7924 10 4.8012 2 3.8444 2 1.1605 8 0.0634 8 0.0406 2 34.7358 2 0.0064 7 11.8049 2 43.4297 2 8.4363 2)
Average genome size in population (length): 65.163
Average program size in population (points): 66.163
Average percent parens in population: 0.015
Minimum age in population: 120.761642523722
Maximum age in population: 125.9123462407297
Average age in population: 123.8355955070056
Median age in population: 123.8815946615541
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.756
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.756
Total error diversity:				 0.204
Error (vector) diversity:			 0.21
Behavioral diversity:				 0.21
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 108113999
--- Timings ---
Current time: 1529615062300 milliseconds
Total Time:         285.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.2 seconds, 39.4%
Fitness Testing:    136.9 seconds, 48.0%
Report:              35.8 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2237.3943493000043
Median total errors in population: 846.9304999999998
Error averages by case: (76.30438569999919 11.555 76.33515990000002 2.854 76.2031068 2.856 70.30708270000002 2.918 53.804005499999995 2.045 90.8434609 3.848 131.43921550000002 2.915 96.47903740000004 11.286 57.78191980000048 8.995 147.59129319999997 2.969 90.15458310000113 8.956 67.38181429999977 9.407 78.16309769999931 10.937 68.28740539999984 10.573 125.10437869999997 13.261 80.83399429999959 9.857 76.3050415 2.903 63.15874100000025 10.114 57.97070490000043 10.866 74.06003340000031 9.88 95.67251009999998 2.738 57.91006300000011 9.225 78.79506650000094 10.628 95.48048039999998 2.79 73.81176760000002 2.84)
Error minima by case: (1.0737 7 17.456 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 8.5223 10 0.3454 2 24.461 1 4.2952 1 0.4624 2 1.0371 7 2.7311 2 29.1976 10 4.3977 2 6.2863 2 0.1605 8 0.0634 7 0.9594 2 34.7358 2 0.0064 7 10.8049 2 16.5724 2 8.4363 2)
Average genome size in population (length): 64.965
Average program size in population (points): 65.965
Average percent parens in population: 0.015
Minimum age in population: 122.8143182861484
Maximum age in population: 127.6509181234705
Average age in population: 125.3927051897965
Median age in population: 125.4503008481361
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 53
Genome diversity (% unique Plush genomes):	 0.724
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 53
Syntactic diversity (% unique Push programs):	 0.724
Total error diversity:				 0.246
Error (vector) diversity:			 0.254
Behavioral diversity:				 0.254
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 109739799
--- Timings ---
Current time: 1529615065900 milliseconds
Total Time:         288.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.5 seconds, 39.3%
Fitness Testing:    138.7 seconds, 48.1%
Report:              36.3 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2845.7128704000042
Median total errors in population: 845.9304999999998
Error averages by case: (100.78113119999895 11.919 101.07504499999999 3.17 100.7756108 3.151 95.31124740000004 3.291 77.0718555 2.374 115.59272709999996 4.189 154.26598270000005 3.284 120.01758110000007 11.423 82.38610640000077 8.972 170.12592159999994 3.328 113.50352590000199 8.952 90.2788837 9.283 104.25169839999901 10.876 91.53268489999988 10.694 147.7724745 13.439 103.34254329999884 9.957 100.64410240000002 3.25 87.95703270000055 10.562 81.93175020000079 10.75 103.87033880000185 9.911 119.46430260000001 3.018 82.36132129999945 8.991 102.2957231000013 10.637 119.31351089999997 3.082 98.1237689 3.163)
Error minima by case: (7.041 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 9.1891 9 0.3483 2 24.461 2 4.2952 1 0.4624 2 0.379 7 1.4646 2 25.7288 10 4.9794 2 6.2863 2 1.8395 8 0.0604 7 0.9594 2 34.7358 2 0.0064 7 12.8049 2 0.3294 2 3.8347 2)
Average genome size in population (length): 65.647
Average program size in population (points): 66.647
Average percent parens in population: 0.015
Minimum age in population: 124.4121514202557
Maximum age in population: 129.1156062815856
Average age in population: 126.9801073934078
Median age in population: 127.005903669735
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 69
Genome diversity (% unique Plush genomes):	 0.725
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 69
Syntactic diversity (% unique Push programs):	 0.725
Total error diversity:				 0.224
Error (vector) diversity:			 0.232
Behavioral diversity:				 0.232
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 111383324
--- Timings ---
Current time: 1529615069464 milliseconds
Total Time:         292.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       114.8 seconds, 39.3%
Fitness Testing:    140.6 seconds, 48.1%
Report:              36.7 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2738.429812300003
Median total errors in population: 841.0184999999998
Error averages by case: (97.40399919999874 12.015 97.18493240000001 3.127 97.27601310000003 3.11 90.379536 3.223 69.8107682 2.287 110.91554179999997 4.142 150.81940340000003 3.231 116.65255740000006 11.442 78.0864730000008 8.887 166.67176130000004 3.247 107.84517140000209 8.927 86.64931600000023 9.173 99.30976269999887 10.812 87.48713469999993 10.682 144.7804537 13.447 99.49474569999894 9.883 96.75900600000003 3.18 84.31376340000074 10.64 78.39622620000073 10.736 94.66454070000172 9.731 116.09609380000005 2.992 78.38038239999943 8.865 98.29812450000146 10.601 115.66252969999998 3.061 94.53257559999999 3.118)
Error minima by case: (0.6359 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 8.5223 8 0.1222 2 99.0 2 23.1144 1 0.4624 2 0.0426 7 1.4377 2 26.7997 10 5.8018 2 20.7137 2 0.8395 8 0.0437 6 0.0406 2 37.7358 2 0.0064 6 11.8049 2 44.0 2 11.4363 2)
Average genome size in population (length): 65.102
Average program size in population (points): 66.102
Average percent parens in population: 0.015
Minimum age in population: 126.0727600473744
Maximum age in population: 130.3136513490793
Average age in population: 128.4678328752093
Median age in population: 128.497177089841
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.713
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.713
Total error diversity:				 0.227
Error (vector) diversity:			 0.237
Behavioral diversity:				 0.237
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 113013024
--- Timings ---
Current time: 1529615073078 milliseconds
Total Time:         295.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.1 seconds, 39.3%
Fitness Testing:    142.4 seconds, 48.1%
Report:              37.2 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_439} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_439 tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2493.1500837
Median total errors in population: 841.0184999999998
Error averages by case: (87.93509009999893 11.912 86.32952270000001 2.895 86.24181879999999 2.885 80.5438321 2.979 62.6230145 2.051 100.82650579999998 3.923 141.2388413 2.986 106.39127560000004 11.294 68.12045240000066 8.812 157.2412267 3.025 99.08247560000159 9.108 77.23290410000003 8.887 89.69731889999908 10.639 78.67968119999989 10.517 134.57034969999995 13.304 91.26033089999926 9.534 86.74748010000002 2.947 74.13594210000053 10.246 68.59233540000065 10.776 86.11586040000105 9.701 105.35173079999998 2.771 68.8884776999999 8.866 89.2058562000012 10.58 105.68766269999999 2.806 84.0870979 2.879)
Error minima by case: (7.6367 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 71.489 2 8.5223 9 0.3483 2 78.539 2 10.6459 2 0.4624 2 0.0426 6 4.9062 2 25.7288 10 6.3287 2 21.7137 2 0.8395 7 0.0437 7 0.0406 2 34.7358 2 0.0064 7 11.8049 2 31.4276 2 8.4363 2)
Average genome size in population (length): 62.682
Average program size in population (points): 63.682
Average percent parens in population: 0.016
Minimum age in population: 127.4803328561973
Maximum age in population: 131.8440577049833
Average age in population: 130.0553334937745
Median age in population: 130.1206499842554
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 97
Genome diversity (% unique Plush genomes):	 0.711
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 97
Syntactic diversity (% unique Push programs):	 0.711
Total error diversity:				 0.225
Error (vector) diversity:			 0.229
Behavioral diversity:				 0.229
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 114581474
--- Timings ---
Current time: 1529615076677 milliseconds
Total Time:         299.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.5 seconds, 39.2%
Fitness Testing:    144.2 seconds, 48.2%
Report:              37.6 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 integer_dup float_stackdepth float_sin integer_dec integer_yank integer_mult tag_float_375 tagged_10 tag_integer_505 float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2540.0484222000036
Median total errors in population: 839.9304999999998
Error averages by case: (90.40638019999884 11.929 87.49334199999998 2.975 87.41134009999998 2.956 82.21078690000002 3.076 64.2455506 2.193 102.56798970000001 3.992 142.3704425 3.097 106.90928350000003 11.317 70.73418410000066 8.793 158.39250429999996 3.113 101.35884030000182 9.024 79.97982450000002 8.913 92.04206619999903 10.713 81.12650649999993 10.485 134.89259890000002 13.312 91.69031829999885 9.614 87.82520530000002 3.057 77.72493630000055 10.392 70.91923120000072 10.861 89.35362110000166 9.64 106.03974170000002 2.837 71.2692484999998 8.968 93.71394020000132 10.488 106.85516919999996 2.91 84.90637010000002 2.954)
Error minima by case: (8.041 8 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 70.489 2 4.953 8 0.3483 2 97.6766 2 19.8055 1 0.4624 2 0.0426 7 4.202 2 10.6079 8 1.905 2 15.2252 2 0.1605 8 0.022 6 0.0406 2 34.6553 2 0.0064 7 11.8049 2 30.4276 2 4.6091 2)
Average genome size in population (length): 60.646
Average program size in population (points): 61.646
Average percent parens in population: 0.016
Minimum age in population: 129.0131983318681
Maximum age in population: 133.4390714120932
Average age in population: 131.6549537070981
Median age in population: 131.7128581367846
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 68
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 68
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.232
Error (vector) diversity:			 0.237
Behavioral diversity:				 0.237
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 116099324
--- Timings ---
Current time: 1529615080200 milliseconds
Total Time:         302.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.8 seconds, 39.2%
Fitness Testing:    146.0 seconds, 48.2%
Report:              38.0 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2526.6175017000055
Median total errors in population: 839.2219999999999
Error averages by case: (91.23907059999907 12.0 87.09886440000001 2.873 87.0967251 2.851 81.1386432 2.927 62.882548799999995 2.152 101.17678269999998 3.866 141.9877734 2.939 107.42436290000002 11.314 70.92930640000064 8.736 157.894958 2.958 100.99412310000125 8.698 77.86702800000043 8.908 93.2850233999992 10.658 81.21287029999989 10.36 135.58732299999997 13.318 90.5781165999991 9.711 87.62683870000001 2.888 76.7805744000004 10.525 71.0477017000006 10.641 87.34511430000073 9.558 106.32715010000001 2.748 70.61190349999937 8.71 91.50919760000109 10.443 106.51098619999999 2.761 85.0665153 2.855)
Error minima by case: (9.041 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 2 70.489 2 8.5223 9 0.3483 2 77.539 2 20.8055 2 0.1562 2 0.0426 7 4.2048 2 25.7288 10 9.0 2 20.7137 2 0.8395 7 0.0604 7 0.0406 2 36.5945 2 0.0064 6 11.8049 2 30.4276 2 10.4363 2)
Average genome size in population (length): 60.607
Average program size in population (points): 61.607
Average percent parens in population: 0.016
Minimum age in population: 131.0896365156105
Maximum age in population: 134.8889642877865
Average age in population: 133.0987085739725
Median age in population: 133.1418213777122
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.672
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.672
Total error diversity:				 0.177
Error (vector) diversity:			 0.178
Behavioral diversity:				 0.178
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 117617124
--- Timings ---
Current time: 1529615083760 milliseconds
Total Time:         306.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       120.0 seconds, 39.2%
Fitness Testing:    147.7 seconds, 48.2%
Report:              38.5 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2989.1536349000044
Median total errors in population: 839.2219999999999
Error averages by case: (108.92062819999882 12.039 105.76945889999999 3.072 105.66671720000002 3.048 99.98841700000001 3.173 81.07958650000006 2.393 119.19159529999997 4.098 159.31426760000005 3.171 125.79050700000005 11.417 89.36705060000091 8.873 175.210394 3.208 119.04546010000233 8.776 97.48927029999976 9.223 110.77259659999889 10.759 98.83708759999982 10.538 153.4561641 13.433 108.4831138999988 10.053 105.47771970000005 3.11 95.86589580000063 10.726 89.35944870000083 10.682 110.32084250000236 9.707 124.69621430000004 2.904 88.67950179999916 8.803 108.55126290000148 10.567 124.20080269999997 2.967 103.82663159999997 3.053)
Error minima by case: (0.6697 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 12.3745 10 0.3483 2 96.6766 2 3.7957 2 0.4624 2 0.0426 7 1.1882 2 32.1976 11 8.6581 2 24.0 2 1.8395 8 0.0533 7 0.9594 2 34.7358 2 0.0064 6 11.8049 2 44.0 2 8.4363 2)
Average genome size in population (length): 60.868
Average program size in population (points): 61.868
Average percent parens in population: 0.016
Minimum age in population: 132.1495045670572
Maximum age in population: 136.3365470670686
Average age in population: 134.4752809732315
Median age in population: 134.5510635195877
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.739
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.739
Total error diversity:				 0.187
Error (vector) diversity:			 0.195
Behavioral diversity:				 0.195
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 119141949
--- Timings ---
Current time: 1529615087333 milliseconds
Total Time:         310.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.4 seconds, 39.2%
Fitness Testing:    149.5 seconds, 48.2%
Report:              39.0 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec})
Best program: (float_shove integer_yankdup integer_yank float_frominteger integer_stackdepth print_float float_dup_items integer_dup_items tagged_481 float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth float_sin integer_dec)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2938.818792400005
Median total errors in population: 839.2219999999999
Error averages by case: (106.21121049999886 12.074 103.37897319999999 3.059 103.29414 3.022 98.71457630000002 3.135 83.09110820000005 2.427 118.49890629999999 4.066 158.45005680000003 3.14 123.55583810000002 11.412 86.3991646000007 8.929 174.1599415 3.174 118.02557460000219 8.818 96.09632679999969 9.23 107.9256125999989 10.773 96.26783229999988 10.55 151.16031389999998 13.448 106.39588719999885 10.035 105.17613500000003 3.087 92.65177480000054 10.686 87.05054340000072 10.686 103.19001500000195 9.778 122.2932413 2.894 86.21736379999913 8.732 105.56583880000129 10.637 123.67540949999999 2.932 101.6090079 3.04)
Error minima by case: (2.6844 6 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 9.1891 9 0.3483 2 24.461 2 4.2952 1 0.4624 2 0.0426 7 0.7924 2 25.7288 11 3.8993 2 6.2863 2 0.1605 8 0.1381 7 0.9594 2 36.7358 2 0.0064 6 11.8049 2 16.5724 2 10.4363 2)
Average genome size in population (length): 60.622
Average program size in population (points): 61.622
Average percent parens in population: 0.016
Minimum age in population: 133.1495045670572
Maximum age in population: 137.7119076589495
Average age in population: 135.8467268469581
Median age in population: 135.8596366994467
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.161
Error (vector) diversity:			 0.168
Behavioral diversity:				 0.168
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 120660824
--- Timings ---
Current time: 1529615090834 milliseconds
Total Time:         313.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.7 seconds, 39.1%
Fitness Testing:    151.3 seconds, 48.2%
Report:              39.5 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup tagged_481 integer_yank float_frominteger integer_stackdepth integer_mult float_dup_items integer_dup_items integer_yank float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc in2 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2903.4160108000056
Median total errors in population: 839.2219999999999
Error averages by case: (104.22193069999894 12.05 103.0154156 3.134 102.87231090000002 3.105 96.39975310000001 3.222 84.22629490000004 2.497 115.98166109999998 4.137 155.78376410000007 3.209 122.61544460000003 11.415 84.71905010000077 8.982 171.51942979999998 3.252 117.24498280000235 8.846 93.22792139999963 9.264 105.580793699999 10.692 94.67779969999985 10.611 150.24980890000003 13.443 104.68575539999891 10.012 102.64454380000004 3.162 90.90559320000055 10.736 85.00305530000087 10.671 104.80975810000203 9.846 121.6486004 2.976 84.19515979999913 8.715 104.74616660000119 10.703 120.91478539999997 2.998 100.72523139999998 3.123)
Error minima by case: (2.6844 8 22.0 2 22.0 2 16.0 2 1.0 1 35.7418 3 14.511 2 8.9714 10 0.3483 2 24.461 2 4.2952 1 0.4624 2 0.0426 7 1.7311 2 26.1047 11 0.8385 1 6.2863 2 1.8395 8 0.0604 7 0.9594 2 35.7358 2 0.0064 7 7.8049 2 16.5724 2 6.9633 2)
Average genome size in population (length): 60.203
Average program size in population (points): 61.203
Average percent parens in population: 0.016
Minimum age in population: 134.1495045670572
Maximum age in population: 139.4702948803294
Average age in population: 137.2872503877942
Median age in population: 137.3205588980374
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.785
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.785
Total error diversity:				 0.173
Error (vector) diversity:			 0.178
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 122169374
--- Timings ---
Current time: 1529615094381 milliseconds
Total Time:         317.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.0 seconds, 39.1%
Fitness Testing:    153.1 seconds, 48.3%
Report:              39.9 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction integer_add} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction tagged_10} {:instruction integer_flush} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth integer_add integer_dec float_flush integer_mult tag_float_375 57 integer_dup float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 tagged_10 integer_flush float_mult float_tan integer_flush float_flush integer_mult tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2917.176984300005
Median total errors in population: 839.2219999999999
Error averages by case: (106.14553659999888 12.074 102.50407409999997 3.051 102.39473140000001 3.018 96.99929340000003 3.136 79.97268230000005 2.39 116.75208049999996 4.074 156.69735210000005 3.147 122.54027440000003 11.406 86.56315190000092 8.952 172.37711750000003 3.189 116.87985580000233 8.844 93.89194319999963 9.199 107.78316199999895 10.715 96.02641249999986 10.563 150.17174830000002 13.433 106.28736399999876 10.034 103.28351570000007 3.1 92.39605870000067 10.692 86.82224310000089 10.686 103.84344350000202 9.811 121.32910800000003 2.913 86.26737589999908 8.732 107.06286340000135 10.636 121.81173879999997 2.936 100.60485719999997 3.038)
Error minima by case: (3.6268 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 6.5223 10 0.6517 2 24.461 1 4.2952 1 0.4624 2 0.0426 7 0.7924 2 27.1976 10 2.0939 2 6.2863 2 0.1605 8 0.0605 7 1.0406 2 36.5945 2 0.0064 6 10.8049 2 16.5724 2 5.8347 2)
Average genome size in population (length): 60.269
Average program size in population (points): 61.269
Average percent parens in population: 0.016
Minimum age in population: 136.0891963701452
Maximum age in population: 140.9026223753159
Average age in population: 138.6667617140339
Median age in population: 138.6988851782915
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.179
Error (vector) diversity:			 0.182
Behavioral diversity:				 0.182
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 123679174
--- Timings ---
Current time: 1529615097910 milliseconds
Total Time:         320.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.3 seconds, 39.1%
Fitness Testing:    154.8 seconds, 48.3%
Report:              40.4 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 57} {:instruction tag_integer_505} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove float_shove integer_yankdup integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 57 tag_integer_505 tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2911.8067538000037
Median total errors in population: 839.2219999999999
Error averages by case: (105.47436359999892 12.055 102.03524100000001 3.043 101.9970144 3.015 96.57411730000001 3.122 80.63750400000002 2.353 116.19739279999999 4.054 156.53769060000002 3.123 122.41379590000003 11.454 85.66671610000066 8.9 172.24929569999998 3.138 116.47217110000176 8.828 94.72704320000007 9.314 107.70689019999902 10.806 95.85920699999986 10.62 149.98697129999996 13.5 105.50763229999889 10.109 103.1676396 3.082 91.80779850000056 10.76 86.16420750000064 10.704 105.41151450000162 9.779 120.98006340000003 2.913 85.61033999999927 8.828 106.40326380000127 10.619 121.66867509999999 2.939 100.46420490000001 3.028)
Error minima by case: (1.5896 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 8.5925 10 0.3483 2 24.461 2 4.2952 1 0.4624 2 0.0426 6 0.3815 2 26.8009 10 4.9794 1 6.2863 2 0.1605 7 0.0604 7 0.9594 2 34.7358 2 0.0064 6 9.8049 2 16.5724 2 5.8347 2)
Average genome size in population (length): 60.038
Average program size in population (points): 61.038
Average percent parens in population: 0.017
Minimum age in population: 137.3483473941775
Maximum age in population: 142.017840624596
Average age in population: 140.1013023842802
Median age in population: 140.1664611027959
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.802
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.802
Total error diversity:				 0.169
Error (vector) diversity:			 0.175
Behavioral diversity:				 0.176
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 125184149
--- Timings ---
Current time: 1529615101463 milliseconds
Total Time:         324.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.7 seconds, 39.1%
Fitness Testing:    156.6 seconds, 48.3%
Report:              40.8 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3076.878266200004
Median total errors in population: 839.2219999999999
Error averages by case: (111.43320049999873 12.138 110.15647220000002 3.132 110.43922169999999 3.109 104.25272540000003 3.234 85.73860160000004 2.417 124.12973140000003 4.142 164.2762817 3.24 130.32996960000003 11.485 92.70689670000088 9.038 179.8545893 3.251 122.92477750000214 8.967 99.18553710000003 9.377 112.90014809999882 10.785 101.19198509999987 10.755 157.7334061 13.534 111.40216289999861 10.159 110.45594949999999 3.176 97.80896480000068 10.759 91.81949120000088 10.708 107.759307300002 9.892 128.9765565 2.974 90.89512479999908 8.691 110.97459050000153 10.746 129.08151879999997 3.042 108.5880559 3.112)
Error minima by case: (5.2392 7 17.456 2 22.0 2 16.0 2 0.0 0 37.0 2 70.489 2 8.8927 8 0.3483 2 99.0 2 20.8055 1 0.5376 2 0.0426 7 1.7311 2 28.4264 10 1.7837 2 20.7137 2 1.8395 8 0.0604 7 0.9594 2 34.7358 2 0.0064 6 9.8049 2 30.4276 2 8.4363 2)
Average genome size in population (length): 59.984
Average program size in population (points): 60.984
Average percent parens in population: 0.017
Minimum age in population: 139.2583754011043
Maximum age in population: 143.2690404814172
Average age in population: 141.4853580675762
Median age in population: 141.5615487279347
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.764
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.764
Total error diversity:				 0.183
Error (vector) diversity:			 0.19
Behavioral diversity:				 0.191
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 126687299
--- Timings ---
Current time: 1529615105089 milliseconds
Total Time:         327.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.0 seconds, 39.0%
Fitness Testing:    158.4 seconds, 48.3%
Report:              41.3 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_mult} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_frominteger} {:instruction tag_float_415})
Best program: (float_shove integer_yankdup integer_yank integer_mult float_dup_items integer_dup_items tagged_481 float_sub integer_dup float_mult float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_frominteger tag_float_415)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2431.9747927000044
Median total errors in population: 839.2219999999999
Error averages by case: (85.63526369999897 11.957 83.61092290000002 2.893 83.58856920000001 2.893 77.79120570000002 2.942 62.1618656 2.185 97.84547619999996 3.897 138.47228730000003 2.966 103.67043360000004 11.343 65.93529800000054 8.798 154.49445769999994 2.992 98.03069740000133 8.715 75.74081990000059 9.094 88.59018779999903 10.675 75.7749831999999 10.475 131.9624057 13.357 84.93370079999896 9.926 84.37953610000002 2.917 72.07886880000054 10.608 65.77679820000048 10.605 84.739303000001 9.668 102.78627690000005 2.792 64.9994707999992 8.709 88.34898910000126 10.51 102.7864762 2.803 81.2334989 2.887)
Error minima by case: (1.6359 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 7.5223 9 0.3483 2 24.461 2 4.2952 1 0.4624 2 0.0426 7 4.202 2 25.7288 10 1.6345 2 6.2863 2 1.8395 7 0.3111 8 0.9594 2 34.7358 2 0.0064 6 10.0445 2 16.5724 2 5.8347 2)
Average genome size in population (length): 60.033
Average program size in population (points): 61.033
Average percent parens in population: 0.017
Minimum age in population: 140.2583754011043
Maximum age in population: 144.9812258998607
Average age in population: 142.9211159331001
Median age in population: 142.9582916712932
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.184
Error (vector) diversity:			 0.189
Behavioral diversity:				 0.19
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 128192199
--- Timings ---
Current time: 1529615108620 milliseconds
Total Time:         331.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       129.3 seconds, 39.0%
Fitness Testing:    160.2 seconds, 48.4%
Report:              41.7 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_67} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_tan} {:instruction integer_mult} {:instruction float_max} {:instruction float_max} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc integer_div float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_67 float_stackdepth float_sin integer_dec float_tan integer_mult float_max float_max tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2706.8870636000033
Median total errors in population: 839.2219999999999
Error averages by case: (96.93086099999898 12.022 94.95822349999999 2.937 94.96446350000002 2.902 88.36865530000003 3.016 70.01959640000001 2.235 107.95923599999999 3.939 148.36432280000002 3.022 115.17665200000003 11.352 78.16277960000065 8.78 164.15575289999998 3.052 107.57094510000205 8.715 87.68362489999994 9.091 98.94401029999906 10.712 86.97316439999987 10.487 143.11004289999997 13.369 96.75892509999898 9.907 94.50804690000002 2.981 84.44760500000044 10.643 77.58866740000072 10.619 96.03009410000179 9.644 114.07235590000002 2.8 76.68283709999918 8.691 100.10202060000117 10.493 113.21024959999998 2.834 92.9789313 2.922)
Error minima by case: (1.6359 8 21.0 2 21.0 2 15.0 2 0.0 0 35.7418 2 14.511 2 9.5195 9 0.1039 1 24.461 2 4.2952 1 0.5376 2 0.0426 7 1.7311 2 27.0765 11 7.7453 2 6.2863 2 1.8395 7 0.0605 7 0.9594 2 39.8774 2 0.0064 6 11.8049 2 16.5724 2 14.3412 1)
Average genome size in population (length): 59.835
Average program size in population (points): 60.835
Average percent parens in population: 0.017
Minimum age in population: 141.8878395401213
Maximum age in population: 146.1713827836242
Average age in population: 144.3735147267644
Median age in population: 144.4008730561827
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.189
Error (vector) diversity:			 0.191
Behavioral diversity:				 0.191
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 129692949
--- Timings ---
Current time: 1529615112110 milliseconds
Total Time:         334.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.6 seconds, 39.0%
Fitness Testing:    162.0 seconds, 48.4%
Report:              42.1 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 51494.01440000006
Test mean error for best: 25.74701
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: 2.4017096457  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.1947856343 
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction tagged_481} {:instruction float_sub} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_min} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction tag_float_375} {:instruction 58} {:instruction integer_mod} {:instruction tag_integer_505} {:instruction float_mult} {:instruction float_tan} {:instruction integer_flush})
Best program: (float_shove integer_yankdup integer_yankdup tagged_481 float_sub integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_min in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 float_yank float_stackdepth float_sin integer_dec float_flush integer_mult tag_float_375 58 integer_mod tag_integer_505 float_mult float_tan integer_flush)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 27.522 10 24.0 2 3.8395 10 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 839.2219999999999
Mean: 16.78444
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2667.742417700003
Median total errors in population: 839.2219999999999
Error averages by case: (96.3151113999989 12.12 92.70802349999997 2.925 92.60563350000004 2.909 86.81327780000002 2.974 67.52129910000001 2.166 106.65353609999998 3.918 147.39539240000002 2.977 113.19149510000003 11.401 76.67870580000077 8.86 163.24763860000002 3.008 106.15319700000154 8.798 83.17153600000033 9.14 98.27060019999895 10.76 86.1880828999999 10.568 141.174702 13.411 96.75729169999889 9.982 93.43668970000002 2.934 82.43632190000051 10.646 76.7190283000008 10.654 94.54272100000138 9.745 111.94129190000002 2.8 76.41068569999905 8.616 96.70283400000129 10.594 112.1450797 2.817 90.92424239999997 2.915)
Error minima by case: (2.4967 8 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 14.511 2 9.1891 9 0.3483 1 24.461 2 4.2952 1 0.5376 2 0.0426 7 0.7924 2 25.7288 11 4.9794 2 6.2863 2 1.8395 7 0.0075 7 0.9594 2 42.0 2 0.0064 6 1.8802 2 16.5724 2 11.1704 1)
Average genome size in population (length): 59.368
Average program size in population (points): 60.368
Average percent parens in population: 0.017
Minimum age in population: 143.4302797456432
Maximum age in population: 147.8361240418517
Average age in population: 145.8499309964114
Median age in population: 145.910671739336
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.785
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.785
Total error diversity:				 0.17
Error (vector) diversity:			 0.18
Behavioral diversity:				 0.182
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 131181623
--- Timings ---
Current time: 1529615115623 milliseconds
Total Time:         338.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.9 seconds, 39.0%
Fitness Testing:    163.7 seconds, 48.4%
Report:              42.6 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 50064.567500000056
Test mean error for best: 25.03228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -26.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 4.5282660093  
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 1.1649 7 24.0 2 28.5061 12 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 836.5314999999997
Mean: 16.73063
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2835.5377509000045
Median total errors in population: 839.2219999999999
Error averages by case: (102.89036979999887 11.997 99.7766904 3.011 99.8234134 2.986 94.1667836 3.059 71.4017379 2.247 114.182267 4.002 154.10472589999995 3.063 119.52500870000003 11.388 83.01156420000086 8.906 169.89924129999997 3.108 109.94408260000198 8.81 92.37917099999986 9.268 103.28511229999899 10.658 92.99476329999987 10.655 147.3414937 13.391 103.47912199999877 10.072 100.41533510000004 3.04 88.96895490000064 10.606 83.28648920000074 10.646 104.55986740000192 9.769 118.55754780000002 2.875 82.74295549999914 8.7 103.47990340000138 10.611 119.06127909999996 2.896 97.50587139999999 2.99)
Error minima by case: (1.2384 7 22.0 2 22.0 1 16.0 2 0.0 0 37.0 3 82.0 2 9.1891 9 0.3483 2 99.0 1 15.2405 1 0.4624 2 0.0426 7 4.3455 2 25.7288 10 1.1649 2 24.0 2 2.8395 7 0.3294 7 0.9594 2 25.6398 2 0.0064 6 10.0445 2 44.0 2 0.3666 2)
Average genome size in population (length): 59.618
Average program size in population (points): 60.618
Average percent parens in population: 0.017
Minimum age in population: 144.7821526864348
Maximum age in population: 149.4283278778564
Average age in population: 147.2339189914246
Median age in population: 147.2982834357646
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.174
Error (vector) diversity:			 0.179
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 132677273
--- Timings ---
Current time: 1529615119155 milliseconds
Total Time:         341.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.3 seconds, 39.0%
Fitness Testing:    165.5 seconds, 48.4%
Report:              43.0 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 50064.567500000056
Test mean error for best: 25.03228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -26.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 4.5282660093  
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 1.1649 7 24.0 2 28.5061 12 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 836.5314999999997
Mean: 16.73063
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2862.9004560000044
Median total errors in population: 839.2219999999999
Error averages by case: (103.42186279999886 12.092 100.7002655 3.052 100.63728230000001 3.027 94.9271076 3.131 79.32793900000004 2.438 114.68590939999997 4.051 154.8394876 3.132 120.84262170000002 11.462 83.56038620000078 8.836 170.5824125 3.155 114.50638490000183 8.775 91.45163350000017 9.196 105.29524119999888 10.78 93.46155919999987 10.503 148.58920640000002 13.489 103.39646169999885 10.013 101.29609460000003 3.071 89.9164781000006 10.714 83.89192690000075 10.696 103.15267780000168 9.669 119.67552069999999 2.902 83.4324741999992 8.827 103.10859740000139 10.547 119.87970079999998 2.946 98.79422399999999 3.023)
Error minima by case: (2.6194 8 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 14.511 2 10.3866 10 0.3483 1 24.461 2 3.7957 1 0.5376 2 0.0426 7 4.0001 2 27.6603 11 1.1649 2 6.2863 2 1.8395 7 0.3111 7 0.9594 2 34.874 2 0.0064 7 11.8049 2 16.5724 2 12.8265 1)
Average genome size in population (length): 59.592
Average program size in population (points): 60.592
Average percent parens in population: 0.017
Minimum age in population: 145.7821526864348
Maximum age in population: 150.838085513174
Average age in population: 148.6340632277621
Median age in population: 148.655940360976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.807
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.807
Total error diversity:				 0.178
Error (vector) diversity:			 0.183
Behavioral diversity:				 0.184
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 134172673
--- Timings ---
Current time: 1529615122744 milliseconds
Total Time:         345.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.6 seconds, 39.0%
Fitness Testing:    167.2 seconds, 48.4%
Report:              43.5 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 50064.567500000056
Test mean error for best: 25.03228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -26.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 4.5282660093  
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 1.1649 7 24.0 2 28.5061 12 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 836.5314999999997
Mean: 16.73063
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3274.5876898000047
Median total errors in population: 839.2219999999999
Error averages by case: (121.22786389999857 12.169 116.32301739999998 3.243 116.23205329999999 3.22 110.66087200000001 3.305 93.69443490000005 2.467 130.14449189999996 4.229 169.5863372 3.3 135.6642457 11.466 101.43457730000102 9.061 185.0419871 3.336 131.35289500000258 8.955 110.46371509999958 9.297 122.60972619999866 10.816 110.90166819999986 10.612 162.7834082 13.502 120.80773169999853 10.049 116.92819520000002 3.24 107.40760150000078 10.802 101.53715110000097 10.738 120.21338080000243 9.919 134.5668833 3.072 101.49514479999905 8.825 121.47929930000168 10.745 135.19180469999998 3.066 114.184204 3.221)
Error minima by case: (9.041 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 8.5223 7 0.3483 2 77.539 1 20.8055 1 0.4624 2 0.0426 7 1.7311 2 25.7288 10 1.1649 2 20.7137 2 1.8395 7 0.1218 8 0.9594 2 34.7358 2 0.0064 6 11.8049 2 30.4276 2 5.8347 2)
Average genome size in population (length): 59.393
Average program size in population (points): 60.393
Average percent parens in population: 0.017
Minimum age in population: 147.4704063504086
Maximum age in population: 152.2789798978538
Average age in population: 150.0158139917758
Median age in population: 150.0656835759689
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.807
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.807
Total error diversity:				 0.178
Error (vector) diversity:			 0.184
Behavioral diversity:				 0.185
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 135662898
--- Timings ---
Current time: 1529615126355 milliseconds
Total Time:         349.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.9 seconds, 38.9%
Fitness Testing:    169.0 seconds, 48.4%
Report:              44.0 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 50064.567500000056
Test mean error for best: 25.03228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -26.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 4.5282660093  
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 1.1649 7 24.0 2 28.5061 12 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 836.5314999999997
Mean: 16.73063
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2772.8418169000042
Median total errors in population: 839.2219999999999
Error averages by case: (101.44294319999887 12.054 96.83248040000001 2.964 96.74577470000003 2.948 90.90549490000001 3.041 69.6574303 2.186 110.7269401 3.972 150.8217292 3.033 116.98299430000002 11.377 81.38963280000092 8.79 166.93687439999994 3.067 110.92302660000195 8.704 88.85080350000023 9.122 104.48988319999897 10.75 91.53914469999984 10.466 144.83995249999995 13.379 100.192852899999 9.876 97.36505449999999 2.995 88.02280530000066 10.708 81.37315140000085 10.668 97.74394210000173 9.636 115.84002180000002 2.825 80.52106099999914 8.748 100.84219180000134 10.505 115.38633299999998 2.842 94.8582983 2.955)
Error minima by case: (5.1142 8 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 14.511 2 9.6638 10 0.3483 2 24.461 2 4.2952 2 0.5376 2 0.0426 7 1.7311 2 27.253 11 1.1649 2 6.2863 2 0.9978 7 0.0604 7 0.9594 2 35.7358 2 0.0064 6 9.8049 2 16.5724 2 9.4363 2)
Average genome size in population (length): 59.23
Average program size in population (points): 60.23
Average percent parens in population: 0.017
Minimum age in population: 148.4704063504086
Maximum age in population: 153.4664553165738
Average age in population: 151.3861662492879
Median age in population: 151.3943107428856
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.816
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.816
Total error diversity:				 0.17
Error (vector) diversity:			 0.178
Behavioral diversity:				 0.178
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 137148948
--- Timings ---
Current time: 1529615129873 milliseconds
Total Time:         352.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.2 seconds, 38.9%
Fitness Testing:    170.8 seconds, 48.4%
Report:              44.5 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 50064.567500000056
Test mean error for best: 25.03228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -26.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 4.5282660093  
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 1.1649 7 24.0 2 28.5061 12 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 836.5314999999997
Mean: 16.73063
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2751.8223845000043
Median total errors in population: 839.2219999999999
Error averages by case: (98.0950310999991 11.999 97.15630139999999 3.015 97.013761 3.003 89.86792700000001 3.103 73.19580360000002 2.327 111.53768449999998 4.019 149.4032743 3.096 116.78708870000004 11.356 79.29681290000079 8.799 166.91693279999998 3.144 109.79816030000175 8.714 87.5422957000003 9.162 103.16808559999912 10.733 88.90155489999984 10.463 144.55906820000004 13.349 96.57059229999926 9.794 95.51649830000001 3.067 86.22663370000038 10.708 78.22623860000068 10.613 100.70273260000141 9.712 115.8470638 2.9 77.35345119999924 8.758 100.77894250000114 10.519 114.28010699999996 2.928 94.79434250000001 3.005)
Error minima by case: (7.9596 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 8.5223 9 0.3483 2 24.461 2 4.2952 1 0.4624 2 0.0426 7 1.4267 2 25.0753 10 1.1649 1 1.1183 2 2.8395 8 0.0533 8 0.9594 2 36.7358 2 0.0064 6 11.8049 2 10.5017 2 5.8347 2)
Average genome size in population (length): 59.634
Average program size in population (points): 60.634
Average percent parens in population: 0.017
Minimum age in population: 149.4704063504086
Maximum age in population: 154.8597721306439
Average age in population: 152.7496693066733
Median age in population: 152.7755348036044
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.791
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.791
Total error diversity:				 0.202
Error (vector) diversity:			 0.205
Behavioral diversity:				 0.205
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 138644473
--- Timings ---
Current time: 1529615133450 milliseconds
Total Time:         356.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.5 seconds, 38.9%
Fitness Testing:    172.6 seconds, 48.5%
Report:              45.0 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 50064.567500000056
Test mean error for best: 25.03228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -26.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 4.5282660093  
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_395} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_pop integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_395 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 1.1649 7 24.0 2 28.5061 12 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 836.5314999999997
Mean: 16.73063
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2786.7674943000043
Median total errors in population: 839.2219999999999
Error averages by case: (101.33790399999884 11.965 96.8775023 3.007 96.7669423 2.982 90.92177750000002 3.067 75.97738740000001 2.314 110.72980460000001 4.011 151.1435829 3.069 116.81404410000005 11.351 80.95358090000067 8.726 166.9557983 3.115 112.37477070000186 8.614 89.45422390000013 9.028 104.01041549999907 10.762 91.17246989999991 10.328 144.62515189999996 13.369 96.08171659999944 9.296 97.36160960000002 3.024 91.38795100000033 10.943 81.70479450000065 10.655 103.16918050000152 9.591 115.6935001 2.854 81.50162379999921 8.847 101.7192651000013 10.441 116.00960699999999 2.868 94.80288990000001 2.993)
Error minima by case: (8.4717 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 9.0667 9 0.3483 2 77.539 1 7.2298 1 0.5376 2 0.0426 7 0.7924 2 25.7343 11 1.1649 2 20.7137 2 0.9978 8 0.0533 7 0.9594 2 35.7358 2 0.0064 6 11.8049 2 30.4276 2 9.4363 2)
Average genome size in population (length): 62.035
Average program size in population (points): 63.035
Average percent parens in population: 0.016
Minimum age in population: 150.6182042660712
Maximum age in population: 156.2576088571841
Average age in population: 154.1528611331909
Median age in population: 154.1684943222859
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.783
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.783
Total error diversity:				 0.202
Error (vector) diversity:			 0.204
Behavioral diversity:				 0.204
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 140199723
--- Timings ---
Current time: 1529615137108 milliseconds
Total Time:         359.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.9 seconds, 38.9%
Fitness Testing:    174.4 seconds, 48.5%
Report:              45.4 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 50064.567500000056
Test mean error for best: 25.03228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -26.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 4.5282660093  
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 1.1649 7 24.0 2 28.5061 12 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 836.5314999999997
Mean: 16.73063
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3261.769983200005
Median total errors in population: 839.2219999999999
Error averages by case: (120.3102895999988 11.916 115.4535594 3.158 115.32300550000001 3.139 110.61725770000001 3.239 90.36388220000006 2.574 129.9911593 4.185 169.56120159999998 3.249 135.17785000000003 11.366 100.68876740000094 9.028 185.09621429999996 3.305 128.5409767000027 8.904 112.64133009999982 9.336 122.06383189999887 10.739 111.12602689999989 10.515 162.4913348 13.32 111.8053254000003 8.977 116.90253670000001 3.211 117.80985209999982 11.397 101.51970600000094 10.569 118.79564390000222 9.88 134.0761793 3.005 101.22740419999907 8.8 120.81339010000141 10.726 135.18428630000002 3.004 113.49697179999997 3.15)
Error minima by case: (4.5062 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 2 82.0 2 9.5195 9 0.6517 2 99.0 2 17.5815 2 0.4624 2 0.0426 7 0.3268 2 27.0765 11 0.1649 2 20.7137 2 2.1605 7 0.0244 6 1.0406 2 38.2436 2 0.0064 7 11.8049 2 44.0 2 14.3412 2)
Average genome size in population (length): 66.689
Average program size in population (points): 67.689
Average percent parens in population: 0.015
Minimum age in population: 152.8212394996853
Maximum age in population: 157.7259546773349
Average age in population: 155.6034379919529
Median age in population: 155.6977552125643
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 96
Genome diversity (% unique Plush genomes):	 0.754
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 96
Syntactic diversity (% unique Push programs):	 0.754
Total error diversity:				 0.233
Error (vector) diversity:			 0.238
Behavioral diversity:				 0.239
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 141870598
--- Timings ---
Current time: 1529615140782 milliseconds
Total Time:         363.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.2 seconds, 38.9%
Fitness Testing:    176.2 seconds, 48.5%
Report:              45.9 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 50064.567500000056
Test mean error for best: 25.03228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 3.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 10.5903747279 
Correct output: -50.868100625  | Program output: -51.4057407266
Correct output: 23.5384229728  | Program output: 2.8001435322  
Correct output: -9.9640986393  | Program output: 1.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -26.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 4.5282660093  
Correct output: 6.5371282958   | Program output: 6.8665396064  
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.8496633699  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [21.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 39.7048 9 0.5376 9 20.7383 10 11.5098 11 75.0 13 1.1649 7 24.0 2 28.5061 12 0.3294 10 2.9594 10 43.0 2 0.0064 7 13.8049 11 44.0 2 21.0 2]
Total: 836.5314999999997
Mean: 16.73063
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2332.9224429000014
Median total errors in population: 839.2219999999999
Error averages by case: (81.71291819999895 11.787 78.82880240000003 2.726 78.2520048 2.693 72.21620070000002 2.789 56.5026676 2.186 93.3143059 3.738 134.70208769999996 2.798 99.15854050000003 11.286 61.43009950000079 8.645 150.79759479999996 2.819 92.3324770000014 8.57 74.78939900000027 9.02 84.50382099999906 10.691 71.85998059999986 10.199 127.81689509999998 13.28 69.192103600001 8.121 79.84727630000002 2.759 84.45220319999943 11.67 62.25021790000059 10.541 83.36760340000123 9.495 97.7835263 2.615 62.98888019999931 8.798 85.93013350000129 10.369 98.82957399999998 2.658 77.10312970000003 2.707)
Error minima by case: (1.5511 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 11.3745 11 1.6517 2 99.0 1 20.8055 1 0.5376 2 0.0426 6 4.202 2 30.6689 10 1.1649 2 24.0 2 3.1604 7 0.0533 7 2.9594 2 23.6398 2 0.0064 7 11.8049 2 44.0 2 1.6334 2)
Average genome size in population (length): 70.823
Average program size in population (points): 71.823
Average percent parens in population: 0.014
Minimum age in population: 153.8212394996853
Maximum age in population: 159.2841887226267
Average age in population: 156.9283815515127
Median age in population: 156.9999834723063
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 107
Genome diversity (% unique Plush genomes):	 0.739
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 107
Syntactic diversity (% unique Push programs):	 0.739
Total error diversity:				 0.221
Error (vector) diversity:			 0.223
Behavioral diversity:				 0.225
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 143642773
--- Timings ---
Current time: 1529615144530 milliseconds
Total Time:         367.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.5 seconds, 38.8%
Fitness Testing:    178.1 seconds, 48.5%
Report:              46.4 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 50075.60190000005
Test mean error for best: 25.03780
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: -50.4057407266
Correct output: 23.5384229728  | Program output: 3.8001435322  
Correct output: -9.9640986393  | Program output: 2.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -25.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 5.5282660093  
Correct output: 6.5371282958   | Program output: 7.8665396064  
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.8496633699  
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max integer_mult float_dup_items integer_dup_items tagged_481 float_max integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.6517 9 99.0 2 38.7048 10 0.4624 8 19.7383 10 12.5098 11 75.0 13 0.1649 6 24.0 2 27.5061 12 1.3294 11 1.9594 10 43.0 2 0.9936 8 14.8049 11 44.0 2 21.0 2]
Total: 834.4434999999997
Mean: 16.68887
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2165.0135418000013
Median total errors in population: 836.5314999999997
Error averages by case: (75.2927471999991 11.745 71.95269210000001 2.631 71.86338500000001 2.599 65.3221864 2.692 46.702888099999996 2.105 85.79189110000003 3.64 128.2161618 2.696 93.04569190000004 11.226 56.31671580000033 8.578 144.3284364 2.721 85.54801100000086 8.514 69.85637820000068 8.983 78.48367539999914 10.646 65.69147929999986 10.218 121.6382086 13.206 60.29068030000076 7.964 72.20785609999999 2.667 78.76817619999949 11.707 56.23107500000033 10.478 78.72027920000058 9.421 91.63151429999999 2.531 55.85956839999933 8.785 78.22851440000119 10.304 91.5023626 2.571 70.280967 2.614)
Error minima by case: (2.8936 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 10.3745 10 0.3483 2 77.539 1 20.8055 1 0.4624 2 0.0426 7 0.1148 2 28.477 11 0.1649 2 20.7137 2 0.9967 7 0.0533 7 0.9594 2 37.7836 2 0.0064 7 11.8049 2 30.4276 2 10.3867 2)
Average genome size in population (length): 71.585
Average program size in population (points): 72.585
Average percent parens in population: 0.014
Minimum age in population: 154.8212394996853
Maximum age in population: 160.7075103763142
Average age in population: 158.3760198956579
Median age in population: 158.4515172226287
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 81
Genome diversity (% unique Plush genomes):	 0.756
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 81
Syntactic diversity (% unique Push programs):	 0.756
Total error diversity:				 0.24
Error (vector) diversity:			 0.243
Behavioral diversity:				 0.244
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 145434073
--- Timings ---
Current time: 1529615148358 milliseconds
Total Time:         371.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.9 seconds, 38.8%
Fitness Testing:    180.1 seconds, 48.5%
Report:              47.0 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 50075.60190000005
Test mean error for best: 25.03780
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: -50.4057407266
Correct output: 23.5384229728  | Program output: 3.8001435322  
Correct output: -9.9640986393  | Program output: 2.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -25.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 5.5282660093  
Correct output: 6.5371282958   | Program output: 7.8665396064  
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.8496633699  
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.6517 9 99.0 2 38.7048 10 0.4624 8 19.7383 10 12.5098 11 75.0 13 0.1649 6 24.0 2 27.5061 12 1.3294 11 1.9594 10 43.0 2 0.9936 8 14.8049 11 44.0 2 21.0 2]
Total: 834.4434999999997
Mean: 16.68887
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2476.728628100001
Median total errors in population: 836.5314999999997
Error averages by case: (87.02415099999894 11.798 85.2274325 2.843 85.1533881 2.817 79.418346 2.928 62.143430599999995 2.127 99.55798399999998 3.863 140.2885723 2.912 105.53100570000004 11.291 68.13659720000008 8.776 156.45536679999998 2.949 98.7289257000009 8.681 79.27535150000043 9.169 88.9844043999991 10.675 77.50254849999989 10.384 133.7339226 13.283 71.9544404000007 8.17 85.74997959999999 2.887 90.80491549999941 11.769 67.96046450000011 10.528 88.25594750000083 9.618 104.3909257 2.72 67.67911079999931 8.753 89.93979490000117 10.498 104.683007 2.755 83.12561530000002 2.829)
Error minima by case: (2.6844 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 9.1891 9 0.3483 2 99.0 2 8.7006 1 0.4624 2 0.0019 7 1.7311 2 25.7288 11 0.1649 2 24.0 2 0.9978 7 0.0244 6 0.9594 2 34.7358 2 0.0064 6 11.8049 2 44.0 2 8.4363 2)
Average genome size in population (length): 71.503
Average program size in population (points): 72.503
Average percent parens in population: 0.014
Minimum age in population: 155.9818567554402
Maximum age in population: 161.9355513237798
Average age in population: 159.7768795253842
Median age in population: 159.8052979495052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 63
Genome diversity (% unique Plush genomes):	 0.784
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 63
Syntactic diversity (% unique Push programs):	 0.784
Total error diversity:				 0.231
Error (vector) diversity:			 0.238
Behavioral diversity:				 0.238
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 147224298
--- Timings ---
Current time: 1529615152174 milliseconds
Total Time:         374.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.2 seconds, 38.7%
Fitness Testing:    182.1 seconds, 48.6%
Report:              47.5 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 50075.60190000005
Test mean error for best: 25.03780
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: -50.4057407266
Correct output: 23.5384229728  | Program output: 3.8001435322  
Correct output: -9.9640986393  | Program output: 2.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -25.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 5.5282660093  
Correct output: 6.5371282958   | Program output: 7.8665396064  
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.8496633699  
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 95.78946283403147} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_max integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_inc float_add in1 float_yankdup print_float float_max 95.78946283403147 tag_float_375)
Errors: [20.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.6517 9 99.0 2 38.7048 10 0.4624 8 19.7383 10 12.5098 11 75.0 13 0.1649 6 24.0 2 27.5061 12 1.3294 11 1.9594 10 43.0 2 0.9936 8 14.8049 11 44.0 2 21.0 2]
Total: 834.4434999999997
Mean: 16.68887
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2695.5634276000014
Median total errors in population: 868.2363999999998
Error averages by case: (95.99072479999894 11.929 93.87978009999999 2.972 93.69170310000001 2.942 90.17924330000002 3.077 63.94910399999999 2.392 110.50832069999998 3.986 149.81374450000004 3.082 113.45729200000007 11.39 77.23661780000087 8.673 165.71731789999998 3.128 103.29282390000184 8.63 89.63497530000001 9.12 98.17220279999893 10.818 86.25233259999979 10.348 141.5783481 13.367 84.13724580000118 8.159 95.71581170000005 3.04 99.57081949999939 11.81 77.35133110000082 10.676 95.25288660000174 9.503 112.75212030000003 2.838 76.57673419999931 8.976 97.86683000000136 10.389 114.57790929999997 2.912 91.29320819999998 2.957)
Error minima by case: (0.9908 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 8.5223 9 0.1222 2 96.6766 2 20.5042 1 0.4624 2 0.0426 7 3.7509 2 25.7288 10 0.1035 1 24.0 2 2.9967 5 0.0244 6 0.0406 2 16.5128 2 0.0064 6 11.8049 2 44.0 2 10.3867 2)
Average genome size in population (length): 71.954
Average program size in population (points): 72.954
Average percent parens in population: 0.014
Minimum age in population: 159.0332101060845
Maximum age in population: 163.2568562934897
Average age in population: 161.1583036460561
Median age in population: 161.2009554615749
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.266
Error (vector) diversity:			 0.271
Behavioral diversity:				 0.272
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 149025698
--- Timings ---
Current time: 1529615156029 milliseconds
Total Time:         378.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.6 seconds, 38.7%
Fitness Testing:    184.1 seconds, 48.6%
Report:              48.0 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 50075.60190000005
Test mean error for best: 25.03780
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.4862568786  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 31.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 11.5903747279 
Correct output: -50.868100625  | Program output: -50.4057407266
Correct output: 23.5384229728  | Program output: 3.8001435322  
Correct output: -9.9640986393  | Program output: 2.5457494437  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -25.2851620993
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 5.5282660093  
Correct output: 6.5371282958   | Program output: 7.8665396064  
Correct output: 183.0405782309 | Program output: 181.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.8496633699  
Correct output: 151.8048643924 | Program output: 166.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.6182 12 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.6517 9 99.0 2 38.7048 10 0.4624 8 19.7383 10 12.5098 11 75.0 13 0.1649 6 24.0 2 27.5061 12 1.3294 11 1.9594 10 43.0 2 0.9936 8 14.8049 11 44.0 2 21.0 2]
Total: 834.4434999999997
Mean: 16.68887
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2465.8137832000007
Median total errors in population: 855.8726999999998
Error averages by case: (87.33807769999902 11.837 84.27263260000001 2.833 84.28528519999999 2.81 77.7804725 2.889 60.2357353 2.154 97.8426344 3.838 138.4944195 2.908 104.56560850000002 11.293 68.31379470000088 8.696 154.5181849 2.945 97.97643280000139 8.785 79.66161510000022 8.939 90.09115419999905 10.707 78.40010559999992 10.274 132.8729641 13.269 73.96943190000118 7.999 83.83252230000002 2.877 90.13063329999945 11.715 68.41271280000069 10.698 89.70074840000122 9.534 103.54967030000005 2.728 68.4207653999996 9.035 91.31833420000129 10.401 102.86851279999996 2.755 82.2213347 2.821)
Error minima by case: (0.9908 8 22.0 2 22.0 2 16.0 2 0.0 0 35.7418 3 70.2631 2 8.5925 10 0.3483 2 50.9642 1 15.3979 1 0.4624 2 0.0426 7 2.8736 2 26.8009 10 0.1649 2 21.5468 2 2.4723 7 0.0533 7 0.9594 2 37.5945 2 0.0064 7 11.8049 2 44.0 2 5.8347 2)
Average genome size in population (length): 72.385
Average program size in population (points): 73.385
Average percent parens in population: 0.014
Minimum age in population: 160.3702371084618
Maximum age in population: 164.4886397554673
Average age in population: 162.6299662858186
Median age in population: 162.6720670057653
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.826
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.826
Total error diversity:				 0.275
Error (vector) diversity:			 0.28
Behavioral diversity:				 0.281
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 150837398
--- Timings ---
Current time: 1529615159941 milliseconds
Total Time:         382.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.9 seconds, 38.7%
Fitness Testing:    186.1 seconds, 48.6%
Report:              48.5 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 52212.09639999997
Test mean error for best: 26.10605
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.644288722   
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 34.1865240341 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 12.6143799941 
Correct output: -50.868100625  | Program output: -48.4888112528
Correct output: 23.5384229728  | Program output: 2.9683789029  
Correct output: -9.9640986393  | Program output: -6.2163125101 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.38291094  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.7745808466  
Correct output: 6.5371282958   | Program output: 15.8448844838 
Correct output: 183.0405782309 | Program output: 181.9497504152
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.5342722777  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_max integer_dup float_frominteger float_yank in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.4602 10 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.8383 9 99.0 2 37.6808 11 2.3793 8 20.57 8 3.7478 11 75.0 13 1.7374 9 24.0 2 26.2598 11 9.3078 11 1.0908 10 43.0 2 0.3218 9 13.8049 11 44.0 2 21.0 2]
Total: 834.1989
Mean: 16.683977
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2624.261902599999
Median total errors in population: 848.9947999999998
Error averages by case: (93.07645549999884 11.842 91.5641893 2.851 90.65413399999998 2.792 85.84588960000002 2.906 64.83441799999999 2.247 105.6495279 3.836 147.4838527 2.906 111.21930250000003 11.34 73.43936670000056 8.625 162.4816962 2.912 101.64055380000154 8.976 86.16460509999992 8.773 95.69512709999907 10.772 84.59224319999988 10.262 139.21801399999998 13.327 79.95624130000094 7.827 92.5079024 2.843 96.41237839999935 11.781 74.68529540000054 10.876 91.85812310000118 9.454 109.9151072 2.71 74.80034939999999 9.185 95.3925940000013 10.314 111.28607099999998 2.747 88.9714648 2.813)
Error minima by case: (7.3677 7 17.0222 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 6.5223 10 0.1222 2 99.0 2 26.1144 1 0.4624 2 0.6111 7 3.7478 2 25.9656 11 0.1649 2 23.0462 2 1.8395 7 0.0533 5 0.8836 2 37.5945 2 0.0064 7 11.8049 2 44.0 2 10.6802 2)
Average genome size in population (length): 73.16
Average program size in population (points): 74.16
Average percent parens in population: 0.014
Minimum age in population: 161.7529497264334
Maximum age in population: 165.955871992831
Average age in population: 163.9893739876902
Median age in population: 164.0422203648346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.278
Error (vector) diversity:			 0.286
Behavioral diversity:				 0.287
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 152668273
--- Timings ---
Current time: 1529615163776 milliseconds
Total Time:         386.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.3 seconds, 38.6%
Fitness Testing:    188.1 seconds, 48.7%
Report:              49.0 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 52212.09639999997
Test mean error for best: 26.10605
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.644288722   
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 34.1865240341 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 12.6143799941 
Correct output: -50.868100625  | Program output: -48.4888112528
Correct output: 23.5384229728  | Program output: 2.9683789029  
Correct output: -9.9640986393  | Program output: -6.2163125101 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.38291094  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.7745808466  
Correct output: 6.5371282958   | Program output: 15.8448844838 
Correct output: 183.0405782309 | Program output: 181.9497504152
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.5342722777  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction in2} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove in2 integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_max integer_dup float_frominteger float_yank in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.4602 10 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.8383 9 99.0 2 37.6808 11 2.3793 8 20.57 8 3.7478 11 75.0 13 1.7374 9 24.0 2 26.2598 11 9.3078 11 1.0908 10 43.0 2 0.3218 9 13.8049 11 44.0 2 21.0 2]
Total: 834.1989
Mean: 16.683977
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2238.2893232999986
Median total errors in population: 837.8102999999998
Error averages by case: (76.33259019999926 11.782 76.13932080000001 2.738 76.03750529999999 2.715 69.79734840000002 2.826 54.9429917 2.18 89.937939 3.764 131.1045294 2.829 96.80718930000003 11.285 56.65822010000027 8.758 147.1920987 2.843 88.56875250000097 9.418 69.57261799999954 8.66 79.40900009999935 10.67 68.29786089999993 10.347 125.26530119999997 13.271 62.671081100000734 7.725 75.99789520000002 2.788 79.63671459999955 11.784 58.316322400000324 11.033 77.08991070000067 9.626 95.5499671 2.654 58.35996920000037 9.262 80.42728080000096 10.479 95.09879600000001 2.687 74.23912059999999 2.715)
Error minima by case: (7.5718 8 22.0 2 22.0 2 16.0 2 0.0 0 35.7418 3 70.2631 2 5.3948 9 0.1222 2 50.9642 2 15.3979 1 0.4624 2 0.621 7 0.191 2 25.7288 10 0.1649 2 21.7137 2 0.358 7 0.0279 7 0.0406 2 33.874 2 0.0064 6 2.8802 2 30.4276 2 8.6519 2)
Average genome size in population (length): 73.667
Average program size in population (points): 74.667
Average percent parens in population: 0.013
Minimum age in population: 162.9406274866772
Maximum age in population: 167.5078347773442
Average age in population: 165.4352031819293
Median age in population: 165.4778263778114
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.782
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.782
Total error diversity:				 0.269
Error (vector) diversity:			 0.274
Behavioral diversity:				 0.274
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 154511998
--- Timings ---
Current time: 1529615167654 milliseconds
Total Time:         390.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.6 seconds, 38.6%
Fitness Testing:    190.0 seconds, 48.7%
Report:              49.5 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 52212.09639999997
Test mean error for best: 26.10605
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.644288722   
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 34.1865240341 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 12.6143799941 
Correct output: -50.868100625  | Program output: -48.4888112528
Correct output: 23.5384229728  | Program output: 2.9683789029  
Correct output: -9.9640986393  | Program output: -6.2163125101 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.38291094  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.7745808466  
Correct output: 6.5371282958   | Program output: 15.8448844838 
Correct output: 183.0405782309 | Program output: 181.9497504152
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.5342722777  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_pop integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_max integer_dup float_frominteger float_yank in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap in1 float_max float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.4602 10 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.8383 9 99.0 2 37.6808 11 2.3793 8 20.57 8 3.7478 11 75.0 13 1.7374 9 24.0 2 26.2598 11 9.3078 11 1.0908 10 43.0 2 0.3218 9 13.8049 11 44.0 2 21.0 2]
Total: 834.1989
Mean: 16.683977
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2220.5085058999994
Median total errors in population: 834.4434999999997
Error averages by case: (77.01724019999916 11.732 75.35792230000001 2.703 75.22518019999998 2.668 69.4599827 2.755 49.16844 2.039 89.8263332 3.711 131.0604688 2.764 95.93542490000003 11.228 56.2154998000004 8.549 147.21608469999998 2.789 86.20358930000106 9.272 68.26398629999942 8.325 80.47206199999924 10.678 68.85841479999984 10.167 124.45322850000001 13.187 61.13705110000087 7.332 76.03705260000002 2.737 80.01292869999934 11.744 58.80706400000043 11.025 77.56996750000076 9.395 94.74877899999998 2.603 58.26767110000063 9.287 78.61951670000097 10.263 95.01154909999997 2.627 73.29906840000001 2.684)
Error minima by case: (6.041 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 74.8972 2 9.7245 10 0.1222 2 77.9824 1 19.8055 2 0.4624 2 0.4966 8 3.7478 2 26.6689 10 0.1649 2 24.0 2 2.8395 7 0.0368 7 0.0406 2 32.0085 2 0.0064 7 2.8802 2 30.4276 2 7.65 2)
Average genome size in population (length): 73.827
Average program size in population (points): 74.827
Average percent parens in population: 0.013
Minimum age in population: 163.9406274866772
Maximum age in population: 168.7269206232305
Average age in population: 166.8247098735785
Median age in population: 166.8438008118929
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.78
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.78
Total error diversity:				 0.232
Error (vector) diversity:			 0.235
Behavioral diversity:				 0.235
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 156358873
--- Timings ---
Current time: 1529615171502 milliseconds
Total Time:         394.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.0 seconds, 38.6%
Fitness Testing:    192.0 seconds, 48.7%
Report:              50.1 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 50465.295800000036
Test mean error for best: 25.23265
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.644288722   
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 17.9331580422 
Correct output: -50.868100625  | Program output: -48.4888112528
Correct output: 23.5384229728  | Program output: 2.9683789029  
Correct output: -9.9640986393  | Program output: -6.2163125101 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.38291094  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.7745808466  
Correct output: 6.5371282958   | Program output: 15.8448844838 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.5342722777  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan float_max float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.4602 10 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 32.362 10 2.3793 8 20.57 8 3.7478 11 75.0 13 1.7374 9 24.0 2 26.2598 11 9.3078 11 2.9594 10 43.0 2 0.3218 9 13.8049 11 44.0 2 21.0 2]
Total: 829.5621000000001
Mean: 16.591242
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2175.9093661999996
Median total errors in population: 834.4434999999997
Error averages by case: (74.26859829999925 11.703 72.67161580000001 2.69 72.5383366 2.663 67.2330835 2.761 51.5363325 2.05 87.55308519999998 3.702 129.16147080000002 2.756 93.3233756 11.235 54.39884400000037 8.589 145.3356871 2.77 86.5946598000011 9.289 68.31848039999932 8.471 77.6480044999993 10.585 66.8603594999998 10.261 122.01466969999998 13.216 62.12882200000085 7.628 73.9832433 2.721 77.56560409999943 11.678 56.36918750000036 11.017 73.1387024000005 9.421 92.25536090000001 2.59 56.699142800000494 9.341 78.057380500001 10.308 92.9606919 2.607 70.5646275 2.678)
Error minima by case: (1.6844 8 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 80.6024 2 9.1891 9 0.1222 2 79.5003 2 22.1144 2 0.4624 2 0.621 8 0.3999 2 25.7288 10 0.1421 2 21.7059 2 1.4397 7 0.1365 7 0.0406 2 38.2119 2 0.0064 7 2.8802 2 30.4276 2 11.1704 2)
Average genome size in population (length): 74.31
Average program size in population (points): 75.31
Average percent parens in population: 0.013
Minimum age in population: 166.0742899051889
Maximum age in population: 170.2314282890465
Average age in population: 168.2287652215172
Median age in population: 168.2183329815781
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.236
Error (vector) diversity:			 0.238
Behavioral diversity:				 0.238
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 158218248
--- Timings ---
Current time: 1529615175354 milliseconds
Total Time:         398.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.3 seconds, 38.5%
Fitness Testing:    194.0 seconds, 48.7%
Report:              50.6 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 50465.295800000036
Test mean error for best: 25.23265
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.644288722   
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 17.9331580422 
Correct output: -50.868100625  | Program output: -48.4888112528
Correct output: 23.5384229728  | Program output: 2.9683789029  
Correct output: -9.9640986393  | Program output: -6.2163125101 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.38291094  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.7745808466  
Correct output: 6.5371282958   | Program output: 15.8448844838 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.5342722777  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_sin} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_frominteger integer_dup float_sin float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan float_max float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.4602 10 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 32.362 10 2.3793 8 20.57 8 3.7478 11 75.0 13 1.7374 9 24.0 2 26.2598 11 9.3078 11 2.9594 10 43.0 2 0.3218 9 13.8049 11 44.0 2 21.0 2]
Total: 829.5621000000001
Mean: 16.591242
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2530.257179299999
Median total errors in population: 867.6420499999998
Error averages by case: (87.8858807999992 11.558 87.53534850000003 2.863 87.4512659 2.871 82.74830450000003 2.956 61.722268099999994 2.251 103.91919220000001 3.903 143.22202030000003 2.961 106.95763820000003 11.268 67.99212500000088 8.694 159.20613239999994 3.004 96.72252280000164 9.539 83.55973070000026 8.633 90.23176369999946 10.5 86.20871239999963 10.339 136.060735 13.206 76.49920680000083 7.992 88.7877385 2.929 90.97599159999939 11.586 70.50561160000055 10.99 86.22963510000145 9.561 106.77196600000002 2.76 69.95162920000044 9.436 90.23900490000145 10.412 108.53678399999998 2.771 84.5129711 2.84)
Error minima by case: (1.0269 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 74.8972 2 12.3745 10 0.1222 2 77.9824 2 15.8061 1 0.4624 2 0.621 7 0.4779 2 30.477 10 0.1649 2 17.8003 2 1.4547 6 0.004 5 0.0251 2 5.3428 2 0.0064 6 2.8802 2 30.4276 2 13.0263 2)
Average genome size in population (length): 75.315
Average program size in population (points): 76.315
Average percent parens in population: 0.013
Minimum age in population: 167.207551236296
Maximum age in population: 171.660672895171
Average age in population: 169.6504032398739
Median age in population: 169.7277215020142
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.836
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.836
Total error diversity:				 0.295
Error (vector) diversity:			 0.298
Behavioral diversity:				 0.299
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 160102523
--- Timings ---
Current time: 1529615179152 milliseconds
Total Time:         401.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.6 seconds, 38.5%
Fitness Testing:    195.9 seconds, 48.8%
Report:              51.1 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 50465.295800000036
Test mean error for best: 25.23265
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.644288722   
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 17.9331580422 
Correct output: -50.868100625  | Program output: -48.4888112528
Correct output: 23.5384229728  | Program output: 2.9683789029  
Correct output: -9.9640986393  | Program output: -6.2163125101 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.38291094  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.7745808466  
Correct output: 6.5371282958   | Program output: 15.8448844838 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.5342722777  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_frominteger} {:instruction float_yank} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_mult} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_pop integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult float_dup_items integer_dup_items tagged_481 float_max integer_dup float_frominteger float_yank in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap float_mult float_max float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.4602 10 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 32.362 10 2.3793 8 20.57 8 3.7478 11 75.0 13 1.7374 9 24.0 2 26.2598 11 9.3078 11 2.9594 10 43.0 2 0.3218 9 13.8049 11 44.0 2 21.0 2]
Total: 829.5621000000001
Mean: 16.591242
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2567.5414445999995
Median total errors in population: 838.9284499999999
Error averages by case: (89.93673699999961 11.352 88.57324940000001 2.84 88.6361109 2.834 82.9253522 2.901 65.89806630000001 2.189 102.83487009999999 3.843 143.825101 2.914 109.33610180000002 11.347 70.53756290000094 8.86 159.7716127 2.916 102.75298150000144 9.831 84.99826489999992 8.716 92.85315179999984 10.187 83.1689110999996 10.366 137.45221079999996 13.333 76.28539980000043 8.45 89.5739796 2.858 92.36366739999963 11.563 73.61652240000052 11.09 88.21656940000123 9.715 108.0174379 2.74 72.41166760000034 9.682 91.76367650000141 10.48 108.30081299999999 2.746 86.9184266 2.82)
Error minima by case: (4.2755 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 75.5796 2 7.5223 10 0.1222 2 99.0 2 7.7828 1 0.1653 2 0.5849 8 0.4779 2 28.1976 10 0.1649 2 24.0 2 2.0616 7 0.0974 7 0.0908 2 35.7358 2 0.0064 7 2.8802 2 29.4276 2 9.4363 2)
Average genome size in population (length): 77.079
Average program size in population (points): 78.079
Average percent parens in population: 0.013
Minimum age in population: 168.4010561832174
Maximum age in population: 172.9846595371478
Average age in population: 171.0376574362107
Median age in population: 171.0746524202774
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.802
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.802
Total error diversity:				 0.312
Error (vector) diversity:			 0.316
Behavioral diversity:				 0.317
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 162031398
--- Timings ---
Current time: 1529615183050 milliseconds
Total Time:         405.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.0 seconds, 38.4%
Fitness Testing:    198.0 seconds, 48.8%
Report:              51.7 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 50465.295800000036
Test mean error for best: 25.23265
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 4.644288722   
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 17.9331580422 
Correct output: -50.868100625  | Program output: -48.4888112528
Correct output: 23.5384229728  | Program output: 2.9683789029  
Correct output: -9.9640986393  | Program output: -6.2163125101 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.38291094  
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 6.7745808466  
Correct output: 6.5371282958   | Program output: 15.8448844838 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 8.5342722777  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [20.4602 10 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 32.362 10 2.3793 8 20.57 8 3.7478 11 75.0 13 1.7374 9 24.0 2 26.2598 11 9.3078 11 2.9594 10 43.0 2 0.3218 9 13.8049 11 44.0 2 21.0 2]
Total: 829.5621000000001
Mean: 16.591242
Genome size: 80
Size: 81
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2479.3985765
Median total errors in population: 836.5314999999997
Error averages by case: (86.87902330000028 10.962 83.91920160000001 2.907 84.62993389999997 2.939 79.21265939999998 2.993 58.856573 2.311 99.6645713 3.925 139.59184069999995 3.008 104.03324660000003 11.331 66.91164710000082 8.883 155.69091260000002 3.0 94.96320770000074 10.093 84.11572140000023 8.714 90.02298270000036 9.78 84.04290259999935 10.479 132.47260379999997 13.293 75.95001249999987 9.064 84.9538365 2.958 89.36683519999973 11.357 73.32133480000026 11.122 87.55710810000075 9.735 103.26266430000007 2.857 69.94539360000005 9.92 87.27290790000117 10.49 103.42995639999998 2.812 81.49649949999997 2.902)
Error minima by case: (1.2328 8 20.3321 2 22.0 2 16.0 2 1.0 1 37.0 3 14.511 2 8.7245 9 0.1617 2 24.461 2 4.2952 2 0.1801 2 0.379 7 0.4779 2 25.6689 10 0.1649 2 6.2863 2 0.8605 7 0.0253 6 0.0908 2 38.832 2 0.0064 7 0.8802 2 16.5724 2 12.8265 2)
Average genome size in population (length): 78.921
Average program size in population (points): 79.921
Average percent parens in population: 0.013
Minimum age in population: 169.8589186797403
Maximum age in population: 173.9970217408299
Average age in population: 172.3663778674622
Median age in population: 172.398433772478
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 71
Genome diversity (% unique Plush genomes):	 0.761
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 71
Syntactic diversity (% unique Push programs):	 0.761
Total error diversity:				 0.305
Error (vector) diversity:			 0.309
Behavioral diversity:				 0.31
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 164006598
--- Timings ---
Current time: 1529615186988 milliseconds
Total Time:         409.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.3 seconds, 38.4%
Fitness Testing:    200.1 seconds, 48.8%
Report:              52.2 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 52041.53540000003
Test mean error for best: 26.02077
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 7.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 21.1369190056 
Correct output: -50.868100625  | Program output: -52.5741150484
Correct output: 23.5384229728  | Program output: 3.4244742578  
Correct output: -9.9640986393  | Program output: -0.8597438545 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -27.7552808493
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 14.7082864073 
Correct output: 6.5371282958   | Program output: 16.7462061319 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 7.3066746879  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [18.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 29.1583 11 1.706 9 20.1139 8 9.1044 10 75.0 13 2.635 10 24.0 2 18.326 12 10.2091 11 2.9594 10 43.0 2 1.5494 7 13.8049 11 44.0 2 21.0 2]
Total: 823.3132
Mean: 16.466265
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2245.3701553000014
Median total errors in population: 856.17965
Error averages by case: (77.29838320000056 10.708 75.41471930000003 2.803 75.23942719999998 2.829 69.30751559999999 2.892 51.07982929999999 2.212 90.16316379999999 3.816 131.09872099999998 2.912 95.45616120000003 11.264 57.653692700000725 8.614 147.68371590000004 2.905 86.0747482000004 9.809 71.97855290000015 8.525 81.76319790000065 9.571 72.04307289999936 10.14 124.14349509999997 13.207 64.33173929999978 9.123 76.24933459999997 2.859 79.12065519999986 11.135 63.68199040000054 11.041 81.0660136000006 9.48 94.75320340000005 2.736 58.15564599999956 9.974 80.15797580000083 10.284 94.32001430000001 2.719 72.77618650000001 2.801)
Error minima by case: (3.4794 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 8.5925 7 0.0995 2 77.539 2 2.8782 1 0.1801 2 0.4966 6 0.4779 2 26.075 9 0.1649 2 15.3101 2 2.0616 7 0.0403 7 0.645 2 39.3684 2 0.0064 7 9.1835 2 12.0866 2 12.0917 2)
Average genome size in population (length): 79.852
Average program size in population (points): 80.852
Average percent parens in population: 0.012
Minimum age in population: 171.3299060390449
Maximum age in population: 175.5375405813606
Average age in population: 173.7302255499668
Median age in population: 173.7599651498535
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.771
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.771
Total error diversity:				 0.331
Error (vector) diversity:			 0.335
Behavioral diversity:				 0.335
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 166004173
--- Timings ---
Current time: 1529615190936 milliseconds
Total Time:         413.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.6 seconds, 38.3%
Fitness Testing:    202.2 seconds, 48.9%
Report:              52.7 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 52041.53540000003
Test mean error for best: 26.02077
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 7.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 21.1369190056 
Correct output: -50.868100625  | Program output: -52.5741150484
Correct output: 23.5384229728  | Program output: 3.4244742578  
Correct output: -9.9640986393  | Program output: -0.8597438545 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -27.7552808493
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 14.7082864073 
Correct output: 6.5371282958   | Program output: 16.7462061319 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 7.3066746879  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [18.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 29.1583 11 1.706 9 20.1139 8 9.1044 10 75.0 13 2.635 10 24.0 2 18.326 12 10.2091 11 2.9594 10 43.0 2 1.5494 7 13.8049 11 44.0 2 21.0 2]
Total: 823.3132
Mean: 16.466265
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2334.696280200003
Median total errors in population: 869.8571
Error averages by case: (80.8628383000005 10.735 77.5052989 2.697 77.64750359999998 2.678 71.87844879999999 2.748 53.16349209999998 2.076 92.23241739999999 3.709 133.70882489999997 2.772 98.64588680000001 11.299 62.269886000000646 8.593 149.78676990000002 2.766 87.81174810000027 9.597 78.80555780000032 8.636 86.5189433000007 9.628 79.59602629999932 10.165 127.01158019999997 13.274 69.06286089999976 9.214 78.8033215 2.718 82.7490283999998 11.164 68.06472660000044 10.991 84.84301300000095 9.511 97.1973019 2.63 63.409869999999636 10.057 86.13630330000102 10.42 97.6032987 2.624 75.99033349999999 2.689)
Error minima by case: (0.3344 6 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 66.489 2 9.0903 9 0.1617 2 73.539 2 5.7828 2 0.1653 2 0.4948 7 0.4779 2 21.5661 8 0.2626 2 16.7137 2 0.8605 7 0.0531 6 0.9092 2 27.8281 2 0.0064 6 10.5622 2 12.0866 2 8.6369 2)
Average genome size in population (length): 80.467
Average program size in population (points): 81.467
Average percent parens in population: 0.012
Minimum age in population: 172.9507284932287
Maximum age in population: 177.2340300978015
Average age in population: 175.1955375832865
Median age in population: 175.196781242164
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.371
Error (vector) diversity:			 0.376
Behavioral diversity:				 0.376
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 168017523
--- Timings ---
Current time: 1529615194961 milliseconds
Total Time:         417.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.0 seconds, 38.3%
Fitness Testing:    204.3 seconds, 48.9%
Report:              53.2 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 52041.53540000003
Test mean error for best: 26.02077
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 7.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 21.1369190056 
Correct output: -50.868100625  | Program output: -52.5741150484
Correct output: 23.5384229728  | Program output: 3.4244742578  
Correct output: -9.9640986393  | Program output: -0.8597438545 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -27.7552808493
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 14.7082864073 
Correct output: 6.5371282958   | Program output: 16.7462061319 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 7.3066746879  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [18.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 29.1583 11 1.706 9 20.1139 8 9.1044 10 75.0 13 2.635 10 24.0 2 18.326 12 10.2091 11 2.9594 10 43.0 2 1.5494 7 13.8049 11 44.0 2 21.0 2]
Total: 823.3132
Mean: 16.466265
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2570.2698803000017
Median total errors in population: 864.8839
Error averages by case: (89.84270060000057 10.709 87.91260490000002 2.91 87.20135699999999 2.883 83.4360643 2.982 64.44214299999999 2.238 103.0276266 3.94 143.2415524 3.019 107.45668260000004 11.319 69.39245820000058 8.649 159.1856834 3.01 94.94870259999946 9.296 89.82823240000019 8.646 92.4581495000011 9.668 91.72001599999913 10.21 135.65030289999999 13.292 79.55239639999958 9.315 88.71791819999999 2.959 90.57860849999989 11.24 75.52742879999991 11.0 97.8674409000018 9.552 106.44985650000002 2.79 71.63921719999989 9.961 92.17955290000117 10.357 107.24728799999998 2.817 85.10389649999998 2.9)
Error minima by case: (0.7068 7 20.3321 2 22.0 2 16.0 2 0.0 0 33.9402 3 35.1035 2 4.5056 9 0.1617 2 19.0503 2 4.7403 1 0.1801 2 0.5849 8 0.0244 2 24.8496 10 0.2626 2 5.8865 2 1.9106 7 7.0E-4 7 0.645 2 37.7836 2 0.005 5 10.5622 2 17.2571 2 7.6428 2)
Average genome size in population (length): 81.621
Average program size in population (points): 82.621
Average percent parens in population: 0.012
Minimum age in population: 174.3990740110184
Maximum age in population: 178.4462974053857
Average age in population: 176.563955423367
Median age in population: 176.6171241499346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.337
Error (vector) diversity:			 0.345
Behavioral diversity:				 0.346
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 170060873
--- Timings ---
Current time: 1529615198948 milliseconds
Total Time:         421.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.3 seconds, 38.3%
Fitness Testing:    206.4 seconds, 49.0%
Report:              53.8 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 51719.05990000005
Test mean error for best: 25.85953
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 10.0434081511 
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 31.543371118  
Correct output: -50.868100625  | Program output: -47.3222821018
Correct output: 23.5384229728  | Program output: 5.3758902121  
Correct output: -9.9640986393  | Program output: -10.2304049643
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -22.2480632136
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 5.3868768689  
Correct output: 6.5371282958   | Program output: 18.5887335034 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.2163507101 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [15.0611 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 18.7518 11 3.5458 11 18.1625 9 0.2663 9 75.0 13 2.8722 9 24.0 2 27.6475 10 12.0516 11 2.9594 10 43.0 2 1.3603 11 13.8049 11 44.0 2 21.0 2]
Total: 815.1351000000001
Mean: 16.302702
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2591.9399738999996
Median total errors in population: 851.5236000000001
Error averages by case: (91.05444260000067 10.624 89.64280120000002 2.909 89.692051 2.893 83.56138520000002 2.996 64.24146119999999 2.218 103.56481679999999 3.931 143.19822359999998 3.024 109.62651290000004 11.279 72.0166197000006 8.678 158.9652252 3.02 95.52409649999936 9.266 86.25018060000022 8.578 96.45018450000069 9.628 86.44983689999918 9.986 137.94426729999998 13.274 78.08000249999968 9.223 88.89015760000002 2.965 92.53782169999998 11.322 78.3443322999997 11.087 97.72376150000132 9.481 109.67062990000001 2.823 74.74028160000036 9.878 94.2375829000011 10.279 107.21442940000003 2.8 87.26286929999999 2.894)
Error minima by case: (0.4183 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 3.0501 7 0.0486 2 24.461 2 0.4033 2 0.1653 2 0.441 7 0.2663 2 13.8943 10 0.2626 2 6.2863 2 0.7724 7 0.014 7 0.645 2 39.2556 2 0.0064 7 2.6463 2 16.5724 2 7.6428 2)
Average genome size in population (length): 83.248
Average program size in population (points): 84.248
Average percent parens in population: 0.012
Minimum age in population: 175.5574415010632
Maximum age in population: 179.9548387631733
Average age in population: 177.9005431613641
Median age in population: 177.9639374101473
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.33
Error (vector) diversity:			 0.331
Behavioral diversity:				 0.332
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 172144948
--- Timings ---
Current time: 1529615203002 milliseconds
Total Time:         425.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.6 seconds, 38.2%
Fitness Testing:    208.6 seconds, 49.0%
Report:              54.3 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 51719.05990000005
Test mean error for best: 25.85953
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 10.0434081511 
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 31.543371118  
Correct output: -50.868100625  | Program output: -47.3222821018
Correct output: 23.5384229728  | Program output: 5.3758902121  
Correct output: -9.9640986393  | Program output: -10.2304049643
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -22.2480632136
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 5.3868768689  
Correct output: 6.5371282958   | Program output: 18.5887335034 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.2163507101 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [15.0611 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 18.7518 11 3.5458 11 18.1625 9 0.2663 9 75.0 13 2.8722 9 24.0 2 27.6475 10 12.0516 11 2.9594 10 43.0 2 1.3603 11 13.8049 11 44.0 2 21.0 2]
Total: 815.1351000000001
Mean: 16.302702
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2952.598945099999
Median total errors in population: 906.6244000000002
Error averages by case: (105.62328680000057 10.682 102.93374479999999 3.127 103.06795110000004 3.097 98.85589679999998 3.223 77.72441290000002 2.442 118.88066230000003 4.129 157.97472660000003 3.237 122.26850320000005 11.4 85.58415790000058 8.954 173.8019815 3.246 110.42639069999963 9.5 106.1998905000004 9.127 108.77241380000015 9.882 101.78587559999914 10.05 150.1540406 13.362 95.65151079999966 9.656 105.42476269999997 3.176 107.1439676000001 11.443 92.58665269999952 11.091 105.87214380000115 9.605 121.74400700000004 3.01 90.52037330000041 9.876 106.85519900000102 10.353 122.68997889999999 3.02 100.25641419999997 3.112)
Error minima by case: (2.6991 7 20.3321 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 4.4435 7 0.0486 2 24.461 1 1.9816 2 0.1801 2 0.3538 8 0.2663 2 26.3755 10 0.2626 2 6.2863 2 0.3822 7 0.164 6 0.4567 2 37.5945 2 0.0064 6 11.8049 2 16.5724 2 9.2219 2)
Average genome size in population (length): 85.658
Average program size in population (points): 86.658
Average percent parens in population: 0.012
Minimum age in population: 176.8928197863104
Maximum age in population: 181.7189323593606
Average age in population: 179.3372302796362
Median age in population: 179.3944903261177
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.845
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.845
Total error diversity:				 0.418
Error (vector) diversity:			 0.424
Behavioral diversity:				 0.426
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 174289723
--- Timings ---
Current time: 1529615207139 milliseconds
Total Time:         429.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.9 seconds, 38.1%
Fitness Testing:    210.8 seconds, 49.1%
Report:              54.9 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 51719.05990000005
Test mean error for best: 25.85953
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 10.0434081511 
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 31.543371118  
Correct output: -50.868100625  | Program output: -47.3222821018
Correct output: 23.5384229728  | Program output: 5.3758902121  
Correct output: -9.9640986393  | Program output: -10.2304049643
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -22.2480632136
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 5.3868768689  
Correct output: 6.5371282958   | Program output: 18.5887335034 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 10.2163507101 
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [15.0611 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 18.7518 11 3.5458 11 18.1625 9 0.2663 9 75.0 13 2.8722 9 24.0 2 27.6475 10 12.0516 11 2.9594 10 43.0 2 1.3603 11 13.8049 11 44.0 2 21.0 2]
Total: 815.1351000000001
Mean: 16.302702
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2947.4418726999993
Median total errors in population: 897.5325499999999
Error averages by case: (103.07061420000073 10.409 103.41678089999998 3.063 103.40761289999996 3.057 98.71430760000001 3.133 75.46670520000004 2.488 118.80240270000004 4.074 158.02431779999998 3.144 122.60062920000006 11.334 85.8756198000009 8.884 173.62077429999994 3.158 106.09656439999952 9.58 105.1593840000007 9.036 111.99169129999963 9.766 109.30612499999893 9.729 150.55097259999997 13.247 95.71191109999937 9.627 104.53923349999997 3.095 103.08448110000022 11.5 92.92026899999898 11.065 106.91199020000124 9.546 122.23656100000005 2.938 88.98482890000064 9.532 106.08799440000122 10.323 122.5910133 2.928 100.55408829999995 3.059)
Error minima by case: (0.0737 7 7.8139 2 22.0 2 16.0 2 1.0 1 37.0 3 14.511 2 8.4242 7 0.1617 2 24.461 2 2.4289 2 0.0171 2 0.3626 7 0.1748 2 20.4489 8 0.4644 2 6.2863 2 0.0894 7 0.0403 6 0.0406 2 36.169 2 0.1016 6 6.9516 2 16.5724 2 12.0828 2)
Average genome size in population (length): 87.203
Average program size in population (points): 88.203
Average percent parens in population: 0.011
Minimum age in population: 178.2209534326593
Maximum age in population: 182.9145241855691
Average age in population: 180.6395413176946
Median age in population: 180.6637805498425
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.398
Error (vector) diversity:			 0.404
Behavioral diversity:				 0.404
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 176472098
--- Timings ---
Current time: 1529615211237 milliseconds
Total Time:         433.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.3 seconds, 38.1%
Fitness Testing:    213.0 seconds, 49.1%
Report:              55.5 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 53997.507200000044
Test mean error for best: 26.99875
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 7.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 21.1369190056 
Correct output: -50.868100625  | Program output: -52.5741150484
Correct output: 23.5384229728  | Program output: 3.4244742578  
Correct output: -9.9640986393  | Program output: -0.8597438545 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.636754917  
Correct output: 6.5371282958   | Program output: 16.7462061319 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 7.3066746879  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [18.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 29.1583 11 1.706 9 20.1139 8 9.1044 10 75.0 13 1.6027 9 24.0 2 3.3976 10 10.2091 11 2.9594 10 43.0 2 1.5494 7 13.8049 11 44.0 2 21.0 2]
Total: 804.3525000000001
Mean: 16.08705
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2627.6855796
Median total errors in population: 862.9222
Error averages by case: (90.67262600000021 10.234 90.3688431 2.907 90.35759540000001 2.901 84.30131920000001 2.929 65.50645429999999 2.297 104.97280350000003 3.878 145.6190622 2.948 110.64451130000006 11.277 73.11901920000061 8.646 161.71984709999998 2.954 98.40704469999983 9.682 88.34361910000018 9.044 98.964013099999 9.694 96.96113739999888 9.48 138.81717769999997 13.237 81.90643819999988 9.623 91.88149129999996 2.899 91.89705040000038 11.579 80.7457783999996 11.09 90.44700170000091 9.36 109.61754520000004 2.776 76.70089480000077 9.222 92.7015194000011 10.224 110.1587107 2.767 88.29107619999998 2.915)
Error minima by case: (0.198 7 15.7111 2 19.2368 2 16.0 2 1.0 1 37.0 3 70.489 2 9.5223 8 0.0486 2 78.539 2 4.0286 1 0.2489 2 0.3492 7 0.2663 2 28.8679 9 0.4824 2 20.7137 2 0.0894 7 0.0073 6 0.2155 2 36.7358 2 0.0064 6 9.1835 2 30.4276 2 10.3867 2)
Average genome size in population (length): 88.764
Average program size in population (points): 89.764
Average percent parens in population: 0.011
Minimum age in population: 179.283082382052
Maximum age in population: 183.9189533880218
Average age in population: 181.8920175435373
Median age in population: 181.9373997197654
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.374
Error (vector) diversity:			 0.377
Behavioral diversity:				 0.378
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 178693573
--- Timings ---
Current time: 1529615215415 milliseconds
Total Time:         438.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.6 seconds, 38.0%
Fitness Testing:    215.3 seconds, 49.1%
Report:              56.0 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 53997.507200000044
Test mean error for best: 26.99875
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 7.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 21.1369190056 
Correct output: -50.868100625  | Program output: -52.5741150484
Correct output: 23.5384229728  | Program output: 3.4244742578  
Correct output: -9.9640986393  | Program output: -0.8597438545 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.636754917  
Correct output: 6.5371282958   | Program output: 16.7462061319 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 7.3066746879  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [18.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 29.1583 11 1.706 9 20.1139 8 9.1044 10 75.0 13 1.6027 9 24.0 2 3.3976 10 10.2091 11 2.9594 10 43.0 2 1.5494 7 13.8049 11 44.0 2 21.0 2]
Total: 804.3525000000001
Mean: 16.08705
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2599.4028824000015
Median total errors in population: 919.7454999999999
Error averages by case: (90.04142790000043 10.417 89.53279600000002 2.986 89.53605769999997 2.981 82.6660585 3.004 67.07214840000002 2.343 103.01896330000001 3.959 143.33462470000003 3.029 108.92908390000004 11.307 71.88711550000066 8.558 159.166466 3.039 94.6186256999999 9.713 86.94263910000033 9.053 97.7476612999992 9.932 96.27026569999913 9.426 137.582957 13.247 80.98186029999972 9.52 88.79725700000002 2.965 89.71523990000038 11.444 78.6707899999995 11.088 94.7559220000012 9.383 107.98905410000002 2.845 76.39164090000051 9.613 94.75122550000135 10.156 107.3038866 2.812 85.90511540000001 2.974)
Error minima by case: (0.0301 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 72.489 2 4.7837 10 0.1372 2 77.539 1 0.2706 1 0.0171 2 0.3492 7 0.1338 2 25.7343 10 0.4644 1 20.7137 2 0.0894 6 0.0265 6 0.0908 2 35.935 2 0.0202 6 7.791 2 29.4276 2 8.3031 2)
Average genome size in population (length): 89.466
Average program size in population (points): 90.466
Average percent parens in population: 0.011
Minimum age in population: 180.3418282149047
Maximum age in population: 185.2732999074084
Average age in population: 183.3588815715078
Median age in population: 183.4068480400575
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.846
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.846
Total error diversity:				 0.436
Error (vector) diversity:			 0.439
Behavioral diversity:				 0.44
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 180932848
--- Timings ---
Current time: 1529615219568 milliseconds
Total Time:         442.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.9 seconds, 38.0%
Fitness Testing:    217.5 seconds, 49.2%
Report:              56.6 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 53997.507200000044
Test mean error for best: 26.99875
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 7.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 30.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 21.1369190056 
Correct output: -50.868100625  | Program output: -52.5741150484
Correct output: 23.5384229728  | Program output: 3.4244742578  
Correct output: -9.9640986393  | Program output: -0.8597438545 
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -23.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 29.636754917  
Correct output: 6.5371282958   | Program output: 16.7462061319 
Correct output: 183.0405782309 | Program output: 180.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 7.3066746879  
Correct output: 151.8048643924 | Program output: 165.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_rot} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_rot in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [18.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 1.6517 9 99.0 2 29.1583 11 1.706 9 20.1139 8 9.1044 10 75.0 13 1.6027 9 24.0 2 3.3976 10 10.2091 11 2.9594 10 43.0 2 1.5494 7 13.8049 11 44.0 2 21.0 2]
Total: 804.3525000000001
Mean: 16.08705
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2285.783991700001
Median total errors in population: 906.3159999999998
Error averages by case: (75.32197510000009 10.256 77.73026600000001 2.805 77.66905479999998 2.798 71.74449270000001 2.768 48.4040616 2.238 92.27137400000002 3.737 133.19414630000003 2.797 97.44806320000002 11.272 58.265380400000375 8.576 149.42394620000002 2.797 80.36277700000002 9.957 77.84846380000023 9.31 83.55411839999933 9.928 83.94840639999944 9.506 126.27862559999996 13.185 69.09539199999996 9.614 78.15313150000003 2.734 76.09134540000035 11.27 66.19068149999995 11.059 78.16257260000063 9.397 97.09367540000002 2.734 62.846067200000284 9.613 78.91133480000114 10.286 96.8167922 2.674 74.8448476 2.802)
Error minima by case: (0.1028 6 20.3321 2 22.0 2 16.0 2 0.4079 1 37.0 3 82.0 2 9.3853 9 0.1325 2 79.539 2 0.1569 1 0.0171 2 0.0572 7 0.1338 2 23.8729 10 0.0758 2 24.0 2 1.9106 8 0.0728 7 0.0406 2 31.4742 2 0.0168 6 11.8049 2 30.4276 2 7.4903 2)
Average genome size in population (length): 90.29
Average program size in population (points): 91.29
Average percent parens in population: 0.011
Minimum age in population: 181.8115290746872
Maximum age in population: 187.0688885915777
Average age in population: 184.8226403523131
Median age in population: 184.8641620899326
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.449
Error (vector) diversity:			 0.45
Behavioral diversity:				 0.45
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 183193048
--- Timings ---
Current time: 1529615223809 milliseconds
Total Time:         446.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.3 seconds, 37.9%
Fitness Testing:    219.9 seconds, 49.2%
Report:              57.2 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 86
Size: 87
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2226.328971200001
Median total errors in population: 920.1532
Error averages by case: (74.39214649999988 10.359 75.97676010000005 2.971 75.74451709999998 2.97 69.01718589999999 2.902 48.04966109999997 2.447 90.73994409999999 3.861 130.9355802 2.932 94.60151780000007 11.25 54.812796300000315 8.427 146.9734725 2.953 75.59707370000004 9.731 74.70192760000015 9.241 80.74334589999951 10.065 73.80353089999977 9.199 124.44446729999994 13.145 67.20494160000007 9.327 75.3866401 2.889 75.15558260000016 11.074 65.58876179999992 11.098 78.16967400000057 9.301 94.85793930000001 2.864 61.15037590000018 9.955 76.63224430000098 10.195 93.96004680000001 2.742 72.81083780000003 2.98)
Error minima by case: (0.1125 6 22.0 2 15.3762 2 16.0 2 0.0 0 37.0 3 70.489 2 6.5223 9 0.3483 2 77.539 1 0.0213 2 0.0554 2 0.3626 6 0.2663 2 26.3133 10 0.0378 2 20.7137 2 1.3976 7 0.0281 6 0.0908 2 14.4118 2 0.008 6 11.8049 2 29.4276 2 1.7937 2)
Average genome size in population (length): 90.845
Average program size in population (points): 91.845
Average percent parens in population: 0.011
Minimum age in population: 182.8796766706542
Maximum age in population: 188.3054683999648
Average age in population: 186.1995076399793
Median age in population: 186.2502675318705
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.82
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.82
Total error diversity:				 0.466
Error (vector) diversity:			 0.469
Behavioral diversity:				 0.469
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 185466398
--- Timings ---
Current time: 1529615227997 milliseconds
Total Time:         450.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.7 seconds, 37.9%
Fitness Testing:    222.1 seconds, 49.3%
Report:              57.8 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction print_float} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth float_dec integer_stackdepth integer_mult integer_max print_float float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2611.4540641000026
Median total errors in population: 884.5415
Error averages by case: (89.60990700000036 10.388 89.5708341 3.026 89.5076878 3.018 83.61853190000001 3.078 68.27013380000001 2.441 103.64931010000002 4.016 144.32854270000004 3.074 108.86206750000007 11.294 71.03426230000032 8.412 159.37618510000001 3.103 94.44845199999978 9.766 89.94656370000017 9.383 98.20391529999955 10.102 91.43930039999952 9.354 137.1269632 13.229 82.16982629999987 9.368 88.96137999999999 3.014 89.73155590000006 11.038 83.0468008999996 11.199 96.28038710000125 9.38 108.47358050000004 2.88 78.99865449999999 9.947 92.45894930000117 10.319 107.93388979999997 2.859 87.70438289999997 3.014)
Error minima by case: (0.0258 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 6.5586 9 0.1325 2 24.461 2 2.4289 2 0.0171 2 0.8298 7 0.0154 2 23.8729 11 0.0311 2 6.2863 2 0.0743 8 0.0502 7 0.0406 2 25.5741 2 0.0272 6 0.9205 2 16.5724 2 1.7517 2)
Average genome size in population (length): 90.239
Average program size in population (points): 91.239
Average percent parens in population: 0.011
Minimum age in population: 184.2353377703524
Maximum age in population: 189.499343307198
Average age in population: 187.4919837498097
Median age in population: 187.5290860201336
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.439
Error (vector) diversity:			 0.441
Behavioral diversity:				 0.441
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 187725023
--- Timings ---
Current time: 1529615232112 milliseconds
Total Time:         454.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.0 seconds, 37.8%
Fitness Testing:    224.3 seconds, 49.3%
Report:              58.3 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2701.8201777000018
Median total errors in population: 919.0120499999998
Error averages by case: (95.26334220000068 10.399 92.70490879999997 3.01 92.62193050000003 2.985 88.1971527 3.113 67.15478090000005 2.395 108.44885099999995 4.012 147.90396019999997 3.102 111.50648230000006 11.281 74.35922630000024 8.167 163.62608290000009 3.143 96.21156589999968 9.55 91.75156470000037 8.991 102.60179029999922 10.038 91.45958999999914 9.298 139.5863137 13.227 83.36136340000023 9.156 94.09765379999999 3.066 90.1498969999998 10.856 87.25457009999921 11.184 109.49910150000215 9.197 111.01831930000002 2.85 88.71284110000023 9.673 97.83484060000121 10.077 112.3881176 2.835 89.50193089999998 2.999)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 3.6262 10 0.3483 2 24.461 2 4.2952 1 0.0171 1 0.3626 7 0.1338 2 23.8729 11 0.0311 2 6.2863 2 0.2008 7 0.0403 7 0.7954 2 33.8319 2 0.0272 6 11.8049 2 16.5724 2 6.506 2)
Average genome size in population (length): 87.808
Average program size in population (points): 88.808
Average percent parens in population: 0.011
Minimum age in population: 186.1201300151682
Maximum age in population: 190.6798719484322
Average age in population: 188.8974736467404
Median age in population: 188.9444588131538
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 53
Genome diversity (% unique Plush genomes):	 0.803
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 53
Syntactic diversity (% unique Push programs):	 0.803
Total error diversity:				 0.403
Error (vector) diversity:			 0.406
Behavioral diversity:				 0.407
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 189922173
--- Timings ---
Current time: 1529615236246 milliseconds
Total Time:         458.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.3 seconds, 37.8%
Fitness Testing:    226.5 seconds, 49.4%
Report:              58.9 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_add} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max integer_add float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2541.0162100000002
Median total errors in population: 890.7428999999998
Error averages by case: (86.18169530000064 10.242 86.6093941 2.871 86.81107640000002 2.859 80.4098334 2.94 63.024728999999994 2.351 101.0096305 3.893 141.63372809999998 2.961 106.66409200000004 11.251 69.60025330000043 8.266 157.261392 2.971 92.91640339999972 9.581 85.74101570000037 8.933 92.70684279999904 9.787 83.04940419999895 9.377 134.92784 13.187 78.2364469000005 9.2 87.12297140000001 2.9 79.89608249999925 10.709 79.50390089999924 11.199 108.10288050000223 9.229 105.8044581 2.745 78.76408120000052 9.241 92.44399330000122 10.145 105.87136809999998 2.74 84.2666969 2.878)
Error minima by case: (0.1125 8 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 5.4762 8 0.1617 2 22.2194 2 2.0213 1 0.0171 2 1.1232 7 0.1338 2 19.2176 9 0.3973 2 17.0207 2 0.6024 7 0.164 7 0.0908 2 36.0064 2 0.1299 6 10.5622 2 11.6004 2 1.5253 2)
Average genome size in population (length): 85.749
Average program size in population (points): 86.749
Average percent parens in population: 0.012
Minimum age in population: 187.7491067548214
Maximum age in population: 192.3546965811183
Average age in population: 190.2936931377106
Median age in population: 190.3405048809174
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 59
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 59
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.377
Error (vector) diversity:			 0.379
Behavioral diversity:				 0.38
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 192067623
--- Timings ---
Current time: 1529615240411 milliseconds
Total Time:         463.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.7 seconds, 37.7%
Fitness Testing:    228.7 seconds, 49.4%
Report:              59.5 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2316.7935868999994
Median total errors in population: 862.78845
Error averages by case: (77.69633049999986 10.238 78.13819180000002 2.84 78.04335940000001 2.818 72.35362330000002 2.975 56.2444851 2.313 93.4919092 3.891 133.20698800000002 2.959 98.40648930000005 11.292 58.74658160000032 8.446 149.2940266 2.974 86.2154503000002 9.852 76.46581699999989 9.031 85.5446591999989 9.783 71.68248159999892 9.582 127.10393789999995 13.257 68.49477870000085 9.301 77.36463619999999 2.902 70.47051919999909 10.528 70.54965739999994 11.227 88.39941280000114 9.454 97.72591750000004 2.723 75.24285110000055 9.176 80.52698130000141 10.382 96.19740879999999 2.758 75.6660931 2.819)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 68.489 2 11.8528 10 0.1617 2 75.539 1 2.0213 1 0.0171 2 0.0234 7 0.1639 2 34.3755 10 0.3973 2 18.7137 2 0.1758 7 0.0503 6 0.0908 2 36.7754 2 0.0064 6 10.5622 2 28.4276 2 11.0015 2)
Average genome size in population (length): 85.369
Average program size in population (points): 86.369
Average percent parens in population: 0.012
Minimum age in population: 189.3736707454792
Maximum age in population: 193.7891791683594
Average age in population: 191.7492717248618
Median age in population: 191.7847291634006
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.381
Error (vector) diversity:			 0.383
Behavioral diversity:				 0.384
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 194203048
--- Timings ---
Current time: 1529615244488 milliseconds
Total Time:         467.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.1 seconds, 37.7%
Fitness Testing:    230.9 seconds, 49.4%
Report:              60.1 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_cos} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_513})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth float_cos integer_stackdepth float_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_513)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 86
Size: 87
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2625.4440635999968
Median total errors in population: 872.0769
Error averages by case: (89.82108340000035 10.283 90.87028630000005 2.958 90.66214939999999 2.91 85.00800429999998 3.046 64.8169697 2.473 105.15149530000001 3.969 145.10851340000002 3.025 110.49772740000003 11.304 72.19145540000002 8.174 161.04947119999994 3.033 93.63646269999991 9.937 88.3847652999998 8.951 97.51498309999893 9.998 84.69445979999897 9.607 138.5989129 13.257 82.28341120000078 9.335 90.8056203 2.968 82.18382999999915 10.304 82.15081129999932 11.396 105.75104480000142 9.393 109.68689919999997 2.818 89.3671383999999 9.246 93.3088425000013 10.28 109.03045170000001 2.802 88.4542746 2.948)
Error minima by case: (0.0784 7 20.3321 2 22.0 2 16.0 2 0.717 1 37.0 3 15.511 2 10.0076 9 0.1617 2 25.461 2 1.2005 2 0.0637 2 0.5452 7 0.4685 2 24.8496 9 0.3973 2 7.2863 2 0.4386 7 0.0124 6 0.0908 2 29.6553 2 0.0064 6 9.8049 2 17.0866 2 6.2205 2)
Average genome size in population (length): 86.289
Average program size in population (points): 87.289
Average percent parens in population: 0.011
Minimum age in population: 190.9984611224591
Maximum age in population: 194.9220252874975
Average age in population: 193.1249007193003
Median age in population: 193.1596109532019
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.816
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.816
Total error diversity:				 0.365
Error (vector) diversity:			 0.37
Behavioral diversity:				 0.37
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 196361973
--- Timings ---
Current time: 1529615248592 milliseconds
Total Time:         471.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.4 seconds, 37.7%
Fitness Testing:    233.1 seconds, 49.5%
Report:              60.6 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_add} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_701} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_frominteger} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yankdup integer_yank integer_fromfloat integer_pop integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_add float_max float_sin in2 tag_float_701 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add float_inc float_inc float_add in1 float_yankdup print_float float_frominteger 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2532.298755199997
Median total errors in population: 884.8390499999998
Error averages by case: (87.5544994000003 10.344 86.07423419999999 2.801 86.1276237 2.776 81.6396696 2.924 58.72711779999999 2.207 101.7054457 3.836 142.2703455 2.932 106.59088170000003 11.315 68.57837719999968 7.753 158.23755780000002 2.935 91.07740859999994 9.715 86.7672441 8.678 96.71652059999897 10.199 82.19883319999897 9.415 134.88566179999998 13.3 79.44580740000075 9.133 87.75692469999997 2.863 78.07164439999923 10.231 78.27635649999927 11.554 99.55906510000163 9.181 105.9831278 2.696 81.16850559999936 9.32 90.6623742000012 10.098 106.3207376 2.699 84.19979099999999 2.798)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 72.5998 2 1.6335 8 0.3483 2 78.5236 2 2.1872 1 0.294 2 0.5698 7 0.9328 2 25.7343 10 0.3973 2 20.7137 2 0.4386 7 0.0502 6 0.0908 2 38.9189 2 0.0196 6 3.7097 2 30.4276 2 11.6379 2)
Average genome size in population (length): 87.119
Average program size in population (points): 88.119
Average percent parens in population: 0.011
Minimum age in population: 192.498566660036
Maximum age in population: 196.5281543706412
Average age in population: 194.5126118682932
Median age in population: 194.5524823889108
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 43
Genome diversity (% unique Plush genomes):	 0.82
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 43
Syntactic diversity (% unique Push programs):	 0.82
Total error diversity:				 0.368
Error (vector) diversity:			 0.372
Behavioral diversity:				 0.372
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 198542273
--- Timings ---
Current time: 1529615252729 milliseconds
Total Time:         475.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.8 seconds, 37.6%
Fitness Testing:    235.3 seconds, 49.5%
Report:              61.2 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2679.8099628999994
Median total errors in population: 865.73965
Error averages by case: (92.01130720000077 10.307 92.35073249999996 3.004 92.37686630000005 2.987 87.7467973 3.005 67.8614576 2.509 107.66018660000003 3.943 147.86837520000006 3.023 111.81143210000003 11.343 73.98359729999916 7.794 163.69463849999994 3.017 97.86699769999977 9.885 90.30947339999965 8.564 99.99163569999878 10.238 90.31330639999861 9.436 139.91046179999992 13.277 83.58577200000107 9.183 93.06492989999998 2.965 84.72509629999895 10.186 87.44390119999882 11.658 108.46173210000218 9.367 111.16771820000007 2.884 84.06684569999881 9.247 95.9840904000014 10.254 112.08496039999996 2.829 89.55265109999996 3.01)
Error minima by case: (0.1125 8 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 72.489 2 9.7245 9 0.3483 2 79.539 2 1.9787 1 0.294 2 0.1197 8 0.577 2 4.084 8 0.1286 2 8.7014 2 0.4386 7 0.016 6 0.9594 2 36.5945 2 0.0263 6 12.5622 2 30.4276 2 7.6428 2)
Average genome size in population (length): 87.186
Average program size in population (points): 88.186
Average percent parens in population: 0.011
Minimum age in population: 193.680281637639
Maximum age in population: 197.7600329201753
Average age in population: 195.8832433060014
Median age in population: 195.9186270019509
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.813
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.813
Total error diversity:				 0.324
Error (vector) diversity:			 0.332
Behavioral diversity:				 0.333
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 200723773
--- Timings ---
Current time: 1529615256842 milliseconds
Total Time:         479.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.1 seconds, 37.6%
Fitness Testing:    237.5 seconds, 49.5%
Report:              61.7 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_add} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.1980674425524} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max integer_add float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.1980674425524 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2168.9428359999997
Median total errors in population: 854.0574
Error averages by case: (68.80554999999946 10.129 74.28471970000004 2.8 74.10104019999999 2.791 67.89071179999999 2.906 48.06912499999999 2.292 88.5644539 3.851 128.98805620000002 2.905 93.78236310000004 11.209 51.954207400000016 7.613 145.14706829999994 2.92 76.77632060000016 9.822 67.9894654000006 8.529 76.39557719999905 10.065 65.82940239999908 9.428 122.62029669999997 13.151 61.88585140000074 9.14 72.66113170000003 2.855 61.80583009999921 10.008 63.40451380000008 11.502 90.98174010000133 9.297 93.4048063 2.717 65.68117169999917 9.122 74.06645550000113 10.136 92.0923297 2.724 71.0376478 2.811)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 29.0357 3 82.0 2 9.1647 9 0.3483 2 78.539 2 0.0213 1 0.294 2 0.2294 8 0.2569 2 25.1413 10 0.6027 2 22.7137 2 0.3976 7 0.0283 6 0.0406 2 35.7269 2 0.0126 6 12.8049 2 30.4276 2 8.0423 2)
Average genome size in population (length): 86.784
Average program size in population (points): 87.784
Average percent parens in population: 0.011
Minimum age in population: 195.1869217384803
Maximum age in population: 199.2798630746042
Average age in population: 197.2504915400555
Median age in population: 197.2804198623857
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.826
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.826
Total error diversity:				 0.342
Error (vector) diversity:			 0.343
Behavioral diversity:				 0.343
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 202894998
--- Timings ---
Current time: 1529615260986 milliseconds
Total Time:         483.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.5 seconds, 37.5%
Fitness Testing:    239.7 seconds, 49.6%
Report:              62.3 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_701} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_frominteger} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_701 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_dup float_inc float_inc float_add float_inc float_inc float_add in1 float_yankdup print_float float_frominteger 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2357.7879169999987
Median total errors in population: 865.4868000000001
Error averages by case: (78.74054839999992 10.268 79.23369650000004 2.893 79.27049629999999 2.843 74.22419850000001 2.948 58.05656729999999 2.27 94.4902784 3.889 135.01706670000002 2.956 99.09667540000002 11.345 61.18027969999948 7.79 151.11187159999997 2.952 86.85496770000003 9.956 77.46122980000011 8.717 88.38782039999894 10.232 75.85633359999906 9.599 127.61039419999999 13.32 71.31330770000075 9.323 80.08380160000003 2.909 71.6352009999992 10.233 71.59887429999968 11.669 91.33663070000101 9.441 98.32453490000003 2.788 75.22421579999923 9.257 82.86118810000112 10.306 98.65486930000002 2.793 76.58286910000001 2.883)
Error minima by case: (0.1125 7 21.0 2 21.0 2 15.0 2 0.0 0 20.7286 2 13.511 2 7.5223 9 0.3483 1 23.461 1 1.7949 1 0.294 2 0.5698 8 0.1338 2 24.8496 11 0.6154 2 5.2863 2 0.3639 7 0.0493 7 0.0406 2 38.7358 2 0.0373 6 11.8049 2 15.5724 2 6.4663 1)
Average genome size in population (length): 87.457
Average program size in population (points): 88.457
Average percent parens in population: 0.011
Minimum age in population: 196.2929306223803
Maximum age in population: 200.6758571084944
Average age in population: 198.6139988052144
Median age in population: 198.661895816643
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.843
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.336
Error (vector) diversity:			 0.344
Behavioral diversity:				 0.344
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 205084123
--- Timings ---
Current time: 1529615265116 milliseconds
Total Time:         487.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.9 seconds, 37.5%
Fitness Testing:    241.9 seconds, 49.6%
Report:              62.9 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction 6} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_402} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove 6 integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_402 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 86
Size: 87
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2420.818276699998
Median total errors in population: 855.0243
Error averages by case: (81.60298200000014 10.233 82.83471159999999 2.889 82.8523435 2.837 76.9829539 2.983 58.02657529999999 2.391 95.91672400000002 3.885 137.19468970000003 2.976 102.46766750000003 11.301 64.19789599999957 7.758 153.2494154 2.973 88.6089693000001 9.937 79.24278130000015 8.629 88.53901599999898 10.187 76.03327229999906 9.568 131.06968389999997 13.277 73.5563392000006 9.23 82.2074556 2.901 72.8092392999993 10.14 77.3374830999993 11.649 98.00140660000123 9.368 101.96875750000002 2.783 76.63761129999915 9.195 85.57119770000116 10.301 100.8434651 2.775 80.02263959999998 2.877)
Error minima by case: (0.8875 6 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 82.0 2 11.1501 9 0.3483 2 99.0 2 0.0213 1 0.2272 2 0.8421 7 0.1639 2 28.2819 11 0.7736 2 22.7137 2 0.1353 7 0.0444 6 0.0406 2 41.4465 2 0.0272 6 6.8334 2 31.4276 2 21.0 2)
Average genome size in population (length): 87.055
Average program size in population (points): 88.055
Average percent parens in population: 0.011
Minimum age in population: 197.8624161208184
Maximum age in population: 202.0918112325698
Average age in population: 199.9664213051328
Median age in population: 199.9804831003638
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.324
Error (vector) diversity:			 0.33
Behavioral diversity:				 0.33
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 207262898
--- Timings ---
Current time: 1529615269195 milliseconds
Total Time:         491.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       184.2 seconds, 37.5%
Fitness Testing:    244.1 seconds, 49.6%
Report:              63.4 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_add} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_mult} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat float_yank integer_mult integer_stackdepth integer_mult integer_max integer_add float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_mult float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_max float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2426.5681579999987
Median total errors in population: 883.5487499999999
Error averages by case: (80.76297510000033 10.231 83.6156237 2.904 83.48671190000002 2.866 76.4290276 2.96 59.847668099999986 2.364 97.41225730000001 3.892 137.43585290000001 2.984 103.00632770000006 11.271 63.78168139999946 7.71 152.9273144 2.977 88.2970099 9.827 79.93892389999976 8.597 90.37368719999893 10.178 77.14409199999882 9.433 131.33199299999995 13.205 73.46284340000093 9.21 82.11566579999999 2.906 73.23921019999901 10.136 74.92307419999914 11.59 95.4187546000017 9.339 102.46109700000001 2.8 77.54498429999889 9.244 87.2868789000014 10.206 100.69439460000001 2.788 81.10910889999997 2.903)
Error minima by case: (0.1682 7 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 38.3455 2 8.9714 9 0.3483 2 49.7199 2 4.0213 1 0.294 2 0.3626 7 0.4685 2 25.7343 10 0.3973 1 16.7137 2 0.2775 7 0.0331 7 0.0406 2 31.1957 2 0.0152 6 11.8049 2 2.4069 2 8.7949 2)
Average genome size in population (length): 86.865
Average program size in population (points): 87.865
Average percent parens in population: 0.011
Minimum age in population: 198.9969155539938
Maximum age in population: 203.345376004836
Average age in population: 201.3306777029401
Median age in population: 201.333291268239
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.877
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.877
Total error diversity:				 0.336
Error (vector) diversity:			 0.337
Behavioral diversity:				 0.338
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 209436498
--- Timings ---
Current time: 1529615273281 milliseconds
Total Time:         495.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.5 seconds, 37.4%
Fitness Testing:    246.3 seconds, 49.7%
Report:              64.0 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_mult} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (integer_yank integer_fromfloat integer_stackdepth float_mod integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan float_mult float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2606.4475602999983
Median total errors in population: 879.9055
Error averages by case: (87.57997190000022 10.318 90.3945961 2.936 90.39592890000003 2.867 84.47219819999998 3.051 64.8950626 2.333 104.08268899999999 3.972 144.47319120000003 3.05 110.42957160000003 11.36 70.84907259999922 7.924 161.0157459 3.053 92.48041360000008 10.031 88.91233529999994 8.872 93.31163689999892 10.261 84.24851139999895 9.697 138.52372909999994 13.332 81.44927530000093 9.439 89.8336447 2.975 81.38064709999921 10.224 80.3613196999994 11.548 110.51383300000211 9.549 109.39440020000004 2.809 81.05258959999894 9.277 93.96307530000128 10.399 108.91013280000001 2.817 88.51198829999998 2.918)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 32.6984 3 82.0 2 9.867 9 0.3483 2 28.7025 2 0.0213 1 0.294 2 0.1367 7 0.4685 2 28.2819 10 0.3973 2 22.7137 2 0.3976 7 0.0058 6 0.0406 2 33.8319 2 0.0233 6 1.1368 2 19.0572 1 6.506 2)
Average genome size in population (length): 87.038
Average program size in population (points): 88.038
Average percent parens in population: 0.011
Minimum age in population: 200.4516625879259
Maximum age in population: 204.855315777832
Average age in population: 202.668003607731
Median age in population: 202.6942532752024
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.869
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.869
Total error diversity:				 0.361
Error (vector) diversity:			 0.365
Behavioral diversity:				 0.365
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 211613823
--- Timings ---
Current time: 1529615277388 milliseconds
Total Time:         500.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.9 seconds, 37.4%
Fitness Testing:    248.6 seconds, 49.7%
Report:              64.5 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 54097.24840000005
Test mean error for best: 27.04862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.1369190056 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_mod} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_add} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_mod integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max integer_add float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 27.1583 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.5383
Mean: 15.950766
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2951.5597553999983
Median total errors in population: 912.4632499999999
Error averages by case: (102.13700290000071 10.401 103.89955970000001 3.114 103.96759350000004 3.088 97.71081709999999 3.182 77.79472450000011 2.766 116.97337750000003 4.115 157.1138305 3.197 123.20146540000003 11.367 86.20396169999923 7.897 172.6674661 3.21 105.7628729999998 9.879 105.40088339999944 8.784 108.89898419999892 10.336 97.51990079999891 9.505 150.83992640000005 13.309 95.25454510000097 9.321 103.52104979999999 3.128 94.82824799999904 10.249 96.76542559999879 11.608 121.84652130000242 9.46 122.50114040000005 2.968 99.03537539999894 9.466 108.0681185000014 10.343 121.61754739999999 2.937 101.29141719999998 3.108)
Error minima by case: (1.0857 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 54.1585 2 9.0667 9 0.3483 2 79.539 2 0.0213 1 0.294 2 0.5698 7 0.9328 2 16.6836 10 0.3973 2 12.0662 2 0.3976 7 0.0502 7 0.0406 2 35.4351 2 0.1284 6 4.8802 2 12.6883 2 2.3276 2)
Average genome size in population (length): 86.958
Average program size in population (points): 87.958
Average percent parens in population: 0.011
Minimum age in population: 201.9497421391384
Maximum age in population: 206.0909738596551
Average age in population: 204.0376981095145
Median age in population: 204.0317134958044
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.359
Error (vector) diversity:			 0.361
Behavioral diversity:				 0.361
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 213789648
--- Timings ---
Current time: 1529615281482 milliseconds
Total Time:         504.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.2 seconds, 37.3%
Fitness Testing:    250.8 seconds, 49.7%
Report:              65.0 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2594.963622399999
Median total errors in population: 858.2236
Error averages by case: (86.6183839000002 10.259 90.43597739999998 3.004 90.45106840000004 2.967 84.22474180000003 3.106 64.3980579 2.391 103.00916309999998 4.016 143.66914780000005 3.096 109.78655680000007 11.328 71.35397409999928 7.904 159.57099260000004 3.104 93.10741539999982 10.03 89.58464049999975 8.767 94.51052159999877 10.219 83.1046089999989 9.685 138.03221339999996 13.256 81.572795700001 9.46 88.93933649999998 3.043 80.97393399999903 10.235 81.3612761999995 11.615 105.04855200000185 9.556 109.29704760000001 2.9 80.96003589999894 9.231 93.68196240000152 10.42 108.27454509999995 2.88 87.53267329999996 2.992)
Error minima by case: (0.249 7 22.0 2 22.0 2 16.0 2 0.0 0 32.6984 3 72.489 2 9.5223 10 0.3483 2 28.7025 2 1.212 1 0.294 2 0.379 7 0.0154 2 25.8936 11 0.1286 2 22.7137 2 0.1434 7 0.0634 7 0.0406 2 20.6581 2 0.0272 6 4.8802 2 31.4276 2 2.581 2)
Average genome size in population (length): 86.46
Average program size in population (points): 87.46
Average percent parens in population: 0.011
Minimum age in population: 202.9497421391384
Maximum age in population: 207.3112759829496
Average age in population: 205.3056462765631
Median age in population: 205.3616475188474
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.86
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.86
Total error diversity:				 0.361
Error (vector) diversity:			 0.363
Behavioral diversity:				 0.363
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 215953498
--- Timings ---
Current time: 1529615285621 milliseconds
Total Time:         508.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.5 seconds, 37.3%
Fitness Testing:    253.0 seconds, 49.8%
Report:              65.6 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2850.6059290999983
Median total errors in population: 871.9001999999999
Error averages by case: (99.96417640000055 10.337 99.21076929999995 3.075 99.17120000000007 3.035 94.13707649999999 3.15 71.42491410000002 2.499 114.0829391 4.07 153.9632822 3.132 118.51273310000006 11.346 80.03309059999935 7.751 170.0818501 3.142 102.73979439999987 9.864 97.88451649999975 8.671 109.55488919999883 10.301 95.94119159999892 9.505 146.4591115 13.278 91.13272450000085 9.266 100.49850009999996 3.063 91.09916949999919 10.252 92.34864669999895 11.665 114.4366236000019 9.365 118.08758890000004 2.94 96.18150309999886 9.368 102.52932170000123 10.2 118.8613454 2.919 97.01897099999995 3.056)
Error minima by case: (0.44 7 21.0 2 21.0 2 15.0 2 1.0 1 36.0 2 14.511 2 8.1047 9 0.3321 1 24.461 2 0.0213 1 0.294 2 0.4548 8 1.0988 2 24.8496 10 0.6154 2 6.2863 1 0.6024 7 0.0175 7 0.6826 2 37.0612 2 0.0272 6 2.4857 2 14.8553 2 7.6428 1)
Average genome size in population (length): 86.746
Average program size in population (points): 87.746
Average percent parens in population: 0.011
Minimum age in population: 203.9497421391384
Maximum age in population: 208.9262239666534
Average age in population: 206.7119399035005
Median age in population: 206.7285775225465
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.339
Error (vector) diversity:			 0.339
Behavioral diversity:				 0.339
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 218123723
--- Timings ---
Current time: 1529615289754 milliseconds
Total Time:         512.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.9 seconds, 37.3%
Fitness Testing:    255.2 seconds, 49.8%
Report:              66.2 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2815.398817799999
Median total errors in population: 888.6345999999999
Error averages by case: (98.46363790000046 10.389 97.69920300000003 3.093 97.57796370000001 3.049 92.26632430000001 3.168 71.8581198 2.553 111.5413804 4.102 152.0000853 3.193 116.87524300000007 11.383 79.97580789999934 7.902 167.34066060000004 3.157 102.24068239999971 9.948 99.43535349999965 8.767 105.22632579999909 10.395 93.03801379999896 9.614 144.99837799999997 13.327 89.7193003000007 9.369 97.75538409999999 3.107 89.10278149999918 10.307 90.58969659999909 11.686 120.86042030000196 9.492 116.38421980000004 2.954 90.02792609999908 9.425 102.99248740000118 10.337 116.12269169999999 2.946 94.5657306 3.078)
Error minima by case: (0.2177 7 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 70.489 2 8.7124 9 0.3483 2 77.2393 2 0.0213 1 0.294 2 0.3512 8 0.0799 2 25.3388 11 0.1286 2 20.7137 2 0.3366 7 0.0446 7 0.9092 2 35.7914 2 0.2136 6 11.8049 2 28.4276 1 7.9205 2)
Average genome size in population (length): 86.944
Average program size in population (points): 87.944
Average percent parens in population: 0.011
Minimum age in population: 204.9497421391384
Maximum age in population: 210.0645514969271
Average age in population: 208.1162093883024
Median age in population: 208.1624746875378
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.891
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.891
Total error diversity:				 0.354
Error (vector) diversity:			 0.357
Behavioral diversity:				 0.358
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 220298948
--- Timings ---
Current time: 1529615293910 milliseconds
Total Time:         516.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.2 seconds, 37.2%
Fitness Testing:    257.5 seconds, 49.8%
Report:              66.8 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2403.3197598999977
Median total errors in population: 890.7638999999999
Error averages by case: (81.4752342000003 10.263 80.15623280000003 2.832 80.5930821 2.814 76.14068660000001 2.92 54.432504499999986 2.298 96.74387469999999 3.864 136.9388901 2.954 100.32353250000006 11.269 62.29231939999961 7.762 152.86468230000003 2.926 85.66530730000001 9.91 81.62333619999993 8.694 90.39687689999909 10.294 79.11010469999911 9.536 128.89383259999997 13.22 75.07463760000059 9.259 82.04994009999999 2.88 74.50358809999929 10.184 73.7091250999995 11.524 94.83399590000161 9.383 99.72877390000002 2.764 78.98062799999917 9.29 85.37129040000106 10.262 100.7605407 2.743 77.9647432 2.847)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 10.0076 9 0.3483 2 24.461 1 1.6581 1 0.1801 2 0.3777 8 0.1639 2 24.8496 11 0.3973 2 6.2863 2 0.3976 8 0.0502 7 0.0406 2 36.7358 2 0.0272 6 4.4857 2 16.5724 1 7.6428 2)
Average genome size in population (length): 86.977
Average program size in population (points): 87.977
Average percent parens in population: 0.011
Minimum age in population: 207.3328233699058
Maximum age in population: 211.930143594194
Average age in population: 209.5227092563885
Median age in population: 209.5473352943122
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.891
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.891
Total error diversity:				 0.376
Error (vector) diversity:			 0.378
Behavioral diversity:				 0.379
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 222475298
--- Timings ---
Current time: 1529615298025 milliseconds
Total Time:         520.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.5 seconds, 37.2%
Fitness Testing:    259.7 seconds, 49.9%
Report:              67.3 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2753.4259529999977
Median total errors in population: 902.3051
Error averages by case: (93.66043030000021 10.299 95.68826340000001 3.086 95.56017430000001 3.041 89.5974403 3.171 71.45567970000002 2.499 110.12211840000002 4.084 149.51621130000004 3.161 115.66171860000006 11.322 78.25902129999942 7.943 165.73738539999997 3.174 99.85380929999984 9.987 93.62582069999986 8.9 101.5677170999992 10.275 91.5773149999992 9.66 143.05636609999996 13.261 86.9328574000006 9.458 94.94224890000001 3.095 86.82478099999935 10.28 86.47084619999934 11.487 114.30611510000183 9.568 114.27983700000003 2.935 92.10533409999924 9.355 99.7911160000009 10.398 113.89829119999995 2.938 92.4960549 3.062)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 36.043 1 9.0667 9 0.3483 2 99.0 2 0.0213 1 0.294 2 0.5698 6 0.2243 2 25.0753 10 0.1627 2 20.7137 2 0.3639 7 0.016 5 0.0406 2 35.4758 2 0.003 5 6.8334 2 32.4276 2 7.3195 2)
Average genome size in population (length): 86.986
Average program size in population (points): 87.986
Average percent parens in population: 0.011
Minimum age in population: 208.3779283329593
Maximum age in population: 213.0134215261923
Average age in population: 210.8789707519561
Median age in population: 210.9104860767864
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.888
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.888
Total error diversity:				 0.386
Error (vector) diversity:			 0.39
Behavioral diversity:				 0.39
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 224651698
--- Timings ---
Current time: 1529615302168 milliseconds
Total Time:         524.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       194.9 seconds, 37.1%
Fitness Testing:    262.0 seconds, 49.9%
Report:              67.9 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2561.386623199998
Median total errors in population: 875.7936500000001
Error averages by case: (85.2605689000006 10.216 88.84586969999998 2.947 88.62332610000001 2.903 83.2435278 3.033 62.635669699999994 2.36 103.5025002 3.973 143.6191519 3.036 108.37052270000005 11.266 69.43673839999926 7.834 159.38356269999997 3.053 92.9348341999999 9.909 85.28522089999947 8.721 93.52242119999892 10.145 81.75988279999882 9.573 136.40181849999996 13.186 80.8856468000009 9.348 88.95208939999998 2.978 78.07239829999901 10.11 78.2850028999993 11.53 98.54203550000175 9.426 107.63763650000004 2.814 87.00791399999898 9.195 92.40220290000137 10.282 107.44776289999999 2.815 85.74331829999996 2.932)
Error minima by case: (0.6267 8 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 14.511 2 6.5223 10 0.3483 2 24.461 2 0.0682 2 0.1801 2 0.3777 7 1.3073 2 27.1976 10 0.3973 2 6.2863 1 0.3976 7 0.0502 8 0.0406 2 33.8319 2 0.0031 6 11.8049 2 16.5724 1 6.506 2)
Average genome size in population (length): 87.519
Average program size in population (points): 88.519
Average percent parens in population: 0.011
Minimum age in population: 209.3779283329593
Maximum age in population: 214.2935522483128
Average age in population: 212.1615715377295
Median age in population: 212.1786791982458
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.853
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.853
Total error diversity:				 0.368
Error (vector) diversity:			 0.37
Behavioral diversity:				 0.371
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 226841548
--- Timings ---
Current time: 1529615306266 milliseconds
Total Time:         528.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.2 seconds, 37.1%
Fitness Testing:    264.2 seconds, 49.9%
Report:              68.4 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2634.1139671999986
Median total errors in population: 878.7133999999999
Error averages by case: (91.00185080000038 10.323 90.36625429999998 2.914 90.17691180000003 2.859 84.4990357 2.989 65.35800849999998 2.336 104.7190087 3.93 145.172097 2.989 110.39571880000003 11.318 74.14156659999925 7.854 160.9503769 2.991 95.29013090000001 9.939 88.38376089999987 8.679 98.88119639999894 10.289 87.24944329999884 9.591 138.51459559999998 13.275 83.85825520000085 9.312 90.62881729999997 2.904 83.04584939999921 10.233 86.13563619999921 11.621 101.54050550000147 9.37 109.31369100000003 2.779 88.18037889999908 9.318 95.19875440000135 10.282 109.22811609999997 2.777 88.12400699999998 2.888)
Error minima by case: (0.249 7 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 81.0 2 2.973 9 0.3483 1 98.0 2 0.0213 2 0.294 2 0.0751 8 1.0581 2 25.7343 10 0.3846 2 22.7137 1 0.3976 7 0.0452 6 0.0406 2 33.8319 2 0.3057 6 6.4266 2 32.4276 1 6.506 1)
Average genome size in population (length): 88.908
Average program size in population (points): 89.908
Average percent parens in population: 0.011
Minimum age in population: 211.2861985804321
Maximum age in population: 215.4720755256199
Average age in population: 213.4802749828212
Median age in population: 213.5123523588459
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.839
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.839
Total error diversity:				 0.359
Error (vector) diversity:			 0.363
Behavioral diversity:				 0.364
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 229065898
--- Timings ---
Current time: 1529615310472 milliseconds
Total Time:         533.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.5 seconds, 37.0%
Fitness Testing:    266.5 seconds, 50.0%
Report:              69.0 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_swap} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_swap integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2728.3091458999997
Median total errors in population: 896.1245999999999
Error averages by case: (94.83371100000072 10.348 94.36369700000002 2.984 94.374025 2.938 90.06134500000002 3.058 64.90383939999998 2.479 110.1021244 3.987 149.9108449 3.067 114.89242550000006 11.333 76.9460853999991 7.761 165.59981839999998 3.062 96.99406069999968 9.819 93.88769079999949 8.718 102.45743179999886 10.277 91.64933319999871 9.596 141.88625530000002 13.296 86.90184120000092 9.354 95.72961889999999 2.993 85.53116829999905 10.244 85.50621389999878 11.608 105.12848780000198 9.304 113.20255210000002 2.87 91.86406399999896 9.371 101.64880630000145 10.173 113.83401129999999 2.844 91.63569429999997 2.98)
Error minima by case: (0.1125 6 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 14.511 2 0.2575 9 0.3483 2 24.461 2 2.0213 1 0.294 2 0.3777 8 0.44 2 27.8794 11 0.3846 2 6.2863 2 0.3976 7 0.0161 7 0.0406 2 32.2856 2 0.0032 6 10.8049 2 16.0866 2 5.2205 2)
Average genome size in population (length): 90.39
Average program size in population (points): 91.39
Average percent parens in population: 0.011
Minimum age in population: 212.3465419746824
Maximum age in population: 216.9677749421852
Average age in population: 214.8179800639337
Median age in population: 214.884745931728
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.833
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.833
Total error diversity:				 0.356
Error (vector) diversity:			 0.362
Behavioral diversity:				 0.364
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 231328423
--- Timings ---
Current time: 1529615314675 milliseconds
Total Time:         537.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.8 seconds, 37.0%
Fitness Testing:    268.8 seconds, 50.0%
Report:              69.6 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_148} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank in2 integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_148 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2364.2758005000005
Median total errors in population: 878.7133999999999
Error averages by case: (79.95266769999994 10.198 79.7812721 2.768 79.74358890000002 2.727 74.5819519 2.844 52.75483419999999 2.141 94.32076169999999 3.805 135.1427356 2.869 100.35036190000004 11.23 63.04503529999961 7.644 150.9041708 2.885 82.14405700000002 9.721 78.97242170000015 8.55 89.755178899999 10.164 75.73938659999915 9.453 128.7381543 13.176 73.91524700000068 9.248 80.15094509999999 2.83 72.29220919999933 10.161 73.16237809999976 11.51 86.04890630000092 9.177 99.19939600000001 2.67 81.24469199999905 9.207 85.03155280000108 10.05 99.26857859999998 2.668 77.58131679999998 2.758)
Error minima by case: (0.1125 7 3.4704 2 4.37 2 16.0 2 0.0 0 32.6984 3 13.511 2 37.2755 10 0.3483 2 23.461 2 2.728 1 0.294 2 0.3777 7 0.4685 2 31.7589 11 0.6154 2 5.2863 2 0.3639 7 0.0762 8 0.0908 2 34.1581 2 0.0064 6 11.8049 2 15.5724 1 10.729 2)
Average genome size in population (length): 91.812
Average program size in population (points): 92.812
Average percent parens in population: 0.011
Minimum age in population: 213.8602715791435
Maximum age in population: 217.9928907294767
Average age in population: 216.1145806000478
Median age in population: 216.1446850860681
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 43
Genome diversity (% unique Plush genomes):	 0.822
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 43
Syntactic diversity (% unique Push programs):	 0.822
Total error diversity:				 0.355
Error (vector) diversity:			 0.356
Behavioral diversity:				 0.356
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 233626773
--- Timings ---
Current time: 1529615318890 milliseconds
Total Time:         541.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       200.2 seconds, 37.0%
Fitness Testing:    271.1 seconds, 50.1%
Report:              70.1 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 54649.213300000054
Test mean error for best: 27.32461
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction tagged_619} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_shove} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_dec} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max tagged_619 float_dup_items tag_integer_197 tagged_481 float_max integer_shove float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_dec float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2080.3481435000017
Median total errors in population: 867.5699999999999
Error averages by case: (67.46662289999965 10.137 68.49988280000002 2.643 68.57140799999998 2.617 62.51643529999999 2.697 42.6945392 2.046 82.8960133 3.646 124.74909570000003 2.716 89.52264420000003 11.227 51.015609299999575 7.615 140.92579699999996 2.691 73.43512340000026 9.847 65.93175180000054 8.557 76.63598799999899 10.095 63.62798829999905 9.399 118.1598453 13.184 59.90465680000073 9.281 69.1703555 2.665 59.45314519999927 10.107 62.52435049999999 11.519 72.93896490000071 9.185 88.11162350000001 2.548 73.47212179999894 9.112 74.68868340000145 10.07 88.08193049999998 2.565 66.56056690000003 2.624)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 72.489 2 10.2524 10 0.3483 2 99.0 2 7.9104 1 0.294 2 0.0528 8 0.5396 2 6.6921 11 0.6154 2 11.3094 2 0.3976 7 0.0066 4 0.0406 2 38.8952 2 0.0577 6 13.8049 2 30.4276 2 10.729 2)
Average genome size in population (length): 92.318
Average program size in population (points): 93.318
Average percent parens in population: 0.011
Minimum age in population: 214.936353153609
Maximum age in population: 219.2519822932301
Average age in population: 217.4850048359532
Median age in population: 217.525190366448
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.839
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.839
Total error diversity:				 0.337
Error (vector) diversity:			 0.338
Behavioral diversity:				 0.338
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 235936798
--- Timings ---
Current time: 1529615323128 milliseconds
Total Time:         545.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.5 seconds, 36.9%
Fitness Testing:    273.4 seconds, 50.1%
Report:              70.7 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2401.848877200001
Median total errors in population: 880.3045
Error averages by case: (81.34681710000035 10.202 82.2571909 2.831 82.17210490000001 2.786 76.53551649999999 2.976 54.64400349999999 2.212 97.15825200000002 3.903 137.28492720000003 2.968 103.31725670000006 11.258 63.482169799999376 7.699 153.23699479999996 2.96 84.29738689999998 9.781 80.49840069999972 8.66 90.2741143999989 10.211 76.64339179999888 9.49 130.81017409999995 13.192 73.71351410000089 9.335 82.14071939999998 2.911 74.33081409999916 10.233 73.57700439999935 11.49 87.21622140000129 9.254 101.51766200000004 2.725 77.99519629999898 9.217 85.19287170000123 10.116 100.57804619999997 2.729 79.67112629999997 2.818)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 1 0.0 0 37.0 3 72.489 2 9.5223 10 0.3483 2 99.0 1 0.728 1 0.1988 2 0.3626 8 1.0581 2 29.0301 11 0.6027 1 22.7137 1 0.4386 7 0.0502 7 0.0406 2 36.7358 2 0.0192 6 10.8049 2 29.4276 2 10.4363 2)
Average genome size in population (length): 92.339
Average program size in population (points): 93.339
Average percent parens in population: 0.011
Minimum age in population: 215.936353153609
Maximum age in population: 220.8321891716985
Average age in population: 218.8680562958347
Median age in population: 218.9054117969928
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.871
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.871
Total error diversity:				 0.366
Error (vector) diversity:			 0.37
Behavioral diversity:				 0.37
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 238248498
--- Timings ---
Current time: 1529615327324 milliseconds
Total Time:         550.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.9 seconds, 36.9%
Fitness Testing:    275.7 seconds, 50.1%
Report:              71.3 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction tagged_630} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction float_pop} {:instruction tag_float_375})
Best program: (float_div float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec integer_rot in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div tagged_630 float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max float_pop tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2615.014398200002
Median total errors in population: 874.9908
Error averages by case: (89.20169240000052 10.32 90.9114 2.917 90.72632380000005 2.867 84.94786850000001 3.01 62.141673899999994 2.276 104.33735860000002 3.93 145.1433129 3.01 110.69767930000006 11.336 73.44648159999933 7.781 160.0820705 3.008 91.9442585999998 9.738 87.61912239999968 8.609 99.04438289999905 10.262 87.76634809999895 9.497 138.9244642 13.272 81.49732010000082 9.24 90.1224876 2.932 82.31872679999911 10.318 81.88115819999913 11.586 94.47333610000172 9.291 109.89849110000004 2.793 90.31797219999912 9.295 97.52009390000127 10.146 108.51571499999999 2.797 88.39965949999997 2.904)
Error minima by case: (0.1125 8 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 14.511 2 10.9182 10 0.3483 1 24.461 2 0.2185 1 0.2489 2 0.3777 7 1.5315 2 25.0753 10 0.3973 2 6.2863 2 0.4386 7 0.0221 7 0.8977 1 41.1031 2 0.0192 5 3.0 1 16.5724 2 6.9633 2)
Average genome size in population (length): 92.743
Average program size in population (points): 93.743
Average percent parens in population: 0.011
Minimum age in population: 216.936353153609
Maximum age in population: 222.203106421146
Average age in population: 220.1929781235467
Median age in population: 220.2170586738604
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.337
Error (vector) diversity:			 0.341
Behavioral diversity:				 0.342
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 240569948
--- Timings ---
Current time: 1529615331562 milliseconds
Total Time:         554.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.2 seconds, 36.8%
Fitness Testing:    278.1 seconds, 50.2%
Report:              71.8 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 54649.213300000054
Test mean error for best: 27.32461
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction tagged_481} {:instruction float_max} {:instruction integer_shove} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_dec} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_fromfloat integer_stackdepth integer_mult integer_stackdepth tagged_481 float_max integer_shove float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_dec float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2453.816504400001
Median total errors in population: 878.7133999999999
Error averages by case: (82.54121070000002 10.277 82.85459540000001 2.885 82.61426340000003 2.851 78.4456415 2.983 56.423160199999984 2.374 98.98600269999999 3.918 139.20875500000002 2.994 104.41103910000005 11.273 65.84181419999952 7.632 154.82427580000004 3.009 86.83932139999986 9.716 82.18131210000006 8.515 91.0103397999991 10.236 79.52622239999909 9.396 130.94620539999994 13.223 77.60583640000073 9.147 84.0540834 2.926 75.00910229999943 10.253 75.75016909999965 11.604 91.98788780000137 9.17 102.00224760000005 2.794 86.23313929999911 9.317 89.83679510000104 10.028 102.6347841 2.767 79.87430019999998 2.886)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 8.5223 9 0.3483 2 24.461 2 0.0674 1 0.294 2 0.322 7 0.4685 2 25.8496 10 0.3973 2 6.2863 2 0.3976 7 0.0502 7 0.0406 2 37.7358 2 0.0785 6 10.8049 2 16.5724 2 6.6428 2)
Average genome size in population (length): 92.855
Average program size in population (points): 93.855
Average percent parens in population: 0.011
Minimum age in population: 218.7153382472645
Maximum age in population: 223.5267690628259
Average age in population: 221.5371606804576
Median age in population: 221.571578705886
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.863
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.863
Total error diversity:				 0.353
Error (vector) diversity:			 0.357
Behavioral diversity:				 0.358
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 242895448
--- Timings ---
Current time: 1529615335795 milliseconds
Total Time:         558.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.6 seconds, 36.8%
Fitness Testing:    280.4 seconds, 50.2%
Report:              72.4 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction in1} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove float_shove in1 integer_swap integer_fromfloat integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2551.6780390000004
Median total errors in population: 879.1897999999999
Error averages by case: (87.36177270000056 10.363 84.83269579999998 2.825 85.0129524 2.788 83.7247401 2.953 58.884868999999995 2.149 103.69008370000002 3.877 144.1539218 2.954 105.51216160000004 11.292 68.31562949999937 7.695 159.995798 2.956 89.13302649999977 9.707 87.0636253999996 8.548 95.341040599999 10.301 84.3535234999989 9.423 133.48905249999999 13.248 80.97194140000093 9.216 89.78943749999995 2.897 79.98138239999919 10.298 79.53179299999913 11.589 94.76727020000176 9.236 104.11155410000003 2.716 95.80236259999873 9.358 92.90540560000146 10.088 108.28114049999996 2.733 82.65785859999998 2.803)
Error minima by case: (0.1125 7 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 14.511 2 36.2755 9 0.3483 1 24.461 1 0.4111 1 0.294 2 0.4903 7 0.1639 2 42.8489 10 0.2264 1 6.2863 2 0.3976 8 0.0137 6 0.0406 1 31.9584 2 0.0272 6 3.0 1 16.5724 2 2.952 1)
Average genome size in population (length): 92.846
Average program size in population (points): 93.846
Average percent parens in population: 0.011
Minimum age in population: 220.3310695516241
Maximum age in population: 225.005167141591
Average age in population: 222.796471676184
Median age in population: 222.8539663724382
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.86
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.86
Total error diversity:				 0.363
Error (vector) diversity:			 0.366
Behavioral diversity:				 0.367
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 245220573
--- Timings ---
Current time: 1529615340030 milliseconds
Total Time:         562.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.9 seconds, 36.8%
Fitness Testing:    282.7 seconds, 50.3%
Report:              72.9 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 54649.213300000054
Test mean error for best: 27.32461
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 integer_dec float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2155.585395800002
Median total errors in population: 867.5699999999999
Error averages by case: (71.34954359999963 10.119 71.75857020000004 2.766 71.72437639999998 2.743 65.94943239999999 2.882 45.9591631 2.276 86.7676794 3.827 127.10807240000004 2.89 91.87128100000001 11.191 55.30160399999999 7.549 143.39861119999998 2.9 75.6172397000002 9.611 69.0988196000005 8.466 79.40929869999925 10.137 71.4935586999992 9.33 120.3175069 13.137 63.12529360000035 9.193 71.5335378 2.837 63.78440299999965 10.176 65.04380400000001 11.503 76.3779273000005 9.063 90.87274520000003 2.679 71.26877999999923 9.207 77.47946530000091 9.899 90.28941509999999 2.678 68.86126720000001 2.765)
Error minima by case: (0.0916 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 10.598 9 0.3483 2 24.461 1 0.4111 1 0.294 2 0.634 7 0.9328 2 25.0753 10 0.3973 2 6.2863 2 0.3639 7 0.0493 7 0.0406 2 16.2759 2 0.0272 6 11.8049 2 16.5724 1 6.506 2)
Average genome size in population (length): 92.914
Average program size in population (points): 93.914
Average percent parens in population: 0.011
Minimum age in population: 221.3310695516241
Maximum age in population: 226.3347784813764
Average age in population: 224.0923085674647
Median age in population: 224.1239299301438
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.868
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.868
Total error diversity:				 0.356
Error (vector) diversity:			 0.36
Behavioral diversity:				 0.36
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 247546973
--- Timings ---
Current time: 1529615344243 milliseconds
Total Time:         566.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.2 seconds, 36.7%
Fitness Testing:    285.1 seconds, 50.3%
Report:              73.5 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_dup_times} {:instruction integer_dup} {:instruction float_max} {:instruction float_flush} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction float_rot} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_stackdepth float_shove float_shove float_shove integer_fromfloat integer_swap integer_fromfloat integer_stackdepth float_pop integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_dup_times integer_dup float_max float_flush in2 tag_float_668 float_tan float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div float_rot float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2706.5902500000025
Median total errors in population: 854.83695
Error averages by case: (91.59759230000049 10.266 93.77154070000002 2.982 93.80589710000005 2.949 88.2064872 3.083 70.2637213 2.387 107.83494580000001 4.002 148.05272810000005 3.109 113.81042160000004 11.326 77.27473109999951 7.954 163.82442410000002 3.104 99.05268879999957 10.024 92.34114769999967 8.796 99.872008299999 10.217 88.99847229999884 9.701 141.79405089999997 13.301 86.09613970000082 9.498 93.8159022 3.049 85.4134961999992 10.222 85.55829999999894 11.619 98.34141540000152 9.515 112.81984230000002 2.855 97.00417829999896 9.219 98.17853480000124 10.389 112.09632759999998 2.847 91.3672562 2.984)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 72.489 2 11.0076 9 0.3483 2 79.539 2 0.728 1 0.294 2 0.3521 6 0.1639 2 25.8496 11 0.3973 2 20.7137 2 0.3639 7 0.0502 7 0.2155 2 39.1029 2 0.0159 6 11.8049 2 30.4276 2 6.6428 2)
Average genome size in population (length): 92.857
Average program size in population (points): 93.857
Average percent parens in population: 0.011
Minimum age in population: 222.8281483502656
Maximum age in population: 227.5873903724071
Average age in population: 225.4165234154941
Median age in population: 225.4304379568901
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.873
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.873
Total error diversity:				 0.345
Error (vector) diversity:			 0.348
Behavioral diversity:				 0.348
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 249871323
--- Timings ---
Current time: 1529615348549 milliseconds
Total Time:         571.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.6 seconds, 36.7%
Fitness Testing:    287.4 seconds, 50.3%
Report:              74.0 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction print_integer} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction integer_add} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction float_yankdup})
Best program: (float_shove print_integer integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan integer_add float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 float_yankdup)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2330.5529234000005
Median total errors in population: 882.7020999999999
Error averages by case: (77.43103170000002 10.238 79.51160190000002 2.844 79.37620190000001 2.819 73.61436390000001 2.933 55.070065799999995 2.331 93.92447770000001 3.883 134.2444065 2.925 99.29979290000004 11.259 61.740532899999536 7.711 150.38139800000002 2.935 82.70019280000011 9.757 76.02164050000017 8.563 85.62334509999889 10.202 74.76723059999908 9.413 127.89777829999997 13.206 69.4633711000007 9.252 79.154443 2.865 70.19883359999936 10.244 70.20005849999983 11.505 83.56727060000098 9.244 98.76680770000002 2.754 77.3041045999992 9.267 83.87395280000128 10.113 97.85364130000004 2.748 76.71437970000001 2.841)
Error minima by case: (0.2177 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 10.1305 10 0.3483 1 24.461 2 0.728 1 0.294 2 0.1338 7 0.1639 2 25.9014 10 0.2264 2 6.2863 2 0.4386 6 0.0502 6 0.2155 1 36.8319 2 0.0107 6 3.0 1 16.5724 2 8.1687 2)
Average genome size in population (length): 92.311
Average program size in population (points): 93.311
Average percent parens in population: 0.011
Minimum age in population: 224.2477895558844
Maximum age in population: 228.8429340531974
Average age in population: 226.7956257772282
Median age in population: 226.8357000608111
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.896
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.896
Total error diversity:				 0.358
Error (vector) diversity:			 0.358
Behavioral diversity:				 0.358
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 252182248
--- Timings ---
Current time: 1529615352767 milliseconds
Total Time:         575.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       210.9 seconds, 36.7%
Fitness Testing:    289.7 seconds, 50.4%
Report:              74.6 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_flush} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_flush float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 94
Size: 95
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2417.3892082000007
Median total errors in population: 889.5099499999999
Error averages by case: (82.87509440000039 10.354 81.22084840000002 2.866 81.16539440000001 2.828 74.72072030000001 2.937 60.03799979999998 2.399 94.99146870000001 3.84 135.8271755 2.949 101.30031220000002 11.301 65.23596479999935 7.662 151.9231631 2.927 88.90536509999988 9.711 80.22152779999996 8.55 89.98765019999894 10.314 79.58746489999889 9.362 129.4825334 13.294 75.16066480000084 9.201 80.91528349999999 2.88 75.0689067999992 10.285 76.10128079999951 11.582 90.13973170000145 9.211 100.1865509 2.752 81.81109889999897 9.427 89.3652580000012 10.044 100.31474109999998 2.757 78.55600870000002 2.854)
Error minima by case: (0.3807 7 22.0 2 22.0 2 10.074 2 0.0 0 37.0 3 72.489 2 10.3121 9 0.3483 2 79.539 2 1.272 1 0.1801 2 0.4577 7 1.0581 2 29.2968 10 0.1286 2 5.0667 2 0.0059 6 0.0084 6 0.0406 2 35.6578 2 0.0348 6 0.7924 2 32.4276 2 7.3195 2)
Average genome size in population (length): 92.69
Average program size in population (points): 93.69
Average percent parens in population: 0.011
Minimum age in population: 225.2477895558844
Maximum age in population: 230.3301772328835
Average age in population: 228.1256151612831
Median age in population: 228.1447469718377
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.369
Error (vector) diversity:			 0.37
Behavioral diversity:				 0.371
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 254504248
--- Timings ---
Current time: 1529615356961 milliseconds
Total Time:         579.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.2 seconds, 36.6%
Fitness Testing:    292.0 seconds, 50.4%
Report:              75.2 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_dec} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_shove float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_inc integer_mult integer_max float_dup float_dup_items integer_dup_items tagged_481 float_max integer_dup float_dec float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2613.0144952000005
Median total errors in population: 889.0517499999999
Error averages by case: (88.62672670000033 10.346 90.1880874 2.953 91.21866510000005 2.911 83.97990229999999 3.009 66.27581089999998 2.484 104.30166630000001 3.947 144.4513096 3.029 110.85643510000003 11.355 72.63772549999946 7.925 160.20950060000004 3.022 93.51208599999983 9.979 89.1429883999997 8.89 96.07780809999913 10.266 88.14239349999907 9.693 137.86579069999996 13.322 82.68669200000066 9.494 89.83233649999998 2.943 81.54652859999936 10.279 82.04918649999921 11.57 94.4504030000014 9.461 109.14480730000002 2.844 88.04313309999912 9.39 96.79264130000111 10.284 108.38707349999999 2.856 87.40479719999998 2.938)
Error minima by case: (0.1125 7 21.0 2 21.0 2 15.0 2 1.0 1 36.0 2 72.489 2 8.9714 9 0.3483 1 79.539 2 1.272 1 0.294 2 0.2642 7 0.1639 2 26.1374 10 0.3973 1 22.7137 2 0.1605 7 0.0084 6 0.1216 2 36.6027 2 0.0272 6 12.8049 2 30.4276 2 9.1956 1)
Average genome size in population (length): 93.014
Average program size in population (points): 94.014
Average percent parens in population: 0.011
Minimum age in population: 227.0602790938087
Maximum age in population: 231.4022819334606
Average age in population: 229.4161033115622
Median age in population: 229.4397544033394
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.879
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.879
Total error diversity:				 0.393
Error (vector) diversity:			 0.396
Behavioral diversity:				 0.396
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 256833148
--- Timings ---
Current time: 1529615361280 milliseconds
Total Time:         583.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       213.6 seconds, 36.6%
Fitness Testing:    294.4 seconds, 50.4%
Report:              75.8 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction float_shove} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank float_shove integer_stackdepth integer_mult integer_stackdepth integer_mult integer_inc float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2601.5842340000004
Median total errors in population: 905.1658999999999
Error averages by case: (87.8223179000005 10.241 90.01323690000001 2.914 89.7812936 2.866 85.0214143 3.022 62.78655339999999 2.314 105.1434547 3.944 145.3337533 3.015 110.77106120000005 11.265 71.21543069999929 7.731 161.22893089999997 3.025 91.88546389999972 9.761 86.94347659999974 8.723 98.12427279999902 10.152 84.05143719999892 9.495 137.94103010000003 13.194 80.75949640000078 9.272 90.93228869999997 2.959 81.01805379999918 10.203 80.8645598999991 11.467 95.64680980000138 9.222 108.9857969 2.783 91.36794629999906 9.303 94.66952120000123 10.082 109.216201 2.761 87.4484325 2.898)
Error minima by case: (0.1125 6 22.0 2 22.0 2 16.0 1 1.0 1 36.8803 3 82.0 2 9.8898 10 0.3483 1 91.0248 2 1.0452 1 0.294 2 0.4903 8 1.8662 1 27.516 10 0.3973 2 24.0 1 0.3976 7 0.0502 6 0.0406 1 25.6745 2 0.0085 6 4.0 1 27.0184 1 2.952 2)
Average genome size in population (length): 92.731
Average program size in population (points): 93.731
Average percent parens in population: 0.011
Minimum age in population: 228.4420312961582
Maximum age in population: 232.6509429545893
Average age in population: 230.7719599991742
Median age in population: 230.808355099818
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.871
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.871
Total error diversity:				 0.36
Error (vector) diversity:			 0.363
Behavioral diversity:				 0.363
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 259155573
--- Timings ---
Current time: 1529615365469 milliseconds
Total Time:         588.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       214.9 seconds, 36.5%
Fitness Testing:    296.7 seconds, 50.4%
Report:              76.4 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_flush} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth float_shove float_shove float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_flush float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 105
Size: 106
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2584.7177112000018
Median total errors in population: 900.2552499999999
Error averages by case: (87.98697340000022 10.385 88.58668779999999 2.888 88.61445570000004 2.852 83.4050058 2.947 61.86052719999999 2.22 103.44833560000002 3.889 144.1853992 2.977 108.74528450000003 11.345 71.36554979999954 7.772 160.0542094 2.969 92.67059829999988 9.688 88.45507119999988 8.611 96.34191599999902 10.334 86.35352229999907 9.389 137.0672524 13.303 81.35204900000062 9.148 89.74509319999999 2.894 83.69137909999921 10.334 81.55262659999927 11.582 96.5729616000013 9.251 107.90516150000003 2.792 82.24864399999917 9.488 95.01748520000109 10.102 108.36720139999998 2.789 86.30132099999999 2.874)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 72.489 2 9.0667 10 0.3483 2 79.539 2 0.3173 1 0.2091 2 0.6003 7 0.0154 2 25.7343 11 0.6154 1 22.7137 2 0.3976 7 0.016 6 0.0406 2 12.6046 2 0.0272 6 11.8049 2 31.4276 2 10.8538 2)
Average genome size in population (length): 93.032
Average program size in population (points): 94.032
Average percent parens in population: 0.011
Minimum age in population: 229.7579488217858
Maximum age in population: 233.9762543403286
Average age in population: 232.1330840138751
Median age in population: 232.1904366068875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.893
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.893
Total error diversity:				 0.371
Error (vector) diversity:			 0.374
Behavioral diversity:				 0.376
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 261487698
--- Timings ---
Current time: 1529615369809 milliseconds
Total Time:         592.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.3 seconds, 36.5%
Fitness Testing:    299.0 seconds, 50.5%
Report:              77.0 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_swap} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_add} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_cos float_dup_times integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items integer_swap tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec float_add in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2558.6929685000014
Median total errors in population: 878.5924999999999
Error averages by case: (85.88326960000009 10.322 87.74398010000002 2.876 87.81375280000002 2.854 81.84390069999999 2.969 63.36503509999999 2.333 102.01337969999999 3.918 142.47569030000002 2.986 108.07817130000005 11.323 70.08545679999949 7.75 158.1866863 2.976 92.3392403999999 9.778 84.6509900999999 8.558 93.93287569999892 10.244 84.85684959999887 9.495 136.2393281 13.305 79.09828170000073 9.262 87.94912429999998 2.904 79.21744159999918 10.269 79.77108019999945 11.645 94.58221710000146 9.237 107.0825416 2.78 93.21628209999888 9.317 93.6582041000013 10.095 106.3303402 2.788 85.42584899999999 2.869)
Error minima by case: (0.6496 7 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 10 0.3483 2 79.539 2 2.728 1 0.1801 2 0.7298 7 0.1639 2 31.7589 11 0.6154 2 24.0 2 0.4386 7 0.0502 7 0.9092 2 38.8952 2 0.0578 6 13.8049 2 31.4276 2 10.729 2)
Average genome size in population (length): 93.057
Average program size in population (points): 94.057
Average percent parens in population: 0.011
Minimum age in population: 230.7579488217858
Maximum age in population: 235.4951095685589
Average age in population: 233.5217863234581
Median age in population: 233.5776988801554
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.888
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.888
Total error diversity:				 0.339
Error (vector) diversity:			 0.344
Behavioral diversity:				 0.345
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 263818023
--- Timings ---
Current time: 1529615374021 milliseconds
Total Time:         596.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       217.6 seconds, 36.5%
Fitness Testing:    301.3 seconds, 50.5%
Report:              77.6 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction integer_rot} {:instruction integer_mult} {:instruction print_float} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_add} {:instruction float_sub} {:instruction in2} {:instruction tag_float_668} {:instruction integer_dec} {:instruction print_float} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_mult integer_rot integer_mult print_float float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_add float_sub in2 tag_float_668 integer_dec print_float float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2451.053239000001
Median total errors in population: 883.9224499999998
Error averages by case: (82.70852289999995 10.29 83.65457090000004 2.886 83.52809379999997 2.841 78.660643 3.006 57.19894479999999 2.319 99.14917590000002 3.933 139.09075600000006 3.005 104.40380050000005 11.28 65.58843649999956 7.659 154.92805470000002 3.029 85.86558809999997 9.687 80.31739280000015 8.53 92.11055259999918 10.197 77.5179153999992 9.376 131.68735469999996 13.225 76.92999320000068 9.202 84.15888650000002 2.935 77.24302599999935 10.272 75.36536079999986 11.553 89.79025060000097 9.152 102.8609034 2.802 83.15419639999914 9.3 89.73845050000106 10.006 102.5137043 2.779 80.7476647 2.877)
Error minima by case: (0.44 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 37.8805 2 0.192 8 0.3483 2 64.8304 2 0.2185 1 0.294 2 0.3733 7 0.9328 2 25.2753 10 0.3973 1 18.7137 1 0.3976 7 0.0502 6 0.0406 2 36.7358 2 0.0131 6 11.8049 2 1.9418 2 9.9208 2)
Average genome size in population (length): 93.062
Average program size in population (points): 94.062
Average percent parens in population: 0.011
Minimum age in population: 232.8376011636778
Maximum age in population: 236.8895594839975
Average age in population: 234.9419515765344
Median age in population: 234.9786880938377
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.892
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.892
Total error diversity:				 0.363
Error (vector) diversity:			 0.368
Behavioral diversity:				 0.368
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 266148898
--- Timings ---
Current time: 1529615378287 milliseconds
Total Time:         600.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.0 seconds, 36.4%
Fitness Testing:    303.7 seconds, 50.5%
Report:              78.2 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 54650.213300000054
Test mean error for best: 27.32511
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction in1} {:instruction float_yankdup} {:instruction print_float})
Best program: (float_shove integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult float_sub integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 in1 float_yankdup print_float)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2909.2036617
Median total errors in population: 900.8656999999998
Error averages by case: (97.80284570000066 10.354 103.22802369999998 3.179 102.87151200000007 3.136 97.23789740000002 3.306 73.58915580000003 2.686 116.59304810000003 4.196 155.6994094 3.313 122.95597750000005 11.355 84.06328409999941 7.979 171.46972120000004 3.322 102.97549769999968 9.991 99.89468749999949 8.838 107.63079969999906 10.301 97.7634194999989 9.657 149.10394660000006 13.307 94.46104210000077 9.474 102.08646720000002 3.224 91.93421539999933 10.285 94.07073069999895 11.578 110.83251880000181 9.509 121.33043440000006 3.053 104.95581179999914 9.307 109.24532970000112 10.332 120.05399499999997 3.033 99.46889069999992 3.17)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 21.7273 3 14.511 2 9.5195 9 0.3483 2 24.461 1 0.1488 1 0.0171 2 2.1731 7 0.9328 2 6.1229 10 0.5973 1 6.2863 2 0.3976 7 0.0502 7 0.0406 2 26.5353 2 0.0064 6 13.8049 2 12.0866 2 4.9633 2)
Average genome size in population (length): 92.848
Average program size in population (points): 93.848
Average percent parens in population: 0.011
Minimum age in population: 233.9003752790599
Maximum age in population: 238.1288066724394
Average age in population: 236.2437041243536
Median age in population: 236.3028728260849
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.88
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.88
Total error diversity:				 0.375
Error (vector) diversity:			 0.382
Behavioral diversity:				 0.382
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 268475748
--- Timings ---
Current time: 1529615382531 milliseconds
Total Time:         605.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       220.3 seconds, 36.4%
Fitness Testing:    306.0 seconds, 50.6%
Report:              78.7 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction in2} {:instruction tag_float_668} {:instruction float_dup_items} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_dup} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_mult integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max in2 tag_float_668 float_dup_items in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_dup in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2517.9092255000005
Median total errors in population: 882.7020999999999
Error averages by case: (83.90994170000013 10.267 86.9659421 2.954 87.31539660000003 2.942 80.8196414 3.07 59.656486199999996 2.383 101.04928040000001 3.982 140.89669290000006 3.083 106.54744230000006 11.304 68.1799143999996 7.777 156.88225139999997 3.057 90.38535199999987 9.806 84.21663289999996 8.677 91.87885159999915 10.238 80.86197209999915 9.518 134.5298817 13.237 77.19282670000061 9.27 86.04925549999999 3.008 77.7128809999994 10.219 77.27575869999968 11.564 96.78245990000137 9.335 105.81826860000002 2.858 87.48660989999907 9.296 93.46036790000107 10.189 104.4912803 2.833 83.72583729999998 2.951)
Error minima by case: (0.4732 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 2.3316 10 0.3483 2 24.461 1 0.728 1 0.1801 2 0.2969 7 0.6126 2 27.1976 9 0.1286 2 6.2863 2 0.6024 7 0.0502 7 0.2155 2 36.7925 2 0.0646 6 12.8049 2 16.5724 2 3.4417 2)
Average genome size in population (length): 92.525
Average program size in population (points): 93.525
Average percent parens in population: 0.011
Minimum age in population: 235.4073460488063
Maximum age in population: 239.5668711757453
Average age in population: 237.593961051385
Median age in population: 237.6334953991435
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.886
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.886
Total error diversity:				 0.367
Error (vector) diversity:			 0.371
Behavioral diversity:				 0.371
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 270795398
--- Timings ---
Current time: 1529615386711 milliseconds
Total Time:         609.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       221.7 seconds, 36.4%
Fitness Testing:    308.2 seconds, 50.6%
Report:              79.3 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_add} {:instruction float_max} {:instruction float_sin} {:instruction integer_rot} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_yank} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove float_dup_items tag_integer_197 tagged_481 float_max integer_add float_max float_sin integer_rot tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec float_yank in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2889.158818500002
Median total errors in population: 882.7020999999999
Error averages by case: (99.5430958000008 10.401 101.4002939 3.125 101.18188100000002 3.091 95.15501680000003 3.246 77.04802990000005 2.563 115.4949933 4.168 155.15771820000003 3.235 120.54725330000005 11.382 84.42290909999929 7.894 170.94747299999997 3.246 106.14504729999942 9.836 97.2134924999994 8.686 108.170721299999 10.364 96.88318179999891 9.541 148.58637260000003 13.359 90.87220470000084 9.354 101.15001679999996 3.162 90.9144010999992 10.393 92.59963199999892 11.7 111.58798450000195 9.343 120.21479940000003 2.983 100.86816019999901 9.419 108.46117240000122 10.212 119.34005010000001 2.985 98.45091749999995 3.114)
Error minima by case: (0.3749 7 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 70.489 2 9.0414 9 0.3483 2 77.539 2 1.272 1 0.2627 2 0.4524 8 1.5315 1 24.4979 10 0.6154 2 20.7137 2 0.3976 7 0.0502 6 0.0406 2 36.7358 2 0.0142 6 12.8049 2 9.2829 2 10.4363 2)
Average genome size in population (length): 92.267
Average program size in population (points): 93.267
Average percent parens in population: 0.011
Minimum age in population: 236.4073460488063
Maximum age in population: 240.8556591164481
Average age in population: 238.9587687810312
Median age in population: 239.0146981002345
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.88
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.88
Total error diversity:				 0.347
Error (vector) diversity:			 0.354
Behavioral diversity:				 0.354
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 273108473
--- Timings ---
Current time: 1529615390977 milliseconds
Total Time:         613.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.1 seconds, 36.4%
Fitness Testing:    310.6 seconds, 50.6%
Report:              79.9 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_dec} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_fromfloat float_shove float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items integer_dup_items tagged_481 float_max integer_dup_items tagged_481 float_dup float_dup_items integer_dup_items tagged_481 float_max integer_dup float_dec float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2768.360336100002
Median total errors in population: 882.7020999999999
Error averages by case: (94.55983290000032 10.359 96.74084819999999 2.963 97.11422440000003 2.931 92.1442106 3.041 68.7808965 2.46 111.36465790000001 3.978 151.74710739999998 3.066 116.62752280000002 11.334 78.43534479999941 7.873 167.24307559999997 3.064 96.25639879999972 9.782 94.29508379999987 8.636 104.91550139999912 10.272 89.2118403999991 9.47 144.63957409999998 13.293 87.90318320000071 9.261 97.60784899999999 2.99 87.57542849999925 10.281 87.95280649999934 11.649 103.58373800000162 9.352 115.70041790000003 2.833 94.33292559999917 9.353 104.57597970000104 10.209 116.37105449999997 2.843 94.43683359999999 2.951)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 32.6984 3 70.489 2 8.9714 10 0.3483 2 28.7025 2 0.0213 1 0.1801 2 0.4903 8 0.0154 2 26.3133 11 0.1286 1 20.7137 2 0.4386 7 0.0197 7 0.0406 2 37.5945 2 0.0958 6 10.8049 2 30.4276 2 11.506 2)
Average genome size in population (length): 92.223
Average program size in population (points): 93.223
Average percent parens in population: 0.011
Minimum age in population: 237.6196304016434
Maximum age in population: 242.0965163439348
Average age in population: 240.280243129945
Median age in population: 240.3345670167133
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.867
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.867
Total error diversity:				 0.347
Error (vector) diversity:			 0.351
Behavioral diversity:				 0.352
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 275420069
--- Timings ---
Current time: 1529615395206 milliseconds
Total Time:         617.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.4 seconds, 36.3%
Fitness Testing:    312.9 seconds, 50.6%
Report:              80.4 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction float_inc} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_dec} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_stackdepth integer_mult integer_stackdepth integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_max in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 in2 float_inc in1 integer_dec float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add integer_dec integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2502.9897278000008
Median total errors in population: 882.7020999999999
Error averages by case: (83.23477620000035 10.338 85.75402000000003 2.971 85.6735195 2.928 79.39903170000001 3.091 63.76169179999999 2.456 99.58623390000001 3.974 139.85867370000003 3.069 105.24779710000004 11.319 67.78991489999933 7.87 155.779238 3.091 89.94371799999986 9.903 83.84722589999977 8.764 91.52461409999897 10.298 81.54279439999887 9.602 133.57856929999997 13.272 78.0606106000008 9.376 85.06546789999999 3.007 76.3400691999992 10.285 76.01452439999942 11.602 89.52529090000125 9.404 104.63250270000002 2.838 95.618717899999 9.344 90.07326320000126 10.262 103.5607792 2.832 82.71668329999999 2.964)
Error minima by case: (1.0585 6 22.0 2 22.0 2 16.0 2 0.0 0 36.8803 2 68.489 2 8.0514 9 0.3483 1 75.539 2 1.8017 1 0.294 2 0.379 7 1.0581 2 31.0301 11 0.2264 2 18.7137 2 0.4089 7 0.0502 7 0.0406 1 33.8319 1 0.0272 6 3.0 1 28.4276 2 6.506 2)
Average genome size in population (length): 92.491
Average program size in population (points): 93.491
Average percent parens in population: 0.011
Minimum age in population: 239.1495648886793
Maximum age in population: 243.5292232446925
Average age in population: 241.6630636893109
Median age in population: 241.7356919691354
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.867
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.867
Total error diversity:				 0.374
Error (vector) diversity:			 0.381
Behavioral diversity:				 0.382
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 277740544
--- Timings ---
Current time: 1529615399459 milliseconds
Total Time:         622.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.7 seconds, 36.3%
Fitness Testing:    315.2 seconds, 50.7%
Report:              81.0 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 54650.213300000054
Test mean error for best: 27.32511
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_max} {:instruction float_dup} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction in2} {:instruction integer_mult} {:instruction print_float} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sub} {:instruction in2} {:instruction tag_float_668} {:instruction integer_dec} {:instruction print_float} {:instruction float_sin} {:instruction float_yankdup} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float})
Best program: (float_shove float_shove integer_yankdup integer_yank integer_max float_dup float_shove integer_yankdup float_dec integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_mult in2 integer_mult print_float float_dup float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sub in2 tag_float_668 integer_dec print_float float_sin float_yankdup tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc integer_dup float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2333.5405655000004
Median total errors in population: 882.7020999999999
Error averages by case: (78.65296940000006 10.268 78.27087940000003 2.849 79.0751905 2.812 72.32399219999998 2.929 55.52483909999999 2.316 92.44072170000003 3.841 133.17691779999998 2.944 98.54496140000005 11.275 61.153258999999565 7.91 149.2464387 2.903 83.36893829999993 9.933 76.95945219999999 8.69 87.62032579999902 10.206 75.53608329999913 9.569 126.94782749999997 13.215 70.8088910000007 9.318 78.21501579999999 2.894 70.60846399999927 10.217 71.33645359999957 11.554 87.75682580000108 9.467 97.56977950000002 2.758 78.38640199999925 9.242 84.50952720000109 10.306 96.80497959999997 2.753 75.68843069999998 2.844)
Error minima by case: (0.1125 7 21.3321 2 22.0 2 6.3544 2 0.0 0 37.0 3 11.2451 2 8.9093 9 0.3483 2 38.1951 2 2.728 2 0.294 2 0.2115 8 1.8662 2 26.3059 9 0.3846 2 22.7137 2 0.4386 7 0.0502 7 0.0406 2 31.9584 2 0.0543 6 13.8049 2 24.6935 2 2.952 2)
Average genome size in population (length): 92.002
Average program size in population (points): 93.002
Average percent parens in population: 0.011
Minimum age in population: 240.4265834985642
Maximum age in population: 244.9269726050101
Average age in population: 243.0503828024663
Median age in population: 243.057483818956
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.876
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.876
Total error diversity:				 0.364
Error (vector) diversity:			 0.368
Behavioral diversity:				 0.368
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 280047969
--- Timings ---
Current time: 1529615403723 milliseconds
Total Time:         626.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       227.1 seconds, 36.3%
Fitness Testing:    317.6 seconds, 50.7%
Report:              81.6 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_dup_times} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_inc float_shove integer_yankdup integer_sub integer_fromfloat integer_dec integer_mult integer_mult integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_dup_times integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3006.9049187
Median total errors in population: 903.0414000000001
Error averages by case: (106.76131740000065 10.391 104.74726799999999 3.213 104.49317760000001 3.147 100.3551259 3.274 79.60674770000004 2.624 120.537237 4.192 159.88109100000003 3.301 124.31573020000005 11.374 87.84500349999924 8.017 175.81559109999992 3.31 107.50315129999989 9.908 103.81518789999964 8.831 110.77835279999877 10.327 101.43173529999875 9.667 151.9488642 13.31 98.03274950000096 9.395 105.78947849999999 3.216 100.75480809999901 10.378 98.70721489999896 11.627 119.24146510000199 9.513 123.91611930000002 3.065 103.69949089999884 9.387 113.17291980000141 10.355 124.11748179999996 3.042 101.57860989999998 3.195)
Error minima by case: (0.1125 7 21.3321 2 21.3801 2 16.0 2 1.0 1 37.0 3 72.489 2 3.7336 9 0.3483 2 79.539 2 0.728 1 0.294 2 0.4903 8 1.4853 1 20.678 10 0.3846 2 21.7137 2 0.0933 7 0.0332 5 0.9092 1 4.1239 2 0.021 6 13.8049 2 12.0866 2 2.952 2)
Average genome size in population (length): 91.463
Average program size in population (points): 92.463
Average percent parens in population: 0.011
Minimum age in population: 241.4265834985642
Maximum age in population: 246.3828753411584
Average age in population: 244.4296928948335
Median age in population: 244.4719428913466
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.369
Error (vector) diversity:			 0.372
Behavioral diversity:				 0.373
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 282343106
--- Timings ---
Current time: 1529615407909 milliseconds
Total Time:         630.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.4 seconds, 36.2%
Fitness Testing:    319.9 seconds, 50.7%
Report:              82.2 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 54649.213300000054
Test mean error for best: 27.32461
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_182} {:instruction tagged_481} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_dup_times} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 95.67908512005867})
Best program: (print_float integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_inc integer_max float_dup float_dup_items tag_integer_182 tagged_481 tag_integer_197 tagged_481 float_dup_times integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc in1 integer_dec float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 95.67908512005867)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 97
Size: 98
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2766.028791600001
Median total errors in population: 907.7357499999998
Error averages by case: (95.4054863000005 10.265 95.857853 3.067 95.70507260000004 3.053 90.6738235 3.212 70.4978328 2.558 111.09457990000006 4.144 150.09855979999998 3.215 114.93110110000006 11.264 77.83595989999927 7.882 166.00511339999994 3.245 99.2525837999999 9.923 97.7522476999997 8.872 104.406301099999 10.196 91.72350659999874 9.65 142.8167692 13.167 88.95638280000095 9.465 95.85926009999999 3.134 88.44718329999911 10.249 88.29587889999888 11.461 104.63915300000194 9.438 114.44915920000001 2.942 97.35108759999895 9.256 101.37460410000146 10.283 114.08507610000002 2.947 92.56421579999996 3.062)
Error minima by case: (0.0055 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 70.489 2 9.488 9 0.3483 2 77.539 2 0.4111 1 0.294 2 0.3319 7 1.0581 2 21.2545 9 0.2264 2 20.7137 2 0.4386 7 0.0502 7 0.9594 2 31.809 2 0.0064 6 11.8049 2 30.4276 2 4.1339 2)
Average genome size in population (length): 91.144
Average program size in population (points): 92.144
Average percent parens in population: 0.011
Minimum age in population: 242.8047666194028
Maximum age in population: 247.7703530041306
Average age in population: 245.7885559315711
Median age in population: 245.840906792652
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.893
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.893
Total error diversity:				 0.372
Error (vector) diversity:			 0.373
Behavioral diversity:				 0.374
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 284629681
--- Timings ---
Current time: 1529615412141 milliseconds
Total Time:         634.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       229.8 seconds, 36.2%
Fitness Testing:    322.2 seconds, 50.8%
Report:              82.7 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_182} {:instruction integer_sub} {:instruction integer_min} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_rot} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_mod} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_sub} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_256} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float})
Best program: (float_cos integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth integer_inc integer_max float_dup float_dup_items tag_integer_182 integer_sub integer_min float_dup float_dup_items integer_rot tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec float_max integer_dup float_max tag_float_668 float_tan integer_dec float_mod in1 float_tan float_inc float_tan float_sub float_inc float_inc tagged_256 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc integer_rot float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 98
Size: 99
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2660.744641400001
Median total errors in population: 891.5619
Error averages by case: (90.65925170000058 10.271 92.21572549999999 2.968 92.04236520000003 2.929 86.89810239999998 3.063 68.0650476 2.487 106.95546669999999 3.999 147.0623572 3.064 111.85424420000004 11.288 74.37485419999936 7.896 162.84593019999994 3.07 95.65438639999978 9.909 92.23135939999959 8.81 97.75441879999893 10.262 87.53028809999898 9.624 139.9629659 13.227 83.94207990000076 9.418 92.79971579999996 3.003 83.42926769999927 10.266 84.67075229999917 11.504 94.47741160000156 9.457 111.20084850000002 2.84 92.42074289999904 9.314 96.2061088000013 10.321 111.1914307 2.839 89.50151969999996 2.969)
Error minima by case: (0.44 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 8.0864 11 0.3483 2 24.461 2 2.2881 1 0.2272 2 0.3121 8 1.8662 2 22.5104 10 0.066 1 6.2863 2 0.1353 7 0.0634 7 0.0406 2 37.2722 2 0.0272 6 13.8049 2 14.8553 2 7.2138 2)
Average genome size in population (length): 91.391
Average program size in population (points): 92.391
Average percent parens in population: 0.011
Minimum age in population: 244.93666881654
Maximum age in population: 248.933263306629
Average age in population: 247.0844145077471
Median age in population: 247.1127368655711
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.373
Error (vector) diversity:			 0.374
Behavioral diversity:				 0.374
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 286923142
--- Timings ---
Current time: 1529615416349 milliseconds
Total Time:         638.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.1 seconds, 36.2%
Fitness Testing:    324.4 seconds, 50.8%
Report:              83.3 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction float_flush} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction float_max} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction float_tan} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction float_tan} {:instruction float_dup} {:instruction float_dup_items} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove float_flush integer_dup float_max float_sin in2 float_max in2 tag_float_668 float_tan integer_dec integer_yank integer_fromfloat integer_yank float_sin integer_yankdup integer_yank integer_fromfloat integer_mult integer_stackdepth float_dup float_tan float_dup float_dup_items integer_yank float_sin integer_yankdup integer_yank integer_fromfloat integer_mult integer_stackdepth float_dup float_tan float_dup float_dup_items in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2583.802132200002
Median total errors in population: 891.0937999999999
Error averages by case: (87.07592290000018 10.294 89.7139317 2.924 89.47887900000003 2.87 83.8378343 3.055 61.091101499999986 2.454 104.302866 3.997 143.5863395 3.052 109.58758180000004 11.309 72.87088769999966 7.86 159.55166950000006 3.063 90.55195709999985 9.828 87.70341969999994 8.759 94.3976918999991 10.226 82.97597369999902 9.57 137.11626 13.253 80.70310840000059 9.404 89.03491259999998 2.985 80.58458109999926 10.255 79.19065309999941 11.557 102.23612790000145 9.388 108.20183460000005 2.814 84.2562976999992 9.326 97.48191510000117 10.213 107.57367359999996 2.844 86.49271180000001 2.904)
Error minima by case: (0.1601 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 72.489 2 9.5223 10 0.1222 2 79.539 2 0.8782 1 0.0145 2 0.0728 7 0.9328 2 26.1374 10 0.5501 2 22.7137 2 0.5989 7 0.016 5 0.0406 2 34.3707 2 0.0064 6 13.8049 2 30.4276 1 0.7119 2)
Average genome size in population (length): 91.334
Average program size in population (points): 92.334
Average percent parens in population: 0.011
Minimum age in population: 246.0468123529289
Maximum age in population: 250.327405802166
Average age in population: 248.4493273781238
Median age in population: 248.49892342919
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.879
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.879
Total error diversity:				 0.379
Error (vector) diversity:			 0.382
Behavioral diversity:				 0.383
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 289215642
--- Timings ---
Current time: 1529615420625 milliseconds
Total Time:         643.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       232.4 seconds, 36.1%
Fitness Testing:    326.7 seconds, 50.8%
Report:              83.9 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_shove} {:instruction float_stackdepth} {:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction tagged_481} {:instruction float_max} {:instruction float_cos} {:instruction integer_max} {:instruction float_flush} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction float_mod} {:instruction integer_dup} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction integer_shove} {:instruction integer_dec} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (print_float integer_yank integer_fromfloat float_shove print_integer integer_yankdup float_shove float_stackdepth float_shove float_shove integer_yankdup integer_yank integer_fromfloat tagged_481 float_max float_cos integer_max float_flush float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan float_mod integer_dup in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 integer_shove integer_dec in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2767.9910435000006
Median total errors in population: 922.5554999999999
Error averages by case: (94.87859550000032 10.387 95.5865592 3.044 95.46374880000003 3.02 90.10197140000001 3.119 72.91769089999998 2.512 109.48430270000003 4.077 149.72447630000002 3.137 114.84196570000002 11.274 77.69205249999939 7.79 165.4984608 3.169 99.94454819999989 9.688 95.67495949999966 8.677 106.85526959999893 10.343 92.48010029999894 9.431 142.42252829999998 13.23 87.68685710000081 9.254 95.72465999999999 3.066 88.4199862999992 10.288 89.32946519999933 11.551 108.3064972000017 9.326 114.19245210000001 2.92 95.80847809999905 9.456 102.83334550000129 10.108 114.86429890000002 2.91 92.43477340000001 3.046)
Error minima by case: (0.1125 7 7.5729 2 22.0 2 16.0 2 1.0 1 37.0 3 15.511 2 2.3271 8 0.3483 2 25.461 2 0.728 1 0.294 2 0.9881 8 1.0581 2 13.0743 8 0.6154 1 7.2863 2 0.4386 7 0.0634 7 0.2155 2 35.7925 2 0.0978 6 13.8049 2 17.5724 1 7.3089 2)
Average genome size in population (length): 91.461
Average program size in population (points): 92.461
Average percent parens in population: 0.011
Minimum age in population: 247.4970348514409
Maximum age in population: 251.7417380831921
Average age in population: 249.8625352004812
Median age in population: 249.9155572681403
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.889
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.889
Total error diversity:				 0.37
Error (vector) diversity:			 0.375
Behavioral diversity:				 0.376
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 291509492
--- Timings ---
Current time: 1529615424849 milliseconds
Total Time:         647.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       233.8 seconds, 36.1%
Fitness Testing:    329.0 seconds, 50.8%
Report:              84.5 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction print_float} {:instruction integer_yank} {:instruction tagged_481} {:instruction float_max} {:instruction float_sub} {:instruction float_max} {:instruction integer_min} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_max} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_543} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction float_sub} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_shove} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105})
Best program: (integer_yankdup print_float integer_yank tagged_481 float_max float_sub float_max integer_min in2 tag_float_668 float_tan integer_dec float_max in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_543 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div float_sub float_inc float_dup float_inc float_inc float_tan float_add integer_shove integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2740.5648158000004
Median total errors in population: 885.4706499999999
Error averages by case: (92.6669769000004 10.3 95.8896609 2.997 95.85010520000002 2.979 90.23661460000001 3.097 64.9106856 2.581 110.37658529999997 4.03 149.74707340000006 3.117 114.94106050000006 11.307 78.4073782999993 7.789 165.60534469999993 3.118 95.3095213999999 9.729 92.29782529999972 8.636 101.49398099999893 10.303 90.67920859999892 9.518 142.81993269999998 13.229 86.54353180000082 9.258 95.97736679999997 3.052 86.83251109999907 10.22 88.06012999999926 11.587 103.94564380000162 9.311 114.58042240000005 2.899 99.128168399999 9.362 103.1565448000014 10.169 114.06746479999998 2.866 92.60207749999996 2.985)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 0.4382 10 0.3483 2 25.461 2 0.728 1 0.294 2 0.1814 7 0.3548 2 24.5492 10 0.2264 2 7.2863 2 0.1885 7 0.1257 7 0.0406 2 33.8319 2 0.0141 6 11.8049 2 17.5724 1 4.692 2)
Average genome size in population (length): 91.494
Average program size in population (points): 92.494
Average percent parens in population: 0.011
Minimum age in population: 248.5782486924578
Maximum age in population: 253.3545455597409
Average age in population: 251.1998186400704
Median age in population: 251.2569682039924
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.889
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.889
Total error diversity:				 0.371
Error (vector) diversity:			 0.376
Behavioral diversity:				 0.376
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 293803692
--- Timings ---
Current time: 1529615429009 milliseconds
Total Time:         651.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       235.2 seconds, 36.1%
Fitness Testing:    331.3 seconds, 50.8%
Report:              85.1 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_mult} {:instruction integer_min} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction float_sub} {:instruction float_max} {:instruction integer_min} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction 75} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (integer_rot integer_mult integer_min float_dup float_dup_items tag_integer_197 tagged_481 float_max float_sub float_max integer_min in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 integer_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add 75 integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2675.118465700001
Median total errors in population: 879.1897999999999
Error averages by case: (91.15213930000051 10.294 92.42902289999998 2.99 92.24205700000003 2.941 87.0811928 3.074 66.18743720000002 2.516 106.40261520000003 4.012 146.97406740000002 3.072 112.97882020000006 11.278 75.87410569999918 7.792 162.67946149999997 3.091 96.89981799999985 9.755 89.1895021999996 8.59 103.91564359999886 10.226 89.21966539999876 9.446 140.13956389999998 13.21 83.68992130000076 9.233 92.85111539999998 3.024 84.06068579999915 10.245 85.28072759999922 11.53 99.18065140000175 9.296 111.38542870000005 2.854 92.54100289999892 9.329 98.18623250000131 10.171 111.1853461 2.845 89.59424169999996 2.984)
Error minima by case: (0.4823 7 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 14.511 2 10.7052 10 0.3483 1 24.461 2 0.728 1 0.1801 2 0.3777 8 0.7478 2 31.7589 11 0.0094 2 6.2863 2 0.0518 7 0.0634 6 0.2155 2 33.6977 2 0.0272 6 11.8049 2 16.5724 2 10.729 1)
Average genome size in population (length): 90.959
Average program size in population (points): 91.959
Average percent parens in population: 0.011
Minimum age in population: 249.5782486924578
Maximum age in population: 254.5310302170372
Average age in population: 252.525119636056
Median age in population: 252.5465175839673
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.865
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.865
Total error diversity:				 0.343
Error (vector) diversity:			 0.344
Behavioral diversity:				 0.344
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 296082667
--- Timings ---
Current time: 1529615433187 milliseconds
Total Time:         655.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.5 seconds, 36.1%
Fitness Testing:    333.6 seconds, 50.9%
Report:              85.6 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction in1} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_pop} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_mod} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_shove float_shove float_shove in1 integer_swap integer_fromfloat integer_stackdepth float_pop integer_stackdepth integer_flush integer_max float_dup float_dup_items tag_integer_197 tagged_481 float_pop float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_mod integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2525.0993469000023
Median total errors in population: 878.7133999999999
Error averages by case: (85.01334950000034 10.274 86.41451510000002 2.93 86.4505778 2.879 80.9515187 2.998 60.95541489999999 2.389 100.49456960000002 3.91 140.95062320000002 3.012 106.60449080000004 11.293 69.41709329999944 7.841 156.6323186 3.005 90.18730069999982 9.888 84.92902439999978 8.666 93.78161889999917 10.232 81.44474049999914 9.562 134.5866512 13.261 79.54723860000061 9.401 86.0629757 2.948 79.63925209999935 10.283 78.51581159999951 11.568 95.62496820000116 9.378 105.429072 2.8 85.06515119999919 9.281 94.04208000000116 10.212 105.00437699999999 2.788 83.6356133 2.92)
Error minima by case: (0.2253 8 22.0 2 22.0 2 16.0 2 0.0 0 32.6984 3 70.489 2 45.0 10 0.3483 2 28.7025 1 2.728 1 0.294 2 0.2115 8 1.8662 2 31.7864 10 0.2264 2 20.7137 2 0.8242 7 0.0124 6 0.6219 2 35.9584 2 0.0053 6 11.8049 2 30.4276 2 6.952 2)
Average genome size in population (length): 91.138
Average program size in population (points): 92.138
Average percent parens in population: 0.011
Minimum age in population: 250.5782486924578
Maximum age in population: 255.8270638460239
Average age in population: 253.7977902930622
Median age in population: 253.8087320328031
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.866
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.866
Total error diversity:				 0.382
Error (vector) diversity:			 0.386
Behavioral diversity:				 0.387
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 298366117
--- Timings ---
Current time: 1529615437403 milliseconds
Total Time:         660.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.8 seconds, 36.0%
Fitness Testing:    336.0 seconds, 50.9%
Report:              86.1 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction float_shove})
Best program: (float_shove float_shove integer_yankdup float_inc integer_rot integer_stackdepth integer_mult integer_stackdepth integer_mult integer_fromfloat integer_mult float_frominteger integer_fromfloat integer_stackdepth integer_mult integer_stackdepth in2 integer_max float_dup float_dup_items in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 float_shove)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3213.283177500002
Median total errors in population: 888.6345999999999
Error averages by case: (113.42876320000076 10.491 114.2804147 3.267 114.35140660000006 3.252 107.98775450000002 3.374 91.76743550000008 2.862 128.00574120000005 4.307 167.61044550000003 3.437 133.19085700000002 11.453 97.63110419999913 8.068 182.81989579999998 3.387 118.66885429999947 9.971 111.26669909999937 8.882 121.63636519999886 10.417 109.1270994999988 9.708 160.52972710000003 13.449 107.68102170000088 9.464 113.60088049999997 3.294 104.29177269999906 10.472 106.61871969999869 11.768 121.56146660000218 9.573 133.46308550000003 3.134 108.05121599999885 9.478 122.03208660000136 10.407 132.18196429999998 3.121 111.19540049999996 3.267)
Error minima by case: (0.1045 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 15.511 2 10.6626 9 0.3483 2 25.461 1 0.4111 1 0.294 2 0.3497 6 0.1639 2 20.2545 10 0.6154 2 7.2863 2 0.4119 7 0.0117 7 0.0406 2 14.8319 2 0.0272 6 11.8049 2 17.5724 2 5.3195 2)
Average genome size in population (length): 91.361
Average program size in population (points): 92.361
Average percent parens in population: 0.011
Minimum age in population: 251.5782486924578
Maximum age in population: 257.3335613995722
Average age in population: 255.2284510951875
Median age in population: 255.2409007033583
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.876
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.876
Total error diversity:				 0.356
Error (vector) diversity:			 0.364
Behavioral diversity:				 0.365
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 300656892
--- Timings ---
Current time: 1529615441552 milliseconds
Total Time:         664.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.2 seconds, 36.0%
Fitness Testing:    338.2 seconds, 50.9%
Report:              86.7 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_sin} {:instruction integer_rot} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_max} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction tagged_606} {:instruction tagged_481} {:instruction tag_integer_197} {:instruction integer_max} {:instruction integer_add} {:instruction integer_dup_items} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_779} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_499} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105})
Best program: (float_max float_sin integer_rot tagged_481 float_max integer_dup float_max float_sin float_dup_items tag_integer_197 tagged_481 float_max integer_max integer_max float_dup float_dup_items tagged_606 tagged_481 tag_integer_197 integer_max integer_add integer_dup_items float_max float_sin in2 tag_float_779 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_499 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 98
Size: 99
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3106.4663575000013
Median total errors in population: 919.6046999999999
Error averages by case: (108.85443190000056 10.482 109.79308609999998 3.24 109.95291260000008 3.215 104.06997170000001 3.294 84.35330300000005 2.741 123.15249050000003 4.222 163.06291560000003 3.305 129.56594710000007 11.389 93.27184389999931 7.891 178.15428430000003 3.317 115.3390252999995 9.781 110.72686379999936 8.738 117.63537019999906 10.428 105.10761879999896 9.524 156.73097559999997 13.331 100.3369604000007 9.283 109.02226449999998 3.23 101.60727349999917 10.379 102.52965169999884 11.661 119.20483720000202 9.37 128.24439270000008 3.089 106.45930019999912 9.567 117.05968420000121 10.217 127.7395025 3.047 106.51345019999995 3.237)
Error minima by case: (0.1125 7 21.0 2 21.0 2 15.0 2 0.0 0 36.0 2 14.511 2 10.6384 9 0.3483 1 24.461 2 0.3709 1 0.294 2 0.6656 6 1.5315 2 4.8044 10 0.3973 2 6.2863 2 0.4386 7 0.0502 6 0.0406 2 31.9584 2 0.0272 6 11.8049 2 16.5724 2 2.952 1)
Average genome size in population (length): 91.129
Average program size in population (points): 92.129
Average percent parens in population: 0.011
Minimum age in population: 253.6997268312872
Maximum age in population: 258.4857721006256
Average age in population: 256.5558412794258
Median age in population: 256.6200051523751
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.905
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.905
Total error diversity:				 0.376
Error (vector) diversity:			 0.378
Behavioral diversity:				 0.38
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 302943492
--- Timings ---
Current time: 1529615445810 milliseconds
Total Time:         668.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       240.5 seconds, 36.0%
Fitness Testing:    340.5 seconds, 50.9%
Report:              87.3 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_248} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_min} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction in2} {:instruction tag_float_668} {:instruction integer_add} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (tagged_248 float_shove integer_yankdup integer_yank integer_rot integer_mult integer_min float_dup float_dup_items tag_integer_197 tagged_481 float_max in2 tag_float_668 integer_add integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec integer_rot in1 float_max float_inc float_inc integer_dup float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2793.5162896000006
Median total errors in population: 896.2254499999999
Error averages by case: (96.43815750000054 10.422 97.0495884 3.06 96.86438680000002 2.998 92.1886025 3.145 72.28124560000003 2.492 112.02583900000002 4.067 151.77248220000007 3.155 116.45658710000006 11.359 79.16567729999907 7.873 167.58696839999996 3.173 100.66565439999984 9.768 94.79028079999968 8.689 106.49448639999892 10.33 94.93699629999898 9.487 144.5206617 13.328 89.09662540000082 9.286 97.6455052 3.073 89.58653429999913 10.377 89.75815049999918 11.631 102.55053280000172 9.34 115.92902280000003 2.935 96.73905419999899 9.439 103.08512420000127 10.213 115.95089949999999 2.917 94.32522629999997 3.055)
Error minima by case: (0.2177 7 17.0222 2 21.0 2 15.0 2 0.0 0 36.0 2 68.489 2 9.0667 9 0.3483 1 75.539 2 1.272 1 0.294 2 0.0775 8 0.4685 2 22.6981 10 0.6154 1 18.7137 2 0.4089 7 0.0502 7 0.0406 2 25.3555 2 0.2136 6 11.8049 2 28.4276 2 10.4869 1)
Average genome size in population (length): 91.421
Average program size in population (points): 92.421
Average percent parens in population: 0.011
Minimum age in population: 254.6997268312872
Maximum age in population: 260.1893536377493
Average age in population: 257.915201779422
Median age in population: 257.9479778003055
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.374
Error (vector) diversity:			 0.382
Behavioral diversity:				 0.383
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 305237367
--- Timings ---
Current time: 1529615450011 milliseconds
Total Time:         672.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.9 seconds, 36.0%
Fitness Testing:    342.8 seconds, 51.0%
Report:              87.8 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_shove} {:instruction float_rot} {:instruction integer_yankdup} {:instruction integer_max} {:instruction integer_fromfloat} {:instruction tagged_384} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction float_dup_items} {:instruction float_sub} {:instruction tagged_481} {:instruction integer_inc} {:instruction float_add} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction integer_inc} {:instruction integer_dec} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction integer_sub} {:instruction float_min})
Best program: (float_shove float_shove integer_yankdup float_shove float_rot integer_yankdup integer_max integer_fromfloat tagged_384 integer_mult integer_stackdepth integer_shove float_dup_items float_sub tagged_481 integer_inc float_add float_max float_sin in2 tag_float_668 integer_inc integer_dec in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add integer_swap in1 float_max float_inc integer_swap float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max integer_sub float_min)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 95
Size: 96
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2818.276720300001
Median total errors in population: 902.4493999999999
Error averages by case: (98.16860890000068 10.388 98.41700969999998 3.172 98.37765930000006 3.123 91.79532569999998 3.279 75.66737460000012 2.587 112.19858760000002 4.152 151.05149820000003 3.264 117.93870730000008 11.37 79.81178159999911 8.018 167.5502271999999 3.275 102.70359159999964 9.945 96.98904199999944 8.849 106.66686539999903 10.357 93.45811839999881 9.612 144.86569080000004 13.325 90.92794320000088 9.433 97.76912089999993 3.184 91.60988279999907 10.322 91.01013769999886 11.661 103.994274500002 9.502 116.85675480000006 3.031 97.03437749999888 9.446 105.25657550000128 10.348 115.63548249999997 2.995 94.72408259999996 3.16)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 9.5223 9 0.3483 2 24.461 1 0.2185 1 0.294 2 0.3777 7 1.5315 2 24.8156 11 0.1501 2 6.2863 1 0.4386 7 0.0066 4 0.6219 2 34.8952 2 0.0064 6 10.8049 2 16.5724 2 5.0201 2)
Average genome size in population (length): 90.786
Average program size in population (points): 91.786
Average percent parens in population: 0.011
Minimum age in population: 255.9713515118952
Maximum age in population: 261.2741688309093
Average age in population: 259.2395710166402
Median age in population: 259.2944145664814
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.874
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.874
Total error diversity:				 0.386
Error (vector) diversity:			 0.394
Behavioral diversity:				 0.395
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 307514192
--- Timings ---
Current time: 1529615454228 milliseconds
Total Time:         676.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       243.3 seconds, 35.9%
Fitness Testing:    345.1 seconds, 51.0%
Report:              88.4 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 54650.213300000054
Test mean error for best: 27.32511
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_min} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction -97} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction -97} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction integer_shove} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_add} {:instruction integer_yank} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max})
Best program: (float_shove float_shove integer_min float_yankdup integer_fromfloat float_min integer_mult integer_stackdepth integer_mult float_dup_items tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 -97 in2 tag_float_668 float_tan integer_dec tag_float_668 float_tan integer_dec float_max float_sin in2 -97 in2 tag_float_668 float_tan integer_dec integer_shove in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_add integer_yank float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2647.5013070000014
Median total errors in population: 882.7020999999999
Error averages by case: (90.14674450000042 10.296 92.4668464 3.085 92.30205250000004 3.025 87.78341749999998 3.136 63.78225829999999 2.606 108.09675630000004 4.061 147.277296 3.119 111.53092150000008 11.326 73.46026419999922 7.998 163.08563369999993 3.132 94.47525849999994 9.955 88.78081229999971 8.768 99.63723929999885 10.239 87.04168409999875 9.556 139.53741130000003 13.239 82.04367440000102 9.31 92.9333807 3.055 83.08734049999899 10.232 84.29155969999911 11.652 98.67374740000167 9.468 111.16118390000003 2.958 81.86983119999887 9.227 97.64793730000147 10.344 111.71797559999999 2.919 88.89207989999998 3.072)
Error minima by case: (0.2177 7 22.0 2 22.0 2 6.4372 2 0.0 0 36.9357 3 72.489 2 11.3134 10 0.3483 2 79.539 1 0.728 1 0.2489 2 0.3746 7 1.8662 2 28.7345 9 0.0311 2 20.7137 2 0.4386 7 0.061 7 0.0406 2 33.9584 2 0.0361 6 9.1536 2 25.0184 2 4.952 2)
Average genome size in population (length): 90.123
Average program size in population (points): 91.123
Average percent parens in population: 0.011
Minimum age in population: 257.8972906462406
Maximum age in population: 262.5856623810782
Average age in population: 260.5802019925558
Median age in population: 260.63218429758
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.869
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.869
Total error diversity:				 0.372
Error (vector) diversity:			 0.374
Behavioral diversity:				 0.375
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 309772828
--- Timings ---
Current time: 1529615458400 milliseconds
Total Time:         681.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.6 seconds, 35.9%
Fitness Testing:    347.3 seconds, 51.0%
Report:              88.9 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction float_shove} {:instruction float_rot} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_items} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction integer_sub} {:instruction float_min})
Best program: (float_shove integer_swap integer_yankdup float_shove float_rot integer_yankdup integer_yank integer_fromfloat integer_min integer_mult integer_stackdepth integer_mult float_dec float_dup float_dup_items float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add integer_swap in1 float_max float_inc integer_swap float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max integer_sub float_min)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2910.424541400001
Median total errors in population: 896.38175
Error averages by case: (99.5144662000004 10.451 101.4426137 3.17 101.36472070000003 3.137 96.7587938 3.258 78.64891760000003 2.715 116.8203986 4.172 156.19262519999998 3.267 120.60476400000009 11.423 85.44481369999932 8.056 172.2005725 3.289 106.16200079999982 9.984 101.70455009999965 8.909 108.83706289999898 10.423 98.23805999999888 9.676 148.44694209999994 13.371 94.06313410000081 9.47 101.86323570000002 3.171 93.10337279999902 10.384 94.46381829999889 11.676 107.6134829000016 9.562 120.26436960000005 3.045 100.92045999999891 9.451 108.37059150000135 10.404 120.3038554 3.027 98.41891919999998 3.167)
Error minima by case: (0.2105 6 5.9059 2 13.7464 2 16.0 2 0.0 0 37.0 3 72.489 2 8.5223 10 0.3483 2 79.539 2 0.133 1 0.1988 2 0.4577 8 0.8508 2 25.7343 10 0.0021 2 22.7137 2 0.1353 7 0.0502 6 0.0406 2 33.8077 2 0.0272 6 13.8049 2 30.4276 2 6.4464 2)
Average genome size in population (length): 90.251
Average program size in population (points): 91.251
Average percent parens in population: 0.011
Minimum age in population: 259.7813874944338
Maximum age in population: 264.0319800543481
Average age in population: 261.9556740753063
Median age in population: 261.9935188802406
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.874
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.874
Total error diversity:				 0.401
Error (vector) diversity:			 0.408
Behavioral diversity:				 0.409
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 312035953
--- Timings ---
Current time: 1529615462614 milliseconds
Total Time:         685.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.0 seconds, 35.9%
Fitness Testing:    349.6 seconds, 51.0%
Report:              89.6 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_shove} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction tagged_119} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction integer_sub} {:instruction float_min})
Best program: (float_inc float_shove tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 tagged_119 integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add integer_swap in1 float_max float_inc integer_mod float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max integer_sub float_min)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2850.814809900001
Median total errors in population: 904.7819999999999
Error averages by case: (99.20320130000023 10.393 99.62206190000002 3.143 99.89072540000005 3.138 93.50539080000001 3.254 76.77278210000007 2.592 114.59035479999999 4.184 153.16905870000002 3.281 119.03784350000006 11.325 82.5366805999993 7.676 168.56807099999995 3.273 105.13625359999993 9.658 96.54119249999982 8.526 109.76489739999904 10.363 94.99023709999896 9.346 146.70135250000004 13.278 89.4436634000008 9.166 99.04746189999996 3.207 91.37902859999919 10.341 91.49231359999932 11.629 109.23565660000139 9.151 118.39470820000005 3.029 94.76823819999908 9.455 107.90897500000122 9.963 117.15300239999995 2.99 96.45865879999997 3.142)
Error minima by case: (0.1125 7 20.4878 2 12.6473 2 16.0 2 0.0 0 37.0 3 72.489 2 1.0014 9 0.3483 1 79.539 1 0.728 1 0.2424 2 0.6038 7 0.8257 2 29.1976 10 0.1501 1 22.7137 2 0.3976 7 0.0502 5 0.0406 2 0.1665 2 0.0694 6 10.8049 2 31.4276 2 9.052 2)
Average genome size in population (length): 90.185
Average program size in population (points): 91.185
Average percent parens in population: 0.011
Minimum age in population: 261.0173812794311
Maximum age in population: 265.2207138150133
Average age in population: 263.2471173563686
Median age in population: 263.2931314980582
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.351
Error (vector) diversity:			 0.356
Behavioral diversity:				 0.356
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 314297153
--- Timings ---
Current time: 1529615466718 milliseconds
Total Time:         689.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       247.3 seconds, 35.9%
Fitness Testing:    351.8 seconds, 51.0%
Report:              90.1 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_shove} {:instruction float_flush} {:instruction integer_yank} {:instruction float_max} {:instruction float_sin} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction float_tan} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_mod} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_add} {:instruction float_sub} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_shove} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_dec})
Best program: (float_sub float_shove float_flush integer_yank float_max float_sin integer_mult integer_max float_dup float_dup_items float_tan tagged_481 float_max integer_dup float_max float_mod tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_add float_sub integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_shove integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_dec)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2703.2502568000004
Median total errors in population: 901.2205499999999
Error averages by case: (91.49432800000035 10.338 93.06876480000001 2.982 92.81004420000002 2.929 88.6221361 3.145 68.63756710000003 2.449 108.84257020000001 4.067 148.27381370000003 3.133 114.61464600000004 11.309 76.92706609999918 7.851 163.98970229999998 3.147 97.09951189999977 9.749 91.15502969999959 8.672 101.29521789999905 10.281 89.17703819999899 9.468 140.634858 13.255 84.73959430000055 9.251 93.80024349999995 3.061 84.81182399999922 10.308 84.44717329999929 11.591 106.10889670000178 9.292 111.86087840000003 2.858 90.68900979999911 9.349 103.00695950000117 10.147 112.31412780000001 2.865 90.36925529999999 2.963)
Error minima by case: (0.0115 6 22.0 2 22.0 2 16.0 1 0.0 0 37.0 3 82.0 2 9.0667 8 0.3483 1 77.539 2 4.0812 1 0.1801 2 1.4548 7 0.6189 2 25.7343 10 0.6154 2 11.1596 1 0.4386 7 0.119 7 0.0406 2 35.3707 2 0.0053 5 12.8049 2 30.4276 2 0.2881 2)
Average genome size in population (length): 90.075
Average program size in population (points): 91.075
Average percent parens in population: 0.011
Minimum age in population: 262.0173812794311
Maximum age in population: 266.6803063433907
Average age in population: 264.5847672986162
Median age in population: 264.6122378747354
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.872
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.872
Total error diversity:				 0.365
Error (vector) diversity:			 0.37
Behavioral diversity:				 0.371
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 316555278
--- Timings ---
Current time: 1529615470889 milliseconds
Total Time:         693.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       248.7 seconds, 35.9%
Fitness Testing:    354.1 seconds, 51.1%
Report:              90.6 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_shove} {:instruction float_rot} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction tag_integer_148} {:instruction tagged_481} {:instruction float_max} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_items} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_mod} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_sub} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_256} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_sub} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_yankdup float_shove float_rot integer_yankdup integer_yank tag_integer_148 tagged_481 float_max tagged_481 float_max integer_dup float_max float_sin integer_dup float_max float_dup_items in2 tag_float_668 float_tan integer_dec float_mod in1 float_tan float_inc float_tan float_sub float_inc float_inc tagged_256 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add integer_dup integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float integer_sub 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3024.289831000001
Median total errors in population: 903.5789499999998
Error averages by case: (106.42990270000087 10.367 106.11572769999995 3.179 105.93524190000007 3.168 99.84061690000001 3.316 81.99537090000011 2.735 120.09622730000007 4.266 158.6763712 3.336 124.78590430000008 11.3 90.09149529999895 7.918 174.15075599999994 3.381 111.03210509999965 9.789 103.35733879999937 8.707 114.05207979999881 10.317 106.55187979999866 9.554 152.69358590000002 13.202 100.40011450000097 9.352 105.49678469999995 3.262 99.22266509999908 10.266 100.10994179999855 11.58 112.33440290000229 9.41 124.66726470000008 3.042 109.82490279999877 9.417 113.46510590000152 10.268 122.9208865 3.044 102.6781584999999 3.189)
Error minima by case: (0.44 6 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 8.5223 10 0.3483 2 79.539 2 0.4111 1 0.294 2 0.1432 7 0.6189 2 27.2939 10 0.6154 2 22.7137 2 0.0267 7 0.0481 7 0.9092 2 36.7358 2 0.1562 6 11.8049 2 30.4276 1 6.4541 2)
Average genome size in population (length): 90.114
Average program size in population (points): 91.114
Average percent parens in population: 0.011
Minimum age in population: 263.0548403704292
Maximum age in population: 268.4290265327411
Average age in population: 265.8700625247273
Median age in population: 265.8985840562214
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.888
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.888
Total error diversity:				 0.345
Error (vector) diversity:			 0.35
Behavioral diversity:				 0.35
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 318812903
--- Timings ---
Current time: 1529615475087 milliseconds
Total Time:         697.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       250.0 seconds, 35.8%
Fitness Testing:    356.3 seconds, 51.1%
Report:              91.2 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_shove} {:instruction float_flush} {:instruction integer_yank} {:instruction float_max} {:instruction float_sin} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction float_tan} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_mod} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_add} {:instruction float_sub} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_shove} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_dec})
Best program: (float_sub float_shove float_flush integer_yank float_max float_sin integer_mult integer_max float_dup float_dup_items float_tan tagged_481 float_max integer_dup float_max float_mod tag_integer_197 tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_add float_sub integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_shove integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_dec)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2944.913535800001
Median total errors in population: 882.7020999999999
Error averages by case: (103.42647580000072 10.323 103.5545937 3.107 102.85264660000006 3.049 97.58095789999999 3.215 74.41550320000002 2.538 117.72084560000003 4.126 156.86443820000002 3.241 122.01717730000006 11.327 86.33640519999949 7.75 172.30094870000005 3.236 105.17820709999954 9.795 101.88720839999948 8.686 109.99971679999896 10.267 100.06494879999894 9.466 149.7252563 13.255 97.8232327000007 9.261 102.64090999999996 3.144 95.17603729999917 10.283 97.97647259999883 11.655 114.49669810000194 9.288 121.46585280000002 2.954 102.45739199999895 9.386 112.02620140000121 10.147 121.44450269999999 2.931 99.95290659999995 3.098)
Error minima by case: (0.1125 7 22.0 2 22.0 2 9.4857 2 0.0 0 37.0 3 72.489 2 2.979 7 0.3483 2 79.539 1 0.4111 1 0.1801 2 0.379 7 0.4685 2 25.3156 11 0.3973 1 22.7137 2 0.4089 7 0.0502 6 0.0406 2 36.006 2 0.0064 6 11.8049 2 30.4276 2 4.81 2)
Average genome size in population (length): 89.848
Average program size in population (points): 90.848
Average percent parens in population: 0.011
Minimum age in population: 264.7525188461213
Maximum age in population: 269.1081829573524
Average age in population: 267.2319477745163
Median age in population: 267.2641984112988
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.884
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.884
Total error diversity:				 0.356
Error (vector) diversity:			 0.361
Behavioral diversity:				 0.362
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 321064328
--- Timings ---
Current time: 1529615479260 milliseconds
Total Time:         701.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       251.4 seconds, 35.8%
Fitness Testing:    358.6 seconds, 51.1%
Report:              91.8 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction float_shove} {:instruction float_rot} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_items} {:instruction float_rot} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction integer_yank} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction integer_sub} {:instruction float_min})
Best program: (float_shove integer_swap integer_yankdup float_shove float_rot integer_yankdup integer_yank integer_fromfloat integer_min integer_mult integer_stackdepth integer_mult float_dec float_dup float_dup_items float_rot in2 tag_float_668 float_tan integer_dec integer_yank in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add integer_swap in1 float_max float_inc integer_swap float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max integer_sub float_min)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2882.1743031
Median total errors in population: 903.12285
Error averages by case: (100.00262920000063 10.4 101.85917749999997 3.179 101.74837130000003 3.139 96.0026771 3.309 76.94717440000005 2.627 116.24556450000001 4.218 154.9124812 3.334 120.91860500000004 11.361 82.45526159999945 7.804 170.5543986 3.316 105.55876219999966 9.836 98.61636989999954 8.726 112.18887579999898 10.325 94.63018189999906 9.48 148.64707510000002 13.301 92.03454650000056 9.34 100.89753759999995 3.254 92.3184544999992 10.316 91.975717099999 11.623 109.09961930000173 9.351 120.36776630000004 3.025 91.94536929999913 9.362 107.29068150000117 10.148 119.31315049999998 3.037 98.66585519999997 3.167)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 2.8742 10 0.3483 2 24.461 2 0.4111 1 0.294 2 0.3626 7 0.8508 2 25.8156 10 0.2264 2 6.2863 2 0.3976 7 0.0502 6 0.0406 2 34.006 2 0.0047 6 11.8049 2 16.5724 2 6.7697 2)
Average genome size in population (length): 90.286
Average program size in population (points): 91.286
Average percent parens in population: 0.011
Minimum age in population: 265.7525188461213
Maximum age in population: 270.735148934773
Average age in population: 268.5355333964429
Median age in population: 268.5551056393364
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.887
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.887
Total error diversity:				 0.364
Error (vector) diversity:			 0.368
Behavioral diversity:				 0.368
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 323325753
--- Timings ---
Current time: 1529615483397 milliseconds
Total Time:         706.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       252.7 seconds, 35.8%
Fitness Testing:    360.8 seconds, 51.1%
Report:              92.4 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_yank} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction in2} {:instruction tag_float_668} {:instruction tag_float_969} {:instruction integer_yank} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_488} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction 75} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max})
Best program: (float_shove float_shove integer_yankdup integer_yank float_min integer_stackdepth integer_mult integer_stackdepth integer_mult integer_dup integer_yank integer_mult integer_stackdepth integer_inc integer_max float_dup float_dup_items integer_yank in2 tag_float_668 tag_float_969 integer_yank integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 integer_max float_inc float_inc tagged_488 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add 75 integer_swap in1 float_max float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3028.3696123000013
Median total errors in population: 898.2502499999999
Error averages by case: (105.01512880000058 10.44 107.47834499999999 3.177 108.00812050000005 3.154 101.2028462 3.295 82.65081030000009 2.641 121.40290170000002 4.23 160.0790637 3.296 126.55582040000007 11.357 89.34624769999917 7.922 175.67803409999996 3.297 110.88007249999963 9.804 103.26460919999964 8.641 114.55804879999897 10.332 101.3825262999988 9.456 154.33478269999998 13.284 96.98392940000099 9.226 106.54694349999995 3.219 98.2422707999991 10.244 98.26819219999902 11.653 117.88573470000186 9.401 126.2888663000001 3.026 103.02734139999892 9.443 113.19947010000132 10.232 124.69659949999998 3.005 104.45590649999994 3.162)
Error minima by case: (0.44 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 8.9714 10 0.3483 2 24.461 2 0.2185 1 0.294 2 0.0609 6 0.577 2 26.3133 10 0.2264 1 6.2863 2 0.0392 7 0.0064 7 0.0406 2 39.4238 2 0.0373 6 11.8049 2 16.5724 2 13.0023 2)
Average genome size in population (length): 90.231
Average program size in population (points): 91.231
Average percent parens in population: 0.011
Minimum age in population: 266.7525188461213
Maximum age in population: 272.2202920832032
Average age in population: 269.9084084644428
Median age in population: 269.9457008055633
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.34
Error (vector) diversity:			 0.344
Behavioral diversity:				 0.344
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 325584103
--- Timings ---
Current time: 1529615487559 milliseconds
Total Time:         710.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       254.1 seconds, 35.8%
Fitness Testing:    363.0 seconds, 51.1%
Report:              92.9 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction float_flush} {:instruction integer_mult} {:instruction integer_flush} {:instruction float_dup} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_items} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_mod} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max})
Best program: (float_shove float_shove float_flush integer_mult integer_flush float_dup integer_stackdepth integer_mult float_dec float_dup float_dup_items in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_mod float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2943.187839800002
Median total errors in population: 883.0579999999998
Error averages by case: (102.99982310000074 10.367 101.62105249999999 3.147 101.95191400000004 3.094 95.48441429999998 3.26 79.10138080000014 2.698 118.09095880000001 4.208 156.51958950000002 3.297 120.42350560000004 11.36 86.6017268999992 7.886 172.07074689999996 3.287 109.28649419999965 9.814 100.80618989999961 8.59 111.48148069999894 10.321 98.97643089999893 9.489 149.3237889 13.317 95.29251440000074 9.269 102.68094639999995 3.21 96.50838009999924 10.377 95.91677569999888 11.747 113.35762290000187 9.38 120.83823290000005 3.005 105.39800779999902 9.427 112.0811032000012 10.216 120.0529727 3.016 99.37978669999994 3.16)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 72.489 2 3.289 10 0.3483 2 99.0 2 1.393 1 0.1801 2 0.4903 7 0.9328 2 13.1681 11 0.6154 2 22.7137 2 0.0448 7 0.0502 7 0.0406 2 30.2071 2 0.0064 6 6.1949 2 30.4276 2 11.7531 2)
Average genome size in population (length): 90.198
Average program size in population (points): 91.198
Average percent parens in population: 0.011
Minimum age in population: 268.7548154472323
Maximum age in population: 273.2202920832032
Average age in population: 271.2874914354374
Median age in population: 271.3342532497274
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.344
Error (vector) diversity:			 0.351
Behavioral diversity:				 0.351
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 327842178
--- Timings ---
Current time: 1529615491726 milliseconds
Total Time:         714.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.5 seconds, 35.8%
Fitness Testing:    365.3 seconds, 51.1%
Report:              93.5 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction float_sin} {:instruction in2} {:instruction tag_float_558} {:instruction integer_shove} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction -97} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction -98} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_max} {:instruction float_min} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_sub} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max})
Best program: (float_min float_shove integer_yankdup integer_yank integer_fromfloat integer_stackdepth integer_mult integer_stackdepth float_sin in2 tag_float_558 integer_shove float_max float_sin in2 -97 in2 tag_float_668 float_tan integer_dec tag_float_668 float_tan integer_dec float_max float_sin in2 -98 in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_max float_min float_inc float_dup float_inc float_inc float_tan float_add float_sub integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2950.982363000002
Median total errors in population: 882.7020999999999
Error averages by case: (101.3047253000006 10.393 102.98724010000001 3.154 102.73736770000001 3.094 97.89082729999998 3.225 82.57304700000007 2.639 117.70302760000001 4.132 157.19666730000006 3.241 122.55838920000006 11.429 86.16502129999894 8.125 172.89632969999997 3.236 109.38123949999964 10.153 102.2992668999995 8.999 111.56238499999876 10.338 101.91419199999858 9.803 150.17562780000006 13.398 96.9777721000009 9.658 103.58841359999997 3.135 94.588237699999 10.393 95.57477459999875 11.715 106.59918920000179 9.662 121.69239160000004 3.01 102.71886039999887 9.382 108.90071880000151 10.507 121.70099719999997 2.996 100.34565409999999 3.133)
Error minima by case: (0.5997 6 4.5765 2 3.264 2 15.0 2 1.0 1 36.0 2 72.489 2 0.8528 9 0.3483 1 79.539 2 0.4111 1 0.294 2 0.0528 7 0.577 2 17.7972 8 0.3973 2 22.4146 2 0.4089 7 0.0217 6 0.2155 2 33.052 2 0.0646 6 11.8049 2 32.4276 2 7.6096 1)
Average genome size in population (length): 90.143
Average program size in population (points): 91.143
Average percent parens in population: 0.011
Minimum age in population: 270.16669386672
Maximum age in population: 274.7512369415207
Average age in population: 272.640082145776
Median age in population: 272.6720095189166
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.875
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.875
Total error diversity:				 0.364
Error (vector) diversity:			 0.374
Behavioral diversity:				 0.374
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 330099403
--- Timings ---
Current time: 1529615495965 milliseconds
Total Time:         718.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       256.9 seconds, 35.7%
Fitness Testing:    367.5 seconds, 51.1%
Report:              94.1 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_shove} {:instruction tagged_348} {:instruction tagged_481} {:instruction float_dup_items} {:instruction float_max} {:instruction integer_dup_items} {:instruction in2} {:instruction tag_float_728} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max} {:instruction 96.65960517903105} {:instruction tag_float_375})
Best program: (float_inc float_shove tagged_348 tagged_481 float_dup_items float_max integer_dup_items in2 tag_float_728 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max 96.65960517903105 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2618.0776832000006
Median total errors in population: 891.7580499999999
Error averages by case: (86.65342400000054 10.316 91.14656989999999 2.96 91.20388340000001 2.93 86.40342730000002 3.039 63.68770249999999 2.43 105.1888008 3.963 145.48433670000006 3.081 110.78198120000005 11.288 75.31899899999917 7.849 160.86736510000003 3.068 92.52021029999959 9.812 88.76049359999939 8.677 95.82449339999903 10.24 82.44698759999895 9.548 138.81230000000002 13.207 81.06295530000082 9.29 90.16197200000002 2.993 80.71220829999909 10.217 81.06069319999914 11.502 101.883517500002 9.34 110.06189180000001 2.856 88.45438849999914 9.353 97.61556060000117 10.192 109.6571519 2.844 88.37936929999998 2.932)
Error minima by case: (0.1125 7 21.7846 2 22.0 2 16.0 1 0.0 0 32.6984 3 14.511 2 8.5223 10 0.3483 2 24.461 2 0.728 2 0.294 2 0.2726 8 0.5247 2 24.2818 7 0.6154 2 6.2863 2 0.0616 7 0.0309 7 0.0406 2 34.7358 2 0.0064 6 11.8049 2 16.5724 2 8.4363 2)
Average genome size in population (length): 89.639
Average program size in population (points): 90.639
Average percent parens in population: 0.011
Minimum age in population: 271.16669386672
Maximum age in population: 276.1334883281952
Average age in population: 274.0352599624537
Median age in population: 274.0937267993674
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.868
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.868
Total error diversity:				 0.36
Error (vector) diversity:			 0.365
Behavioral diversity:				 0.365
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 332342803
--- Timings ---
Current time: 1529615500143 milliseconds
Total Time:         722.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.2 seconds, 35.7%
Fitness Testing:    369.8 seconds, 51.2%
Report:              94.7 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction float_sub} {:instruction float_max} {:instruction integer_min} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_add} {:instruction float_sub} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_shove} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_dec})
Best program: (float_shove integer_inc integer_yankdup integer_dup float_max float_sin in2 tag_float_668 float_tan float_sub float_max integer_min in2 tag_float_668 float_tan integer_dec integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_add float_sub integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_shove integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_dec)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2731.5780310000014
Median total errors in population: 881.9377999999999
Error averages by case: (93.42635120000051 10.284 95.31777470000002 3.077 95.09195160000004 3.034 91.03010979999999 3.146 70.83722480000003 2.667 110.37638700000001 4.077 150.34948939999998 3.157 114.65141100000002 11.3 77.6820752999992 7.891 166.4703905 3.168 97.85902549999976 9.871 92.42797119999966 8.739 102.0578399999989 10.253 91.31422629999882 9.59 142.1272187 13.226 88.25079440000091 9.375 95.80611940000001 3.089 85.23222609999911 10.207 86.39340479999913 11.57 102.74710690000208 9.428 113.73556590000003 2.94 86.01164299999903 9.278 99.90411710000139 10.291 114.57103529999998 2.92 92.26357109999998 3.065)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 14.511 2 6.0047 9 0.3483 2 24.461 2 1.5889 1 0.294 2 0.2781 7 0.9328 2 25.7343 10 0.6154 2 6.2863 2 0.0518 7 0.016 6 0.0406 2 37.5945 2 0.1562 6 13.8049 2 16.5724 2 7.3195 2)
Average genome size in population (length): 89.755
Average program size in population (points): 90.755
Average percent parens in population: 0.011
Minimum age in population: 272.5323253205533
Maximum age in population: 277.2200979028933
Average age in population: 275.2811706915562
Median age in population: 275.3339589574911
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.861
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.861
Total error diversity:				 0.354
Error (vector) diversity:			 0.354
Behavioral diversity:				 0.354
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 334589053
--- Timings ---
Current time: 1529615504363 milliseconds
Total Time:         727.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       259.6 seconds, 35.7%
Fitness Testing:    372.0 seconds, 51.2%
Report:              95.3 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 54649.213300000054
Test mean error for best: 27.32461
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_shove} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup} {:instruction float_yankdup} {:instruction float_mod} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_cos} {:instruction integer_dup} {:instruction tagged_481} {:instruction float_max} {:instruction integer_dup} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction tagged_338} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_add} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction tag_float_375})
Best program: (float_shove float_shove integer_shove float_max integer_dup float_yankdup float_mod tag_integer_197 tagged_481 float_cos integer_dup tagged_481 float_max integer_dup float_max float_sin in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc integer_min float_inc in1 float_dec tagged_338 in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_dec integer_swap float_inc float_dup float_inc float_inc float_tan float_add integer_add integer_swap float_inc float_dup float_inc float_inc float_tan float_add in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3125.6878336000013
Median total errors in population: 911.3747999999999
Error averages by case: (111.01677590000043 10.519 107.98993120000002 3.175 107.85917220000002 3.134 103.08545709999999 3.32 87.80246230000007 2.788 123.78050380000003 4.228 162.36894619999998 3.304 128.06444290000005 11.39 94.23424289999917 7.944 178.0755801 3.333 117.75637019999968 9.8 110.74137689999957 8.789 120.24773509999898 10.49 107.4015045999988 9.569 154.65371200000004 13.355 105.58162100000084 9.348 108.63270329999997 3.236 104.38840729999906 10.487 103.14694279999911 11.692 121.64374180000195 9.412 126.48874250000003 3.039 111.39144789999892 9.611 118.39031650000128 10.264 127.3308378 3.038 105.17185929999997 3.178)
Error minima by case: (0.2177 7 20.0 1 20.0 1 14.0 2 1.0 1 35.0 3 13.511 1 2.979 7 0.3483 2 23.461 2 0.728 2 0.294 2 0.213 7 0.987 1 25.3156 9 0.3365 1 5.2863 2 0.4386 7 0.0072 8 0.0406 2 37.8861 2 0.0159 6 11.8049 2 3.7497 2 12.052 2)
Average genome size in population (length): 90.05
Average program size in population (points): 91.05
Average percent parens in population: 0.011
Minimum age in population: 274.0425045791478
Maximum age in population: 278.6757977911543
Average age in population: 276.6593068761648
Median age in population: 276.6583353856882
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.885
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.885
Total error diversity:				 0.359
Error (vector) diversity:			 0.366
Behavioral diversity:				 0.366
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 336843952
--- Timings ---
Current time: 1529615508632 milliseconds
Total Time:         731.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       261.0 seconds, 35.7%
Fitness Testing:    374.3 seconds, 51.2%
Report:              95.9 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_max} {:instruction float_sub} {:instruction float_dup} {:instruction float_dup_times} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_542} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction float_inc} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction tag_float_187} {:instruction 94.91637758043163} {:instruction integer_sub})
Best program: (float_dup_items tag_integer_197 tagged_481 float_max integer_max float_sub float_dup float_dup_times tag_integer_197 tagged_481 float_max in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_542 float_inc in1 float_inc tagged_456 float_inc in1 in2 float_inc in1 integer_dec float_inc float_inc integer_yank float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float tag_float_187 94.91637758043163 integer_sub)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2967.4388288000014
Median total errors in population: 903.0474499999999
Error averages by case: (101.79336140000072 10.428 105.68000239999998 3.255 105.75585550000005 3.176 99.290349 3.384 78.57064240000008 2.782 118.9999206 4.274 157.73419210000003 3.366 125.16679020000007 11.385 87.60039289999922 7.996 173.25437359999998 3.398 108.82519719999958 9.895 101.07760749999932 8.895 110.90204559999898 10.391 96.95211039999893 9.665 151.49206250000006 13.316 96.71810030000087 9.462 103.85248079999997 3.3 95.07238659999913 10.395 97.35549369999893 11.636 112.35332760000212 9.485 123.7930150000001 3.101 100.11411809999913 9.518 112.8428442000014 10.315 121.24578969999997 3.101 101.85236949999991 3.225)
Error minima by case: (0.1125 7 22.0 2 22.0 2 2.9536 2 0.0 0 31.6304 3 0.511 2 8.7497 9 0.3483 2 27.461 2 0.5755 1 0.294 2 0.3777 7 0.4685 2 25.0391 9 0.3332 1 18.7137 2 0.3976 7 0.016 6 0.0406 2 36.7358 2 0.0129 6 10.8049 2 28.4276 2 9.052 2)
Average genome size in population (length): 90.763
Average program size in population (points): 91.763
Average percent parens in population: 0.011
Minimum age in population: 275.2395101140809
Maximum age in population: 279.9963549970709
Average age in population: 277.9815946874081
Median age in population: 278.0270168966826
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.88
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.88
Total error diversity:				 0.381
Error (vector) diversity:			 0.39
Behavioral diversity:				 0.39
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 339116052
--- Timings ---
Current time: 1529615512852 milliseconds
Total Time:         735.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       262.4 seconds, 35.7%
Fitness Testing:    376.5 seconds, 51.2%
Report:              96.5 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_stackdepth} {:instruction float_sin} {:instruction in2} {:instruction tag_float_558} {:instruction integer_shove} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction -97} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction tag_float_668} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float})
Best program: (integer_mult integer_stackdepth float_sin in2 tag_float_558 integer_shove float_max float_sin in2 -97 in2 tag_float_668 float_tan integer_dec tag_float_668 in1 float_tan float_inc float_tan float_max in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2893.642245000001
Median total errors in population: 884.0549499999997
Error averages by case: (101.14654690000076 10.318 102.75585580000002 3.141 102.82420150000004 3.117 96.8882804 3.247 74.71760390000004 2.663 116.80842670000006 4.182 155.8101197 3.282 121.57872700000007 11.318 84.2582264999991 7.801 171.24667009999996 3.281 103.45881979999963 9.76 96.36460339999938 8.554 109.97112869999887 10.328 96.71522929999871 9.459 149.42303809999999 13.239 92.35863570000092 9.229 100.9674838 3.183 93.25587819999902 10.323 93.11046999999878 11.605 111.34800490000208 9.311 121.40237830000002 3.025 93.16021499999881 9.404 108.86582730000147 10.12 119.74066630000002 2.999 99.44120769999996 3.135)
Error minima by case: (0.1125 7 22.0 2 22.0 2 16.0 2 0.0 0 3.9709 3 14.511 2 0.4382 9 0.3483 2 24.461 1 1.272 1 0.1988 2 0.0568 8 2.1669 2 24.5492 9 0.3332 1 6.2863 2 0.1353 7 0.0409 7 0.0406 2 36.7925 2 0.0064 6 13.8049 2 16.5724 2 4.692 2)
Average genome size in population (length): 90.739
Average program size in population (points): 91.739
Average percent parens in population: 0.011
Minimum age in population: 277.0543658472808
Maximum age in population: 281.3441845998525
Average age in population: 279.3051282116799
Median age in population: 279.3452695140757
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.875
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.875
Total error diversity:				 0.349
Error (vector) diversity:			 0.352
Behavioral diversity:				 0.353
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 341387527
--- Timings ---
Current time: 1529615517001 milliseconds
Total Time:         739.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       263.7 seconds, 35.7%
Fitness Testing:    378.8 seconds, 51.2%
Report:              97.0 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction integer_max} {:instruction float_sub} {:instruction float_dup} {:instruction float_dup_times} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction integer_add} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_542} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction in2} {:instruction float_inc} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction tag_float_187} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_dup_items tag_integer_197 tagged_481 float_max integer_max float_sub float_dup float_dup_times tag_integer_197 tagged_481 integer_add in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_542 float_inc in1 float_inc tagged_456 float_inc in1 in2 float_inc in1 integer_dec float_inc float_inc integer_yank float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float tag_float_187 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2450.9461112000013
Median total errors in population: 896.4944999999998
Error averages by case: (84.33156840000046 10.317 82.08049609999998 3.008 81.84989150000006 2.983 78.27124090000001 3.141 58.66105779999999 2.522 98.54650400000003 4.07 137.60021630000003 3.145 101.75562220000008 11.268 65.77256319999931 7.752 153.81303619999997 3.16 87.78221679999984 9.693 81.09958219999969 8.579 92.90303969999897 10.284 79.95897189999891 9.371 129.30135179999994 13.179 76.32855160000078 9.185 82.45452899999997 3.069 75.8879812999993 10.307 76.90808589999912 11.582 95.57404900000154 9.238 100.89714970000006 2.921 84.65885329999904 9.403 91.03041030000128 10.115 101.04155839999996 2.938 78.18858369999995 3.019)
Error minima by case: (1.8875 7 21.0 2 21.0 2 15.0 2 0.0 0 31.6304 2 0.511 2 8.3948 9 0.3483 1 27.461 2 0.3061 2 0.1801 2 0.4577 7 0.1639 2 26.7346 10 0.0056 2 20.7137 2 0.6024 7 0.0066 4 0.0406 2 31.9584 2 0.0064 6 13.8049 2 27.0184 2 2.952 1)
Average genome size in population (length): 90.989
Average program size in population (points): 91.989
Average percent parens in population: 0.011
Minimum age in population: 278.0543658472808
Maximum age in population: 282.5088837556884
Average age in population: 280.6599555700876
Median age in population: 280.6732606262437
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.882
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.882
Total error diversity:				 0.368
Error (vector) diversity:			 0.372
Behavioral diversity:				 0.374
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 343665338
--- Timings ---
Current time: 1529615521170 milliseconds
Total Time:         743.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       265.1 seconds, 35.6%
Fitness Testing:    381.0 seconds, 51.2%
Report:              97.6 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 54751.64840000006
Test mean error for best: 27.37582
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_add} {:instruction float_dup} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction tagged_612} {:instruction integer_max} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_dup_times} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_max} {:instruction in2} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_mod} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_sub} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_256} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction float_mult} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_sub} {:instruction 94.91637758043163} {:instruction tag_float_375})
Best program: (float_shove integer_inc integer_yankdup integer_inc integer_add float_dup float_dup_items tag_integer_197 tagged_481 tagged_612 integer_max integer_fromfloat float_dup float_dup_times tag_integer_197 tagged_481 float_max in2 in2 tag_float_668 float_tan integer_dec float_mod in1 float_tan float_inc float_tan float_sub float_inc float_inc tagged_256 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan float_mult float_inc float_dup float_inc float_inc float_tan float_add integer_dup integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float integer_sub 94.91637758043163 tag_float_375)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2733.718099400001
Median total errors in population: 904.5254999999999
Error averages by case: (93.8009322000006 10.297 92.06244919999999 2.962 92.15423520000004 2.936 89.4400339 3.086 70.67980440000002 2.542 109.33388330000002 4.046 149.11344889999998 3.12 112.19640110000003 11.267 79.0313997999992 7.835 164.79892210000003 3.133 101.34633339999984 9.846 96.02453539999941 8.778 104.68748539999902 10.261 90.94469459999887 9.546 140.00548079999996 13.186 90.78476560000092 9.319 94.77731979999999 3.056 87.47441159999894 10.255 87.18974509999894 11.5 104.28772930000204 9.378 111.70692360000004 2.841 89.20824289999896 9.307 104.43529290000133 10.198 114.18190049999998 2.856 89.53172839999995 2.969)
Error minima by case: (0.1125 8 22.0 2 22.0 2 16.0 2 0.0 0 37.0 3 72.489 2 10.1305 10 0.3483 2 79.539 2 2.775 1 0.1801 2 0.9881 7 1.1052 1 26.1374 10 0.0056 1 12.9746 2 0.4386 7 0.0502 7 0.0406 2 31.9584 2 0.0272 5 11.8049 2 30.4276 2 2.952 2)
Average genome size in population (length): 90.751
Average program size in population (points): 91.751
Average percent parens in population: 0.011
Minimum age in population: 279.400480035947
Maximum age in population: 283.9950571356493
Average age in population: 282.0229017258408
Median age in population: 282.063009600468
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.88
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.88
Total error diversity:				 0.375
Error (vector) diversity:			 0.377
Behavioral diversity:				 0.377
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 345937013
--- Timings ---
Current time: 1529615525292 milliseconds
Total Time:         747.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       266.4 seconds, 35.6%
Fitness Testing:    383.2 seconds, 51.2%
Report:              98.2 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 54752.64840000006
Test mean error for best: 27.37632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 25.1044771445  | Program output: 9.0093678468  
Correct output: 77.4603744585  | Program output: 99.4603744585 
Correct output: 69.6199139907  | Program output: 91.6199139907 
Correct output: -79.9115210399 | Program output: -63.9115210399
Correct output: 56.4063884706  | Program output: 55.4063884706 
Correct output: -128.6303704081 | Program output: -91.6303704081
Correct output: -97.5110187778 | Program output: -15.5110187778
Correct output: -9.7245103294  | Program output: 35.2754896706 
Correct output: 32.3482587745  | Program output: 32.6965175489 
Correct output: -124.4609691905 | Program output: -25.4609691905
Correct output: 50.295187364   | Program output: 23.5115944492 
Correct output: -50.868100625  | Program output: -50.5741150484
Correct output: 23.5384229728  | Program output: 5.4244742578  
Correct output: -9.9640986393  | Program output: 1.1402561455  
Correct output: -26.6689288929 | Program output: 48.3310711071 
Correct output: -25.1203120353 | Program output: -21.517617338 
Correct output: -31.2863060075 | Program output: -7.2863060075 
Correct output: 33.0343316811  | Program output: 31.636754917  
Correct output: 6.5371282958   | Program output: 18.7462061319 
Correct output: 183.0405782309 | Program output: 182.0811564618
Correct output: 39.83188624    | Program output: 82.83188624   
Correct output: 8.8560946759   | Program output: 9.3066746879  
Correct output: 151.8048643924 | Program output: 167.6097287848
Correct output: -61.5723573    | Program output: -17.5723573   
Correct output: 12.5060430791  | Program output: 33.5060430791 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_max} {:instruction integer_min} {:instruction tagged_481} {:instruction float_max} {:instruction float_dup_items} {:instruction tag_integer_197} {:instruction tagged_481} {:instruction float_shove} {:instruction float_shove} {:instruction integer_max} {:instruction tag_integer_197} {:instruction float_sin} {:instruction in2} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction -97} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction float_max} {:instruction float_sin} {:instruction in2} {:instruction -97} {:instruction in2} {:instruction tag_float_668} {:instruction float_tan} {:instruction integer_dec} {:instruction print_float} {:instruction in1} {:instruction float_tan} {:instruction float_inc} {:instruction float_tan} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_360} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_456} {:instruction float_inc} {:instruction float_tan} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_max} {:instruction float_tan} {:instruction float_max} {:instruction float_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction float_min} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_tan} {:instruction float_add} {:instruction float_div} {:instruction integer_swap} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction float_max})
Best program: (float_shove integer_max integer_min tagged_481 float_max float_dup_items tag_integer_197 tagged_481 float_shove float_shove integer_max tag_integer_197 float_sin in2 in2 tag_float_668 float_tan integer_dec float_dup integer_fromfloat float_dup -97 in2 tag_float_668 float_tan integer_dec tag_float_668 float_tan integer_dec float_max float_sin in2 -97 in2 tag_float_668 float_tan integer_dec print_float in1 float_tan float_inc float_tan float_max float_inc float_inc tagged_360 float_inc in1 float_inc tagged_456 float_inc in1 float_dec float_inc in1 float_max float_inc float_inc tagged_456 float_inc float_tan float_dup float_inc float_inc float_add in1 float_max float_tan float_max float_max float_inc float_inc float_add float_tan integer_swap float_inc float_dup float_inc float_inc float_tan float_add float_div float_min float_inc float_dup float_inc float_inc float_tan float_add float_div integer_swap in1 float_max float_inc in1 float_max float_inc float_dup float_inc float_inc float_add in1 float_yankdup print_float float_max)
Errors: [16.0951 9 22.0 2 22.0 2 16.0 2 1.0 1 37.0 3 82.0 2 45.0 11 0.3483 8 99.0 2 26.7836 11 0.294 8 18.1139 9 11.1044 10 75.0 13 3.6027 9 24.0 2 1.3976 9 12.2091 12 0.9594 10 43.0 2 0.4506 7 15.8049 11 44.0 2 21.0 2]
Total: 797.1636
Mean: 15.943272
Genome size: 105
Size: 106
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3051.787536000001
Median total errors in population: 915.0097499999999
Error averages by case: (107.93379700000067 10.444 106.75278039999998 3.156 106.38091590000002 3.103 101.0522528 3.253 81.75737080000007 2.565 120.50848290000003 4.163 159.95076790000005 3.259 126.33308270000006 11.39 90.96364029999933 7.91 175.5876482 3.252 111.39119529999967 9.755 109.21423179999938 8.691 117.76662859999904 10.458 103.70894349999888 9.463 153.66161560000003 13.338 99.99557550000085 9.301 106.4489945 3.178 101.06985359999913 10.423 101.81033139999886 11.705 117.32824380000207 9.408 125.34286600000003 3.013 106.15052939999903 9.496 114.96256670000126 10.209 124.628054 2.989 104.02516739999996 3.14)
Error minima by case: (1.0857 6 22.0 2 11.6455 2 16.0 2 0.0 0 37.0 3 72.489 2 10.6384 9 0.3483 2 79.539 2 0.4111 1 0.294 2 0.9881 8 1.5315 2 18.0327 9 0.3973 1 22.7137 2 0.4386 7 0.0502 7 0.0406 2 38.8101 2 0.0064 6 11.8049 2 28.4276 2 10.7015 2)
Average genome size in population (length): 91.066
Average program size in population (points): 92.066
Average percent parens in population: 0.011
Minimum age in population: 281.1220174355489
Maximum age in population: 285.562914529875
Average age in population: 283.3886547686957
Median age in population: 283.4526828610157
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.365
Error (vector) diversity:			 0.376
Behavioral diversity:				 0.377
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 348216563
--- Timings ---
Current time: 1529615529549 milliseconds
Total Time:         752.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       267.7 seconds, 35.6%
Fitness Testing:    385.5 seconds, 51.3%
Report:              98.8 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
