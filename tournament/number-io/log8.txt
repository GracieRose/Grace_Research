Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[7.982109666200216 61] 68.98210966620022]
Train Case:   1 | Input/Output: [[-57.014083936543855 -74] -131.01408393654384]
Train Case:   2 | Input/Output: [[31.440747146778932 -37] -5.559252853221068]
Train Case:   3 | Input/Output: [[0.959644428890158 59] 59.95964442889016]
Train Case:   4 | Input/Output: [[-25.36141201312003 -92] -117.36141201312003]
Train Case:   5 | Input/Output: [[5.6455800456698455 81] 86.64558004566985]
Train Case:   6 | Input/Output: [[3.232017329421467 56] 59.23201732942147]
Train Case:   7 | Input/Output: [[-79.53524751899556 92] 12.464752481004439]
Train Case:   8 | Input/Output: [[-51.23613899100059 -40] -91.23613899100059]
Train Case:   9 | Input/Output: [[-44.242384555357475 68] 23.757615444642525]
Train Case:  10 | Input/Output: [[-20.242277427988626 47] 26.757722572011374]
Train Case:  11 | Input/Output: [[77.4622705724862 35] 112.4622705724862]
Train Case:  12 | Input/Output: [[8.834164077979636 -6] 2.8341640779796364]
Train Case:  13 | Input/Output: [[36.98542631769547 -86] -49.01457368230453]
Train Case:  14 | Input/Output: [[-39.93470831101726 -13] -52.93470831101726]
Train Case:  15 | Input/Output: [[-20.223535379394363 35] 14.776464620605637]
Train Case:  16 | Input/Output: [[70.5296882093889 -28] 42.529688209388894]
Train Case:  17 | Input/Output: [[-27.77241584975114 1] -26.77241584975114]
Train Case:  18 | Input/Output: [[-97.83945364809345 50] -47.83945364809345]
Train Case:  19 | Input/Output: [[-32.62785159140489 -31] -63.62785159140489]
Train Case:  20 | Input/Output: [[-20.48130922498177 -87] -107.48130922498177]
Train Case:  21 | Input/Output: [[15.54514595368957 -26] -10.45485404631043]
Train Case:  22 | Input/Output: [[-76.57884434923466 56] -20.578844349234657]
Train Case:  23 | Input/Output: [[48.00157971947078 -44] 4.001579719470783]
Train Case:  24 | Input/Output: [[14.422575027012158 67] 81.42257502701216]
Test Case:   0 | Input/Output: [[-86.44853187806878 13] -73.44853187806878]
Test Case:   1 | Input/Output: [[42.89478594400626 4] 46.89478594400626]
Test Case:   2 | Input/Output: [[-16.19207023778921 -10] -26.19207023778921]
Test Case:   3 | Input/Output: [[-24.545240487694883 0] -24.545240487694883]
Test Case:   4 | Input/Output: [[-65.04966651342734 -93] -158.04966651342733]
Test Case:   5 | Input/Output: [[76.34435708865482 -95] -18.655642911345183]
Test Case:   6 | Input/Output: [[32.78794591204837 -11] 21.78794591204837]
Test Case:   7 | Input/Output: [[24.187335406001026 -12] 12.187335406001026]
Test Case:   8 | Input/Output: [[85.68928676591452 88] 173.68928676591452]
Test Case:   9 | Input/Output: [[72.62028527800527 56] 128.62028527800527]
Test Case:  10 | Input/Output: [[34.596688012242055 35] 69.59668801224205]
Test Case:  11 | Input/Output: [[-54.23979986866358 77] 22.76020013133642]
Test Case:  12 | Input/Output: [[-53.31010619681808 49] -4.310106196818083]
Test Case:  13 | Input/Output: [[-59.90007984700956 -26] -85.90007984700955]
Test Case:  14 | Input/Output: [[86.59431286594685 -29] 57.59431286594685]
Test Case:  15 | Input/Output: [[48.09278687993205 -64] -15.90721312006795]
Test Case:  16 | Input/Output: [[9.049621746451677 2] 11.049621746451677]
Test Case:  17 | Input/Output: [[-25.89967888854335 -91] -116.89967888854335]
Test Case:  18 | Input/Output: [[83.89974680405322 39] 122.89974680405322]
Test Case:  19 | Input/Output: [[87.61210234250206 67] 154.61210234250206]
Test Case:  20 | Input/Output: [[-25.8495061960148 -84] -109.8495061960148]
Test Case:  21 | Input/Output: [[22.42175602096303 -87] -64.57824397903697]
Test Case:  22 | Input/Output: [[-4.061143534995537 76] 71.93885646500446]
Test Case:  23 | Input/Output: [[62.314458918363215 -53] 9.314458918363215]
Test Case:  24 | Input/Output: [[77.05724154774299 -62] 15.05724154774299]
Test Case:  25 | Input/Output: [[15.51044120712109 -84] -68.48955879287891]
Test Case:  26 | Input/Output: [[6.1509596781721 18] 24.1509596781721]
Test Case:  27 | Input/Output: [[21.97510239884319 50] 71.97510239884319]
Test Case:  28 | Input/Output: [[85.86167677289058 94] 179.86167677289058]
Test Case:  29 | Input/Output: [[39.26383559433381 57] 96.26383559433381]
Test Case:  30 | Input/Output: [[-18.422493207654682 -38] -56.42249320765468]
Test Case:  31 | Input/Output: [[-28.077129109316374 -43] -71.07712910931637]
Test Case:  32 | Input/Output: [[-58.031377455503666 47] -11.031377455503666]
Test Case:  33 | Input/Output: [[26.089527235479125 58] 84.08952723547912]
Test Case:  34 | Input/Output: [[-99.42852635150766 27] -72.42852635150766]
Test Case:  35 | Input/Output: [[46.895950559234336 -31] 15.895950559234336]
Test Case:  36 | Input/Output: [[-33.899843999430274 90] 56.100156000569726]
Test Case:  37 | Input/Output: [[-96.15412369571466 -48] -144.15412369571465]
Test Case:  38 | Input/Output: [[-65.33527524554691 42] -23.33527524554691]
Test Case:  39 | Input/Output: [[-22.85682833710993 -8] -30.85682833710993]
Test Case:  40 | Input/Output: [[-81.18314094319939 42] -39.18314094319939]
Test Case:  41 | Input/Output: [[-95.34310848748602 6] -89.34310848748602]
Test Case:  42 | Input/Output: [[18.373078064620003 62] 80.37307806462]
Test Case:  43 | Input/Output: [[3.367793796712064 36] 39.367793796712064]
Test Case:  44 | Input/Output: [[71.06095281450328 70] 141.06095281450328]
Test Case:  45 | Input/Output: [[-36.91881444391449 63] 26.081185556085508]
Test Case:  46 | Input/Output: [[-38.58982907080155 0] -38.58982907080155]
Test Case:  47 | Input/Output: [[-6.657497472268119 -53] -59.65749747226812]
Test Case:  48 | Input/Output: [[79.70915610270794 17] 96.70915610270794]
Test Case:  49 | Input/Output: [[-73.25168884556152 -76] -149.25168884556152]
Test Case:  50 | Input/Output: [[96.55898739151166 -31] 65.55898739151166]
Test Case:  51 | Input/Output: [[-29.328876960758137 -17] -46.32887696075814]
Test Case:  52 | Input/Output: [[-73.07009651730007 -27] -100.07009651730007]
Test Case:  53 | Input/Output: [[-98.84052484149642 -51] -149.8405248414964]
Test Case:  54 | Input/Output: [[-0.6071297699920706 -43] -43.60712976999207]
Test Case:  55 | Input/Output: [[-8.348192508473403 -52] -60.3481925084734]
Test Case:  56 | Input/Output: [[52.82096913722498 17] 69.82096913722498]
Test Case:  57 | Input/Output: [[-7.017065814132735 90] 82.98293418586726]
Test Case:  58 | Input/Output: [[-4.902096822021335 33] 28.097903177978665]
Test Case:  59 | Input/Output: [[-64.71279249464261 -9] -73.71279249464261]
Test Case:  60 | Input/Output: [[24.961985774298384 83] 107.96198577429838]
Test Case:  61 | Input/Output: [[-23.66518354900147 85] 61.33481645099853]
Test Case:  62 | Input/Output: [[90.1932838962716 -44] 46.193283896271595]
Test Case:  63 | Input/Output: [[9.00402204079657 -57] -47.99597795920343]
Test Case:  64 | Input/Output: [[29.441036185725494 26] 55.441036185725494]
Test Case:  65 | Input/Output: [[-14.761554622368635 -39] -53.761554622368635]
Test Case:  66 | Input/Output: [[-61.70537201741506 30] -31.70537201741506]
Test Case:  67 | Input/Output: [[68.0469599033116 56] 124.0469599033116]
Test Case:  68 | Input/Output: [[-42.06985253757731 -70] -112.0698525375773]
Test Case:  69 | Input/Output: [[-0.8643033276240999 -20] -20.8643033276241]
Test Case:  70 | Input/Output: [[96.72802028074946 65] 161.72802028074946]
Test Case:  71 | Input/Output: [[-95.18056163620751 62] -33.180561636207514]
Test Case:  72 | Input/Output: [[-30.646682618351463 89] 58.35331738164854]
Test Case:  73 | Input/Output: [[-75.54689045993862 54] -21.546890459938624]
Test Case:  74 | Input/Output: [[-81.20270689797427 80] -1.2027068979742666]
Test Case:  75 | Input/Output: [[31.67964868395174 -66] -34.32035131604826]
Test Case:  76 | Input/Output: [[-41.25164359191069 -62] -103.25164359191069]
Test Case:  77 | Input/Output: [[-64.04717146164687 -74] -138.04717146164688]
Test Case:  78 | Input/Output: [[-23.839374518759698 -8] -31.839374518759698]
Test Case:  79 | Input/Output: [[-1.7429443993939344 35] 33.257055600606066]
Test Case:  80 | Input/Output: [[-76.6534074434792 -89] -165.65340744347918]
Test Case:  81 | Input/Output: [[2.7850577770494453 64] 66.78505777704945]
Test Case:  82 | Input/Output: [[83.90762649181079 -34] 49.90762649181079]
Test Case:  83 | Input/Output: [[-99.09227959167852 98] -1.092279591678519]
Test Case:  84 | Input/Output: [[-34.4391234654924 27] -7.4391234654924006]
Test Case:  85 | Input/Output: [[96.09050157689057 -2] 94.09050157689057]
Test Case:  86 | Input/Output: [[93.5250121328732 -94] -0.4749878671267993]
Test Case:  87 | Input/Output: [[9.494905688262207 98] 107.49490568826221]
Test Case:  88 | Input/Output: [[78.01177283791583 73] 151.01177283791583]
Test Case:  89 | Input/Output: [[-57.15299146121331 39] -18.15299146121331]
Test Case:  90 | Input/Output: [[-69.94841402137351 1] -68.94841402137351]
Test Case:  91 | Input/Output: [[77.33957664961815 -88] -10.660423350381848]
Test Case:  92 | Input/Output: [[-4.438043418105025 89] 84.56195658189498]
Test Case:  93 | Input/Output: [[17.360225304152294 26] 43.360225304152294]
Test Case:  94 | Input/Output: [[12.426665232175012 -91] -78.57333476782499]
Test Case:  95 | Input/Output: [[28.553674852957982 -16] 12.553674852957982]
Test Case:  96 | Input/Output: [[-77.98609842450286 84] 6.013901575497144]
Test Case:  97 | Input/Output: [[99.5984275158576 -23] 76.5984275158576]
Test Case:  98 | Input/Output: [[35.1699694546634 -35] 0.16996945466340208]
Test Case:  99 | Input/Output: [[-67.68407135844588 -64] -131.68407135844586]
Test Case: 100 | Input/Output: [[58.975379364578316 39] 97.97537936457832]
Test Case: 101 | Input/Output: [[-30.85916318197441 -71] -101.85916318197441]
Test Case: 102 | Input/Output: [[-94.59065121834998 -55] -149.59065121835]
Test Case: 103 | Input/Output: [[63.86728695647821 -26] 37.86728695647821]
Test Case: 104 | Input/Output: [[-88.10722725611349 -87] -175.1072272561135]
Test Case: 105 | Input/Output: [[27.98922792877883 -32] -4.010772071221169]
Test Case: 106 | Input/Output: [[70.46699380030066 -12] 58.466993800300656]
Test Case: 107 | Input/Output: [[-3.4115453396510844 -70] -73.41154533965108]
Test Case: 108 | Input/Output: [[-63.39555621866098 86] 22.60444378133902]
Test Case: 109 | Input/Output: [[-94.3950182532629 -91] -185.3950182532629]
Test Case: 110 | Input/Output: [[-76.99992550760213 -80] -156.99992550760214]
Test Case: 111 | Input/Output: [[67.21880155467551 -71] -3.781198445324492]
Test Case: 112 | Input/Output: [[-5.361139873030396 -94] -99.3611398730304]
Test Case: 113 | Input/Output: [[92.84706406138696 -17] 75.84706406138696]
Test Case: 114 | Input/Output: [[-99.93403752074492 -75] -174.93403752074494]
Test Case: 115 | Input/Output: [[17.04329931254985 2] 19.04329931254985]
Test Case: 116 | Input/Output: [[-87.4368215093116 -3] -90.4368215093116]
Test Case: 117 | Input/Output: [[77.10132342540282 91] 168.10132342540282]
Test Case: 118 | Input/Output: [[-3.5955935369798198 -95] -98.59559353697982]
Test Case: 119 | Input/Output: [[41.55992640821603 22] 63.55992640821603]
Test Case: 120 | Input/Output: [[-58.9018318697436 8] -50.9018318697436]
Test Case: 121 | Input/Output: [[37.93814085203263 91] 128.93814085203263]
Test Case: 122 | Input/Output: [[48.80092393680599 62] 110.80092393680599]
Test Case: 123 | Input/Output: [[91.29537383598165 -52] 39.29537383598165]
Test Case: 124 | Input/Output: [[-97.24172953850403 -66] -163.24172953850405]
Test Case: 125 | Input/Output: [[-33.99123210211616 93] 59.00876789788384]
Test Case: 126 | Input/Output: [[19.3357042538521 -88] -68.6642957461479]
Test Case: 127 | Input/Output: [[28.488939096798532 15] 43.48893909679853]
Test Case: 128 | Input/Output: [[93.8230441324051 26] 119.8230441324051]
Test Case: 129 | Input/Output: [[90.61996922801035 -49] 41.61996922801035]
Test Case: 130 | Input/Output: [[60.86365215810122 85] 145.86365215810122]
Test Case: 131 | Input/Output: [[55.65886757421251 64] 119.65886757421251]
Test Case: 132 | Input/Output: [[2.01244291760554 -68] -65.98755708239446]
Test Case: 133 | Input/Output: [[48.970931977213866 -45] 3.9709319772138656]
Test Case: 134 | Input/Output: [[-10.638532326946674 -72] -82.63853232694667]
Test Case: 135 | Input/Output: [[2.8184383608433876 48] 50.81843836084339]
Test Case: 136 | Input/Output: [[-2.282450663729435 12] 9.717549336270565]
Test Case: 137 | Input/Output: [[-46.7090139661259 -40] -86.7090139661259]
Test Case: 138 | Input/Output: [[96.27893589858985 -23] 73.27893589858985]
Test Case: 139 | Input/Output: [[25.677749672746657 89] 114.67774967274666]
Test Case: 140 | Input/Output: [[51.50395030183418 -41] 10.50395030183418]
Test Case: 141 | Input/Output: [[-59.265727602522155 -15] -74.26572760252216]
Test Case: 142 | Input/Output: [[-92.1991725193206 -76] -168.1991725193206]
Test Case: 143 | Input/Output: [[6.256043573369709 -51] -44.74395642663029]
Test Case: 144 | Input/Output: [[39.22912212095949 -6] 33.22912212095949]
Test Case: 145 | Input/Output: [[-0.14046924944501882 -37] -37.14046924944502]
Test Case: 146 | Input/Output: [[-49.241905151387996 -25] -74.241905151388]
Test Case: 147 | Input/Output: [[-26.276963438930295 -84] -110.2769634389303]
Test Case: 148 | Input/Output: [[79.78828830224458 16] 95.78828830224458]
Test Case: 149 | Input/Output: [[-32.4064006341942 -93] -125.4064006341942]
Test Case: 150 | Input/Output: [[36.69567901613746 53] 89.69567901613746]
Test Case: 151 | Input/Output: [[41.40550183163586 -93] -51.59449816836414]
Test Case: 152 | Input/Output: [[49.70015169516597 -9] 40.70015169516597]
Test Case: 153 | Input/Output: [[67.80395600598504 94] 161.80395600598504]
Test Case: 154 | Input/Output: [[61.500403795807586 -9] 52.500403795807586]
Test Case: 155 | Input/Output: [[61.97251666126135 24] 85.97251666126135]
Test Case: 156 | Input/Output: [[-13.076228035113786 -59] -72.07622803511379]
Test Case: 157 | Input/Output: [[-90.69592486329525 14] -76.69592486329525]
Test Case: 158 | Input/Output: [[9.988105513766655 -43] -33.011894486233345]
Test Case: 159 | Input/Output: [[-49.70827411332468 -41] -90.70827411332468]
Test Case: 160 | Input/Output: [[22.727437541947552 48] 70.72743754194755]
Test Case: 161 | Input/Output: [[-28.558162648119634 39] 10.441837351880366]
Test Case: 162 | Input/Output: [[-0.09156289325169098 -15] -15.091562893251691]
Test Case: 163 | Input/Output: [[66.17988671419332 59] 125.17988671419332]
Test Case: 164 | Input/Output: [[89.38431870486835 -40] 49.38431870486835]
Test Case: 165 | Input/Output: [[-52.70736116235801 22] -30.707361162358012]
Test Case: 166 | Input/Output: [[-36.03157640762209 74] 37.96842359237791]
Test Case: 167 | Input/Output: [[56.758565051977 59] 115.758565051977]
Test Case: 168 | Input/Output: [[-90.11497920691306 -39] -129.11497920691306]
Test Case: 169 | Input/Output: [[81.81537687037249 -42] 39.81537687037249]
Test Case: 170 | Input/Output: [[82.52329744031601 13] 95.52329744031601]
Test Case: 171 | Input/Output: [[0.6218014779959304 20] 20.62180147799593]
Test Case: 172 | Input/Output: [[-59.877512330089864 -98] -157.87751233008987]
Test Case: 173 | Input/Output: [[48.43353540573699 -7] 41.43353540573699]
Test Case: 174 | Input/Output: [[17.002406076205915 -15] 2.002406076205915]
Test Case: 175 | Input/Output: [[30.707771328411155 79] 109.70777132841116]
Test Case: 176 | Input/Output: [[7.4665133131695 -39] -31.5334866868305]
Test Case: 177 | Input/Output: [[-78.77844218772525 35] -43.77844218772525]
Test Case: 178 | Input/Output: [[62.02520007825811 85] 147.0252000782581]
Test Case: 179 | Input/Output: [[-15.88363688442223 44] 28.11636311557777]
Test Case: 180 | Input/Output: [[-7.340951467059369 -66] -73.34095146705937]
Test Case: 181 | Input/Output: [[72.48787226901842 34] 106.48787226901842]
Test Case: 182 | Input/Output: [[-11.251342831434854 -24] -35.251342831434854]
Test Case: 183 | Input/Output: [[-36.34539221636428 25] -11.345392216364282]
Test Case: 184 | Input/Output: [[-47.10207058035445 16] -31.10207058035445]
Test Case: 185 | Input/Output: [[-93.3227583661363 -23] -116.3227583661363]
Test Case: 186 | Input/Output: [[4.778410699617837 -94] -89.22158930038216]
Test Case: 187 | Input/Output: [[-42.50391095202095 96] 53.49608904797905]
Test Case: 188 | Input/Output: [[14.426947402023544 62] 76.42694740202354]
Test Case: 189 | Input/Output: [[57.369336315669216 -79] -21.630663684330784]
Test Case: 190 | Input/Output: [[0.05508730759240166 -35] -34.9449126924076]
Test Case: 191 | Input/Output: [[-6.024743713364501 -2] -8.0247437133645]
Test Case: 192 | Input/Output: [[71.94116568266483 25] 96.94116568266483]
Test Case: 193 | Input/Output: [[25.842947285716235 -81] -55.157052714283765]
Test Case: 194 | Input/Output: [[98.11847051881259 -12] 86.11847051881259]
Test Case: 195 | Input/Output: [[-83.16472400606425 34] -49.16472400606425]
Test Case: 196 | Input/Output: [[12.757855932953973 32] 44.75785593295397]
Test Case: 197 | Input/Output: [[-85.15158883836507 70] -15.151588838365072]
Test Case: 198 | Input/Output: [[88.24862580839013 88] 176.24862580839013]
Test Case: 199 | Input/Output: [[-32.284111410845014 71] 38.715888589154986]
Test Case: 200 | Input/Output: [[47.573761941020024 -27] 20.573761941020024]
Test Case: 201 | Input/Output: [[-70.21703106769152 84] 13.782968932308478]
Test Case: 202 | Input/Output: [[37.98049519672841 39] 76.98049519672841]
Test Case: 203 | Input/Output: [[59.339217146727265 86] 145.33921714672726]
Test Case: 204 | Input/Output: [[-67.3911167788513 59] -8.391116778851298]
Test Case: 205 | Input/Output: [[-75.85200739393358 -70] -145.85200739393358]
Test Case: 206 | Input/Output: [[-27.452925077275793 -7] -34.45292507727579]
Test Case: 207 | Input/Output: [[-17.93940789550861 81] 63.06059210449139]
Test Case: 208 | Input/Output: [[-33.17822982711216 -87] -120.17822982711216]
Test Case: 209 | Input/Output: [[-36.14232485344153 -40] -76.14232485344152]
Test Case: 210 | Input/Output: [[-57.62268722732187 26] -31.62268722732187]
Test Case: 211 | Input/Output: [[-2.0579603107948117 93] 90.94203968920519]
Test Case: 212 | Input/Output: [[-5.738233118588369 -21] -26.73823311858837]
Test Case: 213 | Input/Output: [[57.706591260159655 -25] 32.706591260159655]
Test Case: 214 | Input/Output: [[-70.51854540224724 -78] -148.51854540224724]
Test Case: 215 | Input/Output: [[-43.70244298205152 81] 37.29755701794848]
Test Case: 216 | Input/Output: [[-75.2342191471014 -73] -148.23421914710138]
Test Case: 217 | Input/Output: [[88.73657854827673 -32] 56.736578548276725]
Test Case: 218 | Input/Output: [[-53.17166617105089 -88] -141.1716661710509]
Test Case: 219 | Input/Output: [[12.465071464587837 -65] -52.53492853541216]
Test Case: 220 | Input/Output: [[18.349423722698404 69] 87.3494237226984]
Test Case: 221 | Input/Output: [[-6.981020477593475 82] 75.01897952240653]
Test Case: 222 | Input/Output: [[-55.75984367841882 -32] -87.75984367841882]
Test Case: 223 | Input/Output: [[26.643899024457426 23] 49.643899024457426]
Test Case: 224 | Input/Output: [[-27.69269416719129 18] -9.692694167191291]
Test Case: 225 | Input/Output: [[8.316435117513748 -38] -29.68356488248625]
Test Case: 226 | Input/Output: [[45.04680119462478 -53] -7.953198805375223]
Test Case: 227 | Input/Output: [[34.36176429222385 38] 72.36176429222385]
Test Case: 228 | Input/Output: [[46.00439883436806 -19] 27.00439883436806]
Test Case: 229 | Input/Output: [[97.94411608593722 56] 153.94411608593722]
Test Case: 230 | Input/Output: [[65.45143560611308 -97] -31.54856439388692]
Test Case: 231 | Input/Output: [[-97.16314956330739 -33] -130.1631495633074]
Test Case: 232 | Input/Output: [[-78.26876159854487 -15] -93.26876159854487]
Test Case: 233 | Input/Output: [[-65.61424022007066 -5] -70.61424022007066]
Test Case: 234 | Input/Output: [[55.8614558373622 -16] 39.8614558373622]
Test Case: 235 | Input/Output: [[-53.442797107218155 95] 41.557202892781845]
Test Case: 236 | Input/Output: [[85.45736914621804 -64] 21.457369146218042]
Test Case: 237 | Input/Output: [[18.53646232139816 84] 102.53646232139816]
Test Case: 238 | Input/Output: [[56.91523961618233 -85] -28.084760383817667]
Test Case: 239 | Input/Output: [[78.44942970461406 97] 175.44942970461406]
Test Case: 240 | Input/Output: [[-75.13184885046853 100] 24.86815114953147]
Test Case: 241 | Input/Output: [[25.379603963637493 34] 59.37960396363749]
Test Case: 242 | Input/Output: [[-18.319097054565447 5] -13.319097054565447]
Test Case: 243 | Input/Output: [[-99.65593962747168 74] -25.65593962747168]
Test Case: 244 | Input/Output: [[-90.92182415999255 -45] -135.92182415999255]
Test Case: 245 | Input/Output: [[-3.0056933048303875 -65] -68.00569330483039]
Test Case: 246 | Input/Output: [[17.85933550517072 -65] -47.14066449482928]
Test Case: 247 | Input/Output: [[50.80456968796935 -71] -20.195430312030652]
Test Case: 248 | Input/Output: [[66.82402238416424 -92] -25.175977615835762]
Test Case: 249 | Input/Output: [[52.75426755523898 77] 129.75426755523898]
Test Case: 250 | Input/Output: [[56.96753567317376 -34] 22.967535673173757]
Test Case: 251 | Input/Output: [[4.529842254979826 -27] -22.470157745020174]
Test Case: 252 | Input/Output: [[-26.75244297623776 88] 61.24755702376224]
Test Case: 253 | Input/Output: [[31.98348502613385 -14] 17.98348502613385]
Test Case: 254 | Input/Output: [[-55.02666325215104 33] -22.02666325215104]
Test Case: 255 | Input/Output: [[85.69014511584788 -92] -6.3098548841521165]
Test Case: 256 | Input/Output: [[9.67429079793689 13] 22.67429079793689]
Test Case: 257 | Input/Output: [[-85.83669112238917 -54] -139.83669112238917]
Test Case: 258 | Input/Output: [[71.74312994805825 92] 163.74312994805825]
Test Case: 259 | Input/Output: [[55.72359520497966 -30] 25.72359520497966]
Test Case: 260 | Input/Output: [[-63.38317607100412 -46] -109.38317607100413]
Test Case: 261 | Input/Output: [[-81.53014386469536 47] -34.53014386469536]
Test Case: 262 | Input/Output: [[-31.882248343932133 -92] -123.88224834393213]
Test Case: 263 | Input/Output: [[-11.443029004192852 -57] -68.44302900419285]
Test Case: 264 | Input/Output: [[47.94097653080456 49] 96.94097653080456]
Test Case: 265 | Input/Output: [[96.63228625096986 68] 164.63228625096986]
Test Case: 266 | Input/Output: [[14.07298003484803 -22] -7.92701996515197]
Test Case: 267 | Input/Output: [[96.70495427461077 -8] 88.70495427461077]
Test Case: 268 | Input/Output: [[-97.41377703097473 25] -72.41377703097473]
Test Case: 269 | Input/Output: [[81.96818131504168 18] 99.96818131504168]
Test Case: 270 | Input/Output: [[-43.14443714529139 -55] -98.14443714529139]
Test Case: 271 | Input/Output: [[77.80597018503542 -53] 24.80597018503542]
Test Case: 272 | Input/Output: [[-94.21264641126153 -62] -156.21264641126152]
Test Case: 273 | Input/Output: [[-69.62539595253594 -68] -137.62539595253594]
Test Case: 274 | Input/Output: [[-68.03914878405253 31] -37.03914878405253]
Test Case: 275 | Input/Output: [[-50.493238893657136 -52] -102.49323889365714]
Test Case: 276 | Input/Output: [[29.520703321903227 -56] -26.479296678096773]
Test Case: 277 | Input/Output: [[-70.32479187049432 91] 20.675208129505677]
Test Case: 278 | Input/Output: [[-98.27997482235446 98] -0.27997482235446114]
Test Case: 279 | Input/Output: [[10.477530967413088 44] 54.47753096741309]
Test Case: 280 | Input/Output: [[-23.403910879857065 75] 51.596089120142935]
Test Case: 281 | Input/Output: [[72.47381476378297 -96] -23.52618523621703]
Test Case: 282 | Input/Output: [[75.20220894955335 -39] 36.20220894955335]
Test Case: 283 | Input/Output: [[-33.72194858908699 -75] -108.72194858908699]
Test Case: 284 | Input/Output: [[-43.16911822030267 66] 22.83088177969733]
Test Case: 285 | Input/Output: [[17.40181521524582 89] 106.40181521524582]
Test Case: 286 | Input/Output: [[19.967484180774704 -8] 11.967484180774704]
Test Case: 287 | Input/Output: [[67.02793970919129 42] 109.02793970919129]
Test Case: 288 | Input/Output: [[4.437161285298231 -34] -29.56283871470177]
Test Case: 289 | Input/Output: [[12.655444062465747 35] 47.65544406246575]
Test Case: 290 | Input/Output: [[-69.37970237096403 -68] -137.37970237096403]
Test Case: 291 | Input/Output: [[20.261446062668938 11] 31.261446062668938]
Test Case: 292 | Input/Output: [[37.64586008001004 -10] 27.64586008001004]
Test Case: 293 | Input/Output: [[-92.44021699737274 -96] -188.44021699737274]
Test Case: 294 | Input/Output: [[55.270999502419784 -77] -21.729000497580216]
Test Case: 295 | Input/Output: [[72.04700434953847 -2] 70.04700434953847]
Test Case: 296 | Input/Output: [[73.06938074100518 68] 141.06938074100518]
Test Case: 297 | Input/Output: [[14.659085564835664 97] 111.65908556483566]
Test Case: 298 | Input/Output: [[-88.68838316981156 11] -77.68838316981156]
Test Case: 299 | Input/Output: [[-19.696258394810798 33] 13.303741605189202]
Test Case: 300 | Input/Output: [[27.20285809489043 87] 114.20285809489043]
Test Case: 301 | Input/Output: [[-84.82596178049945 -3] -87.82596178049945]
Test Case: 302 | Input/Output: [[72.89865887800903 -12] 60.89865887800903]
Test Case: 303 | Input/Output: [[-59.687022311707636 -43] -102.68702231170764]
Test Case: 304 | Input/Output: [[38.91442517056015 -43] -4.0855748294398495]
Test Case: 305 | Input/Output: [[-17.013137464483805 -52] -69.0131374644838]
Test Case: 306 | Input/Output: [[-50.61794371066568 74] 23.382056289334322]
Test Case: 307 | Input/Output: [[-48.09124922452397 -26] -74.09124922452398]
Test Case: 308 | Input/Output: [[-94.21887576893423 12] -82.21887576893423]
Test Case: 309 | Input/Output: [[89.28257307205257 -10] 79.28257307205257]
Test Case: 310 | Input/Output: [[-98.44042550294762 -24] -122.44042550294762]
Test Case: 311 | Input/Output: [[82.66517233895308 -37] 45.665172338953084]
Test Case: 312 | Input/Output: [[74.66599166104359 79] 153.6659916610436]
Test Case: 313 | Input/Output: [[-18.73516839546052 -86] -104.73516839546052]
Test Case: 314 | Input/Output: [[-84.4310791853206 -25] -109.4310791853206]
Test Case: 315 | Input/Output: [[13.339352665360465 -75] -61.660647334639535]
Test Case: 316 | Input/Output: [[23.298781354328213 49] 72.29878135432821]
Test Case: 317 | Input/Output: [[-53.374750477502 84] 30.625249522498002]
Test Case: 318 | Input/Output: [[-25.99107774792293 -27] -52.99107774792293]
Test Case: 319 | Input/Output: [[11.360014064929985 100] 111.36001406492998]
Test Case: 320 | Input/Output: [[4.020058180051251 63] 67.02005818005125]
Test Case: 321 | Input/Output: [[96.36177579126652 75] 171.36177579126652]
Test Case: 322 | Input/Output: [[-85.5653162468195 -10] -95.5653162468195]
Test Case: 323 | Input/Output: [[-12.761702160173627 57] 44.23829783982637]
Test Case: 324 | Input/Output: [[-31.33219876093935 44] 12.667801239060651]
Test Case: 325 | Input/Output: [[-72.98807500394119 -28] -100.98807500394119]
Test Case: 326 | Input/Output: [[45.79253073981181 -68] -22.20746926018819]
Test Case: 327 | Input/Output: [[-54.98541468462959 -93] -147.98541468462957]
Test Case: 328 | Input/Output: [[57.056258775989534 6] 63.056258775989534]
Test Case: 329 | Input/Output: [[-99.61412072796001 85] -14.614120727960014]
Test Case: 330 | Input/Output: [[76.57565117358936 -60] 16.575651173589364]
Test Case: 331 | Input/Output: [[96.51606670042477 16] 112.51606670042477]
Test Case: 332 | Input/Output: [[46.139196050601186 -71] -24.860803949398814]
Test Case: 333 | Input/Output: [[42.46475994407507 16] 58.46475994407507]
Test Case: 334 | Input/Output: [[-78.83325738874443 16] -62.83325738874443]
Test Case: 335 | Input/Output: [[-18.325549633261673 -17] -35.32554963326167]
Test Case: 336 | Input/Output: [[62.4405091631196 -38] 24.4405091631196]
Test Case: 337 | Input/Output: [[-20.523364921379212 -97] -117.52336492137921]
Test Case: 338 | Input/Output: [[67.85573766626024 -49] 18.85573766626024]
Test Case: 339 | Input/Output: [[81.10620082239421 85] 166.10620082239421]
Test Case: 340 | Input/Output: [[-47.001633905822196 18] -29.001633905822196]
Test Case: 341 | Input/Output: [[88.06020256536178 -78] 10.060202565361777]
Test Case: 342 | Input/Output: [[63.24931695897658 42] 105.24931695897658]
Test Case: 343 | Input/Output: [[-81.62438326698411 -16] -97.62438326698411]
Test Case: 344 | Input/Output: [[-78.78398618342477 -80] -158.78398618342476]
Test Case: 345 | Input/Output: [[-52.38946977669825 -72] -124.38946977669825]
Test Case: 346 | Input/Output: [[-36.77610176346413 -19] -55.77610176346413]
Test Case: 347 | Input/Output: [[-88.78029473783897 -29] -117.78029473783897]
Test Case: 348 | Input/Output: [[92.6401956004594 99] 191.6401956004594]
Test Case: 349 | Input/Output: [[-74.24958877871262 94] 19.75041122128738]
Test Case: 350 | Input/Output: [[-32.56978122289145 -82] -114.56978122289145]
Test Case: 351 | Input/Output: [[-12.89818045136299 15] 2.1018195486370104]
Test Case: 352 | Input/Output: [[-93.61001315803195 -46] -139.61001315803196]
Test Case: 353 | Input/Output: [[-70.21122962737864 29] -41.21122962737864]
Test Case: 354 | Input/Output: [[-86.39227974489063 95] 8.60772025510937]
Test Case: 355 | Input/Output: [[48.12707695238919 5] 53.12707695238919]
Test Case: 356 | Input/Output: [[-35.99573568495677 22] -13.99573568495677]
Test Case: 357 | Input/Output: [[-0.88680747503183 40] 39.11319252496817]
Test Case: 358 | Input/Output: [[-4.502997475013387 65] 60.49700252498661]
Test Case: 359 | Input/Output: [[67.37968338062745 -25] 42.379683380627455]
Test Case: 360 | Input/Output: [[-74.7567467564995 53] -21.756746756499496]
Test Case: 361 | Input/Output: [[-58.60403903668243 80] 21.39596096331757]
Test Case: 362 | Input/Output: [[55.653856152424396 73] 128.6538561524244]
Test Case: 363 | Input/Output: [[28.342705229185384 -60] -31.657294770814616]
Test Case: 364 | Input/Output: [[-93.30413650658504 94] 0.6958634934149615]
Test Case: 365 | Input/Output: [[-49.208171390727415 -48] -97.20817139072741]
Test Case: 366 | Input/Output: [[22.345010449331525 99] 121.34501044933153]
Test Case: 367 | Input/Output: [[-97.3978229521865 85] -12.397822952186502]
Test Case: 368 | Input/Output: [[-70.29820672614093 52] -18.298206726140933]
Test Case: 369 | Input/Output: [[-4.698042185735531 -35] -39.69804218573553]
Test Case: 370 | Input/Output: [[-7.441969601892723 -32] -39.44196960189272]
Test Case: 371 | Input/Output: [[34.51284964126552 -56] -21.487150358734482]
Test Case: 372 | Input/Output: [[-75.31900225259626 -88] -163.31900225259625]
Test Case: 373 | Input/Output: [[17.643471910596716 -46] -28.356528089403284]
Test Case: 374 | Input/Output: [[11.845266398275768 14] 25.84526639827577]
Test Case: 375 | Input/Output: [[79.80905289933173 -63] 16.809052899331732]
Test Case: 376 | Input/Output: [[-84.44441612498339 91] 6.555583875016609]
Test Case: 377 | Input/Output: [[65.54204416374154 13] 78.54204416374154]
Test Case: 378 | Input/Output: [[53.841711780907275 -8] 45.841711780907275]
Test Case: 379 | Input/Output: [[-66.0863871919427 -67] -133.08638719194272]
Test Case: 380 | Input/Output: [[-47.628223660840476 32] -15.628223660840476]
Test Case: 381 | Input/Output: [[63.31579659950273 -60] 3.3157965995027325]
Test Case: 382 | Input/Output: [[-21.014773513386473 -6] -27.014773513386473]
Test Case: 383 | Input/Output: [[22.679080044077722 -28] -5.320919955922278]
Test Case: 384 | Input/Output: [[7.417526499293174 -44] -36.582473500706826]
Test Case: 385 | Input/Output: [[-75.12345038677904 78] 2.876549613220959]
Test Case: 386 | Input/Output: [[12.585930798680153 -6] 6.5859307986801525]
Test Case: 387 | Input/Output: [[2.389100889221993 -77] -74.610899110778]
Test Case: 388 | Input/Output: [[-73.85578578621184 -94] -167.85578578621184]
Test Case: 389 | Input/Output: [[87.47997161874957 -87] 0.4799716187495733]
Test Case: 390 | Input/Output: [[-44.58133200478996 86] 41.41866799521004]
Test Case: 391 | Input/Output: [[8.37930102735831 -62] -53.62069897264169]
Test Case: 392 | Input/Output: [[-23.208610081356042 3] -20.208610081356042]
Test Case: 393 | Input/Output: [[97.6342509708839 -30] 67.6342509708839]
Test Case: 394 | Input/Output: [[-72.39680442218926 37] -35.39680442218926]
Test Case: 395 | Input/Output: [[-41.14430840799685 -32] -73.14430840799685]
Test Case: 396 | Input/Output: [[-98.61624567010247 -97] -195.61624567010247]
Test Case: 397 | Input/Output: [[-7.696780783211167 -49] -56.69678078321117]
Test Case: 398 | Input/Output: [[79.72013577915763 53] 132.72013577915763]
Test Case: 399 | Input/Output: [[5.723956921346527 89] 94.72395692134653]
Test Case: 400 | Input/Output: [[-28.103063847423115 13] -15.103063847423115]
Test Case: 401 | Input/Output: [[-97.55871976480297 -49] -146.55871976480296]
Test Case: 402 | Input/Output: [[-38.53305499294375 68] 29.466945007056253]
Test Case: 403 | Input/Output: [[-65.26372617303109 62] -3.2637261730310883]
Test Case: 404 | Input/Output: [[-27.457200570190764 38] 10.542799429809236]
Test Case: 405 | Input/Output: [[-20.233780987306744 -89] -109.23378098730674]
Test Case: 406 | Input/Output: [[-86.45790573936027 -17] -103.45790573936027]
Test Case: 407 | Input/Output: [[-97.43536862791696 -97] -194.43536862791694]
Test Case: 408 | Input/Output: [[47.81967456456755 -66] -18.18032543543245]
Test Case: 409 | Input/Output: [[53.34911887212837 0] 53.34911887212837]
Test Case: 410 | Input/Output: [[-67.54130396671607 -82] -149.54130396671607]
Test Case: 411 | Input/Output: [[-92.55439682049145 2] -90.55439682049145]
Test Case: 412 | Input/Output: [[88.86808930098843 -67] 21.86808930098843]
Test Case: 413 | Input/Output: [[49.16354005524374 22] 71.16354005524374]
Test Case: 414 | Input/Output: [[4.109679637204408 -12] -7.890320362795592]
Test Case: 415 | Input/Output: [[-20.242667634786102 16] -4.242667634786102]
Test Case: 416 | Input/Output: [[30.439122242380137 32] 62.43912224238014]
Test Case: 417 | Input/Output: [[-24.162024256765193 -4] -28.162024256765193]
Test Case: 418 | Input/Output: [[-25.852595412155438 -47] -72.85259541215544]
Test Case: 419 | Input/Output: [[-23.11846578742059 32] 8.88153421257941]
Test Case: 420 | Input/Output: [[61.60169435239129 6] 67.60169435239129]
Test Case: 421 | Input/Output: [[-35.569177844477736 3] -32.569177844477736]
Test Case: 422 | Input/Output: [[-7.378454825721505 -4] -11.378454825721505]
Test Case: 423 | Input/Output: [[-24.135365558171287 -8] -32.13536555817129]
Test Case: 424 | Input/Output: [[94.9063920793161 2] 96.9063920793161]
Test Case: 425 | Input/Output: [[-48.482875984903885 -92] -140.4828759849039]
Test Case: 426 | Input/Output: [[91.69579453875295 75] 166.69579453875295]
Test Case: 427 | Input/Output: [[31.53157639066876 51] 82.53157639066876]
Test Case: 428 | Input/Output: [[-51.83904117308798 -5] -56.83904117308798]
Test Case: 429 | Input/Output: [[-37.80827800458888 -98] -135.80827800458889]
Test Case: 430 | Input/Output: [[42.652652555998515 -18] 24.652652555998515]
Test Case: 431 | Input/Output: [[-86.90970851257009 49] -37.90970851257009]
Test Case: 432 | Input/Output: [[-60.497862028192515 -11] -71.49786202819251]
Test Case: 433 | Input/Output: [[90.11516957706266 -53] 37.11516957706266]
Test Case: 434 | Input/Output: [[19.312366146526642 -20] -0.6876338534733577]
Test Case: 435 | Input/Output: [[-70.55203373271146 -26] -96.55203373271146]
Test Case: 436 | Input/Output: [[-58.68346321817077 -27] -85.68346321817077]
Test Case: 437 | Input/Output: [[-63.34550417496274 -100] -163.34550417496274]
Test Case: 438 | Input/Output: [[-3.2260197562526542 -94] -97.22601975625265]
Test Case: 439 | Input/Output: [[69.513813694453 91] 160.513813694453]
Test Case: 440 | Input/Output: [[11.808435335950122 10] 21.808435335950122]
Test Case: 441 | Input/Output: [[-55.27509093684364 -48] -103.27509093684364]
Test Case: 442 | Input/Output: [[13.634034496134646 98] 111.63403449613465]
Test Case: 443 | Input/Output: [[-61.58588849064779 22] -39.58588849064779]
Test Case: 444 | Input/Output: [[70.45437735702305 100] 170.45437735702305]
Test Case: 445 | Input/Output: [[75.29828807000371 40] 115.29828807000371]
Test Case: 446 | Input/Output: [[-34.88651865177799 50] 15.11348134822201]
Test Case: 447 | Input/Output: [[-40.077500328839854 48] 7.922499671160146]
Test Case: 448 | Input/Output: [[75.88877257787445 -33] 42.88877257787445]
Test Case: 449 | Input/Output: [[-21.426965542590537 28] 6.573034457409463]
Test Case: 450 | Input/Output: [[-63.01705993681486 74] 10.98294006318514]
Test Case: 451 | Input/Output: [[-31.4794177972191 -83] -114.4794177972191]
Test Case: 452 | Input/Output: [[-11.291911633433457 19] 7.7080883665665425]
Test Case: 453 | Input/Output: [[8.380309132140454 -7] 1.3803091321404537]
Test Case: 454 | Input/Output: [[-68.71707271999598 -75] -143.717072719996]
Test Case: 455 | Input/Output: [[3.895217771420505 -32] -28.104782228579495]
Test Case: 456 | Input/Output: [[10.142401398889405 -39] -28.857598601110595]
Test Case: 457 | Input/Output: [[26.030093394612933 20] 46.03009339461293]
Test Case: 458 | Input/Output: [[16.62248080383948 22] 38.62248080383948]
Test Case: 459 | Input/Output: [[62.76828108454416 -27] 35.76828108454416]
Test Case: 460 | Input/Output: [[-25.059955563965147 52] 26.940044436034853]
Test Case: 461 | Input/Output: [[-75.1677929715033 61] -14.167792971503303]
Test Case: 462 | Input/Output: [[85.14010403133969 -44] 41.14010403133969]
Test Case: 463 | Input/Output: [[-32.79645023246802 44] 11.203549767531982]
Test Case: 464 | Input/Output: [[-26.87236911339683 99] 72.12763088660317]
Test Case: 465 | Input/Output: [[49.83429717265716 4] 53.83429717265716]
Test Case: 466 | Input/Output: [[-69.65017428224296 33] -36.65017428224296]
Test Case: 467 | Input/Output: [[35.314488518787556 -74] -38.685511481212444]
Test Case: 468 | Input/Output: [[64.93234152825565 -60] 4.932341528255648]
Test Case: 469 | Input/Output: [[78.77108679938544 -17] 61.771086799385444]
Test Case: 470 | Input/Output: [[15.649124666136728 -89] -73.35087533386327]
Test Case: 471 | Input/Output: [[-49.8833542205368 -81] -130.8833542205368]
Test Case: 472 | Input/Output: [[-70.24909954288901 38] -32.24909954288901]
Test Case: 473 | Input/Output: [[-20.685935939434643 12] -8.685935939434643]
Test Case: 474 | Input/Output: [[2.059429851937338 95] 97.05942985193734]
Test Case: 475 | Input/Output: [[-17.458088844402425 -1] -18.458088844402425]
Test Case: 476 | Input/Output: [[43.64042693341764 -96] -52.35957306658236]
Test Case: 477 | Input/Output: [[8.725207349624654 -35] -26.274792650375346]
Test Case: 478 | Input/Output: [[25.51523710198333 -75] -49.48476289801667]
Test Case: 479 | Input/Output: [[75.82648601391685 72] 147.82648601391685]
Test Case: 480 | Input/Output: [[-97.81066641973575 -80] -177.81066641973575]
Test Case: 481 | Input/Output: [[-94.52556918096235 80] -14.52556918096235]
Test Case: 482 | Input/Output: [[97.2634828498245 39] 136.2634828498245]
Test Case: 483 | Input/Output: [[-95.91713022689099 60] -35.91713022689099]
Test Case: 484 | Input/Output: [[-37.78493305655579 24] -13.784933056555793]
Test Case: 485 | Input/Output: [[-67.3220005491645 41] -26.3220005491645]
Test Case: 486 | Input/Output: [[-45.417235895055505 -51] -96.41723589505551]
Test Case: 487 | Input/Output: [[-93.87010580771698 -76] -169.87010580771698]
Test Case: 488 | Input/Output: [[6.706129756717871 -89] -82.29387024328213]
Test Case: 489 | Input/Output: [[-17.11580971047708 -80] -97.11580971047708]
Test Case: 490 | Input/Output: [[-39.613151796434096 50] 10.386848203565904]
Test Case: 491 | Input/Output: [[88.49321746116527 -21] 67.49321746116527]
Test Case: 492 | Input/Output: [[18.13867280482448 78] 96.13867280482448]
Test Case: 493 | Input/Output: [[10.639683241795055 70] 80.63968324179505]
Test Case: 494 | Input/Output: [[-17.22723394117223 -89] -106.22723394117223]
Test Case: 495 | Input/Output: [[-49.13755862195251 15] -34.13755862195251]
Test Case: 496 | Input/Output: [[50.78353752086534 -39] 11.783537520865337]
Test Case: 497 | Input/Output: [[-66.56869540831815 76] 9.431304591681851]
Test Case: 498 | Input/Output: [[32.663763306978524 -23] 9.663763306978524]
Test Case: 499 | Input/Output: [[59.02449662178162 -44] 15.024496621781623]
Test Case: 500 | Input/Output: [[-0.7292345032292076 -70] -70.72923450322921]
Test Case: 501 | Input/Output: [[-41.4864343724872 -77] -118.4864343724872]
Test Case: 502 | Input/Output: [[-38.00658538364783 12] -26.00658538364783]
Test Case: 503 | Input/Output: [[66.01737979034442 -3] 63.01737979034442]
Test Case: 504 | Input/Output: [[-53.360037998961076 10] -43.360037998961076]
Test Case: 505 | Input/Output: [[-5.633675905044981 70] 64.36632409495502]
Test Case: 506 | Input/Output: [[-68.51715037769932 -27] -95.51715037769932]
Test Case: 507 | Input/Output: [[-9.006302865972842 29] 19.99369713402716]
Test Case: 508 | Input/Output: [[15.374103619549956 18] 33.374103619549956]
Test Case: 509 | Input/Output: [[-16.547722150471685 -18] -34.547722150471685]
Test Case: 510 | Input/Output: [[20.72710833597617 90] 110.72710833597617]
Test Case: 511 | Input/Output: [[-40.40384513923072 -6] -46.40384513923072]
Test Case: 512 | Input/Output: [[75.14812840742181 -5] 70.14812840742181]
Test Case: 513 | Input/Output: [[-41.64237367393386 78] 36.35762632606614]
Test Case: 514 | Input/Output: [[6.772988187575706 61] 67.7729881875757]
Test Case: 515 | Input/Output: [[-22.469448067757043 -50] -72.46944806775704]
Test Case: 516 | Input/Output: [[80.7288468514077 -41] 39.728846851407695]
Test Case: 517 | Input/Output: [[-56.485363166039605 -82] -138.4853631660396]
Test Case: 518 | Input/Output: [[80.33761324689144 65] 145.33761324689144]
Test Case: 519 | Input/Output: [[68.0631246196333 -43] 25.0631246196333]
Test Case: 520 | Input/Output: [[52.185387475785774 90] 142.18538747578577]
Test Case: 521 | Input/Output: [[5.94041690017319 -49] -43.05958309982681]
Test Case: 522 | Input/Output: [[39.44528404836581 48] 87.4452840483658]
Test Case: 523 | Input/Output: [[-33.16141576145786 43] 9.83858423854214]
Test Case: 524 | Input/Output: [[23.489559483730687 12] 35.48955948373069]
Test Case: 525 | Input/Output: [[-9.536298778449947 -100] -109.53629877844995]
Test Case: 526 | Input/Output: [[-61.79356324128733 23] -38.79356324128733]
Test Case: 527 | Input/Output: [[45.41193054194886 -3] 42.41193054194886]
Test Case: 528 | Input/Output: [[72.36244254546747 5] 77.36244254546747]
Test Case: 529 | Input/Output: [[55.4088223399838 44] 99.4088223399838]
Test Case: 530 | Input/Output: [[33.07721009436176 -25] 8.07721009436176]
Test Case: 531 | Input/Output: [[-4.846595383351044 -51] -55.846595383351044]
Test Case: 532 | Input/Output: [[-98.89078021970951 19] -79.89078021970951]
Test Case: 533 | Input/Output: [[-65.75116872474298 -97] -162.75116872474297]
Test Case: 534 | Input/Output: [[-93.13777286403896 90] -3.137772864038965]
Test Case: 535 | Input/Output: [[42.27627809913247 75] 117.27627809913247]
Test Case: 536 | Input/Output: [[70.20324902522074 35] 105.20324902522074]
Test Case: 537 | Input/Output: [[-96.33622516376461 -31] -127.33622516376461]
Test Case: 538 | Input/Output: [[53.58095739550063 -76] -22.419042604499367]
Test Case: 539 | Input/Output: [[-26.947760108675794 -48] -74.9477601086758]
Test Case: 540 | Input/Output: [[64.60664455504968 64] 128.60664455504968]
Test Case: 541 | Input/Output: [[-33.326067861357274 64] 30.673932138642726]
Test Case: 542 | Input/Output: [[-83.39883147413462 97] 13.601168525865376]
Test Case: 543 | Input/Output: [[-58.52295863369059 95] 36.47704136630941]
Test Case: 544 | Input/Output: [[-52.797340355882106 44] -8.797340355882106]
Test Case: 545 | Input/Output: [[-89.19270811647313 98] 8.807291883526872]
Test Case: 546 | Input/Output: [[28.040425121439654 -41] -12.959574878560346]
Test Case: 547 | Input/Output: [[71.03189009943503 56] 127.03189009943503]
Test Case: 548 | Input/Output: [[36.09813411670629 23] 59.09813411670629]
Test Case: 549 | Input/Output: [[78.15865868392777 61] 139.15865868392777]
Test Case: 550 | Input/Output: [[-95.95256129888557 33] -62.95256129888557]
Test Case: 551 | Input/Output: [[54.88916549266082 -39] 15.889165492660823]
Test Case: 552 | Input/Output: [[9.444444213650456 -80] -70.55555578634954]
Test Case: 553 | Input/Output: [[-45.95887844616091 98] 52.04112155383909]
Test Case: 554 | Input/Output: [[-6.534508535819427 -50] -56.53450853581943]
Test Case: 555 | Input/Output: [[29.746173304236606 -61] -31.253826695763394]
Test Case: 556 | Input/Output: [[-29.48208735540983 64] 34.51791264459017]
Test Case: 557 | Input/Output: [[68.01694443290364 43] 111.01694443290364]
Test Case: 558 | Input/Output: [[-67.62694906995628 -22] -89.62694906995628]
Test Case: 559 | Input/Output: [[-21.23697810831402 -18] -39.23697810831402]
Test Case: 560 | Input/Output: [[-61.66412601482663 14] -47.66412601482663]
Test Case: 561 | Input/Output: [[22.088228863672256 -84] -61.911771136327744]
Test Case: 562 | Input/Output: [[-15.35852837384175 44] 28.64147162615825]
Test Case: 563 | Input/Output: [[94.04745183946449 -30] 64.04745183946449]
Test Case: 564 | Input/Output: [[-99.00374446022373 57] -42.00374446022373]
Test Case: 565 | Input/Output: [[1.9523639928447238 69] 70.95236399284472]
Test Case: 566 | Input/Output: [[21.9443552403025 -53] -31.0556447596975]
Test Case: 567 | Input/Output: [[45.94764815782668 -43] 2.947648157826677]
Test Case: 568 | Input/Output: [[81.47444743246123 87] 168.47444743246123]
Test Case: 569 | Input/Output: [[71.51006117994356 -59] 12.510061179943563]
Test Case: 570 | Input/Output: [[53.91086014662878 -17] 36.91086014662878]
Test Case: 571 | Input/Output: [[-46.86520988817608 -75] -121.86520988817608]
Test Case: 572 | Input/Output: [[-60.09105755378237 83] 22.90894244621763]
Test Case: 573 | Input/Output: [[93.70096732874777 74] 167.70096732874777]
Test Case: 574 | Input/Output: [[36.508390956055024 97] 133.50839095605502]
Test Case: 575 | Input/Output: [[99.08038060952487 76] 175.08038060952487]
Test Case: 576 | Input/Output: [[-82.31866795535774 32] -50.31866795535774]
Test Case: 577 | Input/Output: [[40.433804126983176 78] 118.43380412698318]
Test Case: 578 | Input/Output: [[-70.85100519319928 60] -10.851005193199285]
Test Case: 579 | Input/Output: [[-5.382870506632756 31] 25.617129493367244]
Test Case: 580 | Input/Output: [[57.48206388970135 15] 72.48206388970135]
Test Case: 581 | Input/Output: [[40.454059482131186 -11] 29.454059482131186]
Test Case: 582 | Input/Output: [[44.67569624637417 -10] 34.67569624637417]
Test Case: 583 | Input/Output: [[-13.836065840512262 -47] -60.83606584051226]
Test Case: 584 | Input/Output: [[-11.432748831925636 86] 74.56725116807436]
Test Case: 585 | Input/Output: [[-93.51883395030688 -82] -175.51883395030688]
Test Case: 586 | Input/Output: [[-98.52326203227182 79] -19.523262032271816]
Test Case: 587 | Input/Output: [[99.12341982818384 43] 142.12341982818384]
Test Case: 588 | Input/Output: [[-33.63985551561693 -9] -42.63985551561693]
Test Case: 589 | Input/Output: [[25.84318510580721 -65] -39.15681489419279]
Test Case: 590 | Input/Output: [[-37.68520775533757 -65] -102.68520775533757]
Test Case: 591 | Input/Output: [[-30.93421985697738 31] 0.06578014302262147]
Test Case: 592 | Input/Output: [[-16.777781291046523 83] 66.22221870895348]
Test Case: 593 | Input/Output: [[-59.08203390955873 -27] -86.08203390955873]
Test Case: 594 | Input/Output: [[5.030443324478796 -24] -18.969556675521204]
Test Case: 595 | Input/Output: [[-59.50006473008729 30] -29.50006473008729]
Test Case: 596 | Input/Output: [[36.20745246740594 11] 47.20745246740594]
Test Case: 597 | Input/Output: [[25.20124671614053 -42] -16.79875328385947]
Test Case: 598 | Input/Output: [[-5.308941171013345 -19] -24.308941171013345]
Test Case: 599 | Input/Output: [[-38.21235042305431 -15] -53.21235042305431]
Test Case: 600 | Input/Output: [[1.1112052735738445 -20] -18.888794726426156]
Test Case: 601 | Input/Output: [[-29.063433421012007 56] 26.936566578987993]
Test Case: 602 | Input/Output: [[97.50746691863691 -38] 59.50746691863691]
Test Case: 603 | Input/Output: [[-38.108530794376726 72] 33.891469205623274]
Test Case: 604 | Input/Output: [[-5.690369168315598 -10] -15.690369168315598]
Test Case: 605 | Input/Output: [[-12.90546027862149 -64] -76.90546027862149]
Test Case: 606 | Input/Output: [[26.811791515398227 76] 102.81179151539823]
Test Case: 607 | Input/Output: [[-91.90895864454411 -42] -133.9089586445441]
Test Case: 608 | Input/Output: [[96.8573043574992 24] 120.8573043574992]
Test Case: 609 | Input/Output: [[68.64018874166092 -56] 12.640188741660921]
Test Case: 610 | Input/Output: [[-68.10621483355578 65] -3.106214833555782]
Test Case: 611 | Input/Output: [[-79.9641493321503 22] -57.9641493321503]
Test Case: 612 | Input/Output: [[24.29139039155166 -40] -15.708609608448342]
Test Case: 613 | Input/Output: [[-55.40055931337673 26] -29.400559313376732]
Test Case: 614 | Input/Output: [[84.72463803325402 -49] 35.724638033254024]
Test Case: 615 | Input/Output: [[49.382178360980134 71] 120.38217836098013]
Test Case: 616 | Input/Output: [[-0.8147984552538787 -67] -67.81479845525388]
Test Case: 617 | Input/Output: [[58.4231746754223 -96] -37.5768253245777]
Test Case: 618 | Input/Output: [[-1.9691543302589025 -23] -24.969154330258903]
Test Case: 619 | Input/Output: [[-1.1058312466263374 -33] -34.10583124662634]
Test Case: 620 | Input/Output: [[-48.21912929840164 -9] -57.21912929840164]
Test Case: 621 | Input/Output: [[-23.89450905603256 -90] -113.89450905603256]
Test Case: 622 | Input/Output: [[84.57272430764769 -36] 48.57272430764769]
Test Case: 623 | Input/Output: [[-36.471386785077065 -95] -131.47138678507707]
Test Case: 624 | Input/Output: [[-24.816656967848274 -28] -52.816656967848274]
Test Case: 625 | Input/Output: [[-59.75389408543252 -16] -75.75389408543252]
Test Case: 626 | Input/Output: [[-30.004834008083378 -47] -77.00483400808338]
Test Case: 627 | Input/Output: [[-69.23843711264686 77] 7.761562887353136]
Test Case: 628 | Input/Output: [[51.05684990127506 51] 102.05684990127506]
Test Case: 629 | Input/Output: [[-25.56729152670181 74] 48.43270847329819]
Test Case: 630 | Input/Output: [[56.16731287413842 -20] 36.16731287413842]
Test Case: 631 | Input/Output: [[-5.27817250812484 87] 81.72182749187516]
Test Case: 632 | Input/Output: [[-46.76841480373739 -15] -61.76841480373739]
Test Case: 633 | Input/Output: [[-35.99886777704522 -2] -37.99886777704522]
Test Case: 634 | Input/Output: [[-31.254899276318568 10] -21.254899276318568]
Test Case: 635 | Input/Output: [[44.76103071245666 65] 109.76103071245666]
Test Case: 636 | Input/Output: [[-41.025415550630754 -6] -47.025415550630754]
Test Case: 637 | Input/Output: [[-12.029497372458906 18] 5.970502627541094]
Test Case: 638 | Input/Output: [[65.58620657086755 88] 153.58620657086755]
Test Case: 639 | Input/Output: [[-57.152137030040095 57] -0.1521370300400946]
Test Case: 640 | Input/Output: [[31.939032682975864 41] 72.93903268297586]
Test Case: 641 | Input/Output: [[-55.10189266775085 -91] -146.10189266775086]
Test Case: 642 | Input/Output: [[-57.523970288694514 98] 40.476029711305486]
Test Case: 643 | Input/Output: [[8.07299302117768 12] 20.07299302117768]
Test Case: 644 | Input/Output: [[74.0762059945761 8] 82.0762059945761]
Test Case: 645 | Input/Output: [[16.889280923143033 41] 57.88928092314303]
Test Case: 646 | Input/Output: [[-89.25507531561645 -64] -153.25507531561647]
Test Case: 647 | Input/Output: [[-29.335843086373686 -88] -117.33584308637369]
Test Case: 648 | Input/Output: [[43.420214064982616 -40] 3.4202140649826163]
Test Case: 649 | Input/Output: [[7.989482467774863 -73] -65.01051753222514]
Test Case: 650 | Input/Output: [[-5.41869511454847 -96] -101.41869511454847]
Test Case: 651 | Input/Output: [[35.269790688688744 2] 37.269790688688744]
Test Case: 652 | Input/Output: [[96.87803970097599 52] 148.878039700976]
Test Case: 653 | Input/Output: [[70.98893917295601 66] 136.988939172956]
Test Case: 654 | Input/Output: [[-57.493467305878966 20] -37.493467305878966]
Test Case: 655 | Input/Output: [[-87.5132641702134 100] 12.486735829786596]
Test Case: 656 | Input/Output: [[-71.8561546408224 -28] -99.8561546408224]
Test Case: 657 | Input/Output: [[-2.109981463278345 63] 60.890018536721655]
Test Case: 658 | Input/Output: [[-85.76878406596428 -98] -183.76878406596427]
Test Case: 659 | Input/Output: [[10.553644746879058 69] 79.55364474687906]
Test Case: 660 | Input/Output: [[-3.9465971882979005 19] 15.0534028117021]
Test Case: 661 | Input/Output: [[69.43973752046406 -14] 55.439737520464064]
Test Case: 662 | Input/Output: [[65.67584552722684 1] 66.67584552722684]
Test Case: 663 | Input/Output: [[6.408587290154728 -2] 4.408587290154728]
Test Case: 664 | Input/Output: [[-22.46171453970844 22] -0.46171453970843856]
Test Case: 665 | Input/Output: [[-14.408973835278701 96] 81.5910261647213]
Test Case: 666 | Input/Output: [[-14.81847009597162 65] 50.18152990402838]
Test Case: 667 | Input/Output: [[-90.15037626622929 -41] -131.15037626622927]
Test Case: 668 | Input/Output: [[47.096370798227696 20] 67.0963707982277]
Test Case: 669 | Input/Output: [[94.61651626733683 33] 127.61651626733683]
Test Case: 670 | Input/Output: [[-30.436347008556822 40] 9.563652991443178]
Test Case: 671 | Input/Output: [[22.492223143993954 13] 35.492223143993954]
Test Case: 672 | Input/Output: [[84.20014294028255 -18] 66.20014294028255]
Test Case: 673 | Input/Output: [[-39.10622267806574 -96] -135.10622267806573]
Test Case: 674 | Input/Output: [[-3.8309395523619116 -23] -26.83093955236191]
Test Case: 675 | Input/Output: [[98.20794903277067 -4] 94.20794903277067]
Test Case: 676 | Input/Output: [[12.327332716028394 -32] -19.672667283971606]
Test Case: 677 | Input/Output: [[0.6301142453873751 83] 83.63011424538738]
Test Case: 678 | Input/Output: [[-88.37554190808865 82] -6.37554190808865]
Test Case: 679 | Input/Output: [[-9.706012465260244 9] -0.706012465260244]
Test Case: 680 | Input/Output: [[-95.17440312138167 35] -60.17440312138167]
Test Case: 681 | Input/Output: [[-1.1673985795907242 6] 4.832601420409276]
Test Case: 682 | Input/Output: [[-24.20515734888143 53] 28.79484265111857]
Test Case: 683 | Input/Output: [[-18.34766906991409 3] -15.34766906991409]
Test Case: 684 | Input/Output: [[-90.18250699473684 -52] -142.18250699473685]
Test Case: 685 | Input/Output: [[-36.334968401688926 47] 10.665031598311074]
Test Case: 686 | Input/Output: [[-24.960623471531235 -56] -80.96062347153124]
Test Case: 687 | Input/Output: [[99.24404685498845 -62] 37.244046854988454]
Test Case: 688 | Input/Output: [[-80.87145402219258 8] -72.87145402219258]
Test Case: 689 | Input/Output: [[-54.11061998308906 -99] -153.11061998308907]
Test Case: 690 | Input/Output: [[-29.432667860800592 -63] -92.43266786080059]
Test Case: 691 | Input/Output: [[-27.931442331499895 -62] -89.9314423314999]
Test Case: 692 | Input/Output: [[-92.22686756619984 -43] -135.22686756619984]
Test Case: 693 | Input/Output: [[-5.733248786087785 7] 1.2667512139122152]
Test Case: 694 | Input/Output: [[81.97152426461994 74] 155.97152426461994]
Test Case: 695 | Input/Output: [[-96.36161676409583 -11] -107.36161676409583]
Test Case: 696 | Input/Output: [[0.8546872988211902 -84] -83.14531270117881]
Test Case: 697 | Input/Output: [[95.80642127322022 -85] 10.806421273220224]
Test Case: 698 | Input/Output: [[97.16406040323008 -63] 34.16406040323008]
Test Case: 699 | Input/Output: [[-82.9786102072495 -17] -99.9786102072495]
Test Case: 700 | Input/Output: [[48.579565639986555 -41] 7.579565639986555]
Test Case: 701 | Input/Output: [[40.21069927487625 51] 91.21069927487625]
Test Case: 702 | Input/Output: [[-94.08255076618815 17] -77.08255076618815]
Test Case: 703 | Input/Output: [[-92.18155525497961 51] -41.181555254979614]
Test Case: 704 | Input/Output: [[82.24221377088031 3] 85.24221377088031]
Test Case: 705 | Input/Output: [[8.55777515582865 50] 58.55777515582865]
Test Case: 706 | Input/Output: [[52.992964263899665 91] 143.99296426389967]
Test Case: 707 | Input/Output: [[-42.36032329343304 -83] -125.36032329343304]
Test Case: 708 | Input/Output: [[-61.92444552333678 -5] -66.92444552333677]
Test Case: 709 | Input/Output: [[-6.5398838648884805 70] 63.46011613511152]
Test Case: 710 | Input/Output: [[-78.6697815069383 5] -73.6697815069383]
Test Case: 711 | Input/Output: [[-29.952932846855703 42] 12.047067153144297]
Test Case: 712 | Input/Output: [[-3.3083147492088756 16] 12.691685250791124]
Test Case: 713 | Input/Output: [[23.738113452130037 -26] -2.2618865478699632]
Test Case: 714 | Input/Output: [[-26.97949099279103 15] -11.979490992791028]
Test Case: 715 | Input/Output: [[-19.080306166385114 82] 62.919693833614886]
Test Case: 716 | Input/Output: [[70.38288919417627 53] 123.38288919417627]
Test Case: 717 | Input/Output: [[32.39713987436926 -100] -67.60286012563074]
Test Case: 718 | Input/Output: [[-88.23013007059939 84] -4.230130070599387]
Test Case: 719 | Input/Output: [[95.6912471510804 -34] 61.691247151080404]
Test Case: 720 | Input/Output: [[2.467769716122902 -42] -39.5322302838771]
Test Case: 721 | Input/Output: [[-90.06510956340325 88] -2.0651095634032544]
Test Case: 722 | Input/Output: [[-66.11642930346231 -6] -72.11642930346231]
Test Case: 723 | Input/Output: [[-8.142421084089051 -81] -89.14242108408905]
Test Case: 724 | Input/Output: [[-86.49439104729942 31] -55.494391047299416]
Test Case: 725 | Input/Output: [[-52.41718469718846 79] 26.58281530281154]
Test Case: 726 | Input/Output: [[-75.62898282258263 49] -26.62898282258263]
Test Case: 727 | Input/Output: [[-82.39295209792735 1] -81.39295209792735]
Test Case: 728 | Input/Output: [[19.976485436292563 0] 19.976485436292563]
Test Case: 729 | Input/Output: [[-64.69579794250086 -27] -91.69579794250086]
Test Case: 730 | Input/Output: [[-30.297592596024515 80] 49.702407403975485]
Test Case: 731 | Input/Output: [[19.021756195671614 25] 44.021756195671614]
Test Case: 732 | Input/Output: [[1.8481543982227464 -21] -19.151845601777254]
Test Case: 733 | Input/Output: [[-93.30593274334207 -78] -171.30593274334205]
Test Case: 734 | Input/Output: [[28.62181083944114 -9] 19.62181083944114]
Test Case: 735 | Input/Output: [[9.918701391601118 -37] -27.081298608398882]
Test Case: 736 | Input/Output: [[48.72557752156487 46] 94.72557752156487]
Test Case: 737 | Input/Output: [[36.71849858723877 53] 89.71849858723877]
Test Case: 738 | Input/Output: [[-6.089187021573309 56] 49.91081297842669]
Test Case: 739 | Input/Output: [[46.48923193573333 28] 74.48923193573333]
Test Case: 740 | Input/Output: [[68.87220182306771 -81] -12.127798176932288]
Test Case: 741 | Input/Output: [[-53.03052933502161 -64] -117.03052933502161]
Test Case: 742 | Input/Output: [[-40.86285512576468 93] 52.13714487423532]
Test Case: 743 | Input/Output: [[20.377583821526727 -37] -16.622416178473273]
Test Case: 744 | Input/Output: [[-28.418155349643044 -45] -73.41815534964304]
Test Case: 745 | Input/Output: [[-39.72050998327905 16] -23.72050998327905]
Test Case: 746 | Input/Output: [[-66.39965830288565 14] -52.399658302885655]
Test Case: 747 | Input/Output: [[27.239616561588946 73] 100.23961656158895]
Test Case: 748 | Input/Output: [[-51.84330183079637 -79] -130.84330183079638]
Test Case: 749 | Input/Output: [[55.64186403726916 -34] 21.64186403726916]
Test Case: 750 | Input/Output: [[58.71978154928499 97] 155.719781549285]
Test Case: 751 | Input/Output: [[70.01540624368795 63] 133.01540624368795]
Test Case: 752 | Input/Output: [[-61.754186802871146 -9] -70.75418680287115]
Test Case: 753 | Input/Output: [[-87.11118440222461 -76] -163.1111844022246]
Test Case: 754 | Input/Output: [[53.287204977498504 38] 91.2872049774985]
Test Case: 755 | Input/Output: [[-8.425709224819755 -10] -18.425709224819755]
Test Case: 756 | Input/Output: [[-5.386662868447061 3] -2.386662868447061]
Test Case: 757 | Input/Output: [[-10.41590226332157 59] 48.58409773667843]
Test Case: 758 | Input/Output: [[-25.297237860948442 -59] -84.29723786094844]
Test Case: 759 | Input/Output: [[-18.499260568557133 5] -13.499260568557133]
Test Case: 760 | Input/Output: [[65.71045709869418 -41] 24.710457098694178]
Test Case: 761 | Input/Output: [[7.381861131813054 18] 25.381861131813054]
Test Case: 762 | Input/Output: [[-17.41523601030555 17] -0.4152360103055486]
Test Case: 763 | Input/Output: [[32.83722183334183 -78] -45.16277816665817]
Test Case: 764 | Input/Output: [[-79.45372896758349 86] 6.546271032416513]
Test Case: 765 | Input/Output: [[-24.92465363181482 57] 32.07534636818518]
Test Case: 766 | Input/Output: [[-64.23189271293822 -48] -112.23189271293822]
Test Case: 767 | Input/Output: [[21.51050312295297 -7] 14.510503122952969]
Test Case: 768 | Input/Output: [[-81.7437893275461 39] -42.7437893275461]
Test Case: 769 | Input/Output: [[2.434901845962429 -6] -3.565098154037571]
Test Case: 770 | Input/Output: [[-42.80936741651629 92] 49.19063258348371]
Test Case: 771 | Input/Output: [[90.71593964561066 -67] 23.71593964561066]
Test Case: 772 | Input/Output: [[-39.85015363282818 92] 52.14984636717182]
Test Case: 773 | Input/Output: [[-34.444761541484525 -88] -122.44476154148452]
Test Case: 774 | Input/Output: [[13.616511739391271 -76] -62.38348826060873]
Test Case: 775 | Input/Output: [[-33.71604206912218 -9] -42.71604206912218]
Test Case: 776 | Input/Output: [[47.32280496293683 -73] -25.67719503706317]
Test Case: 777 | Input/Output: [[-85.67280652917002 -77] -162.67280652917003]
Test Case: 778 | Input/Output: [[-39.527786379073234 -89] -128.52778637907323]
Test Case: 779 | Input/Output: [[-26.962539281718662 6] -20.962539281718662]
Test Case: 780 | Input/Output: [[-7.365066573531578 15] 7.634933426468422]
Test Case: 781 | Input/Output: [[-2.0505416184374354 16] 13.949458381562565]
Test Case: 782 | Input/Output: [[-70.86022588287098 1] -69.86022588287098]
Test Case: 783 | Input/Output: [[-7.2285028261428295 -10] -17.22850282614283]
Test Case: 784 | Input/Output: [[17.437814219016715 96] 113.43781421901672]
Test Case: 785 | Input/Output: [[-99.92348969858188 85] -14.923489698581875]
Test Case: 786 | Input/Output: [[88.18608189090077 -10] 78.18608189090077]
Test Case: 787 | Input/Output: [[63.8944897348363 -63] 0.8944897348362986]
Test Case: 788 | Input/Output: [[44.83347681269436 39] 83.83347681269436]
Test Case: 789 | Input/Output: [[40.41645789090228 56] 96.41645789090228]
Test Case: 790 | Input/Output: [[97.21524286137245 -70] 27.215242861372445]
Test Case: 791 | Input/Output: [[66.28321495414517 76] 142.28321495414517]
Test Case: 792 | Input/Output: [[-5.800474406798827 21] 15.199525593201173]
Test Case: 793 | Input/Output: [[-86.75479808047726 70] -16.754798080477258]
Test Case: 794 | Input/Output: [[2.3265553482178802 -98] -95.67344465178212]
Test Case: 795 | Input/Output: [[-22.73262451278464 -73] -95.73262451278464]
Test Case: 796 | Input/Output: [[35.57254973681802 -69] -33.42745026318198]
Test Case: 797 | Input/Output: [[85.9492279970288 40] 125.9492279970288]
Test Case: 798 | Input/Output: [[50.38003184501275 -48] 2.380031845012752]
Test Case: 799 | Input/Output: [[-8.471138084867363 -16] -24.471138084867363]
Test Case: 800 | Input/Output: [[39.507343298741915 11] 50.507343298741915]
Test Case: 801 | Input/Output: [[-81.37051691605039 -93] -174.3705169160504]
Test Case: 802 | Input/Output: [[-94.7389943487851 78] -16.7389943487851]
Test Case: 803 | Input/Output: [[-43.50446819754035 20] -23.504468197540348]
Test Case: 804 | Input/Output: [[61.955174411432154 88] 149.95517441143215]
Test Case: 805 | Input/Output: [[-0.8312061594900797 47] 46.16879384050992]
Test Case: 806 | Input/Output: [[32.53096471553812 -36] -3.4690352844618815]
Test Case: 807 | Input/Output: [[-37.31646443364176 -63] -100.31646443364176]
Test Case: 808 | Input/Output: [[88.39766064748136 23] 111.39766064748136]
Test Case: 809 | Input/Output: [[90.720451629103 -1] 89.720451629103]
Test Case: 810 | Input/Output: [[-87.94169728040065 -97] -184.94169728040066]
Test Case: 811 | Input/Output: [[-93.85167094664143 -66] -159.85167094664143]
Test Case: 812 | Input/Output: [[55.642769040177285 -27] 28.642769040177285]
Test Case: 813 | Input/Output: [[32.30378805428026 39] 71.30378805428026]
Test Case: 814 | Input/Output: [[23.71778736416219 -86] -62.28221263583781]
Test Case: 815 | Input/Output: [[-86.54445222350537 -92] -178.54445222350537]
Test Case: 816 | Input/Output: [[-8.492456295509015 -69] -77.49245629550902]
Test Case: 817 | Input/Output: [[-5.40840187832805 0] -5.40840187832805]
Test Case: 818 | Input/Output: [[41.55293213905745 -84] -42.44706786094255]
Test Case: 819 | Input/Output: [[38.97927931765224 81] 119.97927931765224]
Test Case: 820 | Input/Output: [[-13.197709186442054 84] 70.80229081355795]
Test Case: 821 | Input/Output: [[81.9928903436101 -99] -17.0071096563899]
Test Case: 822 | Input/Output: [[11.441560651021106 83] 94.4415606510211]
Test Case: 823 | Input/Output: [[-95.05077479315263 -19] -114.05077479315263]
Test Case: 824 | Input/Output: [[-29.399262425943277 96] 66.60073757405672]
Test Case: 825 | Input/Output: [[29.197411340150126 38] 67.19741134015013]
Test Case: 826 | Input/Output: [[81.67935615099523 14] 95.67935615099523]
Test Case: 827 | Input/Output: [[21.34663521935684 77] 98.34663521935684]
Test Case: 828 | Input/Output: [[-89.94537714379061 16] -73.94537714379061]
Test Case: 829 | Input/Output: [[-58.92495984256922 -47] -105.92495984256922]
Test Case: 830 | Input/Output: [[73.43561839249111 -70] 3.435618392491108]
Test Case: 831 | Input/Output: [[74.82896037256143 -88] -13.171039627438574]
Test Case: 832 | Input/Output: [[-43.53160402178455 -74] -117.53160402178455]
Test Case: 833 | Input/Output: [[-74.84903829566294 -48] -122.84903829566294]
Test Case: 834 | Input/Output: [[86.27765800967984 10] 96.27765800967984]
Test Case: 835 | Input/Output: [[88.94731960585787 -33] 55.94731960585787]
Test Case: 836 | Input/Output: [[31.613620415364352 -46] -14.386379584635648]
Test Case: 837 | Input/Output: [[-42.31039489264325 10] -32.31039489264325]
Test Case: 838 | Input/Output: [[-18.685635814329316 7] -11.685635814329316]
Test Case: 839 | Input/Output: [[65.69666852997548 99] 164.69666852997548]
Test Case: 840 | Input/Output: [[25.48382491238219 25] 50.48382491238219]
Test Case: 841 | Input/Output: [[-53.38266262307052 -22] -75.38266262307053]
Test Case: 842 | Input/Output: [[57.17013843168036 6] 63.17013843168036]
Test Case: 843 | Input/Output: [[-23.205287290890325 70] 46.794712709109675]
Test Case: 844 | Input/Output: [[-77.09054783868777 7] -70.09054783868777]
Test Case: 845 | Input/Output: [[72.05896999433182 65] 137.05896999433182]
Test Case: 846 | Input/Output: [[2.8550999507535693 8] 10.85509995075357]
Test Case: 847 | Input/Output: [[16.044194499019838 91] 107.04419449901984]
Test Case: 848 | Input/Output: [[-6.4531209622610675 88] 81.54687903773893]
Test Case: 849 | Input/Output: [[19.455039136364505 52] 71.4550391363645]
Test Case: 850 | Input/Output: [[89.07281248307282 87] 176.07281248307282]
Test Case: 851 | Input/Output: [[72.87543395931374 16] 88.87543395931374]
Test Case: 852 | Input/Output: [[-80.21033010288036 -18] -98.21033010288036]
Test Case: 853 | Input/Output: [[49.374657574053714 76] 125.37465757405371]
Test Case: 854 | Input/Output: [[-40.72539369144843 25] -15.725393691448431]
Test Case: 855 | Input/Output: [[-12.077234377762863 -38] -50.07723437776286]
Test Case: 856 | Input/Output: [[-5.410338052754 -71] -76.410338052754]
Test Case: 857 | Input/Output: [[-37.66417354427427 -83] -120.66417354427426]
Test Case: 858 | Input/Output: [[-21.477720904383716 -9] -30.477720904383716]
Test Case: 859 | Input/Output: [[-64.24763288124862 -49] -113.24763288124862]
Test Case: 860 | Input/Output: [[4.080032659799343 28] 32.08003265979934]
Test Case: 861 | Input/Output: [[-65.96704008155041 -19] -84.96704008155041]
Test Case: 862 | Input/Output: [[11.923435159799595 60] 71.9234351597996]
Test Case: 863 | Input/Output: [[-45.24766281602866 -10] -55.24766281602866]
Test Case: 864 | Input/Output: [[-90.05618979448073 -70] -160.05618979448073]
Test Case: 865 | Input/Output: [[55.42423958461856 92] 147.42423958461856]
Test Case: 866 | Input/Output: [[-53.075683399423745 -95] -148.07568339942375]
Test Case: 867 | Input/Output: [[87.88905215922117 25] 112.88905215922117]
Test Case: 868 | Input/Output: [[-1.1936180473930023 70] 68.806381952607]
Test Case: 869 | Input/Output: [[-54.733606221270904 2] -52.733606221270904]
Test Case: 870 | Input/Output: [[-0.6257459211038423 -86] -86.62574592110384]
Test Case: 871 | Input/Output: [[-0.9313886519309449 -39] -39.931388651930945]
Test Case: 872 | Input/Output: [[93.90960073991465 -87] 6.9096007399146515]
Test Case: 873 | Input/Output: [[78.37856175390303 13] 91.37856175390303]
Test Case: 874 | Input/Output: [[-85.47176624141053 -57] -142.47176624141053]
Test Case: 875 | Input/Output: [[-36.9394073861498 -46] -82.93940738614981]
Test Case: 876 | Input/Output: [[93.6984154275932 -76] 17.698415427593204]
Test Case: 877 | Input/Output: [[-69.60318917077275 -44] -113.60318917077275]
Test Case: 878 | Input/Output: [[50.691752440984146 92] 142.69175244098415]
Test Case: 879 | Input/Output: [[0.9487235054353107 91] 91.94872350543531]
Test Case: 880 | Input/Output: [[-7.708031516351738 33] 25.29196848364826]
Test Case: 881 | Input/Output: [[40.35853459270578 -1] 39.35853459270578]
Test Case: 882 | Input/Output: [[43.03826080825692 -63] -19.961739191743078]
Test Case: 883 | Input/Output: [[31.17031162052905 -23] 8.170311620529048]
Test Case: 884 | Input/Output: [[87.14210077111446 70] 157.14210077111446]
Test Case: 885 | Input/Output: [[99.97923829103675 55] 154.97923829103675]
Test Case: 886 | Input/Output: [[-74.86699919013964 -89] -163.86699919013964]
Test Case: 887 | Input/Output: [[-52.71726333736137 -61] -113.71726333736137]
Test Case: 888 | Input/Output: [[25.09149348931794 -29] -3.9085065106820593]
Test Case: 889 | Input/Output: [[-24.895237779625674 -14] -38.895237779625674]
Test Case: 890 | Input/Output: [[-64.91926194545744 -23] -87.91926194545744]
Test Case: 891 | Input/Output: [[-7.893330347514109 -51] -58.89333034751411]
Test Case: 892 | Input/Output: [[-60.93282517291443 -54] -114.93282517291442]
Test Case: 893 | Input/Output: [[56.22467557016333 93] 149.22467557016333]
Test Case: 894 | Input/Output: [[-22.381678172878082 46] 23.618321827121918]
Test Case: 895 | Input/Output: [[27.645338402995918 -25] 2.645338402995918]
Test Case: 896 | Input/Output: [[73.68421638386963 -89] -15.315783616130375]
Test Case: 897 | Input/Output: [[24.331239813506954 -44] -19.668760186493046]
Test Case: 898 | Input/Output: [[17.240842356228853 31] 48.24084235622885]
Test Case: 899 | Input/Output: [[-44.18061992854905 -85] -129.18061992854905]
Test Case: 900 | Input/Output: [[98.95621675533133 49] 147.95621675533133]
Test Case: 901 | Input/Output: [[-36.2768057227455 57] 20.7231942772545]
Test Case: 902 | Input/Output: [[25.55609124420704 -1] 24.55609124420704]
Test Case: 903 | Input/Output: [[-85.88150269957674 -72] -157.88150269957674]
Test Case: 904 | Input/Output: [[64.42981816688174 8] 72.42981816688174]
Test Case: 905 | Input/Output: [[-8.034161810143999 0] -8.034161810143999]
Test Case: 906 | Input/Output: [[29.260448908737118 -95] -65.73955109126288]
Test Case: 907 | Input/Output: [[42.8710250480616 85] 127.8710250480616]
Test Case: 908 | Input/Output: [[-2.1554116979875886 72] 69.84458830201241]
Test Case: 909 | Input/Output: [[88.94884620545511 8] 96.94884620545511]
Test Case: 910 | Input/Output: [[6.450509247483495 47] 53.450509247483495]
Test Case: 911 | Input/Output: [[-43.38748992459656 -94] -137.38748992459657]
Test Case: 912 | Input/Output: [[-6.161011479203353 -5] -11.161011479203353]
Test Case: 913 | Input/Output: [[23.710210830531125 -66] -42.289789169468875]
Test Case: 914 | Input/Output: [[-84.40108307769225 46] -38.40108307769225]
Test Case: 915 | Input/Output: [[-39.52808815131985 38] -1.5280881513198494]
Test Case: 916 | Input/Output: [[-60.0251933660014 -83] -143.02519336600142]
Test Case: 917 | Input/Output: [[35.69957390016776 -7] 28.699573900167763]
Test Case: 918 | Input/Output: [[7.202677303350427 48] 55.20267730335043]
Test Case: 919 | Input/Output: [[0.29489571651890856 61] 61.29489571651891]
Test Case: 920 | Input/Output: [[57.51191867030616 74] 131.51191867030616]
Test Case: 921 | Input/Output: [[-55.03675754863182 -31] -86.03675754863181]
Test Case: 922 | Input/Output: [[-56.379787055737964 12] -44.379787055737964]
Test Case: 923 | Input/Output: [[-26.077189463337874 0] -26.077189463337874]
Test Case: 924 | Input/Output: [[-1.4345391274042072 -16] -17.434539127404207]
Test Case: 925 | Input/Output: [[14.858497215873044 -91] -76.14150278412696]
Test Case: 926 | Input/Output: [[-36.15871474036929 -12] -48.15871474036929]
Test Case: 927 | Input/Output: [[-71.14706026415013 -19] -90.14706026415013]
Test Case: 928 | Input/Output: [[62.14656726777983 -73] -10.85343273222017]
Test Case: 929 | Input/Output: [[35.43918976483826 0] 35.43918976483826]
Test Case: 930 | Input/Output: [[65.1673989202591 -86] -20.832601079740897]
Test Case: 931 | Input/Output: [[-97.79415117863903 86] -11.794151178639027]
Test Case: 932 | Input/Output: [[-43.269569295041755 53] 9.730430704958245]
Test Case: 933 | Input/Output: [[-63.546285149905415 82] 18.453714850094585]
Test Case: 934 | Input/Output: [[-12.284393600177879 -28] -40.28439360017788]
Test Case: 935 | Input/Output: [[-70.57787528803865 -52] -122.57787528803865]
Test Case: 936 | Input/Output: [[-2.5698937417687944 8] 5.430106258231206]
Test Case: 937 | Input/Output: [[-49.60227316473706 -49] -98.60227316473706]
Test Case: 938 | Input/Output: [[-4.483501894958479 56] 51.51649810504152]
Test Case: 939 | Input/Output: [[-26.29994879884805 -66] -92.29994879884805]
Test Case: 940 | Input/Output: [[-29.652505243166033 53] 23.347494756833967]
Test Case: 941 | Input/Output: [[-75.62350753518254 -28] -103.62350753518254]
Test Case: 942 | Input/Output: [[12.4294622542604 75] 87.4294622542604]
Test Case: 943 | Input/Output: [[15.515409429339527 91] 106.51540942933953]
Test Case: 944 | Input/Output: [[11.479104407874146 -77] -65.52089559212585]
Test Case: 945 | Input/Output: [[22.031271665983738 -19] 3.0312716659837378]
Test Case: 946 | Input/Output: [[80.62625949680867 62] 142.62625949680867]
Test Case: 947 | Input/Output: [[0.6683084524205896 62] 62.66830845242059]
Test Case: 948 | Input/Output: [[-68.97791850546525 100] 31.022081494534746]
Test Case: 949 | Input/Output: [[-53.17442906313718 22] -31.174429063137183]
Test Case: 950 | Input/Output: [[-29.836799730359658 -11] -40.83679973035966]
Test Case: 951 | Input/Output: [[46.10472489951013 -20] 26.10472489951013]
Test Case: 952 | Input/Output: [[87.1257291044133 -98] -10.874270895586704]
Test Case: 953 | Input/Output: [[5.368377069131981 10] 15.36837706913198]
Test Case: 954 | Input/Output: [[66.50230009698132 -64] 2.5023000969813154]
Test Case: 955 | Input/Output: [[-34.32309930766904 -48] -82.32309930766904]
Test Case: 956 | Input/Output: [[23.8246811842085 10] 33.8246811842085]
Test Case: 957 | Input/Output: [[-82.61174939471596 27] -55.61174939471596]
Test Case: 958 | Input/Output: [[97.27975341882166 -74] 23.279753418821656]
Test Case: 959 | Input/Output: [[-29.275675152775122 9] -20.275675152775122]
Test Case: 960 | Input/Output: [[35.65174877203518 56] 91.65174877203518]
Test Case: 961 | Input/Output: [[89.88232434709303 96] 185.88232434709303]
Test Case: 962 | Input/Output: [[-83.84968411266249 -17] -100.84968411266249]
Test Case: 963 | Input/Output: [[83.32953030236027 -66] 17.32953030236027]
Test Case: 964 | Input/Output: [[-13.221596385051825 -20] -33.221596385051825]
Test Case: 965 | Input/Output: [[-0.5474274248583129 92] 91.45257257514169]
Test Case: 966 | Input/Output: [[-10.444174782364897 -83] -93.4441747823649]
Test Case: 967 | Input/Output: [[-46.32665024058751 -82] -128.32665024058753]
Test Case: 968 | Input/Output: [[-30.25934361855458 -51] -81.25934361855458]
Test Case: 969 | Input/Output: [[99.58271059130794 -77] 22.582710591307944]
Test Case: 970 | Input/Output: [[-78.47332165447558 1] -77.47332165447558]
Test Case: 971 | Input/Output: [[80.87898744170906 19] 99.87898744170906]
Test Case: 972 | Input/Output: [[15.997029132810653 86] 101.99702913281065]
Test Case: 973 | Input/Output: [[-15.301248595250058 -13] -28.30124859525006]
Test Case: 974 | Input/Output: [[87.29292372817716 -43] 44.29292372817716]
Test Case: 975 | Input/Output: [[12.140605165317652 53] 65.14060516531765]
Test Case: 976 | Input/Output: [[-84.26065452750477 35] -49.26065452750477]
Test Case: 977 | Input/Output: [[68.3050759501889 -100] -31.694924049811107]
Test Case: 978 | Input/Output: [[91.49993051763715 42] 133.49993051763715]
Test Case: 979 | Input/Output: [[-38.224683305905494 39] 0.7753166940945064]
Test Case: 980 | Input/Output: [[56.32803448042202 64] 120.32803448042202]
Test Case: 981 | Input/Output: [[18.99054242400591 -24] -5.009457575994091]
Test Case: 982 | Input/Output: [[-95.57095763583396 -43] -138.57095763583396]
Test Case: 983 | Input/Output: [[-34.185100845497246 -73] -107.18510084549725]
Test Case: 984 | Input/Output: [[39.08683876850654 -23] 16.08683876850654]
Test Case: 985 | Input/Output: [[-94.84902704616245 -13] -107.84902704616245]
Test Case: 986 | Input/Output: [[50.75439543343211 20] 70.75439543343211]
Test Case: 987 | Input/Output: [[-20.02228060702795 -35] -55.02228060702795]
Test Case: 988 | Input/Output: [[34.6446113907613 23] 57.6446113907613]
Test Case: 989 | Input/Output: [[37.66327748595273 68] 105.66327748595273]
Test Case: 990 | Input/Output: [[-6.457434083889254 -82] -88.45743408388925]
Test Case: 991 | Input/Output: [[-21.650661578711563 -21] -42.65066157871156]
Test Case: 992 | Input/Output: [[74.60053051548942 -27] 47.600530515489424]
Test Case: 993 | Input/Output: [[16.203091675450395 52] 68.2030916754504]
Test Case: 994 | Input/Output: [[52.84623725020606 -100] -47.15376274979394]
Test Case: 995 | Input/Output: [[66.67252887229037 -79] -12.327471127709629]
Test Case: 996 | Input/Output: [[-58.85561356379476 90] 31.144386436205238]
Test Case: 997 | Input/Output: [[-33.61030514997117 64] 30.38969485002883]
Test Case: 998 | Input/Output: [[14.230480691973725 -66] -51.769519308026275]
Test Case: 999 | Input/Output: [[-96.40972450001819 22] -74.40972450001819]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -106 39 -116 -37 46 59 -50 -43 106 -14 124 58 -21 74 -7 -70
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 60100.25610000009
Test mean error for best: 30.05013
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61            
Correct output: -131.0140839365 | Program output: -74           
Correct output: -5.5592528532  | Program output: -37           
Correct output: 59.9596444289  | Program output: 59            
Correct output: -117.3614120131 | Program output: -92           
Correct output: 86.6455800457  | Program output: 81            
Correct output: 59.2320173294  | Program output: 56            
Correct output: 12.464752481   | Program output: 92            
Correct output: -91.236138991  | Program output: -40           
Correct output: 23.7576154446  | Program output: 68            
Correct output: 26.757722572   | Program output: 47            
Correct output: 112.4622705725 | Program output: 35            
Correct output: 2.834164078    | Program output: -6            
Correct output: -49.0145736823 | Program output: -86           
Correct output: -52.934708311  | Program output: -13           
Correct output: 14.7764646206  | Program output: 35            
Correct output: 42.5296882094  | Program output: -28           
Correct output: -26.7724158498 | Program output: 1             
Correct output: -47.8394536481 | Program output: 50            
Correct output: -63.6278515914 | Program output: -31           
Correct output: -107.481309225 | Program output: -87           
Correct output: -10.4548540463 | Program output: -26           
Correct output: -20.5788443492 | Program output: 56            
Correct output: 4.0015797195   | Program output: -44           
Correct output: 81.422575027   | Program output: 67            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_dup_times} {:instruction float_pop} {:instruction integer_inc} {:instruction float_rot} {:instruction float_div} {:instruction float_swap} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction tagged_26} {:instruction float_dup} {:instruction print_float} {:instruction float_min} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction tag_float_989} {:instruction float_add} {:instruction float_dup} {:instruction integer_flush} {:instruction integer_mod} {:instruction tag_float_591} {:instruction in2} {:instruction float_rot} {:instruction integer_mod} {:instruction in2} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_dup_items} {:instruction float_shove} {:instruction float_flush} {:instruction integer_add} {:instruction integer_swap} {:instruction print_integer} {:instruction tag_integer_130} {:instruction float_div} {:instruction float_dup_items} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_add} {:instruction integer_inc} {:instruction integer_dup} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_min} {:instruction float_yankdup} {:instruction integer_min} {:instruction float_mod} {:instruction float_yank} {:instruction float_mod} {:instruction integer_inc})
Best program: (float_swap integer_dup_times float_pop integer_inc float_rot float_div float_swap integer_dup_times float_dup_items tagged_26 float_dup print_float float_min integer_sub integer_fromfloat tag_float_989 float_add float_dup integer_flush integer_mod tag_float_591 in2 float_rot integer_mod in2 float_dup_times float_mod float_dup_items float_shove float_flush integer_add integer_swap print_integer tag_integer_130 float_div float_dup_items float_sub float_yankdup integer_dec integer_dup_times float_add integer_inc integer_dup float_mult integer_yankdup float_add float_stackdepth float_min float_yankdup integer_min float_mod float_yank float_mod integer_inc)
Errors: [7.9821 11 57.0141 13 31.4407 11 0.9596 11 25.3614 13 5.6456 12 3.232 12 79.5352 11 51.2361 12 44.2424 12 20.2423 11 77.4623 13 8.8342 10 36.9854 12 39.9347 11 20.2235 13 70.5297 11 27.7724 13 97.8395 13 32.6279 11 20.4813 12 15.5451 12 76.5788 13 48.0016 12 14.4226 11]
Total: 1210.1305000000004
Mean: 24.20261
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 18440.1226346
Median total errors in population: 25331.0
Error averages by case: (719.9899591000025 12.487 748.6695775000006 14.161 718.7797041999993 13.339 718.2452167999979 12.614 746.4434865000025 14.14 725.5097897000011 12.513 717.0025293999989 12.46 722.8691627999991 12.318 737.4400445999983 12.55 719.7476690000004 13.322 717.8801385999991 12.393 729.162003600002 13.353 710.0650470000006 10.814 730.7711739999992 13.869 726.2052502999984 12.437 714.7838477000005 13.407 724.2788741999991 12.513 704.5069434000013 13.254 724.9593109000006 13.308 731.8845076999993 13.317 744.9874288999988 13.18 717.6320503000012 13.641 720.7097961000013 13.311 720.3278974999997 11.733 725.1532248000016 11.684)
Error minima by case: (3.0179 1 29.8594 3 0.1742 8 0.0404 2 20.3614 3 1.7625 1 1.7546 2 0.4648 7 1.7639 1 0.7576 9 0.2423 8 12.4623 3 0.1658 1 0.9854 8 1.9347 2 0.2681 8 4.4119 2 0.0 0 1.8395 1 0.9946 1 10.4813 1 0.4549 8 0.4212 2 0.1406 1 0.3448 2)
Average genome size in population (length): 51.765
Average program size in population (points): 52.765
Average percent parens in population: 0.040
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.32
Error (vector) diversity:			 0.351
Behavioral diversity:				 0.363
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1298049
--- Timings ---
Current time: 1529614831785 milliseconds
Total Time:           4.0 seconds
Initialization:       0.1 seconds,  2.8%
Reproduction:         0.5 seconds, 13.7%
Fitness Testing:      3.3 seconds, 83.5%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 59404.25610000009
Test mean error for best: 29.70213
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.0
         
Correct output: -131.0140839365 | Program output: -74.0
        
Correct output: -5.5592528532  | Program output: -37.0
        
Correct output: 59.9596444289  | Program output: 59.0
         
Correct output: -117.3614120131 | Program output: -92.0
        
Correct output: 86.6455800457  | Program output: 81.0
         
Correct output: 59.2320173294  | Program output: 56.0
         
Correct output: 12.464752481   | Program output: 92.0
         
Correct output: -91.236138991  | Program output: -40.0
        
Correct output: 23.7576154446  | Program output: 68.0
         
Correct output: 26.757722572   | Program output: 47.0
         
Correct output: 112.4622705725 | Program output: 35.0
         
Correct output: 2.834164078    | Program output: -6.0
         
Correct output: -49.0145736823 | Program output: -86.0
        
Correct output: -52.934708311  | Program output: -13.0
        
Correct output: 14.7764646206  | Program output: 35.0
         
Correct output: 42.5296882094  | Program output: -28.0
        
Correct output: -26.7724158498 | Program output: 1.0
          
Correct output: -47.8394536481 | Program output: 50.0
         
Correct output: -63.6278515914 | Program output: -31.0
        
Correct output: -107.481309225 | Program output: -87.0
        
Correct output: -10.4548540463 | Program output: -26.0
        
Correct output: -20.5788443492 | Program output: 56.0
         
Correct output: 4.0015797195   | Program output: -44.0
        
Correct output: 81.422575027   | Program output: 67.0
         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_mod} {:instruction float_dup_times} {:instruction print_newline} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (integer_pop float_shove in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_add in2 tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup float_mod float_dup_times print_newline integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [7.9821 10 57.0141 12 31.4407 12 0.9596 10 25.3614 12 5.6456 10 3.232 10 79.5352 10 51.2361 11 44.2424 12 20.2423 11 77.4623 12 8.8342 9 36.9854 11 39.9347 10 20.2235 11 70.5297 10 27.7724 13 97.8395 13 32.6279 11 20.4813 10 15.5451 11 76.5788 13 48.0016 11 14.4226 10]
Total: 1189.1305000000004
Mean: 23.78261
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 6298.4350515999895
Median total errors in population: 1620.7013
Error averages by case: (234.90797429999805 10.02 290.50437219999924 11.514 222.72787279999937 12.479 231.39475240000056 10.422 285.0510773999981 11.502 248.51418809999836 10.14 228.26153209999845 10.12 240.02769719999952 11.287 262.9852377000012 10.187 232.4743342000006 12.445 224.6183431999995 11.317 262.5130389000028 10.948 203.2913620000012 8.736 254.00242369999947 12.637 236.73914780000166 9.977 217.23121710000055 12.731 237.79177000000232 10.124 208.23687889999843 10.707 246.7929882000008 10.792 248.1018093999991 10.702 280.6035316000019 10.525 219.07708330000006 11.937 235.85963469999834 10.813 226.7428995999989 9.522 248.90888479999867 9.491)
Error minima by case: (0.2939 1 34.0141 3 0.1742 8 0.0404 1 20.3614 3 1.7625 1 1.7546 2 0.0 0 1.7639 1 0.0 0 0.0 0 12.4623 3 0.0 0 0.9854 8 1.9347 2 0.0 0 0.0 0 0.0 0 1.8395 1 0.9946 1 10.4813 1 0.4549 8 0.4212 2 0.0 0 0.3448 2)
Average genome size in population (length): 61.523
Average program size in population (points): 62.523
Average percent parens in population: 0.021
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.499
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.305
Error (vector) diversity:			 0.323
Behavioral diversity:				 0.343
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2842460
--- Timings ---
Current time: 1529614836036 milliseconds
Total Time:           8.4 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         2.8 seconds, 33.5%
Fitness Testing:      5.0 seconds, 59.2%
Report:               0.5 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 59404.25610000009
Test mean error for best: 29.70213
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.0
         
Correct output: -131.0140839365 | Program output: -74.0
        
Correct output: -5.5592528532  | Program output: -37.0
        
Correct output: 59.9596444289  | Program output: 59.0
         
Correct output: -117.3614120131 | Program output: -92.0
        
Correct output: 86.6455800457  | Program output: 81.0
         
Correct output: 59.2320173294  | Program output: 56.0
         
Correct output: 12.464752481   | Program output: 92.0
         
Correct output: -91.236138991  | Program output: -40.0
        
Correct output: 23.7576154446  | Program output: 68.0
         
Correct output: 26.757722572   | Program output: 47.0
         
Correct output: 112.4622705725 | Program output: 35.0
         
Correct output: 2.834164078    | Program output: -6.0
         
Correct output: -49.0145736823 | Program output: -86.0
        
Correct output: -52.934708311  | Program output: -13.0
        
Correct output: 14.7764646206  | Program output: 35.0
         
Correct output: 42.5296882094  | Program output: -28.0
        
Correct output: -26.7724158498 | Program output: 1.0
          
Correct output: -47.8394536481 | Program output: 50.0
         
Correct output: -63.6278515914 | Program output: -31.0
        
Correct output: -107.481309225 | Program output: -87.0
        
Correct output: -10.4548540463 | Program output: -26.0
        
Correct output: -20.5788443492 | Program output: 56.0
         
Correct output: 4.0015797195   | Program output: -44.0
        
Correct output: 81.422575027   | Program output: 67.0
         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_mod} {:instruction float_dup_times} {:instruction print_newline} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (integer_pop float_shove in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_add in2 tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup float_mod float_dup_times print_newline integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [7.9821 10 57.0141 12 31.4407 12 0.9596 10 25.3614 12 5.6456 10 3.232 10 79.5352 10 51.2361 11 44.2424 12 20.2423 11 77.4623 12 8.8342 9 36.9854 11 39.9347 10 20.2235 11 70.5297 10 27.7724 13 97.8395 13 32.6279 11 20.4813 10 15.5451 11 76.5788 13 48.0016 11 14.4226 10]
Total: 1189.1305000000004
Mean: 23.78261
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 4294.198864500006
Median total errors in population: 1367.6457
Error averages by case: (147.96928709999818 8.584 188.88765330000015 10.282 153.86276730000193 12.344 144.17046830000075 8.802 178.81378059999813 10.269 154.68737069999992 8.982 143.3005342000005 9.135 192.5774453000022 11.023 172.5753983000008 8.999 168.01075799999882 12.351 149.9557397000007 10.861 176.94319920000254 9.925 129.86953379999895 7.484 175.20339970000146 12.459 155.61417860000088 8.755 145.2199813999979 13.26 172.4844194000023 8.617 130.09079130000083 9.479 191.5064168000009 9.564 158.4307705000003 8.949 174.14337610000243 9.267 143.07185900000013 11.552 180.33893309999826 9.848 163.86598189999916 8.619 154.7658209000002 8.429)
Error minima by case: (6.9201 1 16.9859 3 4.0837 8 0.0404 1 24.3614 3 4.5636 1 2.175 1 0.0 0 11.2361 1 0.0 0 0.0 0 10.4279 3 0.0 0 1.9854 9 2.2623 2 0.0 0 0.0 0 0.0 0 13.8395 1 1.6279 1 19.4813 1 0.4549 9 10.5788 2 0.0 0 10.8875 2)
Average genome size in population (length): 55.5
Average program size in population (points): 56.5
Average percent parens in population: 0.021
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.972
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 38
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 38
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.155
Error (vector) diversity:			 0.164
Behavioral diversity:				 0.176
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4236198
--- Timings ---
Current time: 1529614840037 milliseconds
Total Time:          12.3 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         4.4 seconds, 35.4%
Fitness Testing:      7.0 seconds, 56.9%
Report:               0.8 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 58918.97609999993
Test mean error for best: 29.45949
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.02         
Correct output: -131.0140839365 | Program output: -74.02        
Correct output: -5.5592528532  | Program output: -37.02        
Correct output: 59.9596444289  | Program output: 59.02         
Correct output: -117.3614120131 | Program output: -92.02        
Correct output: 86.6455800457  | Program output: 81.02         
Correct output: 59.2320173294  | Program output: 56.02         
Correct output: 12.464752481   | Program output: 92.02         
Correct output: -91.236138991  | Program output: -40.02        
Correct output: 23.7576154446  | Program output: 68.02         
Correct output: 26.757722572   | Program output: 47.02         
Correct output: 112.4622705725 | Program output: 35.02         
Correct output: 2.834164078    | Program output: -6.02         
Correct output: -49.0145736823 | Program output: -86.02        
Correct output: -52.934708311  | Program output: -13.02        
Correct output: 14.7764646206  | Program output: 35.02         
Correct output: 42.5296882094  | Program output: -28.02        
Correct output: -26.7724158498 | Program output: 1.02          
Correct output: -47.8394536481 | Program output: 50.02         
Correct output: -63.6278515914 | Program output: -31.02        
Correct output: -107.481309225 | Program output: -87.02        
Correct output: -10.4548540463 | Program output: -26.02        
Correct output: -20.5788443492 | Program output: 56.02         
Correct output: 4.0015797195   | Program output: -44.02        
Correct output: 81.422575027   | Program output: 67.02         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dec} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (float_rot float_dec integer_add float_inc -57 integer_dup_items integer_min integer_inc integer_yankdup float_dup_items in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_add in2 tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [7.9621 9 56.9941 12 31.4607 11 0.9396 9 25.3414 12 5.6256 10 3.212 9 79.5552 9 51.2161 11 44.2624 12 20.2623 10 77.4423 11 8.8542 9 37.0054 10 39.9147 10 20.2435 11 70.5497 10 27.7924 12 97.8595 13 32.6079 11 20.4613 9 15.5651 11 76.5988 12 48.0216 11 14.4026 9]
Total: 1177.1505000000002
Mean: 23.54301
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 4324.499995199991
Median total errors in population: 1210.1305000000004
Error averages by case: (135.1361526999976 11.077 185.05306320000028 13.051 159.58351480000292 11.423 128.10353180000112 11.064 159.44487899999748 13.05 134.06370000000223 11.893 130.0211526000024 11.959 197.0102042000031 11.041 178.0847440000008 11.973 166.25535419999923 12.099 145.0847138 11.073 193.51543370000346 12.899 139.04328719999876 9.963 167.23510030000227 12.168 166.89334840000123 11.063 144.33706749999672 12.897 192.64033070000337 11.041 124.03699490000129 13.001 211.3673327000013 12.967 161.67134110000094 11.233 154.54883310000127 11.993 145.75797220000084 12.174 193.082839799998 12.989 173.829749099999 11.806 141.8273542000013 10.975)
Error minima by case: (0.2939 1 16.9859 3 4.4407 11 0.0404 2 24.3614 3 4.5636 1 2.175 2 10.4648 8 11.2361 1 6.7576 11 16.2423 9 32.3215 3 0.8342 1 1.9854 10 13.0 2 4.2235 10 28.0 2 0.0 0 37.8395 1 1.6279 2 19.4813 2 0.4549 9 10.5788 2 2.0016 1 1.2818 2)
Average genome size in population (length): 47.143
Average program size in population (points): 48.143
Average percent parens in population: 0.026
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.40075
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 103
Genome diversity (% unique Plush genomes):	 0.644
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 103
Syntactic diversity (% unique Push programs):	 0.644
Total error diversity:				 0.053
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5420711
--- Timings ---
Current time: 1529614843091 milliseconds
Total Time:          15.4 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.0 seconds, 38.7%
Fitness Testing:      8.1 seconds, 52.4%
Report:               1.3 seconds,  8.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 58918.97609999993
Test mean error for best: 29.45949
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.02         
Correct output: -131.0140839365 | Program output: -74.02        
Correct output: -5.5592528532  | Program output: -37.02        
Correct output: 59.9596444289  | Program output: 59.02         
Correct output: -117.3614120131 | Program output: -92.02        
Correct output: 86.6455800457  | Program output: 81.02         
Correct output: 59.2320173294  | Program output: 56.02         
Correct output: 12.464752481   | Program output: 92.02         
Correct output: -91.236138991  | Program output: -40.02        
Correct output: 23.7576154446  | Program output: 68.02         
Correct output: 26.757722572   | Program output: 47.02         
Correct output: 112.4622705725 | Program output: 35.02         
Correct output: 2.834164078    | Program output: -6.02         
Correct output: -49.0145736823 | Program output: -86.02        
Correct output: -52.934708311  | Program output: -13.02        
Correct output: 14.7764646206  | Program output: 35.02         
Correct output: 42.5296882094  | Program output: -28.02        
Correct output: -26.7724158498 | Program output: 1.02          
Correct output: -47.8394536481 | Program output: 50.02         
Correct output: -63.6278515914 | Program output: -31.02        
Correct output: -107.481309225 | Program output: -87.02        
Correct output: -10.4548540463 | Program output: -26.02        
Correct output: -20.5788443492 | Program output: 56.02         
Correct output: 4.0015797195   | Program output: -44.02        
Correct output: 81.422575027   | Program output: 67.02         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction float_sub} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (integer_pop float_shove in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_add in2 tagged_2 float_div integer_yankdup float_div float_mod float_sub float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [7.9621 9 56.9941 12 31.4607 11 0.9396 9 25.3414 12 5.6256 10 3.212 9 79.5552 9 51.2161 11 44.2624 12 20.2623 10 77.4423 11 8.8542 9 37.0054 10 39.9147 10 20.2435 11 70.5497 10 27.7924 12 97.8595 13 32.6079 11 20.4613 9 15.5651 11 76.5988 12 48.0216 11 14.4026 9]
Total: 1177.1505000000002
Mean: 23.54301
Genome size: 69
Size: 70
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3516.678636199992
Median total errors in population: 1210.1305000000004
Error averages by case: (102.53811869999865 10.967 151.38354430000027 12.976 125.98217580000228 11.363 96.63274160000098 10.997 124.52645399999828 12.982 102.19282380000215 11.636 97.91791900000224 11.724 167.58831550000184 10.916 144.10728649999902 11.805 134.9323417000012 12.072 112.38268679999904 11.07 162.9474322000023 12.861 104.04744239999857 9.889 134.03003430000174 12.009 132.43940929999897 10.98 111.46616699999764 12.591 160.75787200000227 10.969 102.81238980000126 13.116 181.94847600000128 12.94 126.95113730000266 11.242 119.87388159999956 11.801 111.41800390000182 12.107 162.9441703999991 13.025 140.97956330000105 11.725 109.15724900000133 10.958)
Error minima by case: (0.7061 3 16.9859 6 4.4407 11 0.9396 5 23.3614 6 3.6456 4 3.212 4 10.4648 9 10.2361 5 21.7576 11 18.2423 10 29.4623 5 0.8342 3 36.9854 10 25.9347 5 12.7765 10 40.4703 5 2.0 2 37.8395 4 0.6279 4 18.4813 6 0.4549 11 10.5788 4 2.0016 4 1.5774 4)
Average genome size in population (length): 44.936
Average program size in population (points): 45.936
Average percent parens in population: 0.027
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 5.828625
Median age in population: 5.875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 80
Genome diversity (% unique Plush genomes):	 0.642
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 80
Syntactic diversity (% unique Push programs):	 0.642
Total error diversity:				 0.043
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6549235
--- Timings ---
Current time: 1529614846304 milliseconds
Total Time:          18.6 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.7 seconds, 41.3%
Fitness Testing:      9.1 seconds, 49.2%
Report:               1.6 seconds,  8.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 58864.956099999945
Test mean error for best: 29.43248
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 60.02         
Correct output: -131.0140839365 | Program output: -75.02        
Correct output: -5.5592528532  | Program output: -38.02        
Correct output: 59.9596444289  | Program output: 58.02         
Correct output: -117.3614120131 | Program output: -93.02        
Correct output: 86.6455800457  | Program output: 80.02         
Correct output: 59.2320173294  | Program output: 55.02         
Correct output: 12.464752481   | Program output: 91.02         
Correct output: -91.236138991  | Program output: -41.02        
Correct output: 23.7576154446  | Program output: 67.02         
Correct output: 26.757722572   | Program output: 46.02         
Correct output: 112.4622705725 | Program output: 34.02         
Correct output: 2.834164078    | Program output: -7.02         
Correct output: -49.0145736823 | Program output: -87.02        
Correct output: -52.934708311  | Program output: -14.02        
Correct output: 14.7764646206  | Program output: 34.02         
Correct output: 42.5296882094  | Program output: -29.02        
Correct output: -26.7724158498 | Program output: 0.02          
Correct output: -47.8394536481 | Program output: 49.02         
Correct output: -63.6278515914 | Program output: -32.02        
Correct output: -107.481309225 | Program output: -88.02        
Correct output: -10.4548540463 | Program output: -27.02        
Correct output: -20.5788443492 | Program output: 55.02         
Correct output: 4.0015797195   | Program output: -45.02        
Correct output: 81.422575027   | Program output: 66.02         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dec} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (float_rot float_dec integer_add float_inc -57 integer_dup_items integer_min integer_inc integer_yankdup float_dup_items in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [8.9621 9 55.9941 12 32.4607 10 1.9396 10 24.3414 12 6.6256 10 4.212 9 78.5552 10 50.2161 10 43.2624 12 19.2623 9 78.4423 11 9.8542 10 38.0054 10 38.9147 10 19.2435 10 71.5497 10 26.7924 12 96.8595 12 31.6079 11 19.4613 10 16.5651 11 75.5988 12 49.0216 11 15.4026 9]
Total: 1175.1505000000002
Mean: 23.50301
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3573.402068899994
Median total errors in population: 1189.1305000000004
Error averages by case: (105.94378419999842 10.505 152.5578189000003 12.508 127.98486970000219 11.821 99.60675130000082 10.526 125.2545811999983 12.491 104.74328550000193 10.679 101.49516700000207 10.777 168.65864720000178 10.449 146.3147657999991 11.275 137.39492520000096 12.052 115.97300969999903 11.043 167.66747580000245 12.35 105.37124779999871 9.413 134.65821640000166 11.542 134.68618049999913 10.513 115.53683839999735 11.674 162.61072260000225 10.501 113.41491710000129 13.08 184.70460910000114 12.852 129.38156350000276 11.262 120.71208839999952 10.862 113.61346500000168 11.684 165.60699019999905 12.982 142.6101561000011 11.208 112.3459923000018 10.505)
Error minima by case: (6.9211 1 15.9859 4 4.4407 10 0.0404 2 23.3614 4 4.5646 1 2.176 2 10.4648 9 11.2361 2 21.7576 11 18.2423 9 35.0 4 0.8342 2 10.1554 10 6.2352 3 12.7765 10 28.0 3 1.0 1 11.3305 2 1.6279 3 18.4813 3 0.4549 10 19.2114 3 2.0016 2 13.3556 3)
Average genome size in population (length): 51.235
Average program size in population (points): 52.235
Average percent parens in population: 0.021
Minimum age in population: 5.0
Maximum age in population: 9.3125
Average age in population: 7.26575
Median age in population: 7.3125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 85
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 85
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.06
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 7833785
--- Timings ---
Current time: 1529614849861 milliseconds
Total Time:          22.2 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.6 seconds, 43.1%
Fitness Testing:     10.4 seconds, 46.9%
Report:               2.1 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 58864.956099999945
Test mean error for best: 29.43248
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 60.02         
Correct output: -131.0140839365 | Program output: -75.02        
Correct output: -5.5592528532  | Program output: -38.02        
Correct output: 59.9596444289  | Program output: 58.02         
Correct output: -117.3614120131 | Program output: -93.02        
Correct output: 86.6455800457  | Program output: 80.02         
Correct output: 59.2320173294  | Program output: 55.02         
Correct output: 12.464752481   | Program output: 91.02         
Correct output: -91.236138991  | Program output: -41.02        
Correct output: 23.7576154446  | Program output: 67.02         
Correct output: 26.757722572   | Program output: 46.02         
Correct output: 112.4622705725 | Program output: 34.02         
Correct output: 2.834164078    | Program output: -7.02         
Correct output: -49.0145736823 | Program output: -87.02        
Correct output: -52.934708311  | Program output: -14.02        
Correct output: 14.7764646206  | Program output: 34.02         
Correct output: 42.5296882094  | Program output: -29.02        
Correct output: -26.7724158498 | Program output: 0.02          
Correct output: -47.8394536481 | Program output: 49.02         
Correct output: -63.6278515914 | Program output: -32.02        
Correct output: -107.481309225 | Program output: -88.02        
Correct output: -10.4548540463 | Program output: -27.02        
Correct output: -20.5788443492 | Program output: 55.02         
Correct output: 4.0015797195   | Program output: -45.02        
Correct output: 81.422575027   | Program output: 66.02         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dec} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_mult} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (float_rot float_dec integer_add float_inc -57 integer_dup_items integer_min integer_inc integer_yankdup float_dup_items in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_mult float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [8.9621 9 55.9941 12 32.4607 10 1.9396 10 24.3414 12 6.6256 10 4.212 9 78.5552 10 50.2161 10 43.2624 12 19.2623 9 78.4423 11 9.8542 10 38.0054 10 38.9147 10 19.2435 10 71.5497 10 26.7924 12 96.8595 12 31.6079 11 19.4613 10 16.5651 11 75.5988 12 49.0216 11 15.4026 9]
Total: 1175.1505000000002
Mean: 23.50301
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3096.8962477999944
Median total errors in population: 1189.1305000000004
Error averages by case: (87.93162959999891 10.13 132.7045036000002 12.191 107.12482290000169 11.947 81.50587770000075 10.184 104.90643399999894 12.191 86.70604910000175 10.242 83.42627240000186 10.133 151.25283770000064 10.057 126.182395699998 11.117 119.5079978000017 12.041 97.71875379999919 10.942 150.20825600000072 12.016 86.2208104999989 9.16 114.00970870000131 11.125 115.1175473999988 10.209 97.19847939999781 11.152 142.78858160000053 10.224 100.76811820000127 12.907 167.77334820000112 13.024 108.8849212000023 11.237 100.28239229999959 10.213 92.81458160000174 11.222 148.19875600000086 12.931 121.98787560000152 11.05 94.01329680000113 10.017)
Error minima by case: (6.9821 2 16.9859 4 4.7095 10 0.0404 2 17.3614 4 4.6456 2 2.232 2 10.4648 8 8.7639 2 21.5012 11 16.2423 9 35.0 3 0.8342 2 35.9854 10 13.0 3 12.7765 9 2.7292 3 1.0 2 45.8827 2 1.6079 3 7.4813 3 9.2761 9 19.2114 3 2.0016 2 13.4226 2)
Average genome size in population (length): 53.631
Average program size in population (points): 54.631
Average percent parens in population: 0.019
Minimum age in population: 6.0
Maximum age in population: 10.5625
Average age in population: 8.6358125
Median age in population: 8.6875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 67
Genome diversity (% unique Plush genomes):	 0.691
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 67
Syntactic diversity (% unique Push programs):	 0.691
Total error diversity:				 0.041
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9175010
--- Timings ---
Current time: 1529614852996 milliseconds
Total Time:          25.3 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.1 seconds, 43.8%
Fitness Testing:     11.6 seconds, 45.9%
Report:               2.5 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 58610.96210000007
Test mean error for best: 29.30548
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.021        
Correct output: -131.0140839365 | Program output: -74.021       
Correct output: -5.5592528532  | Program output: -37.021       
Correct output: 59.9596444289  | Program output: 59.021        
Correct output: -117.3614120131 | Program output: -92.021       
Correct output: 86.6455800457  | Program output: 81.021        
Correct output: 59.2320173294  | Program output: 56.021        
Correct output: 12.464752481   | Program output: 92.021        
Correct output: -91.236138991  | Program output: -40.021       
Correct output: 23.7576154446  | Program output: 68.021        
Correct output: 26.757722572   | Program output: 47.021        
Correct output: 112.4622705725 | Program output: 35.021        
Correct output: 2.834164078    | Program output: -6.021        
Correct output: -49.0145736823 | Program output: -86.021       
Correct output: -52.934708311  | Program output: -13.021       
Correct output: 14.7764646206  | Program output: 35.021        
Correct output: 42.5296882094  | Program output: -28.021       
Correct output: -26.7724158498 | Program output: 1.021         
Correct output: -47.8394536481 | Program output: 50.021        
Correct output: -63.6278515914 | Program output: -31.021       
Correct output: -107.481309225 | Program output: -87.021       
Correct output: -10.4548540463 | Program output: -26.021       
Correct output: -20.5788443492 | Program output: 56.021        
Correct output: 4.0015797195   | Program output: -44.021       
Correct output: 81.422575027   | Program output: 67.021        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dec} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction float_div} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_min} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction float_max} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (float_rot float_dec integer_add float_inc -57 integer_dup_items integer_min integer_inc integer_yankdup float_dup_items in2 float_dec float_rot float_inc float_div integer_yank integer_swap integer_add in2 tagged_2 float_div integer_yankdup integer_min float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush float_max integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [7.9611 9 56.9931 12 31.4617 11 0.9386 9 25.3404 11 5.6246 10 3.211 9 79.5562 8 51.2151 10 44.2634 11 20.2633 10 77.4413 11 8.8552 9 37.0064 10 39.9137 9 20.2445 11 70.5507 10 27.7934 11 97.8605 12 32.6069 10 20.4603 9 15.5661 11 76.5998 13 48.0226 10 14.4016 9]
Total: 1169.1515
Mean: 23.38303
Genome size: 76
Size: 77
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2759.417651399987
Median total errors in population: 1189.1305000000004
Error averages by case: (73.77631429999978 9.786 121.3866061 12.124 94.35140210000066 11.565 67.20848520000006 9.896 93.2167975999997 12.12 72.67189360000077 10.207 69.1454650000008 9.761 136.38642030000017 9.777 114.34494539999947 10.982 104.75445680000156 11.995 82.9951646999999 10.577 136.9804961999993 11.682 73.47817189999974 9.196 101.52383840000005 10.766 102.80137579999888 10.138 82.3550540999988 11.085 130.5356951000003 10.203 87.16020950000078 12.536 153.49817380000098 12.89 96.70716400000151 11.153 88.44991389999976 9.938 80.12310580000103 11.199 133.5419566000021 12.59 109.14764610000007 10.987 80.02189910000037 9.702)
Error minima by case: (6.9621 4 16.9859 7 4.7319 10 0.0404 3 17.3614 7 1.6256 4 2.212 4 10.4648 8 1.7639 6 21.7576 11 16.2423 9 27.4423 6 0.8342 5 7.9854 9 4.0653 7 12.7765 9 40.5297 6 1.0 2 9.1605 5 1.6079 6 7.4813 6 9.2761 9 19.1865 6 2.0016 6 3.5974 5)
Average genome size in population (length): 61.026
Average program size in population (points): 62.026
Average percent parens in population: 0.017
Minimum age in population: 7.0
Maximum age in population: 12.1875
Average age in population: 10.11625
Median age in population: 10.1796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.783
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.783
Total error diversity:				 0.055
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 10701585
--- Timings ---
Current time: 1529614856597 milliseconds
Total Time:          28.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.9 seconds, 44.6%
Fitness Testing:     13.0 seconds, 44.9%
Report:               2.9 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 58445.08670000007
Test mean error for best: 29.22254
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.0121       
Correct output: -131.0140839365 | Program output: -74.0121      
Correct output: -5.5592528532  | Program output: -37.0121      
Correct output: 59.9596444289  | Program output: 59.0121       
Correct output: -117.3614120131 | Program output: -92.0121      
Correct output: 86.6455800457  | Program output: 81.0121       
Correct output: 59.2320173294  | Program output: 56.0121       
Correct output: 12.464752481   | Program output: 92.0121       
Correct output: -91.236138991  | Program output: -40.0121      
Correct output: 23.7576154446  | Program output: 68.0121       
Correct output: 26.757722572   | Program output: 47.0121       
Correct output: 112.4622705725 | Program output: 35.0121       
Correct output: 2.834164078    | Program output: -6.0121       
Correct output: -49.0145736823 | Program output: -86.0121      
Correct output: -52.934708311  | Program output: -13.0121      
Correct output: 14.7764646206  | Program output: 35.0121       
Correct output: 42.5296882094  | Program output: -28.0121      
Correct output: -26.7724158498 | Program output: 1.0121        
Correct output: -47.8394536481 | Program output: 50.0121       
Correct output: -63.6278515914 | Program output: -31.0121      
Correct output: -107.481309225 | Program output: -87.0121      
Correct output: -10.4548540463 | Program output: -26.0121      
Correct output: -20.5788443492 | Program output: 56.0121       
Correct output: 4.0015797195   | Program output: -44.0121      
Correct output: 81.422575027   | Program output: 67.0121       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction float_sub} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_max} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (integer_pop float_shove in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_add in2 tagged_2 float_div integer_yankdup float_div float_mod float_sub float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_max float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [7.97 9 57.002 11 31.4528 11 0.9475 9 25.3493 10 5.6335 10 3.2199 8 79.5473 8 51.224 9 44.2545 11 20.2544 10 77.4502 11 8.8463 10 36.9975 9 39.9226 9 20.2356 11 70.5418 11 27.7845 11 97.8516 12 32.6158 10 20.4692 9 15.5572 11 76.5909 13 48.0137 9 14.4105 10]
Total: 1166.1426
Mean: 23.322851
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 1964.0432501999926
Median total errors in population: 1177.1505000000002
Error averages by case: (40.80221309999979 9.447 95.10114370000039 11.979 62.39769590000092 11.129 33.931116900000426 9.669 66.28052329999959 11.91 41.14130939999998 10.168 36.876066800000025 9.304 101.78382090000068 9.458 86.95520290000024 10.656 71.78755290000007 11.835 50.41112030000008 10.134 105.89583329999957 11.327 38.81464870000062 9.271 71.40006069999995 10.343 71.9262923000003 9.946 49.49503969999958 10.957 98.82726600000105 10.163 50.167785899999316 12.054 120.32750720000107 12.556 68.44256620000056 10.957 61.231006900000395 9.722 47.588989499999805 11.191 100.51289590000137 12.267 77.85734549999937 10.819 47.466246300000634 9.36)
Error minima by case: (0.9919 3 17.0059 4 5.5593 9 0.0404 3 23.3414 4 4.6256 3 2.212 3 8.4648 8 0.6312 2 2.7576 10 5.7577 9 35.0 4 0.8342 2 7.9954 9 4.0753 3 6.2235 9 21.5297 3 1.0 2 9.1705 2 0.3921 3 16.8764 3 9.2761 9 19.7395 3 0.0016 2 5.4226 3)
Average genome size in population (length): 69.606
Average program size in population (points): 70.606
Average percent parens in population: 0.014
Minimum age in population: 8.0
Maximum age in population: 13.1796875
Average age in population: 11.5799375
Median age in population: 11.65625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.778
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.778
Total error diversity:				 0.071
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.078
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 12442135
--- Timings ---
Current time: 1529614860362 milliseconds
Total Time:          32.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.4 seconds, 44.3%
Fitness Testing:     14.7 seconds, 45.1%
Report:               3.3 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 58331.49730000004
Test mean error for best: 29.16575
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.0542       
Correct output: -131.0140839365 | Program output: -74.0542      
Correct output: -5.5592528532  | Program output: -37.0542      
Correct output: 59.9596444289  | Program output: 59.0542       
Correct output: -117.3614120131 | Program output: -92.0542      
Correct output: 86.6455800457  | Program output: 81.0542       
Correct output: 59.2320173294  | Program output: 56.0542       
Correct output: 12.464752481   | Program output: 92.0542       
Correct output: -91.236138991  | Program output: -40.0542      
Correct output: 23.7576154446  | Program output: 68.0542       
Correct output: 26.757722572   | Program output: 47.0542       
Correct output: 112.4622705725 | Program output: 35.0542       
Correct output: 2.834164078    | Program output: -6.0542       
Correct output: -49.0145736823 | Program output: -86.0542      
Correct output: -52.934708311  | Program output: -13.0542      
Correct output: 14.7764646206  | Program output: 35.0542       
Correct output: 42.5296882094  | Program output: -28.0542      
Correct output: -26.7724158498 | Program output: 1.0542        
Correct output: -47.8394536481 | Program output: 50.0542       
Correct output: -63.6278515914 | Program output: -31.0542      
Correct output: -107.481309225 | Program output: -87.0542      
Correct output: -10.4548540463 | Program output: -26.0542      
Correct output: -20.5788443492 | Program output: 56.0542       
Correct output: 4.0015797195   | Program output: -44.0542      
Correct output: 81.422575027   | Program output: 67.0542       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction integer_min} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction float_div} {:instruction float_div} {:instruction float_sub} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_div} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (integer_pop float_shove in2 float_dec float_rot integer_min integer_min integer_yank integer_swap integer_add in2 tagged_2 integer_inc integer_yankdup float_dup_items in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_add in2 float_div float_div float_sub float_div float_mod integer_swap float_div float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [7.9279 9 56.9599 11 31.4949 10 0.9054 7 25.3072 11 5.5914 9 3.1778 9 79.5894 8 51.1819 11 44.2966 10 20.2965 9 77.4081 10 8.8884 10 37.0396 9 39.8805 10 20.2777 10 70.5839 10 27.8266 11 97.8937 11 32.5737 11 20.4271 9 15.5993 10 76.633 11 48.0558 10 14.3684 9]
Total: 1159.1847
Mean: 23.183695
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 1637.2214589999965
Median total errors in population: 1175.1505000000002
Error averages by case: (27.23208170000027 9.51 84.37709050000062 11.893 50.16777140000046 10.815 20.15929799999998 10.023 56.08632069999987 11.725 28.272208899999796 10.195 23.095231699999903 9.277 85.16145360000041 9.615 74.96737939999997 10.184 55.26384969999992 11.655 33.94531739999973 9.827 91.94218109999987 11.333 29.25324030000026 9.537 60.861574499999975 10.29 61.18596300000042 9.764 32.74271120000013 10.706 87.01185650000077 10.206 39.46589839999963 11.895 104.41256070000028 12.061 55.89555580000011 10.797 50.81438320000002 10.009 36.45794199999993 11.162 84.09007980000074 12.351 65.3414457999999 10.625 34.153063700000395 9.41)
Error minima by case: (5.9821 4 15.0069 5 4.3824 9 0.8995 4 0.3414 5 3.6456 4 1.232 4 0.4648 8 9.2261 3 1.7576 9 4.7377 8 1.4623 5 0.8342 3 8.0064 9 4.0863 4 2.7765 9 10.4703 4 1.0 3 9.1815 3 0.3821 4 4.5387 4 8.7823 9 8.1206 4 2.0016 3 12.4226 4)
Average genome size in population (length): 72.387
Average program size in population (points): 73.387
Average percent parens in population: 0.014
Minimum age in population: 10.7421875
Maximum age in population: 15.0859375
Average age in population: 13.19631640625
Median age in population: 13.2421875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.105
Error (vector) diversity:			 0.11
Behavioral diversity:				 0.11
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 14252460
--- Timings ---
Current time: 1529614863881 milliseconds
Total Time:          36.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.8 seconds, 43.8%
Fitness Testing:     16.2 seconds, 44.9%
Report:               3.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 58331.49730000004
Test mean error for best: 29.16575
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.0542       
Correct output: -131.0140839365 | Program output: -74.0542      
Correct output: -5.5592528532  | Program output: -37.0542      
Correct output: 59.9596444289  | Program output: 59.0542       
Correct output: -117.3614120131 | Program output: -92.0542      
Correct output: 86.6455800457  | Program output: 81.0542       
Correct output: 59.2320173294  | Program output: 56.0542       
Correct output: 12.464752481   | Program output: 92.0542       
Correct output: -91.236138991  | Program output: -40.0542      
Correct output: 23.7576154446  | Program output: 68.0542       
Correct output: 26.757722572   | Program output: 47.0542       
Correct output: 112.4622705725 | Program output: 35.0542       
Correct output: 2.834164078    | Program output: -6.0542       
Correct output: -49.0145736823 | Program output: -86.0542      
Correct output: -52.934708311  | Program output: -13.0542      
Correct output: 14.7764646206  | Program output: 35.0542       
Correct output: 42.5296882094  | Program output: -28.0542      
Correct output: -26.7724158498 | Program output: 1.0542        
Correct output: -47.8394536481 | Program output: 50.0542       
Correct output: -63.6278515914 | Program output: -31.0542      
Correct output: -107.481309225 | Program output: -87.0542      
Correct output: -10.4548540463 | Program output: -26.0542      
Correct output: -20.5788443492 | Program output: 56.0542       
Correct output: 4.0015797195   | Program output: -44.0542      
Correct output: 81.422575027   | Program output: 67.0542       
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction integer_min} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction float_div} {:instruction float_div} {:instruction float_sub} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_div} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_dup} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (integer_pop float_shove in2 float_dec float_rot integer_min integer_min integer_yank integer_swap integer_add in2 tagged_2 integer_inc integer_yankdup float_dup_items in2 float_dec float_rot float_inc integer_min integer_yank integer_swap integer_add in2 float_div float_div float_sub float_div float_mod integer_swap float_div float_flush integer_fromfloat float_flush float_yankdup integer_dup float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [7.9279 9 56.9599 11 31.4949 10 0.9054 7 25.3072 11 5.5914 9 3.1778 9 79.5894 8 51.1819 11 44.2966 10 20.2965 9 77.4081 10 8.8884 10 37.0396 9 39.8805 10 20.2777 10 70.5839 10 27.8266 11 97.8937 11 32.5737 11 20.4271 9 15.5993 10 76.633 11 48.0558 10 14.3684 9]
Total: 1159.1847
Mean: 23.183695
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2129.3007745999953
Median total errors in population: 1169.1835
Error averages by case: (47.720731800000074 9.525 106.63456900000105 11.872 67.9629490000001 10.935 40.86593260000026 9.805 80.30102970000014 11.407 48.95379380000042 10.161 42.46619330000009 9.266 109.46393960000032 9.148 95.10048950000017 10.034 77.8723500000003 11.341 56.189015399999775 9.902 108.3730240000006 11.298 42.96114780000014 9.442 80.57746609999971 10.267 77.64395569999995 9.472 54.9284318000001 10.985 100.51977890000069 10.242 53.30206760000009 11.596 127.46249429999952 11.862 76.04486259999985 10.57 74.82088070000012 9.83 53.26910669999958 11.142 106.88221820000048 12.577 81.82011129999938 10.274 54.72723520000005 9.484)
Error minima by case: (6.9291 5 17.0069 6 2.5621 9 0.0614 4 23.3414 6 4.5926 5 2.179 5 0.4648 8 1.2261 4 0.7576 10 3.7577 8 8.5377 7 0.1658 4 1.9631 8 5.0863 5 2.7765 9 9.4703 5 3.7624 5 0.788 6 0.6059 5 13.9559 5 4.7479 10 2.4312 7 1.0016 4 13.3696 6)
Average genome size in population (length): 76.322
Average program size in population (points): 77.322
Average percent parens in population: 0.013
Minimum age in population: 12.6875
Maximum age in population: 16.47265625
Average age in population: 14.80468359375
Median age in population: 14.8447265625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.145
Error (vector) diversity:			 0.151
Behavioral diversity:				 0.152
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 16161185
--- Timings ---
Current time: 1529614867695 milliseconds
Total Time:          39.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.5 seconds, 43.8%
Fitness Testing:     17.9 seconds, 44.8%
Report:               4.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 58146.68260000003
Test mean error for best: 29.07334
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 60.05421      
Correct output: -131.0140839365 | Program output: -75.05421     
Correct output: -5.5592528532  | Program output: -38.05421     
Correct output: 59.9596444289  | Program output: 58.05421      
Correct output: -117.3614120131 | Program output: -93.05421     
Correct output: 86.6455800457  | Program output: 80.05421      
Correct output: 59.2320173294  | Program output: 55.05421      
Correct output: 12.464752481   | Program output: 91.05421      
Correct output: -91.236138991  | Program output: -41.05421     
Correct output: 23.7576154446  | Program output: 67.05421      
Correct output: 26.757722572   | Program output: 46.05421      
Correct output: 112.4622705725 | Program output: 34.05421      
Correct output: 2.834164078    | Program output: -7.05421      
Correct output: -49.0145736823 | Program output: -87.05421     
Correct output: -52.934708311  | Program output: -14.05421     
Correct output: 14.7764646206  | Program output: 34.05421      
Correct output: 42.5296882094  | Program output: -29.05421     
Correct output: -26.7724158498 | Program output: 0.05421       
Correct output: -47.8394536481 | Program output: 49.05421      
Correct output: -63.6278515914 | Program output: -32.05421     
Correct output: -107.481309225 | Program output: -88.05421     
Correct output: -10.4548540463 | Program output: -27.05421     
Correct output: -20.5788443492 | Program output: 55.05421      
Correct output: 4.0015797195   | Program output: -45.05421     
Correct output: 81.422575027   | Program output: 66.05421      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction float_dec} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction print_integer} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup})
Best program: (integer_div float_dec integer_add float_inc -57 integer_dup_items integer_min integer_inc integer_yankdup float_dup_items in2 float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_stackdepth integer_inc print_integer integer_mod print_integer float_inc float_stackdepth integer_yankdup)
Errors: [8.9279 10 55.9599 11 32.495 10 1.9054 8 24.3072 10 6.5914 9 4.1778 9 78.5895 8 50.1819 9 43.2966 10 19.2965 8 78.4081 10 9.8884 10 38.0396 9 38.8805 9 19.2777 9 71.5839 11 26.8266 11 96.8937 9 31.5736 9 19.4271 10 16.5994 10 75.6331 12 49.0558 9 15.3684 9]
Total: 1152.185
Mean: 23.0437
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2051.959417800004
Median total errors in population: 1168.1515
Error averages by case: (45.11680780000009 9.41 100.23600400000068 11.791 66.2134072 10.81 38.58490840000011 9.663 72.69093390000037 11.162 44.69456260000033 10.025 40.439430700000145 9.117 108.2586406000004 8.988 89.67289790000041 9.755 75.12181310000048 11.111 53.26601149999966 9.579 105.95865710000042 11.115 41.94186020000004 9.638 77.46340769999966 10.093 73.51100509999984 9.334 52.83545890000019 10.845 98.4320894000008 10.231 55.22079090000057 11.333 126.92929839999978 11.508 70.55554349999983 10.322 67.28433809999973 9.788 51.567379799999514 11.067 105.43110830000056 12.564 80.3719668999997 10.035 51.449095799999874 9.428)
Error minima by case: (6.9279 4 17.0069 6 4.7095 8 0.0404 5 23.3084 6 0.5572 4 2.1778 5 1.4648 7 8.5733 4 0.7576 9 3.7577 7 8.5377 6 0.1658 4 7.9975 8 4.0753 5 3.7765 9 9.4703 5 1.0 4 9.1705 4 0.4251 5 18.4283 5 9.6923 9 19.2114 5 1.0016 4 5.7802 5)
Average genome size in population (length): 78.423
Average program size in population (points): 79.423
Average percent parens in population: 0.013
Minimum age in population: 14.279296875
Maximum age in population: 18.0634765625
Average age in population: 16.253146484375
Median age in population: 16.31298828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.155
Error (vector) diversity:			 0.163
Behavioral diversity:				 0.164
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 18122710
--- Timings ---
Current time: 1529614871800 milliseconds
Total Time:          43.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.9 seconds, 43.1%
Fitness Testing:     19.9 seconds, 45.4%
Report:               4.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 58166.0408
Test mean error for best: 29.08302
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 61.01542      
Correct output: -131.0140839365 | Program output: -74.01542     
Correct output: -5.5592528532  | Program output: -37.01542     
Correct output: 59.9596444289  | Program output: 59.01542      
Correct output: -117.3614120131 | Program output: -92.01542     
Correct output: 86.6455800457  | Program output: 81.01542      
Correct output: 59.2320173294  | Program output: 56.01542      
Correct output: 12.464752481   | Program output: 92.01542      
Correct output: -91.236138991  | Program output: -40.01542     
Correct output: 23.7576154446  | Program output: 68.01542      
Correct output: 26.757722572   | Program output: 47.01542      
Correct output: 112.4622705725 | Program output: 35.01542      
Correct output: 2.834164078    | Program output: -6.01542      
Correct output: -49.0145736823 | Program output: -86.01542     
Correct output: -52.934708311  | Program output: -13.01542     
Correct output: 14.7764646206  | Program output: 35.01542      
Correct output: 42.5296882094  | Program output: -28.01542     
Correct output: -26.7724158498 | Program output: 1.01542       
Correct output: -47.8394536481 | Program output: 50.01542      
Correct output: -63.6278515914 | Program output: -31.01542     
Correct output: -107.481309225 | Program output: -87.01542     
Correct output: -10.4548540463 | Program output: -26.01542     
Correct output: -20.5788443492 | Program output: 56.01542      
Correct output: 4.0015797195   | Program output: -44.01542     
Correct output: 81.422575027   | Program output: 67.01542      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_rot} {:instruction float_dec} {:instruction integer_add} {:instruction integer_pop} {:instruction float_rot} {:instruction float_dec} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction float_rot} {:instruction integer_min} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (integer_pop float_rot float_dec integer_add integer_pop float_rot float_dec integer_add float_inc -57 integer_dup_items integer_min integer_inc integer_yankdup integer_pop float_shove in2 float_dec float_rot integer_min integer_min integer_yank integer_swap integer_add in2 tagged_2 integer_inc integer_yankdup float_dup_items in2 float_dec float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [7.9667 9 56.9987 11 31.4562 10 0.9442 8 25.346 11 5.6302 9 3.2166 8 79.5507 8 51.2207 10 44.2578 9 20.2577 9 77.4469 11 8.8496 9 37.0008 8 39.9193 10 20.239 10 70.5451 11 27.7878 10 97.8549 11 32.6124 10 20.4659 9 15.5606 10 76.5943 11 48.017 9 14.4072 9]
Total: 1154.1463000000003
Mean: 23.082926
Genome size: 95
Size: 96
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2479.8781864999996
Median total errors in population: 1166.1426
Error averages by case: (58.24389089999988 9.354 119.49317259999981 11.665 86.58154059999981 10.517 52.10280409999999 9.201 91.5468893000004 11.128 56.77610550000032 9.879 53.99332890000021 9.027 122.8205464 8.847 110.28306900000057 9.905 90.53388140000037 10.925 68.57516089999983 9.243 118.08294670000005 10.884 63.47726990000014 9.851 96.19598159999991 9.878 96.46379750000003 9.533 68.49086289999993 10.628 118.66750930000038 10.23 73.48497490000058 11.306 141.70085319999995 11.423 91.59477519999999 10.356 86.43093469999998 9.573 72.56614350000015 10.985 121.0550970000006 12.294 100.7623166000002 9.943 63.98633390000024 9.393)
Error minima by case: (5.9721 4 17.0069 5 5.2629 8 0.0525 3 23.3072 5 4.564 4 0.8212 4 0.4648 7 10.2161 3 1.7576 9 4.7577 7 8.5377 6 0.8342 3 2.9826 8 4.1183 4 2.7765 9 4.5177 4 14.3202 4 1.8075 5 0.6079 4 18.4271 4 9.4985 9 19.5791 6 2.0016 3 13.355 5)
Average genome size in population (length): 81.53
Average program size in population (points): 82.53
Average percent parens in population: 0.012
Minimum age in population: 15.6640625
Maximum age in population: 19.60595703125
Average age in population: 17.75024267578125
Median age in population: 17.788818359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.189
Error (vector) diversity:			 0.194
Behavioral diversity:				 0.195
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 20162285
--- Timings ---
Current time: 1529614875830 milliseconds
Total Time:          48.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.5 seconds, 42.6%
Fitness Testing:     21.9 seconds, 45.7%
Report:               5.5 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 58146.68260000003
Test mean error for best: 29.07334
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 60.05421      
Correct output: -131.0140839365 | Program output: -75.05421     
Correct output: -5.5592528532  | Program output: -38.05421     
Correct output: 59.9596444289  | Program output: 58.05421      
Correct output: -117.3614120131 | Program output: -93.05421     
Correct output: 86.6455800457  | Program output: 80.05421      
Correct output: 59.2320173294  | Program output: 55.05421      
Correct output: 12.464752481   | Program output: 91.05421      
Correct output: -91.236138991  | Program output: -41.05421     
Correct output: 23.7576154446  | Program output: 67.05421      
Correct output: 26.757722572   | Program output: 46.05421      
Correct output: 112.4622705725 | Program output: 34.05421      
Correct output: 2.834164078    | Program output: -7.05421      
Correct output: -49.0145736823 | Program output: -87.05421     
Correct output: -52.934708311  | Program output: -14.05421     
Correct output: 14.7764646206  | Program output: 34.05421      
Correct output: 42.5296882094  | Program output: -29.05421     
Correct output: -26.7724158498 | Program output: 0.05421       
Correct output: -47.8394536481 | Program output: 49.05421      
Correct output: -63.6278515914 | Program output: -32.05421     
Correct output: -107.481309225 | Program output: -88.05421     
Correct output: -10.4548540463 | Program output: -27.05421     
Correct output: -20.5788443492 | Program output: 55.05421      
Correct output: 4.0015797195   | Program output: -45.05421     
Correct output: 81.422575027   | Program output: 66.05421      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction float_dec} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_max} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (integer_div float_dec integer_add float_inc -57 integer_dup_items integer_min integer_inc integer_yankdup float_dup_items in2 float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap integer_sub in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_max float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [8.9279 10 55.9599 11 32.495 10 1.9054 8 24.3072 10 6.5914 9 4.1778 9 78.5895 8 50.1819 9 43.2966 10 19.2965 8 78.4081 10 9.8884 10 38.0396 9 38.8805 9 19.2777 9 71.5839 11 26.8266 11 96.8937 9 31.5736 9 19.4271 10 16.5994 10 75.6331 12 49.0558 9 15.3684 9]
Total: 1152.185
Mean: 23.0437
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2941.5263002999927
Median total errors in population: 1159.1863000000003
Error averages by case: (74.35875180000004 9.34 139.54584789999973 11.408 104.90107020000033 10.287 68.2971788000004 8.461 112.09095709999991 11.2 73.64621309999991 9.59 71.19789149999983 9.053 142.85356159999927 8.661 130.82760119999983 10.233 111.75149620000052 10.48 89.9238772999995 9.04 133.6408207000001 10.533 79.40082690000038 9.859 115.0956467999999 9.501 115.48309989999987 9.77 89.75309450000017 10.322 136.60227509999967 10.183 87.76981730000018 11.268 160.86845729999902 11.066 112.77133959999938 10.493 107.08564080000018 9.652 89.88933660000045 10.611 141.69589230000045 11.72 120.19359930000036 9.906 79.99000650000038 9.255)
Error minima by case: (5.9821 5 17.0401 6 5.5715 8 0.0426 5 16.3614 6 3.6456 5 1.232 5 8.5352 6 9.7639 4 1.7576 9 4.2423 7 8.5377 6 0.1738 4 19.4793 7 3.1193 5 6.2235 9 9.4703 5 1.0 4 8.2145 4 1.5737 5 6.4813 5 9.2761 9 19.5567 5 1.9474 4 12.4226 5)
Average genome size in population (length): 84.854
Average program size in population (points): 85.854
Average percent parens in population: 0.012
Minimum age in population: 16.8935546875
Maximum age in population: 21.515380859375
Average age in population: 19.3647294921875
Median age in population: 19.3848876953125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.858
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.858
Total error diversity:				 0.218
Error (vector) diversity:			 0.226
Behavioral diversity:				 0.226
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 22284385
--- Timings ---
Current time: 1529614879960 milliseconds
Total Time:          52.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.9 seconds, 42.2%
Fitness Testing:     23.9 seconds, 46.0%
Report:               6.0 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 58191.1248
Test mean error for best: 29.09556
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 59.054542     
Correct output: -131.0140839365 | Program output: -76.054542    
Correct output: -5.5592528532  | Program output: -39.054542    
Correct output: 59.9596444289  | Program output: 57.054542     
Correct output: -117.3614120131 | Program output: -94.054542    
Correct output: 86.6455800457  | Program output: 79.054542     
Correct output: 59.2320173294  | Program output: 54.054542     
Correct output: 12.464752481   | Program output: 90.054542     
Correct output: -91.236138991  | Program output: -42.054542    
Correct output: 23.7576154446  | Program output: 66.054542     
Correct output: 26.757722572   | Program output: 45.054542     
Correct output: 112.4622705725 | Program output: 33.054542     
Correct output: 2.834164078    | Program output: -8.054542     
Correct output: -49.0145736823 | Program output: -88.054542    
Correct output: -52.934708311  | Program output: -15.054542    
Correct output: 14.7764646206  | Program output: 33.054542     
Correct output: 42.5296882094  | Program output: -30.054542    
Correct output: -26.7724158498 | Program output: -1.054542     
Correct output: -47.8394536481 | Program output: 48.054542     
Correct output: -63.6278515914 | Program output: -33.054542    
Correct output: -107.481309225 | Program output: -89.054542    
Correct output: -10.4548540463 | Program output: -28.054542    
Correct output: -20.5788443492 | Program output: 54.054542     
Correct output: 4.0015797195   | Program output: -46.054542    
Correct output: 81.422575027   | Program output: 65.054542     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dec} {:instruction integer_add} {:instruction integer_dup_times} {:instruction -57} {:instruction float_sub} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (float_rot float_dec integer_add integer_dup_times -57 float_sub integer_min integer_inc integer_yankdup float_dup_items in2 float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec float_rot float_inc integer_min integer_yank integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [9.9276 10 54.9595 11 33.4953 9 2.9051 7 23.3069 12 7.591 10 5.1775 10 77.5898 8 49.1816 11 42.2969 9 18.2968 8 79.4077 11 10.8887 9 39.04 8 37.8802 10 18.2781 9 72.5842 12 25.7179 9 95.894 9 30.5733 9 18.4268 11 17.5997 8 74.6334 10 50.0561 10 16.368 8]
Total: 1150.0761
Mean: 23.001522
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3254.9445236999914
Median total errors in population: 1159.0763
Error averages by case: (90.68386619999987 9.399 153.08722189999975 11.414 116.73137260000075 10.175 84.72808200000051 8.54 127.22833259999948 11.195 90.12992159999995 9.611 86.40050829999996 9.033 155.55412559999905 8.909 139.27041479999957 10.021 123.05093830000038 10.359 100.75126189999924 8.725 146.55969239999993 10.457 91.84726010000034 9.925 131.85988609999998 9.364 123.29895680000003 9.81 100.13742460000043 10.142 147.43960949999945 10.254 99.82789240000035 11.245 171.81169109999894 10.659 120.72033929999921 10.265 122.00483449999992 9.923 101.84068190000033 10.595 152.10735650000046 11.531 130.90207870000017 9.828 96.43277400000053 9.159)
Error minima by case: (6.9249 4 18.0401 5 2.8934 7 0.0826 4 22.3072 5 4.5884 4 2.1748 4 1.4648 6 9.1819 3 1.7576 9 4.2423 6 8.5377 5 0.8342 3 2.0396 7 1.8805 4 3.7442 8 0.5297 4 1.0 3 3.2147 3 0.4263 4 17.4271 4 6.6611 8 15.4754 4 2.0016 3 13.3654 4)
Average genome size in population (length): 84.585
Average program size in population (points): 85.585
Average percent parens in population: 0.012
Minimum age in population: 18.66357421875
Maximum age in population: 22.9166259765625
Average age in population: 20.86930151367188
Median age in population: 20.90814208984375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.855
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.855
Total error diversity:				 0.244
Error (vector) diversity:			 0.255
Behavioral diversity:				 0.255
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 24399135
--- Timings ---
Current time: 1529614884464 milliseconds
Total Time:          56.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.5 seconds, 41.6%
Fitness Testing:     26.1 seconds, 46.3%
Report:               6.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 58172.3336
Test mean error for best: 29.08617
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.054542     
Correct output: -131.0140839365 | Program output: -77.054542    
Correct output: -5.5592528532  | Program output: -40.054542    
Correct output: 59.9596444289  | Program output: 56.054542     
Correct output: -117.3614120131 | Program output: -95.054542    
Correct output: 86.6455800457  | Program output: 78.054542     
Correct output: 59.2320173294  | Program output: 53.054542     
Correct output: 12.464752481   | Program output: 89.054542     
Correct output: -91.236138991  | Program output: -43.054542    
Correct output: 23.7576154446  | Program output: 65.054542     
Correct output: 26.757722572   | Program output: 44.054542     
Correct output: 112.4622705725 | Program output: 32.054542     
Correct output: 2.834164078    | Program output: -9.054542     
Correct output: -49.0145736823 | Program output: -89.054542    
Correct output: -52.934708311  | Program output: -16.054542    
Correct output: 14.7764646206  | Program output: 32.054542     
Correct output: 42.5296882094  | Program output: -31.054542    
Correct output: -26.7724158498 | Program output: -2.054542     
Correct output: -47.8394536481 | Program output: 47.054542     
Correct output: -63.6278515914 | Program output: -34.054542    
Correct output: -107.481309225 | Program output: -90.054542    
Correct output: -10.4548540463 | Program output: -29.054542    
Correct output: -20.5788443492 | Program output: 53.054542     
Correct output: 4.0015797195   | Program output: -47.054542    
Correct output: 81.422575027   | Program output: 64.054542     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (integer_pop float_shove in2 float_dec integer_dec integer_min integer_min integer_yank integer_swap integer_add in2 tagged_2 integer_yank integer_swap integer_dec float_dec float_rot float_inc integer_min integer_yank integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc integer_stackdepth float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [10.9276 9 53.9595 11 34.4953 9 3.9051 7 22.3069 12 8.591 10 6.1775 10 76.5898 8 48.1816 11 41.2969 9 17.2968 8 80.4077 10 11.8887 9 40.04 7 36.8802 10 17.2781 9 73.5842 12 24.7179 8 94.894 8 29.5733 10 17.4268 10 18.5997 8 73.6334 10 51.0561 10 17.368 8]
Total: 1144.0761
Mean: 22.881521
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3207.0644450999916
Median total errors in population: 1156.1847
Error averages by case: (90.17057359999973 9.57 146.91027939999984 11.481 113.9425216000005 10.115 84.47428080000033 8.774 119.82358839999978 10.989 88.7564052000001 9.713 86.40083230000013 8.846 151.93429929999934 8.711 135.0784772999997 9.736 121.8098786000004 10.166 100.20873309999963 8.638 150.06398280000047 10.586 92.88235560000027 9.903 126.24642149999997 9.218 122.51676479999999 9.624 99.70394550000054 10.126 147.58164669999968 10.445 101.15050920000034 11.185 170.04662289999922 10.581 117.55287069999956 9.975 114.5060734 10.062 100.50419910000019 10.661 150.52218030000014 11.734 128.68887380000027 9.554 96.10512920000069 9.09)
Error minima by case: (4.9821 4 18.0421 5 1.4948 7 0.0936 4 22.3069 5 2.6456 4 0.232 4 0.4648 6 10.1799 3 1.7576 8 4.7577 6 8.5377 5 1.78 3 9.0374 7 3.0806 4 2.7765 8 10.5297 4 1.0 3 2.2198 3 0.5717 4 17.4268 4 3.4008 8 13.5247 4 2.9474 3 11.4226 4)
Average genome size in population (length): 86.058
Average program size in population (points): 87.058
Average percent parens in population: 0.012
Minimum age in population: 19.98291015625
Maximum age in population: 24.14990234375
Average age in population: 22.26961291503906
Median age in population: 22.28759765625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.826
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.826
Total error diversity:				 0.27
Error (vector) diversity:			 0.287
Behavioral diversity:				 0.287
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 26551010
--- Timings ---
Current time: 1529614888390 milliseconds
Total Time:          60.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.9 seconds, 41.2%
Fitness Testing:     28.0 seconds, 46.3%
Report:               7.4 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 58172.3336
Test mean error for best: 29.08617
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.054542     
Correct output: -131.0140839365 | Program output: -77.054542    
Correct output: -5.5592528532  | Program output: -40.054542    
Correct output: 59.9596444289  | Program output: 56.054542     
Correct output: -117.3614120131 | Program output: -95.054542    
Correct output: 86.6455800457  | Program output: 78.054542     
Correct output: 59.2320173294  | Program output: 53.054542     
Correct output: 12.464752481   | Program output: 89.054542     
Correct output: -91.236138991  | Program output: -43.054542    
Correct output: 23.7576154446  | Program output: 65.054542     
Correct output: 26.757722572   | Program output: 44.054542     
Correct output: 112.4622705725 | Program output: 32.054542     
Correct output: 2.834164078    | Program output: -9.054542     
Correct output: -49.0145736823 | Program output: -89.054542    
Correct output: -52.934708311  | Program output: -16.054542    
Correct output: 14.7764646206  | Program output: 32.054542     
Correct output: 42.5296882094  | Program output: -31.054542    
Correct output: -26.7724158498 | Program output: -2.054542     
Correct output: -47.8394536481 | Program output: 47.054542     
Correct output: -63.6278515914 | Program output: -34.054542    
Correct output: -107.481309225 | Program output: -90.054542    
Correct output: -10.4548540463 | Program output: -29.054542    
Correct output: -20.5788443492 | Program output: 53.054542     
Correct output: 4.0015797195   | Program output: -47.054542    
Correct output: 81.422575027   | Program output: 64.054542     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction float_add} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (integer_pop float_shove in2 float_dec integer_dec integer_min integer_min integer_yank integer_swap integer_add in2 tagged_2 integer_yank integer_swap integer_dec float_dec float_rot float_inc integer_min float_yankdup integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc integer_stackdepth float_dec float_add integer_yank float_add integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [10.9276 9 53.9595 11 34.4953 9 3.9051 7 22.3069 12 8.591 10 6.1775 10 76.5898 8 48.1816 11 41.2969 9 17.2968 8 80.4077 10 11.8887 9 40.04 7 36.8802 10 17.2781 9 73.5842 12 24.7179 8 94.894 8 29.5733 10 17.4268 10 18.5997 8 73.6334 10 51.0561 10 17.368 8]
Total: 1144.0761
Mean: 22.881521
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3819.590308700002
Median total errors in population: 1155.1829
Error averages by case: (113.38912929999982 9.637 171.21136319999943 11.453 141.8458310000004 10.148 107.38217300000008 8.848 144.58581389999983 10.859 111.97165749999978 9.675 109.29268219999982 8.749 174.63441569999983 8.46 161.94293280000065 9.659 144.20531560000012 10.005 123.45139849999988 8.707 172.27334050000073 10.806 120.72748440000022 9.744 151.05919000000017 9.167 150.42692250000036 9.553 123.24365730000046 10.235 174.2797391999998 10.651 123.01859130000067 10.988 191.60079000000033 10.649 144.93549429999993 9.809 139.90412350000017 10.08 128.50158079999977 10.566 172.47776029999935 11.842 155.5630091000003 9.313 119.05391280000039 9.009)
Error minima by case: (1.925 4 16.998 5 4.7365 7 0.0949 4 22.3069 5 3.5606 4 1.172 4 0.4648 6 10.1819 3 2.7576 7 3.2035 6 8.5377 5 0.2634 3 5.9604 7 4.1224 4 2.7765 8 8.6025 4 1.0 3 9.2126 3 0.5736 4 17.4268 4 2.5993 8 4.5218 4 1.9496 3 12.3516 4)
Average genome size in population (length): 91.322
Average program size in population (points): 92.322
Average percent parens in population: 0.011
Minimum age in population: 20.98291015625
Maximum age in population: 25.6793212890625
Average age in population: 23.61415231323242
Median age in population: 23.63836669921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.858
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.858
Total error diversity:				 0.31
Error (vector) diversity:			 0.352
Behavioral diversity:				 0.352
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 28834360
--- Timings ---
Current time: 1529614892961 milliseconds
Total Time:          65.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.4 seconds, 40.6%
Fitness Testing:     30.5 seconds, 46.9%
Report:               8.0 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 58172.3336
Test mean error for best: 29.08617
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.054542     
Correct output: -131.0140839365 | Program output: -77.054542    
Correct output: -5.5592528532  | Program output: -40.054542    
Correct output: 59.9596444289  | Program output: 56.054542     
Correct output: -117.3614120131 | Program output: -95.054542    
Correct output: 86.6455800457  | Program output: 78.054542     
Correct output: 59.2320173294  | Program output: 53.054542     
Correct output: 12.464752481   | Program output: 89.054542     
Correct output: -91.236138991  | Program output: -43.054542    
Correct output: 23.7576154446  | Program output: 65.054542     
Correct output: 26.757722572   | Program output: 44.054542     
Correct output: 112.4622705725 | Program output: 32.054542     
Correct output: 2.834164078    | Program output: -9.054542     
Correct output: -49.0145736823 | Program output: -89.054542    
Correct output: -52.934708311  | Program output: -16.054542    
Correct output: 14.7764646206  | Program output: 32.054542     
Correct output: 42.5296882094  | Program output: -31.054542    
Correct output: -26.7724158498 | Program output: -2.054542     
Correct output: -47.8394536481 | Program output: 47.054542     
Correct output: -63.6278515914 | Program output: -34.054542    
Correct output: -107.481309225 | Program output: -90.054542    
Correct output: -10.4548540463 | Program output: -29.054542    
Correct output: -20.5788443492 | Program output: 53.054542     
Correct output: 4.0015797195   | Program output: -47.054542    
Correct output: 81.422575027   | Program output: 64.054542     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (integer_pop float_shove in2 float_dec integer_dec integer_min integer_add integer_yank integer_swap integer_add in2 tagged_2 integer_yank integer_swap integer_dec float_dec float_rot float_inc integer_min integer_yank integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc integer_stackdepth float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [10.9276 9 53.9595 11 34.4953 9 3.9051 7 22.3069 12 8.591 10 6.1775 10 76.5898 8 48.1816 11 41.2969 9 17.2968 8 80.4077 10 11.8887 9 40.04 7 36.8802 10 17.2781 9 73.5842 12 24.7179 8 94.894 8 29.5733 10 17.4268 10 18.5997 8 73.6334 10 51.0561 10 17.368 8]
Total: 1144.0761
Mean: 22.881521
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3982.695859000002
Median total errors in population: 1153.185
Error averages by case: (119.78914839999983 9.542 179.49772749999929 11.329 149.42104960000017 9.912 114.46423210000017 8.746 152.89815619999973 11.004 119.22441099999963 9.478 116.44803739999975 8.79 179.05088460000033 8.668 168.42170490000066 9.755 149.34490310000035 9.887 128.76516669999972 8.452 179.2457680000006 10.742 127.02738299999994 9.649 160.68439049999995 9.161 156.08158299999997 9.667 128.67579510000058 10.004 181.93972459999975 10.668 127.45270760000052 10.759 195.55693040000014 10.369 151.7023830000003 9.69 148.24754430000021 10.192 135.95109990000003 10.168 177.71442139999974 11.517 163.0770770000004 9.441 125.52862970000045 8.895)
Error minima by case: (5.9821 6 19.0013 7 5.2489 7 0.0924 6 21.3072 7 3.6456 6 1.232 6 0.4648 6 9.2206 5 0.2967 7 2.7034 5 8.5377 7 0.782 5 3.395 7 5.0807 6 2.7765 8 6.4771 6 1.0 4 1.2198 5 0.3876 6 16.4271 6 10.1627 8 19.5243 6 1.9494 5 12.4226 6)
Average genome size in population (length): 97.973
Average program size in population (points): 98.973
Average percent parens in population: 0.010
Minimum age in population: 22.566650390625
Maximum age in population: 26.77882385253906
Average age in population: 24.97891149902344
Median age in population: 25.03968048095703
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.349
Error (vector) diversity:			 0.401
Behavioral diversity:				 0.402
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 31283710
--- Timings ---
Current time: 1529614897326 milliseconds
Total Time:          69.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.9 seconds, 40.1%
Fitness Testing:     32.8 seconds, 47.2%
Report:               8.7 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 58172.3336
Test mean error for best: 29.08617
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.054542     
Correct output: -131.0140839365 | Program output: -77.054542    
Correct output: -5.5592528532  | Program output: -40.054542    
Correct output: 59.9596444289  | Program output: 56.054542     
Correct output: -117.3614120131 | Program output: -95.054542    
Correct output: 86.6455800457  | Program output: 78.054542     
Correct output: 59.2320173294  | Program output: 53.054542     
Correct output: 12.464752481   | Program output: 89.054542     
Correct output: -91.236138991  | Program output: -43.054542    
Correct output: 23.7576154446  | Program output: 65.054542     
Correct output: 26.757722572   | Program output: 44.054542     
Correct output: 112.4622705725 | Program output: 32.054542     
Correct output: 2.834164078    | Program output: -9.054542     
Correct output: -49.0145736823 | Program output: -89.054542    
Correct output: -52.934708311  | Program output: -16.054542    
Correct output: 14.7764646206  | Program output: 32.054542     
Correct output: 42.5296882094  | Program output: -31.054542    
Correct output: -26.7724158498 | Program output: -2.054542     
Correct output: -47.8394536481 | Program output: 47.054542     
Correct output: -63.6278515914 | Program output: -34.054542    
Correct output: -107.481309225 | Program output: -90.054542    
Correct output: -10.4548540463 | Program output: -29.054542    
Correct output: -20.5788443492 | Program output: 53.054542     
Correct output: 4.0015797195   | Program output: -47.054542    
Correct output: 81.422575027   | Program output: 64.054542     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_shove} {:instruction in2} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_add} {:instruction in2} {:instruction tagged_2} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction float_add} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (integer_pop float_shove in2 float_dec integer_dec integer_min integer_min integer_yank integer_swap integer_add in2 tagged_2 integer_yank integer_swap integer_dec float_dec float_rot float_inc integer_min float_yankdup integer_swap integer_dec in2 tagged_2 float_div integer_yankdup float_yank float_frominteger integer_yankdup float_div float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc integer_stackdepth float_dec float_add integer_yank float_add integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [10.9276 9 53.9595 11 34.4953 9 3.9051 7 22.3069 12 8.591 10 6.1775 10 76.5898 8 48.1816 11 41.2969 9 17.2968 8 80.4077 10 11.8887 9 40.04 7 36.8802 10 17.2781 9 73.5842 12 24.7179 8 94.894 8 29.5733 10 17.4268 10 18.5997 8 73.6334 10 51.0561 10 17.368 8]
Total: 1144.0761
Mean: 22.881521
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3957.5227878000014
Median total errors in population: 1151.1828
Error averages by case: (121.34505049999963 9.423 172.07566379999923 11.42 147.84086670000022 9.418 115.2419374000002 8.465 144.80431059999947 11.364 119.5979142999996 9.492 117.21633900000005 8.942 180.79151899999977 8.734 164.89587700000052 9.996 150.48673039999994 9.509 129.83162219999974 8.054 181.0589403000005 10.651 127.58073199999984 9.579 154.4682943999999 8.808 153.39072170000026 9.967 129.6934796 9.912 181.22991290000033 10.868 134.4088523000008 10.388 197.2396108000003 10.222 148.16030989999996 9.635 140.33190319999986 10.283 134.2407520000004 9.727 178.48379609999952 11.11 161.86763629999987 9.642 126.99401540000042 8.637)
Error minima by case: (6.925 6 20.0405 7 3.6477 6 0.0949 6 21.3069 7 4.5884 6 2.1749 6 1.4477 6 8.1816 5 12.7405 7 15.7406 5 8.5377 7 1.7796 5 4.6548 7 0.7347 6 3.7594 8 11.4703 6 1.0 5 5.83 5 1.4267 6 16.4268 6 7.7645 7 19.5634 6 2.947 5 13.3654 6)
Average genome size in population (length): 101.098
Average program size in population (points): 102.098
Average percent parens in population: 0.010
Minimum age in population: 23.566650390625
Maximum age in population: 28.35170745849609
Average age in population: 26.43464099884033
Median age in population: 26.4921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.355
Error (vector) diversity:			 0.427
Behavioral diversity:				 0.427
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 33811185
--- Timings ---
Current time: 1529614901747 milliseconds
Total Time:          73.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.3 seconds, 39.6%
Fitness Testing:     35.3 seconds, 47.8%
Report:               9.2 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 58270.717899999974
Test mean error for best: 29.13536
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 60.054542     
Correct output: -131.0140839365 | Program output: -75.054542    
Correct output: -5.5592528532  | Program output: -38.054542    
Correct output: 59.9596444289  | Program output: 58.054542     
Correct output: -117.3614120131 | Program output: -93.054542    
Correct output: 86.6455800457  | Program output: 78.054542     
Correct output: 59.2320173294  | Program output: 55.054542     
Correct output: 12.464752481   | Program output: 78.054542     
Correct output: -91.236138991  | Program output: -41.054542    
Correct output: 23.7576154446  | Program output: 67.054542     
Correct output: 26.757722572   | Program output: 46.054542     
Correct output: 112.4622705725 | Program output: 34.054542     
Correct output: 2.834164078    | Program output: -7.054542     
Correct output: -49.0145736823 | Program output: -87.054542    
Correct output: -52.934708311  | Program output: -14.054542    
Correct output: 14.7764646206  | Program output: 34.054542     
Correct output: 42.5296882094  | Program output: -29.054542    
Correct output: -26.7724158498 | Program output: 0.054542      
Correct output: -47.8394536481 | Program output: 49.054542     
Correct output: -63.6278515914 | Program output: -32.054542    
Correct output: -107.481309225 | Program output: -88.054542    
Correct output: -10.4548540463 | Program output: -27.054542    
Correct output: -20.5788443492 | Program output: 55.054542     
Correct output: 4.0015797195   | Program output: -45.054542    
Correct output: 81.422575027   | Program output: 66.054542     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_max} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction in1} {:instruction integer_dup_items} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction integer_dup} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction float_sin} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_max tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger print_integer float_div float_stackdepth integer_shove float_swap integer_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove print_float integer_flush integer_swap tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth in1 integer_dup_items float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin tagged_764 float_mod in1 float_swap integer_dup integer_swap 52 float_mod integer_yank integer_min float_sin float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [8.9276 9 55.9595 11 32.4953 9 1.9051 7 24.3069 12 8.591 10 4.1775 10 65.5898 8 50.1816 10 43.2969 9 19.2968 7 78.4077 11 9.8887 9 38.04 8 38.8802 10 19.2781 8 71.5842 11 26.827 10 96.894 9 31.5733 9 19.4268 11 16.5997 8 75.6334 10 49.0561 10 15.368 8]
Total: 1136.1852
Mean: 22.723703
Genome size: 125
Size: 126
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3970.112108399994
Median total errors in population: 1149.1852
Error averages by case: (121.1466974999991 9.371 174.1715202999989 11.497 147.59726869999972 9.147 115.89367590000073 8.133 147.212194199999 11.594 120.63611609999975 9.527 117.89565420000075 9.184 180.80253549999892 8.581 164.90808070000043 10.228 151.51864579999938 9.23 131.3516239999992 7.916 182.07905720000107 10.522 127.26228079999936 9.536 154.84363559999932 8.713 155.55185450000073 10.056 129.58441619999923 9.926 181.3454103000007 10.954 131.73431810000116 10.08 198.69994300000016 10.083 148.13077670000018 9.754 141.9209987999998 10.371 133.3083279000008 9.392 180.04424539999974 10.829 162.6376418999994 9.777 126.94318910000064 8.491)
Error minima by case: (7.9186 7 52.9595 9 2.5047 6 0.8981 6 21.3069 9 5.562 7 3.1735 6 1.9103 6 32.1816 7 11.7962 7 16.2948 5 10.4623 9 0.7799 8 0.957 6 2.1198 8 4.455 8 6.2737 9 1.0 7 3.2198 7 4.5733 8 16.4268 8 7.4003 7 19.9421 8 1.9474 7 14.353 7)
Average genome size in population (length): 101.886
Average program size in population (points): 102.886
Average percent parens in population: 0.010
Minimum age in population: 25.1185302734375
Maximum age in population: 29.69880294799805
Average age in population: 27.87283114242554
Median age in population: 27.92533111572266
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.89
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.89
Total error diversity:				 0.323
Error (vector) diversity:			 0.403
Behavioral diversity:				 0.403
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 36358435
--- Timings ---
Current time: 1529614906365 milliseconds
Total Time:          78.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        30.8 seconds, 39.2%
Fitness Testing:     37.8 seconds, 48.2%
Report:               9.7 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 58270.717899999974
Test mean error for best: 29.13536
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 60.054542     
Correct output: -131.0140839365 | Program output: -75.054542    
Correct output: -5.5592528532  | Program output: -38.054542    
Correct output: 59.9596444289  | Program output: 58.054542     
Correct output: -117.3614120131 | Program output: -93.054542    
Correct output: 86.6455800457  | Program output: 78.054542     
Correct output: 59.2320173294  | Program output: 55.054542     
Correct output: 12.464752481   | Program output: 78.054542     
Correct output: -91.236138991  | Program output: -41.054542    
Correct output: 23.7576154446  | Program output: 67.054542     
Correct output: 26.757722572   | Program output: 46.054542     
Correct output: 112.4622705725 | Program output: 34.054542     
Correct output: 2.834164078    | Program output: -7.054542     
Correct output: -49.0145736823 | Program output: -87.054542    
Correct output: -52.934708311  | Program output: -14.054542    
Correct output: 14.7764646206  | Program output: 34.054542     
Correct output: 42.5296882094  | Program output: -29.054542    
Correct output: -26.7724158498 | Program output: 0.054542      
Correct output: -47.8394536481 | Program output: 49.054542     
Correct output: -63.6278515914 | Program output: -32.054542    
Correct output: -107.481309225 | Program output: -88.054542    
Correct output: -10.4548540463 | Program output: -27.054542    
Correct output: -20.5788443492 | Program output: 55.054542     
Correct output: 4.0015797195   | Program output: -45.054542    
Correct output: 81.422575027   | Program output: 66.054542     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_max} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction in1} {:instruction integer_dup_items} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction integer_dup} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction float_sin} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_max tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger print_integer float_div float_stackdepth integer_shove float_swap integer_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove print_float integer_flush integer_swap tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth in1 integer_dup_items float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin tagged_764 float_mod in1 float_swap integer_dup integer_swap 52 float_mod integer_yank integer_min float_sin float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [8.9276 9 55.9595 11 32.4953 9 1.9051 7 24.3069 12 8.591 10 4.1775 10 65.5898 8 50.1816 10 43.2969 9 19.2968 7 78.4077 11 9.8887 9 38.04 8 38.8802 10 19.2781 8 71.5842 11 26.827 10 96.894 9 31.5733 9 19.4268 11 16.5997 8 75.6334 10 49.0561 10 15.368 8]
Total: 1136.1852
Mean: 22.723703
Genome size: 125
Size: 126
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4376.533477399994
Median total errors in population: 1148.1828
Error averages by case: (136.72748199999862 9.417 191.33869959999882 11.437 166.2714506000005 9.211 130.6422843000012 8.189 164.86399539999857 11.663 135.23867649999977 9.564 132.62466750000073 9.346 194.3628433999982 8.701 183.25830060000158 10.3 165.0625806999989 9.388 144.52991399999982 8.015 196.4367592000018 10.461 146.6495657000002 9.501 173.98965650000042 8.641 172.6419019000019 10.093 144.75784799999914 9.847 199.24365300000207 11.092 148.58521640000006 9.78 210.65720400000023 9.689 166.900339199999 9.805 160.49633089999926 10.481 153.20908529999974 9.258 192.200301799999 10.746 179.91673339999844 9.896 142.9139875000001 8.493)
Error minima by case: (4.0734 6 19.038 9 4.502 7 0.9001 6 21.3069 9 2.6135 6 3.1728 6 11.4102 6 7.1826 7 8.2424 7 5.2423 5 22.5531 8 1.1675 7 2.395 6 3.1174 8 13.7219 8 0.5297 8 19.8472 6 1.2198 7 0.4242 7 16.4268 8 3.6007 7 19.1865 8 2.9107 7 2.367 7)
Average genome size in population (length): 101.645
Average program size in population (points): 102.645
Average percent parens in population: 0.010
Minimum age in population: 26.56779479980469
Maximum age in population: 31.16192626953125
Average age in population: 29.32143312835693
Median age in population: 29.37875270843506
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.895
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.895
Total error diversity:				 0.33
Error (vector) diversity:			 0.414
Behavioral diversity:				 0.414
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 38899685
--- Timings ---
Current time: 1529614911029 milliseconds
Total Time:          83.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.2 seconds, 38.8%
Fitness Testing:     40.3 seconds, 48.6%
Report:              10.4 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 58270.717899999974
Test mean error for best: 29.13536
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 60.054542     
Correct output: -131.0140839365 | Program output: -75.054542    
Correct output: -5.5592528532  | Program output: -38.054542    
Correct output: 59.9596444289  | Program output: 58.054542     
Correct output: -117.3614120131 | Program output: -93.054542    
Correct output: 86.6455800457  | Program output: 78.054542     
Correct output: 59.2320173294  | Program output: 55.054542     
Correct output: 12.464752481   | Program output: 78.054542     
Correct output: -91.236138991  | Program output: -41.054542    
Correct output: 23.7576154446  | Program output: 67.054542     
Correct output: 26.757722572   | Program output: 46.054542     
Correct output: 112.4622705725 | Program output: 34.054542     
Correct output: 2.834164078    | Program output: -7.054542     
Correct output: -49.0145736823 | Program output: -87.054542    
Correct output: -52.934708311  | Program output: -14.054542    
Correct output: 14.7764646206  | Program output: 34.054542     
Correct output: 42.5296882094  | Program output: -29.054542    
Correct output: -26.7724158498 | Program output: 0.054542      
Correct output: -47.8394536481 | Program output: 49.054542     
Correct output: -63.6278515914 | Program output: -32.054542    
Correct output: -107.481309225 | Program output: -88.054542    
Correct output: -10.4548540463 | Program output: -27.054542    
Correct output: -20.5788443492 | Program output: 55.054542     
Correct output: 4.0015797195   | Program output: -45.054542    
Correct output: 81.422575027   | Program output: 66.054542     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_max} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_add} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction in1} {:instruction integer_dup_items} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction float_min} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction integer_dup} {:instruction integer_swap} {:instruction 52} {:instruction integer_shove} {:instruction integer_yank} {:instruction integer_min} {:instruction float_sin} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_max tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove integer_add float_sub float_yank float_frominteger print_integer float_div float_stackdepth integer_shove float_swap integer_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove print_float integer_flush integer_swap tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth in1 integer_dup_items float_swap integer_swap 52 float_mod float_min integer_min integer_inc float_sin tagged_764 float_mod in1 float_swap integer_dup integer_swap 52 integer_shove integer_yank integer_min float_sin float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [8.9276 9 55.9595 11 32.4953 9 1.9051 7 24.3069 12 8.591 10 4.1775 10 65.5898 8 50.1816 10 43.2969 9 19.2968 7 78.4077 11 9.8887 9 38.04 8 38.8802 10 19.2781 8 71.5842 11 26.827 10 96.894 9 31.5733 9 19.4268 11 16.5997 8 75.6334 10 49.0561 10 15.368 8]
Total: 1136.1852
Mean: 22.723703
Genome size: 125
Size: 126
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3424.1385813999914
Median total errors in population: 1146.1852
Error averages by case: (97.46889199999966 9.423 152.6118665999989 11.294 130.12469999999905 9.214 92.0369998000012 8.112 124.98516929999934 11.675 97.10008230000004 9.859 92.98555080000052 9.459 156.3511302999995 8.678 145.41920660000008 10.468 126.45403170000071 9.42 106.08420799999871 8.207 160.5257256000004 10.309 107.9540085999998 9.468 137.195868699999 8.22 133.5514712999998 10.052 105.64845949999976 9.823 164.08998750000032 11.441 111.92290710000131 9.193 173.77320590000022 9.136 128.45502070000043 9.934 120.47644710000043 10.326 115.12735100000084 9.031 154.61377320000022 10.705 143.7871690000001 9.929 103.51934880000077 8.5)
Error minima by case: (7.9206 7 19.0405 9 2.5047 6 0.9001 6 20.3069 8 5.564 7 3.1749 7 11.4073 7 4.184 8 8.2424 7 5.2423 5 15.4077 8 1.2796 8 9.04 6 2.1198 8 13.6098 8 10.5297 9 19.7669 7 0.7849 7 0.4267 8 15.4268 8 7.4003 7 13.5733 8 2.9334 8 14.355 7)
Average genome size in population (length): 101.045
Average program size in population (points): 102.045
Average percent parens in population: 0.010
Minimum age in population: 28.07435989379883
Maximum age in population: 32.57722949981689
Average age in population: 30.81193166542053
Median age in population: 30.83400201797485
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.88
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.88
Total error diversity:				 0.285
Error (vector) diversity:			 0.355
Behavioral diversity:				 0.355
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 41425910
--- Timings ---
Current time: 1529614915614 milliseconds
Total Time:          87.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.7 seconds, 38.4%
Fitness Testing:     42.8 seconds, 48.7%
Report:              11.1 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 58162.76830000002
Test mean error for best: 29.08138
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 60.0520542    
Correct output: -131.0140839365 | Program output: -75.0520542   
Correct output: -5.5592528532  | Program output: -38.0520542   
Correct output: 59.9596444289  | Program output: 58.0520542    
Correct output: -117.3614120131 | Program output: -93.0520542   
Correct output: 86.6455800457  | Program output: 78.0520542    
Correct output: 59.2320173294  | Program output: 55.0520542    
Correct output: 12.464752481   | Program output: 78.0520542    
Correct output: -91.236138991  | Program output: -41.0520542   
Correct output: 23.7576154446  | Program output: 67.0520542    
Correct output: 26.757722572   | Program output: 46.0520542    
Correct output: 112.4622705725 | Program output: 34.0520542    
Correct output: 2.834164078    | Program output: -7.0520542    
Correct output: -49.0145736823 | Program output: -87.0520542   
Correct output: -52.934708311  | Program output: -14.0520542   
Correct output: 14.7764646206  | Program output: 34.0520542    
Correct output: 42.5296882094  | Program output: -29.0520542   
Correct output: -26.7724158498 | Program output: 0.0520542     
Correct output: -47.8394536481 | Program output: 49.0520542    
Correct output: -63.6278515914 | Program output: -32.0520542   
Correct output: -107.481309225 | Program output: -88.0520542   
Correct output: -10.4548540463 | Program output: -27.0520542   
Correct output: -20.5788443492 | Program output: 55.0520542    
Correct output: 4.0015797195   | Program output: -45.0520542   
Correct output: 81.422575027   | Program output: 66.0520542    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_max} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_div} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction tagged_764} {:instruction float_mod} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction float_cos} {:instruction float_swap} {:instruction integer_rot} {:instruction integer_pop} {:instruction 52} {:instruction float_mod} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_dup} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_min} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction float_stackdepth} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_max tagged_2 float_div integer_yankdup float_div float_mod integer_swap float_add float_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger print_integer float_div float_stackdepth integer_shove float_swap integer_flush integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec float_div float_stackdepth integer_shove print_float integer_flush integer_swap tagged_764 float_mod integer_yankdup tagged_764 float_mod float_cos float_swap integer_rot integer_pop 52 float_mod integer_min integer_min integer_mod print_integer float_inc float_stackdepth integer_yankdup integer_yank integer_shove integer_mod print_integer float_swap integer_swap integer_sub in1 float_swap float_swap integer_swap 52 float_mod integer_yank integer_min integer_inc integer_dup float_dec float_add integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove float_min print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod float_stackdepth integer_max integer_shove integer_mod print_integer float_inc)
Errors: [8.9301 8 55.962 11 32.4928 8 1.9076 8 24.3094 11 8.5935 9 4.18 8 65.5873 9 50.1841 10 43.2944 9 19.2943 6 78.4102 9 9.8862 10 38.0375 9 38.8827 10 19.2756 9 71.5817 9 26.8245 10 96.8915 10 31.5758 10 19.4293 10 16.5972 9 75.6309 11 49.0536 10 15.3705 8]
Total: 1133.1827
Mean: 22.663654
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3225.4049325999918
Median total errors in population: 1144.1852
Error averages by case: (85.98185639999977 9.318 151.14722689999883 11.341 125.35828439999953 9.22 79.15084640000092 8.125 123.19853049999922 11.598 84.52353900000011 9.903 81.8080482000001 9.351 144.21502730000026 8.625 140.8098422999999 10.416 113.64430620000049 9.26 93.16379719999907 8.194 150.4068434000001 10.135 102.78514789999964 9.392 135.31147699999914 8.252 128.5685248999999 10.021 92.6093983999999 9.823 159.90272690000037 11.412 101.32004040000105 8.948 162.91422210000016 9.032 123.65127500000041 9.994 118.64496030000045 10.243 110.85494190000058 9.028 142.47573200000042 10.77 139.69032510000025 9.855 92.49601250000055 8.516)
Error minima by case: (6.9276 5 51.9595 6 2.5037 6 0.0949 5 20.3069 6 0.1784 5 2.1775 5 9.5352 6 32.1816 4 0.2969 7 2.7032 5 19.5899 6 0.782 4 8.0375 6 4.1173 5 7.2235 8 16.4755 5 1.0 4 3.2151 4 4.5733 5 15.4268 5 7.3993 7 19.134 5 1.9494 4 3.3772 5)
Average genome size in population (length): 102.467
Average program size in population (points): 103.467
Average percent parens in population: 0.010
Minimum age in population: 30.33508682250977
Maximum age in population: 34.0842866897583
Average age in population: 32.29620082807541
Median age in population: 32.3447732925415
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.885
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.885
Total error diversity:				 0.303
Error (vector) diversity:			 0.38
Behavioral diversity:				 0.38
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 43987660
--- Timings ---
Current time: 1529614920262 milliseconds
Total Time:          92.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.2 seconds, 38.2%
Fitness Testing:     45.2 seconds, 49.0%
Report:              11.7 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 58085.51980000001
Test mean error for best: 29.04276
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.0571542    
Correct output: -131.0140839365 | Program output: -77.0571542   
Correct output: -5.5592528532  | Program output: -40.0571542   
Correct output: 59.9596444289  | Program output: 56.0571542    
Correct output: -117.3614120131 | Program output: -95.0571542   
Correct output: 86.6455800457  | Program output: 76.0571542    
Correct output: 59.2320173294  | Program output: 53.0571542    
Correct output: 12.464752481   | Program output: 76.0571542    
Correct output: -91.236138991  | Program output: -43.0571542   
Correct output: 23.7576154446  | Program output: 65.0571542    
Correct output: 26.757722572   | Program output: 44.0571542    
Correct output: 112.4622705725 | Program output: 32.0571542    
Correct output: 2.834164078    | Program output: -9.0571542    
Correct output: -49.0145736823 | Program output: -89.0571542   
Correct output: -52.934708311  | Program output: -16.0571542   
Correct output: 14.7764646206  | Program output: 32.0571542    
Correct output: 42.5296882094  | Program output: -31.0571542   
Correct output: -26.7724158498 | Program output: -2.0571542    
Correct output: -47.8394536481 | Program output: 47.0571542    
Correct output: -63.6278515914 | Program output: -34.0571542   
Correct output: -107.481309225 | Program output: -90.0571542   
Correct output: -10.4548540463 | Program output: -29.0571542   
Correct output: -20.5788443492 | Program output: 53.0571542    
Correct output: 4.0015797195   | Program output: -47.0571542   
Correct output: 81.422575027   | Program output: 64.0571542    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_float} {:instruction integer_mult} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_div} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_inc integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger integer_dec integer_mult float_stackdepth integer_shove float_swap integer_inc integer_yankdup integer_div print_float integer_mult float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_div float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [10.925 9 53.9569 12 34.4979 9 3.9025 8 22.3043 12 10.5884 9 6.1749 9 63.5924 9 48.179 10 41.2995 7 17.2994 7 80.4051 9 11.8913 9 40.0426 7 36.8776 10 17.2807 10 73.5868 12 24.7153 8 94.8966 9 29.5707 9 17.4242 10 18.6023 9 73.636 10 51.0587 9 17.3654 8]
Total: 1130.0735000000002
Mean: 22.60147
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3484.8740764999948
Median total errors in population: 1144.0762
Error averages by case: (105.08890219999903 9.316 151.09413029999897 11.385 127.56819419999984 9.243 98.73529720000079 8.307 123.76043819999904 11.468 104.30456000000001 9.928 100.64113380000038 9.13 160.78548299999954 8.75 143.94815010000008 10.174 132.52453310000038 9.23 111.58149979999918 8.14 166.12024150000067 10.128 107.25308219999938 9.475 134.4967493999995 8.517 132.30440710000002 10.016 111.05241239999937 9.959 161.81926840000034 11.239 117.92703650000085 9.128 179.32172600000035 9.276 126.74321230000048 9.922 119.10182320000038 10.273 113.70505830000045 9.265 160.37067819999953 10.935 141.95043140000007 9.73 111.1286277000007 8.613)
Error minima by case: (7.0724 4 51.962 5 1.5047 6 0.8991 4 20.3094 5 5.563 4 1.8205 4 1.4648 6 31.1816 3 1.7576 6 4.2968 5 33.4077 5 0.0898 3 0.088 6 3.8321 4 3.7765 8 3.5225 4 0.2821 3 0.2127 3 3.5733 4 15.4293 4 6.4003 7 16.5243 4 0.0016 3 2.368 4)
Average genome size in population (length): 106.381
Average program size in population (points): 107.381
Average percent parens in population: 0.009
Minimum age in population: 31.36264038085938
Maximum age in population: 35.33703374862671
Average age in population: 33.71557324194908
Median age in population: 33.73842859268188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.91
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.91
Total error diversity:				 0.359
Error (vector) diversity:			 0.452
Behavioral diversity:				 0.453
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 46647310
--- Timings ---
Current time: 1529614924904 milliseconds
Total Time:          97.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.8 seconds, 37.9%
Fitness Testing:     47.7 seconds, 49.2%
Report:              12.5 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 58085.51980000001
Test mean error for best: 29.04276
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.0571542    
Correct output: -131.0140839365 | Program output: -77.0571542   
Correct output: -5.5592528532  | Program output: -40.0571542   
Correct output: 59.9596444289  | Program output: 56.0571542    
Correct output: -117.3614120131 | Program output: -95.0571542   
Correct output: 86.6455800457  | Program output: 76.0571542    
Correct output: 59.2320173294  | Program output: 53.0571542    
Correct output: 12.464752481   | Program output: 76.0571542    
Correct output: -91.236138991  | Program output: -43.0571542   
Correct output: 23.7576154446  | Program output: 65.0571542    
Correct output: 26.757722572   | Program output: 44.0571542    
Correct output: 112.4622705725 | Program output: 32.0571542    
Correct output: 2.834164078    | Program output: -9.0571542    
Correct output: -49.0145736823 | Program output: -89.0571542   
Correct output: -52.934708311  | Program output: -16.0571542   
Correct output: 14.7764646206  | Program output: 32.0571542    
Correct output: 42.5296882094  | Program output: -31.0571542   
Correct output: -26.7724158498 | Program output: -2.0571542    
Correct output: -47.8394536481 | Program output: 47.0571542    
Correct output: -63.6278515914 | Program output: -34.0571542   
Correct output: -107.481309225 | Program output: -90.0571542   
Correct output: -10.4548540463 | Program output: -29.0571542   
Correct output: -20.5788443492 | Program output: 53.0571542    
Correct output: 4.0015797195   | Program output: -47.0571542   
Correct output: 81.422575027   | Program output: 64.0571542    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_float} {:instruction integer_mult} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_div} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_inc integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger integer_dec integer_mult float_stackdepth integer_shove float_swap integer_inc integer_yankdup integer_div print_float integer_mult float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_div float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [10.925 9 53.9569 12 34.4979 9 3.9025 8 22.3043 12 10.5884 9 6.1749 9 63.5924 9 48.179 10 41.2995 7 17.2994 7 80.4051 9 11.8913 9 40.0426 7 36.8776 10 17.2807 10 73.5868 12 24.7153 8 94.8966 9 29.5707 9 17.4242 10 18.6023 9 73.636 10 51.0587 9 17.3654 8]
Total: 1130.0735000000002
Mean: 22.60147
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 4444.943135799997
Median total errors in population: 1143.185
Error averages by case: (143.16609079999876 9.536 191.19981699999846 11.384 168.4111746000005 9.374 137.344734800001 8.394 165.19118629999872 11.495 143.0959605999995 10.049 139.12689110000053 9.321 191.57914579999846 8.809 184.20989130000132 10.018 169.242277299999 9.405 149.58527579999986 8.152 200.73384370000173 10.5 147.1467833000001 9.542 174.70162750000003 8.733 173.05241140000135 9.995 149.40323489999932 9.829 200.22901180000162 11.107 149.06171650000016 9.798 214.02426580000045 9.51 167.74049739999901 9.802 160.72519229999966 10.533 155.5297277999999 9.364 195.88292799999914 10.919 181.7850378999988 9.789 148.75641210000035 8.66)
Error minima by case: (7.07 6 2.0395 9 3.7315 7 0.9021 6 20.3044 9 5.588 6 3.1745 6 7.5888 6 7.8174 8 8.2424 7 2.2993 6 19.4101 8 1.2768 7 9.0376 6 3.1183 7 10.0565 8 10.5297 8 22.7154 7 8.2135 7 1.4243 7 15.4243 8 9.4027 7 17.5253 8 2.4275 7 2.3675 7)
Average genome size in population (length): 111.573
Average program size in population (points): 112.573
Average percent parens in population: 0.009
Minimum age in population: 32.36264038085938
Maximum age in population: 37.03377103805542
Average age in population: 35.0885678242445
Median age in population: 35.10916602611542
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.933
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.933
Total error diversity:				 0.387
Error (vector) diversity:			 0.49
Behavioral diversity:				 0.49
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 49436885
--- Timings ---
Current time: 1529614929610 milliseconds
Total Time:         101.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.4 seconds, 37.7%
Fitness Testing:     50.3 seconds, 49.4%
Report:              13.0 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 58085.51980000001
Test mean error for best: 29.04276
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.0571542    
Correct output: -131.0140839365 | Program output: -77.0571542   
Correct output: -5.5592528532  | Program output: -40.0571542   
Correct output: 59.9596444289  | Program output: 56.0571542    
Correct output: -117.3614120131 | Program output: -95.0571542   
Correct output: 86.6455800457  | Program output: 76.0571542    
Correct output: 59.2320173294  | Program output: 53.0571542    
Correct output: 12.464752481   | Program output: 76.0571542    
Correct output: -91.236138991  | Program output: -43.0571542   
Correct output: 23.7576154446  | Program output: 65.0571542    
Correct output: 26.757722572   | Program output: 44.0571542    
Correct output: 112.4622705725 | Program output: 32.0571542    
Correct output: 2.834164078    | Program output: -9.0571542    
Correct output: -49.0145736823 | Program output: -89.0571542   
Correct output: -52.934708311  | Program output: -16.0571542   
Correct output: 14.7764646206  | Program output: 32.0571542    
Correct output: 42.5296882094  | Program output: -31.0571542   
Correct output: -26.7724158498 | Program output: -2.0571542    
Correct output: -47.8394536481 | Program output: 47.0571542    
Correct output: -63.6278515914 | Program output: -34.0571542   
Correct output: -107.481309225 | Program output: -90.0571542   
Correct output: -10.4548540463 | Program output: -29.0571542   
Correct output: -20.5788443492 | Program output: 53.0571542    
Correct output: 4.0015797195   | Program output: -47.0571542   
Correct output: 81.422575027   | Program output: 64.0571542    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_div} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger integer_dec integer_mult float_stackdepth integer_shove float_swap integer_inc integer_yankdup integer_div print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin float_div float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc)
Errors: [10.925 9 53.9569 12 34.4979 9 3.9025 8 22.3043 12 10.5884 9 6.1749 9 63.5924 9 48.179 10 41.2995 7 17.2994 7 80.4051 9 11.8913 9 40.0426 7 36.8776 10 17.2807 10 73.5868 12 24.7153 8 94.8966 9 29.5707 9 17.4242 10 18.6023 9 73.636 10 51.0587 9 17.3654 8]
Total: 1130.0735000000002
Mean: 22.60147
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3999.8131929999963
Median total errors in population: 1140.185
Error averages by case: (122.8197536999986 9.392 177.39166359999874 11.347 149.6228367000004 9.189 118.28990910000093 8.337 151.3910595999985 11.477 124.18949129999986 9.997 119.1527712000008 9.198 170.6548682999989 8.692 168.49086070000087 9.798 152.09349069999962 9.321 132.2637861999992 7.851 179.89520470000133 10.614 129.70414059999905 9.486 158.14411890000017 8.894 155.46981260000098 9.991 132.360631799999 9.563 178.78881930000156 10.729 135.41010610000114 9.974 197.62999320000043 9.629 151.4494047999992 9.616 146.70519840000006 10.684 135.97120080000013 9.298 179.80926279999858 10.864 161.67301109999923 9.746 128.15579680000064 8.599)
Error minima by case: (7.07 6 16.9888 7 2.5047 6 0.4794 6 3.3361 7 5.591 6 3.1765 6 10.5352 6 9.1816 5 0.7576 7 3.2968 5 0.4101 7 1.7796 5 9.0375 6 5.1173 6 7.7219 7 0.4751 6 0.233 5 9.2131 5 0.4267 6 6.544 6 6.4003 7 3.5243 6 2.947 5 2.368 6)
Average genome size in population (length): 112.961
Average program size in population (points): 113.961
Average percent parens in population: 0.009
Minimum age in population: 34.10737383365631
Maximum age in population: 38.53027218580246
Average age in population: 36.46305013269186
Median age in population: 36.49124437570572
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.924
Total error diversity:				 0.378
Error (vector) diversity:			 0.48
Behavioral diversity:				 0.481
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 52261060
--- Timings ---
Current time: 1529614934139 milliseconds
Total Time:         106.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.9 seconds, 37.5%
Fitness Testing:     52.8 seconds, 49.6%
Report:              13.5 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 58224.669799999996
Test mean error for best: 29.11233
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.05215421   
Correct output: -131.0140839365 | Program output: -77.05215421  
Correct output: -5.5592528532  | Program output: -40.05215421  
Correct output: 59.9596444289  | Program output: 56.05215421   
Correct output: -117.3614120131 | Program output: -95.05215421  
Correct output: 86.6455800457  | Program output: 76.05215421   
Correct output: 59.2320173294  | Program output: 53.05215421   
Correct output: 12.464752481   | Program output: 76.05215421   
Correct output: -91.236138991  | Program output: -43.05215421  
Correct output: 23.7576154446  | Program output: 65.05215421   
Correct output: 26.757722572   | Program output: 44.05215421   
Correct output: 112.4622705725 | Program output: 32.05215421   
Correct output: 2.834164078    | Program output: -9.05215421   
Correct output: -49.0145736823 | Program output: -89.05215421  
Correct output: -52.934708311  | Program output: -16.05215421  
Correct output: 14.7764646206  | Program output: 32.05215421   
Correct output: 42.5296882094  | Program output: -31.05215421  
Correct output: -26.7724158498 | Program output: -2.05215421   
Correct output: -47.8394536481 | Program output: 47.05215421   
Correct output: -63.6278515914 | Program output: -34.05215421  
Correct output: -107.481309225 | Program output: -90.05215421  
Correct output: -10.4548540463 | Program output: -29.05215421  
Correct output: -20.5788443492 | Program output: 53.05215421   
Correct output: 4.0015797195   | Program output: -47.05215421  
Correct output: 81.422575027   | Program output: 64.05215421   
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_max} {:instruction tagged_2} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_shove} {:instruction float_flush} {:instruction float_sub} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_sub} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_div} {:instruction print_float} {:instruction float_tan} {:instruction float_div} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction 52} {:instruction float_mod} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_max} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_shove})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_max tagged_2 float_div integer_yankdup float_div integer_swap integer_dec float_dec float_rot float_inc integer_min integer_yank integer_swap integer_dec float_mod integer_swap float_add integer_swap integer_fromfloat float_flush float_yankdup integer_shove float_flush float_sub float_yank float_frominteger integer_dec integer_sub float_stackdepth integer_shove float_swap integer_flush integer_swap integer_div print_float float_tan float_div integer_yankdup tagged_764 float_mod in1 float_swap float_swap integer_swap 52 float_mod integer_min integer_min integer_mod print_integer float_inc float_stackdepth integer_shove float_stackdepth integer_yankdup integer_yank integer_shove integer_mod print_integer integer_inc float_sin float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add integer_yank integer_min integer_inc float_sin integer_mod print_integer integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_max float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup float_pop integer_shove)
Errors: [10.93 9 53.9619 12 34.4929 9 3.9075 8 22.3093 11 10.5934 9 6.1799 8 63.5874 8 48.184 9 41.2945 8 17.2944 8 80.4101 9 11.8863 9 40.0376 8 36.8826 10 17.2757 10 73.5818 11 24.7203 7 94.8916 8 29.5757 10 17.4292 10 18.5973 9 73.631 12 51.0537 9 17.3704 8]
Total: 1129.0785
Mean: 22.58157
Genome size: 117
Size: 118
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4007.5396792999936
Median total errors in population: 1136.1852
Error averages by case: (123.83258719999887 9.011 177.00160689999873 11.424 148.73399190000035 9.227 118.11032610000066 8.48 150.39972659999867 11.304 124.18058369999979 9.919 120.07282200000031 8.819 170.7391313999995 8.895 167.84189220000033 9.589 152.19723240000033 9.309 132.52000519999925 7.877 182.61769970000051 10.397 129.75657899999928 9.558 157.44971310000025 9.068 156.20511730000013 10.141 132.59346489999922 9.837 179.9017671000012 10.564 138.9509077000009 9.584 198.67489180000064 9.802 150.89749889999982 9.781 145.79295440000024 10.47 135.9712471999996 9.585 179.89330739999872 10.971 161.95320689999963 9.629 129.31041830000035 8.7)
Error minima by case: (5.07 6 4.0381 9 2.507 6 0.9051 6 18.3069 9 5.5914 6 3.1775 6 5.5874 7 9.816 7 12.2965 7 4.2968 6 1.4101 8 0.782 7 4.297 6 0.3769 7 12.7243 7 5.5225 8 1.0 6 5.4721 7 3.5708 7 13.4268 8 6.4026 7 15.5267 8 1.9494 7 2.368 7)
Average genome size in population (length): 107.611
Average program size in population (points): 108.611
Average percent parens in population: 0.009
Minimum age in population: 35.26989781856537
Maximum age in population: 40.05849114060402
Average age in population: 37.91550641581416
Median age in population: 37.94660079479218
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.906
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.906
Total error diversity:				 0.341
Error (vector) diversity:			 0.472
Behavioral diversity:				 0.473
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 54951360
--- Timings ---
Current time: 1529614938837 milliseconds
Total Time:         111.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.5 seconds, 37.4%
Fitness Testing:     55.3 seconds, 49.8%
Report:              14.1 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 58064.519700000004
Test mean error for best: 29.03226
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.0571492    
Correct output: -131.0140839365 | Program output: -77.0571492   
Correct output: -5.5592528532  | Program output: -40.0571492   
Correct output: 59.9596444289  | Program output: 56.0571492    
Correct output: -117.3614120131 | Program output: -95.0571492   
Correct output: 86.6455800457  | Program output: 76.0571492    
Correct output: 59.2320173294  | Program output: 53.0571492    
Correct output: 12.464752481   | Program output: 76.0571492    
Correct output: -91.236138991  | Program output: -43.0571492   
Correct output: 23.7576154446  | Program output: 65.0571492    
Correct output: 26.757722572   | Program output: 44.0571492    
Correct output: 112.4622705725 | Program output: 32.0571492    
Correct output: 2.834164078    | Program output: -9.0571492    
Correct output: -49.0145736823 | Program output: -89.0571492   
Correct output: -52.934708311  | Program output: -16.0571492   
Correct output: 14.7764646206  | Program output: 32.0571492    
Correct output: 42.5296882094  | Program output: -31.0571492   
Correct output: -26.7724158498 | Program output: -2.0571492    
Correct output: -47.8394536481 | Program output: 47.0571492    
Correct output: -63.6278515914 | Program output: -34.0571492   
Correct output: -107.481309225 | Program output: -90.0571492   
Correct output: -10.4548540463 | Program output: -29.0571492   
Correct output: -20.5788443492 | Program output: 53.0571492    
Correct output: 4.0015797195   | Program output: -47.0571492   
Correct output: 81.422575027   | Program output: 64.0571492    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction tagged_298} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_float} {:instruction integer_mult} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_shove} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_inc} {:instruction 48} {:instruction float_min} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_yankdup})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec tagged_298 integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger integer_dec integer_mult float_stackdepth integer_shove float_swap integer_inc integer_yankdup integer_div print_float integer_mult float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin integer_shove float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin float_dec float_add 52 float_mod integer_inc 48 float_min float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_div integer_mod print_integer integer_yankdup)
Errors: [10.925 8 53.9569 11 34.4979 10 3.9025 8 22.3043 11 10.5884 9 6.1749 8 63.5924 9 48.179 9 41.2995 8 17.2994 8 80.4051 10 11.8913 9 40.0426 7 36.8776 10 17.2807 10 73.5868 12 24.7153 8 94.8966 9 29.5707 9 17.4242 9 18.6023 10 73.636 9 51.0587 8 17.3654 9]
Total: 1128.0735000000002
Mean: 22.56147
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3978.036069099996
Median total errors in population: 1136.0775500000002
Error averages by case: (123.13940689999858 8.87 178.27387289999868 11.437 147.4985716000006 9.086 117.42544900000051 8.624 152.13807249999826 11.26 124.08723879999972 9.643 119.2657297000002 8.657 168.51149029999988 9.05 166.25796270000032 9.881 150.10711330000018 9.256 130.67625809999922 7.947 181.38369890000092 9.95 126.40839039999908 9.696 158.84761090000046 8.902 153.89147060000002 10.216 130.6229830999989 10.262 178.0581733000018 10.737 135.53862340000086 9.061 196.02970820000056 9.778 149.0155919999996 10.089 147.3998965000002 10.123 134.97869919999894 9.768 177.3434837999981 10.877 160.43585050000013 9.59 129.21672250000023 8.724)
Error minima by case: (1.1857 7 49.9596 9 1.4928 6 0.5626 7 18.3069 9 5.5884 7 3.1749 6 5.0508 7 27.1816 7 1.7576 7 4.7577 5 2.4053 8 0.7796 7 9.0376 6 5.1174 7 7.2235 8 1.3488 8 1.0 6 10.2127 7 0.4267 7 13.4268 7 2.4028 8 0.4733 8 1.947 7 2.3704 7)
Average genome size in population (length): 105.122
Average program size in population (points): 106.122
Average percent parens in population: 0.010
Minimum age in population: 36.44058966636658
Maximum age in population: 41.45156398415565
Average age in population: 39.27027260738611
Median age in population: 39.30783946067095
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.889
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.889
Total error diversity:				 0.368
Error (vector) diversity:			 0.485
Behavioral diversity:				 0.486
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 57579510
--- Timings ---
Current time: 1529614943378 milliseconds
Total Time:         115.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.9 seconds, 37.2%
Fitness Testing:     57.8 seconds, 50.0%
Report:              14.6 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 58064.519700000004
Test mean error for best: 29.03226
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.0571492    
Correct output: -131.0140839365 | Program output: -77.0571492   
Correct output: -5.5592528532  | Program output: -40.0571492   
Correct output: 59.9596444289  | Program output: 56.0571492    
Correct output: -117.3614120131 | Program output: -95.0571492   
Correct output: 86.6455800457  | Program output: 76.0571492    
Correct output: 59.2320173294  | Program output: 53.0571492    
Correct output: 12.464752481   | Program output: 76.0571492    
Correct output: -91.236138991  | Program output: -43.0571492   
Correct output: 23.7576154446  | Program output: 65.0571492    
Correct output: 26.757722572   | Program output: 44.0571492    
Correct output: 112.4622705725 | Program output: 32.0571492    
Correct output: 2.834164078    | Program output: -9.0571492    
Correct output: -49.0145736823 | Program output: -89.0571492   
Correct output: -52.934708311  | Program output: -16.0571492   
Correct output: 14.7764646206  | Program output: 32.0571492    
Correct output: 42.5296882094  | Program output: -31.0571492   
Correct output: -26.7724158498 | Program output: -2.0571492    
Correct output: -47.8394536481 | Program output: 47.0571492    
Correct output: -63.6278515914 | Program output: -34.0571492   
Correct output: -107.481309225 | Program output: -90.0571492   
Correct output: -10.4548540463 | Program output: -29.0571492   
Correct output: -20.5788443492 | Program output: 53.0571492    
Correct output: 4.0015797195   | Program output: -47.0571492   
Correct output: 81.422575027   | Program output: 64.0571492    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_float} {:instruction integer_mult} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_yankdup})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_fromfloat integer_dec float_dec integer_dec float_inc integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger integer_dec integer_mult float_stackdepth integer_shove float_swap integer_inc integer_yankdup integer_div print_float integer_mult -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_mod integer_yank integer_min integer_inc float_sin float_inc float_stackdepth integer_shove integer_mod print_integer integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer integer_yankdup)
Errors: [10.925 8 53.9569 11 34.4979 10 3.9025 8 22.3043 11 10.5884 9 6.1749 8 63.5924 9 48.179 9 41.2995 8 17.2994 8 80.4051 10 11.8913 9 40.0426 7 36.8776 10 17.2807 10 73.5868 12 24.7153 8 94.8966 9 29.5707 9 17.4242 9 18.6023 10 73.636 9 51.0587 8 17.3654 9]
Total: 1128.0735000000002
Mean: 22.56147
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3802.477715099996
Median total errors in population: 1134.0785500000002
Error averages by case: (115.36120749999881 8.808 169.1109597999988 11.429 143.44624870000044 9.113 109.67419900000041 8.614 142.41226579999872 11.375 115.60129379999955 9.396 111.54841750000007 8.702 160.75307859999964 9.072 159.20606970000028 10.08 141.91266500000015 9.168 121.3876366999994 8.079 174.8694485000011 9.76 123.45217749999931 9.685 152.70589060000054 8.512 147.9435120000001 10.241 122.52129329999916 10.4 174.84010370000144 11.118 128.29093790000078 8.688 188.6998853000004 9.573 142.23437159999983 10.16 137.8143426999999 9.852 130.5574614999993 9.787 169.7555805999983 10.747 156.71365019999962 9.526 121.02501760000015 8.755)
Error minima by case: (6.0533 7 23.038 9 0.164 6 0.9025 7 18.3073 9 5.5884 7 3.1749 7 2.2139 7 5.1841 7 8.2424 6 2.2944 5 1.4047 8 0.8342 7 0.8532 6 4.1178 7 1.2757 8 5.5225 9 1.0722 6 9.2131 7 1.0525 8 13.4272 7 4.0973 8 16.5267 8 2.0016 7 3.3703 7)
Average genome size in population (length): 103.024
Average program size in population (points): 104.024
Average percent parens in population: 0.010
Minimum age in population: 37.44058966636658
Maximum age in population: 42.66897468268871
Average age in population: 40.69485174776614
Median age in population: 40.76354446262121
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.873
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.873
Total error diversity:				 0.347
Error (vector) diversity:			 0.456
Behavioral diversity:				 0.456
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 60155285
--- Timings ---
Current time: 1529614947661 milliseconds
Total Time:         119.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.4 seconds, 37.0%
Fitness Testing:     60.1 seconds, 50.1%
Report:              15.3 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 58064.519700000004
Test mean error for best: 29.03226
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.0571492    
Correct output: -131.0140839365 | Program output: -77.0571492   
Correct output: -5.5592528532  | Program output: -40.0571492   
Correct output: 59.9596444289  | Program output: 56.0571492    
Correct output: -117.3614120131 | Program output: -95.0571492   
Correct output: 86.6455800457  | Program output: 76.0571492    
Correct output: 59.2320173294  | Program output: 53.0571492    
Correct output: 12.464752481   | Program output: 76.0571492    
Correct output: -91.236138991  | Program output: -43.0571492   
Correct output: 23.7576154446  | Program output: 65.0571492    
Correct output: 26.757722572   | Program output: 44.0571492    
Correct output: 112.4622705725 | Program output: 32.0571492    
Correct output: 2.834164078    | Program output: -9.0571492    
Correct output: -49.0145736823 | Program output: -89.0571492   
Correct output: -52.934708311  | Program output: -16.0571492   
Correct output: 14.7764646206  | Program output: 32.0571492    
Correct output: 42.5296882094  | Program output: -31.0571492   
Correct output: -26.7724158498 | Program output: -2.0571492    
Correct output: -47.8394536481 | Program output: 47.0571492    
Correct output: -63.6278515914 | Program output: -34.0571492   
Correct output: -107.481309225 | Program output: -90.0571492   
Correct output: -10.4548540463 | Program output: -29.0571492   
Correct output: -20.5788443492 | Program output: 53.0571492    
Correct output: 4.0015797195   | Program output: -47.0571492   
Correct output: 81.422575027   | Program output: 64.0571492    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_flush} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_shove} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_yankdup})
Best program: (integer_pop integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_flush float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger integer_dec integer_mult float_stackdepth integer_shove float_swap integer_inc integer_yankdup integer_div print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin integer_shove float_add 52 float_mod integer_yank integer_min integer_inc integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc float_flush integer_mod print_integer integer_yankdup)
Errors: [10.925 8 53.9569 11 34.4979 10 3.9025 8 22.3043 11 10.5884 9 6.1749 8 63.5924 9 48.179 9 41.2995 8 17.2994 8 80.4051 10 11.8913 9 40.0426 7 36.8776 10 17.2807 10 73.5868 12 24.7153 8 94.8966 9 29.5707 9 17.4242 9 18.6023 10 73.636 9 51.0587 8 17.3654 9]
Total: 1128.0735000000002
Mean: 22.56147
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 4093.522779399997
Median total errors in population: 1133.0785
Error averages by case: (127.63894279999934 8.992 182.33815729999864 11.565 153.69705220000012 9.291 121.78063189999992 8.595 156.01585469999864 11.445 128.099654299999 9.337 123.66944720000035 8.81 172.994931799999 9.018 170.0031819000003 9.999 154.26253369999975 8.861 134.47078090000005 8.164 187.17577680000065 9.765 132.24451109999967 9.548 165.8842062999999 8.301 157.37901480000087 10.163 134.3481508999997 10.414 185.03956970000104 11.382 138.56445510000017 8.548 200.30280030000065 9.42 153.2677817999995 9.968 151.4735726999998 9.909 140.50558589999872 9.777 181.72119689999815 10.712 166.84926739999912 9.343 133.74172099999987 8.727)
Error minima by case: (6.07 7 15.0431 9 0.5021 6 0.9025 7 19.3043 9 5.5884 7 3.1749 7 4.4076 7 20.821 7 1.7576 6 4.7577 6 1.4101 8 1.3188 7 9.0375 6 5.1173 8 6.7193 8 5.5225 9 16.7203 7 10.2126 7 3.5707 7 14.4242 7 4.3977 7 17.5266 8 2.9334 7 3.3704 7)
Average genome size in population (length): 104.221
Average program size in population (points): 105.221
Average percent parens in population: 0.010
Minimum age in population: 39.43765633553267
Maximum age in population: 43.92203487455845
Average age in population: 41.99910455603898
Median age in population: 42.05268718115985
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.861
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.861
Total error diversity:				 0.33
Error (vector) diversity:			 0.435
Behavioral diversity:				 0.435
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 62761035
--- Timings ---
Current time: 1529614952484 milliseconds
Total Time:         124.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.0 seconds, 37.0%
Fitness Testing:     62.5 seconds, 50.2%
Report:              15.8 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 58064.519700000004
Test mean error for best: 29.03226
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.0571492    
Correct output: -131.0140839365 | Program output: -77.0571492   
Correct output: -5.5592528532  | Program output: -40.0571492   
Correct output: 59.9596444289  | Program output: 56.0571492    
Correct output: -117.3614120131 | Program output: -95.0571492   
Correct output: 86.6455800457  | Program output: 76.0571492    
Correct output: 59.2320173294  | Program output: 53.0571492    
Correct output: 12.464752481   | Program output: 76.0571492    
Correct output: -91.236138991  | Program output: -43.0571492   
Correct output: 23.7576154446  | Program output: 65.0571492    
Correct output: 26.757722572   | Program output: 44.0571492    
Correct output: 112.4622705725 | Program output: 32.0571492    
Correct output: 2.834164078    | Program output: -9.0571492    
Correct output: -49.0145736823 | Program output: -89.0571492   
Correct output: -52.934708311  | Program output: -16.0571492   
Correct output: 14.7764646206  | Program output: 32.0571492    
Correct output: 42.5296882094  | Program output: -31.0571492   
Correct output: -26.7724158498 | Program output: -2.0571492    
Correct output: -47.8394536481 | Program output: 47.0571492    
Correct output: -63.6278515914 | Program output: -34.0571492   
Correct output: -107.481309225 | Program output: -90.0571492   
Correct output: -10.4548540463 | Program output: -29.0571492   
Correct output: -20.5788443492 | Program output: 53.0571492    
Correct output: 4.0015797195   | Program output: -47.0571492   
Correct output: 81.422575027   | Program output: 64.0571492    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_float} {:instruction integer_mult} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_min} {:instruction integer_swap} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_yankdup})
Best program: (float_rot integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_fromfloat integer_dec float_dec integer_dec float_inc integer_min integer_yank integer_swap integer_dec in2 float_dup_items integer_yank float_yank float_frominteger integer_dec integer_mult float_stackdepth integer_shove float_swap integer_inc integer_yankdup integer_div print_float integer_mult float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod integer_yankdup integer_add integer_shove integer_mod print_integer float_swap integer_swap integer_sub in1 float_swap float_swap float_stackdepth integer_shove integer_mod print_integer integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod integer_min integer_swap integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc integer_shove integer_mod print_integer integer_yankdup)
Errors: [10.925 8 53.9569 11 34.4979 10 3.9025 8 22.3043 11 10.5884 9 6.1749 8 63.5924 9 48.179 9 41.2995 8 17.2994 8 80.4051 10 11.8913 9 40.0426 7 36.8776 10 17.2807 10 73.5868 12 24.7153 8 94.8966 9 29.5707 9 17.4242 9 18.6023 10 73.636 9 51.0587 8 17.3654 9]
Total: 1128.0735000000002
Mean: 22.56147
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3683.1102057000003
Median total errors in population: 1133.0785
Error averages by case: (111.90864859999968 9.294 163.88050209999884 11.725 136.0902590999999 9.361 106.22979609999959 8.638 136.9525481999994 11.478 112.38797219999887 9.397 108.09316060000005 8.838 157.3809474999989 8.989 153.53976100000017 9.93 139.39132009999952 8.515 118.66464940000037 8.106 171.68229410000114 9.67 117.31779500000006 9.555 145.68325139999985 8.208 141.56165980000097 10.059 118.85040160000004 10.46 167.28985150000082 11.522 126.10000250000009 8.57 185.22324790000044 9.357 136.22573109999965 9.723 132.2514574999992 10.032 123.27836029999881 9.693 166.3881820999985 10.797 149.37127329999916 9.238 117.58613269999955 8.626)
Error minima by case: (1.1857 7 50.9569 9 0.5021 6 0.9011 7 19.3043 9 5.567 7 3.1749 7 0.2205 7 31.179 7 0.2424 6 2.2945 6 1.4101 8 0.8187 7 4.9625 6 5.1224 7 1.7757 9 1.5297 9 3.2797 7 9.2176 7 3.5707 7 14.4242 8 3.5973 7 9.4733 7 1.9862 7 2.3704 7)
Average genome size in population (length): 107.571
Average program size in population (points): 108.571
Average percent parens in population: 0.009
Minimum age in population: 40.62009258568287
Maximum age in population: 45.43376355431974
Average age in population: 43.41169567130879
Median age in population: 43.47579010482877
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.876
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.876
Total error diversity:				 0.328
Error (vector) diversity:			 0.452
Behavioral diversity:				 0.452
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 65450360
--- Timings ---
Current time: 1529614957329 milliseconds
Total Time:         129.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.5 seconds, 36.7%
Fitness Testing:     65.4 seconds, 50.5%
Report:              16.5 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 58064.519700000004
Test mean error for best: 29.03226
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 58.0571492    
Correct output: -131.0140839365 | Program output: -77.0571492   
Correct output: -5.5592528532  | Program output: -40.0571492   
Correct output: 59.9596444289  | Program output: 56.0571492    
Correct output: -117.3614120131 | Program output: -95.0571492   
Correct output: 86.6455800457  | Program output: 76.0571492    
Correct output: 59.2320173294  | Program output: 53.0571492    
Correct output: 12.464752481   | Program output: 76.0571492    
Correct output: -91.236138991  | Program output: -43.0571492   
Correct output: 23.7576154446  | Program output: 65.0571492    
Correct output: 26.757722572   | Program output: 44.0571492    
Correct output: 112.4622705725 | Program output: 32.0571492    
Correct output: 2.834164078    | Program output: -9.0571492    
Correct output: -49.0145736823 | Program output: -89.0571492   
Correct output: -52.934708311  | Program output: -16.0571492   
Correct output: 14.7764646206  | Program output: 32.0571492    
Correct output: 42.5296882094  | Program output: -31.0571492   
Correct output: -26.7724158498 | Program output: -2.0571492    
Correct output: -47.8394536481 | Program output: 47.0571492    
Correct output: -63.6278515914 | Program output: -34.0571492   
Correct output: -107.481309225 | Program output: -90.0571492   
Correct output: -10.4548540463 | Program output: -29.0571492   
Correct output: -20.5788443492 | Program output: 53.0571492    
Correct output: 4.0015797195   | Program output: -47.0571492   
Correct output: 81.422575027   | Program output: 64.0571492    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_shove} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_yankdup})
Best program: (integer_pop integer_div integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger integer_dec integer_mult float_stackdepth integer_shove float_swap integer_inc integer_yankdup integer_div print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin integer_shove float_add 52 float_mod integer_yank integer_min integer_inc integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc float_flush integer_mod print_integer integer_yankdup)
Errors: [10.925 8 53.9569 11 34.4979 10 3.9025 8 22.3043 11 10.5884 9 6.1749 8 63.5924 9 48.179 9 41.2995 8 17.2994 8 80.4051 10 11.8913 9 40.0426 7 36.8776 10 17.2807 10 73.5868 12 24.7153 8 94.8966 9 29.5707 9 17.4242 9 18.6023 10 73.636 9 51.0587 8 17.3654 9]
Total: 1128.0735000000002
Mean: 22.56147
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3857.4694225
Median total errors in population: 1134.0735500000003
Error averages by case: (118.17756849999986 9.296 174.34272539999876 11.692 143.19143839999987 9.61 112.5308032999993 8.666 147.81179129999938 11.3 118.55993769999853 9.466 114.34071499999989 8.73 163.65364899999847 8.907 160.05949300000051 9.701 144.65822049999917 8.635 124.79792300000052 8.324 177.28756140000124 9.771 123.44877550000032 9.517 156.67510819999958 8.243 148.1685893000013 10.066 124.88788600000034 10.487 174.4099694000002 11.49 130.5420048999999 8.521 191.02836260000078 9.281 142.86852839999952 9.693 143.14819829999962 9.938 130.44871009999892 9.844 172.33389079999858 10.862 156.43489079999858 9.064 123.85968169999926 8.699)
Error minima by case: (1.1857 7 23.0381 9 0.5022 6 0.0925 7 19.3043 9 4.5934 7 2.1799 7 0.4127 7 5.184 8 15.7001 6 2.2994 5 0.4051 7 1.777 7 9.038 6 5.1178 7 13.7193 9 5.5274 9 1.0 7 10.1711 7 3.5707 7 14.4242 8 4.3978 8 14.5256 7 2.9444 7 2.3654 7)
Average genome size in population (length): 108.186
Average program size in population (points): 109.186
Average percent parens in population: 0.009
Minimum age in population: 41.62009258568287
Maximum age in population: 46.67067361064255
Average age in population: 44.74738278069254
Median age in population: 44.78871693648398
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.871
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.871
Total error diversity:				 0.34
Error (vector) diversity:			 0.444
Behavioral diversity:				 0.444
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 68155060
--- Timings ---
Current time: 1529614962094 milliseconds
Total Time:         134.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.0 seconds, 36.5%
Fitness Testing:     67.9 seconds, 50.7%
Report:              17.0 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 11778.0
Test mean error for best: 5.88900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 65.9821096662581492
Correct output: -131.0140839365 | Program output: -134.0140839365581492
Correct output: -5.5592528532  | Program output: -8.5592528532581492
Correct output: 59.9596444289  | Program output: 56.9596444289581492
Correct output: -117.3614120131 | Program output: -120.3614120131581492
Correct output: 86.6455800457  | Program output: 81.6455800457581492
Correct output: 59.2320173294  | Program output: 56.2320173294581492
Correct output: 12.464752481   | Program output: -3.535247519581492
Correct output: -91.236138991  | Program output: -94.236138991581492
Correct output: 23.7576154446  | Program output: 20.7576154446581492
Correct output: 26.757722572   | Program output: 23.757722572581492
Correct output: 112.4622705725 | Program output: 109.4622705725581492
Correct output: 2.834164078    | Program output: -0.165835922581492
Correct output: -49.0145736823 | Program output: -52.0145736823581492
Correct output: -52.934708311  | Program output: -55.934708311581492
Correct output: 14.7764646206  | Program output: 11.7764646206581492
Correct output: 42.5296882094  | Program output: 39.5296882094581492
Correct output: -26.7724158498 | Program output: -29.7724158498581492
Correct output: -47.8394536481 | Program output: -50.8394536481581492
Correct output: -63.6278515914 | Program output: -66.6278515914581492
Correct output: -107.481309225 | Program output: -110.481309225581492
Correct output: -10.4548540463 | Program output: -13.4548540463581492
Correct output: -20.5788443492 | Program output: -23.5788443492581492
Correct output: 4.0015797195   | Program output: 1.0015797195581492
Correct output: 81.422575027   | Program output: 78.422575027581492
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction in1} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_mult} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_shove} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_yankdup})
Best program: (float_rot integer_div integer_add integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_mult print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin integer_shove float_add 52 float_mod integer_yank integer_min integer_inc integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_inc integer_shove integer_mod print_integer float_inc float_add float_stackdepth integer_inc float_flush integer_mod print_integer integer_yankdup)
Errors: [3.0 7 3.0 7 3.0 7 3.0 7 3.0 8 5.0 7 3.0 7 16.0 12 3.0 7 3.0 7 3.0 7 3.0 8 3.0 15 3.0 8 3.0 7 3.0 7 3.0 8 3.0 7 3.0 8 3.0 7 3.0 8 3.0 7 3.0 7 3.0 7 3.0 8]
Total: 285.0
Mean: 5.7
Genome size: 105
Size: 106
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 4095.0560421000014
Median total errors in population: 1132.076
Error averages by case: (129.30188640000043 9.079 180.72772619999898 11.43 151.45904579999964 9.837 123.72306169999905 8.586 155.17043859999964 11.197 129.57916449999826 9.386 125.57710179999961 8.614 174.76501699999804 8.894 167.8487630000008 9.47 155.87624559999836 8.588 136.22733800000074 8.359 187.97329230000156 9.969 132.20232760000047 9.404 164.51064789999936 7.98 156.37523920000177 9.95 136.44262780000068 10.357 182.57602159999982 11.585 141.89343560000017 8.608 201.87083680000075 9.338 151.04331559999963 9.522 150.62228539999984 9.716 138.65254669999908 9.981 183.40015259999865 10.295 164.72827009999833 8.755 134.78425429999933 8.825)
Error minima by case: (1.1857 5 3.0 6 0.5021 7 0.0934 5 3.0 6 4.5926 5 2.179 5 8.5352 7 3.0 4 2.7576 7 3.0 6 0.41 6 1.7769 4 3.0 6 3.0 5 3.0 7 3.0 5 1.0 4 3.0 4 3.0 5 3.0 5 3.0 7 0.5217 5 1.915 4 2.3539 5)
Average genome size in population (length): 103.263
Average program size in population (points): 104.263
Average percent parens in population: 0.010
Minimum age in population: 43.59258097782731
Maximum age in population: 47.89727451885119
Average age in population: 46.14379628272122
Median age in population: 46.20733526907861
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.859
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.859
Total error diversity:				 0.287
Error (vector) diversity:			 0.379
Behavioral diversity:				 0.38
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 70736735
--- Timings ---
Current time: 1529614966893 milliseconds
Total Time:         139.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.5 seconds, 36.3%
Fitness Testing:     70.6 seconds, 50.8%
Report:              17.8 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 8805.0
Test mean error for best: 4.40250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 65.9821096662581
Correct output: -131.0140839365 | Program output: -134.0140839365581
Correct output: -5.5592528532  | Program output: -8.5592528532581
Correct output: 59.9596444289  | Program output: 56.9596444289581
Correct output: -117.3614120131 | Program output: -120.3614120131581
Correct output: 86.6455800457  | Program output: 81.6455800457581
Correct output: 59.2320173294  | Program output: 56.2320173294581
Correct output: 12.464752481   | Program output: -3.535247519581
Correct output: -91.236138991  | Program output: -94.236138991581
Correct output: 23.7576154446  | Program output: 20.7576154446581
Correct output: 26.757722572   | Program output: 23.757722572581
Correct output: 112.4622705725 | Program output: 109.4622705725581
Correct output: 2.834164078    | Program output: -0.165835922581
Correct output: -49.0145736823 | Program output: -52.0145736823581
Correct output: -52.934708311  | Program output: -55.934708311581
Correct output: 14.7764646206  | Program output: 11.7764646206581
Correct output: 42.5296882094  | Program output: 39.5296882094581
Correct output: -26.7724158498 | Program output: -29.7724158498581
Correct output: -47.8394536481 | Program output: -50.8394536481581
Correct output: -63.6278515914 | Program output: -66.6278515914581
Correct output: -107.481309225 | Program output: -110.481309225581
Correct output: -10.4548540463 | Program output: -13.4548540463581
Correct output: -20.5788443492 | Program output: -23.5788443492581
Correct output: 4.0015797195   | Program output: 1.0015797195581
Correct output: 81.422575027   | Program output: 78.422575027581
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction in1} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_mult} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_shove} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin})
Best program: (float_rot integer_div integer_add integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_mult print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin integer_shove float_add 52 float_mod integer_yank integer_min integer_inc integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin)
Errors: [3.0 4 3.0 4 3.0 4 3.0 4 3.0 5 5.0 4 3.0 4 16.0 9 3.0 4 3.0 4 3.0 4 3.0 5 3.0 12 3.0 5 3.0 4 3.0 4 3.0 5 3.0 4 3.0 5 3.0 4 3.0 5 3.0 4 3.0 4 3.0 4 3.0 5]
Total: 210.0
Mean: 4.2
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3847.8558025000057
Median total errors in population: 1131.0735000000002
Error averages by case: (118.37210400000107 8.723 176.1343316999988 11.127 139.58714120000016 9.97 113.83154429999853 8.527 149.75352419999993 11.147 118.67850579999781 9.378 114.7239924999993 8.496 165.6092032999973 9.128 156.99744990000127 9.348 146.54140419999754 8.531 126.72800820000157 8.349 176.95361510000208 10.16 119.97353200000121 9.345 158.70626869999867 7.826 145.41728250000259 10.007 127.02310240000116 10.259 170.38075799999936 11.65 129.82875779999927 8.608 193.23205660000042 9.535 140.04773259999914 9.347 145.2344744999991 9.479 126.69753359999922 10.149 174.5766051999989 9.615 152.88765759999765 8.443 123.77021659999873 9.022)
Error minima by case: (3.0 4 3.0 4 0.5021 4 0.9015 4 3.0 5 5.0 4 3.0 4 8.4076 7 3.0 4 3.0 4 2.2994 4 1.4051 5 1.223 5 3.0 5 3.0 4 3.0 4 1.5055 5 1.0 4 0.7833 5 2.4292 4 3.0 5 3.0 4 3.0 4 0.0556 4 2.3654 5)
Average genome size in population (length): 97.745
Average program size in population (points): 98.745
Average percent parens in population: 0.010
Minimum age in population: 44.59258097782731
Maximum age in population: 49.42071764287539
Average age in population: 47.54205935098301
Median age in population: 47.61635817761999
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.856
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.856
Total error diversity:				 0.233
Error (vector) diversity:			 0.309
Behavioral diversity:				 0.31
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 73180460
--- Timings ---
Current time: 1529614971235 milliseconds
Total Time:         143.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.9 seconds, 36.2%
Fitness Testing:     72.9 seconds, 50.9%
Report:              18.4 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 7651.0
Test mean error for best: 3.82550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 66.9821096662581
Correct output: -131.0140839365 | Program output: -133.0140839365581
Correct output: -5.5592528532  | Program output: -7.5592528532581
Correct output: 59.9596444289  | Program output: 57.9596444289581
Correct output: -117.3614120131 | Program output: -119.3614120131581
Correct output: 86.6455800457  | Program output: 82.6455800457581
Correct output: 59.2320173294  | Program output: 57.2320173294581
Correct output: 12.464752481   | Program output: -2.535247519581
Correct output: -91.236138991  | Program output: -93.236138991581
Correct output: 23.7576154446  | Program output: 21.7576154446581
Correct output: 26.757722572   | Program output: 24.757722572581
Correct output: 112.4622705725 | Program output: 110.4622705725581
Correct output: 2.834164078    | Program output: 0.834164078581
Correct output: -49.0145736823 | Program output: -51.0145736823581
Correct output: -52.934708311  | Program output: -54.934708311581
Correct output: 14.7764646206  | Program output: 12.7764646206581
Correct output: 42.5296882094  | Program output: 40.5296882094581
Correct output: -26.7724158498 | Program output: -28.7724158498581
Correct output: -47.8394536481 | Program output: -49.8394536481581
Correct output: -63.6278515914 | Program output: -65.6278515914581
Correct output: -107.481309225 | Program output: -109.481309225581
Correct output: -10.4548540463 | Program output: -12.4548540463581
Correct output: -20.5788443492 | Program output: -22.5788443492581
Correct output: 4.0015797195   | Program output: 2.0015797195581
Correct output: 81.422575027   | Program output: 79.422575027581
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction in1} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_shove} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction in2} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth})
Best program: (float_rot integer_div integer_add integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_inc print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin integer_shove float_add 52 float_mod integer_yank integer_min in2 integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth)
Errors: [2.0 4 2.0 4 2.0 4 2.0 4 2.0 4 4.0 4 2.0 4 15.0 8 2.0 4 2.0 4 2.0 4 2.0 4 2.0 4 2.0 5 2.0 4 2.0 4 2.0 4 2.0 4 2.0 4 2.0 4 2.0 4 2.0 4 2.0 4 2.0 4 2.0 5]
Total: 171.0
Mean: 3.42
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3429.3391866000043
Median total errors in population: 1130.0735000000002
Error averages by case: (104.27787470000119 8.58 155.41264470000007 10.866 124.52671000000107 9.895 98.8222433999984 8.439 130.18553390000176 10.999 104.61767649999871 9.233 100.5900815999993 8.373 148.11128899999787 9.258 139.3849245000006 9.178 129.0113616999982 8.493 109.7971460000015 8.304 160.72801500000173 10.156 106.65302600000123 9.488 140.14202519999998 7.742 127.44083360000207 9.885 109.80206640000131 10.112 154.8542691999999 11.516 115.5321851999998 8.524 173.29803289999884 9.451 122.96561049999826 9.223 125.72999149999843 9.34 111.18868719999936 10.025 155.5406855999992 9.378 137.31320949999838 8.31 109.63606279999941 9.009)
Error minima by case: (1.0 4 1.0 4 0.5021 4 0.902 4 1.0 4 3.0 4 1.0 4 10.4633 7 1.0 4 1.0 4 1.0 4 0.4051 4 0.224 4 1.0 5 1.0 4 1.0 4 1.0 4 0.5516 4 1.0 4 1.0 4 1.0 4 1.0 4 1.0 4 1.0 4 1.0 5)
Average genome size in population (length): 96.483
Average program size in population (points): 97.483
Average percent parens in population: 0.010
Minimum age in population: 46.42094669677317
Maximum age in population: 51.04023546690587
Average age in population: 48.9118932434317
Median age in population: 48.93103068246273
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.887
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.887
Total error diversity:				 0.246
Error (vector) diversity:			 0.31
Behavioral diversity:				 0.317
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 75592660
--- Timings ---
Current time: 1529614975427 milliseconds
Total Time:         147.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.3 seconds, 36.1%
Fitness Testing:     75.1 seconds, 50.9%
Report:              19.1 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 4000.0
Test mean error for best: 2.00000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 68.98210966623153
Correct output: -131.0140839365 | Program output: -131.01408393653153
Correct output: -5.5592528532  | Program output: -5.55925285323153
Correct output: 59.9596444289  | Program output: 59.95964442893153
Correct output: -117.3614120131 | Program output: -117.36141201313153
Correct output: 86.6455800457  | Program output: 86.64558004573153
Correct output: 59.2320173294  | Program output: 59.23201732943153
Correct output: 12.464752481   | Program output: 12.4647524813153
Correct output: -91.236138991  | Program output: -91.2361389913153
Correct output: 23.7576154446  | Program output: 23.75761544463153
Correct output: 26.757722572   | Program output: 26.7577225723153
Correct output: 112.4622705725 | Program output: 112.46227057253153
Correct output: 2.834164078    | Program output: 2.8341640783153
Correct output: -49.0145736823 | Program output: -49.01457368233153
Correct output: -52.934708311  | Program output: -52.9347083113153
Correct output: 14.7764646206  | Program output: 14.77646462063153
Correct output: 42.5296882094  | Program output: 42.52968820943153
Correct output: -26.7724158498 | Program output: -26.77241584983153
Correct output: -47.8394536481 | Program output: -47.83945364813153
Correct output: -63.6278515914 | Program output: -63.62785159143153
Correct output: -107.481309225 | Program output: -107.4813092253153
Correct output: -10.4548540463 | Program output: -10.45485404633153
Correct output: -20.5788443492 | Program output: -20.57884434923153
Correct output: 4.0015797195   | Program output: 4.00157971953153
Correct output: 81.422575027   | Program output: 81.4225750273153
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction integer_add} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction in1} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_mult} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_shove} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_yankdup})
Best program: (float_rot integer_div integer_add integer_add float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_mult print_float integer_div float_div -55 -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod integer_yankdup integer_add integer_shove integer_mod print_integer float_swap integer_swap integer_sub in1 float_swap float_swap float_stackdepth integer_shove float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin integer_shove float_add 52 float_mod integer_yank integer_inc integer_shove integer_mod print_integer integer_yankdup)
Errors: [0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4 0.0 4]
Total: 100.0
Mean: 2.0
Genome size: 78
Size: 79
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3373.9952678000022
Median total errors in population: 1128.0735000000002
Error averages by case: (103.34203850000094 8.191 153.69531820000003 10.074 125.57493400000075 9.295 96.98069049999877 8.102 134.0549721000012 10.344 103.7455838999987 8.659 99.06993099999937 8.003 142.6202200999986 9.746 138.3281415000007 8.698 125.40021549999841 8.175 110.3486987000012 7.981 149.79451540000116 9.535 106.44551000000095 10.188 141.12855299999978 7.838 127.44474660000182 9.234 109.64506770000095 9.46 149.04575310000024 10.651 112.6982997999997 8.206 160.53090369999896 8.985 125.50351069999877 8.734 130.59980679999867 9.036 112.92668079999947 9.378 146.45464689999932 8.84 135.6265271999986 7.974 109.00400209999923 8.659)
Error minima by case: (0.0 2 0.0 2 0.0 2 0.0 2 0.0 3 0.0 2 0.0 2 0.0 4 0.0 2 0.0 2 0.0 2 0.0 3 0.0 3 0.0 3 0.0 2 0.0 2 0.0 3 0.0 2 0.0 3 0.0 2 0.0 3 0.0 2 0.0 2 0.0 2 0.0 3)
Average genome size in population (length): 96.701
Average program size in population (points): 97.701
Average percent parens in population: 0.010
Minimum age in population: 47.46242714859545
Maximum age in population: 52.32602692779619
Average age in population: 50.30941431332112
Median age in population: 50.26894682279089
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.895
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.895
Total error diversity:				 0.261
Error (vector) diversity:			 0.32
Behavioral diversity:				 0.358
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 78010335
--- Timings ---
Current time: 1529614980078 milliseconds
Total Time:         152.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.0 seconds, 36.2%
Fitness Testing:     77.4 seconds, 50.9%
Report:              19.6 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 2505.0
Test mean error for best: 1.25250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 68.98210966621
Correct output: -131.0140839365 | Program output: -131.01408393651
Correct output: -5.5592528532  | Program output: -5.55925285321
Correct output: 59.9596444289  | Program output: 59.95964442891
Correct output: -117.3614120131 | Program output: -117.36141201311
Correct output: 86.6455800457  | Program output: 84.64558004571
Correct output: 59.2320173294  | Program output: 59.23201732941
Correct output: 12.464752481   | Program output: -0.5352475191 
Correct output: -91.236138991  | Program output: -91.2361389911
Correct output: 23.7576154446  | Program output: 23.75761544461
Correct output: 26.757722572   | Program output: 26.7577225721 
Correct output: 112.4622705725 | Program output: 112.46227057251
Correct output: 2.834164078    | Program output: 2.8341640781  
Correct output: -49.0145736823 | Program output: -49.01457368231
Correct output: -52.934708311  | Program output: -52.9347083111
Correct output: 14.7764646206  | Program output: 14.77646462061
Correct output: 42.5296882094  | Program output: 42.52968820941
Correct output: -26.7724158498 | Program output: -26.77241584981
Correct output: -47.8394536481 | Program output: -47.83945364811
Correct output: -63.6278515914 | Program output: -63.62785159141
Correct output: -107.481309225 | Program output: -107.4813092251
Correct output: -10.4548540463 | Program output: -10.45485404631
Correct output: -20.5788443492 | Program output: -20.57884434921
Correct output: 4.0015797195   | Program output: 4.00157971951 
Correct output: 81.422575027   | Program output: 81.4225750271 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_yank} {:instruction float_frominteger} {:instruction in1} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_mult} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_max} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin})
Best program: (float_rot integer_div integer_add integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_swap float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_mult print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth integer_yank integer_shove integer_mod print_integer integer_inc float_sin integer_max float_add 52 float_mod integer_pop integer_min integer_inc integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min integer_inc float_sin)
Errors: [0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 2.0 2 0.0 1 13.0 9 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1]
Total: 49.0
Mean: 0.98
Genome size: 77
Size: 78
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2857.0105932
Median total errors in population: 284.0
Error averages by case: (95.99741910000012 6.552 126.88788700000008 7.362 106.48597880000008 7.349 91.3128390999998 6.569 123.64685100000021 7.984 97.84027029999991 6.619 92.59390419999995 6.432 117.8874760999999 10.254 114.14847359999993 6.795 105.25373039999987 6.84 101.43501720000022 6.611 109.88967920000019 7.352 88.86795140000017 10.666 121.31676370000005 7.621 108.4203587000002 7.036 99.97845730000014 7.216 110.94369220000002 7.546 94.12885450000009 6.747 115.48741759999979 7.188 110.0573554999998 6.916 122.21385719999982 7.527 101.29815469999984 7.228 111.6736834999999 6.702 106.62015129999992 6.54 99.85436959999996 7.118)
Error minima by case: (0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 2 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1)
Average genome size in population (length): 95.95
Average program size in population (points): 96.95
Average percent parens in population: 0.010
Minimum age in population: 49.28966478235088
Maximum age in population: 54.03861282873549
Average age in population: 51.77849696058588
Median age in population: 51.84004750054737
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.882
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.882
Total error diversity:				 0.302
Error (vector) diversity:			 0.354
Behavioral diversity:				 0.476
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 80409360
--- Timings ---
Current time: 1529614984410 milliseconds
Total Time:         156.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.5 seconds, 36.1%
Fitness Testing:     79.8 seconds, 50.9%
Report:              20.2 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 1000.0
Test mean error for best: 0.50000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 68.98210966623
Correct output: -131.0140839365 | Program output: -131.01408393653
Correct output: -5.5592528532  | Program output: -5.55925285323
Correct output: 59.9596444289  | Program output: 59.95964442893
Correct output: -117.3614120131 | Program output: -117.36141201313
Correct output: 86.6455800457  | Program output: 86.64558004573
Correct output: 59.2320173294  | Program output: 59.23201732943
Correct output: 12.464752481   | Program output: 12.4647524813 
Correct output: -91.236138991  | Program output: -91.2361389913
Correct output: 23.7576154446  | Program output: 23.75761544463
Correct output: 26.757722572   | Program output: 26.7577225723 
Correct output: 112.4622705725 | Program output: 112.46227057253
Correct output: 2.834164078    | Program output: 2.8341640783  
Correct output: -49.0145736823 | Program output: -49.01457368233
Correct output: -52.934708311  | Program output: -52.9347083113
Correct output: 14.7764646206  | Program output: 14.77646462063
Correct output: 42.5296882094  | Program output: 42.52968820943
Correct output: -26.7724158498 | Program output: -26.77241584983
Correct output: -47.8394536481 | Program output: -47.83945364813
Correct output: -63.6278515914 | Program output: -63.62785159143
Correct output: -107.481309225 | Program output: -107.4813092253
Correct output: -10.4548540463 | Program output: -10.45485404633
Correct output: -20.5788443492 | Program output: -20.57884434923
Correct output: 4.0015797195   | Program output: 4.00157971953 
Correct output: 81.422575027   | Program output: 81.4225750273 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_add} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction float_div} {:instruction integer_yank} {:instruction integer_swap} {:instruction tag_integer_533} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction in1} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_mult} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction in1} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_sub} {:instruction in1} {:instruction float_swap} {:instruction float_swap} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_integer} {:instruction integer_rot} {:instruction 48} {:instruction float_dec} {:instruction float_add} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction 48} {:instruction float_dec} {:instruction float_pop} {:instruction 52} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction float_dec} {:instruction float_add} {:instruction float_stackdepth})
Best program: (integer_div integer_add integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc integer_min integer_yank integer_swap integer_dec float_dec integer_dec float_yank float_div integer_yank integer_swap tag_integer_533 in2 float_flush integer_yank float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_mult print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_mod integer_pop float_inc float_stackdepth integer_yankdup tagged_764 float_mod in1 integer_swap integer_sub float_frominteger float_swap integer_swap integer_sub in1 float_swap float_swap float_stackdepth integer_shove integer_mod print_integer integer_rot 48 float_dec float_add 52 float_mod integer_yank integer_min 48 float_dec float_pop 52 float_mod integer_yank integer_min integer_inc float_sin float_dec float_add float_stackdepth)
Errors: [0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1]
Total: 25.0
Mean: 0.5
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2548.3544158999994
Median total errors in population: 188.0
Error averages by case: (89.2601572 5.053 112.10526589999999 5.475 95.98240589999995 5.692 81.90837520000001 5.111 114.36308239999995 5.835 90.90911070000001 5.088 83.83983490000001 5.03 106.1170158 8.705 101.76240749999995 5.163 96.9719475 5.434 93.7177768 5.252 95.61989770000002 5.497 79.07265720000001 7.804 112.68167159999997 6.233 95.85165949999997 5.268 88.99370880000001 5.533 98.90717319999997 5.462 79.44208240000009 5.22 99.15263240000004 5.434 100.43108130000006 5.344 112.99554880000002 5.709 89.23230829999994 5.543 97.69507720000007 5.306 95.14945410000001 5.079 95.4540836 5.468)
Error minima by case: (0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1)
Average genome size in population (length): 90.844
Average program size in population (points): 91.844
Average percent parens in population: 0.011
Minimum age in population: 50.93586275470443
Maximum age in population: 55.17034392799542
Average age in population: 53.38315812895875
Median age in population: 53.4252789156817
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.873
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.873
Total error diversity:				 0.259
Error (vector) diversity:			 0.302
Behavioral diversity:				 0.455
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 82681560
--- Timings ---
Current time: 1529614989097 milliseconds
Total Time:         161.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.1 seconds, 36.0%
Fitness Testing:     82.4 seconds, 51.1%
Report:              20.7 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 68.9821096662 
Correct output: -131.0140839365 | Program output: -131.0140839365
Correct output: -5.5592528532  | Program output: -5.5592528532 
Correct output: 59.9596444289  | Program output: 59.9596444289 
Correct output: -117.3614120131 | Program output: -117.3614120131
Correct output: 86.6455800457  | Program output: 86.6455800457 
Correct output: 59.2320173294  | Program output: 59.2320173294 
Correct output: 12.464752481   | Program output: 12.464752481  
Correct output: -91.236138991  | Program output: -91.236138991 
Correct output: 23.7576154446  | Program output: 23.7576154446 
Correct output: 26.757722572   | Program output: 26.757722572  
Correct output: 112.4622705725 | Program output: 112.4622705725
Correct output: 2.834164078    | Program output: 2.834164078   
Correct output: -49.0145736823 | Program output: -49.0145736823
Correct output: -52.934708311  | Program output: -52.934708311 
Correct output: 14.7764646206  | Program output: 14.7764646206 
Correct output: 42.5296882094  | Program output: 42.5296882094 
Correct output: -26.7724158498 | Program output: -26.7724158498
Correct output: -47.8394536481 | Program output: -47.8394536481
Correct output: -63.6278515914 | Program output: -63.6278515914
Correct output: -107.481309225 | Program output: -107.481309225
Correct output: -10.4548540463 | Program output: -10.4548540463
Correct output: -20.5788443492 | Program output: -20.5788443492
Correct output: 4.0015797195   | Program output: 4.0015797195  
Correct output: 81.422575027   | Program output: 81.422575027  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_div} {:instruction integer_add} {:instruction integer_add} {:instruction float_inc} {:instruction -57} {:instruction integer_dup_items} {:instruction 78} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction float_flush} {:instruction float_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction 67.79641498899005} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dec} {:instruction in2} {:instruction float_flush} {:instruction integer_yank} {:instruction float_yank} {:instruction float_frominteger} {:instruction in1} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction float_add} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_mult} {:instruction print_float} {:instruction integer_div} {:instruction float_div} {:instruction -55} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction tagged_764} {:instruction float_mod} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin})
Best program: (float_rot integer_div integer_add integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc float_dec integer_dec float_inc 67.79641498899005 integer_yank integer_swap integer_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_mult print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_dup_items print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod float_inc integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2230.060508699999
Median total errors in population: 100.0
Error averages by case: (74.44233199999998 4.05 104.50584140000001 4.32 84.5943513 4.505 68.39677760000001 4.076 104.59631049999996 4.398 76.0277494 4.12 71.0502877 4.046 85.64534799999997 5.815 94.86498339999996 4.125 83.75367320000001 4.402 79.5527315 4.213 83.08780719999999 4.163 71.1006279 4.421 103.30125889999995 4.707 90.90603249999995 4.158 75.27132350000001 4.468 90.51449470000001 4.138 72.03671180000003 4.065 86.34094550000003 4.108 93.56417880000005 4.244 102.73429599999999 4.298 78.77308839999996 4.405 83.98535930000004 4.215 84.264242 4.021 79.14975620000001 4.119)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 88.785
Average program size in population (points): 89.785
Average percent parens in population: 0.011
Minimum age in population: 51.93586275470443
Maximum age in population: 56.77094994438812
Average age in population: 55.08853762527411
Median age in population: 55.13724967816961
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.872
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.872
Total error diversity:				 0.206
Error (vector) diversity:			 0.245
Behavioral diversity:				 0.421
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 84903235
--- Timings ---
Current time: 1529614993359 milliseconds
Total Time:         165.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.5 seconds, 36.0%
Fitness Testing:     84.6 seconds, 51.1%
Report:              21.2 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 38
Successful program: (float_rot integer_div integer_add integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc float_dec integer_dec float_inc 67.79641498899005 integer_yank integer_swap integer_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_mult print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_dup_items print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod float_inc integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 67


Auto-simplifying with starting size: 67
step: 0
program: (float_rot integer_div integer_add integer_add float_inc -57 integer_dup_items 78 integer_inc in2 float_dec float_flush float_inc float_dec float_flush float_inc float_dec integer_dec float_inc 67.79641498899005 integer_yank integer_swap integer_dec integer_dec float_yank integer_min integer_yank integer_swap integer_dec in2 float_flush integer_yank float_yank float_frominteger in1 integer_mult float_stackdepth integer_shove float_add integer_inc integer_yankdup float_mult print_float integer_div float_div -55 float_mod float_dup_times float_dup integer_sub integer_shove integer_dup_items print_integer float_inc float_stackdepth integer_yankdup tagged_764 float_mod float_inc integer_swap integer_sub float_frominteger integer_yank integer_min integer_inc float_sin)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 67

step: 500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 68.9821096662  | Program output: 68.9821096662 
Correct output: -131.0140839365 | Program output: -131.0140839365
Correct output: -5.5592528532  | Program output: -5.5592528532 
Correct output: 59.9596444289  | Program output: 59.9596444289 
Correct output: -117.3614120131 | Program output: -117.3614120131
Correct output: 86.6455800457  | Program output: 86.6455800457 
Correct output: 59.2320173294  | Program output: 59.2320173294 
Correct output: 12.464752481   | Program output: 12.464752481  
Correct output: -91.236138991  | Program output: -91.236138991 
Correct output: 23.7576154446  | Program output: 23.7576154446 
Correct output: 26.757722572   | Program output: 26.757722572  
Correct output: 112.4622705725 | Program output: 112.4622705725
Correct output: 2.834164078    | Program output: 2.834164078   
Correct output: -49.0145736823 | Program output: -49.0145736823
Correct output: -52.934708311  | Program output: -52.934708311 
Correct output: 14.7764646206  | Program output: 14.7764646206 
Correct output: 42.5296882094  | Program output: 42.5296882094 
Correct output: -26.7724158498 | Program output: -26.7724158498
Correct output: -47.8394536481 | Program output: -47.8394536481
Correct output: -63.6278515914 | Program output: -63.6278515914
Correct output: -107.481309225 | Program output: -107.481309225
Correct output: -10.4548540463 | Program output: -10.4548540463
Correct output: -20.5788443492 | Program output: -20.5788443492
Correct output: 4.0015797195   | Program output: 4.0015797195  
Correct output: 81.422575027   | Program output: 81.422575027  
;;******************************
