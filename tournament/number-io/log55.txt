Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-56.39014043944404 -12] -68.39014043944404]
Train Case:   1 | Input/Output: [[56.23725557922535 64] 120.23725557922535]
Train Case:   2 | Input/Output: [[-20.11679487010744 18] -2.116794870107441]
Train Case:   3 | Input/Output: [[-37.02981468792679 100] 62.97018531207321]
Train Case:   4 | Input/Output: [[30.65172838474396 98] 128.65172838474396]
Train Case:   5 | Input/Output: [[-60.54219728355885 52] -8.542197283558849]
Train Case:   6 | Input/Output: [[-75.80100076957501 37] -38.80100076957501]
Train Case:   7 | Input/Output: [[19.21679622308244 20] 39.21679622308244]
Train Case:   8 | Input/Output: [[31.786285047111505 -56] -24.213714952888495]
Train Case:   9 | Input/Output: [[-37.495760911345634 -21] -58.495760911345634]
Train Case:  10 | Input/Output: [[-9.196483209362 -78] -87.196483209362]
Train Case:  11 | Input/Output: [[50.02883852943373 -53] -2.9711614705662726]
Train Case:  12 | Input/Output: [[-82.11217455112103 1] -81.11217455112103]
Train Case:  13 | Input/Output: [[-15.500355068702191 -34] -49.50035506870219]
Train Case:  14 | Input/Output: [[-99.69763041928836 11] -88.69763041928836]
Train Case:  15 | Input/Output: [[-7.636260839511365 94] 86.36373916048863]
Train Case:  16 | Input/Output: [[38.25487949077029 20] 58.25487949077029]
Train Case:  17 | Input/Output: [[-78.07306428724156 -55] -133.07306428724155]
Train Case:  18 | Input/Output: [[86.20390967087326 -96] -9.796090329126741]
Train Case:  19 | Input/Output: [[-86.75440027520969 -90] -176.7544002752097]
Train Case:  20 | Input/Output: [[-9.816429687536157 -69] -78.81642968753616]
Train Case:  21 | Input/Output: [[-63.70607153070922 -67] -130.7060715307092]
Train Case:  22 | Input/Output: [[7.607465316160329 63] 70.60746531616033]
Train Case:  23 | Input/Output: [[-83.38841949750935 79] -4.3884194975093465]
Train Case:  24 | Input/Output: [[-36.49822386633217 -90] -126.49822386633217]
Test Case:   0 | Input/Output: [[52.22756210128159 89] 141.2275621012816]
Test Case:   1 | Input/Output: [[19.623731059232654 -79] -59.376268940767346]
Test Case:   2 | Input/Output: [[89.91959235939422 -43] 46.919592359394215]
Test Case:   3 | Input/Output: [[-40.084645591361976 -74] -114.08464559136198]
Test Case:   4 | Input/Output: [[-97.7151416166708 53] -44.715141616670806]
Test Case:   5 | Input/Output: [[-16.715760317592412 -56] -72.71576031759241]
Test Case:   6 | Input/Output: [[60.40110033252907 16] 76.40110033252907]
Test Case:   7 | Input/Output: [[-57.24602482929952 66] 8.753975170700478]
Test Case:   8 | Input/Output: [[53.754075732324594 -24] 29.754075732324594]
Test Case:   9 | Input/Output: [[-20.458571253105447 -72] -92.45857125310545]
Test Case:  10 | Input/Output: [[59.99396866978026 -66] -6.0060313302197414]
Test Case:  11 | Input/Output: [[27.576080674172147 -51] -23.423919325827853]
Test Case:  12 | Input/Output: [[1.0780187193529969 88] 89.078018719353]
Test Case:  13 | Input/Output: [[38.593192649036524 -3] 35.593192649036524]
Test Case:  14 | Input/Output: [[30.294624221703344 -64] -33.705375778296656]
Test Case:  15 | Input/Output: [[25.161727084277203 25] 50.1617270842772]
Test Case:  16 | Input/Output: [[5.322899531053309 53] 58.32289953105331]
Test Case:  17 | Input/Output: [[72.59080128819565 -49] 23.59080128819565]
Test Case:  18 | Input/Output: [[34.592946201301544 28] 62.592946201301544]
Test Case:  19 | Input/Output: [[77.35452354966426 -50] 27.354523549664265]
Test Case:  20 | Input/Output: [[-27.108554047671248 -76] -103.10855404767125]
Test Case:  21 | Input/Output: [[-57.98374689660599 -78] -135.983746896606]
Test Case:  22 | Input/Output: [[97.26972806118135 -13] 84.26972806118135]
Test Case:  23 | Input/Output: [[61.71596469616952 -80] -18.28403530383048]
Test Case:  24 | Input/Output: [[20.049986829976547 -10] 10.049986829976547]
Test Case:  25 | Input/Output: [[98.18073537635595 95] 193.18073537635595]
Test Case:  26 | Input/Output: [[-37.679614371453866 91] 53.320385628546134]
Test Case:  27 | Input/Output: [[-17.228956587071266 -41] -58.228956587071266]
Test Case:  28 | Input/Output: [[-64.14929558644711 -54] -118.14929558644711]
Test Case:  29 | Input/Output: [[14.104700744483097 10] 24.104700744483097]
Test Case:  30 | Input/Output: [[-7.99801543928325 -72] -79.99801543928325]
Test Case:  31 | Input/Output: [[35.65867107807409 2] 37.65867107807409]
Test Case:  32 | Input/Output: [[60.23024383686254 18] 78.23024383686254]
Test Case:  33 | Input/Output: [[-83.98955405950358 -14] -97.98955405950358]
Test Case:  34 | Input/Output: [[-74.34806852038929 -28] -102.34806852038929]
Test Case:  35 | Input/Output: [[-92.94587112124715 28] -64.94587112124715]
Test Case:  36 | Input/Output: [[32.1819279836356 87] 119.1819279836356]
Test Case:  37 | Input/Output: [[-60.12951574921415 -40] -100.12951574921415]
Test Case:  38 | Input/Output: [[6.764003596240627 -40] -33.23599640375937]
Test Case:  39 | Input/Output: [[-4.076703817505361 -66] -70.07670381750536]
Test Case:  40 | Input/Output: [[13.428428272370923 18] 31.428428272370923]
Test Case:  41 | Input/Output: [[-82.44067638654495 -2] -84.44067638654495]
Test Case:  42 | Input/Output: [[60.213394970747345 -88] -27.786605029252655]
Test Case:  43 | Input/Output: [[68.38892598022787 -27] 41.38892598022787]
Test Case:  44 | Input/Output: [[32.05580998096363 74] 106.05580998096363]
Test Case:  45 | Input/Output: [[-57.59019835304642 74] 16.409801646953582]
Test Case:  46 | Input/Output: [[3.752903313846261 -53] -49.24709668615374]
Test Case:  47 | Input/Output: [[-2.329877493006421 -87] -89.32987749300642]
Test Case:  48 | Input/Output: [[32.92802167087751 -71] -38.07197832912249]
Test Case:  49 | Input/Output: [[40.7208672180835 70] 110.7208672180835]
Test Case:  50 | Input/Output: [[-32.414291502650855 -17] -49.414291502650855]
Test Case:  51 | Input/Output: [[-37.37171093337095 42] 4.628289066629051]
Test Case:  52 | Input/Output: [[98.05628026069195 53] 151.05628026069195]
Test Case:  53 | Input/Output: [[54.10589528457399 -16] 38.10589528457399]
Test Case:  54 | Input/Output: [[68.65990899172425 -5] 63.65990899172425]
Test Case:  55 | Input/Output: [[-61.27442374959817 -89] -150.27442374959816]
Test Case:  56 | Input/Output: [[25.701573936816914 -100] -74.29842606318309]
Test Case:  57 | Input/Output: [[11.760529985461758 20] 31.76052998546176]
Test Case:  58 | Input/Output: [[-18.708700559426262 99] 80.29129944057374]
Test Case:  59 | Input/Output: [[-31.0567518272385 -19] -50.0567518272385]
Test Case:  60 | Input/Output: [[-43.02114759014306 -81] -124.02114759014306]
Test Case:  61 | Input/Output: [[-0.49422001787291947 59] 58.50577998212708]
Test Case:  62 | Input/Output: [[-94.24372283886682 78] -16.243722838866816]
Test Case:  63 | Input/Output: [[26.176622783067245 -29] -2.823377216932755]
Test Case:  64 | Input/Output: [[50.33413547099383 46] 96.33413547099383]
Test Case:  65 | Input/Output: [[-32.452727495597316 52] 19.547272504402684]
Test Case:  66 | Input/Output: [[-5.197486912470907 81] 75.80251308752909]
Test Case:  67 | Input/Output: [[90.85102877368138 -87] 3.851028773681378]
Test Case:  68 | Input/Output: [[-89.97173447314407 -47] -136.97173447314407]
Test Case:  69 | Input/Output: [[43.727803770172386 44] 87.72780377017239]
Test Case:  70 | Input/Output: [[-64.7249432525397 -24] -88.7249432525397]
Test Case:  71 | Input/Output: [[-56.911973736841226 -38] -94.91197373684122]
Test Case:  72 | Input/Output: [[89.77849451111473 12] 101.77849451111473]
Test Case:  73 | Input/Output: [[-63.35905120214924 -22] -85.35905120214923]
Test Case:  74 | Input/Output: [[-60.309369526634526 -54] -114.30936952663453]
Test Case:  75 | Input/Output: [[44.07398129576009 48] 92.07398129576009]
Test Case:  76 | Input/Output: [[-38.493240810153154 -56] -94.49324081015315]
Test Case:  77 | Input/Output: [[99.05173468216458 -27] 72.05173468216458]
Test Case:  78 | Input/Output: [[51.047057664274746 -37] 14.047057664274746]
Test Case:  79 | Input/Output: [[24.980682391849783 -61] -36.01931760815022]
Test Case:  80 | Input/Output: [[60.27930873081917 -40] 20.279308730819167]
Test Case:  81 | Input/Output: [[12.408139367212854 -95] -82.59186063278715]
Test Case:  82 | Input/Output: [[-12.36656607377806 11] -1.3665660737780598]
Test Case:  83 | Input/Output: [[-23.516955227929316 -88] -111.51695522792932]
Test Case:  84 | Input/Output: [[-68.14160782743227 -91] -159.14160782743227]
Test Case:  85 | Input/Output: [[56.6120542488176 1] 57.6120542488176]
Test Case:  86 | Input/Output: [[1.3160550233141777 -79] -77.68394497668582]
Test Case:  87 | Input/Output: [[16.237507774960775 13] 29.237507774960775]
Test Case:  88 | Input/Output: [[15.721833861839315 38] 53.721833861839315]
Test Case:  89 | Input/Output: [[66.8755895464081 -34] 32.875589546408094]
Test Case:  90 | Input/Output: [[-80.09548779469762 -82] -162.09548779469762]
Test Case:  91 | Input/Output: [[-2.137630590594995 27] 24.862369409405005]
Test Case:  92 | Input/Output: [[-1.5701692708453407 95] 93.42983072915466]
Test Case:  93 | Input/Output: [[11.434845490790721 -26] -14.565154509209279]
Test Case:  94 | Input/Output: [[47.70450876489434 -67] -19.295491235105658]
Test Case:  95 | Input/Output: [[-97.79777246637633 30] -67.79777246637633]
Test Case:  96 | Input/Output: [[-60.434303002216595 69] 8.565696997783405]
Test Case:  97 | Input/Output: [[72.78265024820578 5] 77.78265024820578]
Test Case:  98 | Input/Output: [[3.511583661052981 15] 18.51158366105298]
Test Case:  99 | Input/Output: [[-2.008263943536477 -79] -81.00826394353648]
Test Case: 100 | Input/Output: [[75.57380670242787 41] 116.57380670242787]
Test Case: 101 | Input/Output: [[-13.363052869407326 92] 78.63694713059267]
Test Case: 102 | Input/Output: [[-50.96069070820517 -65] -115.96069070820516]
Test Case: 103 | Input/Output: [[30.095335590031624 -93] -62.904664409968376]
Test Case: 104 | Input/Output: [[-81.91900865887459 80] -1.9190086588745885]
Test Case: 105 | Input/Output: [[78.24582668551392 94] 172.24582668551392]
Test Case: 106 | Input/Output: [[-39.773868181060415 29] -10.773868181060415]
Test Case: 107 | Input/Output: [[15.791282837348163 1] 16.791282837348163]
Test Case: 108 | Input/Output: [[-36.55359964640388 -87] -123.55359964640388]
Test Case: 109 | Input/Output: [[28.639767437782638 -50] -21.360232562217362]
Test Case: 110 | Input/Output: [[-86.64370984144136 -4] -90.64370984144136]
Test Case: 111 | Input/Output: [[0.7535684471061046 -99] -98.2464315528939]
Test Case: 112 | Input/Output: [[66.0067336629163 -58] 8.006733662916304]
Test Case: 113 | Input/Output: [[22.16875591468164 23] 45.16875591468164]
Test Case: 114 | Input/Output: [[74.60766700012618 81] 155.60766700012618]
Test Case: 115 | Input/Output: [[39.96185916337839 -94] -54.03814083662161]
Test Case: 116 | Input/Output: [[62.0822546324537 -53] 9.082254632453697]
Test Case: 117 | Input/Output: [[-57.41890212678131 83] 25.581097873218688]
Test Case: 118 | Input/Output: [[-53.918805882367835 59] 5.081194117632165]
Test Case: 119 | Input/Output: [[-80.89249083707466 39] -41.89249083707466]
Test Case: 120 | Input/Output: [[-69.34795417025691 53] -16.347954170256912]
Test Case: 121 | Input/Output: [[-53.134688697902035 60] 6.865311302097965]
Test Case: 122 | Input/Output: [[60.651140122931565 79] 139.65114012293157]
Test Case: 123 | Input/Output: [[-73.61613176278348 -55] -128.61613176278348]
Test Case: 124 | Input/Output: [[-30.878190263914675 29] -1.878190263914675]
Test Case: 125 | Input/Output: [[-6.469418791423848 -18] -24.46941879142385]
Test Case: 126 | Input/Output: [[1.350900372473788 66] 67.35090037247379]
Test Case: 127 | Input/Output: [[-38.56716717198434 79] 40.43283282801566]
Test Case: 128 | Input/Output: [[-82.2779426715511 -89] -171.2779426715511]
Test Case: 129 | Input/Output: [[-24.867198963439876 13] -11.867198963439876]
Test Case: 130 | Input/Output: [[-81.11286791852565 3] -78.11286791852565]
Test Case: 131 | Input/Output: [[-70.759838759931 -30] -100.759838759931]
Test Case: 132 | Input/Output: [[37.94262744401641 55] 92.94262744401641]
Test Case: 133 | Input/Output: [[-22.33873212302231 59] 36.66126787697769]
Test Case: 134 | Input/Output: [[89.65058229961767 -28] 61.65058229961767]
Test Case: 135 | Input/Output: [[43.82333906349416 -67] -23.17666093650584]
Test Case: 136 | Input/Output: [[94.43002506365133 3] 97.43002506365133]
Test Case: 137 | Input/Output: [[-14.940195808724653 18] 3.0598041912753473]
Test Case: 138 | Input/Output: [[-81.71685456854337 -51] -132.71685456854337]
Test Case: 139 | Input/Output: [[24.299992488720832 72] 96.29999248872083]
Test Case: 140 | Input/Output: [[60.64487397366818 -27] 33.64487397366818]
Test Case: 141 | Input/Output: [[-13.303325582630393 17] 3.696674417369607]
Test Case: 142 | Input/Output: [[94.36034256487397 -77] 17.360342564873974]
Test Case: 143 | Input/Output: [[16.681938667190565 55] 71.68193866719056]
Test Case: 144 | Input/Output: [[92.0689759021653 -29] 63.068975902165306]
Test Case: 145 | Input/Output: [[71.37297860831396 -98] -26.627021391686043]
Test Case: 146 | Input/Output: [[-15.304777917765705 46] 30.695222082234295]
Test Case: 147 | Input/Output: [[-95.50969309056964 -54] -149.50969309056964]
Test Case: 148 | Input/Output: [[26.1159496490978 9] 35.1159496490978]
Test Case: 149 | Input/Output: [[20.966768376672974 -87] -66.03323162332703]
Test Case: 150 | Input/Output: [[33.95929240763954 -99] -65.04070759236046]
Test Case: 151 | Input/Output: [[-30.988330009370685 -97] -127.98833000937069]
Test Case: 152 | Input/Output: [[27.764810474433247 24] 51.76481047443325]
Test Case: 153 | Input/Output: [[81.03614467513316 -58] 23.03614467513316]
Test Case: 154 | Input/Output: [[-40.83599916469647 89] 48.16400083530353]
Test Case: 155 | Input/Output: [[-4.664937090641573 -89] -93.66493709064157]
Test Case: 156 | Input/Output: [[-79.11516167432491 61] -18.11516167432491]
Test Case: 157 | Input/Output: [[-26.23687044323833 -11] -37.23687044323833]
Test Case: 158 | Input/Output: [[-67.43759409790573 11] -56.43759409790573]
Test Case: 159 | Input/Output: [[-94.38983964389021 75] -19.389839643890213]
Test Case: 160 | Input/Output: [[97.41433301281438 -24] 73.41433301281438]
Test Case: 161 | Input/Output: [[4.843054596593106 -80] -75.1569454034069]
Test Case: 162 | Input/Output: [[58.52178577806498 8] 66.52178577806498]
Test Case: 163 | Input/Output: [[-85.32420272609495 -89] -174.32420272609494]
Test Case: 164 | Input/Output: [[63.58259360191815 47] 110.58259360191815]
Test Case: 165 | Input/Output: [[-31.40076418320659 -71] -102.40076418320659]
Test Case: 166 | Input/Output: [[43.993249740477125 -42] 1.9932497404771254]
Test Case: 167 | Input/Output: [[-97.8121855988772 -72] -169.8121855988772]
Test Case: 168 | Input/Output: [[-90.81252121540521 63] -27.812521215405212]
Test Case: 169 | Input/Output: [[-34.56760639856293 84] 49.43239360143707]
Test Case: 170 | Input/Output: [[-13.202106038840682 -32] -45.20210603884068]
Test Case: 171 | Input/Output: [[32.54817717524793 -14] 18.54817717524793]
Test Case: 172 | Input/Output: [[81.24316624280911 62] 143.2431662428091]
Test Case: 173 | Input/Output: [[-66.6332298508334 80] 13.366770149166598]
Test Case: 174 | Input/Output: [[17.30892040541299 37] 54.30892040541299]
Test Case: 175 | Input/Output: [[21.692895518967873 31] 52.69289551896787]
Test Case: 176 | Input/Output: [[-44.868231863672705 53] 8.131768136327295]
Test Case: 177 | Input/Output: [[87.87577384807338 63] 150.87577384807338]
Test Case: 178 | Input/Output: [[31.42822776926394 -71] -39.57177223073606]
Test Case: 179 | Input/Output: [[-67.70549626172242 -57] -124.70549626172242]
Test Case: 180 | Input/Output: [[45.05121717705987 -28] 17.05121717705987]
Test Case: 181 | Input/Output: [[-88.4227443645327 11] -77.4227443645327]
Test Case: 182 | Input/Output: [[83.1570402753027 68] 151.1570402753027]
Test Case: 183 | Input/Output: [[7.921714954145173 -13] -5.078285045854827]
Test Case: 184 | Input/Output: [[-23.067271136848035 2] -21.067271136848035]
Test Case: 185 | Input/Output: [[56.98396679619549 -7] 49.98396679619549]
Test Case: 186 | Input/Output: [[-3.7747461617260853 -81] -84.77474616172609]
Test Case: 187 | Input/Output: [[0.059789855789318835 -59] -58.94021014421068]
Test Case: 188 | Input/Output: [[1.1024754983457257 -35] -33.897524501654274]
Test Case: 189 | Input/Output: [[89.81835539568198 21] 110.81835539568198]
Test Case: 190 | Input/Output: [[91.11370681118686 6] 97.11370681118686]
Test Case: 191 | Input/Output: [[-6.040926500111027 59] 52.95907349988897]
Test Case: 192 | Input/Output: [[94.25931334266252 -9] 85.25931334266252]
Test Case: 193 | Input/Output: [[91.84670371145998 -95] -3.1532962885400195]
Test Case: 194 | Input/Output: [[-61.14346173720189 -73] -134.1434617372019]
Test Case: 195 | Input/Output: [[56.8381054835381 -10] 46.8381054835381]
Test Case: 196 | Input/Output: [[-89.42768624457374 -71] -160.42768624457375]
Test Case: 197 | Input/Output: [[-18.54939740291985 96] 77.45060259708015]
Test Case: 198 | Input/Output: [[-32.570642995410324 -64] -96.57064299541032]
Test Case: 199 | Input/Output: [[39.46405241823939 -10] 29.46405241823939]
Test Case: 200 | Input/Output: [[-59.758554442796274 56] -3.7585544427962745]
Test Case: 201 | Input/Output: [[15.5291598866621 -78] -62.4708401133379]
Test Case: 202 | Input/Output: [[18.220856546601 -51] -32.779143453399]
Test Case: 203 | Input/Output: [[-21.645152038380758 46] 24.354847961619242]
Test Case: 204 | Input/Output: [[-92.56516494565865 63] -29.56516494565865]
Test Case: 205 | Input/Output: [[-12.538335653185001 61] 48.461664346815]
Test Case: 206 | Input/Output: [[-8.33154998821361 -94] -102.33154998821361]
Test Case: 207 | Input/Output: [[40.54536677699065 -12] 28.545366776990647]
Test Case: 208 | Input/Output: [[32.50046272995351 -39] -6.499537270046488]
Test Case: 209 | Input/Output: [[-39.35113167655746 56] 16.648868323442542]
Test Case: 210 | Input/Output: [[2.8065682789214463 -70] -67.19343172107855]
Test Case: 211 | Input/Output: [[57.53729009595236 78] 135.53729009595236]
Test Case: 212 | Input/Output: [[-81.53849613294994 -41] -122.53849613294994]
Test Case: 213 | Input/Output: [[98.86912810516753 78] 176.86912810516753]
Test Case: 214 | Input/Output: [[-11.122910487992257 -99] -110.12291048799226]
Test Case: 215 | Input/Output: [[90.52197449318405 -50] 40.52197449318405]
Test Case: 216 | Input/Output: [[-22.69105766067507 -87] -109.69105766067507]
Test Case: 217 | Input/Output: [[-64.5833220689958 -81] -145.5833220689958]
Test Case: 218 | Input/Output: [[64.04001035486382 -11] 53.040010354863824]
Test Case: 219 | Input/Output: [[-91.741499328673 -24] -115.741499328673]
Test Case: 220 | Input/Output: [[-44.65147828886424 74] 29.34852171113576]
Test Case: 221 | Input/Output: [[-28.236707364653043 46] 17.763292635346957]
Test Case: 222 | Input/Output: [[-84.54818111906906 -4] -88.54818111906906]
Test Case: 223 | Input/Output: [[-15.662069109965927 -46] -61.66206910996593]
Test Case: 224 | Input/Output: [[-27.54456338132674 -11] -38.54456338132674]
Test Case: 225 | Input/Output: [[-27.526128602304837 38] 10.473871397695163]
Test Case: 226 | Input/Output: [[87.15449354274648 -7] 80.15449354274648]
Test Case: 227 | Input/Output: [[12.885002355470832 88] 100.88500235547083]
Test Case: 228 | Input/Output: [[-10.058765279082294 79] 68.9412347209177]
Test Case: 229 | Input/Output: [[-8.569332869359457 45] 36.43066713064054]
Test Case: 230 | Input/Output: [[37.49344047271143 -47] -9.506559527288573]
Test Case: 231 | Input/Output: [[-19.87354386652636 47] 27.12645613347364]
Test Case: 232 | Input/Output: [[14.273350433237056 88] 102.27335043323706]
Test Case: 233 | Input/Output: [[49.502753547218106 -82] -32.497246452781894]
Test Case: 234 | Input/Output: [[-20.374102140139016 -82] -102.37410214013902]
Test Case: 235 | Input/Output: [[35.02136120873055 72] 107.02136120873055]
Test Case: 236 | Input/Output: [[-57.973897102496316 -28] -85.97389710249632]
Test Case: 237 | Input/Output: [[-16.43369524752609 -57] -73.43369524752609]
Test Case: 238 | Input/Output: [[4.7958057540003125 -7] -2.2041942459996875]
Test Case: 239 | Input/Output: [[67.7071084341053 25] 92.7071084341053]
Test Case: 240 | Input/Output: [[68.07873343508203 70] 138.07873343508203]
Test Case: 241 | Input/Output: [[-0.21016963247416243 -19] -19.210169632474162]
Test Case: 242 | Input/Output: [[80.88182233112354 47] 127.88182233112354]
Test Case: 243 | Input/Output: [[45.86775740262644 -33] 12.867757402626438]
Test Case: 244 | Input/Output: [[-62.3966366738111 -46] -108.3966366738111]
Test Case: 245 | Input/Output: [[-38.75565179711911 -59] -97.7556517971191]
Test Case: 246 | Input/Output: [[50.57001471983878 -89] -38.42998528016122]
Test Case: 247 | Input/Output: [[44.56587369996822 34] 78.56587369996822]
Test Case: 248 | Input/Output: [[35.34586230891637 -68] -32.65413769108363]
Test Case: 249 | Input/Output: [[84.83704738969976 -93] -8.162952610300238]
Test Case: 250 | Input/Output: [[-10.988691164592424 -51] -61.988691164592424]
Test Case: 251 | Input/Output: [[-12.487111992321417 -84] -96.48711199232142]
Test Case: 252 | Input/Output: [[11.25094117252614 79] 90.25094117252614]
Test Case: 253 | Input/Output: [[15.646615239357203 -55] -39.3533847606428]
Test Case: 254 | Input/Output: [[-89.28887672563059 -72] -161.2888767256306]
Test Case: 255 | Input/Output: [[45.67325568200786 -88] -42.32674431799214]
Test Case: 256 | Input/Output: [[-31.084968261310394 1] -30.084968261310394]
Test Case: 257 | Input/Output: [[-83.81895743745618 86] 2.181042562543823]
Test Case: 258 | Input/Output: [[77.77555157954404 -69] 8.775551579544043]
Test Case: 259 | Input/Output: [[43.13588685652101 -2] 41.13588685652101]
Test Case: 260 | Input/Output: [[51.4699507348806 70] 121.4699507348806]
Test Case: 261 | Input/Output: [[-13.48347322597236 68] 54.51652677402764]
Test Case: 262 | Input/Output: [[40.71619897059145 -83] -42.28380102940855]
Test Case: 263 | Input/Output: [[52.562961325055426 43] 95.56296132505543]
Test Case: 264 | Input/Output: [[-85.07165071811882 67] -18.071650718118818]
Test Case: 265 | Input/Output: [[-38.676307106064264 37] -1.6763071060642645]
Test Case: 266 | Input/Output: [[39.28432485867137 5] 44.28432485867137]
Test Case: 267 | Input/Output: [[39.39804342343663 39] 78.39804342343663]
Test Case: 268 | Input/Output: [[32.233368276821494 73] 105.2333682768215]
Test Case: 269 | Input/Output: [[-10.160521567219561 11] 0.8394784327804388]
Test Case: 270 | Input/Output: [[-36.754865517200884 -21] -57.754865517200884]
Test Case: 271 | Input/Output: [[-58.1607305639936 65] 6.839269436006397]
Test Case: 272 | Input/Output: [[4.9401198651171825 -16] -11.059880134882818]
Test Case: 273 | Input/Output: [[-47.343892353909055 -93] -140.34389235390904]
Test Case: 274 | Input/Output: [[77.50799727450402 57] 134.50799727450402]
Test Case: 275 | Input/Output: [[-14.16634946722391 61] 46.83365053277609]
Test Case: 276 | Input/Output: [[-12.439921095420473 -86] -98.43992109542047]
Test Case: 277 | Input/Output: [[-20.736564305250965 -37] -57.736564305250965]
Test Case: 278 | Input/Output: [[71.63214014397653 32] 103.63214014397653]
Test Case: 279 | Input/Output: [[-85.63752077112943 20] -65.63752077112943]
Test Case: 280 | Input/Output: [[79.23217634255124 12] 91.23217634255124]
Test Case: 281 | Input/Output: [[86.93770504135136 91] 177.93770504135136]
Test Case: 282 | Input/Output: [[89.34899851149603 98] 187.34899851149603]
Test Case: 283 | Input/Output: [[-45.69929201823146 -25] -70.69929201823146]
Test Case: 284 | Input/Output: [[86.97073824770101 -84] 2.970738247701007]
Test Case: 285 | Input/Output: [[-56.70259310224031 59] 2.297406897759693]
Test Case: 286 | Input/Output: [[-82.67795714769288 39] -43.67795714769288]
Test Case: 287 | Input/Output: [[-49.676208344828666 96] 46.323791655171334]
Test Case: 288 | Input/Output: [[-33.40204968036244 49] 15.597950319637562]
Test Case: 289 | Input/Output: [[-78.83429499060874 -70] -148.83429499060873]
Test Case: 290 | Input/Output: [[62.02560449423734 86] 148.02560449423734]
Test Case: 291 | Input/Output: [[-56.60101967617634 -16] -72.60101967617635]
Test Case: 292 | Input/Output: [[36.20753169379006 -22] 14.20753169379006]
Test Case: 293 | Input/Output: [[71.79753049314672 58] 129.79753049314672]
Test Case: 294 | Input/Output: [[-78.03320623502488 -100] -178.03320623502486]
Test Case: 295 | Input/Output: [[67.44572374433838 79] 146.44572374433838]
Test Case: 296 | Input/Output: [[49.40774386168539 -51] -1.5922561383146103]
Test Case: 297 | Input/Output: [[-69.39173769444494 -31] -100.39173769444494]
Test Case: 298 | Input/Output: [[6.926282002673872 -88] -81.07371799732613]
Test Case: 299 | Input/Output: [[37.909310460864475 -33] 4.909310460864475]
Test Case: 300 | Input/Output: [[-7.819505868659732 -98] -105.81950586865973]
Test Case: 301 | Input/Output: [[-27.66337191577557 -97] -124.66337191577557]
Test Case: 302 | Input/Output: [[-73.23175762918481 66] -7.231757629184813]
Test Case: 303 | Input/Output: [[-13.19647447131402 -34] -47.19647447131402]
Test Case: 304 | Input/Output: [[51.74481316260713 -3] 48.74481316260713]
Test Case: 305 | Input/Output: [[58.06997595151262 82] 140.06997595151262]
Test Case: 306 | Input/Output: [[-28.73527171637585 50] 21.26472828362415]
Test Case: 307 | Input/Output: [[-42.509025319152926 -51] -93.50902531915293]
Test Case: 308 | Input/Output: [[-43.44453204941479 -32] -75.44453204941479]
Test Case: 309 | Input/Output: [[15.52715386988335 -93] -77.47284613011665]
Test Case: 310 | Input/Output: [[-31.0328109615331 28] -3.0328109615331016]
Test Case: 311 | Input/Output: [[10.732245647493329 -5] 5.732245647493329]
Test Case: 312 | Input/Output: [[20.278672402119426 54] 74.27867240211943]
Test Case: 313 | Input/Output: [[-54.20558907671287 -38] -92.20558907671287]
Test Case: 314 | Input/Output: [[-25.44149098514039 54] 28.55850901485961]
Test Case: 315 | Input/Output: [[-48.79517553503292 -45] -93.79517553503291]
Test Case: 316 | Input/Output: [[-29.210223581183655 -19] -48.210223581183655]
Test Case: 317 | Input/Output: [[8.09557748199525 -79] -70.90442251800475]
Test Case: 318 | Input/Output: [[5.986580840818334 -90] -84.01341915918167]
Test Case: 319 | Input/Output: [[-90.01131804670615 -65] -155.01131804670615]
Test Case: 320 | Input/Output: [[-18.65242023895152 7] -11.652420238951521]
Test Case: 321 | Input/Output: [[-76.80524883016908 -8] -84.80524883016908]
Test Case: 322 | Input/Output: [[48.17897376146405 18] 66.17897376146405]
Test Case: 323 | Input/Output: [[-41.56591995527235 1] -40.56591995527235]
Test Case: 324 | Input/Output: [[-55.83121559236108 73] 17.168784407638917]
Test Case: 325 | Input/Output: [[73.38965004131319 27] 100.38965004131319]
Test Case: 326 | Input/Output: [[42.38803924764386 39] 81.38803924764386]
Test Case: 327 | Input/Output: [[79.28223205809152 19] 98.28223205809152]
Test Case: 328 | Input/Output: [[-84.38658155377281 27] -57.386581553772814]
Test Case: 329 | Input/Output: [[-41.80162504092375 -57] -98.80162504092375]
Test Case: 330 | Input/Output: [[96.80491239727829 -72] 24.804912397278287]
Test Case: 331 | Input/Output: [[-71.57112505026137 85] 13.428874949738628]
Test Case: 332 | Input/Output: [[-36.51742033750467 26] -10.517420337504667]
Test Case: 333 | Input/Output: [[-41.78172324364946 87] 45.21827675635054]
Test Case: 334 | Input/Output: [[-85.4145852604912 98] 12.585414739508806]
Test Case: 335 | Input/Output: [[-18.569586331045613 53] 34.43041366895439]
Test Case: 336 | Input/Output: [[-91.87532786509267 -81] -172.8753278650927]
Test Case: 337 | Input/Output: [[-77.39354104084009 -45] -122.39354104084009]
Test Case: 338 | Input/Output: [[47.89768127488438 -38] 9.897681274884377]
Test Case: 339 | Input/Output: [[-12.74032601436781 24] 11.25967398563219]
Test Case: 340 | Input/Output: [[1.3021101940400541 76] 77.30211019404005]
Test Case: 341 | Input/Output: [[-96.07035515984744 27] -69.07035515984744]
Test Case: 342 | Input/Output: [[11.942875720856037 47] 58.94287572085604]
Test Case: 343 | Input/Output: [[-96.91812735978816 -9] -105.91812735978816]
Test Case: 344 | Input/Output: [[68.37449956607139 -39] 29.374499566071393]
Test Case: 345 | Input/Output: [[-17.491670794816812 -49] -66.49167079481681]
Test Case: 346 | Input/Output: [[-49.86410437202249 90] 40.13589562797751]
Test Case: 347 | Input/Output: [[-61.6556869540907 66] 4.344313045909303]
Test Case: 348 | Input/Output: [[-23.74021749517179 48] 24.25978250482821]
Test Case: 349 | Input/Output: [[97.22556374250539 96] 193.2255637425054]
Test Case: 350 | Input/Output: [[97.22348987360738 70] 167.22348987360738]
Test Case: 351 | Input/Output: [[-35.17457899916501 96] 60.82542100083499]
Test Case: 352 | Input/Output: [[-91.04929110604867 -99] -190.04929110604866]
Test Case: 353 | Input/Output: [[-39.69506097790641 74] 34.30493902209359]
Test Case: 354 | Input/Output: [[90.7736046437924 -28] 62.773604643792396]
Test Case: 355 | Input/Output: [[42.106855173198 -43] -0.8931448268020006]
Test Case: 356 | Input/Output: [[20.621000053848576 -91] -70.37899994615142]
Test Case: 357 | Input/Output: [[-77.92695592844305 -57] -134.92695592844305]
Test Case: 358 | Input/Output: [[25.921029988535338 29] 54.92102998853534]
Test Case: 359 | Input/Output: [[-38.27031412284274 -69] -107.27031412284273]
Test Case: 360 | Input/Output: [[-90.65271763885943 -77] -167.65271763885943]
Test Case: 361 | Input/Output: [[77.70375292932854 -34] 43.703752929328544]
Test Case: 362 | Input/Output: [[58.229530359998876 57] 115.22953035999888]
Test Case: 363 | Input/Output: [[-82.14526750201681 50] -32.14526750201681]
Test Case: 364 | Input/Output: [[87.59650230627372 -99] -11.40349769372628]
Test Case: 365 | Input/Output: [[-44.030593467279914 64] 19.969406532720086]
Test Case: 366 | Input/Output: [[96.74915399421607 84] 180.74915399421607]
Test Case: 367 | Input/Output: [[-1.526642352275573 5] 3.473357647724427]
Test Case: 368 | Input/Output: [[2.537820338618758 24] 26.537820338618758]
Test Case: 369 | Input/Output: [[-46.63232152993333 23] -23.63232152993333]
Test Case: 370 | Input/Output: [[-16.257257190282786 -1] -17.257257190282786]
Test Case: 371 | Input/Output: [[-30.04498668926361 -87] -117.04498668926361]
Test Case: 372 | Input/Output: [[-29.633396100364507 72] 42.36660389963549]
Test Case: 373 | Input/Output: [[-1.3726064480214575 -60] -61.37260644802146]
Test Case: 374 | Input/Output: [[61.091539548826006 2] 63.091539548826006]
Test Case: 375 | Input/Output: [[47.476958510563634 99] 146.47695851056363]
Test Case: 376 | Input/Output: [[59.290495575052006 10] 69.290495575052]
Test Case: 377 | Input/Output: [[-91.37752219382922 -75] -166.37752219382924]
Test Case: 378 | Input/Output: [[-44.33351283906788 49] 4.666487160932121]
Test Case: 379 | Input/Output: [[-3.942937349670842 31] 27.057062650329158]
Test Case: 380 | Input/Output: [[51.67853577307898 -49] 2.678535773078977]
Test Case: 381 | Input/Output: [[-28.671850296962404 -67] -95.6718502969624]
Test Case: 382 | Input/Output: [[50.00466082501882 -29] 21.004660825018817]
Test Case: 383 | Input/Output: [[4.200209562120122 21] 25.200209562120122]
Test Case: 384 | Input/Output: [[67.1918226175024 -23] 44.191822617502396]
Test Case: 385 | Input/Output: [[-47.57107653363697 74] 26.42892346636303]
Test Case: 386 | Input/Output: [[-88.20851208721723 -82] -170.20851208721723]
Test Case: 387 | Input/Output: [[80.5116159034759 6] 86.5116159034759]
Test Case: 388 | Input/Output: [[96.54074136644488 61] 157.54074136644488]
Test Case: 389 | Input/Output: [[-2.9034333698381545 -69] -71.90343336983815]
Test Case: 390 | Input/Output: [[82.78150663011249 98] 180.7815066301125]
Test Case: 391 | Input/Output: [[93.71093779533092 78] 171.71093779533092]
Test Case: 392 | Input/Output: [[-79.11880978507236 -68] -147.11880978507236]
Test Case: 393 | Input/Output: [[-47.123583712645335 -99] -146.12358371264534]
Test Case: 394 | Input/Output: [[5.2652367946385965 88] 93.2652367946386]
Test Case: 395 | Input/Output: [[-43.93363276794042 24] -19.933632767940423]
Test Case: 396 | Input/Output: [[-39.57217571608032 -15] -54.57217571608032]
Test Case: 397 | Input/Output: [[-91.17803639868714 40] -51.17803639868714]
Test Case: 398 | Input/Output: [[-80.95104476576637 -18] -98.95104476576637]
Test Case: 399 | Input/Output: [[21.708884773852063 -40] -18.291115226147937]
Test Case: 400 | Input/Output: [[-41.22087331507613 -13] -54.22087331507613]
Test Case: 401 | Input/Output: [[-71.94429921116894 84] 12.05570078883106]
Test Case: 402 | Input/Output: [[11.77433086469415 92] 103.77433086469415]
Test Case: 403 | Input/Output: [[73.45001160928828 9] 82.45001160928828]
Test Case: 404 | Input/Output: [[76.58412544692234 -96] -19.415874553077657]
Test Case: 405 | Input/Output: [[72.795434977698 -67] 5.795434977697994]
Test Case: 406 | Input/Output: [[24.038327673022934 68] 92.03832767302293]
Test Case: 407 | Input/Output: [[50.29789469084548 -53] -2.7021053091545184]
Test Case: 408 | Input/Output: [[-39.20655875538135 -93] -132.20655875538137]
Test Case: 409 | Input/Output: [[0.5856984884932075 -58] -57.41430151150679]
Test Case: 410 | Input/Output: [[-35.83311980250268 13] -22.83311980250268]
Test Case: 411 | Input/Output: [[-5.275230764633918 6] 0.7247692353660824]
Test Case: 412 | Input/Output: [[92.98377645987347 29] 121.98377645987347]
Test Case: 413 | Input/Output: [[78.38603269085661 -59] 19.38603269085661]
Test Case: 414 | Input/Output: [[-8.919206761809846 -52] -60.919206761809846]
Test Case: 415 | Input/Output: [[-55.265131349003816 -53] -108.26513134900381]
Test Case: 416 | Input/Output: [[14.974372616539753 42] 56.97437261653975]
Test Case: 417 | Input/Output: [[-29.72705601180492 81] 51.27294398819508]
Test Case: 418 | Input/Output: [[-98.46247986374325 -37] -135.46247986374325]
Test Case: 419 | Input/Output: [[54.60389834425331 6] 60.60389834425331]
Test Case: 420 | Input/Output: [[79.3899025445111 -68] 11.389902544511102]
Test Case: 421 | Input/Output: [[-29.455756326209382 -84] -113.45575632620938]
Test Case: 422 | Input/Output: [[-65.38224061331539 3] -62.38224061331539]
Test Case: 423 | Input/Output: [[-45.45746026117434 -77] -122.45746026117433]
Test Case: 424 | Input/Output: [[13.7247736774343 61] 74.7247736774343]
Test Case: 425 | Input/Output: [[83.95341975638135 -71] 12.95341975638135]
Test Case: 426 | Input/Output: [[57.509649677827156 48] 105.50964967782716]
Test Case: 427 | Input/Output: [[-71.6051993974261 -98] -169.6051993974261]
Test Case: 428 | Input/Output: [[78.22892028288499 46] 124.22892028288499]
Test Case: 429 | Input/Output: [[86.40033725018404 -64] 22.400337250184037]
Test Case: 430 | Input/Output: [[80.34661517759767 -83] -2.65338482240233]
Test Case: 431 | Input/Output: [[-53.61958050611311 -26] -79.61958050611311]
Test Case: 432 | Input/Output: [[-34.6330408424995 -34] -68.6330408424995]
Test Case: 433 | Input/Output: [[92.90569191722619 52] 144.9056919172262]
Test Case: 434 | Input/Output: [[43.93478032050572 -74] -30.065219679494277]
Test Case: 435 | Input/Output: [[-61.31064149119745 55] -6.310641491197451]
Test Case: 436 | Input/Output: [[-95.33649471457504 -14] -109.33649471457504]
Test Case: 437 | Input/Output: [[93.72626403669139 43] 136.7262640366914]
Test Case: 438 | Input/Output: [[-0.5345633174529638 -42] -42.534563317452964]
Test Case: 439 | Input/Output: [[68.02066457991279 86] 154.0206645799128]
Test Case: 440 | Input/Output: [[-63.05113397926847 -66] -129.05113397926846]
Test Case: 441 | Input/Output: [[-93.0691296709498 38] -55.069129670949806]
Test Case: 442 | Input/Output: [[67.87212964373273 47] 114.87212964373273]
Test Case: 443 | Input/Output: [[11.2099165529701 42] 53.2099165529701]
Test Case: 444 | Input/Output: [[99.07663274959995 -46] 53.07663274959995]
Test Case: 445 | Input/Output: [[-96.80855001424969 64] -32.80855001424969]
Test Case: 446 | Input/Output: [[-39.8634602417554 6] -33.8634602417554]
Test Case: 447 | Input/Output: [[60.971003605548134 -86] -25.028996394451866]
Test Case: 448 | Input/Output: [[47.17090546241539 -79] -31.82909453758461]
Test Case: 449 | Input/Output: [[-77.39797883853456 37] -40.397978838534556]
Test Case: 450 | Input/Output: [[9.474822092923233 -2] 7.474822092923233]
Test Case: 451 | Input/Output: [[20.895570532693796 17] 37.895570532693796]
Test Case: 452 | Input/Output: [[-46.73644787447409 26] -20.736447874474088]
Test Case: 453 | Input/Output: [[-31.49719099262076 -80] -111.49719099262076]
Test Case: 454 | Input/Output: [[24.13904567548417 -27] -2.8609543245158306]
Test Case: 455 | Input/Output: [[14.650254748402531 0] 14.650254748402531]
Test Case: 456 | Input/Output: [[-18.737184194502163 -91] -109.73718419450216]
Test Case: 457 | Input/Output: [[13.420724721042234 -81] -67.57927527895777]
Test Case: 458 | Input/Output: [[-2.1231721054898003 71] 68.8768278945102]
Test Case: 459 | Input/Output: [[-13.332768117352273 0] -13.332768117352273]
Test Case: 460 | Input/Output: [[35.323971141011896 3] 38.323971141011896]
Test Case: 461 | Input/Output: [[71.12716918547699 -98] -26.872830814523013]
Test Case: 462 | Input/Output: [[-92.534825004068 -58] -150.534825004068]
Test Case: 463 | Input/Output: [[-9.670648633978175 41] 31.329351366021825]
Test Case: 464 | Input/Output: [[-87.30444938021245 19] -68.30444938021245]
Test Case: 465 | Input/Output: [[49.60537436433924 -19] 30.60537436433924]
Test Case: 466 | Input/Output: [[5.330833265992425 21] 26.330833265992425]
Test Case: 467 | Input/Output: [[-33.595097297593426 -50] -83.59509729759343]
Test Case: 468 | Input/Output: [[13.04719879882046 53] 66.04719879882046]
Test Case: 469 | Input/Output: [[27.71302650114147 -27] 0.7130265011414707]
Test Case: 470 | Input/Output: [[-55.62626482015525 46] -9.62626482015525]
Test Case: 471 | Input/Output: [[-90.12318008342652 83] -7.123180083426519]
Test Case: 472 | Input/Output: [[-71.47064313990359 34] -37.470643139903586]
Test Case: 473 | Input/Output: [[-5.9068677184645395 21] 15.09313228153546]
Test Case: 474 | Input/Output: [[-10.203123627024624 48] 37.796876372975376]
Test Case: 475 | Input/Output: [[-19.61303333842646 -23] -42.61303333842646]
Test Case: 476 | Input/Output: [[-66.31567713239374 -96] -162.31567713239374]
Test Case: 477 | Input/Output: [[-46.156910390221604 -93] -139.1569103902216]
Test Case: 478 | Input/Output: [[57.771643719620755 -76] -18.228356280379245]
Test Case: 479 | Input/Output: [[-43.382407744722954 54] 10.617592255277046]
Test Case: 480 | Input/Output: [[64.84344154111261 -39] 25.84344154111261]
Test Case: 481 | Input/Output: [[-5.603936062265944 98] 92.39606393773406]
Test Case: 482 | Input/Output: [[-16.901449974245367 45] 28.098550025754633]
Test Case: 483 | Input/Output: [[-66.42365975108555 11] -55.42365975108555]
Test Case: 484 | Input/Output: [[37.439132606680715 -99] -61.560867393319285]
Test Case: 485 | Input/Output: [[-7.169882239984787 -18] -25.169882239984787]
Test Case: 486 | Input/Output: [[-76.06536970514503 -89] -165.06536970514503]
Test Case: 487 | Input/Output: [[14.526801724745027 -48] -33.47319827525497]
Test Case: 488 | Input/Output: [[57.426305051095 94] 151.426305051095]
Test Case: 489 | Input/Output: [[-55.4042946021712 70] 14.595705397828802]
Test Case: 490 | Input/Output: [[-2.1949266497113484 0] -2.1949266497113484]
Test Case: 491 | Input/Output: [[71.82626084394624 -66] 5.826260843946244]
Test Case: 492 | Input/Output: [[-42.69006695840074 -13] -55.69006695840074]
Test Case: 493 | Input/Output: [[32.252358858544454 -25] 7.252358858544454]
Test Case: 494 | Input/Output: [[68.86025578815475 -62] 6.8602557881547455]
Test Case: 495 | Input/Output: [[7.296019010695403 -5] 2.296019010695403]
Test Case: 496 | Input/Output: [[71.89153103554708 26] 97.89153103554708]
Test Case: 497 | Input/Output: [[-48.24270987582911 82] 33.75729012417089]
Test Case: 498 | Input/Output: [[-65.75177188690189 -73] -138.7517718869019]
Test Case: 499 | Input/Output: [[88.53224199420589 41] 129.5322419942059]
Test Case: 500 | Input/Output: [[-15.05370101928969 -51] -66.05370101928969]
Test Case: 501 | Input/Output: [[78.61972974796515 24] 102.61972974796515]
Test Case: 502 | Input/Output: [[-80.4874940935653 -85] -165.48749409356532]
Test Case: 503 | Input/Output: [[-99.34979072676151 55] -44.34979072676151]
Test Case: 504 | Input/Output: [[-62.816218983260555 -71] -133.81621898326057]
Test Case: 505 | Input/Output: [[-76.59312593377912 53] -23.59312593377912]
Test Case: 506 | Input/Output: [[-0.49116896549983835 42] 41.50883103450016]
Test Case: 507 | Input/Output: [[47.676974251557425 -83] -35.323025748442575]
Test Case: 508 | Input/Output: [[27.342276988392 65] 92.342276988392]
Test Case: 509 | Input/Output: [[47.98376797171818 -46] 1.98376797171818]
Test Case: 510 | Input/Output: [[-91.07777689923778 -9] -100.07777689923778]
Test Case: 511 | Input/Output: [[84.04481784921668 76] 160.04481784921668]
Test Case: 512 | Input/Output: [[87.20254397435781 76] 163.2025439743578]
Test Case: 513 | Input/Output: [[54.941803105787585 -73] -18.058196894212415]
Test Case: 514 | Input/Output: [[-21.673857890285902 -17] -38.6738578902859]
Test Case: 515 | Input/Output: [[59.88202212094953 -20] 39.88202212094953]
Test Case: 516 | Input/Output: [[-58.23177025251525 -35] -93.23177025251525]
Test Case: 517 | Input/Output: [[34.51145892599541 11] 45.51145892599541]
Test Case: 518 | Input/Output: [[-1.4806664015211766 54] 52.51933359847882]
Test Case: 519 | Input/Output: [[46.19327964242683 -19] 27.19327964242683]
Test Case: 520 | Input/Output: [[56.981523011797606 -50] 6.981523011797606]
Test Case: 521 | Input/Output: [[93.22683034445049 3] 96.22683034445049]
Test Case: 522 | Input/Output: [[44.29526027135762 -88] -43.70473972864238]
Test Case: 523 | Input/Output: [[-53.857427602113276 -24] -77.85742760211328]
Test Case: 524 | Input/Output: [[-98.9367696908217 -27] -125.9367696908217]
Test Case: 525 | Input/Output: [[45.86043370188136 0] 45.86043370188136]
Test Case: 526 | Input/Output: [[-42.76300577268157 44] 1.2369942273184265]
Test Case: 527 | Input/Output: [[45.91854991314307 -77] -31.081450086856933]
Test Case: 528 | Input/Output: [[-61.344433334385265 18] -43.344433334385265]
Test Case: 529 | Input/Output: [[-55.097852450767924 88] 32.902147549232076]
Test Case: 530 | Input/Output: [[86.9635994382846 -68] 18.963599438284604]
Test Case: 531 | Input/Output: [[-49.340852176909976 -90] -139.34085217690998]
Test Case: 532 | Input/Output: [[-24.34288301054562 100] 75.65711698945438]
Test Case: 533 | Input/Output: [[76.79029181208773 -39] 37.79029181208773]
Test Case: 534 | Input/Output: [[64.28606345351278 -15] 49.28606345351278]
Test Case: 535 | Input/Output: [[70.26341304967937 -43] 27.26341304967937]
Test Case: 536 | Input/Output: [[-46.948399458933366 13] -33.948399458933366]
Test Case: 537 | Input/Output: [[-35.92997929780526 50] 14.07002070219474]
Test Case: 538 | Input/Output: [[-15.156334563463076 44] 28.843665436536924]
Test Case: 539 | Input/Output: [[33.541070042126336 -98] -64.45892995787366]
Test Case: 540 | Input/Output: [[-23.348080630250493 -11] -34.34808063025049]
Test Case: 541 | Input/Output: [[48.020351937478154 -29] 19.020351937478154]
Test Case: 542 | Input/Output: [[-40.79436785282746 56] 15.205632147172537]
Test Case: 543 | Input/Output: [[7.961294178087414 -57] -49.038705821912586]
Test Case: 544 | Input/Output: [[50.494644549347214 69] 119.49464454934721]
Test Case: 545 | Input/Output: [[45.01179312593172 -69] -23.988206874068283]
Test Case: 546 | Input/Output: [[-56.982046048000434 12] -44.982046048000434]
Test Case: 547 | Input/Output: [[23.77102251886531 -14] 9.771022518865308]
Test Case: 548 | Input/Output: [[-48.641140735436124 82] 33.358859264563876]
Test Case: 549 | Input/Output: [[6.63487759531138 99] 105.63487759531138]
Test Case: 550 | Input/Output: [[-92.63842834936602 -72] -164.63842834936602]
Test Case: 551 | Input/Output: [[-26.654283858100072 60] 33.34571614189993]
Test Case: 552 | Input/Output: [[-32.132652301037325 -55] -87.13265230103733]
Test Case: 553 | Input/Output: [[-82.34256601203941 -64] -146.3425660120394]
Test Case: 554 | Input/Output: [[-99.16313882162045 -68] -167.16313882162046]
Test Case: 555 | Input/Output: [[73.59497773032965 3] 76.59497773032965]
Test Case: 556 | Input/Output: [[0.14847535857676064 53] 53.14847535857676]
Test Case: 557 | Input/Output: [[74.96804337043471 18] 92.96804337043471]
Test Case: 558 | Input/Output: [[91.23073480860864 94] 185.23073480860864]
Test Case: 559 | Input/Output: [[-73.30412392528025 1] -72.30412392528025]
Test Case: 560 | Input/Output: [[-69.82117439208058 -53] -122.82117439208058]
Test Case: 561 | Input/Output: [[26.544153748433175 -75] -48.455846251566825]
Test Case: 562 | Input/Output: [[-38.405908337516045 16] -22.405908337516045]
Test Case: 563 | Input/Output: [[18.02108573562458 45] 63.02108573562458]
Test Case: 564 | Input/Output: [[2.510321319434894 83] 85.5103213194349]
Test Case: 565 | Input/Output: [[4.495424646322149 -76] -71.50457535367785]
Test Case: 566 | Input/Output: [[-84.55434763236782 -67] -151.5543476323678]
Test Case: 567 | Input/Output: [[-73.719626744972 42] -31.719626744972004]
Test Case: 568 | Input/Output: [[61.69815420133315 -29] 32.69815420133315]
Test Case: 569 | Input/Output: [[-66.87298488901561 100] 33.12701511098439]
Test Case: 570 | Input/Output: [[-12.110775686347736 -33] -45.110775686347736]
Test Case: 571 | Input/Output: [[40.405410556989665 -47] -6.594589443010335]
Test Case: 572 | Input/Output: [[-38.601546542997546 26] -12.601546542997546]
Test Case: 573 | Input/Output: [[-81.34827805053757 -49] -130.34827805053757]
Test Case: 574 | Input/Output: [[81.8922531322849 50] 131.8922531322849]
Test Case: 575 | Input/Output: [[74.7487573626897 56] 130.7487573626897]
Test Case: 576 | Input/Output: [[-17.533135687792424 -65] -82.53313568779242]
Test Case: 577 | Input/Output: [[-11.199431847013173 -83] -94.19943184701317]
Test Case: 578 | Input/Output: [[64.09973034174422 31] 95.09973034174422]
Test Case: 579 | Input/Output: [[91.47534666250948 90] 181.47534666250948]
Test Case: 580 | Input/Output: [[-98.14057975258794 13] -85.14057975258794]
Test Case: 581 | Input/Output: [[-4.384846669810045 -41] -45.384846669810045]
Test Case: 582 | Input/Output: [[-51.944549615161236 -21] -72.94454961516124]
Test Case: 583 | Input/Output: [[-1.8643388174425723 -85] -86.86433881744257]
Test Case: 584 | Input/Output: [[53.3932967434599 31] 84.3932967434599]
Test Case: 585 | Input/Output: [[81.5575293895408 92] 173.5575293895408]
Test Case: 586 | Input/Output: [[-34.1687527014094 -76] -110.1687527014094]
Test Case: 587 | Input/Output: [[-98.04801188371839 68] -30.048011883718388]
Test Case: 588 | Input/Output: [[-53.43600939505466 23] -30.43600939505466]
Test Case: 589 | Input/Output: [[-36.020875326116 -88] -124.020875326116]
Test Case: 590 | Input/Output: [[20.64371473162055 -4] 16.64371473162055]
Test Case: 591 | Input/Output: [[-35.801621606294944 84] 48.198378393705056]
Test Case: 592 | Input/Output: [[96.0564632095712 -2] 94.0564632095712]
Test Case: 593 | Input/Output: [[-35.84208237029863 -84] -119.84208237029863]
Test Case: 594 | Input/Output: [[-97.81684098699958 -64] -161.81684098699958]
Test Case: 595 | Input/Output: [[-58.02429913334157 -33] -91.02429913334157]
Test Case: 596 | Input/Output: [[-0.4639425181039769 -44] -44.46394251810398]
Test Case: 597 | Input/Output: [[-91.81645246055321 -7] -98.81645246055321]
Test Case: 598 | Input/Output: [[-44.96012824279627 -57] -101.96012824279627]
Test Case: 599 | Input/Output: [[-67.86379712802884 -54] -121.86379712802884]
Test Case: 600 | Input/Output: [[97.94795218019857 -90] 7.94795218019857]
Test Case: 601 | Input/Output: [[-14.759491208670681 65] 50.24050879132932]
Test Case: 602 | Input/Output: [[54.280233246794495 29] 83.2802332467945]
Test Case: 603 | Input/Output: [[80.28592478443358 22] 102.28592478443358]
Test Case: 604 | Input/Output: [[66.67621670260621 74] 140.6762167026062]
Test Case: 605 | Input/Output: [[-40.6809680748288 -63] -103.6809680748288]
Test Case: 606 | Input/Output: [[-26.51681031115099 -21] -47.51681031115099]
Test Case: 607 | Input/Output: [[72.83952449142589 74] 146.8395244914259]
Test Case: 608 | Input/Output: [[7.305945942116125 -69] -61.694054057883875]
Test Case: 609 | Input/Output: [[19.16014733687284 60] 79.16014733687284]
Test Case: 610 | Input/Output: [[-88.80280197632189 -15] -103.80280197632189]
Test Case: 611 | Input/Output: [[67.3736835225892 -18] 49.373683522589204]
Test Case: 612 | Input/Output: [[-89.57524963581058 -70] -159.57524963581056]
Test Case: 613 | Input/Output: [[26.898263863486235 -6] 20.898263863486235]
Test Case: 614 | Input/Output: [[90.67499407523795 -57] 33.67499407523795]
Test Case: 615 | Input/Output: [[-9.75019951109924 33] 23.24980048890076]
Test Case: 616 | Input/Output: [[45.17793617506521 -46] -0.8220638249347871]
Test Case: 617 | Input/Output: [[-58.78993979016782 -22] -80.78993979016782]
Test Case: 618 | Input/Output: [[41.43416173414559 91] 132.4341617341456]
Test Case: 619 | Input/Output: [[-89.45729779571624 50] -39.457297795716244]
Test Case: 620 | Input/Output: [[-75.11827720855743 -82] -157.11827720855743]
Test Case: 621 | Input/Output: [[-81.93712130359722 -17] -98.93712130359722]
Test Case: 622 | Input/Output: [[-91.13082396907117 76] -15.130823969071173]
Test Case: 623 | Input/Output: [[-83.17322715084487 68] -15.173227150844866]
Test Case: 624 | Input/Output: [[-79.00995176563876 4] -75.00995176563876]
Test Case: 625 | Input/Output: [[-31.458620801117803 14] -17.458620801117803]
Test Case: 626 | Input/Output: [[46.41569160822806 -92] -45.58430839177194]
Test Case: 627 | Input/Output: [[5.339140286420701 83] 88.3391402864207]
Test Case: 628 | Input/Output: [[74.2954534935541 -23] 51.295453493554106]
Test Case: 629 | Input/Output: [[-11.942015193105576 -69] -80.94201519310558]
Test Case: 630 | Input/Output: [[-79.96981001630704 -33] -112.96981001630704]
Test Case: 631 | Input/Output: [[88.89542021557605 10] 98.89542021557605]
Test Case: 632 | Input/Output: [[98.47925985822786 79] 177.47925985822786]
Test Case: 633 | Input/Output: [[-85.91071137917811 -33] -118.91071137917811]
Test Case: 634 | Input/Output: [[-36.50518211428548 36] -0.505182114285482]
Test Case: 635 | Input/Output: [[91.29394776832353 45] 136.29394776832353]
Test Case: 636 | Input/Output: [[-44.04888447330375 -5] -49.04888447330375]
Test Case: 637 | Input/Output: [[-86.17995974537105 21] -65.17995974537105]
Test Case: 638 | Input/Output: [[-37.808507099830614 81] 43.191492900169386]
Test Case: 639 | Input/Output: [[62.95281854531336 80] 142.95281854531336]
Test Case: 640 | Input/Output: [[46.43555903200166 -85] -38.56444096799834]
Test Case: 641 | Input/Output: [[-52.779023255491886 87] 34.220976744508114]
Test Case: 642 | Input/Output: [[-28.913488471940923 38] 9.086511528059077]
Test Case: 643 | Input/Output: [[32.463242383529234 -18] 14.463242383529234]
Test Case: 644 | Input/Output: [[72.6587936088913 52] 124.6587936088913]
Test Case: 645 | Input/Output: [[55.31212832998861 -21] 34.31212832998861]
Test Case: 646 | Input/Output: [[89.15440827590137 50] 139.15440827590137]
Test Case: 647 | Input/Output: [[55.60241853223468 2] 57.60241853223468]
Test Case: 648 | Input/Output: [[-88.14523588021544 -47] -135.14523588021544]
Test Case: 649 | Input/Output: [[-31.85482751842042 -93] -124.85482751842042]
Test Case: 650 | Input/Output: [[63.44185456419075 -72] -8.558145435809251]
Test Case: 651 | Input/Output: [[50.29250602557889 40] 90.29250602557889]
Test Case: 652 | Input/Output: [[-94.06692883666497 78] -16.06692883666497]
Test Case: 653 | Input/Output: [[-21.10523488411968 22] 0.8947651158803183]
Test Case: 654 | Input/Output: [[-29.419974557066226 16] -13.419974557066226]
Test Case: 655 | Input/Output: [[90.26043013747503 -2] 88.26043013747503]
Test Case: 656 | Input/Output: [[-41.33962405202982 46] 4.660375947970181]
Test Case: 657 | Input/Output: [[36.761558752028805 1] 37.761558752028805]
Test Case: 658 | Input/Output: [[-45.816561297587775 31] -14.816561297587775]
Test Case: 659 | Input/Output: [[-97.55124502189767 22] -75.55124502189767]
Test Case: 660 | Input/Output: [[-55.91778210080578 -27] -82.91778210080578]
Test Case: 661 | Input/Output: [[-68.76180957165005 -98] -166.76180957165005]
Test Case: 662 | Input/Output: [[-37.562815788359 75] 37.437184211641]
Test Case: 663 | Input/Output: [[-38.06443600221747 73] 34.93556399778253]
Test Case: 664 | Input/Output: [[-6.466841191598547 -78] -84.46684119159855]
Test Case: 665 | Input/Output: [[-37.69688859084746 -69] -106.69688859084746]
Test Case: 666 | Input/Output: [[62.08989838154332 72] 134.08989838154332]
Test Case: 667 | Input/Output: [[52.265116980841185 -54] -1.734883019158815]
Test Case: 668 | Input/Output: [[-70.0032869757379 -81] -151.0032869757379]
Test Case: 669 | Input/Output: [[-31.65366450004656 17] -14.65366450004656]
Test Case: 670 | Input/Output: [[-36.036361643356884 -19] -55.036361643356884]
Test Case: 671 | Input/Output: [[38.56442502536416 15] 53.56442502536416]
Test Case: 672 | Input/Output: [[-3.306338750991671 10] 6.693661249008329]
Test Case: 673 | Input/Output: [[44.66599677095405 23] 67.66599677095405]
Test Case: 674 | Input/Output: [[-86.26475921302645 -14] -100.26475921302645]
Test Case: 675 | Input/Output: [[72.59400260434597 -11] 61.594002604345974]
Test Case: 676 | Input/Output: [[41.88302678579254 80] 121.88302678579254]
Test Case: 677 | Input/Output: [[67.44430167697303 36] 103.44430167697303]
Test Case: 678 | Input/Output: [[-11.42347060827889 77] 65.57652939172111]
Test Case: 679 | Input/Output: [[39.01074967451825 -36] 3.0107496745182516]
Test Case: 680 | Input/Output: [[-78.04119522885563 80] 1.9588047711443721]
Test Case: 681 | Input/Output: [[-5.047780390630209 26] 20.95221960936979]
Test Case: 682 | Input/Output: [[-81.04687568104039 -31] -112.04687568104039]
Test Case: 683 | Input/Output: [[33.890490035971624 -20] 13.890490035971624]
Test Case: 684 | Input/Output: [[-22.16562891217417 61] 38.83437108782583]
Test Case: 685 | Input/Output: [[53.2603141203179 -74] -20.7396858796821]
Test Case: 686 | Input/Output: [[-24.181403172927958 5] -19.181403172927958]
Test Case: 687 | Input/Output: [[-86.39732240106667 -44] -130.39732240106667]
Test Case: 688 | Input/Output: [[-92.33524542540516 -21] -113.33524542540516]
Test Case: 689 | Input/Output: [[61.21958924338617 -35] 26.219589243386167]
Test Case: 690 | Input/Output: [[91.0441453134149 -56] 35.0441453134149]
Test Case: 691 | Input/Output: [[65.15433365130389 -12] 53.15433365130389]
Test Case: 692 | Input/Output: [[-57.495221962936036 -100] -157.49522196293603]
Test Case: 693 | Input/Output: [[-66.787513941446 -6] -72.787513941446]
Test Case: 694 | Input/Output: [[55.3068535496935 -14] 41.3068535496935]
Test Case: 695 | Input/Output: [[-37.899488869065976 30] -7.899488869065976]
Test Case: 696 | Input/Output: [[15.021617984974696 -8] 7.0216179849746965]
Test Case: 697 | Input/Output: [[11.073214343636423 -20] -8.926785656363577]
Test Case: 698 | Input/Output: [[-40.627519559899625 57] 16.372480440100375]
Test Case: 699 | Input/Output: [[35.74990738835206 -52] -16.250092611647943]
Test Case: 700 | Input/Output: [[-99.6098867840903 64] -35.60988678409031]
Test Case: 701 | Input/Output: [[-9.387826368826893 -33] -42.38782636882689]
Test Case: 702 | Input/Output: [[-7.540726960481095 88] 80.4592730395189]
Test Case: 703 | Input/Output: [[19.608370811256833 -57] -37.39162918874317]
Test Case: 704 | Input/Output: [[7.7228786208419535 29] 36.72287862084195]
Test Case: 705 | Input/Output: [[-57.39534200194316 29] -28.395342001943163]
Test Case: 706 | Input/Output: [[48.567782104161125 -33] 15.567782104161125]
Test Case: 707 | Input/Output: [[54.74027836870644 22] 76.74027836870644]
Test Case: 708 | Input/Output: [[65.67726021003853 -85] -19.322739789961474]
Test Case: 709 | Input/Output: [[94.76253690108308 19] 113.76253690108308]
Test Case: 710 | Input/Output: [[54.231457044547994 53] 107.231457044548]
Test Case: 711 | Input/Output: [[99.02983016475198 53] 152.02983016475198]
Test Case: 712 | Input/Output: [[-39.23307601834723 -61] -100.23307601834722]
Test Case: 713 | Input/Output: [[5.69822886786892 75] 80.69822886786892]
Test Case: 714 | Input/Output: [[-40.2215420730115 -75] -115.2215420730115]
Test Case: 715 | Input/Output: [[-82.95163586671217 -60] -142.95163586671217]
Test Case: 716 | Input/Output: [[-16.524597880212283 -69] -85.52459788021228]
Test Case: 717 | Input/Output: [[-60.215048716853815 -88] -148.2150487168538]
Test Case: 718 | Input/Output: [[-0.6238650476568779 60] 59.37613495234312]
Test Case: 719 | Input/Output: [[46.79548215430103 57] 103.79548215430103]
Test Case: 720 | Input/Output: [[43.92825537060932 -28] 15.928255370609321]
Test Case: 721 | Input/Output: [[-6.015986202838093 -16] -22.015986202838093]
Test Case: 722 | Input/Output: [[36.85640486127599 -17] 19.85640486127599]
Test Case: 723 | Input/Output: [[26.666145368414846 -20] 6.6661453684148455]
Test Case: 724 | Input/Output: [[27.13403869695496 20] 47.13403869695496]
Test Case: 725 | Input/Output: [[81.64598895791565 96] 177.64598895791565]
Test Case: 726 | Input/Output: [[-33.232071067052175 -10] -43.232071067052175]
Test Case: 727 | Input/Output: [[27.49284061131705 49] 76.49284061131705]
Test Case: 728 | Input/Output: [[-63.59516695275029 42] -21.59516695275029]
Test Case: 729 | Input/Output: [[-19.74086868427827 61] 41.25913131572173]
Test Case: 730 | Input/Output: [[93.87189850849299 -6] 87.87189850849299]
Test Case: 731 | Input/Output: [[-6.071728926590026 -21] -27.071728926590026]
Test Case: 732 | Input/Output: [[-29.468013150261044 -8] -37.468013150261044]
Test Case: 733 | Input/Output: [[65.71923095058634 43] 108.71923095058634]
Test Case: 734 | Input/Output: [[54.06923924383668 -74] -19.930760756163323]
Test Case: 735 | Input/Output: [[-48.69416411058465 -6] -54.69416411058465]
Test Case: 736 | Input/Output: [[87.88746005848117 64] 151.88746005848117]
Test Case: 737 | Input/Output: [[11.517045392589978 -24] -12.482954607410022]
Test Case: 738 | Input/Output: [[47.40202192697717 -72] -24.59797807302283]
Test Case: 739 | Input/Output: [[-23.87752460448141 -35] -58.87752460448141]
Test Case: 740 | Input/Output: [[-1.6730939618763188 72] 70.32690603812368]
Test Case: 741 | Input/Output: [[-90.39192897327193 2] -88.39192897327193]
Test Case: 742 | Input/Output: [[23.910304429030333 42] 65.91030442903033]
Test Case: 743 | Input/Output: [[38.99549346427352 -24] 14.995493464273522]
Test Case: 744 | Input/Output: [[-64.5223721662322 40] -24.522372166232202]
Test Case: 745 | Input/Output: [[91.15977692309619 86] 177.1597769230962]
Test Case: 746 | Input/Output: [[84.71551206471801 70] 154.715512064718]
Test Case: 747 | Input/Output: [[8.116628551756008 98] 106.11662855175601]
Test Case: 748 | Input/Output: [[-94.06853622652889 -33] -127.06853622652889]
Test Case: 749 | Input/Output: [[-19.745500518526057 -68] -87.74550051852606]
Test Case: 750 | Input/Output: [[-72.64087555688342 -10] -82.64087555688342]
Test Case: 751 | Input/Output: [[7.974117783264418 -69] -61.02588221673558]
Test Case: 752 | Input/Output: [[32.31255048452908 -96] -63.68744951547092]
Test Case: 753 | Input/Output: [[-52.90802752385832 -44] -96.90802752385832]
Test Case: 754 | Input/Output: [[60.98869422297045 -4] 56.98869422297045]
Test Case: 755 | Input/Output: [[26.357704847550778 2] 28.357704847550778]
Test Case: 756 | Input/Output: [[51.69084863147114 81] 132.69084863147114]
Test Case: 757 | Input/Output: [[21.650019321189376 -90] -68.34998067881062]
Test Case: 758 | Input/Output: [[-3.3509019584252684 61] 57.64909804157473]
Test Case: 759 | Input/Output: [[14.608300748026366 18] 32.608300748026366]
Test Case: 760 | Input/Output: [[-63.31090202640881 -73] -136.31090202640883]
Test Case: 761 | Input/Output: [[6.943733728198836 -12] -5.056266271801164]
Test Case: 762 | Input/Output: [[53.81201670082859 -21] 32.81201670082859]
Test Case: 763 | Input/Output: [[-17.299877966138055 -67] -84.29987796613806]
Test Case: 764 | Input/Output: [[-51.06408040270654 46] -5.064080402706537]
Test Case: 765 | Input/Output: [[39.02512633020734 -30] 9.025126330207343]
Test Case: 766 | Input/Output: [[-34.94765832223243 84] 49.05234167776757]
Test Case: 767 | Input/Output: [[29.70057296561268 91] 120.70057296561268]
Test Case: 768 | Input/Output: [[89.48153502564995 78] 167.48153502564995]
Test Case: 769 | Input/Output: [[54.12288545634502 -54] 0.12288545634501702]
Test Case: 770 | Input/Output: [[22.984172124907104 57] 79.9841721249071]
Test Case: 771 | Input/Output: [[-61.29366469506123 -89] -150.29366469506124]
Test Case: 772 | Input/Output: [[-69.92147951974523 -7] -76.92147951974523]
Test Case: 773 | Input/Output: [[-2.526378094470587 -83] -85.52637809447059]
Test Case: 774 | Input/Output: [[-61.01814104546306 -23] -84.01814104546307]
Test Case: 775 | Input/Output: [[20.500611283593003 41] 61.500611283593]
Test Case: 776 | Input/Output: [[28.097138033037936 -42] -13.902861966962064]
Test Case: 777 | Input/Output: [[26.805398481598303 43] 69.8053984815983]
Test Case: 778 | Input/Output: [[23.11312231371234 -41] -17.88687768628766]
Test Case: 779 | Input/Output: [[51.695420228637005 -46] 5.695420228637005]
Test Case: 780 | Input/Output: [[-38.88757687243345 91] 52.11242312756655]
Test Case: 781 | Input/Output: [[-25.42431558682378 -39] -64.42431558682378]
Test Case: 782 | Input/Output: [[-33.86713112133155 79] 45.13286887866845]
Test Case: 783 | Input/Output: [[-24.976171965856082 -29] -53.97617196585608]
Test Case: 784 | Input/Output: [[-90.18346479123886 18] -72.18346479123886]
Test Case: 785 | Input/Output: [[90.22304509557188 31] 121.22304509557188]
Test Case: 786 | Input/Output: [[34.14964379423574 73] 107.14964379423574]
Test Case: 787 | Input/Output: [[50.57505435164208 -73] -22.42494564835792]
Test Case: 788 | Input/Output: [[3.961864846887792 77] 80.96186484688779]
Test Case: 789 | Input/Output: [[51.51198173282961 41] 92.51198173282961]
Test Case: 790 | Input/Output: [[-77.08202879932544 33] -44.08202879932544]
Test Case: 791 | Input/Output: [[56.920299420773404 -75] -18.079700579226596]
Test Case: 792 | Input/Output: [[44.41779838123864 67] 111.41779838123864]
Test Case: 793 | Input/Output: [[62.71642825197932 -79] -16.283571748020677]
Test Case: 794 | Input/Output: [[-54.36500554274768 17] -37.36500554274768]
Test Case: 795 | Input/Output: [[-96.40210163469716 29] -67.40210163469716]
Test Case: 796 | Input/Output: [[62.953847496924 17] 79.953847496924]
Test Case: 797 | Input/Output: [[77.90182040514583 4] 81.90182040514583]
Test Case: 798 | Input/Output: [[-94.39763338952196 74] -20.397633389521957]
Test Case: 799 | Input/Output: [[18.706779678617934 77] 95.70677967861793]
Test Case: 800 | Input/Output: [[66.68119636271174 -100] -33.318803637288255]
Test Case: 801 | Input/Output: [[-29.029803289705185 -28] -57.029803289705185]
Test Case: 802 | Input/Output: [[-19.41380903128855 41] 21.58619096871145]
Test Case: 803 | Input/Output: [[79.50450185927426 89] 168.50450185927426]
Test Case: 804 | Input/Output: [[-86.14716023222668 -59] -145.14716023222667]
Test Case: 805 | Input/Output: [[6.133501068499456 62] 68.13350106849946]
Test Case: 806 | Input/Output: [[11.172169531242673 -53] -41.82783046875733]
Test Case: 807 | Input/Output: [[40.20852886437106 14] 54.20852886437106]
Test Case: 808 | Input/Output: [[88.74126568926525 -11] 77.74126568926525]
Test Case: 809 | Input/Output: [[-17.522429098775234 -93] -110.52242909877523]
Test Case: 810 | Input/Output: [[20.827378337704758 28] 48.82737833770476]
Test Case: 811 | Input/Output: [[78.08258037367258 83] 161.08258037367258]
Test Case: 812 | Input/Output: [[66.96855187738473 -73] -6.031448122615274]
Test Case: 813 | Input/Output: [[60.48323268255882 40] 100.48323268255882]
Test Case: 814 | Input/Output: [[53.085812853968065 26] 79.08581285396806]
Test Case: 815 | Input/Output: [[12.019279743347795 76] 88.0192797433478]
Test Case: 816 | Input/Output: [[-5.746835834618508 21] 15.253164165381492]
Test Case: 817 | Input/Output: [[1.0519870788679384 87] 88.05198707886794]
Test Case: 818 | Input/Output: [[-18.73470824403691 97] 78.26529175596309]
Test Case: 819 | Input/Output: [[0.9847628723017294 -33] -32.01523712769827]
Test Case: 820 | Input/Output: [[-26.506951796731897 28] 1.4930482032681027]
Test Case: 821 | Input/Output: [[81.93534485560636 61] 142.93534485560636]
Test Case: 822 | Input/Output: [[-41.53413273852535 44] 2.4658672614746493]
Test Case: 823 | Input/Output: [[-3.061430116196277 73] 69.93856988380372]
Test Case: 824 | Input/Output: [[-47.22471910321215 27] -20.224719103212152]
Test Case: 825 | Input/Output: [[-70.21817964650852 44] -26.218179646508517]
Test Case: 826 | Input/Output: [[-69.75643343929133 52] -17.756433439291328]
Test Case: 827 | Input/Output: [[-94.8580489504406 -14] -108.8580489504406]
Test Case: 828 | Input/Output: [[61.08803616761301 71] 132.088036167613]
Test Case: 829 | Input/Output: [[-71.8111538240878 30] -41.811153824087796]
Test Case: 830 | Input/Output: [[-26.80483851506041 -66] -92.80483851506041]
Test Case: 831 | Input/Output: [[99.67960101550634 48] 147.67960101550634]
Test Case: 832 | Input/Output: [[-62.75496095905866 64] 1.245039040941343]
Test Case: 833 | Input/Output: [[-7.2278637285444205 -75] -82.22786372854442]
Test Case: 834 | Input/Output: [[-62.566130359884895 -63] -125.5661303598849]
Test Case: 835 | Input/Output: [[-63.796983676375895 2] -61.796983676375895]
Test Case: 836 | Input/Output: [[-45.31025249565126 91] 45.68974750434874]
Test Case: 837 | Input/Output: [[-65.35794917033992 -32] -97.35794917033992]
Test Case: 838 | Input/Output: [[49.97943405219303 4] 53.97943405219303]
Test Case: 839 | Input/Output: [[-4.173334882927705 -64] -68.1733348829277]
Test Case: 840 | Input/Output: [[-56.9050123497074 -30] -86.90501234970739]
Test Case: 841 | Input/Output: [[66.10477926901953 -97] -30.89522073098047]
Test Case: 842 | Input/Output: [[71.94981589592172 -81] -9.050184104078284]
Test Case: 843 | Input/Output: [[91.81276282544093 1] 92.81276282544093]
Test Case: 844 | Input/Output: [[-94.08551879873795 1] -93.08551879873795]
Test Case: 845 | Input/Output: [[-25.432963357520634 37] 11.567036642479366]
Test Case: 846 | Input/Output: [[-72.99472296325965 -31] -103.99472296325965]
Test Case: 847 | Input/Output: [[-0.8947562096921757 22] 21.105243790307824]
Test Case: 848 | Input/Output: [[-2.507402098769518 -21] -23.507402098769518]
Test Case: 849 | Input/Output: [[-50.70286713880097 82] 31.29713286119903]
Test Case: 850 | Input/Output: [[9.838599082791234 -49] -39.161400917208766]
Test Case: 851 | Input/Output: [[-71.15285953257163 -83] -154.15285953257163]
Test Case: 852 | Input/Output: [[-82.24805700286288 38] -44.24805700286288]
Test Case: 853 | Input/Output: [[29.732941693898965 -57] -27.267058306101035]
Test Case: 854 | Input/Output: [[-10.56212750411693 -50] -60.56212750411693]
Test Case: 855 | Input/Output: [[81.97396490533245 40] 121.97396490533245]
Test Case: 856 | Input/Output: [[49.7365732906712 59] 108.7365732906712]
Test Case: 857 | Input/Output: [[56.271755415411604 81] 137.2717554154116]
Test Case: 858 | Input/Output: [[-70.60973029154376 -88] -158.60973029154377]
Test Case: 859 | Input/Output: [[9.990431849328019 -32] -22.00956815067198]
Test Case: 860 | Input/Output: [[-30.233761617361125 -23] -53.233761617361125]
Test Case: 861 | Input/Output: [[-93.4123110173153 37] -56.412311017315304]
Test Case: 862 | Input/Output: [[61.13333806875059 79] 140.1333380687506]
Test Case: 863 | Input/Output: [[85.44225307863445 -96] -10.557746921365549]
Test Case: 864 | Input/Output: [[-24.469282919412507 41] 16.530717080587493]
Test Case: 865 | Input/Output: [[44.76862714974118 0] 44.76862714974118]
Test Case: 866 | Input/Output: [[-93.41621755128897 -54] -147.41621755128898]
Test Case: 867 | Input/Output: [[61.636108498950136 -51] 10.636108498950136]
Test Case: 868 | Input/Output: [[-7.472741477410992 -6] -13.472741477410992]
Test Case: 869 | Input/Output: [[-72.27912123106907 68] -4.27912123106907]
Test Case: 870 | Input/Output: [[-55.60884288896237 -59] -114.60884288896237]
Test Case: 871 | Input/Output: [[-25.71311956058031 -70] -95.71311956058031]
Test Case: 872 | Input/Output: [[79.96592799961363 -2] 77.96592799961363]
Test Case: 873 | Input/Output: [[-65.44436485439884 94] 28.55563514560116]
Test Case: 874 | Input/Output: [[-10.44884140409421 10] -0.44884140409421036]
Test Case: 875 | Input/Output: [[-15.43543966509418 96] 80.56456033490582]
Test Case: 876 | Input/Output: [[98.50685314361814 86] 184.50685314361814]
Test Case: 877 | Input/Output: [[-93.84171076612058 43] -50.841710766120585]
Test Case: 878 | Input/Output: [[2.983506531270308 70] 72.98350653127031]
Test Case: 879 | Input/Output: [[-68.556887217914 58] -10.556887217913996]
Test Case: 880 | Input/Output: [[65.84338122492483 100] 165.84338122492483]
Test Case: 881 | Input/Output: [[-98.60023252589536 62] -36.600232525895365]
Test Case: 882 | Input/Output: [[-66.14670381737304 40] -26.146703817373037]
Test Case: 883 | Input/Output: [[-26.0591657049263 22] -4.059165704926301]
Test Case: 884 | Input/Output: [[-34.649175158014984 -33] -67.64917515801498]
Test Case: 885 | Input/Output: [[37.1643786018023 -88] -50.8356213981977]
Test Case: 886 | Input/Output: [[10.779762264771264 -10] 0.7797622647712643]
Test Case: 887 | Input/Output: [[91.09298667671615 88] 179.09298667671615]
Test Case: 888 | Input/Output: [[-72.09803274199783 60] -12.098032741997827]
Test Case: 889 | Input/Output: [[20.197473471115288 -74] -53.80252652888471]
Test Case: 890 | Input/Output: [[54.05606298375599 64] 118.056062983756]
Test Case: 891 | Input/Output: [[42.52744039837091 95] 137.5274403983709]
Test Case: 892 | Input/Output: [[-65.55785414611614 -39] -104.55785414611614]
Test Case: 893 | Input/Output: [[24.470600737638406 32] 56.47060073763841]
Test Case: 894 | Input/Output: [[-85.58289464203739 20] -65.58289464203739]
Test Case: 895 | Input/Output: [[39.262492885232206 -90] -50.737507114767794]
Test Case: 896 | Input/Output: [[44.47084842401324 40] 84.47084842401324]
Test Case: 897 | Input/Output: [[41.52442113606301 -97] -55.47557886393699]
Test Case: 898 | Input/Output: [[22.476352509329985 -79] -56.523647490670015]
Test Case: 899 | Input/Output: [[-38.95491127917741 -96] -134.9549112791774]
Test Case: 900 | Input/Output: [[-66.34984797498464 59] -7.349847974984641]
Test Case: 901 | Input/Output: [[66.11157462310427 -80] -13.888425376895725]
Test Case: 902 | Input/Output: [[30.01604552277692 -42] -11.98395447722308]
Test Case: 903 | Input/Output: [[63.46758780276551 -41] 22.467587802765507]
Test Case: 904 | Input/Output: [[91.13885906522623 66] 157.13885906522623]
Test Case: 905 | Input/Output: [[-91.5432357856806 14] -77.5432357856806]
Test Case: 906 | Input/Output: [[-47.20300039658278 87] 39.79699960341722]
Test Case: 907 | Input/Output: [[-36.22149349901696 45] 8.778506500983042]
Test Case: 908 | Input/Output: [[-42.60370625810614 -51] -93.60370625810614]
Test Case: 909 | Input/Output: [[47.02413903320701 -61] -13.975860966792993]
Test Case: 910 | Input/Output: [[93.19653680657746 44] 137.19653680657746]
Test Case: 911 | Input/Output: [[-13.833327660119423 -42] -55.83332766011942]
Test Case: 912 | Input/Output: [[41.481817224886356 30] 71.48181722488636]
Test Case: 913 | Input/Output: [[-82.42114299761832 36] -46.42114299761832]
Test Case: 914 | Input/Output: [[-76.04757111141937 -97] -173.04757111141936]
Test Case: 915 | Input/Output: [[80.45592192034516 -70] 10.455921920345162]
Test Case: 916 | Input/Output: [[-22.827490730061896 84] 61.172509269938104]
Test Case: 917 | Input/Output: [[-58.68905741494028 -64] -122.68905741494028]
Test Case: 918 | Input/Output: [[3.962166551385309 28] 31.96216655138531]
Test Case: 919 | Input/Output: [[-93.6575370093947 8] -85.6575370093947]
Test Case: 920 | Input/Output: [[-52.27554193075499 63] 10.72445806924501]
Test Case: 921 | Input/Output: [[65.38509251967298 73] 138.38509251967298]
Test Case: 922 | Input/Output: [[-36.337865087511446 -27] -63.337865087511446]
Test Case: 923 | Input/Output: [[-40.884451467014784 44] 3.1155485329852155]
Test Case: 924 | Input/Output: [[0.2698233846818283 90] 90.26982338468183]
Test Case: 925 | Input/Output: [[-99.1908357394025 81] -18.1908357394025]
Test Case: 926 | Input/Output: [[67.66657990542683 26] 93.66657990542683]
Test Case: 927 | Input/Output: [[53.514589361578544 35] 88.51458936157854]
Test Case: 928 | Input/Output: [[21.366170787320954 -88] -66.63382921267905]
Test Case: 929 | Input/Output: [[15.753722476333394 50] 65.7537224763334]
Test Case: 930 | Input/Output: [[43.242131736784984 87] 130.24213173678498]
Test Case: 931 | Input/Output: [[78.66646564397314 87] 165.66646564397314]
Test Case: 932 | Input/Output: [[8.118422755681237 -44] -35.88157724431876]
Test Case: 933 | Input/Output: [[-90.35565794360727 79] -11.35565794360727]
Test Case: 934 | Input/Output: [[-18.658283642976244 -22] -40.658283642976244]
Test Case: 935 | Input/Output: [[-81.46823714047544 40] -41.46823714047544]
Test Case: 936 | Input/Output: [[72.033702612804 48] 120.033702612804]
Test Case: 937 | Input/Output: [[89.26697825912044 16] 105.26697825912044]
Test Case: 938 | Input/Output: [[36.09588009128436 24] 60.09588009128436]
Test Case: 939 | Input/Output: [[-5.530710314637545 54] 48.469289685362455]
Test Case: 940 | Input/Output: [[-65.62359886046904 88] 22.376401139530955]
Test Case: 941 | Input/Output: [[-96.76638309062398 10] -86.76638309062398]
Test Case: 942 | Input/Output: [[42.683035297361954 63] 105.68303529736195]
Test Case: 943 | Input/Output: [[-49.092973926324476 -90] -139.09297392632448]
Test Case: 944 | Input/Output: [[-4.147540652321652 61] 56.85245934767835]
Test Case: 945 | Input/Output: [[97.01774783541032 -20] 77.01774783541032]
Test Case: 946 | Input/Output: [[26.531692720090746 67] 93.53169272009075]
Test Case: 947 | Input/Output: [[-86.67514516192722 32] -54.67514516192722]
Test Case: 948 | Input/Output: [[-5.810376706368032 -18] -23.810376706368032]
Test Case: 949 | Input/Output: [[47.41615300483576 -100] -52.58384699516424]
Test Case: 950 | Input/Output: [[8.24750006453013 -98] -89.75249993546987]
Test Case: 951 | Input/Output: [[-38.04915312787651 8] -30.049153127876508]
Test Case: 952 | Input/Output: [[-9.927148948465032 -83] -92.92714894846503]
Test Case: 953 | Input/Output: [[14.266058895036878 -15] -0.7339411049631224]
Test Case: 954 | Input/Output: [[-57.706190606794515 -44] -101.70619060679451]
Test Case: 955 | Input/Output: [[90.94791583549414 -80] 10.947915835494143]
Test Case: 956 | Input/Output: [[-95.8952081220624 -69] -164.8952081220624]
Test Case: 957 | Input/Output: [[18.174369540333444 39] 57.174369540333444]
Test Case: 958 | Input/Output: [[-86.21470092740876 -40] -126.21470092740876]
Test Case: 959 | Input/Output: [[2.9184003876921167 -36] -33.08159961230788]
Test Case: 960 | Input/Output: [[79.70504429779214 -3] 76.70504429779214]
Test Case: 961 | Input/Output: [[35.96990008512364 77] 112.96990008512364]
Test Case: 962 | Input/Output: [[-43.425265101959035 92] 48.574734898040965]
Test Case: 963 | Input/Output: [[34.34476321867666 55] 89.34476321867666]
Test Case: 964 | Input/Output: [[80.61754030414781 14] 94.61754030414781]
Test Case: 965 | Input/Output: [[-59.72892053243124 -67] -126.72892053243123]
Test Case: 966 | Input/Output: [[14.662845590477332 -90] -75.33715440952267]
Test Case: 967 | Input/Output: [[23.53779408484141 -96] -72.46220591515859]
Test Case: 968 | Input/Output: [[-28.891745050623967 0] -28.891745050623967]
Test Case: 969 | Input/Output: [[21.645420844709463 3] 24.645420844709463]
Test Case: 970 | Input/Output: [[65.55909581938718 -42] 23.55909581938718]
Test Case: 971 | Input/Output: [[16.2312566415371 -64] -47.7687433584629]
Test Case: 972 | Input/Output: [[-5.74731742987062 57] 51.25268257012938]
Test Case: 973 | Input/Output: [[83.40590421144279 79] 162.4059042114428]
Test Case: 974 | Input/Output: [[99.96264640501033 -5] 94.96264640501033]
Test Case: 975 | Input/Output: [[66.81559113939534 -18] 48.81559113939534]
Test Case: 976 | Input/Output: [[-27.861102170238354 -49] -76.86110217023835]
Test Case: 977 | Input/Output: [[-91.43448732097895 76] -15.434487320978945]
Test Case: 978 | Input/Output: [[-67.89964930920173 -85] -152.89964930920172]
Test Case: 979 | Input/Output: [[6.205896293216597 -25] -18.794103706783403]
Test Case: 980 | Input/Output: [[61.88868003817575 -100] -38.11131996182425]
Test Case: 981 | Input/Output: [[-51.27660288073572 60] 8.723397119264277]
Test Case: 982 | Input/Output: [[29.309311811075816 80] 109.30931181107582]
Test Case: 983 | Input/Output: [[-98.35805444037855 -33] -131.35805444037857]
Test Case: 984 | Input/Output: [[-94.13226046079242 -15] -109.13226046079242]
Test Case: 985 | Input/Output: [[-33.810410262749315 -89] -122.81041026274931]
Test Case: 986 | Input/Output: [[69.95882051458648 29] 98.95882051458648]
Test Case: 987 | Input/Output: [[-82.28606846551499 87] 4.713931534485013]
Test Case: 988 | Input/Output: [[-87.519259036855 83] -4.519259036855004]
Test Case: 989 | Input/Output: [[-80.37054867354345 37] -43.37054867354345]
Test Case: 990 | Input/Output: [[-84.21209516649257 -4] -88.21209516649257]
Test Case: 991 | Input/Output: [[-31.79479854008973 -23] -54.79479854008973]
Test Case: 992 | Input/Output: [[-0.23092695900071192 -95] -95.23092695900071]
Test Case: 993 | Input/Output: [[49.612752528581154 79] 128.61275252858115]
Test Case: 994 | Input/Output: [[-94.68710927122189 7] -87.68710927122189]
Test Case: 995 | Input/Output: [[-10.06928809289822 57] 46.93071190710178]
Test Case: 996 | Input/Output: [[34.89050870688888 -96] -61.10949129311112]
Test Case: 997 | Input/Output: [[-84.28329164389972 -19] -103.28329164389972]
Test Case: 998 | Input/Output: [[-37.7671628979201 -26] -63.7671628979201]
Test Case: 999 | Input/Output: [[-62.962899764306 2] -60.962899764306]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 127 -45 51 -22 90 -110 59 -39 -8 -18 -1 104 106 -55 -110 -96
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 12322.821700000006
Test mean error for best: 6.16141
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: 
-68          
Correct output: 120.2372555792 | Program output: 
120          
Correct output: -2.1167948701  | Program output: 
-2           
Correct output: 62.9701853121  | Program output: 
63           
Correct output: 128.6517283847 | Program output: 
128          
Correct output: -8.5421972836  | Program output: 
-8           
Correct output: -38.8010007696 | Program output: 
-38          
Correct output: 39.2167962231  | Program output: 
39           
Correct output: -24.2137149529 | Program output: 
-25          
Correct output: -58.4957609113 | Program output: 
-58          
Correct output: -87.1964832094 | Program output: 
-87          
Correct output: -2.9711614706  | Program output: 
-3           
Correct output: -81.1121745511 | Program output: 
-81          
Correct output: -49.5003550687 | Program output: 
-49          
Correct output: -88.6976304193 | Program output: 
-88          
Correct output: 86.3637391605  | Program output: 
87           
Correct output: 58.2548794908  | Program output: 
58           
Correct output: -133.0730642872 | Program output: 
-133         
Correct output: -9.7960903291  | Program output: 
-10          
Correct output: -176.7544002752 | Program output: 
-176         
Correct output: -78.8164296875 | Program output: 
-78          
Correct output: -130.7060715307 | Program output: 
-130         
Correct output: 70.6074653162  | Program output: 
70           
Correct output: -4.3884194975  | Program output: 
-4           
Correct output: -126.4982238663 | Program output: 
-126         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_mult} {:instruction tag_float_348} {:instruction print_newline} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_max} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_min} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap float_stackdepth float_sub integer_swap float_dup_times float_mult tag_float_348 print_newline integer_yank float_mult integer_max integer_max float_yankdup integer_yank integer_swap float_min integer_inc float_sub print_float float_cos float_yank tag_float_575 integer_max integer_min float_mult integer_div integer_min integer_dec float_dec float_dup float_dup_times float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 12 0.2373 12 0.1168 12 0.0298 12 0.6517 11 0.5422 12 0.801 12 0.2168 12 0.7863 12 0.4958 12 0.1965 12 0.0288 13 0.1122 12 0.5004 12 0.6976 12 0.6363 12 0.2549 11 0.0731 12 0.2039 12 0.7544 12 0.8164 12 0.7061 12 0.6075 12 0.3884 12 0.4982 12]
Total: 309.74250000000006
Mean: 6.19485
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 18309.776684999997
Median total errors in population: 25344.0
Error averages by case: (715.8783759999983 13.361 725.6940238000011 13.479 701.0684113999987 12.356 716.8731620999991 13.167 727.8669068000012 13.424 710.060691800002 12.509 710.2009562999987 13.322 701.3283980000015 12.593 712.4700858999994 13.946 716.0746941000008 13.344 727.0288351999986 13.231 711.3139900000009 13.164 708.966479699998 13.365 716.9782984000008 13.393 715.9134433999986 13.33 721.7328127999992 13.046 706.2254054000027 12.528 738.9268111000016 14.255 718.7272417000006 12.913 750.574235399998 14.213 725.882025800001 13.366 738.0799489999987 14.08 712.5355980000016 12.397 711.0680892000016 12.638 736.6217637000007 14.266)
Error minima by case: (0.3901 2 0.2373 3 0.0757 1 0.0298 9 0.6517 3 0.0332 2 0.6372 2 0.2168 1 0.7863 9 0.0484 2 0.1965 2 0.0288 8 0.0 1 0.4813 2 0.6976 2 0.1862 9 0.2549 1 0.0731 3 0.2039 6 0.7544 2 0.2318 2 0.7061 2 0.1682 1 0.0508 2 0.4982 2)
Average genome size in population (length): 50.653
Average program size in population (points): 51.653
Average percent parens in population: 0.042
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.32
Error (vector) diversity:			 0.35
Behavioral diversity:				 0.374
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1270300
--- Timings ---
Current time: 1529615475860 milliseconds
Total Time:           4.0 seconds
Initialization:       0.1 seconds,  2.8%
Reproduction:         0.6 seconds, 14.3%
Fitness Testing:      3.3 seconds, 82.9%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 12322.821700000006
Test mean error for best: 6.16141
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: 
-68          
Correct output: 120.2372555792 | Program output: 
120          
Correct output: -2.1167948701  | Program output: 
-2           
Correct output: 62.9701853121  | Program output: 
63           
Correct output: 128.6517283847 | Program output: 
128          
Correct output: -8.5421972836  | Program output: 
-8           
Correct output: -38.8010007696 | Program output: 
-38          
Correct output: 39.2167962231  | Program output: 
39           
Correct output: -24.2137149529 | Program output: 
-25          
Correct output: -58.4957609113 | Program output: 
-58          
Correct output: -87.1964832094 | Program output: 
-87          
Correct output: -2.9711614706  | Program output: 
-3           
Correct output: -81.1121745511 | Program output: 
-81          
Correct output: -49.5003550687 | Program output: 
-49          
Correct output: -88.6976304193 | Program output: 
-88          
Correct output: 86.3637391605  | Program output: 
87           
Correct output: 58.2548794908  | Program output: 
58           
Correct output: -133.0730642872 | Program output: 
-133         
Correct output: -9.7960903291  | Program output: 
-10          
Correct output: -176.7544002752 | Program output: 
-176         
Correct output: -78.8164296875 | Program output: 
-78          
Correct output: -130.7060715307 | Program output: 
-130         
Correct output: 70.6074653162  | Program output: 
70           
Correct output: -4.3884194975  | Program output: 
-4           
Correct output: -126.4982238663 | Program output: 
-126         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_mult} {:instruction tag_float_348} {:instruction print_newline} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_max} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_min} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap float_stackdepth float_sub integer_swap float_dup_times float_mult tag_float_348 print_newline integer_yank float_mult integer_max integer_max float_yankdup integer_yank integer_swap float_min integer_inc float_sub print_float float_cos float_yank tag_float_575 integer_max integer_min float_mult integer_div integer_min integer_dec float_dec float_dup float_dup_times float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 12 0.2373 12 0.1168 12 0.0298 12 0.6517 11 0.5422 12 0.801 12 0.2168 12 0.7863 12 0.4958 12 0.1965 12 0.0288 13 0.1122 12 0.5004 12 0.6976 12 0.6363 12 0.2549 11 0.0731 12 0.2039 12 0.7544 12 0.8164 12 0.7061 12 0.6075 12 0.3884 12 0.4982 12]
Total: 309.74250000000006
Mean: 6.19485
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 7122.166220099996
Median total errors in population: 2040.3723000000002
Error averages by case: (265.3760435999984 11.284 295.6029116999998 11.842 235.93178709999927 10.36 277.9216319000002 12.31 302.0175369999973 11.715 252.2314289999993 10.686 257.90074670000166 11.306 244.3875472999984 10.943 254.98348989999968 12.933 262.532944500001 11.314 279.4924310999993 11.041 251.8388310000001 12.201 261.2740267000011 11.457 256.4838654999987 11.288 276.01312170000267 11.442 282.46416349999936 11.981 256.8239345999999 10.695 307.7514224999999 12.24 267.9199211000003 11.563 336.0422144999995 12.048 275.16481040000184 11.264 307.0174557000024 11.737 264.701421900002 10.464 258.86841039999916 10.948 304.1841207999993 12.178)
Error minima by case: (0.1109 2 0.2373 3 0.0757 1 0.0298 8 0.6517 3 0.0332 2 0.6372 2 0.2168 1 0.7863 9 0.0484 2 0.1965 1 0.0288 8 0.0 0 0.5004 2 0.6976 1 0.1862 8 0.2549 1 0.0731 3 0.2039 8 0.7544 2 0.8164 1 0.7061 2 0.1682 1 0.0508 2 0.4982 2)
Average genome size in population (length): 58.801
Average program size in population (points): 59.801
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.479
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.311
Error (vector) diversity:			 0.338
Behavioral diversity:				 0.361
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2745275
--- Timings ---
Current time: 1529615479833 milliseconds
Total Time:           8.2 seconds
Initialization:       0.1 seconds,  1.4%
Reproduction:         2.5 seconds, 31.0%
Fitness Testing:      4.9 seconds, 60.1%
Report:               0.6 seconds,  7.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction -76} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap float_dup_items float_dup_items float_cos float_min float_yankdup -76 integer_dec integer_dup integer_stackdepth float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_dec integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_inc in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 4410.100228000016
Median total errors in population: 1480.7425000000003
Error averages by case: (157.19212989999977 8.986 177.93830129999972 10.054 133.56931810000086 7.958 177.62603589999955 12.456 180.2543616999991 9.671 165.30446629999955 8.48 168.50075920000157 8.917 137.7949226999988 8.545 159.6522748000013 12.809 151.55044660000075 9.079 160.72058629999984 8.566 165.64739580000003 12.22 156.80979250000115 9.029 145.69933640000025 8.94 172.7422838000012 9.303 164.79366420000025 11.414 148.11135459999994 8.246 186.9424674000004 10.149 195.67555029999835 10.684 205.8064298000016 9.639 158.01794030000042 8.708 184.90413780000088 9.189 150.83107419999996 8.102 183.7542893999993 8.883 180.5279087000008 9.706)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 9 0.6517 3 0.0332 2 0.801 2 0.2168 1 0.7863 9 0.0484 2 0.1965 1 0.0288 8 0.0 0 0.5004 2 0.6976 1 0.6363 9 0.2549 1 0.0731 3 0.2039 8 0.7544 2 0.8164 1 0.7061 2 0.4902 1 0.0508 2 0.4982 2)
Average genome size in population (length): 47.456
Average program size in population (points): 48.456
Average percent parens in population: 0.028
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9135
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.611
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.611
Total error diversity:				 0.142
Error (vector) diversity:			 0.149
Behavioral diversity:				 0.162
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3935450
--- Timings ---
Current time: 1529615482930 milliseconds
Total Time:          11.2 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         3.8 seconds, 34.3%
Fitness Testing:      6.2 seconds, 55.9%
Report:               1.0 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction -76} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap float_dup_items float_dup_items float_cos float_min float_yankdup -76 integer_dec integer_dup integer_stackdepth float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_dec integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_inc in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 4232.506807999996
Median total errors in population: 1474.0
Error averages by case: (152.7395691999998 8.132 163.89617199999978 9.307 130.10185180000124 7.388 169.50008179999907 12.407 166.98960749999895 8.917 163.76385839999918 8.027 164.0383323000019 8.195 128.1356699999988 7.987 159.16198140000185 12.554 148.71801300000106 8.371 158.80549389999976 7.864 164.4390596 11.843 141.9690411000012 8.332 144.26664680000007 8.131 159.95846670000122 8.605 154.4448508000003 11.012 136.29803879999992 7.677 177.8921138000006 9.12 194.35748109999795 10.268 195.9636748000017 8.841 155.57375620000047 8.244 177.56189690000113 8.479 141.05024479999994 7.661 182.143682299999 8.422 175.84022300000083 9.113)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.6517 3 0.5422 2 0.801 2 0.2168 1 0.7863 10 0.4958 2 0.1965 1 0.0288 9 0.0 0 0.5004 2 0.6976 1 0.6363 9 0.2549 1 0.0731 2 0.2039 8 0.7544 2 0.8164 1 0.7061 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 38.207
Average program size in population (points): 39.207
Average percent parens in population: 0.032
Minimum age in population: 3.0
Maximum age in population: 5.75
Average age in population: 4.41425
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 54
Genome diversity (% unique Plush genomes):	 0.539
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 54
Syntactic diversity (% unique Push programs):	 0.539
Total error diversity:				 0.078
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.092
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4893375
--- Timings ---
Current time: 1529615486242 milliseconds
Total Time:          14.6 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.6 seconds, 38.3%
Fitness Testing:      7.4 seconds, 50.9%
Report:               1.5 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction -76} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap float_dup_items float_dup_items float_cos float_min float_yankdup -76 integer_dec integer_dup integer_stackdepth float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_dec integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_inc in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3606.3861526000032
Median total errors in population: 1458.7425000000003
Error averages by case: (142.40275850000083 11.382 125.58563709999729 12.192 117.406910400002 10.947 118.01364430000093 11.866 119.01920220000125 11.559 135.987252699999 11.305 139.14515590000292 11.372 107.04690999999812 11.619 133.77507900000285 12.065 136.00081230000146 11.511 129.6063124000019 11.132 138.08026250000003 12.022 138.21666420000201 11.835 128.7628297000016 11.363 150.23773470000108 11.828 108.2734377999988 11.515 115.36313489999992 10.998 153.80137179999943 11.921 153.43426849999716 10.8 159.80343220000245 11.901 128.52374389999883 11.513 149.52392699999993 11.586 105.35027909999874 11.237 142.88124159999887 11.659 140.68514990000142 12.331)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 9 0.6517 3 0.4578 2 0.199 2 0.2168 1 0.7863 9 0.4958 2 0.1965 1 0.0288 9 0.0 0 0.4996 2 0.3024 1 0.3637 9 0.2549 1 0.0731 3 0.2039 8 0.2456 2 0.1836 1 0.2939 2 0.6075 1 0.0139 2 0.4982 2)
Average genome size in population (length): 51.049
Average program size in population (points): 52.049
Average percent parens in population: 0.021
Minimum age in population: 4.0
Maximum age in population: 7.625
Average age in population: 5.7845
Median age in population: 5.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.671
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.671
Total error diversity:				 0.092
Error (vector) diversity:			 0.094
Behavioral diversity:				 0.099
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6172775
--- Timings ---
Current time: 1529615489425 milliseconds
Total Time:          17.8 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.2 seconds, 40.3%
Fitness Testing:      8.6 seconds, 48.7%
Report:               1.8 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction -76} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap float_dup_items float_dup_items float_cos float_min float_yankdup -76 integer_dec integer_dup integer_stackdepth float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_dec integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_inc in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3244.1257759999953
Median total errors in population: 286.7425
Error averages by case: (120.76438700000088 11.515 115.03518059999789 11.635 106.3457984000021 11.29 115.52990960000058 11.397 117.33048240000117 11.376 121.60112319999942 11.327 121.35546700000233 11.499 111.29126099999857 11.425 120.92814130000251 11.568 122.59085860000093 11.507 120.8749550000014 11.44 122.19048000000004 12.202 102.40660420000188 11.523 119.61884760000108 11.508 114.0458879999996 11.546 114.7256472999988 11.4 112.89791719999992 11.146 125.41381629999823 11.71 124.48972279999758 11.284 126.29334560000174 11.662 122.16745159999928 11.493 125.21460089999906 11.592 115.11198599999871 11.319 115.42047039999947 11.353 123.0294340000014 11.735)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.6517 6 0.5422 4 0.199 5 0.2168 3 0.7863 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 58.815
Average program size in population (points): 59.815
Average percent parens in population: 0.017
Minimum age in population: 5.0
Maximum age in population: 9.125
Average age in population: 7.1660625
Median age in population: 7.25
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.72
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.72
Total error diversity:				 0.073
Error (vector) diversity:			 0.077
Behavioral diversity:				 0.08
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 7653525
--- Timings ---
Current time: 1529615492669 milliseconds
Total Time:          21.0 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         8.7 seconds, 41.5%
Fitness Testing:      9.9 seconds, 47.4%
Report:               2.2 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_shove} {:instruction 73} {:instruction float_tan} {:instruction integer_sub} {:instruction float_cos} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_cos} {:instruction integer_mod} {:instruction tag_float_575} {:instruction integer_max} {:instruction float_mult} {:instruction float_mult} {:instruction integer_max} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (integer_flush float_shove 73 float_tan integer_sub float_cos integer_inc float_sub print_float float_cos integer_mod tag_float_575 integer_max float_mult float_mult integer_max integer_min integer_dec float_dec float_dup float_dup_times integer_dec float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2929.095495099996
Median total errors in population: 286.7425
Error averages by case: (108.47468620000078 11.303 104.3278809999981 11.372 92.57005390000188 11.099 107.84332940000053 11.192 105.99836480000121 11.342 109.25599589999955 11.135 110.82505130000231 11.285 100.98816309999864 11.207 106.6685022000023 11.305 107.90159650000082 11.274 107.50411420000128 11.229 104.04538350000004 12.006 92.1530501000018 11.283 107.233639900001 11.291 104.81730929999962 11.304 107.39021129999877 11.2 102.29399259999992 11.153 110.06705139999823 11.447 110.13771499999767 11.105 111.84087330000172 11.423 107.85472569999943 11.256 107.56122849999912 11.363 104.0036449999987 11.134 105.74081229999959 11.165 109.27711870000138 11.448)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.3483 5 0.5422 4 0.199 4 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 10 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 57.523
Average program size in population (points): 58.523
Average percent parens in population: 0.017
Minimum age in population: 6.375
Maximum age in population: 10.59375
Average age in population: 8.6199375
Median age in population: 8.6875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.757
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.757
Total error diversity:				 0.056
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9102605
--- Timings ---
Current time: 1529615495803 milliseconds
Total Time:          24.3 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.2 seconds, 41.9%
Fitness Testing:     11.4 seconds, 46.8%
Report:               2.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction integer_sub} {:instruction integer_add} {:instruction float_tan} {:instruction integer_swap} {:instruction integer_max} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_min} {:instruction integer_inc} {:instruction float_sub} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (float_div float_max integer_sub integer_add float_tan integer_swap integer_max integer_max float_yankdup integer_yank integer_swap float_min integer_inc float_sub float_swap integer_rot float_inc integer_dup_items integer_dup_items float_inc in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3165.4838100999955
Median total errors in population: 286.7425
Error averages by case: (118.54582660000058 11.307 113.1557679999982 11.382 103.95028000000187 11.108 114.31067630000044 11.197 114.95843750000103 11.337 117.94478559999973 11.136 118.84325800000192 11.284 109.54059649999856 11.203 118.93679060000214 11.326 117.13285860000073 11.283 116.85836550000101 11.239 117.01376800000004 12.033 104.11716520000155 11.289 116.62984680000093 11.297 115.7434239999996 11.297 113.93506699999874 11.215 110.76080019999992 11.146 119.41474319999871 11.455 121.13876179999797 11.12 119.8441000000014 11.425 117.26281879999961 11.256 119.57589479999938 11.369 113.00137089999869 11.144 112.34747039999975 11.16 118.0609358000014 11.452)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.3483 5 0.5422 4 0.199 4 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 57.629
Average program size in population (points): 58.629
Average percent parens in population: 0.017
Minimum age in population: 7.75
Maximum age in population: 12.15625
Average age in population: 10.097359375
Median age in population: 10.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.058
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 10553805
--- Timings ---
Current time: 1529615498651 milliseconds
Total Time:          27.0 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.4 seconds, 42.1%
Fitness Testing:     12.7 seconds, 46.8%
Report:               2.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction float_rot} {:instruction float_mult} {:instruction float_sub} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_tan} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_min} {:instruction integer_rot} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (float_yank tag_float_575 integer_max float_rot float_mult float_sub integer_min integer_dec float_dec float_dup float_dup_times float_cos float_yank float_sub float_yank float_tan in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_swap integer_min integer_rot float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 3010.179219999995
Median total errors in population: 286.7425
Error averages by case: (111.43984840000095 11.236 108.81680479999747 11.329 94.557477800002 11.057 108.97850340000085 11.176 109.65903650000135 11.272 110.67295439999927 11.084 111.0822730000025 11.236 104.25911039999825 11.141 112.05350020000272 11.281 110.74728720000107 11.214 109.51133050000149 11.177 109.74068170000004 12.019 104.11205300000198 11.229 109.24085000000115 11.231 112.38460959999964 11.258 107.38201469999878 11.179 106.33815409999993 11.082 112.95991279999795 11.385 114.21274229999733 11.091 114.56388960000194 11.352 109.85698279999923 11.181 112.07948629999903 11.285 106.48122209999872 11.071 105.89208199999932 11.124 112.09241240000138 11.374)
Error minima by case: (0.3901 3 0.2373 5 0.1168 3 0.0298 9 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 9 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 4 0.3637 9 0.2549 3 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.3925 3 0.3884 4 0.4982 3)
Average genome size in population (length): 58.132
Average program size in population (points): 59.132
Average percent parens in population: 0.017
Minimum age in population: 8.75
Maximum age in population: 13.890625
Average age in population: 11.5713125
Median age in population: 11.625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.853
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.853
Total error diversity:				 0.066
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 12017605
--- Timings ---
Current time: 1529615501532 milliseconds
Total Time:          30.0 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.7 seconds, 42.3%
Fitness Testing:     13.9 seconds, 46.5%
Report:               3.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_max} {:instruction in2} {:instruction float_sub} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction tagged_71} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_div} {:instruction integer_dec} {:instruction integer_min} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction -19} {:instruction integer_div} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_mod} {:instruction float_dup_items} {:instruction integer_mult} {:instruction float_dec} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_min} {:instruction integer_dup_times} {:instruction print_integer})
Best program: (-27 float_yankdup integer_flush integer_max float_dup_items float_rot integer_max in2 float_sub print_float float_cos float_yank tag_float_575 integer_max tagged_71 float_mult integer_div integer_min integer_dec float_dec float_dup integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_fromfloat integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_inc in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap float_div integer_dec integer_min float_pop integer_yank integer_dup_times float_dup_times float_frominteger -19 integer_div integer_sub integer_pop float_mod float_dup_items integer_mult float_dec float_rot integer_dup_items float_min integer_dup_times print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3577.4221349999953
Median total errors in population: 286.7425
Error averages by case: (134.49184790000098 11.311 131.82367339999718 11.374 114.16768640000218 11.073 131.6506757000011 11.208 132.22536940000103 11.352 133.78403059999863 11.12 135.0499630000033 11.274 122.89784479999783 11.185 134.5085974000034 11.348 133.9209257000016 11.292 133.56027900000188 11.244 134.44593070000002 12.003 121.81936020000204 11.275 133.34374560000148 11.294 134.6249159000003 11.301 130.6527755999987 11.218 125.55705809999992 11.131 136.11893959999796 11.461 136.76251579999666 11.13 137.91504160000252 11.442 132.97191989999888 11.264 135.38621799999893 11.383 129.74370169999867 11.118 132.84567619999865 11.165 134.70044280000138 11.487)
Error minima by case: (0.3901 4 0.2373 3 0.1168 3 0.0298 8 0.6517 2 0.5422 4 0.199 4 0.2168 2 0.7863 9 0.4958 3 0.1965 3 0.0288 9 0.1122 2 0.5004 3 0.6976 4 0.6363 10 0.2549 2 0.0731 4 0.2039 10 0.7544 4 0.8164 3 0.7061 4 0.6075 2 0.3884 4 0.4982 3)
Average genome size in population (length): 58.43
Average program size in population (points): 59.43
Average percent parens in population: 0.017
Minimum age in population: 10.5
Maximum age in population: 15.23828125
Average age in population: 13.08121484375
Median age in population: 13.095703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.879
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.879
Total error diversity:				 0.067
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 13488363
--- Timings ---
Current time: 1529615504594 milliseconds
Total Time:          32.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.0 seconds, 42.7%
Fitness Testing:     15.2 seconds, 46.3%
Report:               3.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_max} {:instruction in2} {:instruction float_sin} {:instruction float_max} {:instruction print_float} {:instruction float_dup} {:instruction integer_dec} {:instruction float_div} {:instruction integer_dup_times} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (-27 float_yankdup integer_flush integer_max float_dup_items float_rot integer_max in2 float_sin float_max print_float float_dup integer_dec float_div integer_dup_times float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max float_inc integer_dup_items float_dec float_inc in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2939.5211400999947
Median total errors in population: 286.7425
Error averages by case: (106.96128800000014 11.266 109.33787079999877 11.375 90.73833120000168 11.078 107.31917889999988 11.152 110.32904520000098 11.304 107.97695440000008 11.092 109.74226300000143 11.252 98.03358439999921 11.183 106.86536320000153 11.268 106.96980820000009 11.245 106.20213400000048 11.17 107.20788320000004 11.966 96.89083840000164 11.271 105.05234880000025 11.252 109.98091199999963 11.292 106.48705979999887 11.182 101.32044129999991 11.109 110.45991279999912 11.414 111.78557739999817 11.036 111.65160880000107 11.38 105.46498280000021 11.191 110.41113139999989 11.293 107.98550889999876 11.09 105.18669360000013 11.146 107.73641960000118 11.417)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.6517 6 0.4578 4 0.199 5 0.2168 3 0.7863 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 57.987
Average program size in population (points): 58.987
Average percent parens in population: 0.017
Minimum age in population: 11.8671875
Maximum age in population: 16.5078125
Average age in population: 14.55959765625
Median age in population: 14.63671875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.876
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.876
Total error diversity:				 0.076
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 14946924
--- Timings ---
Current time: 1529615507338 milliseconds
Total Time:          35.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.2 seconds, 42.4%
Fitness Testing:     16.5 seconds, 46.2%
Report:               3.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (-27 integer_inc integer_flush float_shove float_frominteger float_dup_items float_stackdepth float_sub integer_mod float_dup float_dup_times float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3092.075911499995
Median total errors in population: 286.7425
Error averages by case: (115.77289790000106 11.254 109.31886549999788 11.338 100.51874720000177 11.06 108.99517230000076 11.181 110.57934020000106 11.272 115.87041219999934 11.077 117.40926300000234 11.24 104.78877559999829 11.144 113.76985090000247 11.286 114.00830400000108 11.234 114.85933050000149 11.177 113.89427840000003 12.003 103.83471640000158 11.234 114.16485000000128 11.248 115.22481919999963 11.272 108.16064149999885 11.187 105.25847779999992 11.09 117.4214010999982 11.417 118.51949939999764 11.078 119.08260880000175 11.372 115.14298279999916 11.192 117.36083749999898 11.282 107.98622429999878 11.084 112.2486935999993 11.114 116.6599214000013 11.389)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 9 0.6517 3 0.5422 2 0.199 2 0.2168 1 0.7863 9 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.5004 2 0.6976 2 0.6363 9 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.8164 2 0.2939 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 57.878
Average program size in population (points): 58.878
Average percent parens in population: 0.017
Minimum age in population: 12.8671875
Maximum age in population: 17.71484375
Average age in population: 16.047982421875
Median age in population: 16.11279296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.868
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.868
Total error diversity:				 0.069
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 16402099
--- Timings ---
Current time: 1529615510126 milliseconds
Total Time:          38.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.4 seconds, 42.5%
Fitness Testing:     17.8 seconds, 46.1%
Report:               4.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_488} {:instruction -32} {:instruction tag_float_994} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_rot} {:instruction integer_swap} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1})
Best program: (tagged_488 -32 tag_float_994 integer_sub integer_sub integer_fromfloat in2 float_rot integer_swap integer_min float_mult integer_div integer_min integer_dec float_dec float_dup float_dup_times float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 float_inc integer_dup_items float_dec integer_stackdepth in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2989.5548272999954
Median total errors in population: 286.7425
Error averages by case: (110.97267810000083 11.282 108.28144109999786 11.376 93.76391520000202 11.086 105.59959030000041 11.163 108.94136050000117 11.312 109.77529199999947 11.117 107.59427300000225 11.267 103.10293629999856 11.188 109.6095002000024 11.274 110.14479980000091 11.256 109.69354450000134 11.208 108.82862400000003 11.986 101.38817500000185 11.285 109.24084920000107 11.283 109.24860959999961 11.296 105.79933619999875 11.189 104.58542679999991 11.126 112.70669349999834 11.434 113.93335399999766 11.078 115.23536320000169 11.4 109.10553359999936 11.235 112.61583749999916 11.319 106.13830089999868 11.118 108.91696599999946 11.159 112.46842680000138 11.427)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.6517 5 0.4578 4 0.199 4 0.2168 3 0.7863 9 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 9 0.2456 5 0.1836 5 0.2939 5 0.6075 3 0.3884 4 0.4982 5)
Average genome size in population (length): 58.313
Average program size in population (points): 59.313
Average percent parens in population: 0.017
Minimum age in population: 14.71875
Maximum age in population: 19.36767578125
Average age in population: 17.53278515625
Median age in population: 17.621337890625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.872
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.872
Total error diversity:				 0.067
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 17868224
--- Timings ---
Current time: 1529615513171 milliseconds
Total Time:          41.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.7 seconds, 42.7%
Fitness Testing:     19.1 seconds, 46.0%
Report:               4.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_min} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_min} {:instruction integer_rot} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_max float_dup_times float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_min float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_swap integer_min integer_rot float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3520.646411299996
Median total errors in population: 286.7425
Error averages by case: (135.67914920000072 11.27 125.90830419999735 11.352 108.95423320000182 11.044 125.13150500000118 11.212 126.02137680000114 11.288 130.7799768999989 11.06 132.87061750000285 11.243 117.32858519999796 11.135 133.7484998000031 11.328 134.85708100000156 11.237 134.02314520000172 11.191 134.10489450000006 12.012 120.11651770000189 11.25 133.58469380000153 11.254 132.61240989999982 11.281 123.68695199999883 11.208 119.26836779999991 11.074 137.2688365999986 11.451 136.89346589999707 11.1 138.6590047000023 11.4 134.29735849999898 11.199 136.19231289999928 11.315 121.26912609999879 11.062 129.91106179999883 11.11 135.9719351000014 11.431)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 9 0.3483 2 0.5422 2 0.801 2 0.2168 1 0.2137 9 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.5004 2 0.6976 2 0.6363 9 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.8164 2 0.7061 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 57.847
Average program size in population (points): 58.847
Average percent parens in population: 0.017
Minimum age in population: 16.01171875
Maximum age in population: 20.78564453125
Average age in population: 18.99699340820312
Median age in population: 19.06005859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.072
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 19321474
--- Timings ---
Current time: 1529615516124 milliseconds
Total Time:          44.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.1 seconds, 42.9%
Fitness Testing:     20.3 seconds, 45.6%
Report:               5.0 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_add} {:instruction float_tan} {:instruction integer_swap} {:instruction integer_max} {:instruction integer_max} {:instruction integer_mult} {:instruction tag_float_994} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction in2} {:instruction float_dup_items} {:instruction float_flush} {:instruction float_add} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction integer_mod} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction integer_yankdup})
Best program: (float_div integer_pop integer_sub integer_add float_tan integer_swap integer_max integer_max integer_mult tag_float_994 float_dup float_dup_times float_cos float_yank float_sub float_yank float_add in1 tagged_70 integer_fromfloat integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank in2 integer_add float_flush tagged_408 in2 float_dup_items float_flush float_add integer_yank integer_yank integer_swap integer_inc -17 in2 integer_add integer_mod tagged_408 integer_fromfloat float_dup integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3895.670745299996
Median total errors in population: 286.7425
Error averages by case: (146.48441689999947 11.353 147.16997649999922 11.456 123.15216780000188 11.104 147.3050904999993 11.228 147.1205590999994 11.412 145.96073549999912 11.155 148.4332343000025 11.328 139.4732000999979 11.223 146.6442892000027 11.366 144.8921235000013 11.33 145.61041149999994 11.271 144.49655830000003 12.005 135.25034210000175 11.353 144.78651009999973 11.332 143.7280194000011 11.351 145.2919883000005 11.238 142.48008179999994 11.171 148.57708819999976 11.535 149.53912759999744 11.129 150.37165810000204 11.498 143.25066330000035 11.29 148.5592392000005 11.411 143.2439507000002 11.135 144.23116899999906 11.203 146.20814430000135 11.533)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 9 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 9 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 10 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 57.645
Average program size in population (points): 58.645
Average percent parens in population: 0.018
Minimum age in population: 17.998046875
Maximum age in population: 22.4395751953125
Average age in population: 20.53189111328125
Median age in population: 20.60589599609375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.066
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 20769374
--- Timings ---
Current time: 1529615518917 milliseconds
Total Time:          47.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.3 seconds, 43.0%
Fitness Testing:     21.6 seconds, 45.7%
Report:               5.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_swap} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction -76} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_add} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_frominteger} {:instruction float_pop} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_div} {:instruction float_add} {:instruction integer_pop} {:instruction float_dup_items} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_36} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction in1} {:instruction tagged_408})
Best program: (integer_yankdup integer_inc integer_flush float_swap float_stackdepth float_dup_items float_dup_items float_cos float_min float_yankdup -76 integer_dec integer_dup integer_stackdepth float_add integer_add float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_frominteger float_pop float_cos float_yank tag_float_575 integer_max integer_min float_mult integer_dec integer_dup integer_div float_add integer_pop float_dup_items float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_dec integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_inc in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_36 float_dup_items integer_fromfloat integer_stackdepth float_tan float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add in1 tagged_408)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3288.250741199996
Median total errors in population: 286.7425
Error averages by case: (122.77977710000103 11.31 120.43166119999786 11.385 105.60211200000175 11.084 119.07256780000081 11.193 120.28747790000112 11.338 122.55182139999923 11.106 122.38604400000237 11.275 115.27487529999834 11.185 122.81701890000252 11.32 122.05684180000108 11.279 121.6871515000015 11.228 122.31412680000004 12.004 107.18870660000174 11.277 121.2688476000013 11.292 122.54105279999965 11.301 117.94557999999884 11.2 116.99337849999992 11.122 124.36510869999813 11.465 126.28454639999761 11.105 126.02810000000194 11.433 120.79908439999909 11.249 124.20530699999891 11.351 117.69870189999878 11.114 120.84142119999919 11.161 122.59643040000132 11.456)
Error minima by case: (0.3901 4 0.2373 3 0.1168 3 0.0298 9 0.3483 2 0.4578 4 0.199 4 0.2168 2 0.2137 10 0.4958 3 0.1965 3 0.0288 9 0.1122 4 0.4996 3 0.3024 4 0.3637 8 0.2549 2 0.0731 4 0.2039 8 0.2456 4 0.1836 3 0.2939 4 0.3925 2 0.3884 4 0.4982 3)
Average genome size in population (length): 57.478
Average program size in population (points): 58.478
Average percent parens in population: 0.018
Minimum age in population: 19.2744140625
Maximum age in population: 23.9996337890625
Average age in population: 21.97223065185547
Median age in population: 22.00137329101562
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.864
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.864
Total error diversity:				 0.068
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 22212174
--- Timings ---
Current time: 1529615522011 milliseconds
Total Time:          50.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.6 seconds, 43.0%
Fitness Testing:     22.9 seconds, 45.6%
Report:               5.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_div} {:instruction float_rot} {:instruction integer_max} {:instruction in2} {:instruction float_yank} {:instruction float_max} {:instruction print_float} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction -44} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap})
Best program: (-27 integer_inc integer_flush integer_max float_dup_items float_yankdup float_dup_items integer_dec integer_dup integer_div float_rot integer_max in2 float_yank float_max print_float float_dup integer_fromfloat float_frominteger integer_max integer_min float_mult integer_div integer_min integer_dec -44 float_dup float_dup_times float_cos float_yank float_dup float_dup_times float_cos float_yank float_sub float_yank float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_add integer_div in1 print_integer float_add integer_yank integer_swap)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3364.1518527999947
Median total errors in population: 286.7425
Error averages by case: (127.4562167000012 11.319 124.63095659999742 11.417 104.18048500000185 11.106 121.91284220000078 11.199 124.13569320000126 11.354 121.28033739999914 11.136 123.0142582000027 11.294 114.49407719999834 11.207 124.83399610000289 11.303 127.51536280000128 11.297 125.88197250000172 11.238 126.37242240000003 12.003 117.76783880000193 11.314 125.50084600000145 11.311 125.64039069999963 11.336 120.57190779999875 11.214 116.72682929999992 11.137 130.2939624999979 11.475 129.36911109999724 11.095 130.96234560000215 11.44 124.45681879999898 11.244 129.2948947999987 11.357 118.89347669999869 11.129 119.28387459999911 11.19 127.10593580000143 11.46)
Error minima by case: (0.3901 9 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.5422 9 0.801 9 0.2168 9 0.2137 10 0.4958 9 0.1965 9 0.0288 9 0.1122 2 0.5004 10 0.6976 9 0.3637 10 0.2549 9 0.0731 9 0.2039 8 0.7544 9 0.8164 9 0.7061 8 0.3925 9 0.3884 9 0.4982 9)
Average genome size in population (length): 57.636
Average program size in population (points): 58.636
Average percent parens in population: 0.018
Minimum age in population: 20.2744140625
Maximum age in population: 25.35104370117188
Average age in population: 23.45088400268555
Median age in population: 23.48991394042969
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.874
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.874
Total error diversity:				 0.067
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 23659513
--- Timings ---
Current time: 1529615525026 milliseconds
Total Time:          53.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.8 seconds, 42.8%
Fitness Testing:     24.3 seconds, 45.5%
Report:               6.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_shove} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_sub} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_shove} {:instruction integer_pop} {:instruction integer_pop} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction print_float} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tag_integer_955} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_div} {:instruction float_yank} {:instruction integer_yank} {:instruction float_flush} {:instruction float_div} {:instruction float_dup_times} {:instruction 71} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_dup_items})
Best program: (integer_dup_items float_shove integer_inc integer_min in1 integer_fromfloat integer_mult integer_sub float_sub integer_max integer_min float_mult integer_div integer_shove integer_pop integer_pop integer_div integer_min integer_dec float_dec float_dup float_dup_times float_cos print_float float_sub float_yank float_add in1 tag_integer_955 float_dup_items integer_fromfloat in2 integer_add integer_div in1 print_integer float_add integer_div float_yank integer_yank float_flush float_div float_dup_times 71 float_frominteger integer_inc float_dup_items)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3400.509784799996
Median total errors in population: 286.7425
Error averages by case: (128.21043650000098 11.303 125.3851777999976 11.391 108.31130420000189 11.091 123.69922510000073 11.187 125.37316570000125 11.32 124.20011039999949 11.101 127.58764600000238 11.275 117.82910879999837 11.178 126.95763720000258 11.306 127.38886700000103 11.278 126.93057950000149 11.219 125.58736480000005 12.02 116.7163700000019 11.285 126.46384440000116 11.287 124.32944799999962 11.308 122.91511689999878 11.2 119.54886779999994 11.12 129.91845079999808 11.463 130.84990719999743 11.096 131.36232800000187 11.421 127.24155319999922 11.222 129.87789479999893 11.337 121.59485229999872 11.113 121.28709079999942 11.164 128.82243760000136 11.436)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 9 0.3483 3 0.4578 2 0.801 2 0.2168 1 0.7863 9 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.6976 2 0.6363 9 0.2549 1 0.0731 3 0.2039 8 0.7544 2 0.8164 2 0.7061 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 57.07
Average program size in population (points): 58.07
Average percent parens in population: 0.018
Minimum age in population: 21.2744140625
Maximum age in population: 26.94845581054688
Average age in population: 24.92107833862305
Median age in population: 24.95671844482422
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.879
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.879
Total error diversity:				 0.069
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 25091738
--- Timings ---
Current time: 1529615527852 milliseconds
Total Time:          56.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.1 seconds, 42.8%
Fitness Testing:     25.5 seconds, 45.4%
Report:               6.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_shove} {:instruction integer_flush} {:instruction -27} {:instruction float_yankdup} {:instruction float_dup} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_max} {:instruction in2} {:instruction float_yank} {:instruction float_max} {:instruction print_float} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction float_sub} {:instruction integer_mod} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_9979} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_flush float_shove integer_flush -27 float_yankdup float_dup integer_max float_dup_items float_rot integer_max in2 float_yank float_max print_float float_dup integer_fromfloat float_frominteger float_sub integer_mod float_dup float_dup_times float_cos float_yank float_sub float_yank integer_stackdepth in1 tagged_9979 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items integer_shove in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush integer_div integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3759.2437493999955
Median total errors in population: 286.7425
Error averages by case: (143.02719490000027 11.3 138.22025449999813 11.382 123.46351380000206 11.073 136.54102140000055 11.239 138.49608090000058 11.341 142.41303479999888 11.111 142.9752714000029 11.284 127.43375289999814 11.173 139.90921880000298 11.37 142.05493420000136 11.287 142.28664950000083 11.231 138.54575240000005 12.025 133.3237614000019 11.309 141.0468372000007 11.291 142.14931710000081 11.318 135.97855189999922 11.232 129.52536949999993 11.101 145.63435429999893 11.49 142.30809959999706 11.129 147.3609768000023 11.454 141.4980416 11.253 145.55006669999975 11.382 133.99260109999906 11.089 139.22961909999907 11.161 143.77247360000138 11.482)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 2 0.5422 2 0.801 2 0.2168 1 0.2137 9 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.5004 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.8164 2 0.7061 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 57.128
Average program size in population (points): 58.128
Average percent parens in population: 0.018
Minimum age in population: 23.5875244140625
Maximum age in population: 28.542724609375
Average age in population: 26.42838338470459
Median age in population: 26.469970703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.87
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.87
Total error diversity:				 0.064
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 26525138
--- Timings ---
Current time: 1529615530701 milliseconds
Total Time:          59.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.2 seconds, 42.7%
Fitness Testing:     26.9 seconds, 45.5%
Report:               6.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction tagged_46} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap float_dup_items float_dup_items float_cos float_min float_yankdup tagged_46 integer_dec integer_dup integer_stackdepth float_add integer_pop float_pop float_cos float_yank tag_float_575 integer_max integer_min float_mult integer_div integer_min integer_dec float_dec float_dup float_dup_times float_cos float_yank float_sub float_yank float_dup_times float_dup_times float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2849.444413799995
Median total errors in population: 286.7425
Error averages by case: (104.92723850000078 11.275 100.24579049999817 11.376 88.88631680000184 11.094 100.04493900000043 11.18 99.94787630000107 11.321 106.59017179999954 11.109 108.81387500000218 11.267 96.66285799999864 11.194 103.6192262000023 11.277 104.83128720000083 11.255 103.9465270000011 11.199 102.13722880000005 11.986 98.33284820000172 11.295 103.80035120000097 11.26 106.80339999999958 11.311 98.7795908999988 11.188 97.39952479999992 11.122 107.05276659999844 11.444 107.62141249999776 11.068 108.32585440000157 11.398 104.34879919999948 11.21 106.8125435999991 11.322 97.20227129999877 11.118 104.75229639999952 11.168 105.69841960000137 11.424)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 8 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 56.574
Average program size in population (points): 57.574
Average percent parens in population: 0.018
Minimum age in population: 24.5875244140625
Maximum age in population: 30.19302749633789
Average age in population: 27.89207605361938
Median age in population: 27.9095287322998
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.868
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.868
Total error diversity:				 0.059
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 27943988
--- Timings ---
Current time: 1529615533793 milliseconds
Total Time:          62.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.5 seconds, 42.6%
Fitness Testing:     28.4 seconds, 45.6%
Report:               7.2 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction -76} {:instruction float_cos} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_shove} {:instruction tagged_667} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -19} {:instruction integer_div} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_min} {:instruction integer_swap} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_fromfloat integer_inc integer_dup_items integer_swap float_dup_items float_dup_items float_cos float_min float_yankdup -76 float_cos integer_inc integer_stackdepth print_float float_cos float_yank tag_float_575 integer_max integer_min float_mult integer_div integer_min integer_dec float_dec float_dup float_dup_times integer_shove tagged_667 float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -19 integer_div integer_add float_flush tagged_408 integer_fromfloat float_swap integer_min integer_swap float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3257.9587658999953
Median total errors in population: 286.7425
Error averages by case: (122.29477710000103 11.288 118.71614819999766 11.381 100.343630400002 11.083 115.57575770000079 11.197 118.34880620000125 11.321 119.6016167999993 11.105 121.24245700000253 11.271 112.05072769999855 11.177 123.00864540000275 11.297 122.51334600000109 11.269 120.68615150000164 11.216 124.23468160000004 12.034 111.49393100000196 11.301 120.70284840000124 11.277 121.85954079999962 11.307 114.9099074999988 11.206 113.46412999999991 11.112 124.273743199998 11.458 125.62394619999733 11.099 123.86985440000186 11.419 122.07826799999916 11.218 124.22830699999888 11.32 116.57224839999876 11.104 115.97036319999935 11.161 122.24793220000133 11.426)
Error minima by case: (0.3901 5 0.2373 4 0.1168 3 0.0298 9 0.6517 3 0.5422 4 0.199 4 0.2168 3 0.7863 9 0.4958 4 0.1965 4 0.0288 9 0.1122 2 0.5004 4 0.6976 4 0.6363 10 0.2549 3 0.0731 5 0.2039 9 0.7544 5 0.8164 4 0.7061 5 0.6075 3 0.3884 4 0.4982 4)
Average genome size in population (length): 56.323
Average program size in population (points): 57.323
Average percent parens in population: 0.018
Minimum age in population: 26.35458374023438
Maximum age in population: 31.70987701416016
Average age in population: 29.34297375106812
Median age in population: 29.40672969818115
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.852
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.852
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 29356463
--- Timings ---
Current time: 1529615536714 milliseconds
Total Time:          65.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.8 seconds, 42.7%
Fitness Testing:     29.6 seconds, 45.5%
Report:               7.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_488} {:instruction float_swap} {:instruction float_flush} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_inc} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop})
Best program: (tagged_488 float_swap float_flush integer_yankdup integer_flush float_dec in2 float_yankdup integer_yank integer_swap integer_sub float_cos float_yank tag_float_575 integer_max integer_min float_mult integer_div integer_min integer_dec float_dec float_dup integer_shove integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_dec integer_fromfloat float_swap integer_yank float_inc integer_dup_items float_dec float_inc float_inc float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 integer_flush integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add print_integer float_add integer_yank integer_fromfloat integer_yankdup integer_yank integer_swap integer_inc -17 in2 integer_inc float_flush tagged_408 integer_fromfloat float_pop)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 69
Size: 70
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3247.6992882999953
Median total errors in population: 286.7425
Error averages by case: (122.2924862000012 11.322 115.2083478999976 11.407 103.1455455000019 11.094 112.84908820000068 11.224 114.37835410000123 11.358 120.09739209999921 11.121 121.55340170000257 11.291 109.30838759999837 11.19 122.03306810000288 11.338 122.18248620000126 11.298 122.22492470000171 11.241 122.04836950000005 12.023 110.01451870000177 11.314 121.12249490000143 11.307 122.6618990999996 11.326 112.34103539999876 11.212 110.94709619999992 11.122 125.68718429999784 11.508 124.50324029999726 11.114 127.36347670000217 11.466 122.400518299999 11.265 125.61645569999865 11.393 110.84258749999869 11.116 119.62534669999918 11.184 124.54058270000141 11.477)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 9 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 55.992
Average program size in population (points): 56.992
Average percent parens in population: 0.018
Minimum age in population: 27.35458374023438
Maximum age in population: 32.7546558380127
Average age in population: 30.77989015197754
Median age in population: 30.84511375427246
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.863
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.863
Total error diversity:				 0.068
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 30760388
--- Timings ---
Current time: 1529615539512 milliseconds
Total Time:          67.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.0 seconds, 42.7%
Fitness Testing:     30.9 seconds, 45.5%
Report:               7.9 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_mult} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_tan} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_div} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_mult} {:instruction tagged_408} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_fromfloat float_mult in2 integer_dec in2 float_tan integer_dec integer_dup integer_stackdepth float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_sub float_yank float_add in1 float_sin float_dup_times integer_dec integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_dup in1 float_inc float_cos float_yank float_div float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_mult tagged_408 integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3154.771206799995
Median total errors in population: 286.7425
Error averages by case: (117.98289790000115 11.316 112.55465779999749 11.419 98.14601760000208 11.125 112.5127118000007 11.215 112.80492050000124 11.354 116.86325619999919 11.133 117.75847700000276 11.311 109.0726103999987 11.214 117.10272210000292 11.31 116.97080820000122 11.293 116.54093750000176 11.235 115.91896960000004 12.029 111.84806280000211 11.331 115.78685000000137 11.311 118.9010975999996 11.356 110.47597509999872 11.221 110.24488029999992 11.134 118.36632799999792 11.509 121.02178129999722 11.103 121.5261000000021 11.457 116.07134999999906 11.242 119.0328374999988 11.364 109.1491245999987 11.135 116.87990799999915 11.204 118.45192500000144 11.465)
Error minima by case: (0.3901 4 0.2373 6 0.1168 3 0.0298 9 0.3483 6 0.4578 5 0.199 5 0.2168 3 0.2137 9 0.4958 4 0.1965 4 0.0288 9 0.1122 3 0.4996 4 0.3024 4 0.3637 9 0.2549 3 0.0731 5 0.2039 9 0.2456 5 0.1836 3 0.2939 3 0.3925 4 0.3884 5 0.4982 5)
Average genome size in population (length): 56.427
Average program size in population (points): 57.427
Average percent parens in population: 0.018
Minimum age in population: 29.61690902709961
Maximum age in population: 34.27421951293945
Average age in population: 32.25459294652939
Median age in population: 32.31580829620361
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.859
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.859
Total error diversity:				 0.054
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 32174838
--- Timings ---
Current time: 1529615542655 milliseconds
Total Time:          70.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.3 seconds, 42.7%
Fitness Testing:     32.2 seconds, 45.4%
Report:               8.3 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_shove} {:instruction 73} {:instruction float_tan} {:instruction integer_sub} {:instruction float_cos} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_min} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_min} {:instruction integer_rot} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_flush float_shove 73 float_tan integer_sub float_cos integer_inc float_sub print_float float_cos float_yank tag_float_575 integer_max integer_min float_mult float_dup_times integer_dec float_dec float_dup float_dup_times float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add float_min in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_swap integer_min integer_rot float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2958.792658399995
Median total errors in population: 286.7425
Error averages by case: (108.8307989000008 11.302 107.28445169999797 11.387 96.77591520000185 11.094 106.41441470000056 11.205 107.14665510000111 11.334 109.56666539999945 11.12 110.61986500000238 11.277 102.07720469999853 11.19 107.70199610000216 11.294 108.06076620000086 11.278 106.81509900000117 11.218 107.90753760000004 12.01 98.0088384000017 11.28 106.47835440000098 11.289 110.53351679999966 11.307 104.74015009999879 11.208 104.17455509999992 11.132 110.5234244999984 11.451 111.23392669999768 11.098 112.24615280000184 11.421 107.16033039999941 11.238 110.49848629999912 11.358 103.09523389999873 11.13 109.09641239999942 11.179 109.57390700000136 11.428)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 5 0.5422 4 0.199 5 0.2168 3 0.2137 10 0.4958 4 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.3024 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.8164 5 0.2939 6 0.3925 3 0.3884 3 0.4982 6)
Average genome size in population (length): 55.965
Average program size in population (points): 56.965
Average percent parens in population: 0.018
Minimum age in population: 31.09129238128662
Maximum age in population: 35.70956635475159
Average age in population: 33.76188394355774
Median age in population: 33.78863286972046
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.856
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.856
Total error diversity:				 0.054
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 33577863
--- Timings ---
Current time: 1529615545785 milliseconds
Total Time:          74.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        31.6 seconds, 42.6%
Fitness Testing:     33.6 seconds, 45.3%
Report:               8.8 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_cos} {:instruction float_min} {:instruction print_integer} {:instruction -76} {:instruction integer_dec} {:instruction float_min} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction -17} {:instruction in2} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (integer_max float_yankdup float_mod float_cos float_min print_integer -76 integer_dec float_min integer_stackdepth float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_dec in1 float_inc float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_fromfloat integer_min -17 in2 integer_inc -17 in2 integer_add float_flush tagged_408 integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3223.820538499995
Median total errors in population: 286.7425
Error averages by case: (121.40080110000122 11.305 116.85910109999773 11.362 103.71462870000192 11.093 114.83701950000068 11.212 117.07214850000109 11.326 118.49419089999907 11.109 120.27056930000266 11.277 109.90209009999842 11.193 122.1174576000028 11.323 120.78750830000128 11.277 119.38842430000174 11.227 119.61778900000004 12.029 107.50456880000178 11.279 119.74253170000146 11.287 117.83384789999961 11.303 113.58204639999879 11.206 111.91725429999993 11.117 123.21201129999793 11.464 124.17257099999729 11.121 124.031274600002 11.421 120.29158419999895 11.247 123.13899029999874 11.357 111.74038029999873 11.119 118.52413729999911 11.153 121.42161200000135 11.439)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 9 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 9 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 8 0.2549 2 0.0731 3 0.2039 10 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 55.88
Average program size in population (points): 56.88
Average percent parens in population: 0.018
Minimum age in population: 32.26436328887939
Maximum age in population: 37.25089025497437
Average age in population: 35.24074380135536
Median age in population: 35.29269868135452
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.831
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.831
Total error diversity:				 0.063
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 34979645
--- Timings ---
Current time: 1529615548595 milliseconds
Total Time:          76.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.8 seconds, 42.6%
Fitness Testing:     34.8 seconds, 45.3%
Report:               9.2 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_pop} {:instruction float_sin} {:instruction in1} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction integer_dec} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction -17})
Best program: (float_dup_items float_cos float_min float_yankdup float_mod integer_pop integer_dup integer_stackdepth float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_pop float_sin in1 integer_dec integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_pop in1 integer_sub float_cos float_yank float_sub float_yank integer_dec in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_fromfloat integer_min -17)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2890.766234799995
Median total errors in population: 286.7425
Error averages by case: (107.25511770000014 11.284 101.68728889999865 11.365 94.43045520000202 11.111 101.4449501999999 11.182 101.83488320000123 11.307 106.82021640000002 11.119 108.20843260000169 11.277 96.55295809999924 11.183 107.3282865000018 11.286 106.55781660000022 11.263 106.46754450000071 11.211 104.75165280000004 12.025 100.08364940000186 11.294 105.90284920000036 11.27 105.45053859999962 11.306 99.88689509999885 11.199 97.83101489999991 11.129 108.34354729999896 11.42 109.85933449999824 11.102 109.708117600001 11.398 106.75371720000001 11.22 108.34542529999979 11.324 98.33392019999881 11.124 107.15769419999997 11.15 107.82292860000129 11.398)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 9 0.3483 3 0.4578 2 0.199 2 0.2168 1 0.2137 9 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 8 0.2456 2 0.1836 2 0.2939 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 55.584
Average program size in population (points): 56.584
Average percent parens in population: 0.018
Minimum age in population: 33.57245278358459
Maximum age in population: 38.74868166446686
Average age in population: 36.73991903394461
Median age in population: 36.79017913341522
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.845
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.845
Total error diversity:				 0.067
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 36374095
--- Timings ---
Current time: 1529615551433 milliseconds
Total Time:          79.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.1 seconds, 42.7%
Fitness Testing:     36.1 seconds, 45.1%
Report:               9.6 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction print_float} {:instruction float_yankdup} {:instruction -75} {:instruction integer_dec} {:instruction float_sin} {:instruction float_pop} {:instruction integer_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_rot} {:instruction float_mult} {:instruction integer_div} {:instruction float_tan} {:instruction integer_flush} {:instruction float_tan} {:instruction float_dup} {:instruction float_rot} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2})
Best program: (integer_flush float_frominteger float_flush integer_yankdup integer_flush print_float float_yankdup -75 integer_dec float_sin float_pop integer_mult integer_rot float_dec float_inc float_frominteger float_rot float_mult integer_div float_tan integer_flush float_tan float_dup float_rot float_cos float_yank float_sub float_yank float_add in1 tagged_70 integer_min integer_fromfloat integer_stackdepth integer_dup_items integer_yank in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3145.8527727999954
Median total errors in population: 286.7425
Error averages by case: (116.6917152000009 11.248 113.447157199998 11.323 107.83707770000186 11.07 111.22522300000053 11.204 112.58560050000105 11.261 118.60050239999927 11.076 118.12226900000232 11.23 107.1564797999985 11.147 116.81636630000243 11.294 116.11403530000102 11.225 115.66713920000129 11.178 116.28659110000004 12.034 108.08352320000168 11.235 115.47664060000115 11.231 116.85455939999962 11.259 110.39609579999879 11.2 108.2881585999999 11.081 117.72265869999828 11.393 119.63577979999761 11.106 119.09101810000188 11.355 116.07520049999924 11.192 117.87724599999896 11.285 109.41445269999875 11.087 118.12842169999918 11.129 117.05386100000136 11.362)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 3 0.4578 2 0.199 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 8 0.2456 2 0.1836 2 0.2939 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 55.413
Average program size in population (points): 56.413
Average percent parens in population: 0.018
Minimum age in population: 34.57245278358459
Maximum age in population: 40.12663018703461
Average age in population: 38.19414007115364
Median age in population: 38.24644170701504
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.843
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.061
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 37763520
--- Timings ---
Current time: 1529615554297 milliseconds
Total Time:          82.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.4 seconds, 42.8%
Fitness Testing:     37.3 seconds, 45.1%
Report:               9.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction integer_add} {:instruction float_tan} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_yank} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction tagged_76} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_yankdup} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction tag_integer_498} {:instruction in1} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank})
Best program: (integer_sub integer_add float_tan integer_dec integer_dup integer_stackdepth float_add integer_pop float_pop integer_flush integer_swap integer_flush float_yank integer_inc float_sub print_float tagged_76 float_yank tag_float_575 integer_min float_mult integer_div integer_min integer_dec float_dec float_dup float_dup_times float_cos float_yank float_sub float_dup_times float_inc float_yank float_sub float_yank float_add in1 integer_dec float_dup_items integer_fromfloat in1 float_yankdup float_cos float_yank float_sub float_yank tag_integer_498 in1 integer_add float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2863.7373879999946
Median total errors in population: 286.7425
Error averages by case: (104.79084840000051 11.265 101.9831781999986 11.358 95.53626560000168 11.092 101.26450060000016 11.198 102.65302990000092 11.3 105.13583419999986 11.107 107.44346200000155 11.255 99.75357299999885 11.167 103.8370582000017 11.308 104.93179140000053 11.241 103.51970600000064 11.188 103.87849070000006 12.029 92.12316520000138 11.268 103.1063528000006 11.255 104.7679119999996 11.289 100.28568009999881 11.199 100.92098009999991 11.108 107.39069349999899 11.434 108.16346669999841 11.1 108.22438080000119 11.39 104.76988119999973 11.205 107.25807409999952 11.301 99.87101889999875 11.096 105.01763559999985 11.15 105.41640880000132 11.391)
Error minima by case: (0.3901 2 0.2373 2 0.1168 1 0.0298 10 0.6517 2 0.4578 2 0.199 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 8 0.2456 2 0.1836 2 0.2939 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 55.372
Average program size in population (points): 56.372
Average percent parens in population: 0.018
Minimum age in population: 36.94011497497559
Maximum age in population: 41.55199767649174
Average age in population: 39.68955419097841
Median age in population: 39.7498927116394
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.853
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.853
Total error diversity:				 0.06
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 39151684
--- Timings ---
Current time: 1529615557230 milliseconds
Total Time:          85.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.6 seconds, 42.8%
Fitness Testing:     38.6 seconds, 45.1%
Report:              10.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_rot} {:instruction integer_max} {:instruction in2} {:instruction float_yank} {:instruction float_yank} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction in2} {:instruction float_yank} {:instruction float_max} {:instruction print_float} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction print_integer} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_yank} {:instruction float_flush} {:instruction float_div} {:instruction float_dup_times} {:instruction 71} {:instruction float_frominteger} {:instruction integer_inc} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap float_dup_items float_dup_items float_cos float_rot integer_max in2 float_yank float_yank print_float float_cos float_yank tag_float_575 in2 float_yank float_max print_float float_dup integer_fromfloat float_frominteger integer_max integer_min float_mult integer_div integer_min integer_dec float_dec float_dup float_dup_times float_cos print_integer float_sub float_yank float_add in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_div in1 print_integer float_add integer_mult float_yank integer_yank float_flush float_div float_dup_times 71 float_frominteger integer_inc integer_add integer_div in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2835.585496299995
Median total errors in population: 286.7425
Error averages by case: (103.76284840000078 11.276 101.63505069999815 11.334 92.6571488000016 11.066 99.21756130000054 11.192 101.70380660000089 11.278 104.64783419999945 11.081 106.09786500000205 11.244 97.02531069999856 11.15 105.4399276000022 11.287 103.98879140000089 11.248 103.6492955000011 11.195 104.47056640000004 12.025 89.22305300000153 11.248 103.24285320000098 11.265 101.46439999999961 11.264 99.46899689999871 11.192 97.00647349999991 11.099 106.2378396999985 11.424 107.82953839999783 11.107 107.88266160000174 11.387 103.00433039999938 11.214 105.31742899999908 11.308 99.34660179999864 11.094 104.36841239999947 11.121 105.40489980000146 11.393)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 54.928
Average program size in population (points): 55.928
Average percent parens in population: 0.019
Minimum age in population: 38.59653306007385
Maximum age in population: 43.0005150437355
Average age in population: 41.13702960345149
Median age in population: 41.17197671160102
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.861
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.861
Total error diversity:				 0.056
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 40528859
--- Timings ---
Current time: 1529615560095 milliseconds
Total Time:          88.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.9 seconds, 42.9%
Fitness Testing:     39.8 seconds, 45.1%
Report:              10.6 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_swap} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_dup} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_swap} {:instruction -17} {:instruction in2} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (float_max float_yankdup float_dup_items integer_swap integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_dup float_sin float_dup_times integer_dec integer_fromfloat integer_min integer_dec float_dec float_dup float_dup_times float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer integer_inc integer_yank integer_swap -17 in2 integer_inc -17 in2 integer_add float_flush integer_mult integer_fromfloat float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3083.0418219999956
Median total errors in population: 286.7425
Error averages by case: (117.22260040000147 11.28 108.32240569999752 11.376 99.84032780000187 11.096 109.36346020000109 11.2 107.73958470000109 11.313 115.18244339999897 11.116 116.82219460000282 11.265 101.70923389999831 11.181 114.87125700000274 11.303 116.54231230000154 11.259 112.88461950000172 11.22 114.51849560000005 12.031 107.78159440000181 11.285 113.41175520000154 11.277 112.1159604999996 11.286 105.70678219999881 11.194 105.30457209999992 11.12 118.42832849999773 11.444 117.91586819999715 11.102 119.78035760000229 11.413 112.42879869999882 11.232 118.4265155999985 11.332 103.08050889999873 11.122 115.25093279999902 11.149 116.37791220000142 11.417)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 8 0.3483 5 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 4 0.1965 5 0.0288 10 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 3 0.4982 6)
Average genome size in population (length): 55.14
Average program size in population (points): 56.14
Average percent parens in population: 0.019
Minimum age in population: 39.86929023265839
Maximum age in population: 44.74501117691398
Average age in population: 42.56515202989429
Median age in population: 42.62113465741277
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.849
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.849
Total error diversity:				 0.056
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 41910796
--- Timings ---
Current time: 1529615562856 milliseconds
Total Time:          91.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.1 seconds, 42.9%
Fitness Testing:     41.1 seconds, 45.0%
Report:              11.0 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 12288.045700000002
Test mean error for best: 6.14402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_add} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction tag_integer_593} {:instruction integer_max} {:instruction integer_pop} {:instruction float_sin} {:instruction in1} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction -11.01634184093676} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank})
Best program: (float_dup_items float_cos float_min float_yankdup float_mod integer_pop integer_dup integer_add float_add integer_pop float_pop float_max integer_inc float_yank tag_integer_593 integer_max integer_pop float_sin in1 float_add integer_fromfloat float_swap integer_rot float_inc integer_dup_items float_dec float_pop in1 integer_sub float_cos float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items in1 integer_mod float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div -11.01634184093676 print_integer float_add integer_yank)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2993.595734699995
Median total errors in population: 286.7425
Error averages by case: (110.98753140000053 11.311 108.78812889999817 11.403 90.77679700000189 11.108 107.37645410000015 11.209 108.30392080000114 11.355 109.23958089999998 11.133 111.9324619000019 11.293 103.577886999999 11.207 110.13577390000195 11.307 110.08656520000041 11.295 109.0435984000008 11.236 109.03657950000003 12.029 103.2417239000018 11.322 109.0080927000006 11.302 112.66142399999961 11.332 106.49717139999872 11.213 105.05400399999994 11.145 112.61483569999864 11.485 112.71935859999795 11.106 114.19624270000136 11.451 109.44797009999981 11.244 112.44905999999938 11.374 105.47770799999866 11.128 107.24808190000005 11.189 111.06978270000141 11.448)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.4578 4 0.199 5 0.2168 3 0.7863 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 55.226
Average program size in population (points): 56.226
Average percent parens in population: 0.019
Minimum age in population: 41.57236465811729
Maximum age in population: 46.15712469443679
Average age in population: 44.04489872104861
Median age in population: 44.07561873923987
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.86
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.86
Total error diversity:				 0.046
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 43295259
--- Timings ---
Current time: 1529615565676 milliseconds
Total Time:          94.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.4 seconds, 42.9%
Fitness Testing:     42.3 seconds, 44.9%
Report:              11.3 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction in2} {:instruction 20.604599049352572} {:instruction integer_div} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_sub} {:instruction print_float} {:instruction float_cos} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_max} {:instruction float_max} {:instruction float_sub} {:instruction tagged_319} {:instruction float_sub} {:instruction in1} {:instruction tagged_70} {:instruction integer_dec} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_add} {:instruction float_dec} {:instruction in1} {:instruction print_integer})
Best program: (integer_flush integer_fromfloat integer_inc integer_flush integer_swap float_stackdepth in2 20.604599049352572 integer_div integer_shove integer_dec float_dec float_dup float_dup_times integer_flush integer_fromfloat integer_inc integer_flush integer_swap float_stackdepth float_sub integer_swap float_dup_times float_sub print_float float_cos integer_dec float_dec float_dup float_dup_times float_sub float_dup_items float_cos integer_max float_max float_sub tagged_319 float_sub in1 tagged_70 integer_dec integer_stackdepth integer_dup_items float_frominteger tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_add float_dec in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3620.5214831999956
Median total errors in population: 286.7425
Error averages by case: (137.04692560000086 11.361 132.96251909999756 11.434 114.18022880000208 11.134 131.20049070000078 11.223 132.98048040000128 11.392 133.9520259999993 11.164 135.9920390000026 11.336 128.12549769999814 11.235 136.9170564000028 11.357 136.48440480000116 11.337 136.1612040000015 11.295 135.24993290000003 12.04 124.5252480000019 11.349 135.84534320000114 11.344 132.1517743999997 11.36 130.91276799999878 11.24 129.17804629999992 11.176 138.36171979999853 11.531 139.04864479999736 11.153 139.8042752000018 11.506 136.5298383999993 11.315 137.57412769999917 11.427 129.69211879999872 11.176 134.36031399999925 11.215 137.66345920000134 11.521)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 9 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 9 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 10 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 54.1
Average program size in population (points): 55.1
Average percent parens in population: 0.019
Minimum age in population: 42.93818840384483
Maximum age in population: 47.61130755487829
Average age in population: 45.50034379808046
Median age in population: 45.53730774717405
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.84
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.84
Total error diversity:				 0.059
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 44651284
--- Timings ---
Current time: 1529615568347 milliseconds
Total Time:          96.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.5 seconds, 42.9%
Fitness Testing:     43.5 seconds, 45.0%
Report:              11.6 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction integer_sub} {:instruction tagged_488} {:instruction float_shove} {:instruction float_div} {:instruction float_max} {:instruction integer_flush} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction float_tan} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_sin} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_add} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_add} {:instruction float_flush} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction print_float})
Best program: (-27 integer_sub tagged_488 float_shove float_div float_max integer_flush integer_max float_dup_items float_rot float_tan float_dec float_inc in1 float_inc float_cos float_yank float_sub float_sin float_add in1 tagged_70 integer_dup_times integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add float_add in1 print_integer float_add integer_yank integer_mod float_add in1 tagged_70 integer_add float_flush in2 integer_add float_flush tagged_408 integer_fromfloat float_mult print_float)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3394.0250677999957
Median total errors in population: 286.7425
Error averages by case: (127.32638700000182 11.322 124.87641329999678 11.424 112.53080290000213 11.11 123.40117160000158 11.223 124.73517050000123 11.365 127.04147989999852 11.141 127.2524241000034 11.297 118.68603319999761 11.211 126.39142350000361 11.337 125.61385020000186 11.296 125.0113655000024 11.244 126.68833600000004 12.046 117.30949530000198 11.313 125.74534640000208 11.3 128.00453409999963 11.328 122.2413673999987 11.22 121.08424909999992 11.14 128.65859699999712 11.486 128.14549939999654 11.118 128.5123280000027 11.454 124.4650023999984 11.252 127.79160089999812 11.367 121.41692959999864 11.137 124.22483009999848 11.188 124.09543040000145 11.456)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 53.781
Average program size in population (points): 54.781
Average percent parens in population: 0.019
Minimum age in population: 44.31044596806169
Maximum age in population: 48.88588835950941
Average age in population: 46.94146146590961
Median age in population: 46.96883091377094
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.846
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.846
Total error diversity:				 0.058
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 45998459
--- Timings ---
Current time: 1529615571156 milliseconds
Total Time:          99.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.7 seconds, 43.0%
Fitness Testing:     44.7 seconds, 44.9%
Report:              11.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_inc} {:instruction in2} {:instruction integer_dec} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_yankdup} {:instruction tag_integer_472} {:instruction float_yank} {:instruction in2} {:instruction float_stackdepth} {:instruction in2} {:instruction float_yankdup} {:instruction integer_max} {:instruction integer_min} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (-27 float_yankdup integer_flush float_inc in2 integer_dec float_frominteger float_flush integer_yankdup tag_integer_472 float_yank in2 float_stackdepth in2 float_yankdup integer_max integer_min float_dup float_dup_times float_cos float_dup float_dup_times integer_dec float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2744.6313928999953
Median total errors in population: 286.7425
Error averages by case: (100.36748009999981 11.237 97.46423579999882 11.304 90.29913440000196 11.066 98.59419759999979 11.186 97.53474170000104 11.253 103.08042500000046 11.089 101.77828300000138 11.225 90.9694793999991 11.136 98.44508100000152 11.27 99.92771579999992 11.209 99.00508150000033 11.17 98.08614250000005 12.028 94.13139940000187 11.241 98.91285640000011 11.222 101.84167839999961 11.25 96.78475839999868 11.176 92.67507749999993 11.072 102.19278999999932 11.38 102.44059689999864 11.102 103.46541600000057 11.347 99.41641240000027 11.181 102.17842900000022 11.278 93.05356749999864 11.08 99.6390152000004 11.119 101.38639800000144 11.34)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 9 0.3483 2 0.5422 3 0.801 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.5004 3 0.6976 3 0.6363 9 0.2549 2 0.0731 3 0.2039 10 0.7544 3 0.8164 2 0.7061 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 53.683
Average program size in population (points): 54.683
Average percent parens in population: 0.019
Minimum age in population: 45.54165050107986
Maximum age in population: 50.39638827205636
Average age in population: 48.38734498983761
Median age in population: 48.42078246106394
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.842
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.842
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 47343272
--- Timings ---
Current time: 1529615574005 milliseconds
Total Time:         102.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.0 seconds, 42.9%
Fitness Testing:     46.0 seconds, 44.9%
Report:              12.3 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_max} {:instruction -75.86980323258065} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_inc} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_div} {:instruction float_yank} {:instruction integer_yank} {:instruction float_flush} {:instruction float_div} {:instruction float_dup_times} {:instruction 71} {:instruction float_add} {:instruction integer_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_pop} {:instruction integer_yankdup})
Best program: (float_div float_max float_rot float_dec float_dec integer_yank integer_shove float_max -75.86980323258065 integer_dec integer_yankdup integer_dup_times integer_min float_shove float_frominteger float_dup_items float_stackdepth integer_sub float_dup_times integer_rot float_inc float_sub float_yank float_add in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_div in1 print_integer float_add integer_div float_yank integer_yank float_flush float_div float_dup_times 71 float_add integer_inc integer_add integer_div float_pop integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3214.3444617999953
Median total errors in population: 286.7425
Error averages by case: (121.63494740000108 11.315 114.9925391999977 11.391 101.0962977000023 11.084 113.26679680000034 11.214 114.77747270000144 11.337 118.61809469999932 11.111 120.05280700000267 11.286 110.52251439999868 11.179 121.1158819000029 11.316 120.91232920000112 11.287 119.51193750000176 11.234 120.37627080000004 12.033 108.45640080000209 11.284 119.46684920000128 11.304 117.26822419999962 11.309 111.62141779999872 11.214 112.02338219999992 11.127 123.21503559999788 11.485 123.81017759999723 11.115 124.84985440000186 11.439 119.89934999999915 11.248 123.19813139999894 11.352 111.69890629999867 11.124 117.46791799999927 11.157 122.09492500000142 11.451)
Error minima by case: (0.3901 4 0.2373 5 0.1168 3 0.0298 10 0.6517 5 0.4578 4 0.199 4 0.2168 3 0.7863 10 0.4958 4 0.1965 3 0.0288 9 0.1122 2 0.4996 4 0.3024 3 0.3637 9 0.2549 3 0.0731 5 0.2039 9 0.2456 5 0.1836 3 0.2939 5 0.6075 3 0.3884 4 0.4982 5)
Average genome size in population (length): 53.271
Average program size in population (points): 54.271
Average percent parens in population: 0.019
Minimum age in population: 46.54165050107986
Maximum age in population: 51.89143963775132
Average age in population: 49.83744627567392
Median age in population: 49.89170328294858
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.864
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.864
Total error diversity:				 0.06
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 48677922
--- Timings ---
Current time: 1529615576713 milliseconds
Total Time:         105.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.2 seconds, 43.0%
Fitness Testing:     47.2 seconds, 44.9%
Report:              12.6 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_max} {:instruction in2} {:instruction float_yank} {:instruction float_max} {:instruction print_float} {:instruction float_dup} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_cos} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_rot} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction integer_max} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_169} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_add} {:instruction float_flush})
Best program: (integer_fromfloat integer_inc float_inc integer_max float_dup_items float_rot integer_max in2 float_yank float_max print_float float_dup integer_min float_frominteger integer_max integer_min float_cos float_dup float_dup_times float_rot float_dec float_dup float_dup_times float_cos integer_max float_sub float_yank float_add in1 tagged_169 integer_dec integer_fromfloat integer_stackdepth integer_dup_items integer_fromfloat integer_stackdepth integer_flush float_frominteger float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc float_add float_stackdepth integer_add float_flush)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2760.773500399995
Median total errors in population: 286.7425
Error averages by case: (100.67835930000037 11.267 99.29691739999856 11.352 90.1834848000019 11.095 97.66434689999983 11.194 99.00516410000124 11.308 101.75922039999996 11.116 102.66528800000177 11.253 96.37772509999921 11.179 101.22379880000176 11.282 99.95675780000028 11.245 99.61068850000075 11.204 100.12925760000005 12.026 91.48674580000176 11.262 99.15685560000044 11.26 100.13925919999963 11.292 96.35500609999882 11.191 97.70441679999992 11.131 102.22749759999861 11.422 102.91761639999807 11.1 102.79918800000127 11.389 99.03059599999996 11.218 102.27384119999941 11.322 96.89517539999875 11.118 99.86889919999993 11.153 99.59039440000132 11.398)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.3483 5 0.5422 4 0.199 5 0.2168 3 0.2137 9 0.4958 4 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 9 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 3 0.4982 6)
Average genome size in population (length): 52.281
Average program size in population (points): 53.281
Average percent parens in population: 0.020
Minimum age in population: 48.65267770271748
Maximum age in population: 53.13457099278457
Average age in population: 51.29021613716934
Median age in population: 51.34250576619525
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.049
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 49987188
--- Timings ---
Current time: 1529615579451 milliseconds
Total Time:         107.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.4 seconds, 43.1%
Fitness Testing:     48.4 seconds, 44.9%
Report:              12.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction integer_div} {:instruction integer_min} {:instruction tag_integer_528} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction in2} {:instruction float_max} {:instruction float_min} {:instruction integer_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction integer_pop} {:instruction float_cos} {:instruction float_yank} {:instruction tagged_70} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_pop} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction print_integer} {:instruction float_add} {:instruction float_dup_items} {:instruction integer_swap} {:instruction integer_inc})
Best program: (float_div integer_div integer_min tag_integer_528 float_dec float_dup float_dup_times in1 float_stackdepth in2 float_max float_min integer_inc float_min integer_sub integer_dec float_dec float_dup integer_pop float_cos float_yank tagged_70 integer_fromfloat float_sub float_inc in1 float_inc float_cos float_yank float_sub float_pop float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer in1 print_integer float_add print_integer float_add float_dup_items integer_swap integer_inc)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3139.920754499995
Median total errors in population: 286.7425
Error averages by case: (117.15014370000083 11.322 112.51595699999812 11.377 101.74394590000176 11.121 110.46329790000038 11.214 112.65777450000108 11.35 115.87681929999958 11.145 115.24909780000202 11.307 109.88005509999854 11.206 117.68588960000228 11.317 116.65383990000089 11.296 116.45273320000118 11.266 116.02170950000004 12.032 109.38949820000161 11.301 116.02897390000098 11.311 114.49156039999963 11.315 110.17091059999879 11.21 110.8480850999999 11.153 117.86058419999844 11.471 119.07774679999785 11.15 120.35886720000165 11.442 115.88309839999931 11.284 118.86630349999912 11.386 109.64145329999873 11.147 114.98649649999949 11.189 117.19291300000135 11.461)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 52.183
Average program size in population (points): 53.183
Average percent parens in population: 0.020
Minimum age in population: 50.16225011536153
Maximum age in population: 54.69549280556384
Average age in population: 52.72276018664386
Median age in population: 52.7820788226818
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.858
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.858
Total error diversity:				 0.054
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 51294463
--- Timings ---
Current time: 1529615582489 milliseconds
Total Time:         110.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.7 seconds, 43.0%
Fitness Testing:     49.8 seconds, 44.9%
Report:              13.2 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction integer_inc} {:instruction float_div} {:instruction -27} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_min} {:instruction float_flush} {:instruction integer_div} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_dec} {:instruction float_min} {:instruction integer_inc} {:instruction float_min} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_726} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_9974} {:instruction float_dup_items} {:instruction tag_float_575} {:instruction integer_dec} {:instruction float_dup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_flush} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction -17} {:instruction in2} {:instruction integer_add})
Best program: (-27 integer_inc float_div -27 integer_max integer_min float_mult integer_min float_flush integer_div integer_shove integer_dec float_dec float_min integer_inc float_min float_yankdup float_dup_items integer_dec integer_dup integer_stackdepth float_yank float_add in1 tagged_726 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div float_yank float_add in1 tagged_9974 float_dup_items tag_float_575 integer_dec float_dup float_flush float_cos integer_add float_dup_times float_cos float_yank float_sub float_yank float_flush in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer -17 in2 integer_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2896.492505599995
Median total errors in population: 286.7425
Error averages by case: (106.69901870000086 11.317 103.39690939999801 11.368 100.04635550000188 11.137 100.79960190000055 11.206 103.59634940000113 11.328 106.23622929999942 11.146 107.25445010000219 11.307 98.63287279999842 11.207 107.27950840000238 11.305 106.28278300000096 11.295 106.01350950000132 11.256 107.30999840000004 12.04 96.51386530000158 11.299 105.46385320000108 11.309 101.66810059999963 11.316 100.23157979999881 11.221 99.99343939999993 11.164 108.13591279999838 11.458 110.06218909999775 11.134 109.62539840000167 11.434 106.30888119999928 11.265 108.31919239999908 11.379 99.83904839999872 11.164 106.49504619999936 11.179 107.61741240000134 11.437)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.5422 4 0.801 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 52.491
Average program size in population (points): 53.491
Average percent parens in population: 0.020
Minimum age in population: 51.42029381066095
Maximum age in population: 56.10872081555135
Average age in population: 54.189784357212
Median age in population: 54.21853762604587
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.833
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.833
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 52609413
--- Timings ---
Current time: 1529615585535 milliseconds
Total Time:         113.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.9 seconds, 42.9%
Fitness Testing:     51.2 seconds, 45.0%
Report:              13.7 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction float_swap} {:instruction integer_sub} {:instruction integer_add} {:instruction float_tan} {:instruction integer_min} {:instruction integer_inc} {:instruction float_yank} {:instruction -76} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_add} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_yank} {:instruction float_add} {:instruction float_dup} {:instruction tagged_141} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_yank} {:instruction float_cos} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_yank} {:instruction tag_float_839} {:instruction print_integer} {:instruction integer_swap})
Best program: (integer_shove float_swap integer_sub integer_add float_tan integer_min integer_inc float_yank -76 integer_dec integer_dup integer_add float_add integer_pop float_pop integer_dup_times float_inc float_yank float_add float_dup tagged_141 integer_shove integer_fromfloat in2 float_yank float_cos in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_yank tag_float_839 print_integer integer_swap)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3452.058368099995
Median total errors in population: 286.7425
Error averages by case: (127.54025370000058 11.375 129.11657919999809 11.466 118.76217700000198 11.154 125.6132597000003 11.24 128.5492835000012 11.428 129.39458879999972 11.183 128.88548600000198 11.36 124.49586959999863 11.257 126.61627900000225 11.367 126.86436740000063 11.348 125.48442640000108 11.297 125.72313530000004 12.032 119.32029940000173 11.374 125.3968650000008 11.363 129.02939759999964 11.38 124.08616589999879 11.25 127.28159809999994 11.187 129.0385576999984 11.548 130.13627159999774 11.149 130.67317200000156 11.522 125.85773049999962 11.312 129.05129979999919 11.444 123.6365648999987 11.184 129.4679263999997 11.223 128.06481360000137 11.529)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 8 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 51.98
Average program size in population (points): 52.98
Average percent parens in population: 0.020
Minimum age in population: 52.92960783254239
Maximum age in population: 57.91387572977692
Average age in population: 55.70391242158382
Median age in population: 55.75471032153655
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.843
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.065
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 53911689
--- Timings ---
Current time: 1529615588100 milliseconds
Total Time:         116.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.0 seconds, 42.9%
Fitness Testing:     52.4 seconds, 44.9%
Report:              14.0 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_div} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_max} {:instruction -75.86980323258065} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction integer_mod} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_shove} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dec} {:instruction print_integer} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_pop} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction 49.901583551738725} {:instruction integer_yank} {:instruction integer_min} {:instruction float_add} {:instruction integer_yank})
Best program: (float_swap float_div float_max float_rot float_dec float_dec integer_yank integer_shove float_max -75.86980323258065 integer_dec integer_yankdup integer_dup_times integer_min float_shove integer_fromfloat float_dup_items integer_mod integer_max integer_min float_mult integer_fromfloat integer_min integer_dec integer_yank float_shove integer_dup_items float_frominteger in2 integer_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger integer_rot float_inc integer_dup_items float_dec print_integer in1 float_inc float_cos float_yank float_sub float_pop float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank 49.901583551738725 integer_yank integer_min float_add integer_yank)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2869.224906499995
Median total errors in population: 286.7425
Error averages by case: (103.53752960000074 11.291 103.59943429999788 11.382 98.66620000000168 11.093 101.72174720000052 11.228 104.17801300000112 11.346 106.83779839999933 11.124 106.14207900000221 11.271 101.5193015999985 11.186 104.2238673000024 11.335 102.7512368000008 11.268 101.98967100000112 11.217 104.52908480000004 12.054 92.57162380000163 11.286 101.82935680000095 11.27 104.45567839999963 11.304 101.56585429999889 11.215 102.58213549999992 11.127 105.13464379999832 11.458 108.32159689999773 11.126 107.5826968000017 11.42 102.38286159999939 11.237 106.01295949999901 11.359 102.25585249999877 11.123 108.66829639999929 11.166 103.84738720000131 11.432)
Error minima by case: (0.3901 4 0.2373 3 0.1168 3 0.0298 10 0.6517 2 0.4578 4 0.199 4 0.2168 2 0.7863 10 0.4958 3 0.1965 3 0.0288 9 0.1122 3 0.4996 3 0.3024 4 0.3637 10 0.2549 2 0.0731 4 0.2039 10 0.2456 4 0.1836 3 0.2939 4 0.6075 2 0.3884 4 0.4982 3)
Average genome size in population (length): 51.817
Average program size in population (points): 52.817
Average percent parens in population: 0.020
Minimum age in population: 54.23836449778173
Maximum age in population: 59.18869826095033
Average age in population: 57.11002719859738
Median age in population: 57.14359628404418
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.057
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 55208736
--- Timings ---
Current time: 1529615590971 milliseconds
Total Time:         119.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.4 seconds, 43.1%
Fitness Testing:     53.5 seconds, 44.8%
Report:              14.3 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction integer_flush} {:instruction float_dec} {:instruction in2} {:instruction float_yank} {:instruction float_max} {:instruction integer_flush} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_tan} {:instruction integer_swap} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction tagged_70} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_141} {:instruction float_cos} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction tag_float_839} {:instruction print_integer} {:instruction integer_swap})
Best program: (integer_fromfloat float_dup_items float_dup_items integer_flush float_dec in2 float_yank float_max integer_flush float_dup integer_fromfloat float_max integer_yank integer_add float_tan integer_swap integer_min float_mult integer_div integer_min integer_dec float_dec float_dup float_dup_times tagged_70 integer_fromfloat integer_fromfloat integer_stackdepth integer_shove integer_dec float_dec float_dup tagged_141 float_cos integer_mod float_yankdup float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div tag_float_839 print_integer integer_swap)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2540.011784099995
Median total errors in population: 286.7425
Error averages by case: (93.92917230000063 11.23 87.29308049999855 11.31 82.54336830000148 11.072 86.81960100000018 11.18 87.22395910000083 11.239 90.89468109999957 11.083 94.27453360000175 11.218 82.22506239999925 11.127 93.8246362000019 11.255 93.33040810000071 11.214 92.00514930000091 11.162 91.29418040000004 12.037 87.56251230000142 11.226 91.96405150000092 11.222 92.95718429999968 11.244 84.50976729999893 11.179 84.32168089999992 11.085 95.02446319999869 11.372 96.14032809999824 11.082 96.44451340000123 11.332 92.50781939999942 11.178 95.15767939999931 11.268 81.68709059999887 11.085 90.90767539999956 11.125 94.31418600000123 11.33)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 9 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 9 0.4958 3 0.1965 2 0.0288 9 0.1122 2 0.4996 3 0.3024 3 0.3637 10 0.2549 2 0.0731 3 0.2039 8 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 51.295
Average program size in population (points): 52.295
Average percent parens in population: 0.020
Minimum age in population: 55.93972963804845
Maximum age in population: 60.51249714701407
Average age in population: 58.5781165730116
Median age in population: 58.60750874278983
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.815
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.815
Total error diversity:				 0.049
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 56493186
--- Timings ---
Current time: 1529615593681 milliseconds
Total Time:         122.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.7 seconds, 43.1%
Fitness Testing:     54.7 seconds, 44.8%
Report:              14.7 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_pop} {:instruction float_pop} {:instruction float_cos} {:instruction float_yank} {:instruction in2} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_yank} {:instruction float_flush} {:instruction float_div})
Best program: (integer_flush integer_fromfloat integer_inc integer_flush integer_div integer_min integer_dec float_dec float_dup float_dup_times integer_pop float_pop float_cos float_yank in2 integer_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_dup_times float_yankdup float_yank integer_yank float_flush float_div)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3079.2044388999952
Median total errors in population: 286.7425
Error averages by case: (114.90828800000087 11.296 107.1123073999983 11.372 107.96496640000166 11.096 108.7868245000006 11.23 107.69966250000087 11.344 115.27279839999949 11.133 113.04247700000192 11.276 103.31535689999887 11.18 114.18928650000215 11.337 114.47130400000091 11.284 114.00452700000116 11.235 114.30462400000005 12.046 102.48107260000167 11.283 113.47435040000104 11.284 114.72649279999963 11.304 107.13397619999888 11.215 104.70394149999991 11.13 116.86740109999853 11.47 116.77633449999796 11.134 118.64060880000164 11.433 114.27879919999936 11.26 117.03424969999914 11.377 103.8166850999989 11.121 116.60968479999946 11.159 115.14741960000127 11.442)
Error minima by case: (0.3901 2 0.2373 3 0.1168 2 0.0298 10 0.3483 3 0.5422 2 0.801 2 0.2168 2 0.2137 10 0.4958 2 0.1965 1 0.0288 9 0.0 0 0.5004 2 0.6976 1 0.6363 9 0.2549 2 0.0731 3 0.2039 9 0.7544 3 0.8164 1 0.7061 3 0.3925 2 0.3884 2 0.4982 3)
Average genome size in population (length): 50.43
Average program size in population (points): 51.43
Average percent parens in population: 0.020
Minimum age in population: 57.58030809479897
Maximum age in population: 62.05915574898609
Average age in population: 60.00405735639202
Median age in population: 60.03997868406304
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.053
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 57755786
--- Timings ---
Current time: 1529615596336 milliseconds
Total Time:         124.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.9 seconds, 43.2%
Fitness Testing:     55.8 seconds, 44.7%
Report:              15.0 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_max} {:instruction integer_sub} {:instruction float_add} {:instruction integer_yank} {:instruction tagged_932} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_flush} {:instruction integer_pop} {:instruction 71} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yank} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_sub} {:instruction float_yank} {:instruction tag_float_575} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction float_swap} {:instruction float_shove} {:instruction float_mod} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_177} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction float_stackdepth} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_309} {:instruction float_frominteger} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction in2} {:instruction in2})
Best program: (float_dec float_max integer_sub float_add integer_yank tagged_932 integer_flush integer_swap float_flush integer_pop 71 float_inc integer_inc float_yank float_dup integer_fromfloat integer_inc float_sub float_yank tag_float_575 print_float float_cos float_yank tag_float_575 float_swap float_shove float_mod integer_dec float_dup integer_add float_cos float_yank float_sub float_yank float_add in1 tagged_177 float_dup_items integer_fromfloat integer_stackdepth float_sub float_yank float_add float_stackdepth tagged_70 float_dup_items integer_fromfloat integer_stackdepth tagged_309 float_frominteger float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer in2 in2)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2377.9029145999953
Median total errors in population: 286.7425
Error averages by case: (85.84086079999969 11.26 83.02869689999932 11.361 75.74670500000174 11.096 81.34006399999937 11.194 82.73362230000106 11.293 84.08042780000075 11.111 84.84636680000082 11.244 78.71282989999966 11.175 86.4047453000013 11.262 84.9630561999996 11.237 83.32456969999993 11.177 85.04241540000004 12.032 82.29133460000172 11.285 83.22073019999982 11.247 87.5811797999996 11.286 79.40481379999879 11.198 80.6455849999999 11.1 87.41579739999946 11.413 89.42272909999855 11.081 88.99361660000056 11.363 83.71433940000067 11.186 87.27085680000016 11.296 79.68813459999873 11.111 84.56293420000058 11.157 86.09250300000133 11.369)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 8 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 49.538
Average program size in population (points): 50.538
Average percent parens in population: 0.021
Minimum age in population: 58.58030809479897
Maximum age in population: 63.82138716031068
Average age in population: 61.43801839475851
Median age in population: 61.4683155394232
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.824
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.824
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 58996236
--- Timings ---
Current time: 1529615599001 milliseconds
Total Time:         127.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.1 seconds, 43.3%
Fitness Testing:     56.9 seconds, 44.7%
Report:              15.2 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_shove} {:instruction 73} {:instruction float_tan} {:instruction integer_sub} {:instruction float_cos} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_cos} {:instruction float_cos} {:instruction tag_float_575} {:instruction integer_flush} {:instruction in1} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_sin} {:instruction float_add} {:instruction in1} {:instruction integer_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_dup_items} {:instruction tagged_589} {:instruction in2} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_yank} {:instruction float_flush} {:instruction float_div} {:instruction float_dup_items} {:instruction 71} {:instruction float_frominteger})
Best program: (integer_flush float_shove 73 float_tan integer_sub float_cos integer_inc float_sub print_float float_cos float_cos tag_float_575 integer_flush in1 float_inc float_cos float_yank float_sub float_sin float_add in1 integer_dec float_dec float_shove integer_dup_items tagged_589 in2 integer_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add float_yank integer_swap integer_dup_times float_yankdup float_yank integer_yank float_flush float_div float_dup_items 71 float_frominteger)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2702.219305099995
Median total errors in population: 286.7425
Error averages by case: (98.55469990000034 11.286 93.86641819999919 11.366 90.98008320000173 11.083 93.2316972999994 11.212 94.08230470000105 11.321 99.79317180000001 11.127 98.19907400000147 11.269 90.7501495999997 11.159 98.22714130000156 11.304 97.9557242000003 11.262 97.68765350000058 11.216 97.42256650000004 12.052 93.99072620000165 11.276 97.21685960000032 11.27 99.12409759999962 11.286 93.31678479999884 11.211 91.69256849999991 11.116 100.35686309999902 11.433 101.4307227999985 11.124 102.87594240000111 11.412 98.01894359999993 11.227 101.24166559999962 11.338 89.49998629999877 11.117 100.28207319999996 11.159 100.39638720000134 11.399)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 9 0.3483 2 0.5422 3 0.199 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 2 0.5004 3 0.3024 3 0.3637 9 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.8164 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 48.948
Average program size in population (points): 49.948
Average percent parens in population: 0.021
Minimum age in population: 59.72019373336661
Maximum age in population: 65.0785973173331
Average age in population: 62.90588024384108
Median age in population: 62.91981146718001
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.783
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.783
Total error diversity:				 0.058
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.061
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 60221823
--- Timings ---
Current time: 1529615601708 milliseconds
Total Time:         130.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.3 seconds, 43.3%
Fitness Testing:     58.0 seconds, 44.6%
Report:              15.6 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_488} {:instruction float_shove} {:instruction float_div} {:instruction float_max} {:instruction float_mod} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_max} {:instruction in2} {:instruction integer_yank} {:instruction print_float} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_yankdup} {:instruction -77} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_max} {:instruction float_sin} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_pop} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_max} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_shove} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction in2} {:instruction integer_add} {:instruction integer_fromfloat})
Best program: (tagged_488 float_shove float_div float_max float_mod integer_max float_dup_items float_rot integer_max in2 integer_yank print_float float_dup integer_fromfloat integer_sub integer_pop float_yankdup -77 integer_dec integer_dup integer_max float_sin integer_mult float_dup_times integer_pop integer_yank integer_swap float_max integer_inc float_sub print_float float_shove float_yank tag_float_575 integer_add integer_div float_dup float_cos float_yank float_sub float_yank float_add in1 integer_add float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add float_stackdepth float_yankdup integer_inc float_rot in2 integer_add integer_fromfloat)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2425.1194778999948
Median total errors in population: 286.7425
Error averages by case: (88.53187020000014 11.263 84.1195523999991 11.352 72.33328740000154 11.06 84.13217159999984 11.197 83.88486410000085 11.299 86.87778600000016 11.102 88.22230460000114 11.228 81.01041969999929 11.166 87.36394400000134 11.271 87.83021160000021 11.235 86.21543950000029 11.187 87.55534400000005 12.03 81.8808541000014 11.259 86.00486120000038 11.241 89.01395459999962 11.269 83.16554619999883 11.19 81.14757089999992 11.089 89.21515549999938 11.42 89.21922809999882 11.087 91.71097760000077 11.378 86.61420920000003 11.198 90.10190219999997 11.301 81.43965359999872 11.098 87.1259932000001 11.147 88.95537640000131 11.38)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.6517 3 0.4578 2 0.199 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 10 0.2456 2 0.1836 2 0.2939 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 48.027
Average program size in population (points): 49.027
Average percent parens in population: 0.021
Minimum age in population: 61.30827054454494
Maximum age in population: 66.46993350212165
Average age in population: 64.3504894881647
Median age in population: 64.42704026687932
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.824
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.824
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 61424723
--- Timings ---
Current time: 1529615604596 milliseconds
Total Time:         133.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.6 seconds, 43.3%
Fitness Testing:     59.3 seconds, 44.6%
Report:              16.0 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_swap} {:instruction integer_max} {:instruction integer_div} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction tagged_406} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_flush} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_add} {:instruction integer_dup_items} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction -17} {:instruction in2} {:instruction integer_inc} {:instruction -17})
Best program: (float_div float_max integer_yankdup integer_swap float_tan integer_swap integer_max integer_div integer_shove integer_dec float_sin float_dup_times integer_dec tagged_406 integer_dec float_dec float_dup float_dup_times float_cos float_yank float_sub float_flush float_add in1 tagged_70 float_add integer_dup_items float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_fromfloat integer_min -17 in2 integer_inc -17)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2486.402989199995
Median total errors in population: 286.7425
Error averages by case: (90.76726029999963 11.23 87.04969709999953 11.336 79.6509739000015 11.034 86.32861969999938 11.209 87.04348930000084 11.279 89.39688090000068 11.068 87.91902230000065 11.198 81.06513289999997 11.127 91.01601250000094 11.289 90.08270739999968 11.209 89.63804649999986 11.151 88.81937300000004 12.042 81.63883730000127 11.207 89.23786039999982 11.215 88.76961389999963 11.226 85.37564999999888 11.187 83.56232329999993 11.078 92.51744789999968 11.386 94.95920859999899 11.088 94.32874960000053 11.35 89.99857640000056 11.163 92.56460830000023 11.277 82.74685239999886 11.063 89.55016710000065 11.116 91.49887820000126 11.349)
Error minima by case: (0.3901 2 0.2373 2 0.1168 1 0.0298 10 0.6517 2 0.4578 2 0.199 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 10 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 9 0.2456 2 0.1836 2 0.2939 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 47.471
Average program size in population (points): 48.471
Average percent parens in population: 0.022
Minimum age in population: 62.30827054454494
Maximum age in population: 68.11981614607475
Average age in population: 65.81116204189776
Median age in population: 65.84245170118484
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.839
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.839
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 62613676
--- Timings ---
Current time: 1529615607179 milliseconds
Total Time:         135.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.8 seconds, 43.3%
Fitness Testing:     60.4 seconds, 44.5%
Report:              16.3 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_dup} {:instruction float_sub} {:instruction in2} {:instruction float_swap} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_min} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction in1} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction float_sub} {:instruction integer_add} {:instruction float_tan} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction float_cos} {:instruction float_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_yank} {:instruction float_sub} {:instruction float_mult} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap})
Best program: (float_div integer_fromfloat integer_inc integer_max integer_dec integer_dup float_sub in2 float_swap integer_yank integer_swap float_min integer_inc float_sub print_float float_cos float_yank tag_float_575 in1 integer_dup_items float_frominteger float_sub integer_add float_tan float_sub float_yank float_add in1 float_cos float_yank float_dec float_sub float_dup_times float_mod float_yank float_sub float_mult float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer integer_inc integer_swap)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2634.312985899995
Median total errors in population: 286.7425
Error averages by case: (97.1355296000008 11.277 90.6122264999981 11.351 86.86699510000203 11.109 89.07663149999976 11.194 90.79992860000121 11.301 96.38746579999955 11.125 97.58117600000219 11.259 85.52564899999933 11.167 97.15122620000237 11.283 96.51023680000077 11.258 96.36788500000117 11.21 95.76325770000004 12.039 90.94119840000188 11.268 95.92235600000089 11.259 97.43675879999962 11.289 88.4063223999988 11.203 87.04522159999992 11.123 98.56349759999837 11.42 99.33220859999773 11.112 99.86292480000172 11.391 96.7925959999995 11.213 98.59084119999915 11.325 85.48588599999876 11.119 96.4915722999995 11.157 97.83339440000134 11.378)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.6517 2 0.5422 3 0.801 3 0.0076 2 0.7863 10 0.4958 3 0.1965 2 0.0288 9 0.1122 2 0.5004 3 0.6976 3 0.6363 10 0.2549 2 0.0731 3 0.2039 9 0.7544 3 0.8164 2 0.7061 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 47.631
Average program size in population (points): 48.631
Average percent parens in population: 0.021
Minimum age in population: 64.47786865370756
Maximum age in population: 69.15673795495894
Average age in population: 67.27188885322872
Median age in population: 67.3366758132551
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.808
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.808
Total error diversity:				 0.049
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 63806608
--- Timings ---
Current time: 1529615609722 milliseconds
Total Time:         138.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.9 seconds, 43.4%
Fitness Testing:     61.4 seconds, 44.5%
Report:              16.6 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction print_integer} {:instruction print_float} {:instruction float_cos} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction float_add} {:instruction float_div} {:instruction integer_fromfloat} {:instruction float_div} {:instruction float_max} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_tan} {:instruction float_mult} {:instruction integer_max} {:instruction integer_max} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_swap} {:instruction in2} {:instruction integer_inc} {:instruction float_min} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction integer_add} {:instruction tagged_94} {:instruction in1} {:instruction print_integer})
Best program: (float_div float_max print_integer print_float float_cos integer_max integer_min float_mult integer_fromfloat float_mult float_add float_div integer_fromfloat float_div float_max integer_sub integer_rot float_tan float_mult integer_max integer_max float_frominteger integer_yank integer_swap in2 integer_inc float_min float_dup_times integer_dec float_yank float_sub float_yank float_add in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div float_mult integer_div integer_min integer_dec float_dec float_dup in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 integer_add tagged_94 in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2139.592645699995
Median total errors in population: 286.7425
Error averages by case: (76.67394149999956 11.199 72.3680196 11.272 66.16900320000138 11.041 71.5234517999991 11.168 72.75895240000068 11.227 75.49243780000089 11.075 74.63490500000033 11.183 68.31010680000009 11.113 76.62581520000072 11.229 76.17065699999962 11.175 75.86722549999942 11.137 77.11900640000005 12.028 69.10943860000135 11.185 75.69286199999964 11.183 76.79272319999961 11.207 71.03263589999884 11.162 70.62985509999993 11.069 77.71047130000007 11.316 79.36512169999946 11.08 78.81427600000018 11.285 76.29447480000061 11.141 77.6522571000004 11.24 69.6316419999988 11.073 75.91550200000086 11.11 77.0518638000013 11.288)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 3 0.4578 2 0.199 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.5004 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.8164 2 0.7061 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 47.481
Average program size in population (points): 48.481
Average percent parens in population: 0.022
Minimum age in population: 65.47786865370756
Maximum age in population: 70.80709108293264
Average age in population: 68.71504023599043
Median age in population: 68.74074753812505
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 64996358
--- Timings ---
Current time: 1529615612703 milliseconds
Total Time:         141.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.2 seconds, 43.4%
Fitness Testing:     62.7 seconds, 44.5%
Report:              17.0 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_shove} {:instruction tagged_588} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_min} {:instruction float_pop} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_dup} {:instruction float_cos} {:instruction float_yank} {:instruction float_cos} {:instruction integer_dup} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction float_dec} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction -17} {:instruction in2} {:instruction integer_inc} {:instruction -17})
Best program: (integer_fromfloat integer_dup_times integer_flush integer_swap integer_flush integer_swap float_dup_items float_swap float_shove tagged_588 integer_dup integer_stackdepth float_add integer_min float_pop float_yankdup integer_yank float_dup float_dup_times float_cos float_dup float_cos float_yank float_cos integer_dup float_sub float_mult float_dup integer_div integer_min float_yank float_dec float_yank float_add in1 tagged_70 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_fromfloat integer_min -17 in2 integer_inc -17)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2640.738941899995
Median total errors in population: 286.7425
Error averages by case: (96.9451028000005 11.277 94.7830578999981 11.371 82.31985180000203 11.086 93.38817980000036 11.202 94.37230770000126 11.314 93.96765359999986 11.095 95.3879733000021 11.249 89.66031089999882 11.175 96.38910000000214 11.307 97.0044320000007 11.247 95.21932870000099 11.194 96.03510660000005 12.038 81.63077830000188 11.266 95.99916350000069 11.266 92.99111339999962 11.287 91.76702819999873 11.207 91.65484989999993 11.101 99.62872449999847 11.457 99.31969569999778 11.075 101.34784350000156 11.403 96.50674539999952 11.208 99.49927859999927 11.313 90.73233029999868 11.105 94.18593099999973 11.148 98.20405450000138 11.408)
Error minima by case: (0.3901 2 0.2373 2 0.1168 1 0.0298 9 0.3483 2 0.5422 2 0.801 2 0.2168 1 0.7863 9 0.4958 2 0.1965 2 0.0288 10 0.1122 1 0.5004 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.8164 2 0.7061 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 46.888
Average program size in population (points): 47.888
Average percent parens in population: 0.022
Minimum age in population: 67.494676025948
Maximum age in population: 72.03866510151798
Average age in population: 70.1957976877452
Median age in population: 70.27045267080022
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.051
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 66171198
--- Timings ---
Current time: 1529615615384 milliseconds
Total Time:         143.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.4 seconds, 43.4%
Fitness Testing:     63.9 seconds, 44.4%
Report:              17.4 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dec} {:instruction float_flush} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_yank} {:instruction in2} {:instruction float_max} {:instruction float_div} {:instruction integer_fromfloat} {:instruction float_div} {:instruction float_max} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_tan} {:instruction float_frominteger} {:instruction float_yank} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_add} {:instruction integer_dup_items} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction -17} {:instruction in2} {:instruction float_add} {:instruction -17})
Best program: (integer_dec float_flush integer_yankdup integer_flush float_yank in2 float_max float_div integer_fromfloat float_div float_max integer_sub integer_rot float_tan float_frominteger float_yank integer_div in1 tagged_70 float_add integer_dup_items float_yank float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add in2 integer_fromfloat integer_min -17 in2 float_add -17)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2214.998929499995
Median total errors in population: 286.7425
Error averages by case: (79.19438109999943 11.213 74.02394389999975 11.301 75.26250620000162 11.055 74.8901580999992 11.185 73.45624250000083 11.236 80.42469100000086 11.075 79.75230800000045 11.199 70.22226410000029 11.117 78.52043350000059 11.264 79.13017799999949 11.197 77.33161849999959 11.138 78.06735460000004 12.041 75.75165320000146 11.22 78.08036319999961 11.205 80.03651359999962 11.247 72.7630766999989 11.177 72.08208009999991 11.056 81.65066720000004 11.377 81.50619539999947 11.07 82.42376720000017 11.327 78.63829120000077 11.136 81.4965510000005 11.259 68.90755219999885 11.048 81.48627880000079 11.118 79.31386020000124 11.325)
Error minima by case: (0.3901 2 0.2373 2 0.1168 1 0.0298 10 0.3483 2 0.5422 2 0.199 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.0 1 0.5004 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.8164 2 0.7061 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 46.686
Average program size in population (points): 47.686
Average percent parens in population: 0.022
Minimum age in population: 68.56472186247484
Maximum age in population: 73.69362670529881
Average age in population: 71.66232987504785
Median age in population: 71.70459267202926
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 67340711
--- Timings ---
Current time: 1529615617941 milliseconds
Total Time:         146.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.6 seconds, 43.5%
Fitness Testing:     64.9 seconds, 44.4%
Report:              17.7 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction float_sub} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_shove} {:instruction integer_dup_items} {:instruction tagged_589} {:instruction float_dup_times} {:instruction float_yankdup} {:instruction -76} {:instruction -9.25991880188262} {:instruction float_swap} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction in1} {:instruction tagged_192} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_yankdup} {:instruction -48.128125133444065} {:instruction integer_swap} {:instruction integer_flush} {:instruction -17} {:instruction integer_dup_times} {:instruction integer_add} {:instruction float_flush} {:instruction tagged_513} {:instruction integer_fromfloat})
Best program: (integer_fromfloat integer_inc integer_flush integer_max float_dup_items float_rot integer_fromfloat float_dup_items float_sub integer_dup_times integer_dec integer_shove float_dec float_shove integer_dup_items tagged_589 float_dup_times float_yankdup -76 -9.25991880188262 float_swap float_add in1 tagged_70 integer_dup integer_fromfloat float_sin integer_dec integer_yankdup integer_swap integer_min float_shove float_frominteger float_dup_items float_yank float_add in1 tagged_70 integer_dup integer_fromfloat in1 tagged_192 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_yankdup -48.128125133444065 integer_swap integer_flush -17 integer_dup_times integer_add float_flush tagged_513 integer_fromfloat)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2511.0555391999947
Median total errors in population: 286.7425
Error averages by case: (90.54387020000028 11.262 88.366281899999 11.336 81.52241920000156 11.113 87.27970879999984 11.192 88.56448510000074 11.294 89.95710020000004 11.136 90.9562930000012 11.263 85.4250329999994 11.174 90.7256618000014 11.276 90.04421160000032 11.248 89.87245700000032 11.209 90.60851680000005 12.044 85.84174580000138 11.272 89.52635920000044 11.251 90.63265439999964 11.281 86.4824795999989 11.188 86.23393939999991 11.125 91.58993619999931 11.401 92.67965539999874 11.107 92.94596000000115 11.374 90.26612719999991 11.216 91.77248999999975 11.316 85.07809739999881 11.136 91.22567600000004 11.162 91.16538000000126 11.373)
Error minima by case: (0.3901 5 0.2373 4 0.1168 3 0.0298 10 0.6517 4 0.4578 4 0.199 5 0.2168 3 0.7863 10 0.4958 4 0.1965 4 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 5 0.2039 9 0.2456 4 0.1836 3 0.2939 5 0.6075 2 0.3884 3 0.4982 5)
Average genome size in population (length): 45.804
Average program size in population (points): 46.804
Average percent parens in population: 0.022
Minimum age in population: 69.56472186247484
Maximum age in population: 74.95252038574249
Average age in population: 73.17985761228658
Median age in population: 73.22771077205364
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 68488186
--- Timings ---
Current time: 1529615620528 milliseconds
Total Time:         148.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.8 seconds, 43.5%
Fitness Testing:     66.0 seconds, 44.3%
Report:              18.0 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_dup_times} {:instruction tag_float_831} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction tagged_94} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (float_mult integer_div integer_mod integer_dec float_dec integer_sub float_yank float_sub float_yank float_dup_times tag_float_831 float_sub integer_stackdepth integer_mod float_add in1 tagged_70 float_dup_items integer_add in1 tagged_70 in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in1 tagged_70 float_dup_items integer_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add tagged_94 in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2954.520456399995
Median total errors in population: 286.7425
Error averages by case: (109.54740880000087 11.317 103.10980709999818 11.418 98.98126560000183 11.119 101.67210460000047 11.223 103.03062240000106 11.368 109.91629199999943 11.136 111.07726800000219 11.297 99.23975199999876 11.209 108.61257690000231 11.324 108.75227040000091 11.299 108.20652700000123 11.243 108.27491210000005 12.044 100.59083840000156 11.325 107.90135120000107 11.3 110.14530719999964 11.332 101.81910939999878 11.225 100.42071919999992 11.15 110.88305899999841 11.498 113.19155789999766 11.111 113.12913520000174 11.452 108.5787991999993 11.246 111.66866189999902 11.385 100.71122709999871 11.141 111.50896599999935 11.189 110.74391780000136 11.456)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 10 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 45.713
Average program size in population (points): 46.713
Average percent parens in population: 0.022
Minimum age in population: 71.10365168227437
Maximum age in population: 76.52439712976275
Average age in population: 74.6126671011688
Median age in population: 74.7035211425785
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.817
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.817
Total error diversity:				 0.045
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 69633011
--- Timings ---
Current time: 1529615623232 milliseconds
Total Time:         151.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.2 seconds, 43.6%
Fitness Testing:     67.0 seconds, 44.2%
Report:              18.3 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_div} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_add} {:instruction float_add} {:instruction integer_pop} {:instruction float_pop} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_yank} {:instruction tagged_172} {:instruction float_mult} {:instruction integer_div} {:instruction float_yank} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction integer_shove})
Best program: (integer_fromfloat integer_inc float_div integer_dec integer_dup integer_add float_add integer_pop float_pop integer_dup_times float_inc float_yank tagged_172 float_mult integer_div float_yank float_sub integer_dup_times float_max in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer integer_shove)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2651.665445799995
Median total errors in population: 286.7425
Error averages by case: (96.4695296000005 11.326 94.35661439999842 11.412 86.43926560000168 11.104 93.18878380000031 11.217 94.11827540000111 11.361 97.51583419999969 11.136 98.96146700000183 11.301 89.54751089999898 11.197 95.98300430000194 11.304 95.60223680000057 11.294 93.71845700000081 11.247 96.09088320000004 12.034 88.6217164000015 11.311 93.4163584000006 11.304 94.84539999999967 11.325 91.40632989999897 11.225 91.86115829999993 11.154 98.6428630999987 11.485 99.06776179999821 11.111 100.37371440000122 11.445 94.01412719999975 11.253 98.57978389999943 11.377 90.3162991999989 11.152 98.25618919999964 11.186 97.56788180000126 11.443)
Error minima by case: (0.3901 10 0.2373 5 0.1168 4 0.0298 9 0.3483 6 0.4578 5 0.199 6 0.2168 3 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 6 0.4996 10 0.3024 5 0.3637 9 0.2549 4 0.0731 10 0.2039 9 0.2456 10 0.1836 9 0.2939 8 0.3925 4 0.3884 5 0.4982 9)
Average genome size in population (length): 45.815
Average program size in population (points): 46.815
Average percent parens in population: 0.023
Minimum age in population: 72.10365168227437
Maximum age in population: 78.25267005485368
Average age in population: 76.09015036918132
Median age in population: 76.11896286419245
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.048
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 70780411
--- Timings ---
Current time: 1529615625783 milliseconds
Total Time:         154.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.4 seconds, 43.7%
Fitness Testing:     68.1 seconds, 44.1%
Report:              18.6 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 12288.045700000002
Test mean error for best: 6.14402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_464} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_swap} {:instruction in2} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_dup_items} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_pop} {:instruction tagged_70} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_mod} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction -11.01634184093676} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank})
Best program: (tagged_464 integer_mult integer_flush integer_swap in2 float_dup_items float_cos float_min float_yankdup print_float float_cos float_yank tag_float_575 integer_max float_cos float_yank tag_float_575 integer_max integer_dup_items float_mult integer_div integer_min integer_pop tagged_70 integer_stackdepth in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items in1 integer_mod float_shove integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div -11.01634184093676 print_integer float_add integer_yank)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2851.5388635999952
Median total errors in population: 286.7425
Error averages by case: (103.97452960000057 11.345 103.1340585999981 11.448 88.43906870000204 11.131 102.04963510000024 11.229 102.91928100000129 11.402 103.42083419999975 11.173 105.86506400000205 11.331 97.58162019999892 11.228 103.0289276000021 11.325 104.07474100000061 11.318 101.21165330000116 11.264 104.35753760000004 12.029 102.92060420000189 11.366 100.57636170000069 11.321 106.73772639999964 11.37 99.03709409999885 11.239 100.10828599999992 11.175 106.8294244999984 11.52 107.21272279999795 11.128 107.80190720000138 11.486 102.46212749999964 11.27 106.78731069999934 11.404 99.0105335999988 11.178 103.6494123999997 11.213 104.97440160000129 11.481)
Error minima by case: (0.3901 5 0.2373 9 0.1168 9 0.0298 10 0.3483 8 0.5422 9 0.801 10 0.2168 10 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 9 0.5004 5 0.6976 10 0.6363 10 0.2549 9 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.3925 9 0.3884 9 0.4982 6)
Average genome size in population (length): 45.047
Average program size in population (points): 46.047
Average percent parens in population: 0.023
Minimum age in population: 73.10365168227437
Maximum age in population: 79.55175394940322
Average age in population: 77.57648551795627
Median age in population: 77.63776724431256
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.802
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.802
Total error diversity:				 0.037
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 71909086
--- Timings ---
Current time: 1529615628385 milliseconds
Total Time:         156.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.7 seconds, 43.8%
Fitness Testing:     69.1 seconds, 44.1%
Report:              18.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_rot} {:instruction float_max} {:instruction float_sub} {:instruction tagged_319} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_rot} {:instruction tagged_857} {:instruction print_integer} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction integer_yankdup})
Best program: (integer_fromfloat integer_inc integer_flush integer_swap integer_max float_yankdup float_dup integer_swap integer_yank integer_inc float_min float_mult integer_div integer_min integer_max integer_min float_mult integer_div integer_min integer_dec float_dup float_dup_times float_rot float_max float_sub tagged_319 float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_rot tagged_857 print_integer integer_dup_items integer_yank integer_yankdup integer_inc -17 in2 integer_add float_flush integer_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2788.3832862999952
Median total errors in population: 286.7425
Error averages by case: (99.9423593000003 11.302 101.42889689999843 11.379 89.1429664000016 11.108 100.21880340000006 11.202 102.58730360000106 11.332 100.77262959999995 11.134 101.75027300000158 11.279 99.57434659999889 11.196 102.55257690000185 11.296 99.49275780000038 11.276 99.74947450000064 11.23 101.60182560000004 12.039 95.41928720000169 11.294 99.00485640000053 11.285 100.22739999999962 11.307 99.25067619999875 11.208 100.40480299999992 11.141 101.603424499999 11.443 105.37196569999801 11.121 103.4046792000012 11.413 100.05041239999987 11.241 101.84354729999961 11.346 99.10360499999868 11.146 100.24451959999993 11.176 101.32689620000139 11.419)
Error minima by case: (0.3901 4 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 10 0.4958 4 0.1965 4 0.0288 9 0.1122 3 0.4996 4 0.3024 4 0.3637 10 0.2549 3 0.0731 5 0.2039 9 0.2456 4 0.1836 4 0.2939 4 0.3925 2 0.3884 4 0.4982 4)
Average genome size in population (length): 44.648
Average program size in population (points): 45.648
Average percent parens in population: 0.023
Minimum age in population: 75.5980626069633
Maximum age in population: 80.9102400150855
Average age in population: 79.055948757773
Median age in population: 79.09409142657859
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.046
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 73028211
--- Timings ---
Current time: 1529615630968 milliseconds
Total Time:         159.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.9 seconds, 43.9%
Fitness Testing:     70.2 seconds, 44.0%
Report:              19.2 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_swap} {:instruction integer_sub} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_cos} {:instruction integer_min} {:instruction integer_pop} {:instruction tagged_70} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_min} {:instruction float_min} {:instruction integer_inc} {:instruction float_min} {:instruction float_dec} {:instruction float_cos} {:instruction float_dup} {:instruction float_mod} {:instruction integer_dec} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction tag_integer_963} {:instruction in2} {:instruction integer_add} {:instruction float_rot} {:instruction in1} {:instruction print_integer} {:instruction float_min} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction integer_min})
Best program: (float_swap float_swap integer_sub integer_add float_dup_items integer_swap float_cos integer_min integer_pop tagged_70 integer_shove integer_max integer_min float_min integer_inc float_min float_dec float_cos float_dup float_mod integer_dec float_yank float_sub float_yank float_add in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items tag_integer_963 in2 integer_add float_rot in1 print_integer float_min tagged_408 integer_fromfloat float_mult integer_min)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2639.3855816999953
Median total errors in population: 286.7425
Error averages by case: (96.59191970000018 11.278 93.62350299999903 11.387 87.81483520000164 11.113 93.22907389999986 11.193 93.01594250000082 11.331 96.34701580000016 11.12 98.20349200000136 11.272 89.47785079999929 11.201 93.62240240000142 11.286 95.62173260000034 11.271 94.65365350000033 11.213 93.77633640000005 12.027 88.54840920000149 11.312 94.09985960000037 11.281 95.36774719999963 11.319 92.0999175999988 11.193 91.11277879999993 11.136 98.83457069999922 11.462 96.09770239999864 11.088 100.37220560000097 11.412 94.9149436 11.222 98.62678389999978 11.347 87.35873589999876 11.134 96.62328760000008 11.182 97.14088180000134 11.43)
Error minima by case: (0.3901 9 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.4578 9 0.199 9 0.2168 9 0.2137 10 0.4958 9 0.1965 9 0.0288 9 0.1122 9 0.4996 10 0.3024 10 0.3637 10 0.2549 9 0.0731 10 0.2039 9 0.2456 9 0.1836 9 0.2939 8 0.3925 9 0.3884 9 0.4982 9)
Average genome size in population (length): 45.091
Average program size in population (points): 46.091
Average percent parens in population: 0.023
Minimum age in population: 77.5396393159533
Maximum age in population: 82.44000862058888
Average age in population: 80.50775173348396
Median age in population: 80.51921471093758
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.803
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.803
Total error diversity:				 0.048
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 74158249
--- Timings ---
Current time: 1529615633612 milliseconds
Total Time:         162.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.1 seconds, 43.9%
Fitness Testing:     71.3 seconds, 44.0%
Report:              19.5 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_flush} {:instruction float_cos} {:instruction float_stackdepth} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer})
Best program: (-27 float_yankdup float_tan integer_yank integer_inc float_add float_dec float_dup integer_flush float_cos float_stackdepth float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2451.2649785999947
Median total errors in population: 286.7425
Error averages by case: (88.57908999999988 11.277 87.55553639999897 11.362 79.29796640000166 11.09 85.80244759999974 11.186 87.73902190000102 11.314 88.03734060000039 11.116 87.92248200000118 11.264 82.73615679999945 11.183 86.07065360000126 11.277 87.75321999999994 11.256 87.32765350000027 11.208 86.06017120000004 12.031 79.17262380000163 11.267 86.96335920000011 11.264 87.63967839999961 11.284 85.38980029999878 11.191 84.08415669999992 11.139 90.8470823999993 11.423 88.57820859999882 11.095 91.6547320000008 11.395 87.52594360000028 11.218 90.92790219999993 11.329 84.0060267999987 11.137 88.35585000000033 11.153 89.38787460000138 11.391)
Error minima by case: (0.3901 6 0.2373 7 0.1168 4 0.0298 10 0.3483 7 0.5422 5 0.801 6 0.2168 4 0.2137 10 0.4958 6 0.1965 6 0.0288 9 0.1122 5 0.5004 6 0.6976 6 0.6363 10 0.2549 4 0.0731 8 0.2039 9 0.7544 7 0.8164 6 0.7061 7 0.3925 4 0.3884 5 0.4982 7)
Average genome size in population (length): 45.131
Average program size in population (points): 46.131
Average percent parens in population: 0.023
Minimum age in population: 79.53173928178413
Maximum age in population: 83.924211397176
Average age in population: 82.00424438961527
Median age in population: 82.0522864683527
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.814
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.814
Total error diversity:				 0.052
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 75289399
--- Timings ---
Current time: 1529615636162 milliseconds
Total Time:         164.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.4 seconds, 44.0%
Fitness Testing:     72.3 seconds, 43.9%
Report:              19.8 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_min} {:instruction integer_pop} {:instruction float_pop} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_max} {:instruction in1} {:instruction float_mult} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_yank} {:instruction float_dup} {:instruction integer_add} {:instruction float_cos} {:instruction integer_sub} {:instruction -6} {:instruction float_yank} {:instruction float_dup_items} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction print_integer} {:instruction float_add})
Best program: (float_swap float_flush integer_fromfloat integer_min integer_min integer_pop float_pop float_cos float_yank tag_float_575 integer_max integer_min float_mult integer_div float_yank float_sub float_yank float_max in1 float_mult float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div float_add in1 tagged_70 integer_fromfloat integer_dup_items float_dec float_yank float_dup integer_add float_cos integer_sub -6 float_yank float_dup_items in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add float_mult float_rot print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2855.403497299995
Median total errors in population: 286.7425
Error averages by case: (105.47840880000106 11.317 101.88679739999779 11.384 90.45479840000199 11.094 101.36561260000056 11.211 101.97337030000122 11.344 104.60303879999934 11.13 104.95266100000244 11.288 97.92583079999856 11.186 105.29450020000263 11.31 104.82227040000109 11.293 104.39409900000155 11.24 104.11573930000004 12.037 95.87849200000181 11.299 104.02735440000127 11.301 101.0935167999996 11.309 100.41825849999874 11.216 98.96068319999992 11.132 107.14205899999804 11.469 108.02294619999748 11.123 108.86090720000189 11.445 104.76633039999916 11.253 107.20760459999883 11.367 98.54134239999865 11.139 104.50347039999929 11.175 106.21040520000143 11.441)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 9 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 9 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 45.061
Average program size in population (points): 46.061
Average percent parens in population: 0.023
Minimum age in population: 81.11873787214734
Maximum age in population: 85.39050088550724
Average age in population: 83.45535244502261
Median age in population: 83.50426905528381
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.054
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 76418209
--- Timings ---
Current time: 1529615638794 milliseconds
Total Time:         167.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.6 seconds, 44.1%
Fitness Testing:     73.3 seconds, 43.9%
Report:              20.1 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_sub} {:instruction tag_float_87} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_inc} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction float_mult} {:instruction print_integer} {:instruction float_sub} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction in1} {:instruction float_pop} {:instruction float_add} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction float_yank})
Best program: (float_div float_max float_min integer_fromfloat integer_inc integer_flush integer_swap integer_swap float_dup_items float_sub tag_float_87 float_max in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger integer_inc tag_float_575 integer_max integer_min float_mult float_mult integer_min float_dup_items float_dec integer_max float_dup_times float_mult print_integer float_sub integer_min integer_dec float_dec float_dup float_dup_times float_cos in1 float_pop float_add in1 integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add float_yank)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2919.323004199995
Median total errors in population: 286.7425
Error averages by case: (108.43023850000124 11.28 104.28310559999754 11.374 92.29366720000198 11.098 102.09688860000077 11.2 104.13326320000125 11.32 105.91679839999917 11.113 106.2616760000026 11.267 100.7834819999983 11.182 108.3480125000029 11.291 107.6087830000013 11.265 106.69150950000176 11.207 108.74920000000004 12.025 100.75417500000192 11.286 106.68185320000148 11.268 106.1767951999996 11.3 101.1079014999987 11.2 101.83514339999991 11.119 109.53383969999791 11.449 111.99180079999726 11.097 110.83015280000208 11.407 107.11924839999894 11.223 109.41948629999871 11.332 100.15561479999865 11.119 107.79746159999908 11.158 108.33190700000144 11.411)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.5422 4 0.199 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 44.807
Average program size in population (points): 45.807
Average percent parens in population: 0.023
Minimum age in population: 82.11873787214734
Maximum age in population: 86.7653062800754
Average age in population: 84.93908608754082
Median age in population: 85.01264877998626
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.807
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.807
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 77540814
--- Timings ---
Current time: 1529615641425 milliseconds
Total Time:         169.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.9 seconds, 44.1%
Fitness Testing:     74.4 seconds, 43.8%
Report:              20.4 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction integer_inc} {:instruction float_min} {:instruction print_integer} {:instruction integer_min} {:instruction float_cos} {:instruction float_min} {:instruction float_yankdup} {:instruction -27} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_max} {:instruction integer_min} {:instruction float_swap} {:instruction print_float} {:instruction integer_div} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction integer_mod} {:instruction in1} {:instruction print_integer} {:instruction integer_div} {:instruction in1} {:instruction print_integer})
Best program: (integer_fromfloat integer_dup_times float_dup_items integer_inc float_min print_integer integer_min float_cos float_min float_yankdup -27 integer_inc integer_flush integer_max integer_flush integer_swap integer_fromfloat float_flush integer_max integer_min float_swap print_float integer_div integer_inc float_yank integer_dup_items float_frominteger in2 integer_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 integer_mod in1 print_integer integer_div in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2543.173650899995
Median total errors in population: 286.7425
Error averages by case: (90.39969990000016 11.281 90.75407699999867 11.361 85.02321600000184 11.1 90.35394229999999 11.182 91.32020400000108 11.321 91.70492680000011 11.129 92.39507900000146 11.266 86.97106099999922 11.172 91.03758510000162 11.271 90.8212284000002 11.262 90.34086750000054 11.217 90.43028640000004 12.031 86.31851160000173 11.284 89.36085800000022 11.268 90.99098079999962 11.293 89.33896279999882 11.195 87.88735159999992 11.147 93.09564379999907 11.42 94.16922809999845 11.099 94.09118800000093 11.401 91.5498616 11.217 93.17254729999976 11.325 85.67130669999877 11.141 92.03114820000006 11.157 92.0118890000013 11.392)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.4578 4 0.199 5 0.2168 3 0.7863 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 44.825
Average program size in population (points): 45.825
Average percent parens in population: 0.023
Minimum age in population: 83.11873787214734
Maximum age in population: 88.32844532962682
Average age in population: 86.41377051864404
Median age in population: 86.44546192053178
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.795
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.795
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 78664319
--- Timings ---
Current time: 1529615644010 milliseconds
Total Time:         172.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        76.2 seconds, 44.2%
Fitness Testing:     75.4 seconds, 43.7%
Report:              20.8 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_swap} {:instruction integer_sub} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_min} {:instruction integer_pop} {:instruction tagged_70} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_swap} {:instruction integer_inc} {:instruction float_yank} {:instruction float_dup} {:instruction float_dup_times} {:instruction in1} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup} {:instruction integer_add} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction float_max} {:instruction integer_flush} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_mod} {:instruction in1} {:instruction float_cos} {:instruction float_rot} {:instruction float_max} {:instruction float_yankdup} {:instruction float_flush} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction in2} {:instruction integer_add})
Best program: (float_swap float_swap integer_sub integer_add float_dup_items float_dup_items float_cos integer_min integer_pop tagged_70 integer_shove integer_fromfloat integer_stackdepth integer_pop integer_dec float_dec float_dup integer_inc float_dup_items integer_swap integer_inc float_yank float_dup float_dup_times in1 integer_mult float_sub float_dup integer_add integer_dup_items integer_fromfloat float_max integer_flush integer_mult float_add in1 tagged_70 float_mod in1 float_cos float_rot float_max float_yankdup float_flush in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_inc float_frominteger in2 integer_add integer_div in1 print_integer integer_yank in2 integer_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2473.223086099995
Median total errors in population: 286.7425
Error averages by case: (88.98526029999967 11.256 87.33190689999932 11.351 82.60889770000178 11.104 85.66937999999952 11.182 87.06400940000101 11.301 89.63977990000055 11.119 89.10889330000091 11.259 83.09616419999979 11.172 88.10430290000103 11.268 88.13970739999961 11.248 87.58904649999994 11.2 87.90354560000004 12.041 84.7659021000016 11.27 87.2138603999998 11.259 90.74704009999965 11.288 85.12710599999886 11.183 84.24813499999992 11.13 90.66108239999959 11.415 90.04385929999901 11.094 92.07448640000047 11.372 87.94957640000058 11.214 90.6233144000003 11.307 84.08263539999882 11.123 89.31682490000053 11.156 89.44136920000129 11.375)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.4996 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 44.659
Average program size in population (points): 45.659
Average percent parens in population: 0.023
Minimum age in population: 84.85593048964596
Maximum age in population: 89.88055812227049
Average age in population: 87.8763374107686
Median age in population: 87.9272815936435
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.047
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 79783474
--- Timings ---
Current time: 1529615646568 milliseconds
Total Time:         174.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.4 seconds, 44.2%
Fitness Testing:     76.4 seconds, 43.7%
Report:              21.0 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_dup} {:instruction float_sub} {:instruction in2} {:instruction float_swap} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_rot} {:instruction float_sub} {:instruction float_yank} {:instruction float_tan} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_div} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_min})
Best program: (-27 float_yankdup float_div integer_fromfloat integer_inc integer_max integer_dec integer_dup float_sub in2 float_swap integer_yank integer_swap integer_dup_items integer_add float_dup_times float_cos float_rot float_sub float_yank float_tan in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_inc float_frominteger integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div integer_yank print_integer integer_div float_max integer_fromfloat float_swap integer_min)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2709.575129499995
Median total errors in population: 286.7425
Error averages by case: (100.0294803000011 11.31 95.71734499999799 11.4 88.49692520000188 11.107 95.35523620000056 11.213 96.40268090000112 11.36 96.76761709999944 11.133 97.70998170000242 11.296 91.90547889999849 11.209 98.76213380000232 11.316 99.07861590000093 11.291 98.9771158000013 11.236 98.41364960000003 12.042 88.6233571000017 11.31 98.00141520000112 11.298 95.32919359999963 11.315 95.36272339999883 11.216 93.42139179999991 11.156 102.62291049999811 11.486 101.08765279999756 11.115 104.40811150000188 11.443 99.48555109999923 11.247 102.56896769999885 11.374 91.38706289999872 11.145 95.65364349999948 11.186 101.35888800000134 11.444)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.7863 9 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 9 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 44.792
Average program size in population (points): 45.792
Average percent parens in population: 0.023
Minimum age in population: 86.89449174957232
Maximum age in population: 91.27919874347928
Average age in population: 89.34827152646594
Median age in population: 89.39901324204006
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.05
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 80906284
--- Timings ---
Current time: 1529615649092 milliseconds
Total Time:         177.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        78.6 seconds, 44.3%
Fitness Testing:     77.4 seconds, 43.6%
Report:              21.4 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction float_max} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_swap} {:instruction integer_max} {:instruction integer_sub} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_356} {:instruction integer_yank} {:instruction float_max} {:instruction integer_inc} {:instruction float_yank} {:instruction float_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_max} {:instruction integer_inc} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction tagged_94} {:instruction in1} {:instruction print_integer} {:instruction print_integer} {:instruction float_sub} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items})
Best program: (-27 float_max integer_swap float_tan integer_swap integer_max integer_sub float_cos float_yank tag_float_356 integer_yank float_max integer_inc float_yank float_add float_dec integer_yank integer_fromfloat float_pop float_max integer_inc integer_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add tagged_94 in1 print_integer print_integer float_sub in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2671.5566111999947
Median total errors in population: 286.7425
Error averages by case: (96.32326030000026 11.299 97.16162079999856 11.391 82.91130240000179 11.129 96.15710480000006 11.202 96.88992320000108 11.345 96.28776260000005 11.146 97.60169100000155 11.297 94.65625279999887 11.203 95.75515770000175 11.289 95.59371580000033 11.291 94.87765350000062 11.247 94.79928640000004 12.041 94.10685800000167 11.324 94.76085960000056 11.296 97.40665439999962 11.328 95.40548989999881 11.209 95.61990019999992 11.158 97.65100929999902 11.463 97.83363589999843 11.111 99.18422320000127 11.43 95.29994359999982 11.245 97.6941960999997 11.368 92.12249749999872 11.153 96.27673399999999 11.205 96.58387820000135 11.426)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.5422 4 0.801 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 7 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 44.508
Average program size in population (points): 45.508
Average percent parens in population: 0.023
Minimum age in population: 87.89449174957232
Maximum age in population: 92.94572333204243
Average age in population: 90.83551100073988
Median age in population: 90.8368748132693
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 82021504
--- Timings ---
Current time: 1529615651663 milliseconds
Total Time:         180.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.9 seconds, 44.3%
Fitness Testing:     78.5 seconds, 43.6%
Report:              21.7 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_min} {:instruction integer_add} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_swap} {:instruction integer_mult} {:instruction float_tan} {:instruction integer_sub} {:instruction float_dup} {:instruction print_float} {:instruction float_cos} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction float_add} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_sin} {:instruction in1} {:instruction integer_pop} {:instruction integer_yank} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_swap} {:instruction 5.235589201978755} {:instruction float_yank} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (float_div float_max float_min integer_add in2 integer_pop integer_flush float_swap integer_mult float_tan integer_sub float_dup print_float float_cos integer_min float_stackdepth integer_yank integer_sub integer_dup_items integer_fromfloat float_add float_add in1 tagged_70 float_add in1 tagged_70 float_dup_items integer_dup float_sin in1 integer_pop integer_yank in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add float_yank integer_swap integer_swap 5.235589201978755 float_yank in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2704.972171299995
Median total errors in population: 286.7425
Error averages by case: (98.88957910000043 11.284 96.11879969999868 11.412 87.67166720000179 11.101 95.5413599000001 11.193 95.76137260000102 11.34 99.50705159999988 11.125 100.83728300000172 11.278 92.06061629999894 11.192 96.94001250000181 11.274 98.01076620000045 11.264 97.48729550000071 11.203 95.93625760000005 12.019 92.30418480000168 11.313 97.08185400000062 11.273 99.97777119999961 11.321 94.24580459999879 11.21 93.32543059999992 11.122 100.55627829999884 11.456 100.39441249999828 11.078 102.21066160000122 11.423 97.83014679999978 11.205 100.43931069999955 11.323 90.25755959999873 11.129 100.05579199999984 11.18 99.40990340000135 11.403)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.5422 4 0.801 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 44.693
Average program size in population (points): 45.693
Average percent parens in population: 0.023
Minimum age in population: 89.59388213963172
Maximum age in population: 94.20926278373302
Average age in population: 92.31721140696935
Median age in population: 92.35156563880415
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.803
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.803
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 83140869
--- Timings ---
Current time: 1529615654346 milliseconds
Total Time:         182.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.1 seconds, 44.4%
Fitness Testing:     79.6 seconds, 43.5%
Report:              21.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_max} {:instruction tag_float_190} {:instruction float_yank} {:instruction float_max} {:instruction print_float} {:instruction float_dup} {:instruction float_min} {:instruction integer_div} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_add} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_yank} {:instruction float_pop} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_pop} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer})
Best program: (integer_fromfloat float_flush integer_flush integer_swap float_max integer_fromfloat integer_inc integer_flush integer_max float_dup_items float_rot integer_max tag_float_190 float_yank float_max print_float float_dup float_min integer_div integer_shove integer_dec float_dec float_dup float_dup_times float_add float_yank float_sub float_yank float_yank float_pop in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items integer_pop in2 integer_add integer_div in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2383.036777899995
Median total errors in population: 286.7425
Error averages by case: (85.10060089999992 11.262 83.0711682999992 11.359 74.30225120000149 11.086 82.2342571999997 11.18 82.46568590000084 11.314 84.9328470000004 11.113 87.02788500000098 11.251 80.01203219999941 11.167 84.81873030000105 11.253 85.09418640000001 11.242 83.13222550000009 11.193 85.19037280000003 12.017 80.25529700000139 11.273 83.05686280000015 11.25 86.26177119999963 11.282 80.81021319999891 11.174 81.29664609999992 11.128 87.57437479999939 11.405 89.21124759999881 11.086 89.00799520000088 11.376 84.51165840000023 11.204 88.23143269999984 11.308 80.70832499999884 11.122 87.19734560000015 11.151 85.96336560000127 11.372)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 44.083
Average program size in population (points): 45.083
Average percent parens in population: 0.023
Minimum age in population: 90.98819365902322
Maximum age in population: 95.65729566258105
Average age in population: 93.78778081503954
Median age in population: 93.83213149497558
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.792
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.792
Total error diversity:				 0.051
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 84244676
--- Timings ---
Current time: 1529615656837 milliseconds
Total Time:         185.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        82.3 seconds, 44.4%
Fitness Testing:     80.6 seconds, 43.5%
Report:              22.3 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_inc} {:instruction integer_flush} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_min} {:instruction integer_pop} {:instruction float_pop} {:instruction tagged_278} {:instruction integer_min} {:instruction float_sub} {:instruction tagged_588} {:instruction integer_min} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dup_times} {:instruction in1} {:instruction float_mult} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction integer_max} {:instruction print_integer} {:instruction float_add})
Best program: (integer_inc integer_flush integer_max integer_dec integer_min integer_min integer_pop float_pop tagged_278 integer_min float_sub tagged_588 integer_min float_dup_items float_dup_items float_dup float_dup_times in1 float_mult float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div integer_max print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2300.8640201999947
Median total errors in population: 286.7425
Error averages by case: (82.04277119999927 11.252 81.21659889999934 11.335 74.46071840000185 11.067 81.68634319999904 11.173 81.22532040000122 11.295 83.10138920000097 11.102 81.98249200000079 11.24 76.99148579999974 11.157 80.4651202000009 11.252 81.43816119999936 11.228 81.31463599999975 11.18 79.85148040000004 12.019 72.99608240000177 11.236 80.8573615999995 11.234 79.74735199999961 11.253 80.85803509999869 11.179 78.58545039999991 11.115 83.36981339999977 11.38 83.1237413999992 11.088 84.9105216000003 11.356 81.68539280000087 11.202 83.4859632000006 11.298 76.99075499999859 11.116 84.47467600000085 11.14 82.75335840000149 11.352)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 3 0.4578 2 0.801 2 0.2168 1 0.7863 9 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.1836 2 0.7061 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 44.313
Average program size in population (points): 45.313
Average percent parens in population: 0.023
Minimum age in population: 92.45513562645196
Maximum age in population: 97.08949819423076
Average age in population: 95.25653597250897
Median age in population: 95.2760923612034
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.043
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 85354057
--- Timings ---
Current time: 1529615659224 milliseconds
Total Time:         187.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.4 seconds, 44.4%
Fitness Testing:     81.6 seconds, 43.5%
Report:              22.6 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_max} {:instruction integer_add} {:instruction in2} {:instruction integer_pop} {:instruction float_pop} {:instruction float_cos} {:instruction tagged_209} {:instruction integer_min} {:instruction float_mult} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_yank} {:instruction float_tan} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_cos} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_swap})
Best program: (float_div float_max float_max integer_add in2 integer_pop float_pop float_cos tagged_209 integer_min float_mult float_frominteger integer_min float_yank float_tan in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_cos tagged_408 integer_fromfloat float_swap)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2602.7689473999953
Median total errors in population: 286.7425
Error averages by case: (95.21469990000018 11.235 91.10930429999897 11.336 82.3453680000016 11.051 91.1795374999999 11.198 90.97834510000085 11.293 96.18296720000014 11.083 97.06088500000146 11.224 86.42595099999942 11.151 94.20179880000155 11.278 94.45972420000022 11.221 93.7420815000004 11.168 93.08431530000004 12.024 87.98440920000162 11.245 93.61185640000048 11.224 95.89477119999961 11.259 90.15430139999874 11.189 87.8018271999999 11.091 96.39171689999927 11.397 97.02602419999847 11.094 97.85967920000103 11.362 94.15741239999998 11.174 96.35454729999974 11.295 87.55151639999876 11.088 95.35701520000002 11.126 95.47089260000142 11.362)
Error minima by case: (0.3901 2 0.2373 2 0.1168 1 0.0298 10 0.3483 2 0.4578 2 0.801 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.1836 2 0.7061 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 44.632
Average program size in population (points): 45.632
Average percent parens in population: 0.023
Minimum age in population: 93.85760974788703
Maximum age in population: 98.82072601936046
Average age in population: 96.73665517722377
Median age in population: 96.82751763669418
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 86471572
--- Timings ---
Current time: 1529615661844 milliseconds
Total Time:         190.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.6 seconds, 44.5%
Fitness Testing:     82.7 seconds, 43.5%
Report:              22.8 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction -76} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_max} {:instruction tagged_588} {:instruction in1} {:instruction in2} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction in2} {:instruction float_tan} {:instruction in1} {:instruction integer_rot} {:instruction integer_div} {:instruction float_shove} {:instruction float_add} {:instruction float_yank} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_add} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_yank} {:instruction integer_shove} {:instruction integer_min} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_mult} {:instruction -20} {:instruction in2} {:instruction 6.60772508765892} {:instruction float_flush} {:instruction tagged_408} {:instruction integer_fromfloat})
Best program: (float_swap float_inc float_min float_rot -76 float_yankdup integer_flush float_inc integer_max tagged_588 in1 in2 integer_yank in2 float_dec in2 float_tan in1 integer_rot integer_div float_shove float_add float_yank float_sub float_dup_times float_add integer_dec integer_swap float_yank integer_shove integer_min float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_mult -20 in2 6.60772508765892 float_flush tagged_408 integer_fromfloat)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2358.3804532999948
Median total errors in population: 286.7425
Error averages by case: (84.9401612999991 11.274 83.29332999999957 11.367 70.80688670000158 11.094 82.77246949999899 11.179 83.21411150000098 11.316 82.00404770000111 11.128 82.0477710000004 11.253 79.16396990000031 11.181 86.18208100000076 11.271 84.22466539999915 11.257 83.00360099999948 11.209 86.06108480000005 12.025 79.90361280000157 11.279 82.59736559999907 11.263 81.57188919999965 11.284 80.17863689999882 11.195 80.70458009999992 11.132 86.88881340000007 11.416 88.5240046999993 11.094 88.54852160000019 11.391 83.33918960000105 11.219 86.98637540000065 11.328 80.53750599999874 11.128 83.13642340000092 11.164 85.91435480000136 11.388)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.0914 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 9 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 44.353
Average program size in population (points): 45.353
Average percent parens in population: 0.023
Minimum age in population: 95.25684609720226
Maximum age in population: 100.2311010241974
Average age in population: 98.22328053431923
Median age in population: 98.28835731722303
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.045
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 87582597
--- Timings ---
Current time: 1529615664411 milliseconds
Total Time:         192.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        85.8 seconds, 44.5%
Fitness Testing:     83.8 seconds, 43.4%
Report:              23.1 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_max} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dec} {:instruction float_sub} {:instruction tag_integer_472} {:instruction float_yank} {:instruction print_integer} {:instruction -49.801477969314305} {:instruction in1} {:instruction float_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction in2} {:instruction float_dup_times} {:instruction float_cos} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_yank} {:instruction float_inc} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction in1} {:instruction print_integer} {:instruction tagged_94} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (float_swap float_max float_swap float_dup_times float_mult float_dec float_sub tag_integer_472 float_yank print_integer -49.801477969314305 in1 float_yank float_add float_yankdup in2 float_dup_times float_cos float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_dup_times float_frominteger float_sub float_yank float_inc in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add float_flush in1 print_integer tagged_94 in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2566.3037669999953
Median total errors in population: 286.7425
Error averages by case: (92.14948010000055 11.283 93.25962079999839 11.386 80.02578400000174 11.11 91.5332538000001 11.212 93.06292320000097 11.325 92.40459379999976 11.134 94.56768100000178 11.279 88.19603599999905 11.19 92.60873030000192 11.29 91.33322000000037 11.272 90.92967100000055 11.214 91.16543040000005 12.04 85.79384820000159 11.302 90.31835760000054 11.275 91.11377119999963 11.313 90.72403509999879 11.211 89.83540999999991 11.125 94.1208630999988 11.456 95.49183979999819 11.092 95.65118800000138 11.413 91.2328615999999 11.223 94.03954729999944 11.341 88.92910489999873 11.127 92.63462679999971 11.181 92.97188900000134 11.416)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.5422 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 43.814
Average program size in population (points): 44.814
Average percent parens in population: 0.024
Minimum age in population: 96.85034266605898
Maximum age in population: 101.7199816700475
Average age in population: 99.73774541787868
Median age in population: 99.7645099195148
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.043
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 88679692
--- Timings ---
Current time: 1529615666952 milliseconds
Total Time:         195.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.0 seconds, 44.6%
Fitness Testing:     84.8 seconds, 43.4%
Report:              23.4 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_max} {:instruction integer_add} {:instruction in2} {:instruction integer_pop} {:instruction float_pop} {:instruction float_cos} {:instruction tagged_209} {:instruction integer_min} {:instruction float_mult} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_yank} {:instruction float_tan} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_yank} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_cos} {:instruction tagged_408} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_min} {:instruction integer_rot})
Best program: (float_div float_max float_max integer_add in2 integer_pop float_pop float_cos tagged_209 integer_min float_mult float_frominteger integer_min float_yank float_tan in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_yank -17 in2 integer_add float_cos tagged_408 integer_fromfloat float_swap integer_min integer_rot)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2896.932552799995
Median total errors in population: 286.7425
Error averages by case: (106.9386781000004 11.293 102.37039309999834 11.398 93.58939680000174 11.101 101.97413830000029 11.208 102.83206230000104 11.338 104.34278559999974 11.132 106.00225300000172 11.276 98.32587329999876 11.176 106.34210380000191 11.297 106.24579980000044 11.27 106.5719200000008 11.219 107.15073160000004 12.043 100.94603340000167 11.297 105.53885160000064 11.277 105.17944799999961 11.308 99.87364899999885 11.208 100.45901829999991 11.126 109.13247419999887 11.453 110.46882829999822 11.115 110.98387200000106 11.42 106.73843199999982 11.225 109.2863679999996 11.322 99.55005149999873 11.131 105.21897479999978 11.173 108.65641600000134 11.408)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.6517 5 0.4578 4 0.199 4 0.2168 3 0.7863 9 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 9 0.2456 5 0.1836 5 0.2939 5 0.6075 3 0.3884 4 0.4982 5)
Average genome size in population (length): 43.846
Average program size in population (points): 44.846
Average percent parens in population: 0.024
Minimum age in population: 98.55682675538503
Maximum age in population: 103.3554752699621
Average age in population: 101.2553039355268
Median age in population: 101.2997412486533
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.813
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.813
Total error diversity:				 0.047
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 89778071
--- Timings ---
Current time: 1529615669479 milliseconds
Total Time:         198.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        88.3 seconds, 44.6%
Fitness Testing:     85.8 seconds, 43.3%
Report:              23.7 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_float_692} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_rot} {:instruction integer_pop} {:instruction tag_integer_496} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_shove} {:instruction print_integer} {:instruction -76} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_min} {:instruction integer_pop} {:instruction float_pop} {:instruction integer_dec} {:instruction float_min} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup} {:instruction -32} {:instruction integer_max} {:instruction float_pop} {:instruction float_swap} {:instruction float_max} {:instruction integer_inc} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction in2} {:instruction in1} {:instruction integer_dec} {:instruction integer_min} {:instruction float_inc} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_726} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_min} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_dec})
Best program: (tag_float_692 float_cos float_yank float_sub float_rot integer_pop tag_integer_496 float_mod integer_inc integer_shove print_integer -76 integer_dec integer_min integer_min integer_pop float_pop integer_dec float_min integer_dec float_dec float_dec float_dup -32 integer_max float_pop float_swap float_max integer_inc float_add in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_div in1 in2 in1 integer_dec integer_min float_inc float_sub float_yank float_add in1 tagged_726 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items integer_min in2 integer_add integer_div in1 print_integer float_dec)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2571.772401399995
Median total errors in population: 286.7425
Error averages by case: (92.70504049999998 11.274 91.54933269999906 11.335 84.84183520000182 11.108 92.27122399999976 11.188 91.69187830000102 11.301 92.2319314000004 11.124 90.52769600000099 11.261 88.08603599999948 11.18 91.97630290000126 11.276 92.16769900000006 11.258 91.85304650000032 11.215 91.94043040000004 12.04 87.78997020000156 11.272 91.23286040000012 11.261 92.20635199999961 11.287 91.49330769999881 11.193 89.42666489999992 11.13 94.16108239999916 11.411 94.12304369999859 11.112 95.57896000000092 11.385 92.14157640000018 11.226 94.24748999999977 11.328 89.53474999999875 11.133 92.5985108000004 11.158 93.54838000000132 11.391)
Error minima by case: (0.3901 4 0.2373 5 0.1168 3 0.0298 10 0.6517 5 0.5422 4 0.801 5 0.2168 3 0.7863 10 0.4958 4 0.1965 4 0.0288 9 0.1122 4 0.5004 4 0.6976 5 0.6363 10 0.2549 3 0.0731 5 0.2039 9 0.7544 4 0.8164 4 0.7061 4 0.6075 3 0.3884 4 0.4982 4)
Average genome size in population (length): 43.21
Average program size in population (points): 44.21
Average percent parens in population: 0.024
Minimum age in population: 99.59111880730974
Maximum age in population: 104.6240538984411
Average age in population: 102.7336128388444
Median age in population: 102.7951848204446
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.037
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 90859896
--- Timings ---
Current time: 1529615672017 milliseconds
Total Time:         200.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        89.5 seconds, 44.7%
Fitness Testing:     86.8 seconds, 43.3%
Report:              24.0 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_swap} {:instruction integer_sub} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_swap} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_dup_items} {:instruction float_pop} {:instruction integer_swap} {:instruction integer_shove} {:instruction integer_mult} {:instruction float_dup} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_yank} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction float_yank} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_dup} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction in1} {:instruction tagged_9950} {:instruction float_dup_items} {:instruction integer_sub} {:instruction integer_add})
Best program: (float_swap float_swap integer_sub integer_add float_dup_items integer_swap integer_max float_yankdup integer_yank integer_dup_items float_pop integer_swap integer_shove integer_mult float_dup float_dup_items print_integer float_dup_times integer_yank float_yank float_sub float_yank integer_shove float_add in1 float_yank float_yank float_sub float_yank float_dup float_add in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer in1 tagged_9950 float_dup_items integer_sub integer_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2370.268658499995
Median total errors in population: 286.7425
Error averages by case: (87.04030979999963 11.254 79.24965159999937 11.327 76.7156016000017 11.095 78.67966879999936 11.176 79.21255080000094 11.285 84.60330480000066 11.121 85.48469100000092 11.246 75.91624599999999 11.175 85.92615770000117 11.26 86.4642283999997 11.24 85.95285 11.196 85.90331520000004 12.037 82.61374580000175 11.265 85.76335999999985 11.246 85.30386399999962 11.261 77.88814039999878 11.183 76.80247879999992 11.12 88.33078999999951 11.387 87.97463589999883 11.107 89.75246880000064 11.37 86.36676000000053 11.206 88.39549000000015 11.307 75.57184669999873 11.121 85.36412240000062 11.149 87.49838000000136 11.36)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 43.164
Average program size in population (points): 44.164
Average percent parens in population: 0.024
Minimum age in population: 100.8012969466898
Maximum age in population: 105.957114906278
Average age in population: 104.1829822711672
Median age in population: 104.2044574493052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.803
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.803
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 91940171
--- Timings ---
Current time: 1529615674515 milliseconds
Total Time:         203.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        90.7 seconds, 44.7%
Fitness Testing:     87.8 seconds, 43.2%
Report:              24.4 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_float_581} {:instruction float_max} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction tag_float_575} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_max} {:instruction 94} {:instruction float_inc} {:instruction integer_max} {:instruction integer_min} {:instruction integer_min} {:instruction integer_max} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_dup_items} {:instruction float_shove} {:instruction float_cos} {:instruction float_yank} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction integer_div} {:instruction float_sin} {:instruction print_integer} {:instruction float_add})
Best program: (tag_float_581 float_max integer_sub float_add float_dec integer_yank integer_shove tag_float_575 integer_max integer_min float_mult integer_div integer_min integer_dec float_max 94 float_inc integer_max integer_min integer_min integer_max integer_fromfloat float_pop integer_dup_items float_shove float_cos float_yank float_tan float_yank float_add in1 tagged_104 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_add integer_div float_sin print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3064.548180299995
Median total errors in population: 286.7425
Error averages by case: (112.23228800000054 11.356 111.99810009999797 11.445 101.45663040000198 11.129 110.62700560000026 11.233 111.18687640000131 11.396 113.32215899999979 11.166 112.28305400000204 11.335 108.19922739999865 11.235 111.94091940000223 11.345 112.10079980000062 11.329 111.01752700000115 11.282 111.50816320000004 12.05 106.71859440000202 11.343 110.48335120000084 11.343 109.65484319999959 11.353 108.66539749999875 11.238 109.16297949999993 11.183 114.71069349999853 11.524 116.18127599999785 11.143 117.31038080000151 11.499 111.32879919999965 11.3 114.69566189999938 11.42 105.71966999999863 11.182 113.7933631999997 11.196 114.73741960000145 11.488)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 42.771
Average program size in population (points): 43.771
Average percent parens in population: 0.024
Minimum age in population: 102.1440192810881
Maximum age in population: 107.4937390593253
Average age in population: 105.6033237847073
Median age in population: 105.6472010990313
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.84
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.84
Total error diversity:				 0.051
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 93010479
--- Timings ---
Current time: 1529615677029 milliseconds
Total Time:         205.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        91.9 seconds, 44.8%
Fitness Testing:     88.8 seconds, 43.2%
Report:              24.6 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_div} {:instruction float_max} {:instruction float_swap} {:instruction float_swap} {:instruction float_sub} {:instruction float_yank} {:instruction float_dup} {:instruction float_dup_items} {:instruction float_max} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (integer_mult float_div float_max float_swap float_swap float_sub float_yank float_dup float_dup_items float_max float_yank integer_stackdepth in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2436.469327399995
Median total errors in population: 286.7425
Error averages by case: (86.30965039999988 11.276 87.52680729999881 11.359 79.96836800000173 11.101 85.92216439999967 11.193 88.29222660000121 11.309 88.52359380000038 11.128 88.74768100000134 11.273 82.79903599999953 11.174 86.76001250000148 11.272 85.49820319999995 11.253 83.73224300000015 11.205 86.09431530000005 12.03 84.81896040000181 11.275 83.17736079999995 11.261 90.04598079999963 11.284 83.29167139999878 11.193 85.27166489999992 11.129 88.36930169999928 11.417 89.58182029999863 11.102 90.10871440000065 11.393 84.01039280000045 11.21 88.41378390000004 11.316 81.1339274999987 11.13 88.68056880000032 11.165 87.56187820000137 11.381)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.6517 2 0.5422 3 0.199 3 0.2168 2 0.7863 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.5004 3 0.3024 3 0.6363 10 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.8164 2 0.2939 3 0.6075 1 0.3884 3 0.4982 3)
Average genome size in population (length): 42.641
Average program size in population (points): 43.641
Average percent parens in population: 0.024
Minimum age in population: 104.8355225242595
Maximum age in population: 109.1239049828575
Average age in population: 107.0410242124659
Median age in population: 107.0378921683261
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.048
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 94077320
--- Timings ---
Current time: 1529615679507 milliseconds
Total Time:         208.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        93.2 seconds, 44.8%
Fitness Testing:     89.8 seconds, 43.2%
Report:              24.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_max} {:instruction float_swap} {:instruction float_swap} {:instruction float_swap} {:instruction float_cos} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_min} {:instruction float_cos} {:instruction integer_min} {:instruction integer_pop} {:instruction float_max} {:instruction integer_div} {:instruction float_cos} {:instruction float_dup_times} {:instruction tag_float_831} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_mod} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer})
Best program: (float_swap float_max float_swap float_swap float_swap float_cos integer_add float_dup_items float_min float_cos integer_min integer_pop float_max integer_div float_cos float_dup_times tag_float_831 float_yank integer_stackdepth integer_mod in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2250.032072199995
Median total errors in population: 286.7425
Error averages by case: (81.27348109999951 11.277 78.43091679999988 11.384 70.33872520000139 11.088 77.00668779999909 11.193 77.59384290000078 11.34 79.52618200000076 11.125 80.14483760000049 11.262 74.0697094000002 11.186 80.85526990000065 11.283 80.2221965999996 11.261 79.86919309999958 11.205 81.05691240000003 12.023 72.15662200000132 11.297 79.22239909999956 11.265 78.69207719999963 11.301 75.0610372999989 11.195 75.33340059999992 11.13 83.16742610000004 11.454 83.18197159999947 11.082 84.11551720000016 11.409 79.25329960000063 11.216 82.09085400000046 11.341 74.2176078999988 11.123 80.09699240000072 11.167 81.03391240000127 11.414)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 41.961
Average program size in population (points): 42.961
Average percent parens in population: 0.025
Minimum age in population: 106.0149416862933
Maximum age in population: 110.8669918776936
Average age in population: 108.5303664556022
Median age in population: 108.5459909279578
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.791
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.791
Total error diversity:				 0.04
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 95127232
--- Timings ---
Current time: 1529615681963 milliseconds
Total Time:         210.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        94.5 seconds, 44.9%
Fitness Testing:     90.7 seconds, 43.1%
Report:              25.1 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction float_div} {:instruction float_max} {:instruction float_flush} {:instruction integer_yank} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction print_float} {:instruction print_integer} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dup_items} {:instruction float_sub} {:instruction tag_float_87} {:instruction float_max} {:instruction in1} {:instruction float_rot} {:instruction float_swap} {:instruction integer_rot} {:instruction float_div} {:instruction integer_dup_items} {:instruction in2} {:instruction float_yank} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction tagged_9922} {:instruction float_dup_items} {:instruction tagged_70} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_min} {:instruction float_shove} {:instruction float_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction in1} {:instruction tagged_192} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer})
Best program: (integer_rot float_div float_max float_flush integer_yank integer_sub integer_dup_items integer_fromfloat print_float print_integer float_sub integer_fromfloat integer_inc integer_flush integer_swap print_integer float_dup_items float_sub tag_float_87 float_max in1 float_rot float_swap integer_rot float_div integer_dup_items in2 float_yank in1 float_inc integer_dup_times tagged_9922 float_dup_items tagged_70 integer_dup integer_fromfloat float_sin integer_dec integer_yankdup integer_swap integer_min float_shove float_flush float_dup_items float_tan float_add in1 tagged_70 integer_dup integer_fromfloat in1 tagged_192 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2183.232725499995
Median total errors in population: 286.7425
Error averages by case: (77.55760089999907 11.23 77.10665489999984 11.328 68.06082080000168 11.078 75.30340279999875 11.173 76.78400210000099 11.277 75.71914880000134 11.094 75.5695120000001 11.218 72.87050480000038 11.163 75.60695220000042 11.252 76.62368219999902 11.218 76.29022549999922 11.171 75.48774720000004 12.025 74.28221420000169 11.257 75.5798627999991 11.232 77.38260639999963 11.26 74.96276179999877 11.175 74.33072369999992 11.094 79.71981340000009 11.391 78.5600826999996 11.069 81.48501280000013 11.347 75.6492912000013 11.182 79.64313880000066 11.288 73.81943249999871 11.093 76.08966720000129 11.141 77.63386380000138 11.358)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 10 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 42.201
Average program size in population (points): 43.201
Average percent parens in population: 0.025
Minimum age in population: 107.2595471246697
Maximum age in population: 111.9485361039139
Average age in population: 110.0155459511813
Median age in population: 110.0528130533436
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.777
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.777
Total error diversity:				 0.035
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 96183098
--- Timings ---
Current time: 1529615684488 milliseconds
Total Time:         212.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        95.7 seconds, 44.9%
Fitness Testing:     91.7 seconds, 43.1%
Report:              25.4 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_464} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction in2} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_sub} {:instruction float_cos} {:instruction integer_inc} {:instruction float_sub} {:instruction print_float} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_add} {:instruction tag_float_575} {:instruction in1} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction float_sub} {:instruction float_yank} {:instruction float_tan} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_swap} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction float_add} {:instruction float_stackdepth})
Best program: (tagged_464 integer_inc integer_flush integer_swap in2 float_dup_items float_tan integer_sub float_cos integer_inc float_sub print_float integer_inc integer_flush integer_swap float_dup_items integer_swap float_add tag_float_575 in1 integer_dup_items float_frominteger float_sub float_yank float_tan float_sub integer_dup_items integer_fromfloat integer_stackdepth integer_flush float_frominteger float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div float_swap print_integer float_add integer_yank integer_swap integer_inc float_add float_stackdepth)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2072.8826581999947
Median total errors in population: 286.7425
Error averages by case: (73.70221079999902 11.208 70.46016890000006 11.292 65.00515910000153 11.055 70.31489589999877 11.178 69.7015102000009 11.247 73.18355450000121 11.081 73.49471710000016 11.201 66.72731770000054 11.141 72.28573030000038 11.252 71.90368219999908 11.195 72.37720799999923 11.148 72.09448810000005 12.03 69.3650421000015 11.226 71.96436479999927 11.209 74.48827749999961 11.228 69.45758869999882 11.165 67.77738309999992 11.087 75.16237480000038 11.356 76.0262475999997 11.077 76.69552159999981 11.318 71.82637320000114 11.152 74.2270815000009 11.268 65.98871819999879 11.088 73.86368750000116 11.117 74.15935480000134 11.311)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.3483 2 0.4578 3 0.801 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.6976 3 0.6363 10 0.2549 2 0.0731 3 0.2039 9 0.7544 3 0.1836 2 0.7061 3 0.6075 1 0.3884 3 0.4982 3)
Average genome size in population (length): 42.257
Average program size in population (points): 43.257
Average percent parens in population: 0.025
Minimum age in population: 108.9968383634
Maximum age in population: 113.5449860107022
Average age in population: 111.4534212066739
Median age in population: 111.5009878629487
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.778
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.778
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 97240548
--- Timings ---
Current time: 1529615687048 milliseconds
Total Time:         215.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        97.0 seconds, 45.0%
Fitness Testing:     92.7 seconds, 43.0%
Report:              25.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_swap} {:instruction integer_sub} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_min} {:instruction in2} {:instruction -27} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_add} {:instruction float_swap} {:instruction integer_yank} {:instruction integer_max} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_yank} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction in1} {:instruction tagged_9950} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction integer_add})
Best program: (float_swap float_swap integer_sub integer_add float_dup_items integer_swap float_dup_times float_yankdup integer_yank integer_dup_items integer_div integer_min in2 -27 float_yankdup integer_flush float_inc float_yankdup float_tan integer_yank integer_inc float_add float_swap integer_yank integer_max tagged_70 float_dup_items float_yankdup float_yank float_sub float_yank integer_shove float_add in1 tagged_29 float_yank integer_inc float_yank integer_shove float_add in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer in1 tagged_9950 float_frominteger integer_fromfloat integer_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2409.289700399995
Median total errors in population: 286.7425
Error averages by case: (86.13982070000021 11.264 85.19074449999887 11.342 79.61943330000159 11.111 83.79504179999996 11.172 85.1181240000009 11.295 86.35576260000008 11.127 87.7300890000014 11.255 81.93994819999924 11.181 87.06308920000153 11.256 85.46569900000026 11.247 84.35085000000026 11.204 85.77351680000004 12.032 80.95063360000155 11.275 84.04435920000049 11.256 85.7700495999996 11.276 82.2376754999987 11.181 83.59415589999992 11.13 87.51744789999933 11.395 89.41224759999847 11.101 89.05371440000114 11.375 84.70275999999996 11.211 87.55219609999973 11.304 81.34750249999867 11.132 86.14595720000003 11.157 86.77988180000143 11.36)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.6517 8 0.4578 9 0.199 10 0.2168 9 0.7863 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.4996 10 0.3024 9 0.3637 10 0.2549 9 0.0731 9 0.2039 10 0.2456 10 0.1836 9 0.2939 8 0.6075 9 0.3884 10 0.4982 9)
Average genome size in population (length): 42.335
Average program size in population (points): 43.335
Average percent parens in population: 0.024
Minimum age in population: 109.9968383634
Maximum age in population: 114.8134406587807
Average age in population: 112.9229149475264
Median age in population: 112.9436968202072
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.791
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.791
Total error diversity:				 0.037
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 98299798
--- Timings ---
Current time: 1529615689568 milliseconds
Total Time:         218.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        98.2 seconds, 45.0%
Fitness Testing:     93.7 seconds, 43.0%
Report:              26.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_div} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_add} {:instruction float_add} {:instruction tag_float_575} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction float_yank} {:instruction integer_add} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_add} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_frominteger} {:instruction in2} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction in1} {:instruction print_integer} {:instruction float_yank} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction tagged_983})
Best program: (integer_fromfloat integer_inc float_div integer_dec integer_dup integer_add float_add tag_float_575 integer_max print_float float_shove float_yank integer_add integer_stackdepth integer_dup_items tagged_70 float_dup_items float_yankdup float_yank integer_dup float_yank float_add float_sub float_yank float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_dec float_frominteger in2 float_frominteger in2 integer_add float_flush in1 print_integer float_yank float_yank float_sub float_yank tagged_983)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2712.965822599995
Median total errors in population: 286.7425
Error averages by case: (98.05630980000014 11.305 96.94099839999856 11.395 93.31596640000205 11.097 96.85142949999994 11.223 97.0478145000012 11.342 100.74317180000013 11.134 100.62647200000168 11.286 92.40953669999917 11.186 97.64121800000171 11.303 97.3852284000002 11.28 97.17288500000053 11.225 95.81091220000005 12.04 90.08761400000176 11.302 96.57085560000029 11.28 96.59719039999963 11.318 95.06301949999875 11.226 93.56170169999992 11.134 100.45378999999893 11.467 100.63376179999831 11.115 102.06917040000094 11.435 97.53059600000013 11.237 100.36872289999984 11.36 92.08626139999868 11.138 102.00229640000009 11.166 99.51989980000141 11.425)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 10 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 42.277
Average program size in population (points): 43.277
Average percent parens in population: 0.024
Minimum age in population: 111.5435648273506
Maximum age in population: 116.4962309608389
Average age in population: 114.4409901386741
Median age in population: 114.5159586030293
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.766
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.766
Total error diversity:				 0.045
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 99357573
--- Timings ---
Current time: 1529615692103 milliseconds
Total Time:         220.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        99.4 seconds, 45.1%
Fitness Testing:     94.7 seconds, 42.9%
Report:              26.3 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_inc} {:instruction float_mod} {:instruction float_shove} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_add} {:instruction integer_sub} {:instruction float_flush} {:instruction tag_integer_956} {:instruction float_min} {:instruction integer_max} {:instruction integer_inc} {:instruction float_add} {:instruction float_yankdup} {:instruction float_cos} {:instruction float_dup} {:instruction float_cos} {:instruction float_div} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_max} {:instruction integer_min} {:instruction integer_max} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction -55} {:instruction integer_shove} {:instruction float_cos} {:instruction float_yank} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_tan} {:instruction print_integer} {:instruction float_add})
Best program: (float_div float_max float_inc float_mod float_shove float_max in1 tagged_70 float_dup_items integer_add integer_sub float_flush tag_integer_956 float_min integer_max integer_inc float_add float_yankdup float_cos float_dup float_cos float_div integer_fromfloat integer_inc integer_max integer_min integer_max integer_fromfloat float_pop -55 integer_shove float_cos float_yank float_tan float_yank float_add in1 tagged_104 integer_yankdup float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div float_tan print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2716.729920699995
Median total errors in population: 286.7425
Error averages by case: (98.59591970000047 11.329 99.51470319999841 11.439 86.80484960000189 11.115 96.59095040000021 11.219 98.84194670000112 11.388 98.61896719999982 11.131 100.11407900000181 11.321 94.09927839999905 11.233 99.87479880000201 11.322 97.51474100000047 11.307 96.09390250000078 11.234 99.39520000000005 12.025 88.10017500000166 11.338 95.93985400000058 11.312 97.06907359999963 11.357 94.83655919999883 11.226 96.00944819999992 11.163 100.56249759999876 11.518 102.41282029999816 11.098 102.13792480000117 11.47 96.43651399999982 11.256 100.19042899999957 11.393 95.30365209999879 11.157 100.15923839999977 11.19 98.49439800000133 11.477)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 8 0.1122 4 0.4996 5 0.3024 5 0.3637 11 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 42.052
Average program size in population (points): 43.052
Average percent parens in population: 0.025
Minimum age in population: 112.8687328574066
Maximum age in population: 118.0241495858854
Average age in population: 115.9122976271017
Median age in population: 115.960185862346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.808
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.808
Total error diversity:				 0.058
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 100410423
--- Timings ---
Current time: 1529615694692 milliseconds
Total Time:         223.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       100.7 seconds, 45.2%
Fitness Testing:     95.6 seconds, 42.9%
Report:              26.6 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction float_max} {:instruction float_min} {:instruction integer_add} {:instruction in2} {:instruction float_yank} {:instruction integer_dup} {:instruction float_cos} {:instruction tagged_209} {:instruction integer_min} {:instruction float_mult} {:instruction integer_min} {:instruction integer_min} {:instruction float_yank} {:instruction float_tan} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction -17} {:instruction in2} {:instruction integer_add} {:instruction float_cos} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_min} {:instruction integer_rot})
Best program: (float_dup_items float_max float_min integer_add in2 float_yank integer_dup float_cos tagged_209 integer_min float_mult integer_min integer_min float_yank float_tan in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc -17 in2 integer_add float_cos float_max integer_fromfloat float_swap integer_min integer_rot)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2948.7734849999947
Median total errors in population: 286.7425
Error averages by case: (107.85806820000064 11.35 107.25701049999776 11.445 95.21803200000224 11.141 105.33127040000052 11.239 107.01875450000136 11.383 107.04012319999966 11.169 107.50546200000224 11.332 102.88656719999854 11.235 107.47392760000243 11.343 107.1393040000007 11.324 106.65270600000132 11.279 106.61256640000003 12.049 104.61727740000201 11.356 106.30935200000083 11.342 109.40981919999963 11.358 104.59758239999876 11.241 104.26456689999992 11.186 109.7519127999983 11.525 110.07613059999757 11.142 111.62990720000164 11.491 106.99906479999952 11.289 109.74860459999925 11.42 104.89220749999866 11.181 106.32585879999954 11.211 108.6384088000014 11.488)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.4578 4 0.199 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 41.831
Average program size in population (points): 42.831
Average percent parens in population: 0.025
Minimum age in population: 114.8336133055905
Maximum age in population: 119.3437330845918
Average age in population: 117.4143012062074
Median age in population: 117.4702576004154
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.048
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 101457298
--- Timings ---
Current time: 1529615697228 milliseconds
Total Time:         225.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.0 seconds, 45.2%
Fitness Testing:     96.6 seconds, 42.8%
Report:              26.9 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_sub} {:instruction integer_add} {:instruction float_shove} {:instruction float_cos} {:instruction float_min} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_yank} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_flush} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_tan} {:instruction in1} {:instruction print_integer} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_rot})
Best program: (float_yankdup integer_sub integer_add float_shove float_cos float_min in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_sub float_yank in1 tagged_70 float_dup_items float_frominteger integer_div in1 print_integer float_flush integer_div in1 tagged_70 float_shove integer_fromfloat in2 integer_add float_tan in1 print_integer integer_mod integer_sub float_rot)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2257.332581999995
Median total errors in population: 286.7425
Error averages by case: (80.79304049999956 11.263 77.19074179999937 11.365 73.00730240000178 11.098 76.11547289999923 11.188 76.8333572000011 11.303 80.35601580000072 11.121 80.45729300000094 11.251 73.91766530000022 11.185 80.48773030000108 11.26 79.95969899999957 11.241 79.24965350000004 11.186 80.70937280000004 12.025 77.2591946000017 11.276 78.9988595999998 11.255 81.61235199999963 11.285 75.15817869999884 11.184 75.10979659999991 11.118 82.57030169999952 11.417 83.43804369999894 11.081 84.18373200000079 11.375 79.63594360000062 11.195 82.41660830000032 11.298 73.65951089999875 11.121 81.41384120000069 11.158 81.18187460000132 11.368)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 42.001
Average program size in population (points): 43.001
Average percent parens in population: 0.025
Minimum age in population: 116.0525560353188
Maximum age in population: 120.927811878367
Average age in population: 118.8599152794371
Median age in population: 118.9099946688371
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.792
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.792
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 102508361
--- Timings ---
Current time: 1529615699715 milliseconds
Total Time:         228.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       103.1 seconds, 45.2%
Fitness Testing:     97.7 seconds, 42.8%
Report:              27.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_max} {:instruction integer_swap} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_add} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction tag_float_371} {:instruction float_shove} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_dup_times} {:instruction integer_yank} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_yank} {:instruction float_dup_items} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_cos} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction in1} {:instruction tagged_9950} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction integer_dup_items})
Best program: (integer_fromfloat float_max integer_swap float_cos integer_sub integer_add print_float float_cos float_yank tag_float_371 float_shove float_dup_items float_dup_items float_swap float_dup_times integer_yank float_yank float_sub float_yank integer_shove float_add in1 tagged_29 float_yank float_dup_items integer_shove float_add in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth float_cos float_frominteger in2 integer_add integer_div in1 print_integer in1 tagged_9950 float_frominteger integer_fromfloat integer_dup_items)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2319.3207294999947
Median total errors in population: 286.7425
Error averages by case: (83.09055139999974 11.235 80.21569369999914 11.317 72.20465280000187 11.089 80.37239939999935 11.161 81.03442740000118 11.29 83.33118460000046 11.116 82.62877100000127 11.234 78.68481539999969 11.168 81.98130290000137 11.245 82.4971611999998 11.224 82.0068150000001 11.19 80.31348800000004 12.022 78.29241900000191 11.247 81.80736399999988 11.228 83.52783999999959 11.252 79.7799473999987 11.162 79.54490099999991 11.128 84.24081339999933 11.363 84.13845149999845 11.092 85.63450400000094 11.34 82.42692400000044 11.205 84.34555100000009 11.291 79.23932499999863 11.114 83.27706440000017 11.144 83.50136200000144 11.346)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.3483 6 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 9 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 42.053
Average program size in population (points): 43.053
Average percent parens in population: 0.025
Minimum age in population: 117.2447791747931
Maximum age in population: 122.3472112193136
Average age in population: 120.2993625284109
Median age in population: 120.3554602635464
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.765
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.765
Total error diversity:				 0.046
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 103560619
--- Timings ---
Current time: 1529615702486 milliseconds
Total Time:         230.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       104.3 seconds, 45.2%
Fitness Testing:     98.9 seconds, 42.8%
Report:              27.5 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_sub} {:instruction integer_mult} {:instruction float_tan} {:instruction integer_sub} {:instruction float_dup} {:instruction print_float} {:instruction float_cos} {:instruction float_cos} {:instruction tag_float_575} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_sin} {:instruction float_add} {:instruction integer_add} {:instruction integer_div} {:instruction integer_min} {:instruction float_yank} {:instruction tag_integer_563} {:instruction integer_max} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction float_cos} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction float_frominteger} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_dup_items} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_dup})
Best program: (float_swap float_sub integer_mult float_tan integer_sub float_dup print_float float_cos float_cos tag_float_575 float_cos float_yank float_sub float_sin float_add integer_add integer_div integer_min float_yank tag_integer_563 integer_max integer_dup integer_add integer_div in1 print_integer float_add integer_yank integer_swap integer_inc integer_dup_items in2 float_cos float_yank float_add in1 float_frominteger float_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_dup_items in2 integer_add integer_div in1 print_integer float_dup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2458.351606999995
Median total errors in population: 286.7425
Error averages by case: (88.91404049999981 11.279 87.09998119999922 11.389 79.04436800000151 11.092 86.00464629999956 11.194 86.68884210000093 11.328 88.69530480000046 11.116 90.484487000001 11.273 83.6397372999996 11.191 88.0305166000011 11.272 88.03669899999986 11.262 87.10185000000003 11.202 87.63745920000004 12.023 78.98174580000138 11.279 86.7783600000001 11.271 84.99295679999962 11.305 84.69414979999885 11.2 85.12045419999993 11.128 90.6241554999996 11.445 91.02024759999895 11.084 92.26171440000056 11.408 87.39976000000038 11.212 90.49019610000015 11.335 83.6703225999988 11.135 89.72073400000038 11.158 89.22987820000128 11.408)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 7 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 41.89
Average program size in population (points): 42.89
Average percent parens in population: 0.025
Minimum age in population: 118.3358760073775
Maximum age in population: 123.7639752139788
Average age in population: 121.7297075124141
Median age in population: 121.7776690665151
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.792
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.792
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 104608694
--- Timings ---
Current time: 1529615705093 milliseconds
Total Time:         233.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.6 seconds, 45.2%
Fitness Testing:    100.0 seconds, 42.8%
Report:              27.9 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_inc} {:instruction float_swap} {:instruction print_integer} {:instruction integer_dup})
Best program: (print_integer integer_dup_times integer_fromfloat in1 integer_pop integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add float_inc float_swap print_integer integer_dup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 2407.2708869999956
Median total errors in population: 286.7425
Error averages by case: (86.16259140000038 11.265 86.1176884999986 11.357 80.78399130000177 11.096 84.60926770000019 11.187 85.85672640000101 11.3 86.83752109999985 11.109 88.34293080000168 11.263 81.89085439999914 11.182 85.64975380000169 11.272 85.1642649000003 11.247 84.49921540000052 11.189 85.02090750000004 12.032 76.03314620000148 11.274 84.18841780000047 11.253 82.63354059999963 11.293 83.70678289999886 11.193 83.41823939999992 11.119 87.65178249999893 11.421 88.54561809999834 11.083 89.08916160000125 11.376 84.92454599999994 11.197 87.48199719999961 11.308 82.81132409999876 11.12 87.88980379999973 11.151 86.2938136000013 11.38)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 3 0.4578 2 0.199 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 10 0.2456 2 0.1836 2 0.2939 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 41.542
Average program size in population (points): 42.542
Average percent parens in population: 0.025
Minimum age in population: 119.3358760073775
Maximum age in population: 125.299861403818
Average age in population: 123.1600265398869
Median age in population: 123.2318624849657
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.783
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.783
Total error diversity:				 0.046
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 105648669
--- Timings ---
Current time: 1529615707368 milliseconds
Total Time:         235.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.7 seconds, 45.2%
Fitness Testing:    100.9 seconds, 42.8%
Report:              28.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_shove} {:instruction integer_flush} {:instruction float_div} {:instruction integer_min} {:instruction integer_max} {:instruction in2} {:instruction tag_float_501} {:instruction float_yankdup} {:instruction -76} {:instruction float_add} {:instruction in1} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction float_yank} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_shove} {:instruction in1} {:instruction tagged_9950} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction integer_swap} {:instruction print_integer})
Best program: (integer_fromfloat integer_inc integer_flush integer_shove integer_flush float_div integer_min integer_max in2 tag_float_501 float_yankdup -76 float_add in1 float_yank float_add in1 float_yank in2 integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_rot integer_shove in1 tagged_9950 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div integer_swap print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2084.8593081999948
Median total errors in population: 286.7425
Error averages by case: (72.99745239999967 11.244 71.23307870000009 11.322 67.5738864000012 11.083 70.7695517999992 11.179 71.42491230000073 11.287 72.82281120000057 11.115 73.65509900000042 11.228 68.63610640000043 11.151 74.2220207000006 11.25 72.45111919999954 11.223 72.30877999999954 11.182 73.51363200000004 12.046 68.50853120000103 11.244 71.84236799999971 11.227 71.50523519999966 11.249 69.93430699999907 11.181 69.56378249999992 11.117 74.39369059999996 11.37 76.56426709999938 11.104 75.95855680000032 11.352 72.68108800000064 11.19 74.53461200000028 11.284 68.94129249999901 11.121 73.75378320000053 11.137 73.8493440000011 11.334)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.4578 4 0.199 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 41.621
Average program size in population (points): 42.621
Average percent parens in population: 0.025
Minimum age in population: 121.9627094148972
Maximum age in population: 126.7621522882712
Average age in population: 124.6437831241593
Median age in population: 124.7019732624149
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.779
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.779
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 106690132
--- Timings ---
Current time: 1529615709894 milliseconds
Total Time:         238.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       107.8 seconds, 45.3%
Fitness Testing:    102.0 seconds, 42.8%
Report:              28.3 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_swap} {:instruction integer_add} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_max} {:instruction integer_max} {:instruction in2} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_dec} {:instruction float_max} {:instruction 94} {:instruction float_inc} {:instruction integer_max} {:instruction integer_min} {:instruction integer_min} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction in1} {:instruction tagged_9950} {:instruction float_frominteger})
Best program: (float_swap float_swap integer_add integer_sub integer_shove float_max integer_max in2 integer_max integer_min float_mult integer_div integer_min integer_dec float_max 94 float_inc integer_max integer_min integer_min float_yank integer_shove float_add in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer in1 tagged_9950 float_frominteger)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2745.0027529999948
Median total errors in population: 286.7425
Error averages by case: (101.0481270000005 11.312 97.30832739999857 11.383 92.81649890000179 11.123 99.29005230000016 11.204 97.291241600001 11.336 99.71822429999992 11.148 101.50099400000171 11.295 93.67514979999892 11.195 96.52196680000174 11.303 100.19773720000045 11.291 98.92710740000068 11.238 95.10001950000004 12.039 94.24697140000164 11.307 98.18587780000061 11.297 100.0858627999996 11.322 98.07054719999879 11.218 95.14184259999992 11.139 101.96367759999885 11.468 99.3272750999984 11.119 104.30978640000126 11.436 99.13748809999977 11.252 102.77289499999945 11.368 93.4059973999988 11.144 100.62132579999987 11.187 101.78075960000136 11.433)
Error minima by case: (0.3901 5 0.2373 2 0.1168 4 0.0298 9 0.3483 3 0.4578 5 0.199 5 0.2168 2 0.2137 9 0.4958 5 0.1965 4 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 2 0.0731 6 0.2039 9 0.2456 5 0.1836 4 0.2939 5 0.3925 1 0.3884 5 0.4982 5)
Average genome size in population (length): 42.01
Average program size in population (points): 43.01
Average percent parens in population: 0.025
Minimum age in population: 122.9627094148972
Maximum age in population: 128.1111256194401
Average age in population: 126.1674181052548
Median age in population: 126.2228633487544
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.785
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.785
Total error diversity:				 0.043
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 107741782
--- Timings ---
Current time: 1529615712559 milliseconds
Total Time:         240.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.1 seconds, 45.3%
Fitness Testing:    103.0 seconds, 42.8%
Report:              28.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_cos} {:instruction integer_min} {:instruction integer_pop} {:instruction tagged_70} {:instruction integer_max} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_yank} {:instruction float_yank} {:instruction in2} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction float_yank} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_shove} {:instruction in1} {:instruction tagged_9950} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction integer_swap} {:instruction print_integer})
Best program: (integer_add float_dup_items integer_swap float_cos integer_min integer_pop tagged_70 integer_max float_dup_items integer_swap float_dup_times integer_yank float_yank in2 float_yank integer_shove float_add in1 float_yank in2 integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_rot integer_shove in1 tagged_9950 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div integer_swap print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2515.5289547999955
Median total errors in population: 286.7425
Error averages by case: (91.05265039999979 11.303 88.26087639999946 11.403 81.36901760000144 11.112 87.73933539999962 11.217 88.15422200000067 11.345 90.41605160000047 11.138 90.89228800000093 11.288 84.07376099999956 11.199 89.73501250000093 11.301 90.17020319999985 11.282 89.6952779999999 11.225 89.28022880000005 12.043 88.43940920000139 11.312 89.22235680000003 11.286 92.96077119999963 11.325 86.50864849999888 11.213 85.26341179999991 11.143 92.86322859999963 11.477 92.90482029999906 11.107 94.62796000000075 11.438 90.03322880000034 11.229 92.76707780000001 11.364 84.00338769999883 11.145 90.91734560000043 11.182 91.6733836000013 11.428)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 3 0.4578 2 0.801 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.1836 2 0.7061 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 41.353
Average program size in population (points): 42.353
Average percent parens in population: 0.025
Minimum age in population: 123.9627094148972
Maximum age in population: 129.8011640016289
Average age in population: 127.6480748398131
Median age in population: 127.7178524041313
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.78
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.78
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 108777257
--- Timings ---
Current time: 1529615715094 milliseconds
Total Time:         243.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.4 seconds, 45.3%
Fitness Testing:    104.0 seconds, 42.7%
Report:              29.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_cos} {:instruction tag_float_9910} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_sub} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction integer_div} {:instruction float_add} {:instruction float_mult} {:instruction integer_mult} {:instruction float_sub} {:instruction in1} {:instruction integer_dup_items} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction in2})
Best program: (integer_fromfloat integer_fromfloat integer_inc integer_flush integer_swap integer_swap float_dup_items float_cos tag_float_9910 float_yank float_add in1 tagged_70 integer_fromfloat float_flush integer_stackdepth float_pop float_sub float_yank integer_shove float_add in1 tagged_29 float_yank float_sub float_yank integer_div float_add float_mult integer_mult float_sub in1 integer_dup_items float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer in2)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2497.977713499995
Median total errors in population: 286.7425
Error averages by case: (90.51748010000014 11.269 89.08342399999853 11.353 81.50530240000182 11.106 87.24763189999993 11.183 88.57419950000123 11.298 89.93201580000014 11.125 91.0100940000016 11.26 86.362252799999 11.185 89.38308920000179 11.27 89.7167242000002 11.254 86.9756535000005 11.204 87.67557440000004 12.038 86.43755200000184 11.284 88.2493592000004 11.263 91.8409567999996 11.293 85.33222529999873 11.185 86.71034879999992 11.129 91.90986309999867 11.419 90.25685929999835 11.098 93.37071440000123 11.392 88.3551272 11.208 91.83619609999982 11.321 83.61951169999868 11.135 89.76267600000003 11.169 90.4918818000014 11.38)
Error minima by case: (0.3901 5 0.2373 4 0.1168 3 0.0298 10 0.3483 4 0.4578 4 0.199 4 0.2168 3 0.2137 10 0.4958 5 0.1965 3 0.0288 10 0.1122 2 0.4996 4 0.3024 4 0.3637 10 0.2549 3 0.0731 5 0.2039 9 0.2456 4 0.1836 4 0.2939 5 0.6075 3 0.3884 4 0.4982 4)
Average genome size in population (length): 41.238
Average program size in population (points): 42.238
Average percent parens in population: 0.025
Minimum age in population: 124.9627094148972
Maximum age in population: 131.1777923675639
Average age in population: 129.1034959432047
Median age in population: 129.1549493535884
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.751
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.751
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 109809857
--- Timings ---
Current time: 1529615717486 milliseconds
Total Time:         245.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       111.6 seconds, 45.4%
Fitness Testing:    105.0 seconds, 42.7%
Report:              29.3 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_add} {:instruction float_add} {:instruction integer_pop} {:instruction float_shove} {:instruction float_cos} {:instruction float_yank} {:instruction integer_dec} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction print_integer} {:instruction float_add} {:instruction in1} {:instruction tagged_9960} {:instruction float_yank} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_shove} {:instruction integer_sub} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_dec} {:instruction tagged_39} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_flush} {:instruction in1} {:instruction print_integer})
Best program: (integer_flush integer_dec integer_min integer_fromfloat float_flush integer_flush integer_flush float_cos float_yank float_sub integer_dup integer_add float_add integer_pop float_shove float_cos float_yank integer_dec float_sub integer_fromfloat integer_rot print_integer float_add in1 tagged_9960 float_yank integer_inc float_yank integer_shove integer_sub in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_dec tagged_39 float_dup_items float_yankdup float_yank float_sub float_yank float_add in1 tagged_70 float_shove integer_fromfloat in2 integer_add float_flush in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2600.0331545999948
Median total errors in population: 286.7425
Error averages by case: (95.24691970000012 11.274 90.75991599999898 11.367 84.53666720000145 11.101 89.19605979999963 11.182 90.38514670000099 11.299 93.20022040000026 11.115 93.53908900000125 11.263 87.2657981999993 11.185 95.3585166000015 11.268 94.33574100000018 11.252 93.86468850000036 11.196 92.53343040000004 12.03 88.51529700000167 11.281 93.38785480000037 11.264 94.20025919999959 11.296 88.53650839999875 11.193 88.55669679999991 11.113 98.23371689999911 11.439 97.49004369999844 11.086 99.73569680000104 11.385 94.18477960000008 11.205 98.02737169999973 11.306 87.71105519999868 11.117 92.67779200000022 11.165 96.77988900000139 11.392)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 9 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 41.125
Average program size in population (points): 42.125
Average percent parens in population: 0.026
Minimum age in population: 125.9627094148972
Maximum age in population: 132.3773755865835
Average age in population: 130.5710326045937
Median age in population: 130.6385162480427
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 110839957
--- Timings ---
Current time: 1529615719986 milliseconds
Total Time:         248.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.8 seconds, 45.4%
Fitness Testing:    105.9 seconds, 42.6%
Report:              29.6 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction integer_flush} {:instruction float_swap} {:instruction in2} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction float_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction tagged_70} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_div} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_dup})
Best program: (integer_flush float_cos float_yank float_sub integer_flush float_swap in2 float_tan integer_stackdepth float_min float_mult integer_div integer_min integer_max integer_min float_mult integer_div integer_min float_tan float_yank float_add in1 tagged_104 float_add integer_yank in1 tagged_70 integer_flush integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap float_div integer_yank float_yankdup integer_inc integer_stackdepth in2 float_dup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2814.973669399995
Median total errors in population: 286.7425
Error averages by case: (102.77996920000014 11.31 101.7378239999986 11.374 90.2743824000019 11.104 101.1354193999999 11.217 102.07649600000119 11.328 102.38546080000017 11.14 103.42446700000153 11.295 98.10078399999922 11.195 103.23307280000175 11.313 102.3712536000002 11.274 102.34488500000067 11.237 103.12765280000004 12.057 94.93782860000175 11.291 101.89735520000033 11.289 98.44879519999962 11.31 99.77212759999883 11.215 98.91182179999991 11.143 103.41357069999906 11.449 104.39115009999827 11.14 105.94343360000123 11.428 102.69759599999999 11.248 104.45225339999969 11.365 99.22559999999872 11.15 102.5245776000001 11.176 102.9058926000014 11.412)
Error minima by case: (0.3901 5 0.2373 4 0.1168 3 0.0298 10 0.3483 3 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 4 0.1965 4 0.0288 9 0.1122 4 0.5004 4 0.6976 5 0.3637 10 0.2549 3 0.0731 5 0.2039 9 0.7544 5 0.8164 4 0.7061 5 0.3925 3 0.3884 4 0.4982 4)
Average genome size in population (length): 40.237
Average program size in population (points): 41.237
Average percent parens in population: 0.026
Minimum age in population: 128.778969064761
Maximum age in population: 134.0246755995963
Average age in population: 132.064683081142
Median age in population: 132.1265190860716
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 111847457
--- Timings ---
Current time: 1529615722561 milliseconds
Total Time:         251.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       114.1 seconds, 45.5%
Fitness Testing:    106.9 seconds, 42.6%
Report:              29.9 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_max} {:instruction print_float} {:instruction float_sin} {:instruction float_pop} {:instruction float_add} {:instruction in1} {:instruction float_yank} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction in2} {:instruction integer_min} {:instruction float_min} {:instruction float_min} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_yank} {:instruction in1} {:instruction tagged_200} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_flush} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_tan} {:instruction in1} {:instruction print_integer} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_rot})
Best program: (float_div float_max float_max print_float float_sin float_pop float_add in1 float_yank integer_yankdup integer_flush in2 integer_min float_min float_min in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_sub float_yank in1 tagged_200 float_dup_items float_frominteger integer_div in1 print_integer float_flush integer_div in1 tagged_70 integer_yankdup integer_fromfloat in2 integer_add float_tan in1 print_integer integer_mod integer_sub float_rot)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2178.2980328999947
Median total errors in population: 286.7425
Error averages by case: (78.45899099999937 11.25 73.43154929999989 11.35 68.37860160000153 11.071 72.26968509999885 11.199 73.22379830000074 11.3 77.00938920000088 11.097 77.3346910000005 11.226 70.39949860000027 11.164 78.31687550000075 11.277 77.79218639999952 11.232 77.06342199999958 11.179 78.46848800000004 12.038 71.28074580000151 11.256 76.61836319999955 11.239 77.32465439999963 11.266 71.24907399999888 11.195 70.9908612999999 11.099 80.38559409999974 11.407 81.00985929999902 11.086 82.05476720000047 11.365 77.37529120000075 11.188 80.33166930000029 11.308 69.34521769999878 11.108 77.5998992000009 11.137 79.17486020000133 11.373)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 10 0.4958 4 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 10 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 3 0.4982 5)
Average genome size in population (length): 39.384
Average program size in population (points): 40.384
Average percent parens in population: 0.027
Minimum age in population: 131.340023214792
Maximum age in population: 135.1956468809529
Average age in population: 133.572351121698
Median age in population: 133.6164963552159
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.756
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.756
Total error diversity:				 0.043
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 112833382
--- Timings ---
Current time: 1529615724966 milliseconds
Total Time:         253.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.3 seconds, 45.5%
Fitness Testing:    107.8 seconds, 42.5%
Report:              30.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_max} {:instruction integer_swap} {:instruction float_tan} {:instruction float_pop} {:instruction float_add} {:instruction integer_sub} {:instruction integer_add} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction float_pop} {:instruction float_mod} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_dec} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_add} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction in1} {:instruction tagged_42} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer})
Best program: (float_div float_max float_max integer_swap float_tan float_pop float_add integer_sub integer_add print_float float_cos float_yank float_pop float_mod integer_max float_dup_items float_rot integer_dec float_yankdup float_sub float_add float_yankdup float_yank float_sub float_yank float_add in1 tagged_70 float_shove in1 tagged_42 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger integer_shove float_add in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2436.327668399995
Median total errors in population: 286.7425
Error averages by case: (89.39726030000006 11.27 83.92877569999895 11.377 79.80634560000155 11.105 82.56350559999959 11.197 83.41680610000101 11.315 87.38614340000028 11.118 88.76613720000128 11.265 78.55716919999959 11.188 86.73537960000132 11.29 88.39970740000012 11.257 87.56465350000033 11.202 85.96071840000005 12.043 83.51141900000141 11.29 87.2488596000002 11.269 87.54579039999962 11.302 81.79780499999886 11.198 79.9761214999999 11.129 91.25422859999911 11.448 90.31867489999867 11.094 92.74597760000103 11.4 87.92494360000018 11.213 91.08890219999975 11.338 80.3200831999988 11.125 88.42188440000017 11.166 89.69037640000128 11.401)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 4 0.5422 4 0.801 4 0.2168 3 0.2137 10 0.4958 4 0.1965 4 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 10 0.7544 5 0.8164 4 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 39.479
Average program size in population (points): 40.479
Average percent parens in population: 0.026
Minimum age in population: 132.4303044688136
Maximum age in population: 136.9070882527686
Average age in population: 135.0470593187702
Median age in population: 135.1030121620543
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.042
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 113821995
--- Timings ---
Current time: 1529615727343 milliseconds
Total Time:         255.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.5 seconds, 45.5%
Fitness Testing:    108.7 seconds, 42.5%
Report:              30.4 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_cos} {:instruction integer_min} {:instruction float_tan} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction integer_dup} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_dup_times} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_dup_items} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_9960} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_dup_times} {:instruction integer_flush} {:instruction float_yank} {:instruction float_dup_items} {:instruction float_sub} {:instruction float_swap} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_add} {:instruction integer_yank} {:instruction float_yankdup})
Best program: (integer_fromfloat float_cos integer_min float_tan float_rot integer_dec integer_min integer_fromfloat float_flush integer_flush integer_flush float_cos float_yank float_sub integer_dup float_dup_items float_swap float_dup_times integer_yank print_integer integer_dup_items float_yank integer_shove float_add in1 tagged_9960 integer_max float_dup_items float_swap float_dup_times integer_flush float_yank float_dup_items float_sub float_swap float_add in1 tagged_70 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap float_add integer_yank float_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2141.521685999995
Median total errors in population: 286.7425
Error averages by case: (76.01843059999969 11.258 74.42348249999934 11.353 68.4706016000014 11.097 73.43224379999947 11.178 73.84001710000081 11.314 75.71364240000062 11.12 76.9472980000008 11.256 69.5588657 11.191 75.71816590000101 11.27 75.04720319999973 11.24 73.37826049999968 11.193 76.09874720000005 12.024 69.29053120000134 11.269 73.3258579999998 11.252 74.57363039999962 11.276 71.43880879999875 11.182 71.57773499999992 11.136 77.85452099999985 11.407 79.15328659999903 11.088 79.39899520000056 11.376 73.76531080000059 11.206 77.50472660000024 11.323 70.49472149999868 11.131 76.62522960000062 11.162 76.1923728000014 11.377)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 10 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 39.647
Average program size in population (points): 40.647
Average percent parens in population: 0.026
Minimum age in population: 133.4303044688136
Maximum age in population: 138.5324095342078
Average age in population: 136.4930465191892
Median age in population: 136.5673013400776
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.766
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.766
Total error diversity:				 0.048
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 114815495
--- Timings ---
Current time: 1529615729872 milliseconds
Total Time:         258.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.8 seconds, 45.6%
Fitness Testing:    109.7 seconds, 42.5%
Report:              30.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction float_pop} {:instruction float_add} {:instruction integer_sub} {:instruction integer_add} {:instruction print_float} {:instruction float_cos} {:instruction float_yank} {:instruction float_pop} {:instruction float_mod} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_dec} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_add} {:instruction integer_dup_times} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_swap} {:instruction -98.93593451175433} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_dup})
Best program: (float_div float_max float_tan integer_min float_tan float_pop float_add integer_sub integer_add print_float float_cos float_yank float_pop float_mod integer_max float_dup_items float_rot integer_dec float_yankdup float_sub float_add integer_dup_times float_yank float_sub float_yank float_add in1 tagged_70 float_shove integer_fromfloat integer_stackdepth integer_dup_items float_frominteger integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer integer_sub integer_yank integer_swap -98.93593451175433 integer_yank float_yankdup integer_inc integer_stackdepth in2 float_dup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2641.1922480999947
Median total errors in population: 286.7425
Error averages by case: (95.73726030000041 11.289 93.68409539999821 11.345 85.799484800002 11.136 93.00404520000005 11.187 93.68822660000136 11.31 94.9117625999999 11.146 95.09348700000203 11.276 90.42490319999878 11.194 95.70543990000218 11.272 95.23670740000045 11.269 94.98365350000095 11.238 93.96614240000004 12.047 92.98485800000209 11.297 94.67485960000063 11.278 96.66177119999959 11.304 92.48248989999867 11.191 92.23491979999991 11.15 96.97015549999865 11.417 97.48100469999795 11.128 98.33171440000125 11.399 95.37894359999976 11.245 97.07078389999958 11.344 90.84153499999859 11.151 95.27512239999984 11.179 96.37988180000147 11.397)
Error minima by case: (0.3901 9 0.2373 8 0.1168 9 0.0298 9 0.3483 8 0.4578 9 0.199 9 0.2168 9 0.2137 9 0.4958 9 0.1965 9 0.0288 9 0.1122 8 0.4996 10 0.3024 10 0.3637 10 0.2549 9 0.0731 9 0.2039 10 0.2456 10 0.1836 9 0.2939 8 0.3925 9 0.3884 9 0.4982 9)
Average genome size in population (length): 39.148
Average program size in population (points): 40.148
Average percent parens in population: 0.027
Minimum age in population: 134.4303044688136
Maximum age in population: 139.9935906880978
Average age in population: 137.905916166357
Median age in population: 137.9750419326233
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.767
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.767
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 115796820
--- Timings ---
Current time: 1529615732470 milliseconds
Total Time:         260.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.2 seconds, 45.7%
Fitness Testing:    110.6 seconds, 42.4%
Report:              31.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction integer_flush} {:instruction float_swap} {:instruction float_yank} {:instruction float_sub} {:instruction integer_flush} {:instruction float_swap} {:instruction integer_pop} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction float_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction integer_min} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction tagged_70} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_swap} {:instruction float_div} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_dup})
Best program: (integer_flush float_cos float_yank float_sub integer_flush float_swap float_yank float_sub integer_flush float_swap integer_pop float_tan integer_stackdepth float_min float_mult integer_div integer_min integer_max integer_min float_mult integer_div integer_min float_tan float_yank float_add in1 tagged_104 float_add integer_yank in1 tagged_70 integer_flush integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_fromfloat integer_swap float_div integer_yank float_yankdup integer_inc integer_stackdepth in2 float_dup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2111.453689899995
Median total errors in population: 286.7425
Error averages by case: (74.08711179999898 11.226 72.53352479999991 11.305 66.83148480000155 11.065 72.4426983999988 11.167 73.23194990000103 11.267 73.81038920000123 11.103 74.90769100000034 11.213 68.7060714000004 11.144 74.67808920000046 11.24 73.77514439999906 11.212 73.74936949999929 11.177 73.31445920000004 12.041 68.9051848000015 11.222 72.32786919999931 11.212 72.7716543999996 11.228 70.68922339999878 11.162 70.5667541999999 11.106 76.63525200000024 11.352 77.02545149999952 11.095 78.71655679999999 11.327 73.8565372000012 11.185 77.08202420000087 11.276 68.99473579999868 11.109 74.15012240000115 11.125 76.78034040000136 11.325)
Error minima by case: (0.3901 4 0.2373 5 0.1168 3 0.0298 10 0.3483 3 0.5422 4 0.801 3 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 6 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 38.905
Average program size in population (points): 39.905
Average percent parens in population: 0.027
Minimum age in population: 136.8087314561743
Maximum age in population: 141.4046630750588
Average age in population: 139.3925911560502
Median age in population: 139.4475289291288
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.756
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.756
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 116771945
--- Timings ---
Current time: 1529615734908 milliseconds
Total Time:         263.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       120.3 seconds, 45.7%
Fitness Testing:    111.5 seconds, 42.4%
Report:              31.3 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction integer_yankdup} {:instruction 73} {:instruction float_tan} {:instruction integer_dup_items} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_yank} {:instruction in1} {:instruction tagged_9950} {:instruction float_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_min} {:instruction float_mult} {:instruction float_swap} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction tagged_671} {:instruction float_div} {:instruction float_yank} {:instruction float_yank} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_max} {:instruction float_dec} {:instruction in2} {:instruction integer_add} {:instruction integer_swap} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (float_min integer_yankdup 73 float_tan integer_dup_items float_yankdup float_sub float_yank in1 tagged_9950 float_dup_items float_dup integer_dup_items integer_inc float_min float_mult float_swap float_dup integer_swap integer_yank integer_stackdepth float_min float_frominteger integer_div float_yank integer_max integer_min float_mult tagged_671 float_div float_yank float_yank in1 tagged_70 float_dup_items integer_fromfloat integer_max float_dec in2 integer_add integer_swap in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2741.5782438999954
Median total errors in population: 286.7425
Error averages by case: (99.94905780000066 11.308 96.52545309999809 11.394 92.78802450000218 11.116 96.32401910000036 11.22 97.11661740000127 11.35 98.5507450999998 11.142 100.51567490000217 11.297 92.17078529999867 11.194 99.29848810000234 11.318 99.25738700000062 11.292 98.63362520000122 11.24 98.60769690000004 12.058 96.22074560000209 11.304 98.51067780000079 11.295 100.68731079999961 11.319 95.30394739999872 11.221 94.1140255999999 11.154 102.13742449999822 11.465 101.61609209999769 11.137 103.98817040000165 11.442 99.76847249999965 11.249 102.28872289999921 11.373 93.35241389999865 11.151 99.65976979999975 11.17 101.55889620000144 11.425)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 6 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 38.832
Average program size in population (points): 39.832
Average percent parens in population: 0.027
Minimum age in population: 138.0159161446267
Maximum age in population: 142.8448137644975
Average age in population: 140.8553905899936
Median age in population: 140.9124998042313
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.778
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.778
Total error diversity:				 0.042
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 117745045
--- Timings ---
Current time: 1529615737215 milliseconds
Total Time:         265.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.4 seconds, 45.7%
Fitness Testing:    112.5 seconds, 42.3%
Report:              31.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction tag_float_657} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (print_integer integer_fromfloat integer_stackdepth integer_fromfloat float_inc integer_flush integer_swap integer_swap integer_swap float_dup float_sub integer_dup_items float_max in1 tagged_70 float_add integer_fromfloat integer_stackdepth in1 float_frominteger in2 integer_add tag_float_657 in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2764.309371599995
Median total errors in population: 286.7425
Error averages by case: (100.52857910000029 11.322 100.00218729999862 11.399 95.34655040000182 11.132 99.14332250000012 11.215 99.40040550000094 11.347 100.90650939999999 11.149 100.89127800000162 11.305 96.79210259999907 11.212 99.8642947000017 11.32 99.76075780000028 11.296 98.90468850000057 11.247 99.26608490000004 12.053 90.76373600000164 11.316 98.82285560000038 11.311 98.31628319999963 11.335 97.23169399999878 11.218 98.49988649999992 11.165 101.99213209999904 11.488 102.15618909999839 11.119 103.50966160000127 11.451 99.32277959999993 11.261 101.94872289999965 11.378 96.28153209999871 11.164 101.08923839999994 11.191 100.72989980000138 11.444)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.6517 2 0.4578 3 0.199 3 0.2168 2 0.7863 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 10 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.6075 1 0.3884 3 0.4982 3)
Average genome size in population (length): 38.375
Average program size in population (points): 39.375
Average percent parens in population: 0.027
Minimum age in population: 139.1541722321106
Maximum age in population: 144.2403241325853
Average age in population: 142.3564338657706
Median age in population: 142.4019068367034
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.791
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.791
Total error diversity:				 0.036
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 118706645
--- Timings ---
Current time: 1529615739632 milliseconds
Total Time:         268.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.7 seconds, 45.8%
Fitness Testing:    113.4 seconds, 42.3%
Report:              32.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction integer_inc} {:instruction float_yank} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction float_rot} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction tag_float_151} {:instruction -75.86980323258065} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_dup_items} {:instruction float_shove} {:instruction float_cos} {:instruction float_sub} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction in1} {:instruction integer_add} {:instruction integer_div} {:instruction integer_yankdup} {:instruction print_integer} {:instruction float_add})
Best program: (-27 integer_inc float_yank float_cos float_yank float_sub float_rot float_sub float_dec integer_yank integer_shove tag_float_151 -75.86980323258065 integer_dec integer_div integer_fromfloat float_pop integer_dup_items float_shove float_cos float_sub float_tan float_yank float_add in1 tagged_104 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 in1 integer_add integer_div integer_yankdup print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2289.601879399995
Median total errors in population: 286.7425
Error averages by case: (81.11433159999957 11.272 79.60423109999924 11.334 76.57153600000179 11.126 78.70043259999933 11.181 79.78509190000112 11.29 81.75610020000066 11.139 82.62309400000119 11.267 76.47063759999975 11.186 80.41015770000105 11.254 80.54116119999962 11.257 80.47620799999999 11.217 80.44531520000004 12.041 77.74986780000175 11.28 79.92936479999977 11.265 81.43165439999962 11.29 77.86976179999881 11.187 77.27321389999992 11.141 82.4599595999995 11.397 83.47361639999878 11.118 84.0025040000006 11.382 80.82092400000062 11.223 82.57555100000033 11.328 77.00896499999874 11.147 82.63884120000033 11.172 82.00435840000134 11.371)
Error minima by case: (0.3901 9 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.4578 9 0.801 10 0.2168 10 0.2137 10 0.4958 9 0.1965 9 0.0288 9 0.1122 10 0.5004 10 0.3024 10 0.6363 10 0.2549 9 0.0731 10 0.2039 10 0.7544 9 0.8164 9 0.2939 8 0.3925 9 0.3884 9 0.4982 9)
Average genome size in population (length): 37.876
Average program size in population (points): 38.876
Average percent parens in population: 0.028
Minimum age in population: 141.2265007874497
Maximum age in population: 145.8895941209333
Average age in population: 143.8313181452065
Median age in population: 143.8673142999067
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.757
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.757
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 119655920
--- Timings ---
Current time: 1529615742094 milliseconds
Total Time:         270.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.0 seconds, 45.8%
Fitness Testing:    114.3 seconds, 42.2%
Report:              32.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction integer_inc} {:instruction integer_add} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_yank} {:instruction float_swap} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_min} {:instruction print_float} {:instruction integer_div} {:instruction integer_min} {:instruction float_dup_times} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction float_sub} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction print_integer})
Best program: (float_mult integer_inc integer_add integer_pop float_dup_items integer_dup_items float_dup_items integer_add float_mult float_yank float_swap float_dup integer_swap integer_yank integer_stackdepth float_min print_float integer_div integer_min float_dup_times integer_min float_mult integer_div float_frominteger float_tan float_yank float_add in1 tagged_104 float_sub in1 tagged_70 float_dup_items float_shove integer_fromfloat in2 integer_add integer_div float_dup print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2504.618945999995
Median total errors in population: 286.7425
Error averages by case: (89.57287020000044 11.254 85.7456155999988 11.353 85.10120000000168 11.083 85.9879558000001 11.202 85.09867960000079 11.29 91.51734060000003 11.103 92.56347700000158 11.249 81.82193299999926 11.162 89.7269668000017 11.282 89.84871580000059 11.234 89.75947450000069 11.185 89.85999080000005 12.044 88.42251160000151 11.267 89.14685720000072 11.245 93.3217951999996 11.281 84.78658099999883 11.197 82.79937199999992 11.104 92.17700929999896 11.413 92.88007119999841 11.102 93.9671880000013 11.378 90.08304519999965 11.191 92.2895472999994 11.31 82.69078249999876 11.108 92.39807320000001 11.139 91.51189260000133 11.364)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 4 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 3 0.4982 6)
Average genome size in population (length): 37.845
Average program size in population (points): 38.845
Average percent parens in population: 0.028
Minimum age in population: 142.8650855331084
Maximum age in population: 147.1849098840733
Average age in population: 145.2907612814836
Median age in population: 145.3297532354922
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.045
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 120604320
--- Timings ---
Current time: 1529615744505 milliseconds
Total Time:         273.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.2 seconds, 45.9%
Fitness Testing:    115.2 seconds, 42.2%
Report:              32.5 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_flush} {:instruction float_mult} {:instruction integer_dup_items} {:instruction float_swap} {:instruction integer_flush} {:instruction integer_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction in1} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_inc} {:instruction float_swap} {:instruction print_integer} {:instruction float_add})
Best program: (print_integer integer_flush float_mult integer_dup_items float_swap integer_flush integer_rot in2 integer_dup_items integer_fromfloat integer_stackdepth integer_flush in1 integer_pop integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add float_inc float_swap print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2526.844067999995
Median total errors in population: 286.7425
Error averages by case: (91.59191970000045 11.27 86.93409539999907 11.326 84.47855040000152 11.099 88.35198559999998 11.199 87.11322660000067 11.284 92.28479839999983 11.128 92.93827300000147 11.248 84.32046959999907 11.164 89.87472210000129 11.273 91.16673260000051 11.245 90.1768500000004 11.216 89.14099840000004 12.049 89.83728720000136 11.255 90.24036000000063 11.258 92.38149279999962 11.264 87.07321729999877 11.195 85.43139039999991 11.128 92.75186309999911 11.393 91.81678129999862 11.13 94.2442232000012 11.378 90.61075999999977 11.222 92.98019609999946 11.329 84.2005349999987 11.138 92.91546159999977 11.148 92.28887820000138 11.36)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.5422 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 37.676
Average program size in population (points): 38.676
Average percent parens in population: 0.028
Minimum age in population: 144.2869866650779
Maximum age in population: 148.6110722063569
Average age in population: 146.748511285994
Median age in population: 146.8018756054019
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 121548695
--- Timings ---
Current time: 1529615747015 milliseconds
Total Time:         275.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.4 seconds, 45.9%
Fitness Testing:    116.3 seconds, 42.2%
Report:              32.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_max} {:instruction float_dup_times} {:instruction tag_float_831} {:instruction in1} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_127} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_min} {:instruction in1} {:instruction print_integer} {:instruction in1} {:instruction tagged_9950} {:instruction float_yank} {:instruction integer_fromfloat} {:instruction float_max})
Best program: (float_div float_max float_max integer_fromfloat float_yankdup integer_yank integer_max float_dup_times tag_float_831 in1 integer_inc float_yank integer_inc float_yank integer_shove float_add in1 tagged_127 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_min in1 print_integer in1 tagged_9950 float_yank integer_fromfloat float_max)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2905.7295512999954
Median total errors in population: 286.7425
Error averages by case: (107.99001870000035 11.29 102.0644724999986 11.369 103.26732680000208 11.113 101.11052579999985 11.231 101.71844650000125 11.326 107.56505159999996 11.128 108.48127800000194 11.282 97.76613179999946 11.182 105.95537140000198 11.325 107.2707830000004 11.276 106.38711650000087 11.227 105.25331520000005 12.066 99.20107260000164 11.293 106.48085240000057 11.282 106.55498079999961 11.306 100.3165063999988 11.226 98.80142539999991 11.126 108.89998589999873 11.452 109.04982029999816 11.131 110.00864400000125 11.419 106.85224839999984 11.237 108.81848629999955 11.364 97.10598479999875 11.135 108.67079199999975 11.163 107.76791420000134 11.422)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 4 0.0288 9 0.1122 3 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 6 0.2039 9 0.2456 5 0.1836 4 0.2939 5 0.3925 2 0.3884 4 0.4982 5)
Average genome size in population (length): 38.028
Average program size in population (points): 39.028
Average percent parens in population: 0.028
Minimum age in population: 145.8714816156783
Maximum age in population: 150.2683789166872
Average age in population: 148.2198296582497
Median age in population: 148.230376963646
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.043
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 122501795
--- Timings ---
Current time: 1529615749423 milliseconds
Total Time:         277.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.6 seconds, 45.9%
Fitness Testing:    117.2 seconds, 42.2%
Report:              33.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_max} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_dup} {:instruction float_div} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_shove} {:instruction in1} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_min} {:instruction float_dup_items} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (float_div float_max integer_yank integer_fromfloat integer_pop integer_sub float_dup integer_dup float_div integer_mod integer_swap float_shove in1 integer_dec integer_yank integer_shove integer_yank float_min float_dup_items float_min integer_fromfloat integer_stackdepth integer_dup_items float_frominteger float_add in1 tagged_70 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2212.290032699995
Median total errors in population: 286.7425
Error averages by case: (77.65967219999922 11.269 77.24489219999982 11.332 72.83393760000175 11.124 77.087939199999 11.173 77.28635040000086 11.299 78.44414880000096 11.138 79.30150700000058 11.255 74.63150480000017 11.183 77.67631110000052 11.248 77.17212759999929 11.254 76.6039939999993 11.214 77.57589120000004 12.043 73.50798980000134 11.277 75.27886679999934 11.256 79.0104207999996 11.283 76.07566999999874 11.181 75.71874329999991 11.141 79.00047130000004 11.396 79.56671389999936 11.101 80.35478480000029 11.368 76.94682240000094 11.221 79.11449370000047 11.319 75.02103999999866 11.144 79.14889040000088 11.168 78.2698494000014 11.37)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.4578 9 0.199 10 0.2168 10 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.4996 10 0.3024 10 0.3637 10 0.2549 9 0.0731 10 0.2039 9 0.2456 10 0.1836 9 0.2939 8 0.6075 9 0.3884 10 0.4982 9)
Average genome size in population (length): 37.646
Average program size in population (points): 38.646
Average percent parens in population: 0.028
Minimum age in population: 147.2714865312838
Maximum age in population: 151.6837557112215
Average age in population: 149.6759252992361
Median age in population: 149.6950425199424
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.762
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.762
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 123445345
--- Timings ---
Current time: 1529615751784 milliseconds
Total Time:         280.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.8 seconds, 46.0%
Fitness Testing:    118.1 seconds, 42.1%
Report:              33.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction float_max} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_sin} {:instruction integer_rot} {:instruction float_max} {:instruction float_sub} {:instruction integer_swap} {:instruction float_yankdup} {:instruction in1} {:instruction integer_dup_items} {:instruction tag_integer_76} {:instruction in1} {:instruction tagged_9954} {:instruction tagged_70} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_tan} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction tag_integer_457} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in1} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_inc} {:instruction float_swap} {:instruction print_integer} {:instruction float_add})
Best program: (integer_rot float_max float_swap float_dup_times float_sin integer_rot float_max float_sub integer_swap float_yankdup in1 integer_dup_items tag_integer_76 in1 tagged_9954 tagged_70 float_inc float_add in1 tagged_70 float_tan integer_add in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_yank integer_shove float_add tag_integer_457 integer_stackdepth integer_yank in1 integer_pop integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add float_inc float_swap print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2151.754606099995
Median total errors in population: 286.7425
Error averages by case: (75.54328209999925 11.255 73.56230839999986 11.298 71.0563536000014 11.108 72.92956519999905 11.168 73.71521400000097 11.264 75.95943780000091 11.132 75.63790000000034 11.237 71.3699328000003 11.155 75.48144810000048 11.242 75.12963179999929 11.228 74.91776249999958 11.202 74.57957440000004 12.052 75.04842880000143 11.244 74.62086919999955 11.236 77.2069327999997 11.248 72.598713899999 11.168 72.10406099999992 11.123 76.75847130000004 11.355 77.01885929999955 11.115 78.28081999999999 11.339 75.32117000000085 11.205 77.01714250000062 11.287 71.52994319999893 11.128 76.74994840000089 11.153 76.34283500000113 11.332)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 11 0.3483 6 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.5004 5 0.6976 5 0.6363 11 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 37.64
Average program size in population (points): 38.64
Average percent parens in population: 0.028
Minimum age in population: 148.9237871214184
Maximum age in population: 153.3786065518216
Average age in population: 151.0797187991587
Median age in population: 151.0920698870783
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.776
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.776
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 124388320
--- Timings ---
Current time: 1529615754181 milliseconds
Total Time:         282.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.0 seconds, 46.0%
Fitness Testing:    119.0 seconds, 42.1%
Report:              33.5 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dec} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction integer_min} {:instruction integer_yank} {:instruction float_yank} {:instruction float_add} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction in1} {:instruction float_swap} {:instruction tagged_9960} {:instruction integer_max} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_flush} {:instruction float_yank} {:instruction float_dup_items} {:instruction float_sub} {:instruction float_swap} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_add} {:instruction integer_yank} {:instruction float_yankdup})
Best program: (integer_dec integer_min integer_fromfloat float_cos integer_min integer_yank float_yank float_add tagged_70 float_dup_items integer_fromfloat float_sub in1 float_swap tagged_9960 integer_max float_dup_items integer_pop float_dup_times integer_flush float_yank float_dup_items float_sub float_swap float_add in1 tagged_70 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add integer_yank integer_swap float_add integer_yank float_yankdup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2362.425284299995
Median total errors in population: 286.7425
Error averages by case: (84.3578207 11.273 84.20775649999884 11.355 76.17188640000167 11.113 82.37040279999955 11.191 82.86648510000101 11.323 84.8277268000002 11.142 85.8468950000013 11.262 81.00455359999943 11.184 84.00751660000122 11.269 83.66969059999992 11.257 82.06902900000006 11.213 82.18457440000005 12.029 80.05720440000148 11.288 81.17086200000004 11.267 85.9482351999996 11.286 80.6027617999988 11.189 82.64419429999991 11.14 85.63274029999926 11.418 86.46945149999857 11.1 87.0972408000009 11.392 82.48565840000037 11.22 85.63902049999984 11.336 79.88853499999878 11.137 84.61517160000041 11.175 84.64387100000134 11.387)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.5422 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 37.604
Average program size in population (points): 38.604
Average percent parens in population: 0.028
Minimum age in population: 150.2581915521558
Maximum age in population: 154.4513481041912
Average age in population: 152.5521937796092
Median age in population: 152.6025280680757
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.778
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.778
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 125330145
--- Timings ---
Current time: 1529615756680 milliseconds
Total Time:         285.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.2 seconds, 46.0%
Fitness Testing:    120.0 seconds, 42.1%
Report:              33.8 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction tagged_527} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_sub} {:instruction tag_integer_472} {:instruction integer_mult} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_dup} {:instruction in1} {:instruction tagged_70} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction 33} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_yank} {:instruction integer_dup} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction in1} {:instruction print_integer})
Best program: (float_dup_times tagged_527 integer_rot integer_mult float_sub tag_integer_472 integer_mult float_tan integer_yankdup float_dup in1 tagged_70 integer_add integer_fromfloat integer_fromfloat float_yank float_sub float_yank integer_fromfloat float_sub 33 tagged_70 float_dup_items float_shove integer_fromfloat in2 integer_add integer_div in1 tagged_70 float_yank integer_dup in1 tagged_70 float_shove integer_fromfloat in2 integer_add float_mult in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2209.482151499995
Median total errors in population: 286.7425
Error averages by case: (78.76655139999977 11.257 75.42843069999955 11.311 74.4446016000015 11.09 73.86733759999927 11.176 75.62426450000085 11.279 79.09484700000051 11.111 79.84828800000072 11.23 71.95694079999996 11.157 77.96415770000088 11.26 78.40616119999983 11.232 78.39320799999993 11.197 77.09434400000004 12.046 72.93197020000135 11.234 77.93836479999999 11.239 76.70365439999962 11.25 73.64120579999897 11.18 72.75735019999992 11.127 80.16010579999971 11.365 80.78443199999921 11.113 81.82153920000036 11.35 78.76855680000041 11.207 80.44737540000025 11.302 71.80982199999892 11.132 79.67128760000041 11.14 79.82435480000119 11.348)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 38.035
Average program size in population (points): 39.035
Average percent parens in population: 0.028
Minimum age in population: 151.2581915521558
Maximum age in population: 156.1695798271428
Average age in population: 153.9792335031597
Median age in population: 154.0106308584506
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.787
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.787
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 126282845
--- Timings ---
Current time: 1529615759031 milliseconds
Total Time:         287.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.4 seconds, 46.0%
Fitness Testing:    120.9 seconds, 42.0%
Report:              34.1 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_yank} {:instruction float_sub} {:instruction integer_div} {:instruction float_add} {:instruction float_yank} {:instruction tag_float_435} {:instruction integer_max} {:instruction float_min} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction print_integer})
Best program: (float_dec float_yank float_sub integer_div float_add float_yank tag_float_435 integer_max float_min float_yankdup integer_stackdepth float_dec integer_rot integer_pop in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1 print_integer integer_add integer_div float_dup print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2309.8162395999952
Median total errors in population: 286.7425
Error averages by case: (81.51099099999969 11.276 81.41018029999948 11.338 76.25418560000148 11.12 80.94149219999953 11.194 81.40439530000084 11.305 81.40326900000058 11.146 81.93489500000078 11.261 79.35107119999971 11.181 81.68623440000083 11.272 81.08919479999975 11.256 80.79842199999985 11.221 81.62263200000004 12.053 78.15798000000136 11.281 80.61536239999984 11.266 81.39744479999963 11.278 80.54539809999892 11.194 80.03170409999991 11.147 82.66866719999983 11.4 83.60247099999923 11.124 84.13801280000041 11.384 81.21729120000046 11.23 82.89796320000018 11.338 79.56260999999886 11.15 81.48700640000054 11.167 82.12836560000122 11.377)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 11 0.3483 3 0.5422 2 0.801 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 10 0.1122 1 0.5004 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 10 0.7544 2 0.8164 2 0.7061 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 37.078
Average program size in population (points): 38.078
Average percent parens in population: 0.028
Minimum age in population: 152.7529484477142
Maximum age in population: 157.3284023398799
Average age in population: 155.4712873619224
Median age in population: 155.4932648428839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.748
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.748
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 127211720
--- Timings ---
Current time: 1529615761467 milliseconds
Total Time:         290.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.7 seconds, 46.1%
Fitness Testing:    121.7 seconds, 42.0%
Report:              34.4 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction in1} {:instruction tagged_129} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction in2} {:instruction integer_sub})
Best program: (integer_fromfloat integer_fromfloat float_yank in1 tagged_129 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger integer_stackdepth integer_dup_items float_frominteger in2 integer_add print_integer in1 print_integer in2 integer_sub)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2335.936301599995
Median total errors in population: 286.7425
Error averages by case: (84.41360089999971 11.232 80.18676439999949 11.338 76.22238600000172 11.065 78.26223999999928 11.193 80.242117500001 11.284 82.70381460000063 11.081 82.71412100000086 11.216 74.99420129999993 11.156 83.85758510000116 11.285 84.22568219999975 11.218 84.39124300000009 11.167 84.11434410000004 12.039 77.38253140000153 11.244 82.5308611999998 11.228 81.42778219999965 11.253 78.54700569999889 11.186 76.28137769999992 11.1 86.3155209999993 11.39 87.71502419999874 11.095 88.96073200000075 11.354 84.64339280000046 11.186 87.26102049999999 11.292 76.73004559999882 11.093 84.26303620000057 11.122 86.37987100000129 11.353)
Error minima by case: (0.3901 2 0.2373 2 0.1168 1 0.0298 10 0.3483 2 0.4578 2 0.199 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 10 0.2456 2 0.1836 2 0.2939 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 36.554
Average program size in population (points): 37.554
Average percent parens in population: 0.029
Minimum age in population: 153.8850014458451
Maximum age in population: 158.9940265918556
Average age in population: 156.9128641854355
Median age in population: 156.9591149276988
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.78
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.78
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 128127445
--- Timings ---
Current time: 1529615763745 milliseconds
Total Time:         292.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.9 seconds, 46.2%
Fitness Testing:    122.6 seconds, 42.0%
Report:              34.6 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction float_flush} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_cos} {:instruction tag_float_87} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction 33} {:instruction tagged_70} {:instruction print_float} {:instruction float_cos} {:instruction float_sub} {:instruction float_sub} {:instruction float_cos} {:instruction integer_pop} {:instruction integer_min} {:instruction float_yank} {:instruction float_tan} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_min} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_62} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction in1} {:instruction tagged_857} {:instruction print_integer} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_rot})
Best program: (float_dup_items float_flush integer_flush integer_swap float_dup_times float_dup_items float_cos tag_float_87 float_yank integer_stackdepth 33 tagged_70 print_float float_cos float_sub float_sub float_cos integer_pop integer_min float_yank float_tan in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_dup_items float_div in1 integer_min float_dup_items integer_fromfloat float_dup_items integer_fromfloat float_yank float_add in1 tagged_62 float_shove integer_fromfloat in2 integer_add integer_add in1 tagged_857 print_integer integer_min integer_yank integer_rot)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2104.2652433999947
Median total errors in population: 286.7425
Error averages by case: (72.4927216999994 11.267 74.82384139999928 11.348 66.8395360000017 11.101 73.94646239999913 11.173 74.63795720000103 11.309 74.14318460000096 11.118 74.99269600000089 11.248 70.93437200000028 11.184 72.20959330000066 11.256 72.71215279999932 11.241 71.24697649999928 11.199 72.73877600000004 12.035 67.20820440000152 11.264 71.91236559999953 11.254 72.14102559999964 11.268 73.09512549999883 11.175 72.02025309999992 11.141 75.04739819999969 11.402 75.8762865999991 11.089 76.75555680000036 11.374 71.61090440000105 11.211 75.05602420000035 11.318 71.06564749999876 11.138 75.09884120000059 11.155 74.01834040000132 11.373)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.5422 9 0.801 10 0.2168 9 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.5004 10 0.6976 9 0.6363 10 0.2549 9 0.0731 9 0.2039 10 0.7544 10 0.8164 9 0.7061 8 0.3925 9 0.3884 10 0.4982 9)
Average genome size in population (length): 36.25
Average program size in population (points): 37.25
Average percent parens in population: 0.029
Minimum age in population: 156.0788523351295
Maximum age in population: 160.3854512613537
Average age in population: 158.3656129017614
Median age in population: 158.3832026118769
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.769
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.769
Total error diversity:				 0.042
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 129035695
--- Timings ---
Current time: 1529615766211 milliseconds
Total Time:         294.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       136.1 seconds, 46.2%
Fitness Testing:    123.6 seconds, 41.9%
Report:              34.8 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_min} {:instruction integer_flush} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_mult} {:instruction float_yank} {:instruction float_add} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction 30} {:instruction float_add})
Best program: (integer_fromfloat float_min integer_flush float_cos integer_swap integer_stackdepth integer_dup_items float_mult float_yank float_add float_sub in1 integer_swap integer_swap integer_swap float_dup float_sub integer_dup_items float_max in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1 print_integer 30 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2208.123410799995
Median total errors in population: 286.7425
Error averages by case: (80.13972169999923 11.247 73.91428000000015 11.304 73.0998864000013 11.084 73.49243259999905 11.183 73.73761540000096 11.253 78.74672680000103 11.099 79.4460940000003 11.227 70.09547180000023 11.149 79.64530290000037 11.254 79.47064859999922 11.224 77.0495834999994 11.179 79.76260320000004 12.05 74.86275560000139 11.23 77.18986759999937 11.237 78.23704959999966 11.25 70.98867069999902 11.176 72.27833399999992 11.11 81.37503270000019 11.383 81.9872670999997 11.096 82.8127847999999 11.35 77.48927160000099 11.186 81.4264937000007 11.288 69.32143749999895 11.114 79.94522960000097 11.131 80.47584940000115 11.329)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.3483 5 0.5422 4 0.801 4 0.2168 3 0.2137 10 0.4958 4 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 11 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.3925 3 0.3884 3 0.4982 5)
Average genome size in population (length): 35.694
Average program size in population (points): 36.694
Average percent parens in population: 0.030
Minimum age in population: 157.6054266622139
Maximum age in population: 162.0445709017619
Average age in population: 159.8442530507191
Median age in population: 159.8760443889774
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.749
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.749
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 129930170
--- Timings ---
Current time: 1529615768479 milliseconds
Total Time:         297.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.2 seconds, 46.2%
Fitness Testing:    124.4 seconds, 41.9%
Report:              35.2 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_yank} {:instruction float_sin} {:instruction float_yank} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction 33} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_yank} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in2} {:instruction integer_add} {:instruction integer_pop} {:instruction integer_shove} {:instruction in1} {:instruction tagged_9950} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction integer_div} {:instruction print_integer})
Best program: (print_integer integer_dup_times integer_dec float_yank float_sin float_yank integer_fromfloat float_sub 33 tagged_70 float_dup_items float_shove integer_fromfloat in2 integer_add integer_div in1 tagged_70 float_yank float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in2 integer_add integer_pop integer_shove in1 tagged_9950 integer_mult integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div integer_div print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2386.194387299995
Median total errors in population: 286.7425
Error averages by case: (86.38238110000007 11.257 84.12793479999876 11.359 76.04436540000195 11.093 82.12542559999966 11.185 83.6061499000012 11.297 85.43868320000037 11.106 86.84234940000155 11.251 79.65604259999927 11.172 84.87467000000161 11.263 85.1161864 11.244 84.46722550000041 11.189 83.50597760000004 12.041 82.76844980000178 11.277 84.60486280000018 11.251 87.04657349999961 11.286 81.6286978999987 11.188 80.69222339999992 11.112 87.64659409999905 11.423 86.57630609999842 11.085 89.01074960000098 11.381 84.94147480000024 11.196 87.54084489999984 11.311 78.69693449999865 11.123 85.01841700000033 11.163 86.21086740000142 11.371)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.5422 4 0.801 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 34.735
Average program size in population (points): 35.735
Average percent parens in population: 0.031
Minimum age in population: 158.7567959818416
Maximum age in population: 163.6388861411096
Average age in population: 161.3395240702296
Median age in population: 161.3997755595129
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.733
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.733
Total error diversity:				 0.04
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 130800545
--- Timings ---
Current time: 1529615770847 milliseconds
Total Time:         299.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.5 seconds, 46.3%
Fitness Testing:    125.3 seconds, 41.9%
Report:              35.4 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup} {:instruction float_max} {:instruction float_sub} {:instruction tag_integer_472} {:instruction float_yank} {:instruction float_sub} {:instruction float_swap} {:instruction float_div} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_max} {:instruction integer_shove} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_mult} {:instruction float_dup_times} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_yank} {:instruction integer_inc} {:instruction float_add} {:instruction in1} {:instruction tagged_9960} {:instruction float_yank} {:instruction integer_inc} {:instruction float_yank} {:instruction float_shove} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_yank})
Best program: (float_dup_times float_mult integer_dup float_max float_sub tag_integer_472 float_yank float_sub float_swap float_div float_dup_times float_mult float_max integer_shove float_dup_items float_dup_items float_mult float_dup_times integer_yank float_sub integer_dup_items float_yank integer_inc float_add in1 tagged_9960 float_yank integer_inc float_yank float_shove float_add in1 tagged_29 tagged_70 float_shove integer_fromfloat in2 integer_add integer_div in1 print_integer integer_mod integer_sub float_yank)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2357.2099783999947
Median total errors in population: 286.7425
Error averages by case: (84.24791969999998 11.28 83.28640419999927 11.382 73.3656672000016 11.109 82.64221719999944 11.189 83.12485070000095 11.332 82.87705160000058 11.141 83.54468600000104 11.274 79.47731359999979 11.193 83.83301250000125 11.288 83.58774099999997 11.26 83.73486750000006 11.221 83.63420000000004 12.043 80.48262380000146 11.294 81.9083583999999 11.274 82.3031663999996 11.296 81.25544629999878 11.197 80.72358509999991 11.141 86.61693619999932 11.436 86.37241249999863 11.108 88.59746880000091 11.412 83.97567800000027 11.22 86.74507779999988 11.345 79.84933789999867 11.147 83.03456880000037 11.173 85.83038720000143 11.404)
Error minima by case: (0.3901 4 0.2373 6 0.1168 4 0.0298 10 0.3483 6 0.4578 5 0.199 5 0.2168 4 0.2137 10 0.4958 4 0.1965 4 0.0288 10 0.1122 3 0.4996 4 0.3024 5 0.3637 10 0.2549 4 0.0731 5 0.2039 10 0.2456 4 0.1836 4 0.2939 4 0.3925 4 0.3884 5 0.4982 4)
Average genome size in population (length): 34.313
Average program size in population (points): 35.313
Average percent parens in population: 0.031
Minimum age in population: 160.543020711485
Maximum age in population: 164.9326795975268
Average age in population: 162.8339212170527
Median age in population: 162.8440283955355
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.711
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.711
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 131660761
--- Timings ---
Current time: 1529615773338 milliseconds
Total Time:         301.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.8 seconds, 46.3%
Fitness Testing:    126.1 seconds, 41.8%
Report:              35.7 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_dec} {:instruction integer_swap} {:instruction 87.70300811791017} {:instruction float_pop} {:instruction float_mod} {:instruction float_mod} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_rot} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_dup_items} {:instruction tagged_487} {:instruction float_sub} {:instruction in2} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction -76} {:instruction float_add} {:instruction in1} {:instruction float_yank} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction float_frominteger} {:instruction float_div} {:instruction float_cos} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction float_rot} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction in1} {:instruction tagged_9950} {:instruction float_frominteger})
Best program: (integer_flush float_dec integer_swap 87.70300811791017 float_pop float_mod float_mod integer_max float_dup_items float_rot integer_add float_yankdup float_sub float_dup_items tagged_487 float_sub in2 float_dup_items integer_fromfloat float_mult -76 float_add in1 float_yank float_dup_items integer_fromfloat integer_stackdepth float_flush float_frominteger float_div float_cos float_yank float_add in1 float_rot in1 tagged_29 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer in1 tagged_9950 float_frominteger)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2002.0740534999948
Median total errors in population: 286.7425
Error averages by case: (69.14601279999901 11.224 69.9755413000002 11.302 61.840236800001115 11.066 68.69170419999885 11.154 69.77556400000091 11.248 68.74606440000123 11.096 69.75810399999993 11.203 66.83745600000046 11.134 70.2065933000001 11.219 68.52911079999895 11.198 68.29295899999889 11.155 68.90171840000004 12.033 67.33609220000123 11.22 67.88237039999915 11.206 70.37963039999966 11.225 66.97421589999895 11.155 68.43821469999992 11.095 70.54083680000062 11.335 72.70208269999968 11.076 72.1440831999999 11.315 68.67598640000111 11.157 70.67126080000097 11.243 65.84754499999887 11.098 69.33033680000118 11.123 69.8783332000013 11.292)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 10 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 34.084
Average program size in population (points): 35.084
Average percent parens in population: 0.032
Minimum age in population: 161.8584579581109
Maximum age in population: 166.4924828209443
Average age in population: 164.3298904549118
Median age in population: 164.3727257443495
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.696
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.696
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 132514786
--- Timings ---
Current time: 1529615775801 milliseconds
Total Time:         304.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.0 seconds, 46.4%
Fitness Testing:    127.0 seconds, 41.8%
Report:              36.0 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_fromfloat} {:instruction print_float} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_yankdup} {:instruction float_sub} {:instruction integer_add} {:instruction float_dup_times} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction integer_shove} {:instruction print_integer} {:instruction float_add})
Best program: (print_integer integer_fromfloat print_float float_cos float_cos integer_dup_times integer_dup_items float_dup_items integer_fromfloat integer_sub integer_dup_items float_yankdup float_sub integer_add float_dup_times in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div integer_shove print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2510.387112399995
Median total errors in population: 286.7425
Error averages by case: (89.77643060000044 11.292 90.08646839999838 11.37 84.72049920000183 11.11 88.34398560000012 11.204 90.10644020000106 11.32 89.65779839999988 11.139 89.8984770000017 11.271 85.06663759999925 11.178 89.4260810000018 11.296 89.04219480000044 11.271 89.1022430000007 11.224 89.25611360000003 12.063 88.09573600000174 11.286 87.6478612000006 11.278 91.13219039999963 11.296 87.7506720999988 11.202 86.12468449999992 11.145 91.64230169999881 11.433 91.84780079999821 11.123 93.25074960000124 11.412 89.38339279999983 11.23 91.72884489999944 11.341 84.0591799999987 11.15 90.19846159999983 11.168 90.84986740000139 11.39)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.4578 4 0.199 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 33.879
Average program size in population (points): 34.879
Average percent parens in population: 0.032
Minimum age in population: 162.8584579581109
Maximum age in population: 167.7970655882726
Average age in population: 165.7951923000699
Median age in population: 165.8384843638039
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 133363386
--- Timings ---
Current time: 1529615778265 milliseconds
Total Time:         306.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.4 seconds, 46.4%
Fitness Testing:    127.9 seconds, 41.7%
Report:              36.4 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction integer_swap} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_dec} {:instruction float_max} {:instruction float_max} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction integer_min} {:instruction integer_max} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction in1} {:instruction tagged_147} {:instruction float_dup_items} {:instruction tag_integer_112} {:instruction in1} {:instruction tagged_9954} {:instruction tagged_70} {:instruction float_dup_times} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_tan} {:instruction integer_add} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction tagged_200} {:instruction integer_max} {:instruction float_frominteger} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction in1} {:instruction in2} {:instruction float_frominteger})
Best program: (float_mult integer_swap float_mult integer_inc integer_dec float_max float_max integer_add integer_rot integer_stackdepth integer_div integer_min integer_max integer_min float_mult integer_div in1 tagged_147 float_dup_items tag_integer_112 in1 tagged_9954 tagged_70 float_dup_times float_add in1 tagged_70 float_tan integer_add in1 tagged_70 float_dup_items tagged_200 integer_max float_frominteger integer_div in1 print_integer integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_add in1 print_integer in1 in2 float_frominteger)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2130.942519399995
Median total errors in population: 286.7425
Error averages by case: (74.43125209999954 11.248 74.44053689999967 11.338 69.14351990000146 11.108 73.67036169999913 11.177 74.19971890000082 11.281 75.0257303000007 11.113 75.71305330000064 11.245 71.10733909999993 11.173 73.41048880000052 11.257 73.76939039999937 11.24 72.36771469999938 11.193 73.61855500000006 12.044 73.90706690000147 11.272 72.24611819999949 11.25 75.71856729999965 11.273 72.0004016999988 11.174 72.71700339999991 11.122 76.18601289999997 11.401 77.18164859999916 11.098 77.88083530000048 11.371 72.76483830000089 11.195 76.12344760000042 11.313 70.15222029999873 11.13 76.48931030000065 11.155 75.15038750000132 11.356)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 33.513
Average program size in population (points): 34.513
Average percent parens in population: 0.032
Minimum age in population: 164.6890439354741
Maximum age in population: 169.2927327503823
Average age in population: 167.301422281685
Median age in population: 167.3487217610084
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.703
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.703
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 134203261
--- Timings ---
Current time: 1529615780656 milliseconds
Total Time:         309.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.6 seconds, 46.5%
Fitness Testing:    128.7 seconds, 41.6%
Report:              36.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_add} {:instruction integer_div} {:instruction float_div} {:instruction float_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction integer_flush} {:instruction float_add} {:instruction float_min} {:instruction in1} {:instruction tagged_70} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_max} {:instruction 66.66501362565299} {:instruction print_integer})
Best program: (float_dup_items float_dup_times integer_dup_times integer_add integer_div float_div float_yank integer_shove float_add in1 integer_fromfloat float_dup_items float_dup_items integer_flush float_add float_min in1 tagged_70 in1 integer_fromfloat in2 integer_add float_max 66.66501362565299 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2609.249768799995
Median total errors in population: 286.7425
Error averages by case: (93.67269990000001 11.281 94.60785809999881 11.354 85.9440176000018 11.132 93.05904519999983 11.185 94.618923200001 11.317 93.90359380000028 11.141 93.02028300000126 11.283 91.72081919999937 11.192 94.68143990000154 11.281 93.22772420000004 11.269 92.17185000000009 11.236 94.49317120000003 12.049 89.80207260000162 11.296 91.93835920000002 11.284 92.72846879999962 11.298 91.59412619999877 11.192 93.10513549999992 11.163 94.98686309999931 11.42 96.4206163999986 11.123 96.53920560000088 11.404 92.54576000000036 11.245 95.2057838999999 11.351 89.94188999999872 11.155 92.55218040000045 11.171 94.55688180000139 11.389)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.5422 9 0.801 10 0.2168 10 0.2137 9 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.5004 10 0.6976 10 0.6363 10 0.2549 9 0.0731 10 0.2039 9 0.7544 10 0.8164 9 0.7061 8 0.3925 9 0.3884 10 0.4982 9)
Average genome size in population (length): 33.772
Average program size in population (points): 34.772
Average percent parens in population: 0.032
Minimum age in population: 166.2470237008949
Maximum age in population: 170.7017369194795
Average age in population: 168.7365204628561
Median age in population: 168.7939403652365
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.713
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.713
Total error diversity:				 0.043
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 135050561
--- Timings ---
Current time: 1529615782874 milliseconds
Total Time:         311.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.8 seconds, 46.5%
Fitness Testing:    129.5 seconds, 41.6%
Report:              37.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_flush} {:instruction integer_flush} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction -72.19716046666153} {:instruction float_cos} {:instruction float_sub} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction integer_div} {:instruction float_sin} {:instruction print_integer} {:instruction float_add})
Best program: (float_div float_flush integer_flush integer_yank integer_max integer_flush integer_swap integer_mult integer_dup_items -72.19716046666153 float_cos float_sub float_tan float_yank float_add in1 tagged_104 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_add integer_div float_sin print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 1982.0119352999952
Median total errors in population: 286.7425
Error averages by case: (68.05962269999966 11.254 69.02345169999963 11.336 63.55105440000135 11.108 67.29587959999947 11.172 68.71012590000073 11.301 68.64431760000053 11.125 69.50210900000052 11.241 66.55197360000017 11.168 67.97845630000057 11.246 67.47361499999971 11.241 66.97915549999969 11.201 67.02397760000004 12.041 66.5915508000012 11.267 66.77486999999968 11.247 69.31560639999964 11.268 67.51057889999898 11.171 67.43580209999992 11.144 69.47190990000003 11.385 70.3391216999995 11.096 71.0518376000005 11.361 67.3928028000005 11.202 69.55496690000024 11.314 67.04815249999892 11.137 69.45566720000049 11.16 67.73932960000116 11.35)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.6517 8 0.5422 9 0.801 10 0.2168 9 0.7863 10 0.4958 10 0.1965 10 0.0288 10 0.1122 10 0.5004 10 0.6976 10 0.6363 10 0.2549 9 0.0731 10 0.2039 9 0.7544 10 0.8164 9 0.7061 8 0.6075 9 0.3884 10 0.4982 9)
Average genome size in population (length): 33.166
Average program size in population (points): 34.166
Average percent parens in population: 0.033
Minimum age in population: 167.9631008933305
Maximum age in population: 171.9611647415234
Average age in population: 170.2137867887911
Median age in population: 170.2408479194117
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.689
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.689
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 135882661
--- Timings ---
Current time: 1529615785114 milliseconds
Total Time:         313.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.9 seconds, 46.5%
Fitness Testing:    130.4 seconds, 41.6%
Report:              37.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_rot} {:instruction in1} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction -27} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_div} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction in1} {:instruction float_swap} {:instruction tagged_9960} {:instruction integer_max} {:instruction float_cos} {:instruction float_yank} {:instruction integer_max} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_div} {:instruction float_cos} {:instruction integer_min} {:instruction in1} {:instruction float_mult} {:instruction in1} {:instruction float_yank} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction integer_pop} {:instruction integer_shove} {:instruction in1} {:instruction tagged_9950} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction integer_swap} {:instruction print_integer})
Best program: (integer_fromfloat float_rot in1 integer_dup_items integer_fromfloat -27 integer_inc integer_mult float_div float_dup_items integer_fromfloat float_sub in1 float_swap tagged_9960 integer_max float_cos float_yank integer_max float_yank integer_dup_items float_div float_cos integer_min in1 float_mult in1 float_yank integer_add integer_div float_dup integer_dup_items float_frominteger in2 integer_add in2 integer_add integer_pop integer_shove in1 tagged_9950 integer_mult integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div integer_swap print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2483.0740252999954
Median total errors in population: 286.7425
Error averages by case: (89.45321079999995 11.303 87.39722409999922 11.391 83.47895200000148 11.146 86.39254379999973 11.197 87.10036730000087 11.342 89.10310020000023 11.157 90.05929300000096 11.313 82.98300089999968 11.214 88.10487550000103 11.287 88.64719479999997 11.297 87.53565350000004 11.254 87.36957440000005 12.046 88.5167556000014 11.327 87.78435920000011 11.305 91.05174719999967 11.336 84.971901899999 11.205 84.87367949999992 11.162 90.74637479999933 11.471 90.77345149999886 11.125 92.11048640000065 11.441 88.01294360000024 11.259 90.61931439999982 11.391 82.31519529999896 11.173 91.39845280000016 11.2 89.50137280000115 11.431)
Error minima by case: (0.3901 10 0.2373 10 0.1168 10 0.0298 9 0.6517 8 0.5422 10 0.801 11 0.2168 10 0.7863 9 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.5004 11 0.6976 11 0.6363 10 0.2549 9 0.0731 10 0.2039 10 0.7544 10 0.8164 10 0.7061 8 0.6075 10 0.3884 10 0.4982 9)
Average genome size in population (length): 33.17
Average program size in population (points): 34.17
Average percent parens in population: 0.033
Minimum age in population: 169.0053439694811
Maximum age in population: 173.5835183921878
Average age in population: 171.702030305294
Median age in population: 171.7653785046235
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.728
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.728
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 136715161
--- Timings ---
Current time: 1529615787702 milliseconds
Total Time:         316.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.3 seconds, 46.6%
Fitness Testing:    131.2 seconds, 41.5%
Report:              37.4 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction integer_min} {:instruction float_max} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_swap} {:instruction integer_max} {:instruction float_div} {:instruction integer_add} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_pop} {:instruction float_max} {:instruction integer_yank} {:instruction float_min} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction tag_float_356} {:instruction integer_yank} {:instruction float_max} {:instruction float_sub} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_max} {:instruction float_sub} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction print_integer})
Best program: (float_div integer_min float_max integer_add integer_rot integer_fromfloat integer_fromfloat in2 integer_swap integer_max float_div integer_add float_shove float_dup_times integer_add float_pop float_max integer_yank float_min float_yankdup float_dup_items tag_float_356 integer_yank float_max float_sub float_yank integer_stackdepth float_yank integer_yank integer_fromfloat float_cos float_max float_sub float_yank float_add in1 tagged_70 float_shove integer_fromfloat integer_stackdepth integer_fromfloat float_frominteger in2 integer_add integer_sub in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2742.8306007999954
Median total errors in population: 286.7425
Error averages by case: (99.41169990000064 11.287 98.94419699999838 11.33 92.15548480000172 11.13 96.62104520000038 11.195 99.09501300000093 11.29 97.8992203999997 11.143 97.54328300000162 11.272 97.2535183999986 11.177 101.37286730000193 11.295 99.03572420000067 11.266 98.69026050000079 11.243 100.42917120000004 12.061 93.29274580000157 11.276 98.55885880000086 11.278 98.17577119999962 11.286 96.34012619999879 11.193 97.83237079999992 11.143 100.26186309999885 11.407 102.57641249999823 11.144 101.52320560000145 11.392 99.12931079999957 11.248 100.51737169999932 11.339 96.52945999999872 11.146 97.6747339999997 11.167 99.87388540000137 11.385)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.6517 5 0.5422 4 0.801 4 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.6075 3 0.3884 4 0.4982 5)
Average genome size in population (length): 33.147
Average program size in population (points): 34.147
Average percent parens in population: 0.033
Minimum age in population: 170.9489585487813
Maximum age in population: 175.072414376775
Average age in population: 173.1324227705165
Median age in population: 173.1465124592211
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.693
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.693
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 137547677
--- Timings ---
Current time: 1529615790280 milliseconds
Total Time:         318.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.5 seconds, 46.6%
Fitness Testing:    132.2 seconds, 41.5%
Report:              37.8 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_tan} {:instruction integer_dec} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_div} {:instruction float_yank} {:instruction float_add} {:instruction float_yank} {:instruction integer_shove} {:instruction integer_sub} {:instruction float_yank} {:instruction float_flush} {:instruction float_yank} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction 33} {:instruction float_sub} {:instruction 33} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_shove} {:instruction float_cos} {:instruction integer_flush} {:instruction float_sub} {:instruction in1} {:instruction integer_inc} {:instruction integer_min} {:instruction float_rot} {:instruction float_sub} {:instruction float_yank} {:instruction float_dup_items} {:instruction integer_min} {:instruction float_yank} {:instruction float_tan} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction print_integer})
Best program: (integer_flush integer_fromfloat integer_min float_tan integer_dec float_shove float_stackdepth integer_div float_yank float_add float_yank integer_shove integer_sub float_yank float_flush float_yank integer_fromfloat float_sub 33 float_sub 33 tagged_70 float_dup_items float_shove float_cos integer_flush float_sub in1 integer_inc integer_min float_rot float_sub float_yank float_dup_items integer_min float_yank float_tan in1 tagged_70 float_dup_items float_shove integer_fromfloat in2 integer_add integer_div float_dup print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2386.739240799995
Median total errors in population: 286.7425
Error averages by case: (84.58894149999966 11.266 84.61336679999926 11.347 76.2489520000015 11.113 81.80052199999945 11.184 84.37795720000096 11.297 84.96393140000058 11.134 86.0990940000009 11.258 81.76437199999963 11.174 86.72023440000108 11.261 84.15665699999973 11.256 83.48479749999991 11.213 86.05866080000004 12.045 81.88353120000154 11.281 83.19386599999983 11.256 86.90544479999964 11.277 81.00939809999886 11.186 82.95823349999992 11.132 85.99110579999969 11.403 88.75806319999899 11.112 87.41953920000051 11.374 83.84337320000054 11.22 86.12296320000027 11.325 81.88703999999879 11.133 84.91684120000055 11.172 85.18535480000128 11.368)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.3637 10 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 31.882
Average program size in population (points): 32.882
Average percent parens in population: 0.034
Minimum age in population: 171.9981716509117
Maximum age in population: 176.6411084011434
Average age in population: 174.58258596381
Median age in population: 174.6249141327471
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.689
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.689
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 138348027
--- Timings ---
Current time: 1529615792521 milliseconds
Total Time:         320.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.6 seconds, 46.6%
Fitness Testing:    133.0 seconds, 41.4%
Report:              38.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction float_yank} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_yank} {:instruction float_sub} {:instruction float_swap} {:instruction float_div} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_max} {:instruction integer_pop} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer})
Best program: (float_cos float_yank integer_flush integer_swap float_dup_times float_yank float_sub float_swap float_div float_dup_times float_mult float_max integer_pop in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2497.135596399995
Median total errors in population: 286.7425
Error averages by case: (88.43882070000001 11.291 90.30951919999887 11.364 82.57813440000164 11.116 89.01995579999976 11.199 90.76513680000097 11.322 88.55730480000028 11.149 89.28548700000115 11.278 86.87620399999936 11.189 89.01314950000128 11.284 87.97869059999998 11.267 88.42902900000028 11.227 87.40905610000004 12.05 85.50296040000148 11.292 87.56086120000026 11.276 87.49546879999963 11.294 88.32630839999882 11.201 87.79968449999991 11.149 90.34430169999936 11.425 91.5225773999988 11.122 92.2539952000008 11.401 88.74584200000017 11.238 90.6374326999999 11.338 86.49196499999873 11.155 89.57534560000023 11.176 90.02136560000133 11.394)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.3483 2 0.5422 3 0.801 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.5004 3 0.6976 3 0.6363 10 0.2549 2 0.0731 3 0.2039 9 0.7544 3 0.8164 2 0.7061 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 31.86
Average program size in population (points): 32.86
Average percent parens in population: 0.035
Minimum age in population: 172.9981716509117
Maximum age in population: 178.0117229190927
Average age in population: 176.0184568732404
Median age in population: 176.0392826535974
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.714
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.714
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 139147777
--- Timings ---
Current time: 1529615794833 milliseconds
Total Time:         323.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.9 seconds, 46.7%
Fitness Testing:    133.8 seconds, 41.4%
Report:              38.5 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction integer_min} {:instruction integer_yank} {:instruction 20.326443783228726} {:instruction integer_dup_times} {:instruction float_yank} {:instruction in1} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_inc} {:instruction float_swap} {:instruction print_integer} {:instruction integer_dup})
Best program: (integer_fromfloat integer_fromfloat float_cos integer_min integer_yank 20.326443783228726 integer_dup_times float_yank in1 integer_pop integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add float_inc float_swap print_integer integer_dup)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 1992.2562341999949
Median total errors in population: 286.7425
Error averages by case: (68.85662269999906 11.252 67.63478150000046 11.312 64.47735360000144 11.095 65.98106039999868 11.162 67.73445580000067 11.261 68.11543780000144 11.11 69.98990000000009 11.228 64.69299340000057 11.15 68.14859329999989 11.238 69.12911079999913 11.235 68.0071554999988 11.191 69.80971840000004 12.044 68.5110922000013 11.243 67.38587079999904 11.241 70.04353759999962 11.252 65.31481839999883 11.166 65.62236719999991 11.116 71.52176370000035 11.373 71.07350999999976 11.096 72.19959200000002 11.351 69.29098640000112 11.199 71.66596690000065 11.292 65.70365979999883 11.12 70.27656000000093 11.142 69.86032600000131 11.34)
Error minima by case: (0.3901 10 0.2373 3 0.1168 1 0.0298 7 0.3483 3 0.4578 2 0.199 2 0.2168 1 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 1 0.4996 10 0.3024 2 0.3637 10 0.2549 1 0.0731 10 0.2039 9 0.2456 10 0.1836 10 0.2939 8 0.6075 1 0.3884 2 0.4982 9)
Average genome size in population (length): 31.44
Average program size in population (points): 32.44
Average percent parens in population: 0.035
Minimum age in population: 174.6215743145839
Maximum age in population: 179.5606655385573
Average age in population: 177.4846015677438
Median age in population: 177.5686166989612
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.684
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.684
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 139936802
--- Timings ---
Current time: 1529615797054 milliseconds
Total Time:         325.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.2 seconds, 46.7%
Fitness Testing:    134.5 seconds, 41.3%
Report:              38.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction float_rot} {:instruction float_div} {:instruction float_inc} {:instruction float_cos} {:instruction float_yank} {:instruction float_sub} {:instruction integer_yankdup} {:instruction in2} {:instruction integer_rot} {:instruction float_max} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction integer_div} {:instruction float_sin} {:instruction print_integer} {:instruction float_add})
Best program: (float_div float_rot float_div float_inc float_cos float_yank float_sub integer_yankdup in2 integer_rot float_max float_sub integer_fromfloat float_sub float_tan float_yank float_add in1 tagged_104 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_add integer_div float_sin print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2491.421847299995
Median total errors in population: 286.7425
Error averages by case: (89.08104050000014 11.279 88.56579819999888 11.349 83.65025120000142 11.123 87.05352399999998 11.192 88.42107350000077 11.308 88.98293140000008 11.141 90.1886860000011 11.274 85.05022379999895 11.176 88.84951660000127 11.287 88.50570740000036 11.264 88.21543950000019 11.223 87.30448810000004 12.047 87.22897020000141 11.285 87.53286040000052 11.269 89.7480495999996 11.285 86.5588197999988 11.193 86.46124959999992 11.148 90.89330169999931 11.415 90.65583979999872 11.118 92.25574960000114 11.391 88.4782091999999 11.232 90.95684489999964 11.341 85.21211729999874 11.145 89.49728760000009 11.175 90.02486740000134 11.389)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 7 0.3483 2 0.4578 3 0.199 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 9 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 30.823
Average program size in population (points): 31.823
Average percent parens in population: 0.036
Minimum age in population: 176.2008860513128
Maximum age in population: 181.2933262444568
Average age in population: 178.9516690663541
Median age in population: 178.9909111682996
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.684
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.684
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 140710627
--- Timings ---
Current time: 1529615799306 milliseconds
Total Time:         327.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.4 seconds, 46.8%
Fitness Testing:    135.3 seconds, 41.3%
Report:              38.9 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_inc} {:instruction integer_add} {:instruction integer_pop} {:instruction float_cos} {:instruction integer_flush} {:instruction float_shove} {:instruction integer_flush} {:instruction float_max} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_div} {:instruction integer_min} {:instruction float_min} {:instruction float_min} {:instruction in1} {:instruction tagged_70} {:instruction integer_div} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_mod} {:instruction integer_dec} {:instruction float_yank} {:instruction float_dup} {:instruction float_yank} {:instruction integer_sub} {:instruction in1} {:instruction tagged_9937} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_727} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_flush} {:instruction tagged_408} {:instruction float_inc})
Best program: (float_swap integer_inc integer_add integer_pop float_cos integer_flush float_shove integer_flush float_max float_yank integer_dup_items float_div integer_min float_min float_min in1 tagged_70 integer_div integer_max integer_stackdepth float_sub float_mod integer_dec float_yank float_dup float_yank integer_sub in1 tagged_9937 float_dup_items integer_fromfloat integer_stackdepth tagged_727 float_frominteger in2 integer_add integer_div in1 print_integer float_flush tagged_408 float_inc)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2606.4491093999955
Median total errors in population: 286.7425
Error averages by case: (93.3190899999996 11.307 94.06338349999925 11.381 86.46206880000184 11.148 92.15704519999927 11.213 93.99757490000101 11.345 93.61647360000073 11.164 93.4100890000008 11.304 90.70981919999973 11.214 93.607867300001 11.309 92.73021999999956 11.291 92.17324299999987 11.253 92.35311360000004 12.06 91.03819460000166 11.324 92.01736079999975 11.305 94.36356159999964 11.324 91.61630839999886 11.212 92.42662569999992 11.17 94.8129361999995 11.462 95.1178202999989 11.139 96.2144688000006 11.433 92.58839280000068 11.273 94.77190220000014 11.387 91.7734974999988 11.174 94.49067600000068 11.192 93.80137640000132 11.432)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 11 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 30.447
Average program size in population (points): 31.447
Average percent parens in population: 0.036
Minimum age in population: 177.9658794540367
Maximum age in population: 182.2405085400965
Average age in population: 180.4098186962143
Median age in population: 180.4640303415933
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.689
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.689
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 141475627
--- Timings ---
Current time: 1529615801690 milliseconds
Total Time:         330.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.6 seconds, 46.8%
Fitness Testing:    136.2 seconds, 41.3%
Report:              39.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_min} {:instruction float_dup} {:instruction float_cos} {:instruction tagged_70} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction 66.66501362565299} {:instruction print_integer})
Best program: (integer_fromfloat integer_min float_dup float_cos tagged_70 in1 integer_fromfloat in2 integer_add float_dec 66.66501362565299 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 2314.7370624999953
Median total errors in population: 286.7425
Error averages by case: (81.24399099999935 11.28 81.87751919999958 11.352 77.38893760000164 11.126 80.4507901999992 11.184 81.89513680000108 11.313 82.70669100000089 11.143 83.41290500000082 11.274 77.7729872 11.189 80.97137960000074 11.28 81.56667379999942 11.265 80.48442199999961 11.23 80.80668960000004 12.053 79.80787760000159 11.289 80.94786279999961 11.272 82.23151359999964 11.293 79.82412479999887 11.192 78.58593939999992 11.148 83.46759409999976 11.417 82.95069439999934 11.119 84.99325840000037 11.391 80.79629120000078 11.231 83.61184490000046 11.349 78.18557249999881 11.153 83.7845020000007 11.178 82.85686380000128 11.394)
Error minima by case: (0.3901 4 0.2373 5 0.1168 4 0.0298 10 0.3483 5 0.5422 4 0.801 4 0.2168 4 0.2137 10 0.4958 4 0.1965 3 0.0288 9 0.1122 2 0.5004 4 0.6976 3 0.6363 9 0.2549 4 0.0731 5 0.2039 10 0.7544 5 0.8164 3 0.7061 5 0.3925 4 0.3884 5 0.4982 5)
Average genome size in population (length): 30.31
Average program size in population (points): 31.31
Average percent parens in population: 0.036
Minimum age in population: 178.97120381172
Maximum age in population: 183.7836085500353
Average age in population: 181.8536768871964
Median age in population: 181.9041932240272
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.699
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.699
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 142237677
--- Timings ---
Current time: 1529615804026 milliseconds
Total Time:         332.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.8 seconds, 46.8%
Fitness Testing:    137.1 seconds, 41.2%
Report:              39.5 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction integer_div} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_472} {:instruction float_yank} {:instruction float_sub} {:instruction float_swap} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction float_cos} {:instruction integer_dup} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction tagged_2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_cos integer_div integer_dup_times integer_rot float_sub tag_integer_472 float_yank float_sub float_swap float_dec float_dup_items integer_dup_times float_cos integer_dup integer_dup_times integer_rot integer_pop in1 tagged_2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2412.6352947999953
Median total errors in population: 286.7425
Error averages by case: (85.85299099999918 11.284 86.27041759999972 11.372 81.9131856000016 11.128 83.91446239999915 11.189 85.88969870000099 11.334 85.76318460000101 11.151 87.0532980000004 11.28 82.29628800000009 11.203 86.08966180000056 11.285 85.04917799999926 11.269 83.02681499999957 11.226 86.04354560000004 12.053 81.65530680000134 11.295 83.42186439999942 11.276 85.76753759999967 11.305 82.52912549999894 11.194 84.16321389999992 11.148 87.72859409999998 11.429 88.41885929999948 11.111 89.3457672 11.403 84.22610760000092 11.232 87.78366930000068 11.339 82.85982499999888 11.153 86.56784120000096 11.187 86.7618566000012 11.397)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.6517 8 0.5422 9 0.801 10 0.2168 10 0.7863 10 0.4958 10 0.1965 10 0.0288 10 0.1122 10 0.5004 10 0.6976 10 0.6363 10 0.2549 9 0.0731 10 0.2039 10 0.7544 10 0.8164 9 0.7061 8 0.6075 9 0.3884 10 0.4982 9)
Average genome size in population (length): 29.668
Average program size in population (points): 30.668
Average percent parens in population: 0.037
Minimum age in population: 180.0858512707534
Maximum age in population: 185.3860860513411
Average age in population: 183.3338772458728
Median age in population: 183.3851485893465
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.699
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.699
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 142983077
--- Timings ---
Current time: 1529615806406 milliseconds
Total Time:         334.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.1 seconds, 46.9%
Fitness Testing:    138.0 seconds, 41.2%
Report:              39.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction tag_integer_472} {:instruction float_yank} {:instruction float_sub} {:instruction integer_swap} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction float_inc} {:instruction in1} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_flush} {:instruction -3.2138100645181282} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction 30} {:instruction float_add})
Best program: (float_swap integer_stackdepth integer_dup_items tag_integer_472 float_yank float_sub integer_swap float_dec float_swap float_dec float_dup_items integer_dup_times float_inc in1 integer_yank integer_max integer_flush -3.2138100645181282 float_pop integer_fromfloat in2 integer_add print_integer in1 print_integer 30 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 1955.5620468999948
Median total errors in population: 286.7425
Error averages by case: (67.24657319999874 11.252 68.80192630000028 11.316 64.5151712000016 11.107 67.44970079999858 11.165 68.6594742000008 11.276 67.45385980000155 11.122 68.40090999999983 11.24 64.99854000000065 11.164 66.75937959999993 11.239 66.65308559999879 11.239 66.31013799999876 11.201 65.54377600000004 12.046 61.81643860000134 11.258 65.93837359999888 11.247 66.46730399999963 11.26 66.06876109999882 11.174 66.46254719999992 11.134 68.65812920000077 11.373 68.56128660000007 11.096 70.33560959999964 11.351 66.69888480000144 11.204 68.82208520000113 11.306 65.44193749999874 11.133 68.10883240000145 11.157 67.97732240000131 11.352)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.5422 9 0.801 10 0.2168 10 0.2137 10 0.4958 10 0.1965 10 0.0288 10 0.1122 10 0.5004 10 0.6976 10 0.6363 10 0.2549 9 0.0731 10 0.2039 9 0.7544 10 0.8164 9 0.7061 8 0.3925 9 0.3884 10 0.4982 9)
Average genome size in population (length): 29.418
Average program size in population (points): 30.418
Average percent parens in population: 0.037
Minimum age in population: 182.4959635514783
Maximum age in population: 186.5440837863962
Average age in population: 184.7808014901766
Median age in population: 184.8015593053739
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.671
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.671
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 143722310
--- Timings ---
Current time: 1529615808668 milliseconds
Total Time:         337.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.3 seconds, 46.9%
Fitness Testing:    138.8 seconds, 41.2%
Report:              40.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_mult} {:instruction float_yank} {:instruction float_add} {:instruction float_sub} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction 30} {:instruction float_add})
Best program: (integer_flush float_cos integer_swap integer_stackdepth float_cos integer_swap integer_stackdepth integer_dup_items float_mult float_yank float_add float_sub in1 integer_yankdup integer_swap integer_swap float_dup float_sub integer_dup_items float_max in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1 print_integer 30 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2305.009759199995
Median total errors in population: 286.7425
Error averages by case: (81.19599099999944 11.305 81.19870569999938 11.371 76.9356016000018 11.137 82.08216439999931 11.201 81.38544020000097 11.334 82.00238920000082 11.17 82.55689000000082 11.291 78.06698719999973 11.199 80.1232262000009 11.29 80.67417799999943 11.291 79.75540449999966 11.251 79.95925760000004 12.059 78.9454190000017 11.31 79.34686439999962 11.293 82.2749567999996 11.313 80.46639879999873 11.208 79.49919429999991 11.168 82.80366719999981 11.437 82.18622809999914 11.132 84.56401280000047 11.427 80.10037320000079 11.254 83.00196320000039 11.372 77.74196499999866 11.179 83.22512240000069 11.186 82.32935840000142 11.41)
Error minima by case: (0.3901 11 0.2373 11 0.1168 10 0.0298 11 0.6517 11 0.5422 10 0.801 11 0.2168 10 0.7863 10 0.4958 11 0.1965 11 0.0288 9 0.1122 10 0.5004 11 0.6976 11 0.6363 10 0.2549 10 0.0731 11 0.2039 9 0.7544 11 0.8164 10 0.7061 10 0.6075 10 0.3884 10 0.4982 11)
Average genome size in population (length): 29.273
Average program size in population (points): 30.273
Average percent parens in population: 0.038
Minimum age in population: 183.5824379201982
Maximum age in population: 188.1067723341781
Average age in population: 186.2413878984806
Median age in population: 186.314243077299
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 144458342
--- Timings ---
Current time: 1529615810925 milliseconds
Total Time:         339.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.5 seconds, 47.0%
Fitness Testing:    139.5 seconds, 41.1%
Report:              40.2 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_add} {:instruction float_cos} {:instruction float_yank} {:instruction integer_inc} {:instruction float_rot} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction in1} {:instruction tagged_70} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_max} {:instruction 66.66501362565299} {:instruction print_integer})
Best program: (integer_dec in2 integer_inc integer_flush float_add float_cos float_yank integer_inc float_rot float_sub float_dec integer_yank in1 tagged_70 in1 integer_fromfloat in2 integer_add float_max 66.66501362565299 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2578.374486299995
Median total errors in population: 286.7425
Error averages by case: (92.44865040000025 11.301 90.37980729999867 11.358 89.17555040000192 11.145 90.44131339999991 11.189 90.78218170000109 11.32 93.45613600000017 11.165 91.9336860000015 11.296 88.27633679999906 11.2 92.85108920000174 11.281 92.03220320000028 11.284 92.2010640000006 11.252 92.09748800000004 12.055 90.9164092000018 11.3 91.62435840000043 11.289 92.3184687999996 11.313 89.75930769999874 11.208 88.96919429999991 11.165 93.66308239999894 11.426 94.91024759999831 11.138 95.17245120000115 11.418 92.55049439999999 11.254 93.93307779999968 11.366 87.9007124999987 11.176 94.60779200000002 11.183 93.4913836000014 11.4)
Error minima by case: (0.3901 11 0.2373 10 0.1168 10 0.0298 10 0.6517 8 0.5422 10 0.801 10 0.2168 9 0.7863 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.5004 10 0.6976 9 0.6363 11 0.2549 9 0.0731 9 0.2039 9 0.7544 10 0.8164 10 0.7061 8 0.6075 10 0.3884 10 0.4982 9)
Average genome size in population (length): 29.02
Average program size in population (points): 30.02
Average percent parens in population: 0.037
Minimum age in population: 185.1396051760561
Maximum age in population: 189.3719512776321
Average age in population: 187.656686749362
Median age in population: 187.7012561857555
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.689
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.689
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 145187674
--- Timings ---
Current time: 1529615813093 milliseconds
Total Time:         341.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.8 seconds, 47.1%
Fitness Testing:    140.3 seconds, 41.1%
Report:              40.4 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction 66.66501362565299} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_yank} {:instruction integer_inc} {:instruction float_rot} {:instruction float_sub} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_add} {:instruction integer_pop} {:instruction in1} {:instruction tagged_2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_swap float_rot float_dec 66.66501362565299 tagged_70 float_dup_items float_yank integer_inc float_rot float_sub float_dec float_frominteger integer_max integer_flush integer_add integer_pop in1 tagged_2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2782.918372899995
Median total errors in population: 286.7425
Error averages by case: (101.05630980000056 11.32 99.06108699999827 11.388 95.67442960000203 11.129 97.54170339999995 11.22 99.03755980000123 11.333 100.50230339999979 11.151 101.54132020000203 11.299 96.39251619999895 11.19 101.18207280000209 11.309 100.46322840000063 11.292 100.36627800000083 11.249 100.51571050000004 12.071 99.28311000000188 11.304 99.85435680000055 11.3 101.31774959999962 11.324 96.5010762999988 11.224 97.26303029999993 11.151 102.57164379999848 11.467 103.60153839999793 11.139 104.22294240000147 11.439 100.71322879999978 11.25 102.71266559999928 11.367 95.89355779999875 11.159 100.99356679999974 11.18 101.98338720000136 11.417)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.3483 2 0.5422 3 0.801 3 0.2168 2 0.2137 9 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.5004 3 0.6976 3 0.6363 10 0.2549 2 0.0731 3 0.2039 9 0.7544 3 0.8164 2 0.7061 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 28.75
Average program size in population (points): 29.75
Average percent parens in population: 0.038
Minimum age in population: 186.4934669629107
Maximum age in population: 191.0118117357513
Average age in population: 189.0923063640297
Median age in population: 189.1546619569832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.68
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.68
Total error diversity:				 0.042
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 145910032
--- Timings ---
Current time: 1529615815236 milliseconds
Total Time:         343.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.0 seconds, 47.1%
Fitness Testing:    141.0 seconds, 41.0%
Report:              40.6 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction print_integer} {:instruction float_sub} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction integer_max} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_flush} {:instruction tagged_408} {:instruction float_inc})
Best program: (integer_shove print_integer float_sub float_tan float_yank float_add in1 tagged_104 integer_max integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_flush tagged_408 float_inc)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2388.7561743999954
Median total errors in population: 286.7425
Error averages by case: (84.87921080000017 11.293 85.02351919999882 11.362 79.02753600000166 11.127 83.90831339999994 11.194 85.14918170000094 11.331 85.61010020000016 11.156 86.38209400000129 11.283 81.197553599999 11.201 84.97358510000147 11.286 84.40717800000021 11.276 83.52222550000039 11.241 84.80934400000004 12.048 80.32285800000157 11.295 83.15186280000047 11.284 83.15904959999962 11.297 82.48948919999879 11.202 82.65819429999992 11.158 86.24066719999924 11.426 87.07483979999867 11.132 87.85999520000101 11.41 83.88947480000002 11.248 86.47372659999978 11.364 81.88096499999871 11.164 86.40384120000009 11.182 85.89636920000136 11.405)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 28.718
Average program size in population (points): 29.718
Average percent parens in population: 0.038
Minimum age in population: 187.4934669629107
Maximum age in population: 192.5688807226126
Average age in population: 190.5668764822492
Median age in population: 190.6465262992224
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.665
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.665
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 146631382
--- Timings ---
Current time: 1529615817406 milliseconds
Total Time:         345.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.2 seconds, 47.2%
Fitness Testing:    141.8 seconds, 41.0%
Report:              40.9 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction 30} {:instruction float_add})
Best program: (float_dup float_sub integer_dup_items integer_yank in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1 print_integer 30 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 2173.287063999995
Median total errors in population: 286.7425
Error averages by case: (76.05728209999985 11.265 75.17002789999955 11.344 73.24641920000154 11.115 74.43337299999934 11.187 75.25121570000077 11.306 76.57618460000045 11.139 77.19909900000077 11.255 72.52767279999998 11.177 75.92702070000078 11.267 75.57363179999975 11.255 75.36197649999968 11.212 75.12963200000004 12.057 74.70909220000138 11.276 74.9138683999999 11.256 76.1915375999996 11.276 73.99212549999883 11.19 73.35627269999992 11.142 77.51647129999981 11.397 77.92426709999918 11.115 79.25131120000067 11.376 75.7349044000005 11.219 77.74931810000014 11.318 72.99389999999875 11.147 77.68861800000042 11.17 76.98384220000135 11.367)
Error minima by case: (0.3901 4 0.2373 5 0.1168 4 0.0298 10 0.3483 5 0.4578 5 0.199 5 0.2168 3 0.7863 10 0.4958 4 0.1965 4 0.0288 10 0.1122 4 0.4996 4 0.3024 4 0.3637 10 0.2549 3 0.0731 5 0.2039 10 0.2456 4 0.1836 4 0.2939 4 0.3925 3 0.3884 5 0.4982 4)
Average genome size in population (length): 29.055
Average program size in population (points): 30.055
Average percent parens in population: 0.038
Minimum age in population: 188.912629969199
Maximum age in population: 193.8867464131632
Average age in population: 192.03334350304
Median age in population: 192.0722857688039
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.656
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.656
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 147362057
--- Timings ---
Current time: 1529615819659 milliseconds
Total Time:         348.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       164.5 seconds, 47.2%
Fitness Testing:    142.5 seconds, 40.9%
Report:              41.1 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_cos} {:instruction integer_min} {:instruction integer_yank} {:instruction float_mult} {:instruction integer_div} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction print_float} {:instruction integer_min} {:instruction integer_shove} {:instruction print_integer} {:instruction float_tan} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_dup_times} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_cos} {:instruction integer_pop} {:instruction integer_shove} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_shove} {:instruction float_min} {:instruction print_integer})
Best program: (integer_fromfloat float_cos integer_min integer_yank float_mult integer_div float_dec float_max float_max print_float integer_min integer_shove print_integer float_tan integer_div in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth float_dup_times integer_flush float_dup_items float_yankdup float_yank float_cos integer_pop integer_shove in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_shove float_min print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2228.969581699995
Median total errors in population: 286.7425
Error averages by case: (78.58398179999978 11.257 75.8942135999999 11.316 74.19467710000107 11.126 75.92649839999955 11.176 76.18636860000043 11.288 79.30341030000056 11.148 79.86633030000023 11.255 74.12953279999972 11.174 78.60980990000043 11.254 78.16059149999984 11.248 78.01024529999953 11.218 78.36623510000005 12.049 78.13497130000094 11.274 77.67479429999997 11.254 80.27727029999961 11.274 75.50444639999901 11.177 74.65663739999992 11.137 79.64424370000015 11.381 80.3051246999997 11.12 81.04393430000033 11.37 78.4123543000004 11.22 79.89598130000016 11.327 74.88314639999894 11.146 80.27099030000049 11.168 79.31079230000113 11.366)
Error minima by case: (0.3901 5 0.2373 6 0.1168 4 0.0298 8 0.3483 6 0.4578 4 0.199 5 0.2168 4 0.2137 10 0.4958 5 0.1965 4 0.0288 9 0.1122 3 0.4996 5 0.3024 4 0.3637 9 0.2549 4 0.0731 7 0.2039 10 0.2456 7 0.1836 4 0.2939 7 0.3925 4 0.3884 4 0.4982 7)
Average genome size in population (length): 28.07
Average program size in population (points): 29.07
Average percent parens in population: 0.039
Minimum age in population: 190.7363529507543
Maximum age in population: 195.4246225194019
Average age in population: 193.449528657845
Median age in population: 193.5172226675574
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.651
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.651
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 148067457
--- Timings ---
Current time: 1529615821874 milliseconds
Total Time:         350.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.7 seconds, 47.3%
Fitness Testing:    143.3 seconds, 40.9%
Report:              41.3 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dec} {:instruction integer_flush} {:instruction in1} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction integer_sub} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (integer_dec integer_flush in1 integer_rot integer_inc float_dup_items float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_sub in1 integer_sub in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2196.669333299995
Median total errors in population: 286.7425
Error averages by case: (77.86211179999962 11.25 76.88888019999946 11.323 69.7332368000015 11.101 75.19982339999943 11.172 76.78164100000106 11.273 77.03543780000082 11.118 78.20690000000076 11.239 73.15668259999985 11.158 77.40167000000095 11.233 77.07115279999954 11.234 76.64220799999985 11.187 77.29092000000004 12.03 74.5649800000016 11.263 76.20936479999972 11.24 77.53063039999964 11.27 74.57248439999891 11.18 74.21543039999993 11.114 79.42117889999966 11.383 79.6995099999992 11.092 80.79127600000025 11.361 77.0035568000007 11.197 79.43208150000032 11.291 72.27214749999884 11.131 77.93117160000065 11.16 78.41185660000122 11.343)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.5422 5 0.801 4 0.2168 3 0.7863 10 0.4958 5 0.1965 6 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 6 0.7061 6 0.6075 4 0.3884 5 0.4982 6)
Average genome size in population (length): 28.292
Average program size in population (points): 29.292
Average percent parens in population: 0.038
Minimum age in population: 192.4325605580837
Maximum age in population: 197.150462822026
Average age in population: 194.9165103061789
Median age in population: 194.9749757915207
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.667
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.667
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 148778674
--- Timings ---
Current time: 1529615824108 milliseconds
Total Time:         352.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.9 seconds, 47.3%
Fitness Testing:    144.0 seconds, 40.8%
Report:              41.5 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_cos} {:instruction integer_swap} {:instruction tagged_29} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_yank} {:instruction float_sub} {:instruction float_yank} {:instruction print_integer} {:instruction float_sub} {:instruction in1} {:instruction tagged_10} {:instruction float_dup_items} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction print_integer})
Best program: (integer_flush float_cos integer_swap tagged_29 tagged_70 float_shove integer_fromfloat float_yank float_yank float_sub float_yank print_integer float_sub in1 tagged_10 float_dup_items integer_inc integer_fromfloat in2 integer_add integer_div float_dup print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2179.563167499995
Median total errors in population: 286.7425
Error averages by case: (77.18611179999927 11.262 76.19932839999987 11.339 71.6513536000016 11.1 74.52019549999883 11.175 76.14867570000085 11.299 75.87652220000129 11.127 76.85150200000024 11.256 73.62861200000015 11.166 78.91237960000083 11.252 76.52614439999921 11.247 76.04860099999928 11.198 77.31768960000004 12.044 69.88741900000142 11.262 75.78036559999948 11.249 72.15442079999961 11.274 72.66570799999873 11.182 74.55441679999991 11.131 78.54625200000002 11.403 81.24587879999925 11.094 80.09903040000032 11.377 76.45318960000102 11.206 78.60578760000043 11.311 72.67228349999867 11.131 76.71594840000112 11.155 77.7143512000014 11.361)
Error minima by case: (0.3901 5 0.2373 6 0.1168 4 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 4 0.2137 10 0.4958 5 0.1965 4 0.0288 9 0.1122 3 0.4996 5 0.3024 4 0.3637 10 0.2549 4 0.0731 7 0.2039 10 0.2456 7 0.1836 4 0.2939 7 0.3925 4 0.3884 4 0.4982 7)
Average genome size in population (length): 28.07
Average program size in population (points): 29.07
Average percent parens in population: 0.039
Minimum age in population: 193.4325605580837
Maximum age in population: 198.4109986379677
Average age in population: 196.3553454831954
Median age in population: 196.404314990045
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.66
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.66
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 149484791
--- Timings ---
Current time: 1529615826284 milliseconds
Total Time:         354.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       168.2 seconds, 47.4%
Fitness Testing:    144.7 seconds, 40.8%
Report:              41.8 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction -27} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_dup_times} {:instruction float_yank} {:instruction integer_inc} {:instruction float_rot} {:instruction float_inc} {:instruction print_float} {:instruction integer_yank} {:instruction integer_max} {:instruction float_mult} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (-27 integer_inc float_yank integer_dup_times float_yank integer_inc float_rot float_inc print_float integer_yank integer_max float_mult integer_rot integer_pop in1 in2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 1817.092201399995
Median total errors in population: 286.7425
Error averages by case: (62.13774349999869 11.227 60.313786600000576 11.306 59.52592320000137 11.11 60.00334919999863 11.156 60.24246090000062 11.263 62.748992800001616 11.114 63.678924999999566 11.224 58.31463860000047 11.161 61.72875489999979 11.223 61.44357299999874 11.223 60.748941499998764 11.18 61.69358240000004 12.043 60.82012160000121 11.26 60.655872399998934 11.222 64.39227999999959 11.264 59.23318509999886 11.161 59.10946709999991 11.124 63.26734850000092 11.364 63.84801530000038 11.078 63.760100799999194 11.338 61.2000684000015 11.182 63.26337910000137 11.287 58.823487499998805 11.125 63.60488160000157 11.151 61.420322400001254 11.327)
Error minima by case: (0.3901 9 0.2373 10 0.1168 9 0.0298 11 0.6517 8 0.5422 9 0.801 10 0.2168 10 0.7863 10 0.4958 11 0.1965 10 0.0288 9 0.1122 11 0.5004 9 0.6976 10 0.6363 10 0.2549 9 0.0731 10 0.2039 10 0.7544 11 0.8164 10 0.7061 10 0.6075 10 0.3884 10 0.4982 10)
Average genome size in population (length): 27.555
Average program size in population (points): 28.555
Average percent parens in population: 0.039
Minimum age in population: 194.4325605580837
Maximum age in population: 199.930201885797
Average age in population: 197.8034654357817
Median age in population: 197.8399846807122
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.634
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.634
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 150177266
--- Timings ---
Current time: 1529615828363 milliseconds
Total Time:         356.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.4 seconds, 47.5%
Fitness Testing:    145.5 seconds, 40.8%
Report:              41.9 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_flush} {:instruction integer_flush} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_cos} {:instruction tag_float_87} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tag_float_87} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_mod} {:instruction integer_max} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction print_integer})
Best program: (float_sub float_flush integer_flush float_max float_dup_times float_dup_items float_cos tag_float_87 float_yank float_add in1 tag_float_87 integer_fromfloat in1 integer_mod integer_max integer_fromfloat integer_stackdepth tagged_70 float_dup_items float_shove integer_fromfloat in2 integer_add integer_div float_dup print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 1970.119618599995
Median total errors in population: 286.7425
Error averages by case: (68.7357929999989 11.215 66.55190610000055 11.287 65.03898880000162 11.08 65.08002379999843 11.164 66.52771170000084 11.244 69.24165520000128 11.094 69.96771600000008 11.201 63.47879360000067 11.133 67.59596039999994 11.228 68.19109399999898 11.201 67.77795899999903 11.16 67.79820810000005 12.047 66.52511180000151 11.212 67.56537039999893 11.208 68.0430943999996 11.227 64.39702139999878 11.159 64.25475549999992 11.096 69.87998300000059 11.341 70.40114119999987 11.089 71.29908319999967 11.313 68.20798640000123 11.166 70.03526080000096 11.257 63.453896799998766 11.102 70.20377440000131 11.126 69.21132960000139 11.306)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 11 0.6517 2 0.4578 3 0.199 3 0.2168 2 0.7863 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 10 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.6075 1 0.3884 3 0.4982 3)
Average genome size in population (length): 27.064
Average program size in population (points): 28.064
Average percent parens in population: 0.040
Minimum age in population: 195.6309839500003
Maximum age in population: 201.5463151979592
Average age in population: 199.2740662230709
Median age in population: 199.3316985746734
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.644
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.644
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 150856841
--- Timings ---
Current time: 1529615830550 milliseconds
Total Time:         359.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.5 seconds, 47.5%
Fitness Testing:    146.2 seconds, 40.7%
Report:              42.1 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_swap} {:instruction float_shove} {:instruction integer_yank} {:instruction float_yank} {:instruction float_swap} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_yank} {:instruction print_float} {:instruction print_integer} {:instruction float_dup_times} {:instruction tag_float_831} {:instruction float_min} {:instruction integer_shove} {:instruction float_max} {:instruction in1} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction print_integer})
Best program: (integer_swap float_shove integer_yank float_yank float_swap float_dup integer_swap integer_yank print_float print_integer float_dup_times tag_float_831 float_min integer_shove float_max in1 integer_stackdepth integer_dup_items float_frominteger integer_inc integer_fromfloat in2 integer_add integer_div float_dup print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2083.471923099995
Median total errors in population: 286.7425
Error averages by case: (72.98145239999889 11.241 72.18760409999983 11.304 65.53841920000156 11.08 71.6514325999988 11.172 72.37160890000105 11.277 72.52989560000128 11.118 73.36670100000038 11.227 69.66980560000057 11.156 72.94223440000046 11.249 72.47512759999907 11.218 72.2993869999994 11.18 72.16663210000004 12.042 68.38475560000161 11.234 71.32686679999922 11.227 70.33832799999963 11.239 71.24585289999888 11.169 70.50025309999991 11.115 74.58054439999998 11.36 74.9844709999994 11.099 76.32106559999993 11.342 72.68045520000126 11.197 74.78143640000074 11.293 69.7974699999988 11.12 73.31678320000124 11.135 73.9003404000013 11.339)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.3483 2 0.5422 3 0.801 3 0.2168 2 0.2137 10 0.4958 3 0.1965 2 0.0288 10 0.1122 3 0.5004 3 0.6976 3 0.6363 10 0.2549 2 0.0731 3 0.2039 10 0.7544 3 0.8164 2 0.7061 3 0.3925 1 0.3884 3 0.4982 3)
Average genome size in population (length): 26.924
Average program size in population (points): 27.924
Average percent parens in population: 0.040
Minimum age in population: 197.347991300596
Maximum age in population: 202.8869085234046
Average age in population: 200.7349473050582
Median age in population: 200.7621474879622
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.65
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.65
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 151533991
--- Timings ---
Current time: 1529615832674 milliseconds
Total Time:         361.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       171.7 seconds, 47.5%
Fitness Testing:    146.9 seconds, 40.7%
Report:              42.5 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_cos} {:instruction float_frominteger} {:instruction in2} {:instruction integer_swap} {:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_max} {:instruction in1} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_max} {:instruction 66.66501362565299} {:instruction print_integer})
Best program: (integer_max float_cos integer_swap integer_stackdepth float_shove float_cos float_frominteger in2 integer_swap float_dup float_sub integer_dup_items float_max in1 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger integer_mult integer_add integer_div integer_fromfloat in2 integer_add float_max 66.66501362565299 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2332.3043985999952
Median total errors in population: 286.7425
Error averages by case: (83.26438109999978 11.267 81.19970569999906 11.364 77.38270400000211 11.111 79.67667099999947 11.204 80.9403953000011 11.33 83.9885222000004 11.136 84.79270100000144 11.264 77.71307119999982 11.182 83.05731110000156 11.288 82.53867379999986 11.261 81.90683250000038 11.212 83.16883360000004 12.049 79.27298000000192 11.298 81.72986200000005 11.258 82.8310255999996 11.298 78.84548849999877 11.205 78.73272369999991 11.136 84.45959409999914 11.426 85.5548982999984 11.105 85.83873200000076 11.398 82.32384200000034 11.222 84.46102050000005 11.342 77.83260999999872 11.134 85.22394840000028 11.176 83.50687100000135 11.395)
Error minima by case: (0.3901 3 0.2373 4 0.1168 2 0.0298 11 0.3483 4 0.4578 3 0.199 3 0.2168 2 0.2137 10 0.4958 3 0.1965 3 0.0288 9 0.1122 2 0.4996 3 0.3024 3 0.3637 11 0.2549 2 0.0731 4 0.2039 9 0.2456 3 0.1836 3 0.2939 3 0.3925 2 0.3884 3 0.4982 3)
Average genome size in population (length): 26.927
Average program size in population (points): 27.927
Average percent parens in population: 0.040
Minimum age in population: 199.7493219542367
Maximum age in population: 204.0110943700529
Average age in population: 202.1932361171619
Median age in population: 202.2676170685898
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.642
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.642
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 152211216
--- Timings ---
Current time: 1529615834784 milliseconds
Total Time:         363.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.9 seconds, 47.6%
Fitness Testing:    147.6 seconds, 40.6%
Report:              42.7 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_mult} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_pop} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_cos} {:instruction float_sub} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_add} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (float_sub float_mult integer_dec integer_mod float_pop integer_dup_items float_rot float_cos float_sub integer_div in1 tagged_70 float_dup_items float_shove integer_fromfloat in2 integer_add integer_div float_add in1 tagged_70 float_shove integer_fromfloat in2 integer_add float_mult in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 1976.806805999995
Median total errors in population: 286.7425
Error averages by case: (68.67223259999922 11.234 67.02016360000034 11.303 65.49835360000134 11.091 66.31776039999879 11.16 67.99008100000069 11.274 69.23198000000106 11.112 69.76930799999995 11.227 64.81362400000052 11.154 69.68809740000027 11.24 68.21011079999928 11.218 67.23494149999901 11.187 69.56289120000004 12.048 63.27642880000115 11.224 66.92887239999928 11.222 64.05330399999961 11.238 64.911124799999 11.162 66.25680209999992 11.127 70.05083680000038 11.349 71.60530609999972 11.098 71.69959200000012 11.332 67.62706840000097 11.189 70.31767300000062 11.284 65.10736749999896 11.125 70.2535600000009 11.131 69.66032600000119 11.32)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 11 0.6517 6 0.5422 4 0.801 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 10 0.1122 4 0.5004 5 0.6976 5 0.3637 11 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 26.137
Average program size in population (points): 27.137
Average percent parens in population: 0.041
Minimum age in population: 200.7493219542367
Maximum age in population: 205.8216179615087
Average age in population: 203.6730621276609
Median age in population: 203.7171101760646
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.628
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.628
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 152868216
--- Timings ---
Current time: 1529615836973 milliseconds
Total Time:         365.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.1 seconds, 47.6%
Fitness Testing:    148.3 seconds, 40.6%
Report:              42.9 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_mult} {:instruction float_yank} {:instruction float_add} {:instruction float_div} {:instruction float_mod} {:instruction tagged_594} {:instruction integer_div} {:instruction in1} {:instruction tagged_57} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (integer_flush float_cos integer_swap integer_stackdepth integer_dup_items float_mult float_yank float_add float_div float_mod tagged_594 integer_div in1 tagged_57 integer_dec integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_div in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2119.380219099995
Median total errors in population: 286.7425
Error averages by case: (74.25962269999954 11.279 72.51970300000002 11.358 65.83665280000113 11.102 73.22052909999937 11.183 73.59862850000053 11.316 74.1810158000007 11.138 74.94649200000018 11.258 69.83635469999989 11.186 74.31986730000038 11.252 73.71060659999951 11.254 73.7423694999993 11.214 74.18808480000004 12.038 71.95764340000103 11.279 73.11386919999971 11.258 74.65935199999961 11.281 71.47263689999893 11.189 70.70512909999992 11.143 75.83676370000038 11.403 76.65100469999979 11.108 77.57331120000038 11.382 74.08153720000061 11.225 76.03373030000043 11.321 70.50518839999884 11.148 75.19928760000064 11.162 75.38583860000129 11.368)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.5422 9 0.801 10 0.2168 10 0.2137 9 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.5004 10 0.6976 10 0.6363 10 0.2549 9 0.0731 10 0.2039 10 0.7544 10 0.8164 9 0.7061 8 0.3925 9 0.3884 10 0.4982 9)
Average genome size in population (length): 25.7
Average program size in population (points): 26.7
Average percent parens in population: 0.042
Minimum age in population: 202.6766166906537
Maximum age in population: 207.7051869991464
Average age in population: 205.1692165798143
Median age in population: 205.2219120704326
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.617
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.617
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 153514166
--- Timings ---
Current time: 1529615839137 milliseconds
Total Time:         367.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.4 seconds, 47.7%
Fitness Testing:    149.0 seconds, 40.5%
Report:              43.1 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_dup} {:instruction float_mult} {:instruction integer_div} {:instruction float_mult} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_div} {:instruction float_dup} {:instruction print_integer})
Best program: (integer_fromfloat float_cos float_dup float_mult integer_div float_mult integer_div in1 tagged_70 float_dup_items float_shove integer_fromfloat in2 integer_add integer_div float_dup print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 2051.941188699995
Median total errors in population: 286.7425
Error averages by case: (71.61784249999913 11.237 71.02565489999982 11.296 64.40040480000165 11.099 71.04190939999899 11.159 71.19835040000096 11.268 72.24323320000089 11.124 73.00710900000053 11.231 68.52872160000051 11.161 71.49145630000048 11.232 71.07461499999923 11.224 70.67558349999943 11.191 70.37097760000005 12.032 66.1151020000015 11.241 70.48286759999934 11.225 71.69951359999965 11.251 69.63721519999886 11.163 69.85525309999991 11.124 72.54761750000002 11.359 73.23012169999942 11.098 73.81829360000023 11.336 71.112271600001 11.199 72.6929059000006 11.298 68.03143249999881 11.125 72.91189040000084 11.143 71.98084580000126 11.334)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 25.546
Average program size in population (points): 26.546
Average percent parens in population: 0.042
Minimum age in population: 203.7207822737669
Maximum age in population: 208.7051869991464
Average age in population: 206.6439969295123
Median age in population: 206.7015019084301
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.591
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.591
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 154155891
--- Timings ---
Current time: 1529615841216 milliseconds
Total Time:         369.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.6 seconds, 47.8%
Fitness Testing:    149.7 seconds, 40.5%
Report:              43.4 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_tan} {:instruction tagged_575} {:instruction integer_rot} {:instruction tag_integer_406} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction float_yank} {:instruction float_dup} {:instruction in2} {:instruction integer_add} {:instruction float_min} {:instruction integer_shove} {:instruction print_integer})
Best program: (float_tan tagged_575 integer_rot tag_integer_406 float_max in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 float_yank float_dup in2 integer_add float_min integer_shove print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2261.570017899995
Median total errors in population: 286.7425
Error averages by case: (78.73572169999959 11.291 80.5559429999995 11.366 76.6938352000016 11.13 79.44425379999936 11.194 80.69904700000085 11.331 79.68610020000071 11.161 79.49449200000058 11.281 77.80228799999962 11.195 79.35594400000079 11.285 77.95964859999967 11.274 77.45479749999936 11.237 79.31140160000004 12.059 76.69385800000143 11.293 77.07286519999951 11.275 79.4333519999996 11.301 78.43694399999877 11.2 78.74497859999991 11.162 80.4241789 11.428 81.78343199999921 11.126 82.1572760000005 11.41 77.8250060000009 11.248 80.43408150000037 11.36 78.46043249999876 11.164 81.18328760000074 11.18 79.37185300000137 11.404)
Error minima by case: (0.3901 10 0.2373 10 0.1168 10 0.0298 11 0.6517 8 0.5422 10 0.801 10 0.2168 10 0.7863 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.4996 10 0.6976 10 0.6363 11 0.2549 9 0.0731 10 0.2039 10 0.7544 10 0.8164 10 0.7061 8 0.6075 10 0.3884 10 0.4982 9)
Average genome size in population (length): 25.403
Average program size in population (points): 26.403
Average percent parens in population: 0.042
Minimum age in population: 204.7207822737669
Maximum age in population: 210.1865968527137
Average age in population: 208.1232497177465
Median age in population: 208.1987027644565
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.617
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.617
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 154793541
--- Timings ---
Current time: 1529615843399 milliseconds
Total Time:         371.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.8 seconds, 47.8%
Fitness Testing:    150.4 seconds, 40.5%
Report:              43.5 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction float_mod} {:instruction in1} {:instruction tagged_70} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_min} {:instruction float_add} {:instruction tagged_70} {:instruction integer_sub} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_swap} {:instruction float_div} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction in1} {:instruction print_integer} {:instruction integer_flush} {:instruction integer_div})
Best program: (integer_add float_mod in1 tagged_70 integer_rot integer_min integer_min float_add tagged_70 integer_sub float_sin integer_stackdepth float_swap float_div float_yank float_add in1 integer_dec float_shove integer_fromfloat in2 integer_add float_mult in1 print_integer integer_flush integer_div)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 1992.9508377999955
Median total errors in population: 286.7425
Error averages by case: (68.52667219999915 11.248 67.77294300000031 11.304 65.33700320000116 11.107 68.2605219999989 11.173 68.60604700000069 11.274 68.68381120000114 11.137 69.05970599999989 11.24 65.53928800000041 11.168 69.07509740000006 11.238 68.09512759999922 11.229 68.57181499999908 11.2 68.85786240000004 12.038 67.03931660000107 11.242 67.78036399999938 11.225 69.43802559999965 11.257 67.91530699999896 11.181 66.26550799999991 11.128 69.55654440000056 11.348 71.00651000000003 11.115 70.97952159999977 11.338 68.8929240000009 11.197 69.8179632000007 11.307 66.94603999999892 11.145 69.89556000000107 11.15 69.71235840000116 11.33)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 11 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 10 0.4958 4 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 11 0.2549 3 0.0731 6 0.2039 10 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 3 0.4982 5)
Average genome size in population (length): 25.081
Average program size in population (points): 26.081
Average percent parens in population: 0.043
Minimum age in population: 206.6876484160424
Maximum age in population: 211.4347679940174
Average age in population: 209.5589338339589
Median age in population: 209.6189360891501
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 155423016
--- Timings ---
Current time: 1529615845591 milliseconds
Total Time:         374.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.1 seconds, 47.9%
Fitness Testing:    151.1 seconds, 40.4%
Report:              43.8 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction 30} {:instruction float_add})
Best program: (float_dup float_sub integer_dup_items float_sin in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1 print_integer 30 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 1991.8680241999953
Median total errors in population: 286.7425
Error averages by case: (68.6908424999988 11.252 68.60502790000034 11.321 65.3400544000015 11.11 67.84093919999867 11.163 68.91151910000083 11.275 68.78485980000146 11.128 69.77171100000002 11.242 64.7556728000007 11.163 68.22688369999996 11.23 67.99961499999885 11.238 68.11358349999895 11.191 67.83289120000005 12.045 68.32321420000137 11.259 67.3218683999989 11.238 70.89151359999966 11.266 67.32139739999893 11.176 65.72178249999992 11.125 70.38569060000047 11.373 70.13671389999995 11.096 71.89506559999975 11.345 68.41227160000133 11.196 70.47243640000092 11.301 65.02707749999892 11.134 69.95005560000116 11.155 69.77833680000124 11.335)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 11 0.3483 8 0.4578 10 0.199 10 0.2168 10 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.4996 10 0.3024 10 0.3637 10 0.2549 9 0.0731 10 0.2039 10 0.2456 10 0.1836 10 0.2939 8 0.3925 10 0.3884 10 0.4982 9)
Average genome size in population (length): 25.004
Average program size in population (points): 26.004
Average percent parens in population: 0.043
Minimum age in population: 207.6876484160424
Maximum age in population: 212.9487001568052
Average age in population: 210.9991476060319
Median age in population: 211.063976884418
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.622
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.622
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 156050741
--- Timings ---
Current time: 1529615847684 milliseconds
Total Time:         376.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.3 seconds, 47.9%
Fitness Testing:    151.8 seconds, 40.3%
Report:              44.0 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_flush} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction float_cos} {:instruction integer_pop} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction tagged_70} {:instruction in1} {:instruction tagged_2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_shove integer_flush float_add float_min integer_fromfloat integer_pop float_cos integer_pop float_yank integer_stackdepth tagged_70 in1 tagged_2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2274.268452999995
Median total errors in population: 286.7425
Error averages by case: (80.27694149999957 11.244 79.53394299999935 11.309 74.67006880000183 11.106 80.13855179999928 11.182 79.92104700000098 11.277 80.42610020000075 11.127 81.60029300000087 11.242 75.70128799999992 11.158 79.35216590000093 11.263 79.66865699999953 11.234 79.9574394999998 11.191 77.07483370000004 12.043 78.1617556000017 11.259 79.08486199999972 11.234 82.42695679999963 11.262 79.75512549999881 11.175 76.65999819999992 11.124 81.83495959999975 11.371 81.54208269999916 11.111 83.28899520000053 11.356 80.23820920000058 11.203 82.02313880000038 11.312 77.16060999999875 11.126 80.8520644000007 11.154 81.50636560000139 11.349)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 11 0.6517 2 0.4578 3 0.199 3 0.2168 2 0.7863 10 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 9 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.6075 1 0.3884 3 0.4982 3)
Average genome size in population (length): 24.957
Average program size in population (points): 25.957
Average percent parens in population: 0.044
Minimum age in population: 208.6876484160424
Maximum age in population: 214.7847431456937
Average age in population: 212.5246797823824
Median age in population: 212.5465714031283
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 156677491
--- Timings ---
Current time: 1529615849731 milliseconds
Total Time:         378.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.5 seconds, 48.0%
Fitness Testing:    152.5 seconds, 40.3%
Report:              44.2 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_max} {:instruction in1} {:instruction tagged_93} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction in1} {:instruction tagged_93} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction integer_add} {:instruction integer_div} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_div})
Best program: (integer_dup_items float_max in1 tagged_93 float_dup_items integer_fromfloat float_tan float_yank float_add in1 tagged_104 in1 tagged_93 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_add integer_add integer_div integer_shove print_integer integer_div)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2157.6943727999956
Median total errors in population: 286.7425
Error averages by case: (76.93833159999978 11.22 71.1758921999996 11.302 72.33476960000152 11.072 71.51258159999941 11.189 71.75865380000084 11.267 76.11581120000055 11.102 76.56590000000077 11.214 68.4915888000003 11.132 77.20809740000111 11.264 76.35315279999983 11.21 76.35081499999998 11.168 76.16083360000005 12.053 75.63520440000141 11.234 75.77536399999995 11.211 77.06383999999963 11.245 70.8075795999989 11.183 69.37350799999992 11.093 78.23795959999956 11.358 79.675102199999 11.099 79.76750400000074 11.338 76.69892400000037 11.169 78.38655100000004 11.283 68.95603999999885 11.099 77.55800640000045 11.13 77.83436200000122 11.323)
Error minima by case: (0.3901 4 0.2373 5 0.1168 3 0.0298 10 0.6517 5 0.4578 4 0.199 4 0.2168 3 0.7863 10 0.4958 4 0.1965 4 0.0288 9 0.1122 2 0.4996 4 0.3024 4 0.3637 10 0.2549 3 0.0731 5 0.2039 10 0.2456 4 0.1836 4 0.2939 4 0.6075 3 0.3884 4 0.4982 4)
Average genome size in population (length): 24.462
Average program size in population (points): 25.462
Average percent parens in population: 0.044
Minimum age in population: 210.6894895307644
Maximum age in population: 215.9651070368747
Average age in population: 213.9977248894183
Median age in population: 214.057715374485
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.605
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.605
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 157292291
--- Timings ---
Current time: 1529615851845 milliseconds
Total Time:         380.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.6 seconds, 48.0%
Fitness Testing:    153.2 seconds, 40.3%
Report:              44.4 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction print_integer} {:instruction 30} {:instruction float_add})
Best program: (integer_flush integer_stackdepth integer_yank in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1 print_integer 30 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 2028.4579206999954
Median total errors in population: 286.7425
Error averages by case: (70.1607216999993 11.254 69.22892439999991 11.342 68.32247040000145 11.11 69.11453169999919 11.17 69.48673690000071 11.296 71.13277540000088 11.13 70.87691000000038 11.251 66.56067710000038 11.177 69.4902426000004 11.249 69.52664859999929 11.242 69.51861849999938 11.195 69.51803520000004 12.036 67.10198980000129 11.275 68.91686359999962 11.247 70.56651359999961 11.28 68.39811799999885 11.179 67.53634029999992 11.127 71.75603270000016 11.398 73.24912169999945 11.087 73.41976720000024 11.373 69.85710760000092 11.198 71.85766930000055 11.318 67.58396899999883 11.141 72.54127880000073 11.164 71.13585660000129 11.361)
Error minima by case: (0.3901 11 0.2373 10 0.1168 10 0.0298 11 0.3483 8 0.4578 10 0.199 11 0.2168 9 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.4996 8 0.3024 11 0.3637 11 0.2549 8 0.0731 10 0.2039 9 0.2456 10 0.1836 10 0.2939 8 0.3925 10 0.3884 10 0.4982 9)
Average genome size in population (length): 24.6
Average program size in population (points): 25.6
Average percent parens in population: 0.044
Minimum age in population: 213.0463664861636
Maximum age in population: 217.3257600981158
Average age in population: 215.4761943705862
Median age in population: 215.5316959795142
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.607
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.607
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 157911066
--- Timings ---
Current time: 1529615854102 milliseconds
Total Time:         382.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.9 seconds, 48.1%
Fitness Testing:    154.0 seconds, 40.2%
Report:              44.7 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_flush} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dup} {:instruction tagged_70} {:instruction integer_sub} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_swap} {:instruction float_div} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_dup_times} {:instruction -71.07752850244657} {:instruction integer_pop} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_flush integer_flush float_cos integer_swap integer_min float_dup tagged_70 integer_sub float_sin integer_stackdepth float_swap float_div float_yank float_add in1 integer_dec float_shove integer_fromfloat in2 integer_add integer_dup_times -71.07752850244657 integer_pop in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2183.3397228999947
Median total errors in population: 286.7425
Error averages by case: (76.87489199999925 11.256 75.01187509999967 11.333 72.75623970000177 11.104 74.7897606999991 11.187 75.304870800001 11.285 76.47193010000102 11.122 76.39709900000047 11.244 72.56885450000006 11.161 76.88895220000067 11.267 76.3561359999993 11.243 76.18238699999957 11.208 76.09712130000004 12.058 76.28664340000165 11.258 75.7853671999995 11.247 76.96814239999962 11.268 74.03555469999883 11.184 73.34063199999993 11.13 78.15125200000011 11.387 78.94710219999946 11.118 79.67404800000027 11.362 76.57145520000093 11.204 78.34161200000071 11.315 73.37871089999877 11.14 76.93374050000101 11.152 77.63834400000131 11.354)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.4578 4 0.199 4 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 24.423
Average program size in population (points): 25.423
Average percent parens in population: 0.044
Minimum age in population: 214.208313670357
Maximum age in population: 218.670379381798
Average age in population: 216.9169044082361
Median age in population: 216.9804977811431
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.622
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.622
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 158525566
--- Timings ---
Current time: 1529615856424 milliseconds
Total Time:         384.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.1 seconds, 48.1%
Fitness Testing:    154.7 seconds, 40.2%
Report:              44.9 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction integer_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction integer_div} {:instruction in1} {:instruction print_integer} {:instruction float_add})
Best program: (integer_max integer_max integer_min float_frominteger float_dup_times float_dup_items float_max in1 tagged_70 float_shove integer_fromfloat in2 integer_add float_mult integer_div in1 print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1633.6004101999952
Median total errors in population: 286.7425
Error averages by case: (55.913864299998984 11.175 53.51699920000044 11.246 48.8005728000009 11.061 52.28687619999914 11.137 53.43554030000038 11.216 54.030908400001124 11.08 54.0945319999997 11.174 50.20340340000017 11.117 55.559678199999794 11.193 55.34853939999911 11.169 54.15231699999891 11.13 54.01540960000004 12.03 53.69457040000087 11.19 53.0568755999993 11.171 56.01646559999973 11.192 51.25421929999907 11.136 51.766077399999915 11.084 57.197079500000754 11.287 57.12497630000037 11.071 58.7463991999996 11.264 54.578783200000984 11.142 57.37844010000096 11.23 50.36719499999899 11.087 54.587881600001076 11.108 56.5238062000011 11.259)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 10 0.4958 5 0.1965 4 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 9 0.2549 3 0.0731 6 0.2039 9 0.2456 5 0.1836 4 0.2939 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 23.696
Average program size in population (points): 24.696
Average percent parens in population: 0.045
Minimum age in population: 215.5090239300597
Maximum age in population: 220.3446673062282
Average age in population: 218.3413677906436
Median age in population: 218.3687604004693
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.572
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.572
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 159121641
--- Timings ---
Current time: 1529615858546 milliseconds
Total Time:         387.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.3 seconds, 48.1%
Fitness Testing:    155.4 seconds, 40.2%
Report:              45.2 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_dup} {:instruction float_mult} {:instruction integer_div} {:instruction float_mult} {:instruction integer_div} {:instruction float_mult} {:instruction integer_div} {:instruction in1} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction print_integer} {:instruction float_min})
Best program: (integer_fromfloat float_cos float_dup float_mult integer_div float_mult integer_div float_mult integer_div in1 in1 tagged_70 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_sub in1 print_integer float_min)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1762.5798748999953
Median total errors in population: 286.7425
Error averages by case: (59.590743499998744 11.195 58.180677000000514 11.255 55.36892320000124 11.087 58.114419399998546 11.139 58.51906820000071 11.224 61.11436620000169 11.101 61.84072599999957 11.198 55.28380180000053 11.137 59.731182299999794 11.192 59.04957299999878 11.187 58.82076249999877 11.152 59.59252480000004 12.029 60.02312160000145 11.218 58.51586999999898 11.188 62.46837279999961 11.221 57.687210399998875 11.142 56.05180289999992 11.091 60.40934850000095 11.305 61.59379190000036 11.079 61.6198199999993 11.281 59.24117000000141 11.155 60.56314250000118 11.235 57.133904999998826 11.105 61.71371640000165 11.126 60.032835000001256 11.277)
Error minima by case: (0.3901 5 0.2373 6 0.1168 4 0.0298 10 0.6517 6 0.5422 4 0.801 5 0.2168 4 0.7863 10 0.4958 5 0.1965 4 0.0288 9 0.1122 3 0.4996 5 0.6976 4 0.6363 10 0.2549 4 0.0731 7 0.2039 10 0.2456 7 0.1836 4 0.2939 7 0.6075 4 0.3884 4 0.4982 7)
Average genome size in population (length): 23.608
Average program size in population (points): 24.608
Average percent parens in population: 0.045
Minimum age in population: 217.2433112850656
Maximum age in population: 221.8927266861113
Average age in population: 219.8445314863206
Median age in population: 219.8719258041035
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.581
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.581
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 159715691
--- Timings ---
Current time: 1529615860708 milliseconds
Total Time:         389.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.6 seconds, 48.2%
Fitness Testing:    156.1 seconds, 40.1%
Report:              45.4 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction float_shove} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction tagged_70} {:instruction in1} {:instruction tagged_2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_pop float_shove float_yank integer_stackdepth tagged_70 in1 tagged_2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 2122.627714499995
Median total errors in population: 286.7425
Error averages by case: (74.35311179999975 11.23 73.27751919999984 11.294 70.38135360000116 11.106 73.69393919999943 11.163 73.03078850000036 11.256 72.44277540000058 11.12 74.0157110000003 11.236 71.23255359999958 11.155 75.02181520000089 11.229 73.91214439999982 11.218 73.34643949999942 11.185 73.27303520000004 12.033 73.40610200000114 11.234 72.63286119999988 11.225 74.3095135999996 11.25 73.17003369999881 11.171 71.93648839999992 11.121 74.43317890000017 11.343 77.19032559999896 11.106 76.6824864000008 11.329 73.68120920000041 11.182 74.69043270000022 11.294 71.76774999999878 11.132 75.22027880000029 11.135 74.46486740000132 11.314)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.5422 4 0.801 4 0.2168 3 0.2137 10 0.4958 5 0.1965 4 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 10 0.7544 5 0.8164 4 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 23.528
Average program size in population (points): 24.528
Average percent parens in population: 0.045
Minimum age in population: 218.9080325379026
Maximum age in population: 223.3633081139871
Average age in population: 221.2881676643196
Median age in population: 221.3469048269732
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.607
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.607
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 160308341
--- Timings ---
Current time: 1529615862783 milliseconds
Total Time:         391.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.8 seconds, 48.2%
Fitness Testing:    156.8 seconds, 40.1%
Report:              45.6 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_mult} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_max} {:instruction integer_swap} {:instruction float_yank} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction tag_float_699} {:instruction float_cos} {:instruction float_sub} {:instruction float_tan} {:instruction float_yank} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction integer_shove} {:instruction print_integer} {:instruction float_add})
Best program: (float_sub float_mult float_dup_items integer_fromfloat integer_inc integer_max integer_swap float_yank integer_mult integer_dup_items tag_float_699 float_cos float_sub float_tan float_yank float_add in1 tagged_104 float_yankdup integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 integer_add integer_stackdepth integer_div integer_shove print_integer float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 1915.2518292999953
Median total errors in population: 286.7425
Error averages by case: (64.35635339999861 11.236 67.97173980000052 11.3 60.801704000001514 11.101 67.30967099999852 11.167 68.0691259000007 11.257 66.10614880000162 11.118 66.64050699999963 11.225 63.969756800000525 11.155 64.7962425999998 11.222 64.03607719999867 11.218 64.06613799999862 11.182 63.66794880000004 12.047 64.4962142000014 11.236 63.62337279999886 11.224 66.98011839999963 11.243 66.33821589999877 11.171 65.17205699999991 11.121 65.74527540000105 11.334 65.65171390000035 11.104 67.29310079999944 11.324 64.45488480000154 11.184 66.02908520000132 11.279 65.41232999999868 11.135 65.77872520000157 11.142 65.45432240000139 11.306)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.5422 9 0.801 10 0.2168 9 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.5004 10 0.6976 10 0.3637 10 0.2549 9 0.0731 10 0.2039 9 0.7544 10 0.8164 9 0.7061 8 0.3925 9 0.3884 10 0.4982 9)
Average genome size in population (length): 23.348
Average program size in population (points): 24.348
Average percent parens in population: 0.046
Minimum age in population: 220.192056550125
Maximum age in population: 224.7009591534263
Average age in population: 222.7879683260549
Median age in population: 222.8337428267493
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.6
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.6
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 160895991
--- Timings ---
Current time: 1529615864863 milliseconds
Total Time:         393.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.0 seconds, 48.3%
Fitness Testing:    157.5 seconds, 40.0%
Report:              45.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_mult} {:instruction integer_dec} {:instruction -3.2138100645181282} {:instruction float_pop} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_cos} {:instruction float_sub} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_yank} {:instruction float_cos} {:instruction float_sub} {:instruction integer_div} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction tagged_10} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_min} {:instruction float_dup} {:instruction integer_add} {:instruction 63.09739764943504} {:instruction in1} {:instruction print_integer})
Best program: (float_sub float_mult integer_dec -3.2138100645181282 float_pop integer_dup_items integer_yankdup float_cos float_sub integer_div in1 tagged_70 float_yank float_cos float_sub integer_div float_add integer_dup_items integer_add in1 tagged_10 float_dup_items float_shove integer_fromfloat in2 integer_add float_min float_dup integer_add 63.09739764943504 in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1937.6620770999953
Median total errors in population: 286.7425
Error averages by case: (66.8120127999992 11.214 66.07201590000035 11.283 59.85628800000133 11.083 65.55561479999851 11.159 66.31750630000086 11.256 66.84777540000108 11.109 68.052512 11.213 63.57263380000069 11.147 66.71067000000016 11.226 66.35010239999907 11.2 66.174351999999 11.168 65.81494880000004 12.042 65.86776540000133 11.229 65.78937039999924 11.203 67.84190879999963 11.23 65.20175769999895 11.159 64.34072449999992 11.109 68.12783680000051 11.332 68.42910219999996 11.094 69.72808319999973 11.309 66.56598640000112 11.173 68.3678486000009 11.266 64.16465249999888 11.106 66.66427880000118 11.132 67.69032960000119 11.304)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 9 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 23.283
Average program size in population (points): 24.283
Average percent parens in population: 0.046
Minimum age in population: 221.192056550125
Maximum age in population: 226.1581182033971
Average age in population: 224.1999485546942
Median age in population: 224.2499841177912
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.59
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.59
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 161482041
--- Timings ---
Current time: 1529615866910 milliseconds
Total Time:         395.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       191.2 seconds, 48.3%
Fitness Testing:    158.1 seconds, 40.0%
Report:              46.0 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_sub} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction float_max} {:instruction tagged_70} {:instruction integer_rot} {:instruction integer_inc} {:instruction in1} {:instruction tagged_70} {:instruction float_max} {:instruction integer_dup_items} {:instruction tag_float_475} {:instruction float_cos} {:instruction float_yank} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_max} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction integer_yank})
Best program: (integer_fromfloat float_sub integer_yankdup integer_shove float_max tagged_70 integer_rot integer_inc in1 tagged_70 float_max integer_dup_items tag_float_475 float_cos float_yank integer_dup_times integer_rot integer_max in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_sub in1 print_integer integer_sub integer_yank)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2044.8296422999954
Median total errors in population: 286.7425
Error averages by case: (71.2458424999989 11.216 68.11284140000033 11.255 64.73170400000132 11.086 70.14684979999869 11.149 69.12395720000083 11.234 72.3435222000014 11.108 72.04030799999992 11.211 66.24258880000035 11.138 71.12438780000016 11.207 70.88961499999895 11.207 71.56379749999917 11.174 70.20012160000005 12.023 70.54776540000137 11.219 70.66786599999925 11.201 72.20842079999962 11.228 69.75730629999892 11.153 66.7935471999999 11.108 72.27961750000054 11.313 73.1217333999995 11.097 73.73127599999987 11.3 71.87000600000127 11.178 72.62908150000105 11.262 67.3856849999989 11.117 72.80894840000133 11.132 72.6468530000012 11.3)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 23.452
Average program size in population (points): 24.452
Average percent parens in population: 0.045
Minimum age in population: 223.4418757479398
Maximum age in population: 227.7235528205964
Average age in population: 225.6863254124271
Median age in population: 225.7416293257211
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.605
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.605
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 162072541
--- Timings ---
Current time: 1529615869063 milliseconds
Total Time:         397.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.4 seconds, 48.4%
Fitness Testing:    158.8 seconds, 39.9%
Report:              46.2 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_tan} {:instruction tagged_575} {:instruction float_add} {:instruction in1} {:instruction tagged_104} {:instruction in1} {:instruction tagged_93} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction float_frominteger} {:instruction tagged_70} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_max} {:instruction 66.43031538192662} {:instruction print_integer})
Best program: (float_tan tagged_575 float_add in1 tagged_104 in1 tagged_93 float_dup_items integer_fromfloat integer_stackdepth integer_dup_items float_frominteger in2 float_frominteger tagged_70 in1 integer_fromfloat in2 integer_add float_max 66.43031538192662 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1918.7740036999953
Median total errors in population: 286.7425
Error averages by case: (67.59406229999871 11.165 60.81776660000054 11.218 65.26428800000163 11.052 60.991303599998346 11.156 61.333841800000954 11.193 68.67157080000148 11.068 69.13311399999988 11.167 57.87337800000074 11.097 67.42789189999984 11.209 67.34762339999867 11.156 67.17179749999885 11.129 66.55938080000004 12.036 65.10232640000144 11.164 66.76986599999887 11.16 67.54939679999964 11.176 60.4052980999989 11.142 59.00441159999992 11.067 67.57547130000067 11.271 69.82036460000006 11.088 69.45653919999945 11.251 67.54100600000154 11.135 68.69919980000114 11.223 59.18675999999885 11.072 69.42599760000142 11.087 68.3213476000012 11.248)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 4 0.0288 9 0.1122 3 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 4 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 23.127
Average program size in population (points): 24.127
Average percent parens in population: 0.046
Minimum age in population: 224.7465957618985
Maximum age in population: 229.0444740755123
Average age in population: 227.1257387499285
Median age in population: 227.184635068345
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.607
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.607
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 162654766
--- Timings ---
Current time: 1529615871217 milliseconds
Total Time:         399.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.7 seconds, 48.5%
Fitness Testing:    159.4 seconds, 39.9%
Report:              46.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_mult} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_shove} {:instruction integer_rot} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction 66.66501362565299} {:instruction integer_yankdup} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_add} {:instruction float_div} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction integer_swap} {:instruction print_integer})
Best program: (integer_fromfloat float_cos float_mult integer_dup_times integer_div float_mult integer_div in1 tagged_70 float_dup_items integer_dup_items float_dup integer_shove integer_rot in1 integer_fromfloat in2 integer_add float_dec 66.66501362565299 integer_yankdup integer_min integer_yank integer_add float_div float_add in1 tagged_29 float_dup_items integer_fromfloat in2 integer_add float_mult integer_swap print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 1948.5770471999951
Median total errors in population: 286.7425
Error averages by case: (68.59940289999906 11.183 63.537778600000564 11.235 65.05070400000136 11.061 62.5438463999987 11.145 63.93215800000073 11.202 68.06648640000118 11.078 68.81451699999991 11.184 60.144284200000385 11.106 68.84374670000012 11.213 68.10259819999914 11.173 68.12379749999916 11.139 68.04223690000005 12.034 66.89388740000126 11.185 67.66086599999933 11.175 68.46079199999961 11.204 62.321946699998975 11.144 60.95250879999991 11.072 69.6349099000005 11.294 70.6583451 11.089 71.01080239999975 11.273 68.51200600000108 11.14 69.83931810000082 11.237 60.83104499999891 11.077 68.66622080000114 11.101 69.32384220000115 11.265)
Error minima by case: (0.3901 2 0.2373 2 0.1168 1 0.0298 10 0.6517 2 0.5422 2 0.801 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.5004 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 10 0.7544 2 0.8164 2 0.7061 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 23.151
Average program size in population (points): 24.151
Average percent parens in population: 0.045
Minimum age in population: 225.8017937498805
Maximum age in population: 230.775068180904
Average age in population: 228.6656363687258
Median age in population: 228.7246131047401
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.633
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.633
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 163236991
--- Timings ---
Current time: 1529615873343 milliseconds
Total Time:         401.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       194.9 seconds, 48.5%
Fitness Testing:    160.1 seconds, 39.8%
Report:              46.7 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_max} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction float_add} {:instruction in1} {:instruction tagged_267} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times float_dup_items float_max in1 tagged_70 float_shove integer_fromfloat in2 integer_add float_mult integer_div in1 tagged_70 float_dup_items integer_fromfloat float_add in1 tagged_267 in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 1779.920532799995
Median total errors in population: 286.7425
Error averages by case: (60.348402899998966 11.205 60.35126520000049 11.27 56.605820800001176 11.08 60.05520739999881 11.144 60.81417080000061 11.24 59.77448640000126 11.104 60.77691499999963 11.208 57.724672800000434 11.137 60.25989189999981 11.203 59.697598199999035 11.19 59.86136949999893 11.15 59.31132320000004 12.023 57.38255080000094 11.209 59.131869199999194 11.191 59.79769919999969 11.22 59.75885149999903 11.146 58.60427269999992 11.116 61.75612920000077 11.31 62.259568500000356 11.076 62.89159199999951 11.289 60.17253720000116 11.153 61.719673000000995 11.253 58.544114999998996 11.113 60.64322080000124 11.125 61.24432960000108 11.278)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.5422 4 0.801 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.3637 9 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 22.414
Average program size in population (points): 23.414
Average percent parens in population: 0.047
Minimum age in population: 227.1941340422667
Maximum age in population: 232.1356588871059
Average age in population: 230.1429697974726
Median age in population: 230.1839799019096
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.612
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.612
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 163800316
--- Timings ---
Current time: 1529615875376 milliseconds
Total Time:         403.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.1 seconds, 48.6%
Fitness Testing:    160.7 seconds, 39.8%
Report:              47.0 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_flush} {:instruction integer_flush} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_dup} {:instruction print_integer})
Best program: (float_sub float_flush integer_flush float_sub float_dup_times float_dup_items float_cos float_dec integer_rot integer_dup_times integer_fromfloat in1 tagged_70 float_shove integer_fromfloat in2 integer_add float_dup print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1897.7200232999953
Median total errors in population: 286.7425
Error averages by case: (63.87135339999896 11.258 66.17170570000043 11.342 60.88653600000113 11.1 66.16361139999877 11.165 66.35274360000068 11.294 65.1118956000013 11.121 65.69790999999968 11.255 62.4068544000003 11.179 63.94180699999982 11.228 63.06707719999911 11.243 63.35899399999887 11.189 63.94863200000004 12.022 64.18121420000108 11.28 62.37536639999931 11.238 65.94090879999963 11.285 64.21339809999898 11.185 64.18127269999991 11.131 65.73827540000077 11.387 66.95147100000023 11.08 67.62604799999957 11.367 63.61982240000117 11.189 65.76061200000099 11.315 62.595609999998935 11.142 66.86656000000123 11.16 65.19134400000115 11.344)
Error minima by case: (0.3901 11 0.2373 10 0.1168 10 0.0298 10 0.3483 8 0.5422 9 0.801 10 0.2168 9 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.5004 10 0.6976 10 0.6363 10 0.2549 9 0.0731 10 0.2039 10 0.7544 10 0.8164 9 0.7061 8 0.3925 10 0.3884 10 0.4982 9)
Average genome size in population (length): 22.484
Average program size in population (points): 23.484
Average percent parens in population: 0.047
Minimum age in population: 228.3223753920764
Maximum age in population: 233.3513149998922
Average age in population: 231.6845753027996
Median age in population: 231.7645607219275
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.644
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.644
Total error diversity:				 0.039
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 164365191
--- Timings ---
Current time: 1529615877457 milliseconds
Total Time:         406.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.4 seconds, 48.6%
Fitness Testing:    161.3 seconds, 39.7%
Report:              47.2 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_mult} {:instruction integer_min} {:instruction integer_dup} {:instruction integer_shove} {:instruction float_max} {:instruction float_min} {:instruction float_sub} {:instruction float_dup} {:instruction float_add} {:instruction in1} {:instruction tagged_29} {:instruction float_dup_items} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_rot} {:instruction float_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction in1} {:instruction tagged_70} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_max} {:instruction 66.66501362565299} {:instruction print_integer})
Best program: (float_shove integer_mult integer_min integer_dup integer_shove float_max float_min float_sub float_dup float_add in1 tagged_29 float_dup_items float_sub integer_dup_items float_inc float_rot float_sub float_dec integer_yank in1 tagged_70 in1 integer_fromfloat in2 integer_add float_max 66.66501362565299 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 1657.059977399995
Median total errors in population: 286.7425
Error averages by case: (55.501084099999105 11.193 54.57182470000051 11.249 51.87028800000102 11.066 54.52202859999899 11.14 55.00429460000037 11.216 55.90885980000115 11.089 56.68291499999963 11.178 51.6673584000002 11.122 55.65974669999979 11.2 55.12554779999917 11.18 55.18151349999878 11.147 55.382236800000044 12.045 53.366438600000855 11.193 54.68487559999936 11.181 55.259094399999654 11.196 53.25376039999893 11.141 52.95886089999991 11.087 56.767787100000895 11.293 57.28775290000037 11.084 58.35638159999952 11.274 55.56559960000102 11.149 57.092027900000886 11.235 52.480834999998855 11.095 56.21505560000112 11.105 56.56580980000123 11.27)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 4 0.0288 9 0.1122 3 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 4 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 22.25
Average program size in population (points): 23.25
Average percent parens in population: 0.047
Minimum age in population: 229.3223753920764
Maximum age in population: 235.016798834074
Average age in population: 233.1674389543712
Median age in population: 233.2029797920937
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.602
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.602
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 164923691
--- Timings ---
Current time: 1529615879538 milliseconds
Total Time:         408.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.6 seconds, 48.7%
Fitness Testing:    162.0 seconds, 39.7%
Report:              47.4 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_add} {:instruction float_min} {:instruction in1} {:instruction tagged_84} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer integer_dup_times integer_fromfloat in1 float_dup_items integer_pop float_add float_min in1 tagged_84 integer_dup_items float_frominteger integer_fromfloat integer_add integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1464.751424499995
Median total errors in population: 286.7425
Error averages by case: (48.065034599999265 11.174 46.64942300000048 11.219 45.11485760000086 11.078 46.109420399999124 11.124 46.84779880000037 11.182 48.015957000001 11.086 48.49633299999963 11.169 44.50762960000021 11.109 48.18097679999982 11.166 47.66303519999932 11.163 47.21849599999903 11.135 47.96095680000004 12.04 46.650019200000735 11.178 47.211377599999516 11.167 48.80865119999966 11.184 46.223671999999134 11.124 45.242859899999914 11.084 48.63329880000068 11.264 49.50125820000034 11.067 49.78366239999969 11.239 47.6956816000009 11.131 48.886970600000744 11.203 44.434379799999085 11.088 48.83937720000099 11.109 48.29129720000098 11.236)
Error minima by case: (0.3901 11 0.2373 10 0.1168 10 0.0298 10 0.6517 8 0.5422 8 0.199 11 0.2168 10 0.7863 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.5004 11 0.6976 11 0.3637 11 0.2549 9 0.0731 10 0.2039 9 0.7544 10 0.8164 10 0.2939 8 0.3925 10 0.3884 10 0.4982 9)
Average genome size in population (length): 22.339
Average program size in population (points): 23.339
Average percent parens in population: 0.047
Minimum age in population: 232.1897847950475
Maximum age in population: 236.5032279478939
Average age in population: 234.6621601353782
Median age in population: 234.6906165536235
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.582
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.582
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 165484466
--- Timings ---
Current time: 1529615881576 milliseconds
Total Time:         410.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.8 seconds, 48.7%
Fitness Testing:    162.6 seconds, 39.7%
Report:              47.6 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction in1} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_max in1 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 7
Size: 8
Percent parens: 0.125
--- Population Statistics ---
Average total errors in population: 1762.9406090999953
Median total errors in population: 286.7425
Error averages by case: (59.35357319999858 11.209 58.99833430000054 11.296 55.95728800000151 11.09 58.65828899999846 11.15 59.3852111000008 11.24 60.0816552000017 11.099 61.1883179999996 11.217 55.9357474000006 11.148 59.5053877999998 11.202 58.68408559999866 11.193 58.84599399999873 11.153 58.37912160000004 12.016 58.7906630000014 11.223 58.11636639999884 11.202 61.95439679999962 11.238 58.01610119999886 11.151 56.95229409999991 11.106 60.878275400000966 11.329 61.879141200000355 11.071 62.58306559999916 11.304 59.170822400001555 11.153 60.971436400001394 11.26 56.91393019999878 11.113 60.761774400001656 11.129 60.396336800001286 11.291)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 22.073
Average program size in population (points): 23.073
Average percent parens in population: 0.047
Minimum age in population: 233.7244466882495
Maximum age in population: 237.8874668473754
Average age in population: 236.1272085942274
Median age in population: 236.1628257443084
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.622
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.622
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 166038616
--- Timings ---
Current time: 1529615883603 milliseconds
Total Time:         412.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       200.9 seconds, 48.7%
Fitness Testing:    163.4 seconds, 39.6%
Report:              47.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction float_tan} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction float_shove} {:instruction integer_yankdup} {:instruction 30} {:instruction float_add})
Best program: (float_dup float_sub float_tan float_sin in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer float_shove integer_yankdup 30 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 1789.5814870999955
Median total errors in population: 286.7425
Error averages by case: (60.07901279999864 11.205 60.372129500000526 11.285 57.54510560000148 11.082 60.36626699999847 11.16 60.96330550000073 11.235 60.99636620000164 11.104 60.853924999999606 11.21 57.606372000000526 11.135 60.3872507999998 11.218 59.43910239999873 11.193 59.81781499999873 11.151 60.174380800000044 12.028 59.87467280000137 11.232 58.93736399999894 11.195 62.58458239999963 11.242 59.787669299998804 11.162 58.57980209999992 11.09 61.46883680000098 11.328 62.704772400000365 11.077 63.010521599999336 11.304 60.11292400000146 11.152 61.5633754000013 11.258 58.52986249999877 11.099 62.02971640000161 11.132 61.22635480000129 11.293)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.6517 3 0.5422 2 0.801 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.5004 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.8164 2 0.7061 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 21.804
Average program size in population (points): 22.804
Average percent parens in population: 0.048
Minimum age in population: 235.4646884930454
Maximum age in population: 239.5033597987969
Average age in population: 237.612977371208
Median age in population: 237.6582567141994
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.617
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.617
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 166586091
--- Timings ---
Current time: 1529615885604 milliseconds
Total Time:         414.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.1 seconds, 48.8%
Fitness Testing:    164.0 seconds, 39.6%
Report:              47.9 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction tagged_70} {:instruction in1} {:instruction tagged_2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times float_mod float_frominteger integer_stackdepth tagged_70 in1 tagged_2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 1690.3186370999954
Median total errors in population: 286.7425
Error averages by case: (57.986780299998664 11.161 52.186222000000484 11.227 55.66307390000138 11.051 51.82789799999883 11.137 52.463901600000575 11.198 58.57991930000165 11.069 59.23220729999958 11.168 48.92684540000006 11.094 57.733780299999786 11.196 57.367032499998714 11.159 57.24458579999882 11.129 57.70396670000004 12.026 58.7179345000014 11.186 55.99784749999909 11.16 60.060941899999605 11.192 50.57677939999902 11.136 50.41047729999992 11.069 59.216117200000824 11.281 60.746426100000384 11.065 61.545022299999225 11.263 57.6402331000015 11.126 60.23510330000133 11.218 49.319130799998995 11.067 59.66165430000161 11.096 59.55575630000119 11.245)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 8 0.6517 6 0.5422 4 0.801 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 9 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 22.12
Average program size in population (points): 23.12
Average percent parens in population: 0.047
Minimum age in population: 236.4646884930454
Maximum age in population: 241.0520056087833
Average age in population: 239.0956014584739
Median age in population: 239.1210824964471
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.608
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.608
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 167141641
--- Timings ---
Current time: 1529615887749 milliseconds
Total Time:         416.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       203.5 seconds, 48.9%
Fitness Testing:    164.6 seconds, 39.5%
Report:              48.1 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_max} {:instruction integer_fromfloat} {:instruction tag_float_87} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_items} {:instruction tag_float_475} {:instruction float_cos} {:instruction float_yank} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_max} {:instruction in1} {:instruction tagged_70} {:instruction tagged_62} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction float_add})
Best program: (integer_swap integer_stackdepth float_max integer_fromfloat tag_float_87 integer_yankdup integer_shove float_max integer_dup_items tag_float_475 float_cos float_yank integer_dup_times float_frominteger integer_max in1 tagged_70 tagged_62 integer_fromfloat in2 integer_add integer_sub in1 print_integer integer_sub float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 1815.0517326999952
Median total errors in population: 286.7425
Error averages by case: (61.72996329999874 11.195 61.42297710000056 11.25 57.40635360000131 11.058 61.49755179999854 11.152 62.10747420000081 11.217 61.77023320000158 11.08 62.45131299999959 11.181 57.42210640000051 11.116 62.194738499999794 11.216 61.3065897999988 11.178 60.783744999998696 11.144 61.258833600000045 12.031 59.53355080000119 11.19 59.860371999999 11.18 63.12521119999962 11.202 59.97167069999894 11.153 59.23905699999991 11.074 63.492421600000974 11.299 64.23110220000038 11.085 65.25959199999933 11.276 61.05325200000144 11.148 63.76567300000133 11.237 57.964507499998874 11.088 62.656113600001525 11.103 63.42632960000132 11.268)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.6517 3 0.5422 2 0.801 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.5004 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 10 0.7544 2 0.8164 2 0.7061 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 21.813
Average program size in population (points): 22.813
Average percent parens in population: 0.048
Minimum age in population: 238.016586793654
Maximum age in population: 242.3644155239239
Average age in population: 240.5879249016406
Median age in population: 240.6508713332126
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 167689066
--- Timings ---
Current time: 1529615889722 milliseconds
Total Time:         418.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.6 seconds, 48.9%
Fitness Testing:    165.3 seconds, 39.5%
Report:              48.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction print_integer} {:instruction tagged_70} {:instruction float_add} {:instruction integer_rot} {:instruction tag_float_87} {:instruction in1} {:instruction tagged_545} {:instruction float_add} {:instruction float_swap} {:instruction float_rot} {:instruction tagged_70} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_max} {:instruction -8} {:instruction float_yank} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_shove} {:instruction float_cos} {:instruction in1} {:instruction tagged_84} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_max} {:instruction 66.10162447482759} {:instruction print_integer})
Best program: (float_swap print_integer tagged_70 float_add integer_rot tag_float_87 in1 tagged_545 float_add float_swap float_rot tagged_70 in1 integer_fromfloat in2 integer_add integer_min integer_yank integer_max -8 float_yank integer_mult integer_dup_items float_shove float_cos in1 tagged_84 in1 integer_fromfloat in2 integer_add float_max 66.10162447482759 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 1875.5446799999954
Median total errors in population: 286.7425
Error averages by case: (64.4209632999983 11.231 63.14454810000055 11.306 60.590120000001676 11.094 63.78470079999828 11.158 63.71657890000095 11.259 63.25914880000184 11.111 63.813715999999594 11.225 59.980786600000776 11.153 63.4737009999998 11.214 63.77558979999837 11.214 64.15879749999877 11.178 62.731056400000035 12.021 63.29144840000157 11.242 63.20086599999859 11.217 64.74379199999963 11.25 63.370579599998884 11.165 60.97725429999991 11.114 66.25720230000091 11.341 65.79181940000036 11.086 68.1483111999991 11.33 64.4290060000018 11.176 66.37673030000161 11.281 60.63800749999884 11.123 64.68111360000186 11.143 65.85084220000125 11.306)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.801 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.6976 4 0.6363 11 0.2549 3 0.0731 6 0.2039 10 0.7544 5 0.1836 5 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 21.546
Average program size in population (points): 22.546
Average percent parens in population: 0.049
Minimum age in population: 239.518850046722
Maximum age in population: 244.1109100060561
Average age in population: 242.1015604918254
Median age in population: 242.1365193928015
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.611
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.611
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 168229566
--- Timings ---
Current time: 1529615891753 milliseconds
Total Time:         420.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.7 seconds, 49.0%
Fitness Testing:    165.9 seconds, 39.5%
Report:              48.5 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction float_div} {:instruction integer_flush} {:instruction 29} {:instruction float_add})
Best program: (float_dup float_sub integer_dup_items float_sin in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer float_div integer_flush 29 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 2088.794024999995
Median total errors in population: 286.7425
Error averages by case: (72.52806229999915 11.236 70.89789219999983 11.296 69.10636800000181 11.089 70.92546239999886 11.178 71.32400210000115 11.263 74.69626900000091 11.111 74.26990000000063 11.231 67.27172160000056 11.152 73.2476618000007 11.242 72.1256317999992 11.216 72.32301149999961 11.179 73.07351680000004 12.04 72.40486780000172 11.236 71.45286439999931 11.222 74.86383999999961 11.245 69.34421659999893 11.175 69.03274329999991 11.117 74.06954439999998 11.352 75.3710631999991 11.106 75.62504800000016 11.332 72.582740400001 11.188 74.26919980000059 11.302 68.16003999999884 11.121 74.94900640000088 11.135 73.78835120000126 11.327)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 11 0.3483 6 0.5422 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 4 0.0288 9 0.1122 3 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 4 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 21.395
Average program size in population (points): 22.395
Average percent parens in population: 0.049
Minimum age in population: 241.002885713171
Maximum age in population: 245.5707193677429
Average age in population: 243.6108940769191
Median age in population: 243.6639568550718
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.629
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.629
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 168766116
--- Timings ---
Current time: 1529615893765 milliseconds
Total Time:         422.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.9 seconds, 49.0%
Fitness Testing:    166.5 seconds, 39.4%
Report:              48.8 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction in1} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction in1} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_max in1 float_shove integer_fromfloat in2 in1 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 1921.6640142999947
Median total errors in population: 286.7425
Error averages by case: (66.55118309999888 11.215 63.58651880000057 11.296 64.58593760000156 11.074 61.87847549999851 11.162 63.5586164000008 11.261 67.56340200000136 11.103 68.23611399999993 11.212 59.47816100000051 11.132 67.87002890000016 11.236 66.17658979999874 11.202 65.85654849999874 11.165 67.69900640000004 12.051 64.33632640000135 11.224 65.32687159999881 11.205 68.03530399999961 11.231 61.1605712999988 11.162 61.36148739999991 11.103 68.13712920000066 11.335 69.7765294999998 11.094 69.65910079999973 11.312 66.18043560000153 11.168 68.305673000001 11.266 59.389456699998725 11.099 68.68522080000129 11.132 67.52732600000137 11.302)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 11 0.6517 6 0.5422 4 0.801 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 11 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 21.581
Average program size in population (points): 22.581
Average percent parens in population: 0.049
Minimum age in population: 242.0452228741904
Maximum age in population: 247.07998122364
Average age in population: 245.1060529648883
Median age in population: 245.1737971416928
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.61
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.61
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 169307716
--- Timings ---
Current time: 1529615895764 milliseconds
Total Time:         424.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.1 seconds, 49.1%
Fitness Testing:    167.1 seconds, 39.4%
Report:              48.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction -27} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_rot} {:instruction float_yank} {:instruction float_yank} {:instruction float_sub} {:instruction integer_swap} {:instruction float_dec} {:instruction float_yank} {:instruction integer_rot} {:instruction tagged_70} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_max} {:instruction float_div} {:instruction float_dec} {:instruction float_div} {:instruction print_integer})
Best program: (float_stackdepth -27 integer_inc float_yank integer_rot float_yank float_yank float_sub integer_swap float_dec float_yank integer_rot tagged_70 in1 in1 integer_fromfloat in2 integer_add float_max float_div float_dec float_div print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1545.3036357999947
Median total errors in population: 286.7425
Error averages by case: (51.457644499999056 11.173 49.36306200000052 11.234 48.35468960000111 11.048 49.3344159999989 11.125 49.660598000000526 11.201 51.198908400001194 11.075 51.86292499999962 11.163 47.272792000000315 11.103 51.755037099999804 11.175 51.07453099999911 11.153 50.9509064999989 11.121 50.944438400000045 12.032 48.59367280000089 11.167 50.618876399999294 11.16 50.300675199999645 11.176 48.67412339999905 11.126 47.97062559999991 11.077 52.59822570000079 11.261 53.660976300000364 11.064 54.089907999999525 11.247 51.37223240000108 11.122 52.87385230000091 11.201 47.56283499999898 11.079 51.892881600001154 11.093 52.25480260000111 11.234)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 11 0.3483 6 0.5422 4 0.801 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 9 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 21.362
Average program size in population (points): 22.362
Average percent parens in population: 0.049
Minimum age in population: 243.0452228741904
Maximum age in population: 248.532164251718
Average age in population: 246.6135398707914
Median age in population: 246.6772327512323
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.573
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.573
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 169843716
--- Timings ---
Current time: 1529615897765 milliseconds
Total Time:         426.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.3 seconds, 49.1%
Fitness Testing:    167.8 seconds, 39.4%
Report:              49.1 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction integer_max} {:instruction in1} {:instruction tagged_70} {:instruction tagged_62} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction float_sin})
Best program: (float_frominteger integer_max in1 tagged_70 tagged_62 integer_fromfloat in2 integer_add integer_sub in1 print_integer integer_sub float_sin)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1523.332151299995
Median total errors in population: 286.7425
Error averages by case: (48.90179299999886 11.179 50.40963820000049 11.24 46.99253600000126 11.041 50.633760399998735 11.131 50.9136878000006 11.209 50.73760660000148 11.076 51.07710899999965 11.169 46.39005760000035 11.107 50.3481055999998 11.181 48.71509399999892 11.157 49.36095899999885 11.124 50.20826560000004 12.015 46.954877600001005 11.158 47.97237039999911 11.163 50.40581599999968 11.172 49.55830699999898 11.137 48.011056999999916 11.089 50.71798300000084 11.261 52.62595680000036 11.068 52.43410079999939 11.245 49.48498640000124 11.117 51.100673000001215 11.211 46.71958249999892 11.097 52.05250200000144 11.088 50.93832600000116 11.232)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.6517 3 0.4578 2 0.199 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 9 0.2456 2 0.1836 2 0.2939 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 21.529
Average program size in population (points): 22.529
Average percent parens in population: 0.049
Minimum age in population: 245.6894069203333
Maximum age in population: 250.3817026862393
Average age in population: 248.1186651135497
Median age in population: 248.1230360813742
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.575
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.575
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 170383716
--- Timings ---
Current time: 1529615899758 milliseconds
Total Time:         428.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       210.5 seconds, 49.1%
Fitness Testing:    168.4 seconds, 39.3%
Report:              49.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_fromfloat} {:instruction float_max} {:instruction float_div} {:instruction float_cos} {:instruction float_flush} {:instruction tag_float_843} {:instruction tagged_70} {:instruction in1} {:instruction tagged_2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_max integer_fromfloat float_max float_div float_cos float_flush tag_float_843 tagged_70 in1 tagged_2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 1689.484678299995
Median total errors in population: 286.7425
Error averages by case: (56.2304741999992 11.191 56.129841400000466 11.247 52.53692320000079 11.083 56.16323719999914 11.143 56.651260600000356 11.224 56.928908400001 11.099 57.85012899999967 11.192 53.43380560000006 11.134 56.2466096999998 11.194 55.8720519999993 11.183 55.75753099999897 11.153 55.181496000000045 12.025 56.24857040000077 11.212 55.094372799999476 11.183 58.532465599999696 11.21 55.65294189999909 11.139 54.487782499999916 11.099 58.32671400000073 11.288 57.54619970000036 11.082 59.671855199999705 11.271 56.05751760000089 11.152 58.58049740000076 11.249 54.54029249999904 11.106 57.50088160000096 11.122 58.013318800001045 11.268)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 11 0.3483 6 0.4578 4 0.801 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.6976 5 0.6363 9 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.1836 5 0.7061 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 21.121
Average program size in population (points): 22.121
Average percent parens in population: 0.051
Minimum age in population: 246.9823224745189
Maximum age in population: 251.6955061436489
Average age in population: 249.6046512652809
Median age in population: 249.6211131050506
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.576
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.576
Total error diversity:				 0.037
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 170913141
--- Timings ---
Current time: 1529615901810 milliseconds
Total Time:         430.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.7 seconds, 49.2%
Fitness Testing:    169.1 seconds, 39.3%
Report:              49.5 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_pop} {:instruction tagged_304} {:instruction integer_yank} {:instruction float_yank} {:instruction integer_dup_times} {:instruction float_yank} {:instruction integer_inc} {:instruction float_max} {:instruction float_inc} {:instruction print_float} {:instruction integer_yank} {:instruction print_float} {:instruction float_mult} {:instruction integer_rot} {:instruction integer_yank} {:instruction print_float} {:instruction float_mult} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_fromfloat integer_pop tagged_304 integer_yank float_yank integer_dup_times float_yank integer_inc float_max float_inc print_float integer_yank print_float float_mult integer_rot integer_yank print_float float_mult integer_rot integer_pop in1 in2 integer_add integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2001.1122832999954
Median total errors in population: 286.7425
Error averages by case: (68.06745239999934 11.229 69.48289219999994 11.281 65.80606880000134 11.102 69.33358159999915 11.155 70.43300210000055 11.244 69.38555800000091 11.122 70.57449700000024 11.225 65.71493840000018 11.146 69.04967000000035 11.229 67.87811919999946 11.217 68.59599399999922 11.189 68.77892000000004 12.043 67.96641900000124 11.221 67.7193663999996 11.221 69.61144479999963 11.232 67.98057959999878 11.163 66.94301779999991 11.124 69.33454440000038 11.324 71.03350999999972 11.114 70.99703040000031 11.324 68.90482240000084 11.188 69.82578760000051 11.284 66.70603999999877 11.135 70.28067600000087 11.13 69.76135120000137 11.305)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.5422 4 0.801 4 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.6075 4 0.3884 4 0.4982 6)
Average genome size in population (length): 21.229
Average program size in population (points): 22.229
Average percent parens in population: 0.051
Minimum age in population: 248.4710924859382
Maximum age in population: 252.9776263439503
Average age in population: 251.0676365927596
Median age in population: 251.0985362229786
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 171445366
--- Timings ---
Current time: 1529615903799 milliseconds
Total Time:         432.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.8 seconds, 49.2%
Fitness Testing:    169.7 seconds, 39.2%
Report:              49.7 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_max} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_inc} {:instruction float_rot} {:instruction float_inc} {:instruction print_float} {:instruction integer_yank} {:instruction print_float} {:instruction float_mult} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction float_yank} {:instruction integer_dup_times} {:instruction float_swap} {:instruction integer_max} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction float_add})
Best program: (float_inc float_max integer_max integer_shove integer_inc float_yank integer_inc float_rot float_inc print_float integer_yank print_float float_mult integer_rot integer_pop in1 in2 float_yank integer_dup_times float_swap integer_max in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_sub in1 print_integer integer_sub float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1938.682819199995
Median total errors in population: 286.7425
Error averages by case: (65.92940289999883 11.224 66.57279060000043 11.298 61.926755200001416 11.094 65.83311799999865 11.156 66.63786740000077 11.261 67.06257080000144 11.118 67.16011899999971 11.215 63.67067280000054 11.152 66.78696039999993 11.219 65.23510239999877 11.207 65.85717299999887 11.173 66.02117920000005 12.037 66.49711180000133 11.239 65.57536879999905 11.21 67.94909439999961 11.237 65.31439669999885 11.155 64.42678249999992 11.114 67.67898300000078 11.333 68.798549 11.088 69.00606559999972 11.316 66.27572080000137 11.176 67.8140242000011 11.273 64.7885074999988 11.119 67.8331628000014 11.135 67.17634040000127 11.306)
Error minima by case: (0.3901 5 0.2373 6 0.1168 4 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 4 0.2137 10 0.4958 5 0.1965 4 0.0288 9 0.1122 3 0.4996 5 0.3024 4 0.3637 9 0.2549 4 0.0731 7 0.2039 10 0.2456 7 0.1836 4 0.2939 7 0.3925 4 0.3884 4 0.4982 7)
Average genome size in population (length): 20.865
Average program size in population (points): 21.865
Average percent parens in population: 0.051
Minimum age in population: 250.1648132456543
Maximum age in population: 254.4956134596106
Average age in population: 252.5409449238711
Median age in population: 252.5838292213808
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.587
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.587
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 171968316
--- Timings ---
Current time: 1529615905823 milliseconds
Total Time:         434.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       214.0 seconds, 49.3%
Fitness Testing:    170.3 seconds, 39.2%
Report:              49.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction float_sub} {:instruction float_flush} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_yankdup} {:instruction in1} {:instruction print_integer} {:instruction 30} {:instruction integer_max})
Best program: (integer_add float_sub float_flush float_yank integer_dup_items float_sin in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_yankdup in1 print_integer 30 integer_max)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 1696.887047899995
Median total errors in population: 286.7425
Error averages by case: (56.7581335999992 11.236 57.07192630000053 11.293 52.55276960000084 11.087 56.192462399999194 11.155 57.705732700000254 11.272 56.703980000001 11.128 57.35930299999963 11.216 54.541840800000024 11.152 56.2630206999998 11.22 56.33406879999926 11.215 56.74513799999876 11.178 55.32363200000004 12.032 55.479428800000676 11.237 55.95837279999944 11.213 56.84863039999966 11.225 55.85776179999895 11.157 55.34631189999991 11.131 58.13542160000097 11.326 58.33526710000036 11.094 59.799609599999854 11.319 57.07088480000094 11.186 58.443497400000815 11.281 55.43297499999883 11.126 57.58756000000102 11.139 58.11031880000131 11.311)
Error minima by case: (0.3901 9 0.2373 10 0.1168 10 0.0298 11 0.3483 10 0.5422 10 0.801 10 0.2168 10 0.2137 10 0.4958 10 0.1965 9 0.0288 9 0.1122 11 0.5004 9 0.6976 9 0.6363 9 0.2549 10 0.0731 9 0.2039 10 0.7544 10 0.8164 10 0.7061 9 0.3925 10 0.3884 10 0.4982 10)
Average genome size in population (length): 20.543
Average program size in population (points): 21.543
Average percent parens in population: 0.051
Minimum age in population: 251.4019920451947
Maximum age in population: 255.94268185311
Average age in population: 254.0088911886185
Median age in population: 254.0283336099518
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.602
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.602
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 172483016
--- Timings ---
Current time: 1529615907754 milliseconds
Total Time:         436.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.1 seconds, 49.3%
Fitness Testing:    170.9 seconds, 39.2%
Report:              50.1 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_pop} {:instruction float_cos} {:instruction integer_pop} {:instruction float_yank} {:instruction float_rot} {:instruction float_max} {:instruction tag_float_87} {:instruction float_max} {:instruction integer_shove} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_div} {:instruction in1} {:instruction integer_dup_times} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_fromfloat integer_pop float_cos integer_pop float_yank float_rot float_max tag_float_87 float_max integer_shove in1 integer_fromfloat in2 integer_yank integer_max integer_mod integer_rot integer_div in1 integer_dup_times float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 1750.0891186999954
Median total errors in population: 286.7425
Error averages by case: (59.58796329999903 11.171 56.41468820000055 11.236 55.764156000001144 11.057 56.62308179999887 11.131 57.2200742000004 11.191 59.60624360000127 11.075 60.14618799999958 11.171 53.66462300000017 11.108 60.4340370999998 11.174 58.7210855999991 11.161 59.71358349999883 11.119 59.588438400000044 12.021 59.04901960000103 11.179 58.89486759999929 11.165 60.29302359999961 11.19 56.135139499998886 11.131 54.454114199999914 11.074 61.01334850000092 11.272 62.77797630000037 11.064 62.71232879999967 11.254 60.033271600001115 11.126 61.313142500000936 11.207 54.471817399998876 11.082 60.787071400001224 11.096 60.979835000001245 11.235)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.6517 6 0.5422 4 0.801 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 9 0.2549 3 0.0731 7 0.2039 10 0.7544 6 0.8164 5 0.7061 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 20.625
Average program size in population (points): 21.625
Average percent parens in population: 0.052
Minimum age in population: 253.0021660255493
Maximum age in population: 257.4148040461827
Average age in population: 255.4948849727106
Median age in population: 255.5113893010324
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.569
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.569
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 172999816
--- Timings ---
Current time: 1529615909953 milliseconds
Total Time:         438.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.3 seconds, 49.3%
Fitness Testing:    171.7 seconds, 39.2%
Report:              50.4 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_max} {:instruction float_div} {:instruction float_frominteger} {:instruction float_flush} {:instruction tag_float_843} {:instruction tagged_70} {:instruction in1} {:instruction tagged_2} {:instruction integer_dup_items} {:instruction tag_float_475} {:instruction float_cos} {:instruction float_yank} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_dup_items} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction print_integer} {:instruction float_dup} {:instruction float_add})
Best program: (integer_fromfloat float_max float_div float_frominteger float_flush tag_float_843 tagged_70 in1 tagged_2 integer_dup_items tag_float_475 float_cos float_yank integer_dup_times float_frominteger integer_dup_items in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_sub in1 print_integer float_dup float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 1658.6641631999948
Median total errors in population: 286.7425
Error averages by case: (54.68430389999908 11.224 55.90240090000053 11.296 51.89858720000109 11.091 55.617670999998836 11.143 56.43203610000055 11.269 55.145317600001285 11.113 56.003914999999594 11.218 53.04984080000027 11.149 54.66116589999981 11.218 54.07654779999915 11.211 54.50194149999883 11.176 54.39071840000004 12.025 53.19655080000094 11.232 53.54287239999933 11.217 56.03300159999962 11.238 55.24267069999898 11.15 53.931331499999914 11.136 56.53778710000089 11.336 56.75249050000035 11.084 58.47287279999947 11.326 54.78206840000107 11.182 56.72561570000105 11.289 53.91297499999887 11.126 56.0886672000013 11.138 56.18281340000121 11.311)
Error minima by case: (0.3901 10 0.2373 10 0.1168 9 0.0298 10 0.3483 8 0.4578 9 0.199 10 0.2168 10 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 10 0.4996 10 0.3024 10 0.3637 10 0.2549 9 0.0731 10 0.2039 10 0.2456 10 0.1836 9 0.2939 8 0.3925 9 0.3884 10 0.4982 9)
Average genome size in population (length): 20.019
Average program size in population (points): 21.019
Average percent parens in population: 0.053
Minimum age in population: 254.5277091994166
Maximum age in population: 258.8630219923302
Average age in population: 256.9966799992935
Median age in population: 257.0328559391974
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.564
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.564
Total error diversity:				 0.037
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 173501616
--- Timings ---
Current time: 1529615912034 milliseconds
Total Time:         440.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       217.5 seconds, 49.4%
Fitness Testing:    172.3 seconds, 39.1%
Report:              50.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_pop} {:instruction float_cos} {:instruction integer_pop} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction in1} {:instruction tagged_2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_fromfloat integer_pop float_cos integer_pop float_yank integer_stackdepth integer_rot in1 tagged_2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 1834.2712330999952
Median total errors in population: 286.7425
Error averages by case: (63.30779299999857 11.165 60.75201590000055 11.231 58.610040000001305 11.067 59.740568399998715 11.142 60.9765063000006 11.199 62.68407720000174 11.075 63.63532799999958 11.17 59.030067400000185 11.109 64.27911379999979 11.199 62.78709399999863 11.16 62.278172999998795 11.126 62.858726400000045 12.039 61.6398972000015 11.184 62.23036879999884 11.162 63.2010703999996 11.194 59.30439189999891 11.138 59.724253899999916 11.071 63.88998300000089 11.275 65.89981140000036 11.074 64.92655679999922 11.251 62.750720800001616 11.123 64.03102420000138 11.215 59.75465249999886 11.076 62.8016584000017 11.098 63.390340400001215 11.244)
Error minima by case: (0.3901 4 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 9 0.4958 4 0.1965 3 0.0288 9 0.1122 2 0.4996 4 0.3024 4 0.3637 10 0.2549 3 0.0731 5 0.2039 9 0.2456 4 0.1836 3 0.2939 4 0.3925 3 0.3884 4 0.4982 4)
Average genome size in population (length): 20.079
Average program size in population (points): 21.079
Average percent parens in population: 0.054
Minimum age in population: 255.8386111031264
Maximum age in population: 260.3551303805011
Average age in population: 258.4500396633403
Median age in population: 258.4949764608411
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.551
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.551
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 174004816
--- Timings ---
Current time: 1529615913956 milliseconds
Total Time:         442.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.7 seconds, 49.4%
Fitness Testing:    172.9 seconds, 39.1%
Report:              50.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_dec} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_mult} {:instruction integer_div} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_add} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_mult} {:instruction tagged_70} {:instruction integer_rot} {:instruction integer_inc} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction float_dec} {:instruction 67.25359050961504} {:instruction print_integer})
Best program: (in2 integer_stackdepth print_float integer_dec integer_rot integer_pop in1 in2 float_shove integer_fromfloat float_dup float_mult integer_div float_mult float_dup_items float_add float_shove integer_fromfloat in2 integer_inc integer_yank integer_mult tagged_70 integer_rot integer_inc in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_add float_dec 67.25359050961504 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 1398.874140799995
Median total errors in population: 286.7425
Error averages by case: (45.112594999999615 11.164 44.42001120000044 11.239 41.54932480000048 11.058 44.31883319999941 11.118 44.454204799999964 11.196 45.83404140000065 11.072 46.76133799999965 11.162 42.32065919999976 11.109 44.93383159999984 11.161 44.41100999999967 11.153 43.84388899999899 11.11 44.938841600000046 12.019 43.834131400000345 11.186 43.65637839999988 11.156 46.56104639999968 11.191 43.565031599999095 11.119 43.18564519999992 11.073 46.16544500000079 11.269 47.26644260000032 11.039 47.49366240000014 11.248 44.28731440000055 11.112 46.20397060000037 11.191 42.119264999999054 11.076 46.73393080000061 11.102 45.35129720000103 11.229)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.5422 4 0.801 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 9 0.7544 6 0.8164 5 0.7061 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 19.98
Average program size in population (points): 20.98
Average percent parens in population: 0.054
Minimum age in population: 257.1376576098292
Maximum age in population: 261.8433128830369
Average age in population: 259.9822160390463
Median age in population: 260.0203205724658
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.537
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.537
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 174505491
--- Timings ---
Current time: 1529615916022 milliseconds
Total Time:         444.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.9 seconds, 49.5%
Fitness Testing:    173.5 seconds, 39.0%
Report:              51.0 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction in1} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_max in1 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 7
Size: 8
Percent parens: 0.125
--- Population Statistics ---
Average total errors in population: 1786.8165144999953
Median total errors in population: 286.7425
Error averages by case: (61.33023259999887 11.193 57.856762600000465 11.246 58.23952160000111 11.076 57.70294869999877 11.143 58.48828300000073 11.214 60.45165520000133 11.084 61.92711899999964 11.194 55.592423500000486 11.12 61.567456299999826 11.205 61.00311079999894 11.177 61.43277999999899 11.147 60.61494880000004 12.03 60.20644840000116 11.195 60.760367199999095 11.18 62.38409439999967 11.206 57.49103419999916 11.147 56.298279299999905 11.093 62.34098300000075 11.287 62.72152950000034 11.087 63.81157439999936 11.269 61.78708800000125 11.148 62.68643640000111 11.238 56.0825495999991 11.097 61.4075512000013 11.111 62.47933680000102 11.265)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 2 0.4578 2 0.199 2 0.2168 2 0.2137 10 0.4958 1 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 3 0.3637 10 0.2549 2 0.0731 3 0.2039 9 0.2456 2 0.1836 2 0.2939 3 0.3925 2 0.3884 1 0.4982 3)
Average genome size in population (length): 19.445
Average program size in population (points): 20.445
Average percent parens in population: 0.055
Minimum age in population: 258.1376576098292
Maximum age in population: 263.3570930227832
Average age in population: 261.463394900016
Median age in population: 261.5114692687908
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.55
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.55
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 174992791
--- Timings ---
Current time: 1529615917887 milliseconds
Total Time:         446.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       221.0 seconds, 49.5%
Fitness Testing:    174.0 seconds, 39.0%
Report:              51.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_flush} {:instruction integer_flush} {:instruction integer_inc} {:instruction integer_add} {:instruction float_mult} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sub float_flush integer_flush integer_inc integer_add float_mult integer_pop in1 in2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 1660.5160169999951
Median total errors in population: 286.7425
Error averages by case: (55.80808409999922 11.186 53.917197300000474 11.245 53.30168960000093 11.064 53.45029709999906 11.137 54.22729800000041 11.212 56.159992800001035 11.08 57.05092499999962 11.174 51.39388970000025 11.112 55.57631929999982 11.194 55.319547799999285 11.176 55.190120499998955 11.139 54.58826560000004 12.028 56.17189720000081 11.194 54.76087479999945 11.175 57.73327999999966 11.198 53.19091699999909 11.144 52.19572999999992 11.08 57.098787100000855 11.285 57.09575290000034 11.072 58.65987279999969 11.272 55.58196680000093 11.139 57.326615700000865 11.234 51.29200089999905 11.082 56.75788160000099 11.113 56.669813400001125 11.262)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.4578 4 0.199 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.4996 5 0.3024 4 0.3637 10 0.2549 3 0.0731 6 0.2039 9 0.2456 5 0.1836 5 0.2939 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 19.497
Average program size in population (points): 20.497
Average percent parens in population: 0.055
Minimum age in population: 260.1679230200313
Maximum age in population: 264.8138675999277
Average age in population: 262.9296038185949
Median age in population: 262.9947450402904
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.55
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.55
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 175481141
--- Timings ---
Current time: 1529615920006 milliseconds
Total Time:         448.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       222.2 seconds, 49.5%
Fitness Testing:    174.7 seconds, 39.0%
Report:              51.4 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_add} {:instruction float_min} {:instruction in1} {:instruction tagged_84} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer integer_dup_times integer_fromfloat in1 float_dup_items integer_pop float_add float_min in1 tagged_84 integer_dup_items float_dec integer_fromfloat integer_add integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1773.3740092999954
Median total errors in population: 286.7425
Error averages by case: (60.18691379999924 11.199 59.07691310000055 11.258 56.36347400000073 11.09 59.257336599999135 11.138 59.58502790000036 11.222 59.154876000001025 11.108 59.68575799999959 11.194 57.20195359999997 11.135 60.67782339999979 11.192 59.3195729999993 11.19 59.91535199999891 11.155 60.48243840000004 12.03 58.72279500000072 11.214 59.4363703999995 11.19 59.96529099999962 11.217 58.93158109999902 11.144 58.85582129999991 11.103 61.06656780000077 11.298 62.41818020000037 11.08 62.37908319999964 11.287 60.30161920000089 11.158 61.34526080000085 11.247 57.354874499998985 11.107 60.29379540000099 11.124 61.0413296000011 11.274)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.3483 5 0.5422 5 0.199 5 0.2168 2 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 3 0.5004 5 0.6976 4 0.6363 10 0.2549 4 0.0731 7 0.2039 8 0.7544 6 0.8164 5 0.7061 6 0.3925 3 0.3884 5 0.4982 6)
Average genome size in population (length): 19.218
Average program size in population (points): 20.218
Average percent parens in population: 0.055
Minimum age in population: 261.9129192390561
Maximum age in population: 266.4338787176478
Average age in population: 264.4161388685197
Median age in population: 264.4935971292632
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.526
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.526
Total error diversity:				 0.02
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 175962241
--- Timings ---
Current time: 1529615921917 milliseconds
Total Time:         450.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.3 seconds, 49.6%
Fitness Testing:    175.3 seconds, 38.9%
Report:              51.7 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction integer_add} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_yank} {:instruction float_yank} {:instruction tagged_104} {:instruction float_swap} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_mult} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup integer_add integer_dup_items float_sin in1 tagged_70 float_shove integer_fromfloat float_shove float_yank float_yank tagged_104 float_swap integer_stackdepth integer_yank integer_inc float_mult integer_rot integer_pop in1 in2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 1653.3484190999952
Median total errors in population: 286.7425
Error averages by case: (55.77996329999893 11.19 53.27423270000053 11.242 51.51396890000088 11.082 53.8815571999988 11.138 54.00242470000055 11.21 54.231287600001316 11.099 54.67713499999961 11.185 50.69248180000004 11.131 55.8150370999998 11.199 55.682581399999 11.184 56.4999589999988 11.159 55.45340960000004 12.028 52.22459180000107 11.197 55.80636959999918 11.186 53.62920579999963 11.207 53.923009399998904 11.143 51.443823499999915 11.097 57.77356780000089 11.286 57.315976300000365 11.086 59.461591999999456 11.273 56.841353600001206 11.157 58.1056730000011 11.25 52.11461269999888 11.101 55.16327930000127 11.118 57.82332600000122 11.27)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 11 0.3483 5 0.5422 4 0.199 4 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 19.014
Average program size in population (points): 20.014
Average percent parens in population: 0.056
Minimum age in population: 262.9129192390561
Maximum age in population: 267.9047672093719
Average age in population: 265.8912310002569
Median age in population: 265.9366515420195
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.528
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.528
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 176438141
--- Timings ---
Current time: 1529615923874 milliseconds
Total Time:         452.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.5 seconds, 49.6%
Fitness Testing:    175.9 seconds, 38.9%
Report:              51.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_rot} {:instruction float_add} {:instruction float_shove} {:instruction integer_shove} {:instruction integer_swap} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction 66.66501362565299} {:instruction integer_yankdup} {:instruction integer_min} {:instruction integer_yank} {:instruction print_integer})
Best program: (integer_fromfloat integer_rot float_add float_shove integer_shove integer_swap in1 integer_fromfloat in2 integer_add float_dec 66.66501362565299 integer_yankdup integer_min integer_yank print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1453.638333499995
Median total errors in population: 286.7425
Error averages by case: (47.96659499999918 11.143 44.84896960000051 11.178 45.130740800000716 11.04 44.735871199999295 11.11 45.40210310000005 11.151 47.432788200001085 11.063 46.99433299999961 11.133 43.1331225999999 11.069 48.231686399999816 11.154 47.294514199999234 11.134 47.760281999998774 11.108 47.86778400000004 12.033 46.84868260000084 11.134 47.4763791999994 11.135 48.06855839999964 11.14 44.778096699999 11.107 43.60363689999991 11.055 48.816445000000925 11.213 49.38362700000035 11.063 50.177171199999734 11.207 48.20394720000098 11.105 49.25438280000078 11.167 44.16233399999894 11.064 48.262988800001054 11.072 48.83429360000123 11.191)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 9 0.6517 5 0.5422 4 0.801 4 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 10 0.7544 5 0.8164 5 0.7061 5 0.6075 3 0.3884 4 0.4982 5)
Average genome size in population (length): 18.774
Average program size in population (points): 19.774
Average percent parens in population: 0.056
Minimum age in population: 264.6883970957761
Maximum age in population: 269.6007548541722
Average age in population: 267.3786763594778
Median age in population: 267.4100341321748
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.505
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.505
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 176908316
--- Timings ---
Current time: 1529615925839 milliseconds
Total Time:         454.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.7 seconds, 49.7%
Fitness Testing:    176.5 seconds, 38.8%
Report:              52.1 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction float_sub} {:instruction float_flush} {:instruction integer_flush} {:instruction float_sub} {:instruction float_dup_times} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction float_div} {:instruction print_integer} {:instruction float_dup} {:instruction float_add})
Best program: (float_sub float_mult integer_fromfloat integer_flush float_add integer_dup_items integer_shove float_sub float_flush integer_flush float_sub float_dup_times in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer float_div print_integer float_dup float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1742.5983998999952
Median total errors in population: 286.7425
Error averages by case: (59.40908409999907 11.184 57.104965900000536 11.224 56.00580640000088 11.086 56.786476599999126 11.12 57.46243000000018 11.196 58.822161600001216 11.093 59.40653199999958 11.182 55.287798399999986 11.113 59.296327499999805 11.175 58.971547799999136 11.18 58.81994149999871 11.149 59.01864000000004 12.03 57.97968260000087 11.192 58.536872399999304 11.18 60.02516319999962 11.2 56.534032399998935 11.126 55.926951299999914 11.09 60.26678710000098 11.277 60.54942310000037 11.073 61.5433639999997 11.265 59.253068400001105 11.151 60.50620350000089 11.228 55.55388789999888 11.095 59.605435200001175 11.111 59.95381700000131 11.252)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.4578 4 0.199 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 11 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 18.642
Average program size in population (points): 19.642
Average percent parens in population: 0.057
Minimum age in population: 265.6883970957761
Maximum age in population: 270.9730493570072
Average age in population: 268.8491247831365
Median age in population: 268.8890757239184
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.513
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.513
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 177375216
--- Timings ---
Current time: 1529615927772 milliseconds
Total Time:         456.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       226.9 seconds, 49.7%
Fitness Testing:    177.0 seconds, 38.8%
Report:              52.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_max} {:instruction integer_add} {:instruction float_tan} {:instruction float_mult} {:instruction integer_yank} {:instruction float_yank} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction integer_div} {:instruction float_mult})
Best program: (integer_yankdup float_stackdepth integer_max integer_add float_tan float_mult integer_yank float_yank float_sin in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer integer_div float_mult)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1715.0681035999949
Median total errors in population: 286.7425
Error averages by case: (58.31235339999878 11.179 55.531891900000495 11.225 52.352937600001034 11.056 55.916042999998616 11.128 56.429190000000645 11.194 57.857317600001466 11.086 58.79811399999963 11.171 53.29623880000021 11.105 58.779532999999816 11.17 57.54258139999885 11.161 58.456958999998776 11.132 57.808236800000046 12.026 56.89243860000123 11.17 57.732370399999006 11.162 58.953606399999664 11.184 55.74881809999889 11.13 53.94389849999992 11.073 59.49327540000094 11.26 60.41954900000037 11.076 61.056574399999434 11.254 58.79698640000139 11.126 59.884848600001234 11.2 53.76495249999886 11.091 57.94405560000142 11.09 59.66933320000124 11.237)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.3483 5 0.5422 4 0.801 4 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.6363 10 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 5 0.7061 5 0.3925 3 0.3884 4 0.4982 5)
Average genome size in population (length): 18.699
Average program size in population (points): 19.699
Average percent parens in population: 0.057
Minimum age in population: 267.2451955546703
Maximum age in population: 272.5814363237727
Average age in population: 270.3375470066094
Median age in population: 270.3725957878857
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.53
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.53
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 177843666
--- Timings ---
Current time: 1529615929806 milliseconds
Total Time:         458.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.0 seconds, 49.8%
Fitness Testing:    177.7 seconds, 38.8%
Report:              52.4 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_sub} {:instruction integer_yank} {:instruction integer_mult} {:instruction tagged_70} {:instruction integer_rot} {:instruction integer_inc} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction float_dec} {:instruction in1} {:instruction print_integer})
Best program: (integer_stackdepth integer_dup integer_fromfloat in2 float_sub integer_yank integer_mult tagged_70 integer_rot integer_inc in1 tagged_70 float_shove integer_fromfloat in2 integer_add integer_add float_dec in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 1566.9325014999952
Median total errors in population: 286.7425
Error averages by case: (52.08930389999908 11.169 50.277824600000436 11.228 47.92798880000103 11.057 50.452207399998954 11.125 50.806946400000506 11.186 52.04619740000114 11.079 52.858720999999676 11.166 47.5813584000003 11.112 52.73111379999982 11.165 51.296060399999135 11.155 51.8005484999989 11.119 52.50466880000004 12.018 50.66033620000092 11.177 51.104871599999285 11.158 53.21348959999971 11.184 49.82630569999911 11.132 48.65464519999991 11.068 53.211714000000825 11.257 54.491811400000344 11.061 54.50659199999967 11.237 52.106435600001014 11.121 53.452260800000914 11.196 47.75944239999904 11.085 52.863328000001104 11.097 53.12532960000111 11.231)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.6517 6 0.4578 4 0.199 5 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 18.586
Average program size in population (points): 19.586
Average percent parens in population: 0.056
Minimum age in population: 269.2370749024839
Maximum age in population: 273.8415226882296
Average age in population: 271.8260747120393
Median age in population: 271.837766457358
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.53
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.53
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 178309041
--- Timings ---
Current time: 1529615931691 milliseconds
Total Time:         460.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       229.2 seconds, 49.8%
Fitness Testing:    178.3 seconds, 38.7%
Report:              52.6 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 75} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction float_yank} {:instruction float_max} {:instruction integer_mod} {:instruction in1} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (75 integer_dup_items in1 integer_fromfloat float_cos in1 tagged_70 float_shove float_yank float_max integer_mod in1 integer_pop integer_fromfloat integer_rot integer_pop in1 in2 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1517.821361499995
Median total errors in population: 286.7425
Error averages by case: (49.830474199999216 11.16 49.85858740000052 11.207 45.43750720000065 11.071 50.109535199999016 11.114 50.29629460000036 11.185 49.47033040000106 11.085 50.63213399999959 11.158 47.58827440000014 11.109 48.13911379999982 11.167 49.43705199999929 11.153 49.81453099999895 11.128 46.866697600000045 12.017 48.112682600000745 11.173 49.047373599999446 11.152 50.55325599999963 11.174 50.29166859999904 11.114 48.289860899999915 11.082 51.11693330000076 11.245 50.20601530000034 11.068 52.46687279999972 11.234 50.14251760000094 11.131 51.45561570000075 11.199 48.606227499999 11.085 49.407988800001014 11.096 51.10881700000106 11.228)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.6517 3 0.4578 2 0.199 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 9 0.2549 1 0.0731 3 0.2039 9 0.2456 2 0.1836 2 0.2939 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 18.593
Average program size in population (points): 19.593
Average percent parens in population: 0.057
Minimum age in population: 270.7247670657347
Maximum age in population: 275.2161758812816
Average age in population: 273.3010530929693
Median age in population: 273.3578897305412
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.501
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.501
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 178774466
--- Timings ---
Current time: 1529615933590 milliseconds
Total Time:         462.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       230.3 seconds, 49.8%
Fitness Testing:    178.9 seconds, 38.7%
Report:              52.8 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1})
Best program: (float_mult float_sub integer_dup_items integer_div in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 1598.3989215999952
Median total errors in population: 286.7425
Error averages by case: (52.64830389999904 11.192 53.373638200000556 11.261 49.4926240000011 11.084 52.6874457999989 11.137 53.514687800000445 11.216 52.550246000001216 11.102 53.68273099999959 11.189 50.693141600000246 11.125 52.17232749999978 11.191 51.98555619999911 11.18 52.00233449999874 11.146 51.211697700000045 12.03 53.167346000000954 11.212 51.27987319999932 11.187 54.76046559999963 11.214 52.424032299998856 11.139 51.637860899999914 11.091 54.264567800000926 11.3 54.002607500000394 11.07 55.66510079999966 11.279 52.31970120000108 11.142 54.418085200000945 11.227 51.35101249999885 11.099 53.21521200000118 11.122 53.67632240000127 11.267)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.6517 2 0.4578 3 0.199 3 0.2168 2 0.7863 10 0.4958 3 0.1965 3 0.0288 9 0.1122 3 0.4996 3 0.3024 4 0.3637 10 0.2549 2 0.0731 3 0.2039 10 0.2456 3 0.1836 3 0.2939 3 0.6075 1 0.3884 3 0.4982 3)
Average genome size in population (length): 18.38
Average program size in population (points): 19.38
Average percent parens in population: 0.057
Minimum age in population: 272.0922259786646
Maximum age in population: 276.9235194503418
Average age in population: 274.7801307789792
Median age in population: 274.7987275751161
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.508
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.508
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 179234416
--- Timings ---
Current time: 1529615935454 milliseconds
Total Time:         464.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.4 seconds, 49.9%
Fitness Testing:    179.4 seconds, 38.7%
Report:              53.0 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_add} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer integer_dup_times integer_fromfloat in1 float_dup_items integer_pop float_add float_min in1 integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1769.696127899995
Median total errors in population: 286.7425
Error averages by case: (59.036133599999204 11.196 59.86721440000054 11.252 56.57328800000098 11.081 60.19117759999891 11.135 60.50577760000028 11.222 59.9644020000011 11.104 60.62111399999958 11.192 58.1771904 11.125 59.65282339999979 11.194 58.72206879999926 11.185 58.981351999998715 11.158 59.438438400000045 12.03 58.97955080000082 11.202 58.44037039999947 11.183 60.694606399999614 11.206 59.88703299999884 11.143 58.739586399999915 11.105 59.83442160000099 11.281 61.41177240000037 11.09 61.13459199999983 11.274 59.358619200000916 11.155 60.169673000000834 11.242 58.824152499998775 11.108 60.25544400000114 11.117 59.996326000001325 11.259)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.6517 3 0.4578 2 0.199 2 0.2168 1 0.7863 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.5004 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 10 0.7544 2 0.8164 2 0.7061 2 0.6075 1 0.3884 2 0.4982 2)
Average genome size in population (length): 18.84
Average program size in population (points): 19.84
Average percent parens in population: 0.056
Minimum age in population: 273.0922259786646
Maximum age in population: 278.3871826178292
Average age in population: 276.2361362311498
Median age in population: 276.2930773852416
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.519
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.519
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 179705741
--- Timings ---
Current time: 1529615937513 milliseconds
Total Time:         466.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       232.7 seconds, 49.9%
Fitness Testing:    180.0 seconds, 38.6%
Report:              53.2 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_dup_items} {:instruction tag_float_475} {:instruction float_cos} {:instruction float_yank} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_min} {:instruction in1} {:instruction tagged_108} {:instruction tagged_62} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_sub} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction float_sin})
Best program: (integer_add integer_dup_items tag_float_475 float_cos float_yank integer_dup_times float_frominteger float_min in1 tagged_108 tagged_62 integer_fromfloat in2 integer_add integer_sub in1 print_integer integer_sub float_sin)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1480.3470399999953
Median total errors in population: 286.7425
Error averages by case: (48.07147419999954 11.134 47.64368900000045 11.186 44.71820800000039 11.06 48.25683319999937 11.099 48.335081000000095 11.157 48.70595700000066 11.067 49.622337999999665 11.143 46.027623999999925 11.095 48.7035493999998 11.14 47.67705199999961 11.131 47.643548499999 11.098 47.12210090000005 12.008 47.97846800000043 11.156 47.4083703999998 11.128 49.8277439999997 11.164 47.90730419999908 11.106 46.62362559999991 11.061 48.7338602000007 11.218 50.397258200000365 11.05 49.518328800000006 11.208 48.35061920000051 11.089 49.01326080000044 11.173 45.89975999999915 11.066 48.562154000000604 11.087 48.58083140000101 11.194)
Error minima by case: (0.3901 3 0.2373 2 0.1168 3 0.0298 10 0.6517 2 0.4578 3 0.199 3 0.2168 2 0.7863 9 0.4958 3 0.1965 2 0.0288 9 0.1122 3 0.4996 3 0.3024 3 0.3637 9 0.2549 2 0.0731 3 0.2039 9 0.2456 3 0.1836 2 0.2939 3 0.6075 1 0.3884 3 0.4982 3)
Average genome size in population (length): 18.823
Average program size in population (points): 19.823
Average percent parens in population: 0.056
Minimum age in population: 274.9982400351873
Maximum age in population: 279.641650294871
Average age in population: 277.7040342561639
Median age in population: 277.7685244006773
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.488
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.488
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 180176791
--- Timings ---
Current time: 1529615939472 milliseconds
Total Time:         468.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       233.8 seconds, 50.0%
Fitness Testing:    180.6 seconds, 38.6%
Report:              53.4 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_dup_times} {:instruction float_sub} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_cos} {:instruction float_div} {:instruction print_integer} {:instruction 29} {:instruction float_add})
Best program: (print_integer integer_dup_times integer_fromfloat in1 float_dup_times float_sub float_sin in1 tagged_70 float_shove integer_fromfloat in2 integer_add float_cos float_div print_integer 29 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1561.425399399995
Median total errors in population: 286.7425
Error averages by case: (51.837523699999366 11.142 50.58640090000053 11.208 48.544624000000795 11.059 49.553862999999225 11.115 50.83303610000014 11.17 52.31824600000093 11.07 53.2543329999996 11.149 48.08227439999991 11.096 52.1567630999998 11.165 51.05507719999942 11.137 51.308334499998885 11.111 51.86698560000004 12.031 50.96357040000063 11.165 51.189873199999575 11.14 53.54386079999963 11.167 49.28094049999899 11.119 48.629331499999914 11.069 52.41234850000098 11.232 53.41105430000036 11.062 53.589855199999995 11.217 51.7787012000008 11.108 52.7857913000007 11.182 48.35818999999896 11.071 52.504600400000975 11.088 52.300820600001295 11.206)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 3 0.4578 2 0.199 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 10 0.2549 1 0.0731 3 0.2039 9 0.2456 2 0.1836 2 0.2939 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 18.683
Average program size in population (points): 19.683
Average percent parens in population: 0.056
Minimum age in population: 275.9982400351873
Maximum age in population: 280.992900879599
Average age in population: 279.178441641103
Median age in population: 279.197240003556
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.497
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.497
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 180644416
--- Timings ---
Current time: 1529615941358 milliseconds
Total Time:         469.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       235.0 seconds, 50.0%
Fitness Testing:    181.2 seconds, 38.6%
Report:              53.6 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction -27} {:instruction float_shove} {:instruction float_yank} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dup_items} {:instruction float_sub} {:instruction integer_swap} {:instruction float_dec} {:instruction float_yank} {:instruction integer_rot} {:instruction tagged_70} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_add} {:instruction float_shove} {:instruction tagged_267} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer integer_dup_times float_stackdepth -27 float_shove float_yank integer_rot float_mod float_dup_items float_sub integer_swap float_dec float_yank integer_rot tagged_70 in1 in1 integer_fromfloat integer_fromfloat float_add float_shove tagged_267 in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 1710.035507799995
Median total errors in population: 286.7425
Error averages by case: (58.45279299999949 11.167 54.60392630000047 11.241 52.48135360000063 11.045 54.467266999999474 11.121 54.94073269999988 11.188 58.47514880000075 11.068 59.85311399999965 11.158 52.3888407999997 11.103 58.76967819999983 11.173 57.62459819999957 11.15 58.146958999999 11.107 57.877352000000045 12.027 57.91932640000055 11.172 57.679370399999726 11.159 60.26060639999968 11.179 54.05194189999911 11.131 53.06882169999992 11.065 59.70098300000079 11.263 60.57877240000033 11.055 61.27108319999993 11.246 58.53298640000065 11.106 60.03026080000058 11.189 52.05775999999908 11.077 57.816502000000824 11.093 59.48232960000107 11.22)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 9 0.6517 5 0.4578 4 0.199 5 0.2168 3 0.7863 9 0.4958 4 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 3 0.4982 6)
Average genome size in population (length): 18.788
Average program size in population (points): 19.788
Average percent parens in population: 0.055
Minimum age in population: 278.0594663962798
Maximum age in population: 282.2841696565753
Average age in population: 280.632385148073
Median age in population: 280.6801320517078
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.52
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.52
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 181114816
--- Timings ---
Current time: 1529615943363 milliseconds
Total Time:         471.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.2 seconds, 50.0%
Fitness Testing:    181.8 seconds, 38.5%
Report:              53.8 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dec} {:instruction float_mult} {:instruction integer_pop} {:instruction in1} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction in1} {:instruction float_div} {:instruction print_integer} {:instruction 29} {:instruction float_add})
Best program: (integer_fromfloat integer_fromfloat in2 float_dec float_mult integer_pop in1 float_sin in1 tagged_70 integer_yank integer_fromfloat in2 integer_add in1 float_div print_integer 29 float_add)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1895.6670023999952
Median total errors in population: 286.7425
Error averages by case: (65.93135339999863 11.206 64.36255330000056 11.259 60.662339200001476 11.087 63.66017759999836 11.147 64.57421570000076 11.217 63.08745060000175 11.1 63.07972099999957 11.201 61.2108056000006 11.129 65.70174669999994 11.201 64.53757299999852 11.191 65.24315549999861 11.16 65.20029440000005 12.031 62.83844840000151 11.212 64.61637119999868 11.194 65.61258239999961 11.222 62.988032999998744 11.154 62.478782499999916 11.095 67.26620230000076 11.303 66.85075290000017 11.088 68.90408319999962 11.284 65.52980280000172 11.16 67.82426080000117 11.244 61.647862499998716 11.099 64.26210480000172 11.127 67.21632960000142 11.269)
Error minima by case: (0.3901 5 0.2373 5 0.1168 3 0.0298 10 0.6517 5 0.5422 4 0.801 4 0.2168 3 0.7863 10 0.4958 5 0.1965 5 0.0288 9 0.1122 2 0.5004 5 0.6976 4 0.3637 10 0.2549 3 0.0731 6 0.2039 10 0.7544 5 0.8164 5 0.7061 5 0.6075 3 0.3884 4 0.4982 5)
Average genome size in population (length): 18.937
Average program size in population (points): 19.937
Average percent parens in population: 0.054
Minimum age in population: 279.4740524829075
Maximum age in population: 284.0400174793263
Average age in population: 282.1500571785889
Median age in population: 282.2389577524525
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.558
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.558
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 181588666
--- Timings ---
Current time: 1529615945377 milliseconds
Total Time:         473.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.4 seconds, 50.1%
Fitness Testing:    182.4 seconds, 38.5%
Report:              54.0 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_div} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction in1})
Best program: (float_dup float_sub integer_dup_items integer_div in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer in1)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 1585.7195274999951
Median total errors in population: 286.7425
Error averages by case: (51.395254399998834 11.194 52.34068900000057 11.256 48.330054400000954 11.065 52.1261477999989 11.132 53.114081000000326 11.222 53.573028600001464 11.094 54.49711399999956 11.185 49.55440720000003 11.122 53.29996039999979 11.17 50.96703519999889 11.174 51.30313799999869 11.139 52.487294400000046 12.014 51.54977520000116 11.196 50.30037279999933 11.17 54.75730399999961 11.203 51.04412409999882 11.138 50.67886089999991 11.084 52.719933300001045 11.281 55.65154900000037 11.068 54.142346399999504 11.266 51.54788480000135 11.137 52.94596690000114 11.221 50.28993749999881 11.098 54.30644400000142 11.109 52.80382420000136 11.255)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 9 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 18.935
Average program size in population (points): 19.935
Average percent parens in population: 0.055
Minimum age in population: 281.0738343688767
Maximum age in population: 285.4923906158741
Average age in population: 283.637954083459
Median age in population: 283.6924044703698
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.556
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.556
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 182062191
--- Timings ---
Current time: 1529615947433 milliseconds
Total Time:         475.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       238.6 seconds, 50.1%
Fitness Testing:    183.1 seconds, 38.5%
Report:              54.2 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_flush} {:instruction tagged_665} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_min} {:instruction float_max} {:instruction float_mult} {:instruction integer_rot} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction in1} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sub float_flush tagged_665 integer_dup_items integer_dup_items float_sin in1 tagged_70 float_shove integer_fromfloat in2 float_min float_max float_mult integer_rot integer_pop in1 in2 float_shove integer_fromfloat in2 in1 float_shove integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 1337.3309619999952
Median total errors in population: 286.7425
Error averages by case: (41.91698509999971 11.15 42.592383800000526 11.213 38.999740800000254 11.057 42.25383349999953 11.106 43.14090479999987 11.185 43.127246000000646 11.078 44.1773379999996 11.154 39.04197369999943 11.103 41.92576309999979 11.139 41.408505799999766 11.142 42.039513499998804 11.114 40.800014400000045 12.001 44.38524360000041 11.168 41.00287560000013 11.137 45.08234879999964 11.172 41.27500669999892 11.115 40.61278879999991 11.073 43.24559120000088 11.223 43.49005430000037 11.05 44.62113600000017 11.216 42.31559960000052 11.111 43.540734000000334 11.184 40.26386089999887 11.084 43.41321200000061 11.097 43.38030800000121 11.206)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 9 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 19.092
Average program size in population (points): 20.092
Average percent parens in population: 0.054
Minimum age in population: 282.2756840769022
Maximum age in population: 287.024625261874
Average age in population: 285.1228184732784
Median age in population: 285.1751034483632
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.554
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.554
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 182539791
--- Timings ---
Current time: 1529615949434 milliseconds
Total Time:         477.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.8 seconds, 50.2%
Fitness Testing:    183.6 seconds, 38.4%
Report:              54.4 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction float_div} {:instruction float_pop} {:instruction 29} {:instruction -14})
Best program: (float_dup float_sub integer_dup_items float_sin in1 tagged_70 float_shove float_sub integer_dup_items float_sin in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer float_div float_pop 29 -14)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 1475.950266899995
Median total errors in population: 286.7425
Error averages by case: (46.81386429999954 11.155 48.88558740000048 11.219 44.76145600000054 11.059 47.91556499999921 11.117 49.21029460000036 11.181 48.77453500000087 11.073 49.53752699999964 11.153 46.45314160000008 11.103 48.65590009999981 11.168 46.59353939999959 11.144 46.73172749999917 11.119 48.409697600000044 12.024 46.993672800000475 11.16 46.019873999999795 11.144 49.74667519999968 11.162 47.339395999999255 11.116 47.435370699999915 11.07 47.94986020000061 11.236 50.361015300000346 11.067 49.29411839999976 11.223 47.04133400000058 11.117 48.30590960000049 11.191 46.314619999999216 11.077 49.023270000000835 11.088 48.00431520000092 11.212)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 9 0.3483 3 0.4578 2 0.199 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.3024 2 0.3637 9 0.2549 1 0.0731 3 0.2039 10 0.2456 2 0.1836 2 0.2939 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 18.962
Average program size in population (points): 19.962
Average percent parens in population: 0.055
Minimum age in population: 283.8560949591909
Maximum age in population: 288.4795307013982
Average age in population: 286.6060115128143
Median age in population: 286.636103455835
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.574
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.574
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 183014241
--- Timings ---
Current time: 1529615951346 milliseconds
Total Time:         479.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       240.9 seconds, 50.2%
Fitness Testing:    184.2 seconds, 38.4%
Report:              54.6 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_max} {:instruction -28} {:instruction integer_inc} {:instruction float_yank} {:instruction float_div} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction tagged_70} {:instruction in1} {:instruction in2} {:instruction in2} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times float_dup_items float_max -28 integer_inc float_yank float_div float_dup_items float_dec integer_dup_times integer_rot tagged_70 in1 in2 in2 integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1369.2168601999954
Median total errors in population: 286.7425
Error averages by case: (43.60820489999943 11.169 42.76463820000049 11.231 42.34344160000073 11.072 43.302011999999294 11.113 43.13168780000008 11.197 44.84112580000083 11.089 45.41913899999963 11.169 41.146491199999694 11.127 43.975190499999805 11.144 43.0055141999995 11.156 42.787120499998906 11.114 42.63498560000004 12.004 44.43958020000059 11.192 42.49387479999968 11.151 45.84144159999965 11.196 42.62884939999899 11.126 41.910135399999916 11.08 44.14751810000081 11.252 46.16064650000035 11.045 45.1633816 11.233 43.223966800000674 11.114 44.222203500000525 11.195 40.53918999999901 11.09 46.06570760000085 11.108 43.82981340000111 11.224)
Error minima by case: (0.3901 11 0.2373 10 0.1168 9 0.0298 10 0.3483 11 0.4578 10 0.199 10 0.2168 9 0.2137 10 0.4958 10 0.1965 10 0.0288 9 0.1122 9 0.5004 10 0.3024 8 0.3637 10 0.2549 9 0.0731 9 0.2039 10 0.7544 11 0.8164 10 0.2939 9 0.3925 10 0.3884 8 0.4982 9)
Average genome size in population (length): 18.737
Average program size in population (points): 19.737
Average percent parens in population: 0.055
Minimum age in population: 285.7290149712975
Maximum age in population: 289.8347845985353
Average age in population: 288.0979877741121
Median age in population: 288.126548893839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.565
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.565
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 183483041
--- Timings ---
Current time: 1529615953336 milliseconds
Total Time:         481.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       242.1 seconds, 50.2%
Fitness Testing:    184.8 seconds, 38.3%
Report:              54.8 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction tagged_70} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer} {:instruction float_div} {:instruction integer_div} {:instruction 29} {:instruction -14})
Best program: (float_dup float_sub integer_dup_items float_sin in1 tagged_70 float_shove integer_fromfloat in2 integer_add print_integer float_div integer_div 29 -14)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 1891.7252161999952
Median total errors in population: 286.7425
Error averages by case: (64.55874349999834 11.208 63.38426520000054 11.287 61.781404800001695 11.077 63.60517759999832 11.152 63.589170800000865 11.244 65.68285980000175 11.098 66.62891499999974 11.204 61.2828896000006 11.138 64.9587466999998 11.203 64.0545729999984 11.194 63.966369499998656 11.149 64.89817920000004 12.026 65.07455080000159 11.236 63.56686919999872 11.193 67.14830399999963 11.237 62.83630559999877 11.162 62.10807659999991 11.097 65.46549470000103 11.315 67.16975290000022 11.074 66.7563287999992 11.297 64.36853720000181 11.155 65.63214250000149 11.245 61.26411499999871 11.098 66.26560920000172 11.131 65.17583500000136 11.282)
Error minima by case: (0.3901 2 0.2373 3 0.1168 1 0.0298 10 0.3483 3 0.4578 2 0.801 2 0.2168 1 0.2137 10 0.4958 2 0.1965 2 0.0288 9 0.1122 1 0.4996 2 0.6976 2 0.6363 10 0.2549 1 0.0731 3 0.2039 9 0.7544 2 0.1836 2 0.7061 2 0.3925 1 0.3884 2 0.4982 2)
Average genome size in population (length): 18.399
Average program size in population (points): 19.399
Average percent parens in population: 0.057
Minimum age in population: 287.1442327619229
Maximum age in population: 291.3376152549198
Average age in population: 289.5822881924657
Median age in population: 289.6118332298023
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.571
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.571
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 183943366
--- Timings ---
Current time: 1529615955245 milliseconds
Total Time:         483.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       243.3 seconds, 50.3%
Fitness Testing:    185.4 seconds, 38.3%
Report:              55.0 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction in1} {:instruction float_div} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_div} {:instruction in1} {:instruction print_integer})
Best program: (float_max in1 float_div float_shove integer_fromfloat in2 integer_add integer_shove integer_div in1 print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 1565.755459599995
Median total errors in population: 286.7425
Error averages by case: (52.22991379999904 11.154 50.52645170000048 11.225 48.183156800000916 11.05 51.65080339999888 11.113 50.98142930000036 11.182 52.680161600001504 11.064 53.462730999999636 11.148 46.99897359999979 11.098 52.1064726999998 11.154 51.8220603999991 11.14 50.864941499998764 11.101 50.03987040000004 12.005 49.49857040000097 11.165 49.99987239999949 11.143 53.937767999999664 11.177 50.42339529999883 11.121 48.52433149999992 11.062 53.824421600000946 11.252 54.431627000000354 11.042 55.15608319999946 11.23 51.067068400001084 11.096 53.938260800001196 11.179 47.01832999999885 11.069 53.551435200001514 11.088 53.56832960000125 11.211)
Error minima by case: (0.3901 5 0.2373 5 0.1168 4 0.0298 9 0.6517 5 0.5422 5 0.801 5 0.2168 3 0.7863 9 0.4958 5 0.1965 4 0.0288 9 0.1122 4 0.5004 5 0.6976 5 0.6363 9 0.2549 3 0.0731 6 0.2039 9 0.7544 5 0.8164 4 0.7061 5 0.6075 2 0.3884 5 0.4982 5)
Average genome size in population (length): 18.249
Average program size in population (points): 19.249
Average percent parens in population: 0.057
Minimum age in population: 288.1442327619229
Maximum age in population: 292.8635881917143
Average age in population: 291.0669599418792
Median age in population: 291.1107464583976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.537
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.537
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 184399791
--- Timings ---
Current time: 1529615957224 milliseconds
Total Time:         485.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.6 seconds, 50.3%
Fitness Testing:    185.9 seconds, 38.3%
Report:              55.2 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_add integer_dup_times integer_fromfloat in1 float_dup_items integer_fromfloat in2 integer_add print_integer)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 9
Size: 10
Percent parens: 0.100
--- Population Statistics ---
Average total errors in population: 1697.191798699995
Median total errors in population: 286.7425
Error averages by case: (57.02857319999869 11.176 55.84168900000053 11.255 52.99904000000136 11.08 55.825654399998555 11.133 56.04308100000069 11.21 57.74016160000165 11.091 58.82573099999959 11.183 53.443407200000415 11.129 57.55647269999979 11.183 56.61208559999876 11.172 56.284351999998734 11.138 57.396755200000044 12.03 56.230233800001294 11.199 55.85237119999894 11.175 59.296767999999624 11.207 54.98957749999883 11.138 54.55031189999991 11.09 57.96805610000094 11.283 59.32042310000038 11.068 59.08583759999934 11.259 56.64361920000144 11.135 58.14396690000132 11.221 54.231367499998775 11.096 57.615435200001606 11.113 57.64782780000129 11.255)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.6517 6 0.5422 4 0.801 5 0.2168 3 0.7863 9 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.6976 5 0.6363 10 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.6075 3 0.3884 4 0.4982 6)
Average genome size in population (length): 18.087
Average program size in population (points): 19.087
Average percent parens in population: 0.057
Minimum age in population: 289.8046207073965
Maximum age in population: 294.4814241293408
Average age in population: 292.563356607971
Median age in population: 292.5761302289038
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.53
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.53
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 184852216
--- Timings ---
Current time: 1529615959153 milliseconds
Total Time:         487.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       245.7 seconds, 50.4%
Fitness Testing:    186.6 seconds, 38.2%
Report:              55.3 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 11498.821700000008
Test mean error for best: 5.74941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -68.3901404394 | Program output: -68           
Correct output: 120.2372555792 | Program output: 120           
Correct output: -2.1167948701  | Program output: -2            
Correct output: 62.9701853121  | Program output: 63            
Correct output: 128.6517283847 | Program output: 128           
Correct output: -8.5421972836  | Program output: -8            
Correct output: -38.8010007696 | Program output: -38           
Correct output: 39.2167962231  | Program output: 39            
Correct output: -24.2137149529 | Program output: -25           
Correct output: -58.4957609113 | Program output: -58           
Correct output: -87.1964832094 | Program output: -87           
Correct output: -2.9711614706  | Program output: -3            
Correct output: -81.1121745511 | Program output: -81           
Correct output: -49.5003550687 | Program output: -49           
Correct output: -88.6976304193 | Program output: -88           
Correct output: 86.3637391605  | Program output: 87            
Correct output: 58.2548794908  | Program output: 58            
Correct output: -133.0730642872 | Program output: -133          
Correct output: -9.7960903291  | Program output: -10           
Correct output: -176.7544002752 | Program output: -176          
Correct output: -78.8164296875 | Program output: -78           
Correct output: -130.7060715307 | Program output: -130          
Correct output: 70.6074653162  | Program output: 70            
Correct output: -4.3884194975  | Program output: -4            
Correct output: -126.4982238663 | Program output: -126          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction print_integer} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction tagged_30} {:instruction float_dec} {:instruction float_div} {:instruction integer_rot} {:instruction tagged_70} {:instruction in1} {:instruction tagged_2} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction integer_yankdup} {:instruction integer_max})
Best program: (float_add integer_dup_times integer_fromfloat print_integer float_dup_items integer_pop float_yank integer_stackdepth tagged_30 float_dec float_div integer_rot tagged_70 in1 tagged_2 float_shove integer_fromfloat in2 integer_add integer_add in1 print_integer integer_yankdup integer_max)
Errors: [0.3901 11 0.2373 11 0.1168 11 0.0298 11 0.6517 11 0.5422 11 0.801 11 0.2168 11 0.7863 11 0.4958 11 0.1965 11 0.0288 12 0.1122 11 0.5004 11 0.6976 11 0.6363 11 0.2549 11 0.0731 11 0.2039 11 0.7544 11 0.8164 11 0.7061 11 0.6075 11 0.3884 11 0.4982 11]
Total: 286.7425
Mean: 5.73485
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 1488.146431099995
Median total errors in population: 286.7425
Error averages by case: (49.31930389999932 11.139 45.93333810000055 11.199 46.44174080000064 11.053 45.71285959999938 11.11 46.12032670000003 11.148 49.734872600001 11.061 50.63053699999958 11.141 44.15766899999987 11.091 49.3547630999998 11.151 48.87255619999938 11.127 48.49133449999886 11.096 49.167043200000045 12.025 49.35890700000075 11.156 48.36487319999956 11.136 51.1156511999996 11.164 45.38385349999904 11.112 44.79829309999992 11.048 50.13464090000083 11.23 50.92046210000037 11.049 51.366363999999905 11.205 48.95270120000085 11.09 50.35520350000064 11.157 44.874942499998994 11.059 49.886377200000965 11.083 49.67681700000116 11.191)
Error minima by case: (0.3901 5 0.2373 6 0.1168 3 0.0298 10 0.3483 6 0.4578 4 0.199 5 0.2168 3 0.2137 10 0.4958 5 0.1965 5 0.0288 9 0.1122 4 0.4996 5 0.3024 5 0.3637 10 0.2549 3 0.0731 7 0.2039 10 0.2456 6 0.1836 5 0.2939 6 0.3925 3 0.3884 4 0.4982 6)
Average genome size in population (length): 18.123
Average program size in population (points): 19.123
Average percent parens in population: 0.057
Minimum age in population: 291.5383662292775
Maximum age in population: 296.3265792906695
Average age in population: 294.0487717408047
Median age in population: 294.0906473581544
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.543
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.543
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 185305591
--- Timings ---
Current time: 1529615961019 milliseconds
Total Time:         489.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.8 seconds, 50.4%
Fitness Testing:    187.1 seconds, 38.2%
Report:              55.5 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
