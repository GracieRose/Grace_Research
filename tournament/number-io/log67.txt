Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[89.30752483154646 1] 90.30752483154646]
Train Case:   1 | Input/Output: [[82.38089657570478 76] 158.38089657570478]
Train Case:   2 | Input/Output: [[31.982221685156418 83] 114.98222168515642]
Train Case:   3 | Input/Output: [[-95.24171597753843 22] -73.24171597753843]
Train Case:   4 | Input/Output: [[-63.74878812839364 17] -46.74878812839364]
Train Case:   5 | Input/Output: [[-17.79794207215342 35] 17.20205792784658]
Train Case:   6 | Input/Output: [[12.708554864820258 -39] -26.291445135179742]
Train Case:   7 | Input/Output: [[-15.069093070167355 -13] -28.069093070167355]
Train Case:   8 | Input/Output: [[-91.22209337402256 -40] -131.22209337402256]
Train Case:   9 | Input/Output: [[-73.91716753168842 -16] -89.91716753168842]
Train Case:  10 | Input/Output: [[55.52712180347683 87] 142.52712180347683]
Train Case:  11 | Input/Output: [[-76.462078233196 38] -38.462078233195996]
Train Case:  12 | Input/Output: [[95.72195497108837 -72] 23.721954971088365]
Train Case:  13 | Input/Output: [[92.50558855248292 -65] 27.50558855248292]
Train Case:  14 | Input/Output: [[21.324272566833628 -31] -9.675727433166372]
Train Case:  15 | Input/Output: [[13.987016059166052 6] 19.987016059166052]
Train Case:  16 | Input/Output: [[-25.392663117543492 45] 19.607336882456508]
Train Case:  17 | Input/Output: [[-93.7006438670818 84] -9.700643867081794]
Train Case:  18 | Input/Output: [[42.10574134441924 -12] 30.105741344419243]
Train Case:  19 | Input/Output: [[-2.073071893587894 75] 72.9269281064121]
Train Case:  20 | Input/Output: [[66.35246414466164 -56] 10.352464144661639]
Train Case:  21 | Input/Output: [[27.96810033246014 -9] 18.96810033246014]
Train Case:  22 | Input/Output: [[46.22274991943755 21] 67.22274991943755]
Train Case:  23 | Input/Output: [[-4.071823154535295 -54] -58.071823154535295]
Train Case:  24 | Input/Output: [[91.4353776153944 -85] 6.435377615394401]
Test Case:   0 | Input/Output: [[93.20688549216126 64] 157.20688549216126]
Test Case:   1 | Input/Output: [[-76.0996570188691 48] -28.099657018869095]
Test Case:   2 | Input/Output: [[69.376617977238 43] 112.376617977238]
Test Case:   3 | Input/Output: [[62.120889074561546 46] 108.12088907456155]
Test Case:   4 | Input/Output: [[71.31907142571711 33] 104.31907142571711]
Test Case:   5 | Input/Output: [[43.02992560995065 -7] 36.02992560995065]
Test Case:   6 | Input/Output: [[-15.633625378956268 -53] -68.63362537895627]
Test Case:   7 | Input/Output: [[-12.210055500149082 86] 73.78994449985092]
Test Case:   8 | Input/Output: [[37.16925690615 44] 81.16925690615]
Test Case:   9 | Input/Output: [[39.03572368280149 24] 63.03572368280149]
Test Case:  10 | Input/Output: [[-57.263166242504205 86] 28.736833757495795]
Test Case:  11 | Input/Output: [[27.635283880352702 79] 106.6352838803527]
Test Case:  12 | Input/Output: [[18.78040979896187 43] 61.78040979896187]
Test Case:  13 | Input/Output: [[-10.26331544530396 20] 9.73668455469604]
Test Case:  14 | Input/Output: [[85.80883504459979 17] 102.80883504459979]
Test Case:  15 | Input/Output: [[1.1066360306705008 -74] -72.8933639693295]
Test Case:  16 | Input/Output: [[-60.82182089503478 -71] -131.8218208950348]
Test Case:  17 | Input/Output: [[4.862794651630551 -39] -34.13720534836945]
Test Case:  18 | Input/Output: [[-75.10255850283976 2] -73.10255850283976]
Test Case:  19 | Input/Output: [[14.707155292920149 45] 59.70715529292015]
Test Case:  20 | Input/Output: [[72.97048633212503 60] 132.97048633212503]
Test Case:  21 | Input/Output: [[-90.11964005183881 14] -76.11964005183881]
Test Case:  22 | Input/Output: [[-93.86723796423846 -1] -94.86723796423846]
Test Case:  23 | Input/Output: [[20.084605221922416 -34] -13.915394778077584]
Test Case:  24 | Input/Output: [[61.926715694011705 -57] 4.926715694011705]
Test Case:  25 | Input/Output: [[84.88352867319281 64] 148.8835286731928]
Test Case:  26 | Input/Output: [[-3.0259378119986877 39] 35.97406218800131]
Test Case:  27 | Input/Output: [[-62.17040177786342 -59] -121.17040177786342]
Test Case:  28 | Input/Output: [[17.771112908529815 54] 71.77111290852982]
Test Case:  29 | Input/Output: [[-16.451352065545294 -99] -115.4513520655453]
Test Case:  30 | Input/Output: [[-10.257381209800172 -34] -44.25738120980017]
Test Case:  31 | Input/Output: [[-33.64810847491893 -69] -102.64810847491893]
Test Case:  32 | Input/Output: [[80.45236989811883 -56] 24.45236989811883]
Test Case:  33 | Input/Output: [[30.57369844885261 95] 125.57369844885261]
Test Case:  34 | Input/Output: [[-85.97053798011542 -52] -137.9705379801154]
Test Case:  35 | Input/Output: [[37.034676739959224 -33] 4.034676739959224]
Test Case:  36 | Input/Output: [[13.161634324648944 81] 94.16163432464894]
Test Case:  37 | Input/Output: [[99.67797074768089 -11] 88.67797074768089]
Test Case:  38 | Input/Output: [[-81.45427057865425 96] 14.545729421345754]
Test Case:  39 | Input/Output: [[-37.539094205173605 100] 62.460905794826395]
Test Case:  40 | Input/Output: [[71.0028994110329 49] 120.0028994110329]
Test Case:  41 | Input/Output: [[77.2573024505603 -81] -3.742697549439697]
Test Case:  42 | Input/Output: [[39.00909780892076 -76] -36.99090219107924]
Test Case:  43 | Input/Output: [[-87.40928328594049 7] -80.40928328594049]
Test Case:  44 | Input/Output: [[44.821136058031215 18] 62.821136058031215]
Test Case:  45 | Input/Output: [[-4.957229021171656 -65] -69.95722902117166]
Test Case:  46 | Input/Output: [[-48.76545085889754 66] 17.234549141102462]
Test Case:  47 | Input/Output: [[4.376997508097347 66] 70.37699750809735]
Test Case:  48 | Input/Output: [[97.33358484935866 37] 134.33358484935866]
Test Case:  49 | Input/Output: [[36.3546465019038 27] 63.3546465019038]
Test Case:  50 | Input/Output: [[18.46572306753683 -66] -47.53427693246317]
Test Case:  51 | Input/Output: [[-66.02284875913719 94] 27.97715124086281]
Test Case:  52 | Input/Output: [[71.49285059401419 -67] 4.492850594014186]
Test Case:  53 | Input/Output: [[93.14980623796981 -85] 8.149806237969813]
Test Case:  54 | Input/Output: [[38.344139028761646 25] 63.344139028761646]
Test Case:  55 | Input/Output: [[-80.3539496395669 -49] -129.3539496395669]
Test Case:  56 | Input/Output: [[61.76854551993645 96] 157.76854551993645]
Test Case:  57 | Input/Output: [[-81.06193182332919 18] -63.06193182332919]
Test Case:  58 | Input/Output: [[97.64705414683692 30] 127.64705414683692]
Test Case:  59 | Input/Output: [[-61.03704951865594 39] -22.03704951865594]
Test Case:  60 | Input/Output: [[-21.026108710168387 96] 74.97389128983161]
Test Case:  61 | Input/Output: [[-50.63063191902744 -98] -148.63063191902745]
Test Case:  62 | Input/Output: [[-52.15743643606072 16] -36.15743643606072]
Test Case:  63 | Input/Output: [[50.54996199323455 -42] 8.549961993234547]
Test Case:  64 | Input/Output: [[-49.573161180696104 39] -10.573161180696104]
Test Case:  65 | Input/Output: [[-19.45660957730027 -39] -58.45660957730027]
Test Case:  66 | Input/Output: [[-36.969137285811996 53] 16.030862714188004]
Test Case:  67 | Input/Output: [[-30.985347380672252 -17] -47.98534738067225]
Test Case:  68 | Input/Output: [[22.830306482811395 67] 89.8303064828114]
Test Case:  69 | Input/Output: [[82.49148546756467 -6] 76.49148546756467]
Test Case:  70 | Input/Output: [[98.000066291899 -58] 40.000066291899]
Test Case:  71 | Input/Output: [[55.68631377855456 14] 69.68631377855456]
Test Case:  72 | Input/Output: [[-31.272421719819945 34] 2.7275782801800545]
Test Case:  73 | Input/Output: [[-87.67410709508268 76] -11.674107095082675]
Test Case:  74 | Input/Output: [[-90.37144738701109 -9] -99.37144738701109]
Test Case:  75 | Input/Output: [[99.83628791882012 -45] 54.83628791882012]
Test Case:  76 | Input/Output: [[-87.74828011108369 66] -21.748280111083687]
Test Case:  77 | Input/Output: [[26.775507720085898 4] 30.775507720085898]
Test Case:  78 | Input/Output: [[33.834788908653024 -23] 10.834788908653024]
Test Case:  79 | Input/Output: [[-30.63580059888949 -50] -80.63580059888949]
Test Case:  80 | Input/Output: [[-12.621299150927683 88] 75.37870084907232]
Test Case:  81 | Input/Output: [[65.4144167827144 9] 74.4144167827144]
Test Case:  82 | Input/Output: [[-24.441925301669514 -38] -62.441925301669514]
Test Case:  83 | Input/Output: [[-60.07138350536507 -48] -108.07138350536508]
Test Case:  84 | Input/Output: [[-95.36237626307252 84] -11.36237626307252]
Test Case:  85 | Input/Output: [[63.742667348015146 37] 100.74266734801515]
Test Case:  86 | Input/Output: [[37.56714801781257 29] 66.56714801781257]
Test Case:  87 | Input/Output: [[-38.65109240506423 -55] -93.65109240506423]
Test Case:  88 | Input/Output: [[-87.29507851090621 -6] -93.29507851090621]
Test Case:  89 | Input/Output: [[77.0315400145839 50] 127.0315400145839]
Test Case:  90 | Input/Output: [[-20.719850989419328 45] 24.280149010580672]
Test Case:  91 | Input/Output: [[24.793956327541025 -11] 13.793956327541025]
Test Case:  92 | Input/Output: [[45.939705407816746 72] 117.93970540781675]
Test Case:  93 | Input/Output: [[-17.488197809820335 20] 2.511802190179665]
Test Case:  94 | Input/Output: [[72.07697968544963 16] 88.07697968544963]
Test Case:  95 | Input/Output: [[49.28105056079727 69] 118.28105056079727]
Test Case:  96 | Input/Output: [[74.4668778739082 29] 103.4668778739082]
Test Case:  97 | Input/Output: [[71.877711019645 -93] -21.122288980354995]
Test Case:  98 | Input/Output: [[53.44838935379798 48] 101.44838935379798]
Test Case:  99 | Input/Output: [[43.967158171288446 24] 67.96715817128845]
Test Case: 100 | Input/Output: [[-89.86795121209815 93] 3.1320487879018515]
Test Case: 101 | Input/Output: [[-44.89533983614136 97] 52.10466016385864]
Test Case: 102 | Input/Output: [[-91.35545567901289 13] -78.35545567901289]
Test Case: 103 | Input/Output: [[-42.14880656563906 -39] -81.14880656563906]
Test Case: 104 | Input/Output: [[26.647958474264527 28] 54.64795847426453]
Test Case: 105 | Input/Output: [[84.28839082046952 -27] 57.288390820469516]
Test Case: 106 | Input/Output: [[-89.49877301303499 -46] -135.498773013035]
Test Case: 107 | Input/Output: [[-39.05604047560587 98] 58.94395952439413]
Test Case: 108 | Input/Output: [[6.143465391680735 84] 90.14346539168073]
Test Case: 109 | Input/Output: [[-86.88299031330666 87] 0.11700968669333633]
Test Case: 110 | Input/Output: [[80.08338710408495 20] 100.08338710408495]
Test Case: 111 | Input/Output: [[-60.38229859399704 43] -17.382298593997042]
Test Case: 112 | Input/Output: [[8.689380002814246 -87] -78.31061999718575]
Test Case: 113 | Input/Output: [[-49.044439118015774 20] -29.044439118015774]
Test Case: 114 | Input/Output: [[0.5595432969594611 -55] -54.44045670304054]
Test Case: 115 | Input/Output: [[-2.88820042117149 35] 32.11179957882851]
Test Case: 116 | Input/Output: [[-79.62863305741546 -1] -80.62863305741546]
Test Case: 117 | Input/Output: [[91.35168530429908 82] 173.35168530429908]
Test Case: 118 | Input/Output: [[53.27748085607604 -33] 20.27748085607604]
Test Case: 119 | Input/Output: [[-98.11537423616483 68] -30.115374236164826]
Test Case: 120 | Input/Output: [[-54.404484474615124 38] -16.404484474615124]
Test Case: 121 | Input/Output: [[-37.91918534270309 30] -7.919185342703088]
Test Case: 122 | Input/Output: [[-83.90642873373422 -3] -86.90642873373422]
Test Case: 123 | Input/Output: [[-45.64053770881522 -68] -113.64053770881523]
Test Case: 124 | Input/Output: [[13.916288851744383 -11] 2.9162888517443832]
Test Case: 125 | Input/Output: [[91.23702521763988 9] 100.23702521763988]
Test Case: 126 | Input/Output: [[-19.90221781022099 40] 20.09778218977901]
Test Case: 127 | Input/Output: [[71.87174759900478 -33] 38.87174759900478]
Test Case: 128 | Input/Output: [[-7.420954638111766 -42] -49.420954638111766]
Test Case: 129 | Input/Output: [[89.45991564429184 -92] -2.54008435570816]
Test Case: 130 | Input/Output: [[-15.520363133650903 -57] -72.5203631336509]
Test Case: 131 | Input/Output: [[-80.13533301685726 8] -72.13533301685726]
Test Case: 132 | Input/Output: [[22.694215179964772 11] 33.69421517996477]
Test Case: 133 | Input/Output: [[88.76055212439877 -78] 10.760552124398771]
Test Case: 134 | Input/Output: [[-36.48179414023638 72] 35.51820585976362]
Test Case: 135 | Input/Output: [[62.45633087780277 -79] -16.54366912219723]
Test Case: 136 | Input/Output: [[-89.35170409633308 -77] -166.3517040963331]
Test Case: 137 | Input/Output: [[-48.01066341214151 -10] -58.01066341214151]
Test Case: 138 | Input/Output: [[-50.63525889911207 94] 43.36474110088793]
Test Case: 139 | Input/Output: [[43.471996555352064 -20] 23.471996555352064]
Test Case: 140 | Input/Output: [[88.02899787895754 -98] -9.97100212104246]
Test Case: 141 | Input/Output: [[-6.82157039292224 -25] -31.82157039292224]
Test Case: 142 | Input/Output: [[-33.71051753004208 -52] -85.71051753004208]
Test Case: 143 | Input/Output: [[-97.6055319832648 -16] -113.6055319832648]
Test Case: 144 | Input/Output: [[-11.797820757623484 -45] -56.797820757623484]
Test Case: 145 | Input/Output: [[-94.53137018262517 92] -2.5313701826251673]
Test Case: 146 | Input/Output: [[-8.82362126963885 -75] -83.82362126963885]
Test Case: 147 | Input/Output: [[-4.769050210061664 -59] -63.769050210061664]
Test Case: 148 | Input/Output: [[-92.91296496657206 71] -21.912964966572062]
Test Case: 149 | Input/Output: [[7.862963284468933 -74] -66.13703671553107]
Test Case: 150 | Input/Output: [[18.77900548945395 88] 106.77900548945395]
Test Case: 151 | Input/Output: [[-67.11530874338176 28] -39.11530874338176]
Test Case: 152 | Input/Output: [[19.57371000921306 23] 42.57371000921306]
Test Case: 153 | Input/Output: [[-36.7941017925572 -6] -42.7941017925572]
Test Case: 154 | Input/Output: [[9.385222343881438 -12] -2.6147776561185623]
Test Case: 155 | Input/Output: [[89.65957971751129 25] 114.65957971751129]
Test Case: 156 | Input/Output: [[40.07221808211 -41] -0.9277819178900018]
Test Case: 157 | Input/Output: [[3.1164853606479 73] 76.1164853606479]
Test Case: 158 | Input/Output: [[-50.651807548127145 -24] -74.65180754812715]
Test Case: 159 | Input/Output: [[-86.47211736320295 24] -62.472117363202955]
Test Case: 160 | Input/Output: [[70.26177665327407 -86] -15.738223346725931]
Test Case: 161 | Input/Output: [[42.13129334554253 -72] -29.86870665445747]
Test Case: 162 | Input/Output: [[-99.31012748596547 48] -51.31012748596547]
Test Case: 163 | Input/Output: [[-10.453625477210096 3] -7.453625477210096]
Test Case: 164 | Input/Output: [[87.23559512981006 -32] 55.235595129810065]
Test Case: 165 | Input/Output: [[50.13345062723971 41] 91.13345062723971]
Test Case: 166 | Input/Output: [[-71.88055607693073 78] 6.119443923069269]
Test Case: 167 | Input/Output: [[-70.44983804696105 44] -26.449838046961048]
Test Case: 168 | Input/Output: [[-83.78150866696595 -46] -129.78150866696595]
Test Case: 169 | Input/Output: [[60.84236149982493 -17] 43.84236149982493]
Test Case: 170 | Input/Output: [[46.85408571280871 55] 101.85408571280871]
Test Case: 171 | Input/Output: [[96.57427097666476 21] 117.57427097666476]
Test Case: 172 | Input/Output: [[59.664879509507415 97] 156.66487950950741]
Test Case: 173 | Input/Output: [[-90.23438019090344 27] -63.23438019090344]
Test Case: 174 | Input/Output: [[31.033270294469872 -22] 9.033270294469872]
Test Case: 175 | Input/Output: [[3.852615912981932 -42] -38.14738408701807]
Test Case: 176 | Input/Output: [[-51.00613184542411 -85] -136.0061318454241]
Test Case: 177 | Input/Output: [[-1.7856619302864658 -29] -30.785661930286466]
Test Case: 178 | Input/Output: [[38.39230923420348 -58] -19.60769076579652]
Test Case: 179 | Input/Output: [[71.08467200115592 -30] 41.08467200115592]
Test Case: 180 | Input/Output: [[-75.33812475155017 23] -52.33812475155017]
Test Case: 181 | Input/Output: [[-27.283051850105267 -4] -31.283051850105267]
Test Case: 182 | Input/Output: [[-29.598999076287825 82] 52.401000923712175]
Test Case: 183 | Input/Output: [[-74.29260999635932 -20] -94.29260999635932]
Test Case: 184 | Input/Output: [[-50.97681810433803 -17] -67.97681810433804]
Test Case: 185 | Input/Output: [[-96.6067188605963 79] -17.606718860596303]
Test Case: 186 | Input/Output: [[2.9475951778356517 -17] -14.052404822164348]
Test Case: 187 | Input/Output: [[-41.891837871687684 -11] -52.891837871687684]
Test Case: 188 | Input/Output: [[-77.5915569022215 31] -46.5915569022215]
Test Case: 189 | Input/Output: [[-44.235298257446566 64] 19.764701742553434]
Test Case: 190 | Input/Output: [[5.294538080962013 -77] -71.70546191903799]
Test Case: 191 | Input/Output: [[-62.634890468575996 59] -3.634890468575996]
Test Case: 192 | Input/Output: [[12.277699444080213 5] 17.277699444080213]
Test Case: 193 | Input/Output: [[-28.382390080278924 -69] -97.38239008027892]
Test Case: 194 | Input/Output: [[-59.86301135482053 -79] -138.86301135482051]
Test Case: 195 | Input/Output: [[-24.377036654868476 65] 40.622963345131524]
Test Case: 196 | Input/Output: [[-18.618505801836022 24] 5.381494198163978]
Test Case: 197 | Input/Output: [[34.568398810327096 94] 128.5683988103271]
Test Case: 198 | Input/Output: [[-37.81313584665726 73] 35.18686415334274]
Test Case: 199 | Input/Output: [[-94.45774342873285 80] -14.457743428732854]
Test Case: 200 | Input/Output: [[-57.222536553661605 29] -28.222536553661605]
Test Case: 201 | Input/Output: [[59.016129844276946 -68] -8.983870155723054]
Test Case: 202 | Input/Output: [[-69.12370107136843 -19] -88.12370107136843]
Test Case: 203 | Input/Output: [[14.75732123147155 34] 48.75732123147155]
Test Case: 204 | Input/Output: [[96.36479529815983 -77] 19.364795298159834]
Test Case: 205 | Input/Output: [[45.246339376387766 78] 123.24633937638777]
Test Case: 206 | Input/Output: [[88.12719868199858 -56] 32.12719868199858]
Test Case: 207 | Input/Output: [[82.66531650292765 -12] 70.66531650292765]
Test Case: 208 | Input/Output: [[2.670247690279865 10] 12.670247690279865]
Test Case: 209 | Input/Output: [[36.095300148088285 -48] -11.904699851911715]
Test Case: 210 | Input/Output: [[44.396438768076024 87] 131.39643876807602]
Test Case: 211 | Input/Output: [[-36.54623075322174 -79] -115.54623075322175]
Test Case: 212 | Input/Output: [[88.93068391202655 -49] 39.93068391202655]
Test Case: 213 | Input/Output: [[29.871311340770035 -12] 17.871311340770035]
Test Case: 214 | Input/Output: [[-47.26912580441911 64] 16.73087419558089]
Test Case: 215 | Input/Output: [[41.24388093841236 84] 125.24388093841236]
Test Case: 216 | Input/Output: [[20.59601872185597 73] 93.59601872185597]
Test Case: 217 | Input/Output: [[-78.14216573796759 56] -22.142165737967588]
Test Case: 218 | Input/Output: [[16.72768984679051 37] 53.72768984679051]
Test Case: 219 | Input/Output: [[14.027176429805493 -17] -2.9728235701945067]
Test Case: 220 | Input/Output: [[-3.42972636713948 -79] -82.42972636713948]
Test Case: 221 | Input/Output: [[-32.4044521810556 57] 24.595547818944397]
Test Case: 222 | Input/Output: [[-42.030738704078765 -26] -68.03073870407877]
Test Case: 223 | Input/Output: [[-61.23487988639884 36] -25.234879886398843]
Test Case: 224 | Input/Output: [[-31.649442799269025 8] -23.649442799269025]
Test Case: 225 | Input/Output: [[55.07241508643418 59] 114.07241508643418]
Test Case: 226 | Input/Output: [[-60.048618696479416 -41] -101.04861869647942]
Test Case: 227 | Input/Output: [[-16.038031605021203 9] -7.038031605021203]
Test Case: 228 | Input/Output: [[-40.781120813474914 -45] -85.78112081347491]
Test Case: 229 | Input/Output: [[42.43348521776221 -86] -43.56651478223779]
Test Case: 230 | Input/Output: [[-46.76889722462485 88] 41.23110277537515]
Test Case: 231 | Input/Output: [[-55.384431415243455 65] 9.615568584756545]
Test Case: 232 | Input/Output: [[-20.555772351238843 -30] -50.55577235123884]
Test Case: 233 | Input/Output: [[-7.0265070719198235 45] 37.97349292808018]
Test Case: 234 | Input/Output: [[-52.3598175634268 -19] -71.3598175634268]
Test Case: 235 | Input/Output: [[-73.69563740629812 91] 17.30436259370188]
Test Case: 236 | Input/Output: [[84.48126201329194 6] 90.48126201329194]
Test Case: 237 | Input/Output: [[77.94299696696893 -31] 46.942996966968934]
Test Case: 238 | Input/Output: [[-78.2611028117798 86] 7.738897188220193]
Test Case: 239 | Input/Output: [[-45.33921814927415 -24] -69.33921814927416]
Test Case: 240 | Input/Output: [[-16.462011087455082 -27] -43.46201108745508]
Test Case: 241 | Input/Output: [[27.364451531151502 -96] -68.6355484688485]
Test Case: 242 | Input/Output: [[16.372951281750233 16] 32.37295128175023]
Test Case: 243 | Input/Output: [[-88.00456908785233 -7] -95.00456908785233]
Test Case: 244 | Input/Output: [[-51.81609655571457 9] -42.81609655571457]
Test Case: 245 | Input/Output: [[93.0870875344585 33] 126.0870875344585]
Test Case: 246 | Input/Output: [[-20.231474745926974 -52] -72.23147474592697]
Test Case: 247 | Input/Output: [[-10.235001444458788 -72] -82.23500144445879]
Test Case: 248 | Input/Output: [[-54.884999133816436 1] -53.884999133816436]
Test Case: 249 | Input/Output: [[17.095957692942278 -91] -73.90404230705772]
Test Case: 250 | Input/Output: [[0.9145043734740739 74] 74.91450437347407]
Test Case: 251 | Input/Output: [[-28.764828957229184 13] -15.764828957229184]
Test Case: 252 | Input/Output: [[40.06299557907306 -78] -37.93700442092694]
Test Case: 253 | Input/Output: [[44.074948856814586 32] 76.07494885681459]
Test Case: 254 | Input/Output: [[33.597166527315096 38] 71.5971665273151]
Test Case: 255 | Input/Output: [[64.29123527522563 -96] -31.70876472477437]
Test Case: 256 | Input/Output: [[-69.94949419327708 -42] -111.94949419327708]
Test Case: 257 | Input/Output: [[-69.44388756457742 -18] -87.44388756457742]
Test Case: 258 | Input/Output: [[-51.390266772612556 -92] -143.39026677261256]
Test Case: 259 | Input/Output: [[-53.27947322486703 20] -33.27947322486703]
Test Case: 260 | Input/Output: [[83.07952378148158 -87] -3.9204762185184165]
Test Case: 261 | Input/Output: [[-75.19856022450469 -57] -132.1985602245047]
Test Case: 262 | Input/Output: [[-20.29872696145374 -74] -94.29872696145374]
Test Case: 263 | Input/Output: [[-70.6955929643716 3] -67.6955929643716]
Test Case: 264 | Input/Output: [[32.175861206951254 17] 49.175861206951254]
Test Case: 265 | Input/Output: [[91.65915788661582 99] 190.65915788661582]
Test Case: 266 | Input/Output: [[15.83249010438547 63] 78.83249010438547]
Test Case: 267 | Input/Output: [[99.59715320482124 -82] 17.59715320482124]
Test Case: 268 | Input/Output: [[-19.105468063748773 -42] -61.10546806374877]
Test Case: 269 | Input/Output: [[-3.0048792415782373 -97] -100.00487924157824]
Test Case: 270 | Input/Output: [[-79.67916749239589 57] -22.67916749239589]
Test Case: 271 | Input/Output: [[27.248229687449268 -57] -29.751770312550732]
Test Case: 272 | Input/Output: [[3.195998929208855 -75] -71.80400107079114]
Test Case: 273 | Input/Output: [[-98.85238636527325 -26] -124.85238636527325]
Test Case: 274 | Input/Output: [[99.957709072983 53] 152.957709072983]
Test Case: 275 | Input/Output: [[35.379701827208066 6] 41.379701827208066]
Test Case: 276 | Input/Output: [[91.44235772984277 -69] 22.44235772984277]
Test Case: 277 | Input/Output: [[-60.42293639426257 -66] -126.42293639426256]
Test Case: 278 | Input/Output: [[-34.31344806579753 21] -13.31344806579753]
Test Case: 279 | Input/Output: [[-20.557555259658344 69] 48.44244474034166]
Test Case: 280 | Input/Output: [[-61.65819733058473 6] -55.65819733058473]
Test Case: 281 | Input/Output: [[79.28322767811471 -33] 46.28322767811471]
Test Case: 282 | Input/Output: [[54.0332961489716 90] 144.0332961489716]
Test Case: 283 | Input/Output: [[-55.822331889033094 99] 43.177668110966906]
Test Case: 284 | Input/Output: [[-67.81124027696208 39] -28.81124027696208]
Test Case: 285 | Input/Output: [[32.96395107941211 68] 100.96395107941211]
Test Case: 286 | Input/Output: [[75.69020325264032 -45] 30.690203252640316]
Test Case: 287 | Input/Output: [[-80.08700489255934 -58] -138.08700489255932]
Test Case: 288 | Input/Output: [[-74.5704038440311 -75] -149.5704038440311]
Test Case: 289 | Input/Output: [[11.834519299162395 14] 25.834519299162395]
Test Case: 290 | Input/Output: [[18.829711905975472 -93] -74.17028809402453]
Test Case: 291 | Input/Output: [[36.40158830029671 -21] 15.401588300296709]
Test Case: 292 | Input/Output: [[-90.2109065617214 -27] -117.2109065617214]
Test Case: 293 | Input/Output: [[-22.51170544380132 -13] -35.51170544380132]
Test Case: 294 | Input/Output: [[44.57475797607432 68] 112.57475797607432]
Test Case: 295 | Input/Output: [[8.955155685832182 18] 26.95515568583218]
Test Case: 296 | Input/Output: [[-56.19417731301808 -13] -69.19417731301809]
Test Case: 297 | Input/Output: [[-99.3139445927709 -23] -122.3139445927709]
Test Case: 298 | Input/Output: [[-64.9397796859709 99] 34.060220314029095]
Test Case: 299 | Input/Output: [[99.41013371781617 -83] 16.410133717816166]
Test Case: 300 | Input/Output: [[83.69213074905878 71] 154.69213074905878]
Test Case: 301 | Input/Output: [[-11.13072378737165 6] -5.13072378737165]
Test Case: 302 | Input/Output: [[82.38390207561628 22] 104.38390207561628]
Test Case: 303 | Input/Output: [[93.52584709542694 -11] 82.52584709542694]
Test Case: 304 | Input/Output: [[95.9859969581511 -82] 13.985996958151105]
Test Case: 305 | Input/Output: [[13.864336449806984 82] 95.86433644980698]
Test Case: 306 | Input/Output: [[67.45207571483053 -83] -15.547924285169472]
Test Case: 307 | Input/Output: [[66.18488222012462 33] 99.18488222012462]
Test Case: 308 | Input/Output: [[80.24924330814184 -49] 31.249243308141843]
Test Case: 309 | Input/Output: [[-91.1754002931942 -100] -191.1754002931942]
Test Case: 310 | Input/Output: [[-19.741893788587532 -41] -60.74189378858753]
Test Case: 311 | Input/Output: [[30.72080238909109 69] 99.72080238909109]
Test Case: 312 | Input/Output: [[-9.504623381375211 -41] -50.50462338137521]
Test Case: 313 | Input/Output: [[27.56447587813524 -88] -60.43552412186476]
Test Case: 314 | Input/Output: [[-12.204581199312074 74] 61.795418800687926]
Test Case: 315 | Input/Output: [[-18.99814301559242 26] 7.001856984407581]
Test Case: 316 | Input/Output: [[19.82488772441458 27] 46.82488772441458]
Test Case: 317 | Input/Output: [[-8.274098097345828 -16] -24.274098097345828]
Test Case: 318 | Input/Output: [[87.58499716956607 15] 102.58499716956607]
Test Case: 319 | Input/Output: [[37.69504997854605 -98] -60.30495002145395]
Test Case: 320 | Input/Output: [[-1.7871790435481216 -100] -101.78717904354812]
Test Case: 321 | Input/Output: [[-6.293610283161314 15] 8.706389716838686]
Test Case: 322 | Input/Output: [[-26.23919752128687 -49] -75.23919752128687]
Test Case: 323 | Input/Output: [[80.08588838522849 -24] 56.085888385228486]
Test Case: 324 | Input/Output: [[51.57811721781712 -60] -8.421882782182877]
Test Case: 325 | Input/Output: [[78.98474852472643 -41] 37.98474852472643]
Test Case: 326 | Input/Output: [[-55.07307098899761 35] -20.073070988997607]
Test Case: 327 | Input/Output: [[-96.06787510024208 -24] -120.06787510024208]
Test Case: 328 | Input/Output: [[-31.6167737287943 13] -18.6167737287943]
Test Case: 329 | Input/Output: [[1.8104597180341244 69] 70.81045971803412]
Test Case: 330 | Input/Output: [[11.519548746387926 13] 24.519548746387926]
Test Case: 331 | Input/Output: [[66.49659555462827 -90] -23.50340444537173]
Test Case: 332 | Input/Output: [[-82.21874826023594 -16] -98.21874826023594]
Test Case: 333 | Input/Output: [[0.4794602774337733 -89] -88.52053972256623]
Test Case: 334 | Input/Output: [[-12.373083974457614 10] -2.3730839744576144]
Test Case: 335 | Input/Output: [[-14.227954303738372 78] 63.77204569626163]
Test Case: 336 | Input/Output: [[92.4773056491801 -72] 20.477305649180096]
Test Case: 337 | Input/Output: [[-33.481766062755185 -66] -99.48176606275518]
Test Case: 338 | Input/Output: [[-15.960352410227813 77] 61.03964758977219]
Test Case: 339 | Input/Output: [[-0.9921321228157751 89] 88.00786787718422]
Test Case: 340 | Input/Output: [[-78.45403182679836 -96] -174.45403182679837]
Test Case: 341 | Input/Output: [[14.615088166959382 49] 63.61508816695938]
Test Case: 342 | Input/Output: [[-86.44565554922974 -65] -151.44565554922974]
Test Case: 343 | Input/Output: [[50.64945554105657 26] 76.64945554105657]
Test Case: 344 | Input/Output: [[-67.51604546238747 56] -11.516045462387467]
Test Case: 345 | Input/Output: [[-60.32069906252582 36] -24.32069906252582]
Test Case: 346 | Input/Output: [[41.17984237036822 51] 92.17984237036822]
Test Case: 347 | Input/Output: [[96.57858142580068 46] 142.57858142580068]
Test Case: 348 | Input/Output: [[-46.70083826952427 -88] -134.70083826952427]
Test Case: 349 | Input/Output: [[-19.16184009319693 -46] -65.16184009319693]
Test Case: 350 | Input/Output: [[-28.339811190630428 43] 14.660188809369572]
Test Case: 351 | Input/Output: [[-82.37631852812356 76] -6.376318528123562]
Test Case: 352 | Input/Output: [[8.940179324273373 -3] 5.940179324273373]
Test Case: 353 | Input/Output: [[97.18614166723154 53] 150.18614166723154]
Test Case: 354 | Input/Output: [[53.300002565109 -37] 16.300002565108997]
Test Case: 355 | Input/Output: [[12.057594261052344 -56] -43.942405738947656]
Test Case: 356 | Input/Output: [[-11.744874835204058 25] 13.255125164795942]
Test Case: 357 | Input/Output: [[6.699942220185264 76] 82.69994222018526]
Test Case: 358 | Input/Output: [[-58.45073604680715 -31] -89.45073604680715]
Test Case: 359 | Input/Output: [[-38.59837732368987 -15] -53.59837732368987]
Test Case: 360 | Input/Output: [[61.931772653493056 -40] 21.931772653493056]
Test Case: 361 | Input/Output: [[-40.675038439263986 27] -13.675038439263986]
Test Case: 362 | Input/Output: [[41.141724428623775 80] 121.14172442862377]
Test Case: 363 | Input/Output: [[6.803488115030646 -42] -35.196511884969354]
Test Case: 364 | Input/Output: [[97.0242234291342 -78] 19.024223429134196]
Test Case: 365 | Input/Output: [[-64.44727069648843 -7] -71.44727069648843]
Test Case: 366 | Input/Output: [[-97.37645794172707 -54] -151.37645794172707]
Test Case: 367 | Input/Output: [[-84.55554993019992 86] 1.4444500698000837]
Test Case: 368 | Input/Output: [[-71.35155404298229 -97] -168.3515540429823]
Test Case: 369 | Input/Output: [[-38.6252175481401 -21] -59.6252175481401]
Test Case: 370 | Input/Output: [[-6.984126789069194 -54] -60.984126789069194]
Test Case: 371 | Input/Output: [[53.85764083741827 -62] -8.142359162581727]
Test Case: 372 | Input/Output: [[23.893721159383247 -1] 22.893721159383247]
Test Case: 373 | Input/Output: [[-61.318545084759734 30] -31.318545084759734]
Test Case: 374 | Input/Output: [[75.20910243280932 -1] 74.20910243280932]
Test Case: 375 | Input/Output: [[-68.6354907705583 -76] -144.6354907705583]
Test Case: 376 | Input/Output: [[23.186915136426563 7] 30.186915136426563]
Test Case: 377 | Input/Output: [[77.30508930087768 -83] -5.6949106991223175]
Test Case: 378 | Input/Output: [[87.24050473014543 88] 175.24050473014543]
Test Case: 379 | Input/Output: [[-34.74685579531163 -47] -81.74685579531163]
Test Case: 380 | Input/Output: [[25.712609808177064 -19] 6.7126098081770635]
Test Case: 381 | Input/Output: [[60.99623811604721 46] 106.99623811604721]
Test Case: 382 | Input/Output: [[-87.53022171565546 66] -21.530221715655458]
Test Case: 383 | Input/Output: [[-76.95463919234349 14] -62.95463919234349]
Test Case: 384 | Input/Output: [[11.016652034509306 82] 93.0166520345093]
Test Case: 385 | Input/Output: [[96.36391331581413 -80] 16.36391331581413]
Test Case: 386 | Input/Output: [[-99.65091729666196 -80] -179.65091729666196]
Test Case: 387 | Input/Output: [[-12.882248241351675 -9] -21.882248241351675]
Test Case: 388 | Input/Output: [[2.8338194205555993 -11] -8.1661805794444]
Test Case: 389 | Input/Output: [[54.080562003987126 77] 131.08056200398713]
Test Case: 390 | Input/Output: [[-82.42224977349267 21] -61.422249773492666]
Test Case: 391 | Input/Output: [[59.24606563724535 -4] 55.24606563724535]
Test Case: 392 | Input/Output: [[-71.1478402781255 -40] -111.1478402781255]
Test Case: 393 | Input/Output: [[-98.44610309181765 -38] -136.44610309181763]
Test Case: 394 | Input/Output: [[-39.76258261414765 -31] -70.76258261414765]
Test Case: 395 | Input/Output: [[-80.5117725060303 97] 16.488227493969703]
Test Case: 396 | Input/Output: [[3.343784535061147 73] 76.34378453506115]
Test Case: 397 | Input/Output: [[72.70776346050772 -95] -22.29223653949228]
Test Case: 398 | Input/Output: [[20.70532329050235 93] 113.70532329050235]
Test Case: 399 | Input/Output: [[38.04702876792339 81] 119.0470287679234]
Test Case: 400 | Input/Output: [[-32.279119535059635 23] -9.279119535059635]
Test Case: 401 | Input/Output: [[-20.57364424416528 89] 68.42635575583472]
Test Case: 402 | Input/Output: [[10.621920911665256 5] 15.621920911665256]
Test Case: 403 | Input/Output: [[-34.89179406038363 27] -7.891794060383631]
Test Case: 404 | Input/Output: [[-80.11379853271129 -18] -98.11379853271129]
Test Case: 405 | Input/Output: [[58.359623508658586 -17] 41.359623508658586]
Test Case: 406 | Input/Output: [[-58.27501742570891 -87] -145.2750174257089]
Test Case: 407 | Input/Output: [[54.27779522233661 45] 99.27779522233661]
Test Case: 408 | Input/Output: [[-95.47335512370105 61] -34.473355123701054]
Test Case: 409 | Input/Output: [[-91.90974881388674 98] 6.090251186113264]
Test Case: 410 | Input/Output: [[21.024378347628982 -94] -72.97562165237102]
Test Case: 411 | Input/Output: [[-18.781105759292146 10] -8.781105759292146]
Test Case: 412 | Input/Output: [[49.61468251911242 -47] 2.6146825191124208]
Test Case: 413 | Input/Output: [[-28.612948776127524 -97] -125.61294877612752]
Test Case: 414 | Input/Output: [[51.896263932468656 45] 96.89626393246866]
Test Case: 415 | Input/Output: [[9.684479173492207 -98] -88.3155208265078]
Test Case: 416 | Input/Output: [[-85.22170122328978 42] -43.221701223289784]
Test Case: 417 | Input/Output: [[-5.985761649372151 -20] -25.98576164937215]
Test Case: 418 | Input/Output: [[63.92256967013569 17] 80.92256967013569]
Test Case: 419 | Input/Output: [[-1.6978902791118884 -91] -92.69789027911189]
Test Case: 420 | Input/Output: [[-70.47206670551574 40] -30.472066705515743]
Test Case: 421 | Input/Output: [[15.837097750158406 -3] 12.837097750158406]
Test Case: 422 | Input/Output: [[74.15714466820356 -98] -23.842855331796443]
Test Case: 423 | Input/Output: [[-2.0994506826659887 10] 7.900549317334011]
Test Case: 424 | Input/Output: [[74.0146053972968 -12] 62.014605397296805]
Test Case: 425 | Input/Output: [[-16.38351178392395 -38] -54.38351178392395]
Test Case: 426 | Input/Output: [[-68.83724799030367 -12] -80.83724799030367]
Test Case: 427 | Input/Output: [[-62.38755154176725 45] -17.38755154176725]
Test Case: 428 | Input/Output: [[83.55834933138752 71] 154.55834933138752]
Test Case: 429 | Input/Output: [[55.948402815573786 -52] 3.948402815573786]
Test Case: 430 | Input/Output: [[37.15846412446464 -26] 11.158464124464643]
Test Case: 431 | Input/Output: [[-1.3216878867644084 -86] -87.32168788676441]
Test Case: 432 | Input/Output: [[57.06646948214163 -67] -9.933530517858372]
Test Case: 433 | Input/Output: [[78.7139804155934 91] 169.7139804155934]
Test Case: 434 | Input/Output: [[31.992444118521718 -5] 26.992444118521718]
Test Case: 435 | Input/Output: [[-5.651604643531712 92] 86.34839535646829]
Test Case: 436 | Input/Output: [[94.26564412019246 -82] 12.265644120192462]
Test Case: 437 | Input/Output: [[-25.468155778661355 -29] -54.468155778661355]
Test Case: 438 | Input/Output: [[31.85163400133598 -16] 15.85163400133598]
Test Case: 439 | Input/Output: [[12.137951972715186 8] 20.137951972715186]
Test Case: 440 | Input/Output: [[71.32110260383979 73] 144.3211026038398]
Test Case: 441 | Input/Output: [[70.92493752172021 -23] 47.92493752172021]
Test Case: 442 | Input/Output: [[84.06314361080291 -55] 29.06314361080291]
Test Case: 443 | Input/Output: [[73.94170176748611 -17] 56.94170176748611]
Test Case: 444 | Input/Output: [[29.912838748355796 79] 108.9128387483558]
Test Case: 445 | Input/Output: [[82.0951629706976 -87] -4.904837029302399]
Test Case: 446 | Input/Output: [[75.41518482863324 -29] 46.415184828633244]
Test Case: 447 | Input/Output: [[86.73622961950565 -76] 10.73622961950565]
Test Case: 448 | Input/Output: [[34.977813170446694 34] 68.9778131704467]
Test Case: 449 | Input/Output: [[-0.9347319114061179 79] 78.06526808859388]
Test Case: 450 | Input/Output: [[-57.70483933105868 -66] -123.70483933105868]
Test Case: 451 | Input/Output: [[60.70275757057615 -63] -2.2972424294238465]
Test Case: 452 | Input/Output: [[-15.537144229456331 -49] -64.53714422945633]
Test Case: 453 | Input/Output: [[-4.530947893046061 51] 46.46905210695394]
Test Case: 454 | Input/Output: [[-12.709610746143696 -83] -95.7096107461437]
Test Case: 455 | Input/Output: [[8.817937474122274 -2] 6.8179374741222745]
Test Case: 456 | Input/Output: [[61.66939682204503 9] 70.66939682204503]
Test Case: 457 | Input/Output: [[7.569486762699356 -68] -60.430513237300644]
Test Case: 458 | Input/Output: [[26.27609818183329 -78] -51.72390181816671]
Test Case: 459 | Input/Output: [[-57.611520670454894 -15] -72.6115206704549]
Test Case: 460 | Input/Output: [[-87.87392041084159 92] 4.126079589158408]
Test Case: 461 | Input/Output: [[81.98528290175184 -37] 44.985282901751845]
Test Case: 462 | Input/Output: [[-37.02776332954001 -46] -83.02776332954001]
Test Case: 463 | Input/Output: [[0.35878262548543205 20] 20.358782625485432]
Test Case: 464 | Input/Output: [[-32.0810350708751 -81] -113.0810350708751]
Test Case: 465 | Input/Output: [[91.84362220140824 -1] 90.84362220140824]
Test Case: 466 | Input/Output: [[-4.803793854381539 -38] -42.80379385438154]
Test Case: 467 | Input/Output: [[-91.66077396162054 86] -5.660773961620535]
Test Case: 468 | Input/Output: [[55.30263951635652 3] 58.30263951635652]
Test Case: 469 | Input/Output: [[52.137636870129086 70] 122.13763687012909]
Test Case: 470 | Input/Output: [[14.580758257094345 -86] -71.41924174290565]
Test Case: 471 | Input/Output: [[31.496686470335902 -98] -66.5033135296641]
Test Case: 472 | Input/Output: [[38.308907629164224 -14] 24.308907629164224]
Test Case: 473 | Input/Output: [[-15.45334808456667 -69] -84.45334808456667]
Test Case: 474 | Input/Output: [[45.82592097918814 46] 91.82592097918814]
Test Case: 475 | Input/Output: [[-93.89140483495027 81] -12.891404834950265]
Test Case: 476 | Input/Output: [[-8.170027246141402 12] 3.8299727538585984]
Test Case: 477 | Input/Output: [[-31.6922975028846 -57] -88.6922975028846]
Test Case: 478 | Input/Output: [[-67.84558746892702 5] -62.84558746892702]
Test Case: 479 | Input/Output: [[-89.11982061643458 -84] -173.1198206164346]
Test Case: 480 | Input/Output: [[76.53957816097963 32] 108.53957816097963]
Test Case: 481 | Input/Output: [[11.77490946696804 -94] -82.22509053303196]
Test Case: 482 | Input/Output: [[-64.04761133597381 -37] -101.04761133597381]
Test Case: 483 | Input/Output: [[75.20118257181883 -75] 0.20118257181883337]
Test Case: 484 | Input/Output: [[56.64334087757996 -29] 27.64334087757996]
Test Case: 485 | Input/Output: [[-84.64468440029086 -31] -115.64468440029086]
Test Case: 486 | Input/Output: [[26.264277461876247 29] 55.26427746187625]
Test Case: 487 | Input/Output: [[29.50672804332956 73] 102.50672804332956]
Test Case: 488 | Input/Output: [[40.41906534070725 71] 111.41906534070725]
Test Case: 489 | Input/Output: [[70.16911673414995 89] 159.16911673414995]
Test Case: 490 | Input/Output: [[25.137324862546123 -65] -39.86267513745388]
Test Case: 491 | Input/Output: [[35.373773912680036 -49] -13.626226087319964]
Test Case: 492 | Input/Output: [[-36.07220073673905 16] -20.07220073673905]
Test Case: 493 | Input/Output: [[-65.73401517760226 38] -27.73401517760226]
Test Case: 494 | Input/Output: [[-97.08388415094065 13] -84.08388415094065]
Test Case: 495 | Input/Output: [[-14.558630406370042 -55] -69.55863040637004]
Test Case: 496 | Input/Output: [[-87.38900795875189 -63] -150.3890079587519]
Test Case: 497 | Input/Output: [[10.803486363959067 -30] -19.196513636040933]
Test Case: 498 | Input/Output: [[-0.823694875726261 97] 96.17630512427374]
Test Case: 499 | Input/Output: [[-33.116759023217114 55] 21.883240976782886]
Test Case: 500 | Input/Output: [[60.858029879415 13] 73.858029879415]
Test Case: 501 | Input/Output: [[89.28024324663792 -86] 3.280243246637923]
Test Case: 502 | Input/Output: [[27.51979805585711 -13] 14.519798055857109]
Test Case: 503 | Input/Output: [[-60.32081403842569 -65] -125.32081403842568]
Test Case: 504 | Input/Output: [[-67.23976310960822 82] 14.76023689039178]
Test Case: 505 | Input/Output: [[37.556638637747795 64] 101.5566386377478]
Test Case: 506 | Input/Output: [[99.03390034949248 -56] 43.033900349492484]
Test Case: 507 | Input/Output: [[41.891540136999794 -44] -2.1084598630002063]
Test Case: 508 | Input/Output: [[-91.61254473977156 73] -18.612544739771565]
Test Case: 509 | Input/Output: [[26.17963830933516 48] 74.17963830933516]
Test Case: 510 | Input/Output: [[32.76313760629711 -17] 15.763137606297107]
Test Case: 511 | Input/Output: [[17.70009231340464 74] 91.70009231340464]
Test Case: 512 | Input/Output: [[-69.52435136441468 98] 28.475648635585316]
Test Case: 513 | Input/Output: [[68.03796713583529 45] 113.03796713583529]
Test Case: 514 | Input/Output: [[33.808466078805424 -58] -24.191533921194576]
Test Case: 515 | Input/Output: [[-24.836016975612978 -69] -93.83601697561298]
Test Case: 516 | Input/Output: [[49.291932656411376 -7] 42.291932656411376]
Test Case: 517 | Input/Output: [[44.076664527837636 6] 50.076664527837636]
Test Case: 518 | Input/Output: [[55.09587637769749 -86] -30.904123622302507]
Test Case: 519 | Input/Output: [[-68.63671069151175 67] -1.6367106915117517]
Test Case: 520 | Input/Output: [[65.83778179590908 -3] 62.83778179590908]
Test Case: 521 | Input/Output: [[-76.23903196218632 36] -40.23903196218632]
Test Case: 522 | Input/Output: [[-10.955808083392654 -81] -91.95580808339265]
Test Case: 523 | Input/Output: [[-23.036883668762172 65] 41.96311633123783]
Test Case: 524 | Input/Output: [[-15.407453103168535 -72] -87.40745310316854]
Test Case: 525 | Input/Output: [[-72.24051223817006 20] -52.240512238170055]
Test Case: 526 | Input/Output: [[49.80723545659362 26] 75.80723545659362]
Test Case: 527 | Input/Output: [[-35.10697428674669 -43] -78.10697428674669]
Test Case: 528 | Input/Output: [[71.39175924582645 64] 135.39175924582645]
Test Case: 529 | Input/Output: [[-60.81665300604675 -22] -82.81665300604675]
Test Case: 530 | Input/Output: [[-46.030951661014626 -59] -105.03095166101463]
Test Case: 531 | Input/Output: [[-58.26799581842377 16] -42.26799581842377]
Test Case: 532 | Input/Output: [[76.99473783536504 -97] -20.005262164634956]
Test Case: 533 | Input/Output: [[-10.137329140559004 -37] -47.137329140559004]
Test Case: 534 | Input/Output: [[-93.15722939069913 -42] -135.15722939069911]
Test Case: 535 | Input/Output: [[-0.5675331494599902 -47] -47.56753314945999]
Test Case: 536 | Input/Output: [[-15.621724098498817 -25] -40.62172409849882]
Test Case: 537 | Input/Output: [[-10.936053850977757 -47] -57.93605385097776]
Test Case: 538 | Input/Output: [[3.1950189717026234 -42] -38.80498102829738]
Test Case: 539 | Input/Output: [[56.198197767204505 -42] 14.198197767204505]
Test Case: 540 | Input/Output: [[-70.19088827118696 83] 12.809111728813036]
Test Case: 541 | Input/Output: [[61.12538816327452 -37] 24.125388163274522]
Test Case: 542 | Input/Output: [[-96.76067960120942 -27] -123.76067960120942]
Test Case: 543 | Input/Output: [[-11.650009894219224 72] 60.349990105780776]
Test Case: 544 | Input/Output: [[46.533921396582315 -58] -11.466078603417685]
Test Case: 545 | Input/Output: [[-33.99296359307979 79] 45.00703640692021]
Test Case: 546 | Input/Output: [[36.99634109148647 18] 54.99634109148647]
Test Case: 547 | Input/Output: [[11.0702823954759 3] 14.0702823954759]
Test Case: 548 | Input/Output: [[66.65360475500898 91] 157.65360475500898]
Test Case: 549 | Input/Output: [[6.182850107174602 -19] -12.817149892825398]
Test Case: 550 | Input/Output: [[70.45470584298548 79] 149.45470584298548]
Test Case: 551 | Input/Output: [[-52.852379630882496 -90] -142.8523796308825]
Test Case: 552 | Input/Output: [[-59.41511175357193 8] -51.41511175357193]
Test Case: 553 | Input/Output: [[30.792095185549385 52] 82.79209518554939]
Test Case: 554 | Input/Output: [[-41.09927760970884 13] -28.099277609708842]
Test Case: 555 | Input/Output: [[33.63586307856258 61] 94.63586307856258]
Test Case: 556 | Input/Output: [[-34.52812424670657 -86] -120.52812424670657]
Test Case: 557 | Input/Output: [[71.93789205778285 24] 95.93789205778285]
Test Case: 558 | Input/Output: [[-9.701478700797935 19] 9.298521299202065]
Test Case: 559 | Input/Output: [[39.61991468510723 -61] -21.380085314892767]
Test Case: 560 | Input/Output: [[-55.74555397478929 83] 27.25444602521071]
Test Case: 561 | Input/Output: [[4.681759701903744 89] 93.68175970190374]
Test Case: 562 | Input/Output: [[-41.70196751411408 -1] -42.70196751411408]
Test Case: 563 | Input/Output: [[-5.548450640963679 15] 9.45154935903632]
Test Case: 564 | Input/Output: [[77.68527136110222 71] 148.68527136110222]
Test Case: 565 | Input/Output: [[-48.543153640485315 61] 12.456846359514685]
Test Case: 566 | Input/Output: [[-41.188009831718176 58] 16.811990168281824]
Test Case: 567 | Input/Output: [[23.02998821386612 -98] -74.97001178613388]
Test Case: 568 | Input/Output: [[-81.96498943018373 -78] -159.96498943018372]
Test Case: 569 | Input/Output: [[-84.71844049198268 11] -73.71844049198268]
Test Case: 570 | Input/Output: [[-86.99907687379289 -78] -164.9990768737929]
Test Case: 571 | Input/Output: [[-61.68035507449326 90] 28.319644925506744]
Test Case: 572 | Input/Output: [[97.29421957453266 -66] 31.29421957453266]
Test Case: 573 | Input/Output: [[-18.995912971573347 2] -16.995912971573347]
Test Case: 574 | Input/Output: [[-96.3966833018554 52] -44.396683301855404]
Test Case: 575 | Input/Output: [[-39.75768641184134 -6] -45.75768641184134]
Test Case: 576 | Input/Output: [[34.885108643357825 64] 98.88510864335782]
Test Case: 577 | Input/Output: [[62.21992511622804 -3] 59.21992511622804]
Test Case: 578 | Input/Output: [[70.52535757052155 -12] 58.52535757052155]
Test Case: 579 | Input/Output: [[83.64842729602634 -87] -3.351572703973659]
Test Case: 580 | Input/Output: [[51.808025432231204 69] 120.8080254322312]
Test Case: 581 | Input/Output: [[-43.48725948688119 73] 29.512740513118807]
Test Case: 582 | Input/Output: [[-48.08714908397944 11] -37.08714908397944]
Test Case: 583 | Input/Output: [[53.60216079608776 93] 146.60216079608776]
Test Case: 584 | Input/Output: [[74.56541650752862 -44] 30.565416507528624]
Test Case: 585 | Input/Output: [[-0.3148945801809475 -1] -1.3148945801809475]
Test Case: 586 | Input/Output: [[-18.376600587157327 -21] -39.37660058715733]
Test Case: 587 | Input/Output: [[65.93548533534556 -84] -18.06451466465444]
Test Case: 588 | Input/Output: [[11.727176367137162 -33] -21.27282363286284]
Test Case: 589 | Input/Output: [[-6.229739891060987 -15] -21.229739891060987]
Test Case: 590 | Input/Output: [[84.56879245777736 16] 100.56879245777736]
Test Case: 591 | Input/Output: [[-29.116309844850335 -27] -56.116309844850335]
Test Case: 592 | Input/Output: [[-91.39220437260447 32] -59.39220437260447]
Test Case: 593 | Input/Output: [[57.029829571376354 90] 147.02982957137635]
Test Case: 594 | Input/Output: [[90.05956612928568 -99] -8.940433870714315]
Test Case: 595 | Input/Output: [[80.19961069666454 2] 82.19961069666454]
Test Case: 596 | Input/Output: [[93.77784768027561 59] 152.7778476802756]
Test Case: 597 | Input/Output: [[-73.98475166344775 58] -15.984751663447753]
Test Case: 598 | Input/Output: [[-89.34179196144719 14] -75.34179196144719]
Test Case: 599 | Input/Output: [[7.179216165230073 -13] -5.820783834769927]
Test Case: 600 | Input/Output: [[46.88683154077057 11] 57.88683154077057]
Test Case: 601 | Input/Output: [[76.87836410734587 -73] 3.878364107345874]
Test Case: 602 | Input/Output: [[-1.7358018465091618 -83] -84.73580184650916]
Test Case: 603 | Input/Output: [[4.01061103966714 -65] -60.98938896033286]
Test Case: 604 | Input/Output: [[-68.99665394497083 61] -7.996653944970831]
Test Case: 605 | Input/Output: [[-59.874343127070986 -61] -120.87434312707099]
Test Case: 606 | Input/Output: [[35.96158995591912 -40] -4.038410044080877]
Test Case: 607 | Input/Output: [[62.42787656347605 13] 75.42787656347605]
Test Case: 608 | Input/Output: [[-63.17648851309832 -64] -127.17648851309832]
Test Case: 609 | Input/Output: [[-92.9688230748749 -2] -94.9688230748749]
Test Case: 610 | Input/Output: [[-64.78043112259333 -24] -88.78043112259333]
Test Case: 611 | Input/Output: [[-7.998643359882436 -72] -79.99864335988244]
Test Case: 612 | Input/Output: [[1.1232134081265315 -77] -75.87678659187347]
Test Case: 613 | Input/Output: [[-69.56445775440736 52] -17.564457754407357]
Test Case: 614 | Input/Output: [[89.47960058612162 81] 170.47960058612162]
Test Case: 615 | Input/Output: [[-92.46669712540003 -59] -151.46669712540003]
Test Case: 616 | Input/Output: [[-73.61885726010875 97] 23.381142739891246]
Test Case: 617 | Input/Output: [[-11.405992708025423 -62] -73.40599270802542]
Test Case: 618 | Input/Output: [[64.50431506267878 -96] -31.495684937321215]
Test Case: 619 | Input/Output: [[-99.25226342222903 12] -87.25226342222903]
Test Case: 620 | Input/Output: [[-45.45375655156849 88] 42.54624344843151]
Test Case: 621 | Input/Output: [[70.75635663494438 19] 89.75635663494438]
Test Case: 622 | Input/Output: [[-59.9817606193153 24] -35.9817606193153]
Test Case: 623 | Input/Output: [[-34.367468793115236 81] 46.632531206884764]
Test Case: 624 | Input/Output: [[32.48169948162297 -70] -37.51830051837703]
Test Case: 625 | Input/Output: [[69.27775902568328 -32] 37.27775902568328]
Test Case: 626 | Input/Output: [[-89.7221308460101 -82] -171.7221308460101]
Test Case: 627 | Input/Output: [[36.146858734215186 59] 95.14685873421519]
Test Case: 628 | Input/Output: [[53.51970808751753 -1] 52.51970808751753]
Test Case: 629 | Input/Output: [[43.76471174306067 36] 79.76471174306067]
Test Case: 630 | Input/Output: [[53.06259818170642 82] 135.06259818170642]
Test Case: 631 | Input/Output: [[-93.14207502210996 65] -28.142075022109964]
Test Case: 632 | Input/Output: [[38.976896941757445 -38] 0.9768969417574453]
Test Case: 633 | Input/Output: [[-60.07410422443593 87] 26.925895775564072]
Test Case: 634 | Input/Output: [[91.17690277830386 56] 147.17690277830386]
Test Case: 635 | Input/Output: [[-63.39176569700831 55] -8.39176569700831]
Test Case: 636 | Input/Output: [[18.869024916858308 -38] -19.130975083141692]
Test Case: 637 | Input/Output: [[0.10511271834066349 -47] -46.89488728165934]
Test Case: 638 | Input/Output: [[1.8014776022012882 -54] -52.19852239779871]
Test Case: 639 | Input/Output: [[57.10028657572906 61] 118.10028657572906]
Test Case: 640 | Input/Output: [[52.77260369599446 8] 60.77260369599446]
Test Case: 641 | Input/Output: [[-18.47292199589991 -69] -87.47292199589991]
Test Case: 642 | Input/Output: [[-52.517848890213756 76] 23.482151109786244]
Test Case: 643 | Input/Output: [[-12.280238117054807 83] 70.71976188294519]
Test Case: 644 | Input/Output: [[3.8795071007742052 -45] -41.120492899225795]
Test Case: 645 | Input/Output: [[26.500350231698235 -1] 25.500350231698235]
Test Case: 646 | Input/Output: [[51.1928216143431 -8] 43.1928216143431]
Test Case: 647 | Input/Output: [[80.7275782970716 -14] 66.7275782970716]
Test Case: 648 | Input/Output: [[-1.3338296980329574 -32] -33.33382969803296]
Test Case: 649 | Input/Output: [[-2.315858571951651 78] 75.68414142804835]
Test Case: 650 | Input/Output: [[-53.64275258682068 -62] -115.64275258682068]
Test Case: 651 | Input/Output: [[3.146761086251587 -79] -75.85323891374841]
Test Case: 652 | Input/Output: [[-71.51988631278758 -4] -75.51988631278758]
Test Case: 653 | Input/Output: [[49.046714218345244 -58] -8.953285781654756]
Test Case: 654 | Input/Output: [[89.09608537407158 -5] 84.09608537407158]
Test Case: 655 | Input/Output: [[-85.31144908717884 74] -11.311449087178843]
Test Case: 656 | Input/Output: [[60.68903553815724 -94] -33.31096446184276]
Test Case: 657 | Input/Output: [[67.96777997351217 -97] -29.032220026487835]
Test Case: 658 | Input/Output: [[-70.30815646615687 -92] -162.30815646615687]
Test Case: 659 | Input/Output: [[90.67300140455373 -60] 30.67300140455373]
Test Case: 660 | Input/Output: [[-90.84374597607425 17] -73.84374597607425]
Test Case: 661 | Input/Output: [[66.2976244171206 -28] 38.2976244171206]
Test Case: 662 | Input/Output: [[-66.11022833742425 76] 9.889771662575754]
Test Case: 663 | Input/Output: [[-68.4948610898534 -45] -113.4948610898534]
Test Case: 664 | Input/Output: [[54.36842302344712 96] 150.36842302344712]
Test Case: 665 | Input/Output: [[-82.39190883115437 -25] -107.39190883115437]
Test Case: 666 | Input/Output: [[29.182070300774853 55] 84.18207030077485]
Test Case: 667 | Input/Output: [[30.547476125376136 -19] 11.547476125376136]
Test Case: 668 | Input/Output: [[28.63760505865821 -10] 18.63760505865821]
Test Case: 669 | Input/Output: [[-35.580165958903436 -79] -114.58016595890344]
Test Case: 670 | Input/Output: [[10.94934178092366 -80] -69.05065821907634]
Test Case: 671 | Input/Output: [[32.035169959325145 68] 100.03516995932515]
Test Case: 672 | Input/Output: [[-37.88901649982166 -48] -85.88901649982165]
Test Case: 673 | Input/Output: [[-35.223361183908224 31] -4.223361183908224]
Test Case: 674 | Input/Output: [[-37.22562938837714 -46] -83.22562938837714]
Test Case: 675 | Input/Output: [[72.5686584713942 35] 107.5686584713942]
Test Case: 676 | Input/Output: [[23.058791759552918 70] 93.05879175955292]
Test Case: 677 | Input/Output: [[-58.04677598892829 -100] -158.0467759889283]
Test Case: 678 | Input/Output: [[96.44528358874837 96] 192.44528358874837]
Test Case: 679 | Input/Output: [[41.06765572469098 -40] 1.0676557246909795]
Test Case: 680 | Input/Output: [[-64.07770941188866 -95] -159.07770941188866]
Test Case: 681 | Input/Output: [[31.57658074854365 94] 125.57658074854365]
Test Case: 682 | Input/Output: [[-92.73987146908047 -20] -112.73987146908047]
Test Case: 683 | Input/Output: [[-53.03757477495525 -48] -101.03757477495526]
Test Case: 684 | Input/Output: [[-57.956233915283995 66] 8.043766084716005]
Test Case: 685 | Input/Output: [[-71.87248399841224 -81] -152.87248399841224]
Test Case: 686 | Input/Output: [[27.48231134171253 53] 80.48231134171253]
Test Case: 687 | Input/Output: [[-93.7435307331179 -72] -165.7435307331179]
Test Case: 688 | Input/Output: [[99.76387824702226 -37] 62.76387824702226]
Test Case: 689 | Input/Output: [[-3.0635011165060178 -47] -50.06350111650602]
Test Case: 690 | Input/Output: [[35.05476322703885 89] 124.05476322703885]
Test Case: 691 | Input/Output: [[-93.32499600800084 -46] -139.32499600800082]
Test Case: 692 | Input/Output: [[-93.28123004043843 98] 4.71876995956157]
Test Case: 693 | Input/Output: [[10.445568119572428 100] 110.44556811957243]
Test Case: 694 | Input/Output: [[98.73380497636555 -71] 27.733804976365548]
Test Case: 695 | Input/Output: [[3.772669242074798 77] 80.7726692420748]
Test Case: 696 | Input/Output: [[-61.96227394447617 42] -19.962273944476173]
Test Case: 697 | Input/Output: [[-26.583212417442212 -9] -35.58321241744221]
Test Case: 698 | Input/Output: [[-39.324057080083975 -57] -96.32405708008397]
Test Case: 699 | Input/Output: [[-90.5025784019133 -21] -111.5025784019133]
Test Case: 700 | Input/Output: [[-97.47785257201681 54] -43.477852572016815]
Test Case: 701 | Input/Output: [[-57.41185315537991 61] 3.5881468446200913]
Test Case: 702 | Input/Output: [[-68.84013339943652 -90] -158.84013339943652]
Test Case: 703 | Input/Output: [[41.44598717137126 69] 110.44598717137126]
Test Case: 704 | Input/Output: [[52.097554461963256 -94] -41.902445538036744]
Test Case: 705 | Input/Output: [[-1.7086688893096493 100] 98.29133111069035]
Test Case: 706 | Input/Output: [[58.844025735493545 -61] -2.1559742645064546]
Test Case: 707 | Input/Output: [[-94.4909521607865 -61] -155.4909521607865]
Test Case: 708 | Input/Output: [[-72.26983241994682 -85] -157.26983241994682]
Test Case: 709 | Input/Output: [[85.40245967175409 48] 133.4024596717541]
Test Case: 710 | Input/Output: [[62.265131303677975 75] 137.26513130367798]
Test Case: 711 | Input/Output: [[35.01791092813042 -16] 19.01791092813042]
Test Case: 712 | Input/Output: [[34.34338776953456 -24] 10.343387769534559]
Test Case: 713 | Input/Output: [[-70.17226174112119 18] -52.17226174112119]
Test Case: 714 | Input/Output: [[2.318334857447553 38] 40.31833485744755]
Test Case: 715 | Input/Output: [[-59.94007211155219 1] -58.94007211155219]
Test Case: 716 | Input/Output: [[98.28458795602157 72] 170.28458795602157]
Test Case: 717 | Input/Output: [[-58.741565126095566 12] -46.741565126095566]
Test Case: 718 | Input/Output: [[47.226542010925726 -55] -7.773457989074274]
Test Case: 719 | Input/Output: [[49.533643567447285 57] 106.53364356744729]
Test Case: 720 | Input/Output: [[-17.40693721639171 98] 80.59306278360829]
Test Case: 721 | Input/Output: [[-46.26123714348551 96] 49.73876285651449]
Test Case: 722 | Input/Output: [[-59.31686874121726 85] 25.683131258782737]
Test Case: 723 | Input/Output: [[-74.68466926180908 -22] -96.68466926180908]
Test Case: 724 | Input/Output: [[-33.66516269256272 11] -22.665162692562717]
Test Case: 725 | Input/Output: [[32.82255345605179 54] 86.82255345605179]
Test Case: 726 | Input/Output: [[86.77775897314385 -86] 0.7777589731438468]
Test Case: 727 | Input/Output: [[-45.945506767465936 -10] -55.945506767465936]
Test Case: 728 | Input/Output: [[20.56514478631351 -97] -76.43485521368649]
Test Case: 729 | Input/Output: [[-94.53248683201576 72] -22.532486832015763]
Test Case: 730 | Input/Output: [[-55.78045974256946 15] -40.78045974256946]
Test Case: 731 | Input/Output: [[22.76512436550479 -57] -34.23487563449521]
Test Case: 732 | Input/Output: [[43.862687007772365 -59] -15.137312992227635]
Test Case: 733 | Input/Output: [[-21.369248769265624 -91] -112.36924876926562]
Test Case: 734 | Input/Output: [[-82.49554364835463 81] -1.4955436483546265]
Test Case: 735 | Input/Output: [[-64.74563385133064 -44] -108.74563385133064]
Test Case: 736 | Input/Output: [[2.4776830321769268 -36] -33.52231696782307]
Test Case: 737 | Input/Output: [[98.98086663797702 94] 192.98086663797702]
Test Case: 738 | Input/Output: [[-83.18526742999015 -98] -181.18526742999015]
Test Case: 739 | Input/Output: [[72.89216880292258 -100] -27.107831197077417]
Test Case: 740 | Input/Output: [[42.285838533711996 -15] 27.285838533711996]
Test Case: 741 | Input/Output: [[72.84305959407908 5] 77.84305959407908]
Test Case: 742 | Input/Output: [[66.26663237666014 -14] 52.26663237666014]
Test Case: 743 | Input/Output: [[70.74528803589618 16] 86.74528803589618]
Test Case: 744 | Input/Output: [[26.03743914363899 -49] -22.96256085636101]
Test Case: 745 | Input/Output: [[33.3102686598028 -65] -31.6897313401972]
Test Case: 746 | Input/Output: [[29.808432951849312 -17] 12.808432951849312]
Test Case: 747 | Input/Output: [[14.11891741075955 35] 49.11891741075955]
Test Case: 748 | Input/Output: [[69.30007167488364 24] 93.30007167488364]
Test Case: 749 | Input/Output: [[79.9739915861851 -26] 53.97399158618509]
Test Case: 750 | Input/Output: [[51.293317882401595 -58] -6.706682117598405]
Test Case: 751 | Input/Output: [[97.80223952272135 54] 151.80223952272135]
Test Case: 752 | Input/Output: [[41.0051686179861 -80] -38.9948313820139]
Test Case: 753 | Input/Output: [[44.29579134417577 95] 139.29579134417577]
Test Case: 754 | Input/Output: [[18.26681013597957 -56] -37.73318986402043]
Test Case: 755 | Input/Output: [[-3.782220458482172 0] -3.782220458482172]
Test Case: 756 | Input/Output: [[-88.50895267936329 -14] -102.50895267936329]
Test Case: 757 | Input/Output: [[-98.76771355206095 -68] -166.76771355206097]
Test Case: 758 | Input/Output: [[-80.48105636833442 -100] -180.4810563683344]
Test Case: 759 | Input/Output: [[34.50215068448651 -45] -10.497849315513491]
Test Case: 760 | Input/Output: [[20.87246919875092 -29] -8.12753080124908]
Test Case: 761 | Input/Output: [[95.33331717331603 62] 157.33331717331603]
Test Case: 762 | Input/Output: [[69.59420233785997 -24] 45.59420233785997]
Test Case: 763 | Input/Output: [[-13.504603138168875 -100] -113.50460313816887]
Test Case: 764 | Input/Output: [[-35.58199911090708 -20] -55.58199911090708]
Test Case: 765 | Input/Output: [[-9.325396833335347 -92] -101.32539683333535]
Test Case: 766 | Input/Output: [[82.8065854585987 -66] 16.806585458598704]
Test Case: 767 | Input/Output: [[1.358294083825811 66] 67.35829408382581]
Test Case: 768 | Input/Output: [[49.883520904837354 16] 65.88352090483735]
Test Case: 769 | Input/Output: [[-89.07795150617441 50] -39.077951506174415]
Test Case: 770 | Input/Output: [[-41.19954285511744 87] 45.80045714488256]
Test Case: 771 | Input/Output: [[-87.69287734788962 -75] -162.69287734788963]
Test Case: 772 | Input/Output: [[95.3191472511239 -87] 8.319147251123894]
Test Case: 773 | Input/Output: [[50.286048021640084 -35] 15.286048021640084]
Test Case: 774 | Input/Output: [[19.768972405924472 70] 89.76897240592447]
Test Case: 775 | Input/Output: [[-79.4784656767495 -55] -134.4784656767495]
Test Case: 776 | Input/Output: [[22.396804158137655 16] 38.396804158137655]
Test Case: 777 | Input/Output: [[1.7612244186201167 -27] -25.238775581379883]
Test Case: 778 | Input/Output: [[-82.52857671306846 40] -42.52857671306846]
Test Case: 779 | Input/Output: [[84.92195493381081 24] 108.92195493381081]
Test Case: 780 | Input/Output: [[65.23117432446105 14] 79.23117432446105]
Test Case: 781 | Input/Output: [[41.65180204531433 74] 115.65180204531433]
Test Case: 782 | Input/Output: [[62.18350743428715 -12] 50.18350743428715]
Test Case: 783 | Input/Output: [[-13.2543852035311 47] 33.7456147964689]
Test Case: 784 | Input/Output: [[99.5787435605871 62] 161.5787435605871]
Test Case: 785 | Input/Output: [[-10.2963530241297 89] 78.7036469758703]
Test Case: 786 | Input/Output: [[55.18119049203841 -48] 7.181190492038411]
Test Case: 787 | Input/Output: [[63.97738671269582 -91] -27.022613287304182]
Test Case: 788 | Input/Output: [[74.40408097125746 76] 150.40408097125746]
Test Case: 789 | Input/Output: [[-1.7018551204140522 -79] -80.70185512041405]
Test Case: 790 | Input/Output: [[-86.16769747712065 -81] -167.16769747712067]
Test Case: 791 | Input/Output: [[22.01620296926808 78] 100.01620296926808]
Test Case: 792 | Input/Output: [[-59.726492562282154 74] 14.273507437717846]
Test Case: 793 | Input/Output: [[96.88167164882714 100] 196.88167164882714]
Test Case: 794 | Input/Output: [[95.38324739132779 -8] 87.38324739132779]
Test Case: 795 | Input/Output: [[-65.62518739817784 -26] -91.62518739817784]
Test Case: 796 | Input/Output: [[-60.229530229565874 98] 37.770469770434126]
Test Case: 797 | Input/Output: [[-0.9561142411156993 -44] -44.9561142411157]
Test Case: 798 | Input/Output: [[21.733303408618653 -82] -60.26669659138135]
Test Case: 799 | Input/Output: [[70.63732873546533 52] 122.63732873546533]
Test Case: 800 | Input/Output: [[-79.0347326796099 39] -40.0347326796099]
Test Case: 801 | Input/Output: [[64.28131088404757 22] 86.28131088404757]
Test Case: 802 | Input/Output: [[10.088988889937482 -76] -65.91101111006252]
Test Case: 803 | Input/Output: [[9.180864909407774 46] 55.180864909407774]
Test Case: 804 | Input/Output: [[-14.225082138693779 44] 29.77491786130622]
Test Case: 805 | Input/Output: [[7.634945285175036 -56] -48.365054714824964]
Test Case: 806 | Input/Output: [[-38.42819964028688 -37] -75.42819964028688]
Test Case: 807 | Input/Output: [[17.444724896174037 -81] -63.55527510382596]
Test Case: 808 | Input/Output: [[33.84355099320862 26] 59.84355099320862]
Test Case: 809 | Input/Output: [[13.010197877976395 -98] -84.9898021220236]
Test Case: 810 | Input/Output: [[-78.8066848038455 -73] -151.80668480384549]
Test Case: 811 | Input/Output: [[-12.311570166340147 13] 0.6884298336598533]
Test Case: 812 | Input/Output: [[-64.51439579935499 14] -50.514395799354986]
Test Case: 813 | Input/Output: [[-52.16521916897019 -82] -134.1652191689702]
Test Case: 814 | Input/Output: [[15.863361365710077 28] 43.86336136571008]
Test Case: 815 | Input/Output: [[81.54525678260211 17] 98.54525678260211]
Test Case: 816 | Input/Output: [[29.938192773631954 80] 109.93819277363195]
Test Case: 817 | Input/Output: [[20.817944018102352 77] 97.81794401810235]
Test Case: 818 | Input/Output: [[4.477672663978808 -73] -68.52232733602119]
Test Case: 819 | Input/Output: [[84.1448220971582 84] 168.1448220971582]
Test Case: 820 | Input/Output: [[45.20803281766271 -97] -51.79196718233729]
Test Case: 821 | Input/Output: [[-85.61857136470579 -78] -163.6185713647058]
Test Case: 822 | Input/Output: [[-48.01470597193258 99] 50.98529402806742]
Test Case: 823 | Input/Output: [[11.628257897764072 70] 81.62825789776407]
Test Case: 824 | Input/Output: [[97.41852647941144 -49] 48.41852647941144]
Test Case: 825 | Input/Output: [[-43.71033591534379 83] 39.28966408465621]
Test Case: 826 | Input/Output: [[-78.61471435687362 -14] -92.61471435687362]
Test Case: 827 | Input/Output: [[5.25048039106963 68] 73.25048039106963]
Test Case: 828 | Input/Output: [[4.128250905758762 -36] -31.87174909424124]
Test Case: 829 | Input/Output: [[-34.92993395281604 72] 37.07006604718396]
Test Case: 830 | Input/Output: [[2.575355365310486 54] 56.575355365310486]
Test Case: 831 | Input/Output: [[66.19884160018901 7] 73.19884160018901]
Test Case: 832 | Input/Output: [[-93.70647985840638 3] -90.70647985840638]
Test Case: 833 | Input/Output: [[-54.650454647995474 56] 1.349545352004526]
Test Case: 834 | Input/Output: [[-3.696299959133313 -23] -26.696299959133313]
Test Case: 835 | Input/Output: [[-5.9395252657907776 -41] -46.93952526579078]
Test Case: 836 | Input/Output: [[-87.64646696005052 -70] -157.64646696005053]
Test Case: 837 | Input/Output: [[79.03576749227292 82] 161.03576749227292]
Test Case: 838 | Input/Output: [[-54.84004062506411 -81] -135.84004062506412]
Test Case: 839 | Input/Output: [[-78.04290475995907 46] -32.04290475995907]
Test Case: 840 | Input/Output: [[-55.20019127569833 7] -48.20019127569833]
Test Case: 841 | Input/Output: [[94.74380178335812 -76] 18.743801783358123]
Test Case: 842 | Input/Output: [[-53.176694328080856 -98] -151.17669432808086]
Test Case: 843 | Input/Output: [[14.35973015876317 1] 15.35973015876317]
Test Case: 844 | Input/Output: [[14.071239258657585 43] 57.071239258657585]
Test Case: 845 | Input/Output: [[-47.954291937775054 -96] -143.95429193777505]
Test Case: 846 | Input/Output: [[-26.851193826703863 88] 61.14880617329614]
Test Case: 847 | Input/Output: [[17.34296180622428 -96] -78.65703819377572]
Test Case: 848 | Input/Output: [[-89.40246504187266 -48] -137.40246504187266]
Test Case: 849 | Input/Output: [[98.37900531293235 57] 155.37900531293235]
Test Case: 850 | Input/Output: [[80.86152782298421 -43] 37.861527822984215]
Test Case: 851 | Input/Output: [[78.94449323000973 -59] 19.944493230009726]
Test Case: 852 | Input/Output: [[70.28341921348803 -56] 14.283419213488031]
Test Case: 853 | Input/Output: [[-55.08108518922317 6] -49.08108518922317]
Test Case: 854 | Input/Output: [[-16.9520129867269 -80] -96.9520129867269]
Test Case: 855 | Input/Output: [[39.64731480313634 36] 75.64731480313634]
Test Case: 856 | Input/Output: [[-76.4252428420442 75] -1.4252428420441987]
Test Case: 857 | Input/Output: [[-3.7176460753359777 87] 83.28235392466402]
Test Case: 858 | Input/Output: [[91.76354258178156 -8] 83.76354258178156]
Test Case: 859 | Input/Output: [[47.88938901452789 -53] -5.110610985472107]
Test Case: 860 | Input/Output: [[24.838975326177888 -87] -62.16102467382211]
Test Case: 861 | Input/Output: [[-69.10661318499247 94] 24.89338681500753]
Test Case: 862 | Input/Output: [[-63.97875620508029 -59] -122.97875620508029]
Test Case: 863 | Input/Output: [[72.45744286999084 33] 105.45744286999084]
Test Case: 864 | Input/Output: [[-98.77918072575507 77] -21.77918072575507]
Test Case: 865 | Input/Output: [[21.52179922081092 55] 76.52179922081092]
Test Case: 866 | Input/Output: [[-63.409819429193014 27] -36.409819429193014]
Test Case: 867 | Input/Output: [[-67.46264033190604 -49] -116.46264033190604]
Test Case: 868 | Input/Output: [[10.378711821203225 16] 26.378711821203225]
Test Case: 869 | Input/Output: [[74.04555350062412 56] 130.04555350062412]
Test Case: 870 | Input/Output: [[80.77496994969138 -100] -19.225030050308618]
Test Case: 871 | Input/Output: [[-28.768800093367048 -14] -42.76880009336705]
Test Case: 872 | Input/Output: [[17.82306925168615 -78] -60.17693074831385]
Test Case: 873 | Input/Output: [[-72.57716314738707 70] -2.5771631473870684]
Test Case: 874 | Input/Output: [[55.39140522730034 94] 149.39140522730034]
Test Case: 875 | Input/Output: [[-17.6982203981821 89] 71.3017796018179]
Test Case: 876 | Input/Output: [[37.45193699397751 -92] -54.54806300602249]
Test Case: 877 | Input/Output: [[-78.95621702197371 -50] -128.9562170219737]
Test Case: 878 | Input/Output: [[54.08565859995653 30] 84.08565859995653]
Test Case: 879 | Input/Output: [[9.388211344613183 -71] -61.61178865538682]
Test Case: 880 | Input/Output: [[-73.83195222837857 -21] -94.83195222837857]
Test Case: 881 | Input/Output: [[94.36721460813601 6] 100.36721460813601]
Test Case: 882 | Input/Output: [[-79.45502253377576 -79] -158.45502253377578]
Test Case: 883 | Input/Output: [[42.01102966439606 29] 71.01102966439606]
Test Case: 884 | Input/Output: [[69.7563061869115 73] 142.7563061869115]
Test Case: 885 | Input/Output: [[-59.71406113034845 34] -25.714061130348448]
Test Case: 886 | Input/Output: [[59.904707650096924 3] 62.904707650096924]
Test Case: 887 | Input/Output: [[-33.67377284391817 10] -23.673772843918172]
Test Case: 888 | Input/Output: [[-65.84749193402021 -44] -109.84749193402021]
Test Case: 889 | Input/Output: [[-86.11533033928906 96] 9.88466966071094]
Test Case: 890 | Input/Output: [[-85.82896049388566 24] -61.82896049388566]
Test Case: 891 | Input/Output: [[33.98835838616361 -73] -39.01164161383639]
Test Case: 892 | Input/Output: [[34.20376096503915 77] 111.20376096503915]
Test Case: 893 | Input/Output: [[59.816876015272044 -65] -5.183123984727956]
Test Case: 894 | Input/Output: [[-16.05466222320149 -18] -34.05466222320149]
Test Case: 895 | Input/Output: [[-66.41685046299297 -29] -95.41685046299297]
Test Case: 896 | Input/Output: [[-23.129092214924412 3] -20.129092214924412]
Test Case: 897 | Input/Output: [[10.264847575114388 100] 110.26484757511439]
Test Case: 898 | Input/Output: [[14.035292497569031 -40] -25.96470750243097]
Test Case: 899 | Input/Output: [[-12.178390687462255 48] 35.821609312537745]
Test Case: 900 | Input/Output: [[36.581923440977846 -28] 8.581923440977846]
Test Case: 901 | Input/Output: [[61.00439150865981 -74] -12.995608491340192]
Test Case: 902 | Input/Output: [[-84.65454676529734 -8] -92.65454676529734]
Test Case: 903 | Input/Output: [[23.200838289766423 -86] -62.79916171023358]
Test Case: 904 | Input/Output: [[-83.96865329214356 -99] -182.96865329214356]
Test Case: 905 | Input/Output: [[-66.1325040167271 56] -10.132504016727097]
Test Case: 906 | Input/Output: [[-48.58403549637569 27] -21.58403549637569]
Test Case: 907 | Input/Output: [[-47.480552083127094 -58] -105.4805520831271]
Test Case: 908 | Input/Output: [[24.88509811282003 27] 51.88509811282003]
Test Case: 909 | Input/Output: [[95.30611243087105 -50] 45.30611243087105]
Test Case: 910 | Input/Output: [[9.137424964287376 -11] -1.8625750357126236]
Test Case: 911 | Input/Output: [[87.6371103302138 -31] 56.6371103302138]
Test Case: 912 | Input/Output: [[-74.62639271629878 48] -26.62639271629878]
Test Case: 913 | Input/Output: [[40.491941738617186 93] 133.4919417386172]
Test Case: 914 | Input/Output: [[-51.40176029531078 35] -16.40176029531078]
Test Case: 915 | Input/Output: [[-26.204556535611474 -66] -92.20455653561147]
Test Case: 916 | Input/Output: [[-30.805017287499936 6] -24.805017287499936]
Test Case: 917 | Input/Output: [[86.00028894786763 -8] 78.00028894786763]
Test Case: 918 | Input/Output: [[23.899787774595893 -9] 14.899787774595893]
Test Case: 919 | Input/Output: [[-36.12135493081199 81] 44.87864506918801]
Test Case: 920 | Input/Output: [[30.849229834552347 -71] -40.15077016544765]
Test Case: 921 | Input/Output: [[-25.206784305720504 76] 50.793215694279496]
Test Case: 922 | Input/Output: [[95.24231241399431 -24] 71.24231241399431]
Test Case: 923 | Input/Output: [[-4.808294599397996 82] 77.191705400602]
Test Case: 924 | Input/Output: [[15.408932129576442 -34] -18.591067870423558]
Test Case: 925 | Input/Output: [[-74.69293414427958 -2] -76.69293414427958]
Test Case: 926 | Input/Output: [[-74.32182271089773 -59] -133.32182271089772]
Test Case: 927 | Input/Output: [[4.844731515084305 -76] -71.1552684849157]
Test Case: 928 | Input/Output: [[-81.91301458439042 -30] -111.91301458439042]
Test Case: 929 | Input/Output: [[87.49216831039405 100] 187.49216831039405]
Test Case: 930 | Input/Output: [[62.40084687349815 -17] 45.40084687349815]
Test Case: 931 | Input/Output: [[78.16925493030939 70] 148.1692549303094]
Test Case: 932 | Input/Output: [[-65.49592918212457 -43] -108.49592918212457]
Test Case: 933 | Input/Output: [[-10.425881145215726 18] 7.574118854784274]
Test Case: 934 | Input/Output: [[55.45313937387678 38] 93.45313937387678]
Test Case: 935 | Input/Output: [[-77.17817895800249 57] -20.17817895800249]
Test Case: 936 | Input/Output: [[64.91142566427078 52] 116.91142566427078]
Test Case: 937 | Input/Output: [[53.7556707929275 -79] -25.244329207072497]
Test Case: 938 | Input/Output: [[75.58177544052484 6] 81.58177544052484]
Test Case: 939 | Input/Output: [[-39.56355760813403 38] -1.5635576081340332]
Test Case: 940 | Input/Output: [[-30.904959898883604 -15] -45.904959898883604]
Test Case: 941 | Input/Output: [[-27.986730378458674 -53] -80.98673037845867]
Test Case: 942 | Input/Output: [[-13.733477128252275 92] 78.26652287174772]
Test Case: 943 | Input/Output: [[36.48035075409095 -93] -56.51964924590905]
Test Case: 944 | Input/Output: [[-4.453234028765721 64] 59.54676597123428]
Test Case: 945 | Input/Output: [[-36.3075620146538 -14] -50.3075620146538]
Test Case: 946 | Input/Output: [[78.40164320579339 -52] 26.40164320579339]
Test Case: 947 | Input/Output: [[-90.66462870929404 92] 1.3353712907059645]
Test Case: 948 | Input/Output: [[-81.24218552111533 57] -24.24218552111533]
Test Case: 949 | Input/Output: [[30.797733560667837 55] 85.79773356066784]
Test Case: 950 | Input/Output: [[-21.62294844717674 52] 30.37705155282326]
Test Case: 951 | Input/Output: [[-60.68913981857587 13] -47.68913981857587]
Test Case: 952 | Input/Output: [[-17.71832979761679 15] -2.7183297976167893]
Test Case: 953 | Input/Output: [[-3.717328495505143 -41] -44.71732849550514]
Test Case: 954 | Input/Output: [[63.48487756294102 60] 123.48487756294102]
Test Case: 955 | Input/Output: [[-6.042340190707236 -82] -88.04234019070724]
Test Case: 956 | Input/Output: [[76.14967606056396 -2] 74.14967606056396]
Test Case: 957 | Input/Output: [[90.00190120297859 -82] 8.001901202978587]
Test Case: 958 | Input/Output: [[-22.01098504467771 5] -17.01098504467771]
Test Case: 959 | Input/Output: [[19.82875319624793 7] 26.82875319624793]
Test Case: 960 | Input/Output: [[-39.03301163495938 -6] -45.03301163495938]
Test Case: 961 | Input/Output: [[-25.79259808197658 -21] -46.79259808197658]
Test Case: 962 | Input/Output: [[23.29396782376689 49] 72.29396782376689]
Test Case: 963 | Input/Output: [[-60.31161253906339 -72] -132.3116125390634]
Test Case: 964 | Input/Output: [[-65.77167812850897 -67] -132.77167812850897]
Test Case: 965 | Input/Output: [[48.151834923860775 45] 93.15183492386078]
Test Case: 966 | Input/Output: [[-4.074991718965279 -99] -103.07499171896528]
Test Case: 967 | Input/Output: [[-33.03212366975772 27] -6.032123669757723]
Test Case: 968 | Input/Output: [[27.867038708062424 -83] -55.132961291937576]
Test Case: 969 | Input/Output: [[3.8782695903319677 -70] -66.12173040966803]
Test Case: 970 | Input/Output: [[-80.44271443841112 87] 6.557285561588884]
Test Case: 971 | Input/Output: [[-46.10147260867912 -82] -128.1014726086791]
Test Case: 972 | Input/Output: [[12.979039482721518 17] 29.979039482721518]
Test Case: 973 | Input/Output: [[-64.9817048351216 -67] -131.9817048351216]
Test Case: 974 | Input/Output: [[37.84854675764916 -36] 1.84854675764916]
Test Case: 975 | Input/Output: [[-92.48455798721074 9] -83.48455798721074]
Test Case: 976 | Input/Output: [[98.33882832861809 28] 126.33882832861809]
Test Case: 977 | Input/Output: [[99.98805143355756 53] 152.98805143355756]
Test Case: 978 | Input/Output: [[15.724296253387337 12] 27.724296253387337]
Test Case: 979 | Input/Output: [[-44.69653671234952 -58] -102.69653671234951]
Test Case: 980 | Input/Output: [[-1.1919605010857026 -30] -31.191960501085703]
Test Case: 981 | Input/Output: [[36.04111131497626 -49] -12.958888685023737]
Test Case: 982 | Input/Output: [[-10.67252950299509 -96] -106.67252950299509]
Test Case: 983 | Input/Output: [[67.04912553597993 92] 159.04912553597993]
Test Case: 984 | Input/Output: [[-47.53773550120122 -15] -62.53773550120122]
Test Case: 985 | Input/Output: [[0.5696581663414264 6] 6.569658166341426]
Test Case: 986 | Input/Output: [[-49.65222226991277 -29] -78.65222226991277]
Test Case: 987 | Input/Output: [[47.75133050487591 -7] 40.75133050487591]
Test Case: 988 | Input/Output: [[-47.54489020145771 56] 8.455109798542289]
Test Case: 989 | Input/Output: [[-67.29320792739317 -9] -76.29320792739317]
Test Case: 990 | Input/Output: [[42.23668059307707 -74] -31.763319406922932]
Test Case: 991 | Input/Output: [[-85.95029753193026 70] -15.95029753193026]
Test Case: 992 | Input/Output: [[-5.300638509801757 97] 91.69936149019824]
Test Case: 993 | Input/Output: [[-88.58483397325874 -64] -152.58483397325875]
Test Case: 994 | Input/Output: [[21.885243814786364 90] 111.88524381478636]
Test Case: 995 | Input/Output: [[98.64127219476632 29] 127.64127219476632]
Test Case: 996 | Input/Output: [[66.65919052570567 15] 81.65919052570567]
Test Case: 997 | Input/Output: [[-57.797766879938386 14] -43.797766879938386]
Test Case: 998 | Input/Output: [[-25.730064322541722 -26] -51.73006432254172]
Test Case: 999 | Input/Output: [[37.808309425188725 86] 123.80830942518872]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 97 -123 -45 -32 66 53 49 -15 96 -27 13 70 61 -36 106 -128
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 55170.0
Test mean error for best: 27.58500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90.3075248315 
Correct output: 158.3808965757 | Program output: 83.3808965757 
Correct output: 114.9822216852 | Program output: 32.9822216852 
Correct output: -73.2417159775 | Program output: -94.2417159775
Correct output: -46.7487881284 | Program output: -62.7487881284
Correct output: 17.2020579278  | Program output: -16.7979420722
Correct output: -26.2914451352 | Program output: 13.7085548648 
Correct output: -28.0690930702 | Program output: -14.0690930702
Correct output: -131.222093374 | Program output: -90.222093374 
Correct output: -89.9171675317 | Program output: -72.9171675317
Correct output: 142.5271218035 | Program output: 56.5271218035 
Correct output: -38.4620782332 | Program output: -75.4620782332
Correct output: 23.7219549711  | Program output: 96.7219549711 
Correct output: 27.5055885525  | Program output: 93.5055885525 
Correct output: -9.6757274332  | Program output: 22.3242725668 
Correct output: 19.9870160592  | Program output: 14.9870160592 
Correct output: 19.6073368825  | Program output: -24.3926631175
Correct output: -9.7006438671  | Program output: -92.7006438671
Correct output: 30.1057413444  | Program output: 43.1057413444 
Correct output: 72.9269281064  | Program output: -1.0730718936 
Correct output: 10.3524641447  | Program output: 67.3524641447 
Correct output: 18.9681003325  | Program output: 28.9681003325 
Correct output: 67.2227499194  | Program output: 47.2227499194 
Correct output: -58.0718231545 | Program output: -3.0718231545 
Correct output: 6.4353776154   | Program output: 92.4353776154 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_pop} {:instruction tag_float_740} {:instruction print_float} {:instruction float_yank} {:instruction integer_yankdup} {:instruction print_float} {:instruction integer_pop} {:instruction float_min} {:instruction integer_div} {:instruction float_dup_times} {:instruction 55.49102149052504} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_489} {:instruction integer_flush} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_dup} {:instruction float_div} {:instruction integer_swap} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_swap} {:instruction integer_mod} {:instruction float_dup} {:instruction in1} {:instruction integer_yank} {:instruction tag_integer_397} {:instruction float_add} {:instruction print_float} {:instruction in1} {:instruction float_pop} {:instruction tag_integer_7} {:instruction float_cos} {:instruction integer_mult} {:instruction tagged_769} {:instruction integer_mod} {:instruction integer_add} {:instruction in2} {:instruction float_dup_times} {:instruction float_div} {:instruction in2})
Best program: (float_mult float_dec float_dup_times float_pop tag_float_740 print_float float_yank integer_yankdup print_float integer_pop float_min integer_div float_dup_times 55.49102149052504 integer_inc float_dup_times integer_mod integer_inc tagged_489 integer_flush print_integer integer_yank integer_yankdup float_sub integer_shove integer_inc integer_mult float_dup float_div integer_swap integer_sub integer_div integer_yankdup float_swap integer_mod float_dup in1 integer_yank tag_integer_397 float_add print_float in1 float_pop tag_integer_7 float_cos integer_mult tagged_769 integer_mod integer_add in2 float_dup_times float_div in2)
Errors: [0.0 0 75.0 3 82.0 3 21.0 2 16.0 2 34.0 11 40.0 13 14.0 2 41.0 3 17.0 2 86.0 3 37.0 2 73.0 2 66.0 2 32.0 11 5.0 1 44.0 12 83.0 1 13.0 2 74.0 11 57.0 2 10.0 1 20.0 1 55.0 2 86.0 2]
Total: 1177.0
Mean: 23.54
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 17988.429040200004
Median total errors in population: 25335.0
Error averages by case: (698.0207619999996 12.44 728.9184347999982 13.327 718.0529276000003 13.475 711.0708315000022 13.386 704.3322867999976 13.363 697.8274431999995 13.061 698.000384999999 13.99 703.1702168999992 13.311 729.8093833000023 13.336 716.2037533000027 13.32 726.0413022999979 13.346 705.7511592000004 13.242 702.9137635999988 12.624 705.0161762999999 12.71 697.2519877000011 13.169 686.8443349999998 12.371 699.8702999999998 13.264 705.2712341999985 12.406 700.2577856999986 12.564 712.3281577999994 13.097 700.4604314000004 12.543 696.4453575000017 12.559 706.0489884000015 12.688 711.0076351000008 13.152 702.8280015999994 11.942)
Error minima by case: (0.0 0 4.3809 2 13.9822 2 2.2417 2 0.8177 2 0.2021 8 0.7086 9 0.227 2 6.4957 2 0.4123 2 13.0 2 0.4621 2 1.0135 2 4.3664 2 0.3243 7 0.4846 1 0.8713 9 0.2994 1 4.8943 2 1.0731 8 1.4382 2 0.232 1 0.1603 1 0.7819 2 0.4145 2)
Average genome size in population (length): 50.469
Average program size in population (points): 51.469
Average percent parens in population: 0.039
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.319
Error (vector) diversity:			 0.35
Behavioral diversity:				 0.37
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1265588
--- Timings ---
Current time: 1529615631276 milliseconds
Total Time:           3.3 seconds
Initialization:       0.1 seconds,  3.4%
Reproduction:         0.5 seconds, 16.5%
Fitness Testing:      2.6 seconds, 80.1%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 16409.926800000012
Test mean error for best: 8.20496
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 85            
Correct output: 158.3808965757 | Program output: 153           
Correct output: 114.9822216852 | Program output: 109           
Correct output: -73.2417159775 | Program output: -78           
Correct output: -46.7487881284 | Program output: -51           
Correct output: 17.2020579278  | Program output: 13            
Correct output: -26.2914451352 | Program output: -32           
Correct output: -28.0690930702 | Program output: -33           
Correct output: -131.222093374 | Program output: -136          
Correct output: -89.9171675317 | Program output: -94           
Correct output: 142.5271218035 | Program output: 137           
Correct output: -38.4620782332 | Program output: -43           
Correct output: 23.7219549711  | Program output: 18            
Correct output: 27.5055885525  | Program output: 22            
Correct output: -9.6757274332  | Program output: -15           
Correct output: 19.9870160592  | Program output: 14            
Correct output: 19.6073368825  | Program output: 15            
Correct output: -9.7006438671  | Program output: -14           
Correct output: 30.1057413444  | Program output: 25            
Correct output: 72.9269281064  | Program output: 68            
Correct output: 10.3524641447  | Program output: 5             
Correct output: 18.9681003325  | Program output: 13            
Correct output: 67.2227499194  | Program output: 62            
Correct output: -58.0718231545 | Program output: -63           
Correct output: 6.4353776154   | Program output: 1             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub integer_sub integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [5.3075 11 5.3809 11 5.9822 12 4.7583 12 4.2512 12 4.2021 12 5.7086 11 4.9309 12 4.7779 11 4.0828 12 5.5271 12 4.5379 11 5.722 12 5.5056 11 5.3243 11 5.987 12 4.6073 11 4.2994 11 5.1057 12 4.9269 11 5.3525 12 5.9681 11 5.2227 11 4.9282 12 5.4354 11]
Total: 414.8325
Mean: 8.29665
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 6093.656982699999
Median total errors in population: 1630.78625
Error averages by case: (225.28036669999886 9.97 285.463995999998 10.936 262.0343444999996 11.0 245.0025857000015 10.843 228.34306070000028 10.786 211.5709400999995 11.658 214.2648610999992 12.734 220.79193279999842 10.629 282.17242790000296 10.641 252.6086324999991 10.607 279.578976300002 10.907 232.4335543000011 10.601 227.19481640000046 10.201 229.92556440000078 10.336 209.4016222 11.979 192.46983419999867 9.785 215.14411370000033 12.256 232.99049040000082 9.681 213.4508577999986 10.051 246.0205789999995 11.642 218.51031660000052 9.988 206.04771829999956 10.089 229.28018390000184 10.35 239.02327590000112 10.387 226.8059312999989 9.789)
Error minima by case: (0.0 0 4.3809 3 5.9822 2 2.2417 2 2.2512 2 0.2021 8 1.5032 9 0.9309 2 4.7779 2 0.4123 2 5.5271 3 0.4621 2 1.0135 2 0.8221 2 0.3243 7 0.499 1 0.8713 8 0.2994 1 3.4222 2 0.0731 8 1.4382 2 0.232 1 0.1603 1 0.7819 2 0.4145 2)
Average genome size in population (length): 59.164
Average program size in population (points): 60.164
Average percent parens in population: 0.021
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.489
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.775
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.775
Total error diversity:				 0.297
Error (vector) diversity:			 0.32
Behavioral diversity:				 0.341
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2751189
--- Timings ---
Current time: 1529615636562 milliseconds
Total Time:           8.9 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         3.7 seconds, 41.5%
Fitness Testing:      4.4 seconds, 48.8%
Report:               0.8 seconds,  8.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 16409.926800000012
Test mean error for best: 8.20496
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 85            
Correct output: 158.3808965757 | Program output: 153           
Correct output: 114.9822216852 | Program output: 109           
Correct output: -73.2417159775 | Program output: -78           
Correct output: -46.7487881284 | Program output: -51           
Correct output: 17.2020579278  | Program output: 13            
Correct output: -26.2914451352 | Program output: -32           
Correct output: -28.0690930702 | Program output: -33           
Correct output: -131.222093374 | Program output: -136          
Correct output: -89.9171675317 | Program output: -94           
Correct output: 142.5271218035 | Program output: 137           
Correct output: -38.4620782332 | Program output: -43           
Correct output: 23.7219549711  | Program output: 18            
Correct output: 27.5055885525  | Program output: 22            
Correct output: -9.6757274332  | Program output: -15           
Correct output: 19.9870160592  | Program output: 14            
Correct output: 19.6073368825  | Program output: 15            
Correct output: -9.7006438671  | Program output: -14           
Correct output: 30.1057413444  | Program output: 25            
Correct output: 72.9269281064  | Program output: 68            
Correct output: 10.3524641447  | Program output: 5             
Correct output: 18.9681003325  | Program output: 13            
Correct output: 67.2227499194  | Program output: 62            
Correct output: -58.0718231545 | Program output: -63           
Correct output: 6.4353776154   | Program output: 1             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub integer_sub integer_add print_integer float_inc)
Errors: [5.3075 11 5.3809 11 5.9822 12 4.7583 12 4.2512 12 4.2021 12 5.7086 11 4.9309 12 4.7779 11 4.0828 12 5.5271 12 4.5379 11 5.722 12 5.5056 11 5.3243 11 5.987 12 4.6073 11 4.2994 11 5.1057 12 4.9269 11 5.3525 12 5.9681 11 5.2227 11 4.9282 12 5.4354 11]
Total: 414.8325
Mean: 8.29665
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 4891.6709405
Median total errors in population: 1202.0
Error averages by case: (161.39461519999972 6.071 224.15611929999957 6.967 220.35018559999986 6.592 178.60422319999998 6.528 170.34348929999993 6.478 172.9208186999998 11.145 182.76971709999975 12.852 164.62071699999953 6.478 202.63809600000033 6.451 179.75898299999974 6.435 228.03726270000053 7.004 183.9479714000001 6.399 206.06056740000025 6.262 201.7392486000001 6.291 174.65498460000015 11.937 153.43078209999953 5.499 181.46135630000018 12.768 211.72472650000012 5.467 165.42135639999992 6.239 207.3179066999999 11.242 192.87551100000022 6.199 160.43599539999994 6.166 172.15398740000037 6.272 195.7681440000005 6.357 212.90217559999977 6.083)
Error minima by case: (0.0 0 5.3809 2 5.9822 2 4.7583 2 4.2512 2 0.0921 8 5.7086 9 4.9309 2 4.7779 2 4.0828 2 5.5271 2 3.4621 2 1.7027 2 3.971 2 5.3243 7 1.2509 1 0.8713 8 4.2994 1 1.3708 2 1.0731 8 1.4382 2 0.232 1 5.2227 1 3.0718 1 0.4354 2)
Average genome size in population (length): 57.799
Average program size in population (points): 58.799
Average percent parens in population: 0.020
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.0075
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.704
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.704
Total error diversity:				 0.15
Error (vector) diversity:			 0.16
Behavioral diversity:				 0.174
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4202614
--- Timings ---
Current time: 1529615640146 milliseconds
Total Time:          12.6 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.3 seconds, 41.9%
Fitness Testing:      6.0 seconds, 47.9%
Report:               1.2 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 15371.926800000012
Test mean error for best: 7.68596
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 86            
Correct output: 158.3808965757 | Program output: 154           
Correct output: 114.9822216852 | Program output: 110           
Correct output: -73.2417159775 | Program output: -77           
Correct output: -46.7487881284 | Program output: -50           
Correct output: 17.2020579278  | Program output: 14            
Correct output: -26.2914451352 | Program output: -31           
Correct output: -28.0690930702 | Program output: -32           
Correct output: -131.222093374 | Program output: -135          
Correct output: -89.9171675317 | Program output: -93           
Correct output: 142.5271218035 | Program output: 138           
Correct output: -38.4620782332 | Program output: -42           
Correct output: 23.7219549711  | Program output: 19            
Correct output: 27.5055885525  | Program output: 23            
Correct output: -9.6757274332  | Program output: -14           
Correct output: 19.9870160592  | Program output: 15            
Correct output: 19.6073368825  | Program output: 16            
Correct output: -9.7006438671  | Program output: -13           
Correct output: 30.1057413444  | Program output: 26            
Correct output: 72.9269281064  | Program output: 69            
Correct output: 10.3524641447  | Program output: 6             
Correct output: 18.9681003325  | Program output: 14            
Correct output: 67.2227499194  | Program output: 63            
Correct output: -58.0718231545 | Program output: -62           
Correct output: 6.4353776154   | Program output: 2             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_min} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction float_flush} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_swap} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_min integer_sub float_dec float_mult integer_mult float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub integer_sub integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan float_flush integer_mult float_mod integer_swap integer_pop integer_mod float_tan integer_min float_tan in1)
Errors: [4.3075 12 4.3809 12 4.9822 12 3.7583 11 3.2512 13 3.2021 12 4.7086 12 3.9309 11 3.7779 11 3.0828 11 4.5271 12 3.5379 11 4.722 11 4.5056 12 4.3243 11 4.987 11 3.6073 11 3.2994 11 4.1057 13 3.9269 11 4.3525 12 4.9681 12 4.2227 12 3.9282 12 4.4354 12]
Total: 393.8325
Mean: 7.87665
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3614.1550473000007
Median total errors in population: 1177.0
Error averages by case: (98.0731737 3.406 167.1826632 4.494 171.81137869999998 3.786 125.07509260000003 3.72 120.17853569999998 3.687 130.48044359999992 10.62 135.6953797 12.45 116.02188590000004 3.698 142.25976659999998 3.683 121.20910770000002 3.696 176.10339420000022 4.532 137.9091334 3.67 162.85829739999988 3.616 156.9585757000001 3.602 129.23876169999994 11.417 101.59579199999995 2.713 139.62701570000007 12.38 176.54191679999997 2.733 111.6913562 3.613 164.41759120000006 10.644 148.4800886999999 3.611 108.09193209999994 3.495 118.77065669999993 3.505 150.47125469999995 3.634 173.4768534 3.53)
Error minima by case: (0.0 0 4.3809 3 4.9822 2 3.2417 2 3.2512 2 0.1362 8 4.7086 10 3.0691 2 3.7779 2 3.0828 2 4.5271 2 3.5379 2 4.722 2 3.4944 2 4.3243 7 4.987 1 3.6073 10 3.2994 1 0.8943 2 2.0731 9 4.3525 2 4.9681 1 4.2227 1 3.9282 1 4.4354 2)
Average genome size in population (length): 48.507
Average program size in population (points): 49.507
Average percent parens in population: 0.023
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.48
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 57
Genome diversity (% unique Plush genomes):	 0.633
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 57
Syntactic diversity (% unique Push programs):	 0.633
Total error diversity:				 0.06
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5421340
--- Timings ---
Current time: 1529615643838 milliseconds
Total Time:          16.1 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.9 seconds, 43.0%
Fitness Testing:      7.6 seconds, 46.8%
Report:               1.5 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 15371.926800000012
Test mean error for best: 7.68596
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 86            
Correct output: 158.3808965757 | Program output: 154           
Correct output: 114.9822216852 | Program output: 110           
Correct output: -73.2417159775 | Program output: -77           
Correct output: -46.7487881284 | Program output: -50           
Correct output: 17.2020579278  | Program output: 14            
Correct output: -26.2914451352 | Program output: -31           
Correct output: -28.0690930702 | Program output: -32           
Correct output: -131.222093374 | Program output: -135          
Correct output: -89.9171675317 | Program output: -93           
Correct output: 142.5271218035 | Program output: 138           
Correct output: -38.4620782332 | Program output: -42           
Correct output: 23.7219549711  | Program output: 19            
Correct output: 27.5055885525  | Program output: 23            
Correct output: -9.6757274332  | Program output: -14           
Correct output: 19.9870160592  | Program output: 15            
Correct output: 19.6073368825  | Program output: 16            
Correct output: -9.7006438671  | Program output: -13           
Correct output: 30.1057413444  | Program output: 26            
Correct output: 72.9269281064  | Program output: 69            
Correct output: 10.3524641447  | Program output: 6             
Correct output: 18.9681003325  | Program output: 14            
Correct output: 67.2227499194  | Program output: 63            
Correct output: -58.0718231545 | Program output: -62           
Correct output: 6.4353776154   | Program output: 2             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_min} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction float_flush} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_swap} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_min integer_sub float_dec float_mult integer_mult float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub integer_sub integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan float_flush integer_mult float_mod integer_swap integer_pop integer_mod float_tan integer_min float_tan in1)
Errors: [4.3075 12 4.3809 12 4.9822 12 3.7583 11 3.2512 13 3.2021 12 4.7086 12 3.9309 11 3.7779 11 3.0828 11 4.5271 12 3.5379 11 4.722 11 4.5056 12 4.3243 11 4.987 11 3.6073 11 3.2994 11 4.1057 13 3.9269 11 4.3525 12 4.9681 12 4.2227 12 3.9282 12 4.4354 12]
Total: 393.8325
Mean: 7.87665
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3896.901016
Median total errors in population: 1177.0
Error averages by case: (114.46199759999986 4.589 171.29672489999982 5.603 176.41362919999983 5.108 141.61186920000003 5.026 137.57498239999987 5.021 141.95375139999965 10.843 146.65991850000003 12.307 132.64568700000038 5.028 153.28935979999991 4.93 136.47543550000012 5.035 179.9399379000007 5.734 151.74499299999974 4.89 166.4015398999999 4.921 161.3100294000003 4.796 140.79945479999964 11.373 117.70069069999963 4.162 149.9687475000004 12.143 184.70848799999987 4.045 123.49095550000001 4.923 170.95636960000002 10.737 154.13934639999974 4.917 121.18254799999978 4.688 131.2359185999998 4.685 160.3920137999996 5.007 175.34762739999982 4.688)
Error minima by case: (0.0 0 2.6191 3 4.9822 2 3.7583 2 1.7488 2 0.0921 9 4.7086 10 2.0691 2 3.7779 2 3.0828 2 4.5271 2 3.5379 1 4.722 1 1.4944 2 4.3243 9 4.987 1 3.6073 10 3.2994 1 4.1057 1 1.0731 10 4.3525 2 3.0319 1 4.2227 1 1.9282 1 4.4354 2)
Average genome size in population (length): 48.797
Average program size in population (points): 49.797
Average percent parens in population: 0.023
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 5.9555
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.738
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.738
Total error diversity:				 0.053
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6645730
--- Timings ---
Current time: 1529615647382 milliseconds
Total Time:          19.8 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.7 seconds, 44.0%
Fitness Testing:      8.9 seconds, 45.2%
Report:               2.0 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 14358.926800000007
Test mean error for best: 7.17946
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 87            
Correct output: 158.3808965757 | Program output: 155           
Correct output: 114.9822216852 | Program output: 111           
Correct output: -73.2417159775 | Program output: -76           
Correct output: -46.7487881284 | Program output: -49           
Correct output: 17.2020579278  | Program output: 15            
Correct output: -26.2914451352 | Program output: -30           
Correct output: -28.0690930702 | Program output: -31           
Correct output: -131.222093374 | Program output: -134          
Correct output: -89.9171675317 | Program output: -92           
Correct output: 142.5271218035 | Program output: 139           
Correct output: -38.4620782332 | Program output: -41           
Correct output: 23.7219549711  | Program output: 20            
Correct output: 27.5055885525  | Program output: 24            
Correct output: -9.6757274332  | Program output: -13           
Correct output: 19.9870160592  | Program output: 16            
Correct output: 19.6073368825  | Program output: 17            
Correct output: -9.7006438671  | Program output: -12           
Correct output: 30.1057413444  | Program output: 27            
Correct output: 72.9269281064  | Program output: 70            
Correct output: 10.3524641447  | Program output: 7             
Correct output: 18.9681003325  | Program output: 15            
Correct output: 67.2227499194  | Program output: 64            
Correct output: -58.0718231545 | Program output: -61           
Correct output: 6.4353776154   | Program output: 3             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_mult integer_mult float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub integer_sub integer_add print_integer float_inc)
Errors: [3.3075 12 3.3809 11 3.9822 11 2.7583 12 2.2512 12 2.2021 11 3.7086 12 2.9309 12 2.7779 10 2.0828 12 3.5271 12 2.5379 12 3.722 12 3.5056 12 3.3243 11 3.987 11 2.6073 11 2.2994 12 3.1057 12 2.9269 11 3.3525 12 3.9681 11 3.2227 11 2.9282 12 3.4354 11]
Total: 365.8325
Mean: 7.31665
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2936.284137099999
Median total errors in population: 414.8325
Error averages by case: (81.71265000000041 8.438 123.22234900000039 8.999 121.66423099999928 9.215 108.65541560000058 9.055 103.8066383999995 9.137 99.84556969999942 11.505 107.70579679999943 11.796 99.21601060000074 9.076 117.77127490000032 8.603 107.07193520000014 9.038 124.2214768000016 9.435 114.57370069999938 8.567 116.43571799999907 8.933 115.7363952000004 8.573 103.85958269999885 11.248 81.02913499999984 8.626 105.11344420000128 11.596 128.33298140000136 8.087 93.84106970000003 9.015 116.11484470000119 10.988 110.03394749999897 8.981 89.17725249999927 8.474 97.81017889999926 8.499 116.32669519999924 9.078 119.64084340000076 8.403)
Error minima by case: (0.0 0 3.3809 2 3.9822 2 2.7583 2 2.2512 2 2.2021 10 3.7086 10 0.0691 2 2.7779 2 2.0828 2 3.5271 2 2.5379 2 3.722 2 3.5056 2 3.3243 10 3.987 1 2.6073 10 2.2994 1 3.1057 2 0.9269 10 3.3525 2 1.0319 1 3.2227 1 2.9282 1 3.4354 2)
Average genome size in population (length): 56.995
Average program size in population (points): 57.995
Average percent parens in population: 0.019
Minimum age in population: 5.0
Maximum age in population: 9.1875
Average age in population: 7.3800625
Median age in population: 7.4375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 55
Genome diversity (% unique Plush genomes):	 0.747
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.747
Total error diversity:				 0.074
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 8072819
--- Timings ---
Current time: 1529615650668 milliseconds
Total Time:          23.1 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.3 seconds, 44.4%
Fitness Testing:     10.3 seconds, 44.6%
Report:               2.4 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 13327.926800000005
Test mean error for best: 6.66396
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 88            
Correct output: 158.3808965757 | Program output: 156           
Correct output: 114.9822216852 | Program output: 112           
Correct output: -73.2417159775 | Program output: -75           
Correct output: -46.7487881284 | Program output: -48           
Correct output: 17.2020579278  | Program output: 16            
Correct output: -26.2914451352 | Program output: -29           
Correct output: -28.0690930702 | Program output: -30           
Correct output: -131.222093374 | Program output: -133          
Correct output: -89.9171675317 | Program output: -91           
Correct output: 142.5271218035 | Program output: 140           
Correct output: -38.4620782332 | Program output: -40           
Correct output: 23.7219549711  | Program output: 21            
Correct output: 27.5055885525  | Program output: 25            
Correct output: -9.6757274332  | Program output: -12           
Correct output: 19.9870160592  | Program output: 17            
Correct output: 19.6073368825  | Program output: 18            
Correct output: -9.7006438671  | Program output: -11           
Correct output: 30.1057413444  | Program output: 28            
Correct output: 72.9269281064  | Program output: 71            
Correct output: 10.3524641447  | Program output: 8             
Correct output: 18.9681003325  | Program output: 16            
Correct output: 67.2227499194  | Program output: 65            
Correct output: -58.0718231545 | Program output: -60           
Correct output: 6.4353776154   | Program output: 4             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_max} {:instruction tag_integer_523} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_swap} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (integer_max float_sin float_dup_times float_flush float_max tag_integer_523 float_yankdup float_frominteger print_integer integer_swap print_float float_stackdepth integer_mod float_shove float_shove integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_sub float_mult integer_mult float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [2.3075 12 2.3809 11 2.9822 11 1.7583 11 1.2512 11 1.2021 12 2.7086 11 1.9309 11 1.7779 10 1.0828 11 2.5271 11 1.5379 11 2.722 11 2.5056 11 2.3243 11 2.987 11 1.6073 11 1.2994 11 2.1057 13 1.9269 11 2.3525 13 2.9681 11 2.2227 12 1.9282 12 2.4354 11]
Total: 334.83250000000004
Mean: 6.69665
Genome size: 75
Size: 76
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 1719.3675156999996
Median total errors in population: 414.8325
Error averages by case: (49.14201960000078 11.305 71.22357929999932 11.495 68.0318947999991 12.062 64.89780600000073 11.754 58.22323519999942 12.19 47.5801867000005 11.98 55.063198399999756 11.576 49.04811759999971 11.792 71.8334140000004 11.144 63.687310399999014 11.715 70.73429420000036 12.042 63.276767500000894 11.177 59.7241936000008 11.638 58.9760507999991 11.363 53.42463060000015 11.158 37.238291600000395 11.638 51.48219000000086 11.207 66.93670560000125 10.974 46.20049130000005 12.073 56.947406699999256 11.181 53.01438710000055 11.829 42.73709429999921 11.29 52.482415599999165 11.313 60.49589400000038 11.954 57.94394080000047 11.172)
Error minima by case: (0.0 0 2.3809 3 2.9822 2 1.7583 2 1.2512 2 1.2021 10 2.7086 10 0.0691 2 1.7779 2 1.0828 2 2.5271 3 0.5379 2 2.722 2 2.5056 2 2.3243 10 2.987 1 1.6073 10 1.2994 1 2.1057 2 0.0731 10 2.3525 2 1.0319 1 2.2227 1 1.9282 2 2.4354 2)
Average genome size in population (length): 63.088
Average program size in population (points): 64.088
Average percent parens in population: 0.017
Minimum age in population: 6.875
Maximum age in population: 10.71875
Average age in population: 8.82303125
Median age in population: 8.84375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 48
Genome diversity (% unique Plush genomes):	 0.751
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 48
Syntactic diversity (% unique Push programs):	 0.751
Total error diversity:				 0.077
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9650844
--- Timings ---
Current time: 1529615654115 milliseconds
Total Time:          26.5 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.9 seconds, 45.0%
Fitness Testing:     11.7 seconds, 44.1%
Report:               2.8 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 13338.926800000005
Test mean error for best: 6.66946
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 88            
Correct output: 158.3808965757 | Program output: 156           
Correct output: 114.9822216852 | Program output: 112           
Correct output: -73.2417159775 | Program output: -75           
Correct output: -46.7487881284 | Program output: -48           
Correct output: 17.2020579278  | Program output: 16            
Correct output: -26.2914451352 | Program output: -29           
Correct output: -28.0690930702 | Program output: -30           
Correct output: -131.222093374 | Program output: -133          
Correct output: -89.9171675317 | Program output: -91           
Correct output: 142.5271218035 | Program output: 140           
Correct output: -38.4620782332 | Program output: -40           
Correct output: 23.7219549711  | Program output: 21            
Correct output: 27.5055885525  | Program output: 25            
Correct output: -9.6757274332  | Program output: -12           
Correct output: 19.9870160592  | Program output: 17            
Correct output: 19.6073368825  | Program output: 18            
Correct output: -9.7006438671  | Program output: -11           
Correct output: 30.1057413444  | Program output: 28            
Correct output: 72.9269281064  | Program output: 71            
Correct output: 10.3524641447  | Program output: 8             
Correct output: 18.9681003325  | Program output: 16            
Correct output: 67.2227499194  | Program output: 65            
Correct output: -58.0718231545 | Program output: -60           
Correct output: 6.4353776154   | Program output: 4             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub integer_sub integer_add print_integer tagged_80 float_tan float_sub integer_sub integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [2.3075 12 2.3809 11 2.9822 11 1.7583 11 1.2512 11 1.2021 12 2.7086 11 1.9309 11 1.7779 10 1.0828 11 2.5271 11 1.5379 11 2.722 11 2.5056 11 2.3243 11 2.987 11 1.6073 11 1.2994 11 2.1057 13 1.9269 11 2.3525 13 2.9681 11 2.2227 12 1.9282 12 2.4354 11]
Total: 334.83250000000004
Mean: 6.69665
Genome size: 80
Size: 81
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 1976.3250580999995
Median total errors in population: 393.8325
Error averages by case: (61.682745000000985 11.867 76.82600689999892 11.93 74.063251499999 12.05 73.07527780000079 11.511 68.3682140999993 12.63 60.32477800000057 11.916 64.84488869999956 12.016 61.012311199999615 11.604 77.02520210000046 11.155 71.21578239999907 11.489 76.50355420000038 12.134 71.58530810000084 11.403 70.47364790000066 11.416 69.80175549999898 11.876 64.73294070000017 11.197 53.50283590000045 11.339 63.46883340000118 11.227 74.7634755000017 11.175 60.06280980000006 12.539 64.98646539999918 11.221 66.00671240000062 11.98 57.54477139999898 11.718 64.86609939999894 11.743 67.50147790000054 12.082 69.28191290000065 11.586)
Error minima by case: (1.0 4 1.6191 2 2.9822 3 1.7583 4 1.2512 4 1.2021 10 1.4785 10 0.2992 4 1.7779 3 1.0828 5 2.5271 4 1.5379 5 2.278 4 2.5056 3 2.3243 9 2.013 3 1.6073 10 0.2994 4 2.1057 4 0.0731 10 2.3525 3 2.0319 3 2.2227 3 0.0718 4 0.5646 3)
Average genome size in population (length): 63.942
Average program size in population (points): 64.942
Average percent parens in population: 0.016
Minimum age in population: 8.0
Maximum age in population: 12.296875
Average age in population: 10.27778125
Median age in population: 10.296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.07
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.076
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 11250194
--- Timings ---
Current time: 1529615657505 milliseconds
Total Time:          29.8 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.4 seconds, 44.8%
Fitness Testing:     13.1 seconds, 44.1%
Report:               3.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 13338.926800000005
Test mean error for best: 6.66946
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 88            
Correct output: 158.3808965757 | Program output: 156           
Correct output: 114.9822216852 | Program output: 112           
Correct output: -73.2417159775 | Program output: -75           
Correct output: -46.7487881284 | Program output: -48           
Correct output: 17.2020579278  | Program output: 16            
Correct output: -26.2914451352 | Program output: -29           
Correct output: -28.0690930702 | Program output: -30           
Correct output: -131.222093374 | Program output: -133          
Correct output: -89.9171675317 | Program output: -91           
Correct output: 142.5271218035 | Program output: 140           
Correct output: -38.4620782332 | Program output: -40           
Correct output: 23.7219549711  | Program output: 21            
Correct output: 27.5055885525  | Program output: 25            
Correct output: -9.6757274332  | Program output: -12           
Correct output: 19.9870160592  | Program output: 17            
Correct output: 19.6073368825  | Program output: 18            
Correct output: -9.7006438671  | Program output: -11           
Correct output: 30.1057413444  | Program output: 28            
Correct output: 72.9269281064  | Program output: 71            
Correct output: 10.3524641447  | Program output: 8             
Correct output: 18.9681003325  | Program output: 16            
Correct output: 67.2227499194  | Program output: 65            
Correct output: -58.0718231545 | Program output: -60           
Correct output: 6.4353776154   | Program output: 4             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub integer_sub integer_add print_integer tagged_80 float_tan float_sub integer_sub integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [2.3075 12 2.3809 11 2.9822 11 1.7583 11 1.2512 11 1.2021 12 2.7086 11 1.9309 11 1.7779 10 1.0828 11 2.5271 11 1.5379 11 2.722 11 2.5056 11 2.3243 11 2.987 11 1.6073 11 1.2994 11 2.1057 13 1.9269 11 2.3525 13 2.9681 11 2.2227 12 1.9282 12 2.4354 11]
Total: 334.83250000000004
Mean: 6.69665
Genome size: 80
Size: 81
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 1946.715489699999
Median total errors in population: 365.8325
Error averages by case: (58.155898900001155 11.993 73.74074719999898 11.666 70.40424289999902 11.681 71.78136510000077 11.732 67.01095519999933 12.331 58.85293250000081 11.597 67.2170501999993 12.07 60.85256479999966 11.793 76.24786040000048 10.758 69.37072439999919 11.688 72.52676680000039 12.095 72.4843200000006 11.739 70.00278990000025 11.619 69.25247929999922 11.96 66.84670389999991 11.165 51.26286090000057 11.204 61.6089099000014 11.23 76.5225200000017 11.545 57.39254030000005 12.332 63.45396719999914 11.219 65.29770340000064 12.022 55.10145289999894 11.461 60.929671299998965 11.548 69.45339140000011 12.071 69.08307090000088 11.343)
Error minima by case: (0.3075 3 2.3809 5 2.9822 4 1.7583 4 1.2512 4 0.2021 10 2.7086 10 1.9309 5 1.7779 5 1.0828 5 2.5271 5 1.5379 4 2.722 5 2.5056 5 2.3243 10 0.987 2 1.6073 10 1.2994 3 2.1057 5 0.0731 10 2.3525 5 1.0319 4 1.2227 4 0.0718 5 1.4354 5)
Average genome size in population (length): 64.263
Average program size in population (points): 65.263
Average percent parens in population: 0.016
Minimum age in population: 9.46875
Maximum age in population: 14.1953125
Average age in population: 11.8733359375
Median age in population: 11.8984375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 47
Genome diversity (% unique Plush genomes):	 0.767
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.767
Total error diversity:				 0.07
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.076
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 12857319
--- Timings ---
Current time: 1529615661168 milliseconds
Total Time:          33.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.0 seconds, 44.8%
Fitness Testing:     14.6 seconds, 43.8%
Report:               3.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 12252.926799999992
Test mean error for best: 6.12646
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 89            
Correct output: 158.3808965757 | Program output: 157           
Correct output: 114.9822216852 | Program output: 113           
Correct output: -73.2417159775 | Program output: -74           
Correct output: -46.7487881284 | Program output: -47           
Correct output: 17.2020579278  | Program output: 17            
Correct output: -26.2914451352 | Program output: -28           
Correct output: -28.0690930702 | Program output: -29           
Correct output: -131.222093374 | Program output: -132          
Correct output: -89.9171675317 | Program output: -90           
Correct output: 142.5271218035 | Program output: 141           
Correct output: -38.4620782332 | Program output: -39           
Correct output: 23.7219549711  | Program output: 22            
Correct output: 27.5055885525  | Program output: 26            
Correct output: -9.6757274332  | Program output: -11           
Correct output: 19.9870160592  | Program output: 18            
Correct output: 19.6073368825  | Program output: 19            
Correct output: -9.7006438671  | Program output: -10           
Correct output: 30.1057413444  | Program output: 29            
Correct output: 72.9269281064  | Program output: 72            
Correct output: 10.3524641447  | Program output: 9             
Correct output: 18.9681003325  | Program output: 17            
Correct output: 67.2227499194  | Program output: 66            
Correct output: -58.0718231545 | Program output: -59           
Correct output: 6.4353776154   | Program output: 5             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_max} {:instruction tag_integer_523} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_swap} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_mod} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_tan} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction float_cos} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (integer_max float_sin float_dup_times float_flush float_max tag_integer_523 float_yankdup float_frominteger print_integer integer_swap print_float float_stackdepth integer_mod float_shove float_shove integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_mod integer_sub float_sub float_mult integer_mult float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add float_tan float_sub integer_sub integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_fromfloat integer_yankdup integer_stackdepth float_div float_shove float_tan float_cos integer_swap in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [1.3075 12 1.3809 11 1.9822 12 0.7583 11 0.2512 11 0.2021 11 1.7086 12 0.9309 11 0.7779 10 0.0828 12 1.5271 11 0.5379 12 1.722 11 1.5056 12 1.3243 12 1.987 11 0.6073 11 0.2994 11 1.1057 13 0.9269 11 1.3525 13 1.9681 12 1.2227 12 0.9282 12 1.4354 11]
Total: 315.8325
Mean: 6.31665
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 1775.7933344999985
Median total errors in population: 365.8325
Error averages by case: (54.672345000000675 11.966 63.61757769999859 11.324 60.71568809999897 11.357 67.6978724000008 11.736 63.98149119999933 11.791 50.08039440000022 11.561 62.556766199999764 11.808 60.6812479999996 11.797 70.56308800000046 10.415 66.59794719999894 11.705 62.277796099999435 11.802 66.31238120000083 11.745 59.55531180000098 11.631 58.94096779999903 11.702 62.04248810000018 11.151 47.85423300000052 11.15 52.378081200000835 11.217 69.28360380000136 11.59 51.70621570000005 12.301 53.44279709999918 11.197 55.18429740000066 12.26 50.24052109999894 11.155 53.65950549999899 11.494 64.55101680000043 12.062 58.227699700000365 11.055)
Error minima by case: (0.3075 2 1.3809 3 1.9822 3 0.7583 2 0.2512 2 0.2021 10 1.7086 9 0.9309 2 0.7779 3 0.0828 2 1.5271 2 0.5379 2 1.722 2 1.5056 2 1.3243 10 1.987 1 0.6073 9 0.2994 1 1.1057 2 0.9269 10 1.3525 2 1.9681 2 1.2227 2 0.9282 1 0.5646 2)
Average genome size in population (length): 65.124
Average program size in population (points): 66.124
Average percent parens in population: 0.016
Minimum age in population: 10.875
Maximum age in population: 15.74609375
Average age in population: 13.48244140625
Median age in population: 13.509765625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.764
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.764
Total error diversity:				 0.061
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 14486169
--- Timings ---
Current time: 1529615664852 milliseconds
Total Time:          37.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.5 seconds, 44.4%
Fitness Testing:     16.3 seconds, 43.8%
Report:               4.2 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction print_integer} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer print_integer integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 77
Size: 78
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2378.4075864999963
Median total errors in population: 334.83250000000004
Error averages by case: (73.65733250000032 11.982 89.21564850000001 11.398 86.24964179999917 11.446 93.43564000000077 11.314 88.41095999999932 11.379 74.44154040000011 11.974 84.5599189999994 11.435 81.53718670000066 11.398 97.8530814000004 10.49 93.44931040000007 11.311 88.06415930000128 11.419 91.16785789999972 11.354 87.08591099999938 11.192 86.3792484000002 11.308 83.95494879999885 11.212 63.923305000000475 11.174 77.3462741000013 11.223 94.29911880000158 11.137 76.17872210000006 12.711 76.78686920000014 11.253 81.00401899999972 12.671 72.05864429999909 11.222 78.66992209999913 11.941 87.57175559999945 12.086 84.01757020000078 11.059)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.2512 4 0.2021 10 0.7086 9 0.0691 5 0.2221 5 0.0828 5 0.5271 5 0.4621 4 0.722 4 0.5056 4 0.3243 9 0.987 2 0.3927 9 0.2994 3 0.1057 4 0.0731 10 0.3525 3 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 65.355
Average program size in population (points): 66.355
Average percent parens in population: 0.016
Minimum age in population: 12.4765625
Maximum age in population: 16.9609375
Average age in population: 15.05171484375
Median age in population: 15.0859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.782
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.782
Total error diversity:				 0.071
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 16120994
--- Timings ---
Current time: 1529615668545 milliseconds
Total Time:          40.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.0 seconds, 44.2%
Fitness Testing:     18.0 seconds, 44.0%
Report:               4.7 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_yankdup float_mod in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2024.2476351999976
Median total errors in population: 334.83250000000004
Error averages by case: (63.74758400000118 11.973 78.87420129999987 11.359 76.32160879999914 11.471 72.27413270000076 11.23 67.53892159999938 11.277 65.0524359000007 11.898 68.1117617999995 11.416 61.82870689999966 11.317 76.83107810000044 10.417 70.33899199999944 11.278 77.74087500000091 11.341 72.20525880000024 11.35 75.09339499999987 11.119 74.37830759999977 11.337 66.52240969999976 11.265 55.88923300000042 11.155 67.59808670000126 11.227 75.70073560000152 11.073 63.842141900000044 12.712 64.66090889999926 11.245 71.07088199999973 12.679 62.01380189999906 11.265 67.63460899999906 11.934 68.68204799999995 12.02 73.89451900000068 11.043)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.2512 2 0.2021 9 0.7086 9 0.0691 2 0.2221 2 0.0828 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 65.724
Average program size in population (points): 66.724
Average percent parens in population: 0.016
Minimum age in population: 14.08984375
Maximum age in population: 18.6513671875
Average age in population: 16.5924052734375
Median age in population: 16.630859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.067
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 17765044
--- Timings ---
Current time: 1529615671838 milliseconds
Total Time:          44.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.5 seconds, 44.0%
Fitness Testing:     19.4 seconds, 43.8%
Report:               5.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_yankdup float_mod in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2173.115722799997
Median total errors in population: 334.83250000000004
Error averages by case: (66.59120500000081 11.841 81.94801939999935 11.388 79.98486139999903 11.691 79.66134730000047 11.275 76.29735619999958 11.302 70.2858549000002 11.585 74.72149619999941 11.772 69.54870939999988 11.326 83.30615670000022 10.457 78.58580159999968 11.524 81.36135720000073 11.35 79.76722270000012 11.578 80.69843799999991 11.143 79.91786239999968 11.531 74.96708949999955 11.625 60.74737000000058 11.189 73.2991072000008 11.379 83.307287000001 11.085 68.87086880000005 12.474 70.50183989999972 11.405 76.85253999999973 12.44 66.57395849999897 11.503 72.06274089999897 11.833 75.25136220000017 11.92 80.33287040000071 11.057)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 10 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 4 0.1057 4 0.0731 10 0.3525 3 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 65.306
Average program size in population (points): 66.306
Average percent parens in population: 0.016
Minimum age in population: 15.55859375
Maximum age in population: 20.017578125
Average age in population: 18.23175341796875
Median age in population: 18.3291015625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.069
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 19398169
--- Timings ---
Current time: 1529615675149 milliseconds
Total Time:          47.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.0 seconds, 44.1%
Fitness Testing:     20.8 seconds, 43.8%
Report:               5.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_add} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction float_frominteger} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction float_cos})
Best program: (float_mult float_dec float_dup_times float_pop integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_yankdup float_mod in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_add float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub float_frominteger float_flush float_frominteger integer_dup_items integer_mod float_tan integer_min float_tan float_cos)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 1701.100314099998
Median total errors in population: 290.2267
Error averages by case: (52.73328450000056 11.391 61.69071509999871 11.355 59.9619756999991 11.598 59.06245289999972 11.243 56.47134560000024 11.251 53.32453409999996 11.233 55.865242499999916 12.075 54.16140790000026 11.297 63.16627539999975 10.413 59.285166800000496 11.409 61.22051309999945 11.311 58.96318979999977 11.464 59.56845490000086 11.113 58.880927799999135 11.451 54.91103610000016 11.951 45.744628000000404 11.158 53.824325299999764 11.778 63.3882997999996 11.051 51.12622640000005 11.599 55.43951590000028 11.806 57.230573500000595 11.607 50.1852591999991 11.402 53.01391359999906 11.421 57.463463999999924 11.438 59.55358620000035 11.049)
Error minima by case: (0.3075 3 0.3809 5 0.0178 5 0.2417 4 0.2512 4 0.2021 10 0.2914 11 0.0691 5 0.2221 6 0.0828 5 0.4729 4 0.4621 4 0.278 5 0.4944 5 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 5 0.0731 10 0.3525 5 0.0319 4 0.2227 4 0.0718 4 0.4354 5)
Average genome size in population (length): 63.4
Average program size in population (points): 64.4
Average percent parens in population: 0.016
Minimum age in population: 17.00390625
Maximum age in population: 21.603271484375
Average age in population: 19.85638061523438
Median age in population: 19.8958740234375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 73
Genome diversity (% unique Plush genomes):	 0.754
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 73
Syntactic diversity (% unique Push programs):	 0.754
Total error diversity:				 0.052
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 20984119
--- Timings ---
Current time: 1529615678562 milliseconds
Total Time:          50.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.5 seconds, 44.3%
Fitness Testing:     22.2 seconds, 43.6%
Report:               6.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_max} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_inc} {:instruction tag_integer_175} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction float_inc})
Best program: (integer_max float_rot float_dup_times float_flush float_max float_mult integer_inc integer_pop float_flush integer_inc tag_integer_175 in1 in2 float_min float_dec integer_sub float_sub float_mult integer_mult float_inc integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2154.895799
Median total errors in population: 290.2267
Error averages by case: (68.50391500000042 11.193 78.07609539999949 11.402 76.23373079999915 11.434 77.80772519999931 11.271 75.29984160000058 11.289 70.26086069999991 11.236 76.14857579999948 12.128 71.46308439999964 11.33 81.30989219999948 10.463 77.31288760000054 11.212 77.50166100000058 11.336 78.93442339999991 11.299 79.29827199999988 11.114 78.42634559999973 11.26 75.70954929999934 11.982 64.61427400000046 11.177 71.5932417999989 12.01 83.51025239999859 11.066 68.29102320000005 11.216 72.5185823 12.033 76.28853999999971 11.2 67.17924559999912 11.23 69.7280980999991 11.205 76.58111740000027 11.268 78.92656420000071 11.024)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 61.349
Average program size in population (points): 62.349
Average percent parens in population: 0.017
Minimum age in population: 18.51806640625
Maximum age in population: 23.0394287109375
Average age in population: 21.30149914550781
Median age in population: 21.37506103515625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.782
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.782
Total error diversity:				 0.038
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 22518794
--- Timings ---
Current time: 1529615681691 milliseconds
Total Time:          54.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.1 seconds, 44.4%
Fitness Testing:     23.6 seconds, 43.5%
Report:               6.5 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_tan} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min})
Best program: (float_sin integer_dec print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_tan integer_mod float_shove float_swap integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush integer_mult integer_dec integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub integer_mod float_tan integer_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2220.3540337999993
Median total errors in population: 290.2267
Error averages by case: (66.30862150000085 11.168 80.16798409999967 11.356 79.63036969999905 11.375 84.07235069999925 11.238 82.52107360000066 11.263 71.3533379999997 11.217 79.8112284999995 12.104 75.44844909999965 11.297 87.21844689999935 10.417 84.34647360000022 11.183 80.31031850000092 11.294 84.97281700000019 11.254 80.33649869999964 11.111 78.84459799999985 11.224 80.94922409999886 11.987 63.07031950000049 11.142 74.87416839999877 12.005 87.80137049999851 11.054 68.82470170000005 11.176 71.5182850000003 12.033 76.94356499999986 11.166 67.65197239999902 11.198 72.84027199999896 11.189 81.10018920000076 11.243 76.73039810000066 11.013)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 9 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 60.633
Average program size in population (points): 61.633
Average percent parens in population: 0.017
Minimum age in population: 19.6826171875
Maximum age in population: 24.936279296875
Average age in population: 22.76225042724609
Median age in population: 22.818359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.834
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.834
Total error diversity:				 0.047
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 24035294
--- Timings ---
Current time: 1529615684868 milliseconds
Total Time:          57.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.5 seconds, 44.5%
Fitness Testing:     24.9 seconds, 43.5%
Report:               6.7 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction float_add} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction float_mult} {:instruction float_swap} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_dup} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction float_swap} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop float_add integer_swap integer_stackdepth print_float float_sin integer_mod integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 float_mult float_swap integer_pop float_flush integer_dup tag_integer_222 float_tan integer_mod float_add integer_yank float_swap in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_dup_items in1 integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot integer_swap in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 76
Size: 77
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2129.7531962000003
Median total errors in population: 290.2267
Error averages by case: (64.58854480000106 11.165 78.39701559999949 11.347 78.53536559999915 11.367 80.82910899999929 11.218 77.67657600000055 11.257 67.53216289999928 11.205 76.70345639999937 12.099 72.13749900000003 11.29 86.32833529999947 10.405 82.43139080000049 11.176 79.51535000000077 11.285 80.01027909999988 11.244 75.06374520000018 11.086 74.5037891999993 11.216 75.12400819999964 11.965 56.83561320000047 11.151 68.91178069999873 11.991 83.25265959999852 11.045 65.00160810000006 11.172 69.46704460000042 12.029 72.21313520000014 11.153 62.478004699999076 11.193 67.96162379999909 11.171 79.11268660000026 11.226 72.67341260000082 11.013)
Error minima by case: (0.3075 3 0.3809 5 0.0178 5 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 3 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 59.79
Average program size in population (points): 60.79
Average percent parens in population: 0.017
Minimum age in population: 21.074462890625
Maximum age in population: 26.5330810546875
Average age in population: 24.2059921875
Median age in population: 24.22381591796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.847
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.847
Total error diversity:				 0.055
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 25530919
--- Timings ---
Current time: 1529615688164 milliseconds
Total Time:          60.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.0 seconds, 44.7%
Fitness Testing:     26.3 seconds, 43.4%
Report:               7.1 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_max} {:instruction tag_integer_523} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_swap} {:instruction print_float} {:instruction float_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction -17} {:instruction integer_min} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot})
Best program: (integer_max float_sin float_dup_times float_flush float_max tag_integer_523 float_yankdup float_frominteger print_integer integer_swap print_float float_stackdepth print_float float_stackdepth integer_mod float_shove float_shove integer_min -17 integer_min float_mult integer_inc integer_pop float_flush integer_mod float_yankdup float_mod in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2259.8166527
Median total errors in population: 290.2267
Error averages by case: (70.89789770000048 11.195 83.48032199999963 11.424 81.93658779999903 11.454 84.46530819999924 11.292 81.95460480000067 11.307 72.85073780000012 11.25 80.50040379999946 12.126 78.3010152999994 11.338 88.53411429999942 10.493 85.5810532000002 11.224 83.12119440000092 11.345 83.91872659999997 11.301 81.57869179999986 11.12 80.79701139999973 11.264 79.78671189999922 11.963 63.30570580000054 11.18 74.6507790999988 12.007 87.9276475999985 11.077 72.58668740000006 11.213 73.55579739999996 12.042 78.09809229999959 11.198 71.296005799999 11.231 73.64873489999898 11.213 82.50897380000039 11.271 80.97184760000071 11.034)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 11 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 3 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 9 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 4)
Average genome size in population (length): 59.203
Average program size in population (points): 60.203
Average percent parens in population: 0.017
Minimum age in population: 23.54216003417969
Maximum age in population: 27.80824279785156
Average age in population: 25.65432121276855
Median age in population: 25.68707275390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.864
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.864
Total error diversity:				 0.051
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 27012119
--- Timings ---
Current time: 1529615691450 milliseconds
Total Time:          63.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.6 seconds, 44.7%
Fitness Testing:     27.7 seconds, 43.3%
Report:               7.5 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction float_max} {:instruction tag_integer_523} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_dup} {:instruction in1} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_dec print_integer integer_max integer_pop float_max tag_integer_523 float_yankdup integer_shove integer_swap integer_stackdepth print_float float_stackdepth integer_mod in2 float_swap integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup float_dup in1 integer_sub float_frominteger float_flush integer_mod float_tan integer_min float_tan in1)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2347.1428095999995
Median total errors in population: 290.2267
Error averages by case: (70.5475900000003 11.192 87.23733130000008 11.398 86.70373709999892 11.431 88.11496689999917 11.269 85.43884160000074 11.302 79.35208530000064 11.236 81.11158779999937 12.1 79.06394619999894 11.328 92.63233639999935 10.47 89.38005319999984 11.19 87.1932307000016 11.336 88.20142340000054 11.274 87.5939643999992 11.108 86.82555590000031 11.253 81.41089459999877 11.949 63.01029750000054 11.176 81.82522489999855 11.989 92.19495299999828 11.056 75.59439990000004 11.193 76.85764309999963 12.044 84.403847899999 11.173 72.32018769999897 11.224 77.71066659999894 11.205 83.71447120000086 11.251 85.53057300000077 11.026)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 4 0.4621 4 0.278 5 0.4944 5 0.3243 9 0.013 2 0.3927 9 0.2994 3 0.1057 5 0.0731 10 0.3525 5 0.0319 4 0.2227 4 0.0718 4 0.4354 5)
Average genome size in population (length): 59.057
Average program size in population (points): 60.057
Average percent parens in population: 0.017
Minimum age in population: 24.6209716796875
Maximum age in population: 29.16980743408203
Average age in population: 27.08844239044189
Median age in population: 27.13652801513672
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.071
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 28489294
--- Timings ---
Current time: 1529615694729 milliseconds
Total Time:          67.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.1 seconds, 44.8%
Fitness Testing:     29.1 seconds, 43.3%
Report:               7.9 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction 88} {:instruction integer_min} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction float_inc})
Best program: (integer_max float_sin integer_dec float_inc print_integer integer_max 88 integer_min float_mult integer_inc integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_sub float_mult integer_mult float_inc integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2397.8452155999994
Median total errors in population: 290.2267
Error averages by case: (74.6128640000001 11.19 91.05289469999958 11.421 89.99049259999896 11.446 92.49600009999918 11.29 89.08984640000071 11.318 79.5528245000001 11.251 83.25994129999938 12.111 78.9614989999993 11.342 96.22289109999936 10.495 91.83562820000029 11.212 91.34952450000131 11.364 90.82451560000013 11.29 87.34310779999949 11.116 86.76125239999999 11.26 84.01757319999875 11.939 63.56704470000062 11.175 85.15079259999847 11.998 94.77694699999822 11.069 75.24125230000006 11.196 78.43197339999982 12.036 84.20781119999917 11.182 74.58027899999892 11.234 80.7671583999989 11.205 85.89932760000059 11.257 84.43277400000086 11.022)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 58.507
Average program size in population (points): 59.507
Average percent parens in population: 0.017
Minimum age in population: 26.12155151367188
Maximum age in population: 30.55502700805664
Average age in population: 28.49980180740356
Median age in population: 28.55573654174805
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.845
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.845
Total error diversity:				 0.067
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 29953019
--- Timings ---
Current time: 1529615697821 milliseconds
Total Time:          70.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.6 seconds, 44.9%
Fitness Testing:     30.4 seconds, 43.2%
Report:               8.3 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_max} {:instruction tag_integer_523} {:instruction integer_rot} {:instruction float_min} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_pop} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_mod} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min})
Best program: (integer_max float_sin float_dup_times float_flush float_max tag_integer_523 integer_rot float_min integer_pop integer_shove float_pop float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_yankdup float_mod integer_pop float_flush integer_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod integer_yank integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2242.4107804999994
Median total errors in population: 290.2267
Error averages by case: (67.62180930000099 11.162 82.60871459999943 11.358 81.34242769999896 11.385 84.12452599999915 11.252 81.57481760000074 11.286 72.93660909999974 11.214 78.55509689999926 12.108 74.53977539999961 11.304 89.80433529999935 10.435 85.62847360000035 11.195 82.78459570000099 11.297 84.72351379999999 11.252 83.51875729999954 11.094 82.87166589999981 11.231 79.15592649999914 11.961 55.93487230000068 11.145 76.11129039999841 11.991 88.25956379999818 11.048 71.79260290000006 11.176 69.25320840000035 12.026 80.25325729999929 11.142 69.74420109999889 11.203 72.9031414999989 11.172 81.16418920000041 11.228 82.52440890000099 11.014)
Error minima by case: (0.3075 3 0.3809 5 0.0178 5 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 4 0.4621 3 0.278 4 0.4944 5 0.3243 10 0.013 2 0.3927 9 0.2994 3 0.1057 4 0.0731 10 0.3525 5 0.0319 4 0.2227 4 0.0718 4 0.4354 5)
Average genome size in population (length): 58.099
Average program size in population (points): 59.099
Average percent parens in population: 0.018
Minimum age in population: 27.12155151367188
Maximum age in population: 31.95187568664551
Average age in population: 29.95370738601685
Median age in population: 29.96507930755615
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.063
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 31406269
--- Timings ---
Current time: 1529615700982 milliseconds
Total Time:          73.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        33.1 seconds, 45.1%
Fitness Testing:     31.7 seconds, 43.1%
Report:               8.6 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction float_inc})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth float_stackdepth integer_mod float_shove integer_swap integer_min float_sub integer_min float_mult integer_inc integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2151.2806962999994
Median total errors in population: 290.2267
Error averages by case: (67.66145940000081 11.211 82.73599679999938 11.425 80.74860299999902 11.448 78.59275839999924 11.266 75.28709760000066 11.306 68.71471489999958 11.245 72.07465539999959 12.104 67.90074280000042 11.353 83.0166667999994 10.496 78.8982316000007 11.2 82.3726238000006 11.346 77.7720370999997 11.29 79.80407620000001 11.121 78.98655979999964 11.267 71.70830629999968 11.968 60.9331932000005 11.195 71.70827429999898 11.991 82.12434819999848 11.059 68.44897500000005 11.205 71.49021740000036 12.038 75.83758169999987 11.201 65.79264209999906 11.24 72.31239789999896 11.215 73.42969699999986 11.265 79.42983960000065 11.044)
Error minima by case: (0.3075 10 0.3809 10 0.0178 10 0.2417 9 0.2512 10 0.2021 10 0.2914 10 0.0691 10 0.2221 9 0.0828 9 0.4729 9 0.4621 10 0.278 9 0.4944 10 0.3243 10 0.013 10 0.3927 9 0.2994 9 0.1057 10 0.0731 10 0.3525 10 0.0319 10 0.2227 10 0.0718 10 0.4354 9)
Average genome size in population (length): 57.337
Average program size in population (points): 58.337
Average percent parens in population: 0.018
Minimum age in population: 28.79417419433594
Maximum age in population: 33.34562969207764
Average age in population: 31.41712161636353
Median age in population: 31.46502780914307
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.062
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 32840619
--- Timings ---
Current time: 1529615704176 milliseconds
Total Time:          76.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.5 seconds, 45.0%
Fitness Testing:     33.2 seconds, 43.3%
Report:               8.9 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_max} {:instruction float_pop} {:instruction integer_shove} {:instruction print_float} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_inc})
Best program: (float_sin integer_dec print_integer integer_max float_pop integer_shove print_float print_float float_stackdepth integer_mod float_shove float_swap integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2644.4498955999993
Median total errors in population: 290.2267
Error averages by case: (87.64151609999992 11.221 100.11850870000018 11.426 98.81805759999895 11.46 99.40180749999915 11.328 96.21856290000078 11.349 88.0836089000004 11.267 94.36638079999943 12.159 91.53001529999874 11.379 104.43855849999933 10.518 101.48656489999982 11.267 99.82721310000166 11.371 97.8361223000004 11.328 97.64735969999921 11.168 97.16262699999999 11.278 93.84703609999868 12.005 77.56292519999965 11.207 89.29889669999865 12.02 99.98885719999831 11.117 89.74501360000005 11.22 88.60375129999966 12.056 94.66571999999915 11.217 87.35841469999893 11.259 91.52226739999887 11.241 95.916757500001 11.309 97.12935260000084 11.064)
Error minima by case: (0.3075 9 0.3809 9 0.0178 10 0.2417 9 0.2512 10 0.2021 10 0.2914 10 0.0691 8 0.2221 8 0.0828 9 0.4729 8 0.4621 9 0.278 9 0.4944 8 0.3243 10 0.013 9 0.3927 10 0.2994 10 0.1057 8 0.0731 11 0.3525 9 0.0319 10 0.2227 9 0.0718 10 0.4354 9)
Average genome size in population (length): 56.835
Average program size in population (points): 57.835
Average percent parens in population: 0.018
Minimum age in population: 30.11207580566406
Maximum age in population: 34.95441865921021
Average age in population: 32.91097001409531
Median age in population: 32.97298192977905
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.871
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.871
Total error diversity:				 0.048
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 34262219
--- Timings ---
Current time: 1529615707294 milliseconds
Total Time:          79.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.9 seconds, 45.1%
Fitness Testing:     34.5 seconds, 43.2%
Report:               9.2 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_flush} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_sub} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_mod} {:instruction tag_float_334} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_inc} {:instruction -31} {:instruction float_mult} {:instruction integer_mult})
Best program: (float_mult float_dec float_dup_times float_pop integer_max integer_pop integer_shove integer_swap integer_flush print_float integer_dup_items integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod integer_yank integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_sub float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_mod tag_float_334 float_inc integer_mult float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_inc -31 float_mult integer_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2401.1408976
Median total errors in population: 290.2267
Error averages by case: (76.38706670000005 11.157 89.5012603 11.359 87.99868509999908 11.394 91.48049579999928 11.26 88.12873460000067 11.275 77.27879480000028 11.234 85.77692359999958 12.118 85.97897969999902 11.297 98.81406389999937 10.437 95.36255609999994 11.211 89.2534906000012 11.298 89.54336980000039 11.265 86.87183339999932 11.106 86.31540250000026 11.229 86.61601909999885 11.98 64.49928610000043 11.136 80.56689419999871 12.006 94.55972959999846 11.051 78.08205920000005 11.172 74.83543509999993 12.027 84.2057007999991 11.162 76.03381969999906 11.195 78.70860249999903 11.182 89.5837138000008 11.245 81.94298060000072 11.019)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 9 0.013 2 0.3927 11 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 56.663
Average program size in population (points): 57.663
Average percent parens in population: 0.018
Minimum age in population: 31.11207580566406
Maximum age in population: 36.95441865921021
Average age in population: 34.38267849969864
Median age in population: 34.4245080947876
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.836
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.836
Total error diversity:				 0.067
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 35679894
--- Timings ---
Current time: 1529615710376 milliseconds
Total Time:          82.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.4 seconds, 45.2%
Fitness Testing:     35.7 seconds, 43.2%
Report:               9.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction float_max} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_204} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction float_inc})
Best program: (integer_max float_sin float_dup_times integer_min float_mult float_sub integer_pop integer_inc integer_pop float_flush integer_sub float_max float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_sub float_mult integer_mult float_inc integer_fromfloat integer_stackdepth tagged_204 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2788.815645799999
Median total errors in population: 290.2267
Error averages by case: (88.13802449999943 11.221 104.16085540000046 11.426 103.32831999999904 11.46 106.77144099999921 11.298 104.83462400000067 11.327 92.90766350000075 11.25 103.06619839999922 12.132 99.19777149999794 11.367 113.21189439999938 10.508 110.1669575999993 11.239 104.40199530000201 11.364 106.46587090000091 11.318 103.3064911999987 11.141 102.71864050000059 11.287 102.95927919999797 11.981 77.13287549999944 11.197 96.53445429999856 12.002 109.4717373999983 11.089 94.32348820000006 11.22 89.71201839999911 12.051 99.91327249999863 11.209 92.49803169999898 11.251 95.52345819999897 11.227 104.27117880000156 11.3 99.89210340000089 11.042)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 10 0.2914 9 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 5 0.4944 5 0.3243 10 0.013 2 0.3927 9 0.2994 3 0.1057 5 0.0731 11 0.3525 5 0.0319 4 0.2227 4 0.0718 5 0.4354 5)
Average genome size in population (length): 56.515
Average program size in population (points): 57.515
Average percent parens in population: 0.018
Minimum age in population: 33.02270698547363
Maximum age in population: 37.79555058479309
Average age in population: 35.84417521774769
Median age in population: 35.87095075845718
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.864
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.864
Total error diversity:				 0.059
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.061
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 37093819
--- Timings ---
Current time: 1529615713406 milliseconds
Total Time:          85.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.9 seconds, 45.3%
Fitness Testing:     37.0 seconds, 43.1%
Report:               9.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_max} {:instruction integer_pop} {:instruction float_div} {:instruction float_cos} {:instruction float_max} {:instruction in2} {:instruction integer_pop} {:instruction float_rot} {:instruction float_dup} {:instruction float_pop} {:instruction float_rot} {:instruction float_div} {:instruction float_mult} {:instruction tagged_302} {:instruction float_flush} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction in1} {:instruction integer_sub} {:instruction float_sub} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_flush} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc})
Best program: (float_inc print_integer integer_max integer_max integer_pop float_div float_cos float_max in2 integer_pop float_rot float_dup float_pop float_rot float_div float_mult tagged_302 float_flush integer_sub float_shove integer_mod integer_yank integer_yank in1 in1 integer_sub float_sub float_add integer_yank in1 in2 float_min float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_flush float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_add print_integer float_inc float_min integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2502.0227841999995
Median total errors in population: 290.2267
Error averages by case: (81.11959500000032 11.178 94.24912789999942 11.366 93.409110999999 11.412 94.08969199999918 11.28 90.77808800000068 11.304 85.4140133 11.234 88.3779069999994 12.12 85.97522259999954 11.332 99.1390026999994 10.462 94.58480480000057 11.228 94.55415900000091 11.32 94.2638854999998 11.281 90.28014099999984 11.13 89.72724019999973 11.249 87.86463059999924 11.978 73.84163200000022 11.161 86.6247195999986 12.009 96.7082523999983 11.08 81.21330200000006 11.181 88.77845959999978 12.038 86.8945374999997 11.176 79.58070609999899 11.212 84.14790899999903 11.196 92.78754300000038 11.255 84.39110240000068 11.046)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 4 0.4621 4 0.278 4 0.4944 4 0.3243 8 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 4)
Average genome size in population (length): 56.24
Average program size in population (points): 57.24
Average percent parens in population: 0.018
Minimum age in population: 34.48099708557129
Maximum age in population: 39.15449142456055
Average age in population: 37.30923759973049
Median age in population: 37.37349224090576
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.859
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.859
Total error diversity:				 0.056
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 38500844
--- Timings ---
Current time: 1529615716388 milliseconds
Total Time:          88.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.3 seconds, 45.3%
Fitness Testing:     38.3 seconds, 43.1%
Report:              10.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_yankdup} {:instruction integer_dup} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction float_mult} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction float_flush} {:instruction float_mult} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_flush} {:instruction float_min} {:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_min} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dec} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction float_rot} {:instruction integer_shove} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction float_sin})
Best program: (float_inc print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_yankdup integer_dup float_shove float_swap integer_min float_flush integer_min float_sub integer_pop float_flush float_mult tag_integer_222 float_tan integer_mod float_add integer_yank float_flush float_mult tag_integer_222 float_tan integer_mod integer_sub integer_yank in1 in2 float_flush float_min integer_yank integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_min float_min integer_inc float_shove float_sin integer_pop integer_dec integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult float_rot integer_shove integer_flush float_div float_shove float_tan integer_rot integer_swap in1 float_sin)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2574.0487178
Median total errors in population: 290.2267
Error averages by case: (81.84512209999997 11.177 95.43358540000037 11.38 94.65899599999901 11.427 98.24894689999923 11.254 94.97857380000069 11.284 86.63861820000078 11.246 93.44440369999926 12.115 90.53664559999827 11.325 103.01802099999938 10.475 99.37370719999957 11.185 95.79923640000192 11.319 97.83133720000087 11.271 95.37447329999888 11.095 94.59084520000053 11.252 92.51238759999829 11.967 71.18095880000013 11.147 87.43983289999846 11.987 102.77469849999817 11.042 84.61112780000006 11.187 86.6101420999992 12.041 91.29070959999868 11.172 81.75596019999898 11.211 85.09008329999894 11.185 96.17011210000125 11.244 89.84619290000089 11.006)
Error minima by case: (0.3075 3 0.3809 5 0.0178 5 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 4 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 9 0.2994 3 0.1057 4 0.0731 8 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 55.94
Average program size in population (points): 56.94
Average percent parens in population: 0.018
Minimum age in population: 35.621666431427
Maximum age in population: 40.6504921913147
Average age in population: 38.80649665686488
Median age in population: 38.87237322330475
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.867
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.867
Total error diversity:				 0.07
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 39900844
--- Timings ---
Current time: 1529615719513 milliseconds
Total Time:          91.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.8 seconds, 45.4%
Fitness Testing:     39.5 seconds, 43.0%
Report:              10.5 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_add} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction float_inc})
Best program: (float_sin float_add float_inc print_integer integer_max integer_pop integer_shove integer_mod integer_dup float_stackdepth integer_mod float_shove float_shove integer_min float_sub integer_min float_mult integer_inc integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_sub float_mult integer_mult float_inc integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2221.5231804999994
Median total errors in population: 290.2267
Error averages by case: (72.04109400000024 11.144 83.64658489999948 11.323 82.40570919999898 11.358 84.40182389999917 11.227 81.06133800000076 11.254 72.65200730000022 11.219 75.51330479999964 12.103 74.63777539999961 11.277 88.8690015999994 10.405 85.28630800000053 11.174 83.91144760000078 11.275 82.6520906999998 11.231 79.49214799999997 11.093 78.87032539999973 11.198 74.59797699999937 11.968 62.8961960000006 11.124 74.19679769999884 11.989 86.43164879999847 11.029 70.21295750000006 11.148 73.40499760000002 12.024 75.40369199999974 11.131 68.22259249999891 11.172 73.63573839999893 11.154 80.01511740000028 11.199 74.84850680000054 10.997)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 9 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 55.479
Average program size in population (points): 56.479
Average percent parens in population: 0.018
Minimum age in population: 37.56205749511719
Maximum age in population: 42.28991937637329
Average age in population: 40.26665432471037
Median age in population: 40.316855058074
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.851
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.851
Total error diversity:				 0.064
Error (vector) diversity:			 0.065
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 41288944
--- Timings ---
Current time: 1529615722690 milliseconds
Total Time:          95.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.2 seconds, 45.5%
Fitness Testing:     40.9 seconds, 43.0%
Report:              10.9 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_flush} {:instruction print_float} {:instruction float_swap} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_dec} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction print_float} {:instruction integer_add} {:instruction float_mult} {:instruction integer_inc} {:instruction float_swap} {:instruction float_flush} {:instruction integer_sub} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction float_mult} {:instruction integer_dup} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction float_mod} {:instruction float_min} {:instruction float_min} {:instruction float_add} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction integer_fromfloat})
Best program: (float_mult float_dec float_dup_times float_pop integer_max integer_pop integer_shove integer_swap integer_flush print_float float_swap integer_mod float_shove float_swap integer_min float_stackdepth integer_dec float_sub float_dup_items integer_max integer_pop integer_shove integer_yankdup integer_stackdepth float_stackdepth integer_mod float_shove float_shove integer_min print_float integer_add float_mult integer_inc float_swap float_flush integer_sub float_sub integer_pop float_flush float_mult integer_dup float_tan integer_mod float_add integer_yank in1 float_mod float_min float_min float_add integer_yank float_stackdepth in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove integer_fromfloat)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2398.9231109999996
Median total errors in population: 290.2267
Error averages by case: (74.96044999999998 11.149 88.41657179999986 11.313 87.54197999999893 11.341 86.80360169999912 11.224 84.92878880000077 11.24 80.68354310000045 11.213 84.31709179999935 12.102 80.500429899999 11.259 91.7102247999993 10.38 88.44663920000006 11.159 88.32428160000138 11.266 86.99868000000026 11.229 91.42059599999928 11.083 90.67758080000014 11.195 86.0883315999986 11.975 68.48049500000037 11.135 84.44301839999845 12.003 90.85007879999819 11.058 79.86409680000006 11.158 79.57345659999963 12.036 88.49034499999894 11.136 80.2066505999988 11.17 80.33042569999886 11.159 84.59990200000088 11.202 88.07685100000093 11.004)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 10 0.2914 10 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 2 0.0731 9 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 55.454
Average program size in population (points): 56.454
Average percent parens in population: 0.018
Minimum age in population: 38.80148255825043
Maximum age in population: 43.75212483108044
Average age in population: 41.72858469343185
Median age in population: 41.78409919887781
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.833
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.833
Total error diversity:				 0.055
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 42676444
--- Timings ---
Current time: 1529615725782 milliseconds
Total Time:          98.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.7 seconds, 45.5%
Fitness Testing:     42.1 seconds, 42.9%
Report:              11.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_max} {:instruction tag_integer_523} {:instruction tagged_51} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction 18.139434087181883} {:instruction integer_min} {:instruction float_sub} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction tag_integer_222} {:instruction float_tan} {:instruction float_tan} {:instruction integer_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_min} {:instruction integer_rot} {:instruction float_yankdup} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_cos})
Best program: (integer_max float_sin float_dup_times float_flush float_max tag_integer_523 tagged_51 float_frominteger integer_stackdepth print_float float_stackdepth integer_mod float_shove 18.139434087181883 integer_min float_sub integer_mod float_shove float_swap integer_min float_flush integer_min float_mult float_mult tag_integer_222 float_tan integer_mod integer_sub tag_integer_222 float_tan integer_mod tag_integer_222 float_tan float_tan integer_mod in1 in2 float_min float_min integer_rot float_yankdup in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_cos)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2446.4352913999996
Median total errors in population: 290.2267
Error averages by case: (79.75728750000027 11.155 91.92841329999962 11.354 91.58396859999894 11.38 91.21396689999918 11.24 88.31784160000072 11.262 80.8748111999999 11.242 85.84162199999936 12.127 84.20353159999947 11.301 97.36500379999939 10.434 94.18271560000032 11.196 92.92790290000109 11.298 89.62080969999984 11.259 88.78136099999986 11.099 88.25729619999969 11.219 86.67235959999917 11.983 70.90450200000012 11.132 82.87550499999851 12.014 91.95155179999837 11.052 81.06841600000006 11.153 84.45045959999995 12.032 85.25782499999964 11.151 78.33903619999889 11.183 83.08935869999888 11.167 89.35911220000031 11.223 84.94463340000081 11.01)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 9 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 2 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 1 0.4354 2)
Average genome size in population (length): 55.499
Average program size in population (points): 56.499
Average percent parens in population: 0.018
Minimum age in population: 40.06835919618607
Maximum age in population: 45.14608157426119
Average age in population: 43.15891230715066
Median age in population: 43.21441142447293
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.065
Error (vector) diversity:			 0.065
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 44065344
--- Timings ---
Current time: 1529615728816 milliseconds
Total Time:         101.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.1 seconds, 45.6%
Fitness Testing:     43.4 seconds, 42.8%
Report:              11.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_yank} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_pop} {:instruction float_dup} {:instruction 46.784343468375965} {:instruction float_max} {:instruction in2} {:instruction integer_pop} {:instruction float_rot} {:instruction float_dup} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_yank} {:instruction in1} {:instruction float_mult} {:instruction float_swap} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_max} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_div} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_sub} {:instruction integer_min} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin})
Best program: (float_sin integer_dec float_yank print_integer integer_max integer_pop integer_shove integer_max integer_pop integer_pop integer_shove integer_max integer_pop float_dup 46.784343468375965 float_max in2 integer_pop float_rot float_dup integer_dec float_inc print_integer integer_max integer_pop integer_yank in1 float_mult float_swap tag_integer_222 float_tan integer_mod integer_max integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth integer_yank in1 in2 float_div float_dec integer_sub float_sub float_mult integer_mod float_add integer_yank in1 in2 float_sub integer_min float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_mod float_shove float_sin)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2680.682986499999
Median total errors in population: 290.2267
Error averages by case: (84.22088079999999 11.183 99.14593540000034 11.376 97.50139489999891 11.406 102.41064689999907 11.285 100.49107350000084 11.312 92.01976890000093 11.249 98.8509133999991 12.112 99.43080799999784 11.339 106.46133639999925 10.464 104.28905319999959 11.229 98.75355110000204 11.314 101.92584430000076 11.293 96.6391846999986 11.11 96.03584830000067 11.246 98.15738669999779 11.994 77.53400139999948 11.176 93.16456249999823 12.01 104.87598749999786 11.112 90.31342280000005 11.186 88.76257249999891 12.04 93.76580519999828 11.177 89.2901831999988 11.212 89.94192699999881 11.193 102.3113276000015 11.253 91.08557030000108 11.033)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 2 0.2512 2 0.2021 10 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 2 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 55.114
Average program size in population (points): 56.114
Average percent parens in population: 0.018
Minimum age in population: 42.02189165726304
Maximum age in population: 46.72337823174894
Average age in population: 44.68041082076356
Median age in population: 44.72870314866304
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.843
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.061
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 45444369
--- Timings ---
Current time: 1529615731925 milliseconds
Total Time:         104.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.5 seconds, 45.6%
Fitness Testing:     44.6 seconds, 42.8%
Report:              12.0 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction integer_pop} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_sub} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_mult} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_inc})
Best program: (float_mult float_dec integer_swap integer_stackdepth float_shove float_swap integer_min float_sub integer_min float_mult integer_pop integer_pop integer_stackdepth integer_sub float_sub integer_min float_mult float_sub integer_pop integer_pop float_sub integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod integer_yank integer_yank in1 in2 float_min integer_fromfloat float_dec integer_rot float_yankdup float_mult in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2575.7078231999994
Median total errors in population: 290.2267
Error averages by case: (82.79322249999987 11.194 95.56190549999984 11.377 94.41001559999891 11.411 96.62597619999907 11.295 94.32555680000084 11.312 86.80874520000042 11.244 91.65613159999913 12.117 88.44373889999856 11.319 99.46733749999927 10.446 97.56946719999983 11.208 95.61528160000157 11.33 96.26174850000045 11.285 96.02509799999893 11.12 95.18953600000002 11.245 91.56341289999844 11.978 75.75856000000009 11.189 88.95284029999823 12.016 98.38286919999798 11.111 87.28382840000006 11.198 85.67852969999947 12.038 92.86752499999882 11.18 85.29406529999876 11.224 89.58553489999882 11.194 92.78339940000089 11.255 93.47849700000104 11.039)
Error minima by case: (0.3075 9 0.3809 9 0.0178 10 0.2417 9 0.2512 9 0.2021 9 0.2914 10 0.0691 10 0.2221 8 0.0828 9 0.4729 9 0.4621 9 0.278 9 0.4944 10 0.3243 10 0.013 10 0.3927 10 0.2994 9 0.1057 9 0.0731 11 0.3525 9 0.0319 10 0.2227 9 0.0718 9 0.4354 9)
Average genome size in population (length): 54.72
Average program size in population (points): 55.72
Average percent parens in population: 0.018
Minimum age in population: 43.02189165726304
Maximum age in population: 48.10722478106618
Average age in population: 46.07932726683654
Median age in population: 46.12042666180059
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.83
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.83
Total error diversity:				 0.052
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 46813558
--- Timings ---
Current time: 1529615734893 milliseconds
Total Time:         107.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.9 seconds, 45.6%
Fitness Testing:     45.9 seconds, 42.7%
Report:              12.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in2} {:instruction float_min} {:instruction float_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_tan} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_tan})
Best program: (integer_yankdup integer_dup float_dup_times integer_max float_inc integer_rot integer_max integer_pop integer_swap integer_inc integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod float_add integer_yank in2 float_min float_rot integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_stackdepth tagged_80 float_tan float_sub float_dup_items float_mult integer_mult integer_fromfloat integer_yankdup integer_flush float_div float_shove float_tan integer_rot float_frominteger float_flush integer_mod float_tan integer_min float_tan)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2824.3375635
Median total errors in population: 290.2267
Error averages by case: (94.17086329999925 11.222 107.29949320000046 11.418 105.44229579999892 11.465 109.29362559999913 11.336 106.58607840000079 11.364 97.85186700000105 11.26 102.14628819999919 12.156 99.65019519999807 11.38 111.8538921999993 10.527 107.84405319999956 11.258 106.99625280000214 11.378 108.7420964000008 11.339 102.68564539999875 11.155 102.14542680000059 11.279 102.91203609999798 12.0 83.06407599999939 11.203 98.30920629999834 12.0 110.97975539999811 11.114 94.37539710000006 11.233 95.21760219999888 12.056 98.5051907999985 11.209 92.1131189999988 11.252 97.69987139999881 11.237 105.88153780000151 11.296 98.38969790000094 11.045)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 9 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 9 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 55.342
Average program size in population (points): 56.342
Average percent parens in population: 0.018
Minimum age in population: 45.04484233260155
Maximum age in population: 49.44229472894222
Average age in population: 47.59421153067425
Median age in population: 47.66548186843283
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.853
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.853
Total error diversity:				 0.053
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 48198558
--- Timings ---
Current time: 1529615738061 milliseconds
Total Time:         110.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.4 seconds, 45.6%
Fitness Testing:     47.1 seconds, 42.7%
Report:              12.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction integer_dec} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_div} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_max} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_swap} {:instruction in1} {:instruction float_sin})
Best program: (print_float float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult integer_dec integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod integer_yank integer_shove integer_swap integer_stackdepth integer_rot integer_mod float_shove float_shove integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_div float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult float_inc in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_max float_dup_items integer_add print_integer float_inc float_min float_sub float_dup_items integer_add float_sin integer_rot integer_rot integer_swap in1 float_sin)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2438.6611149
Median total errors in population: 290.2267
Error averages by case: (81.64400540000078 11.196 89.65617829999908 11.362 88.4393160999991 11.387 88.82156849999924 11.285 87.13778400000065 11.29 80.94200719999955 11.23 86.32052639999924 12.126 83.72017269999984 11.314 92.94810839999948 10.438 91.52355640000073 11.219 90.1930487000005 11.33 88.29099049999952 11.28 90.24578849999999 11.138 89.66274669999937 11.247 86.13019299999934 11.994 72.68682240000017 11.177 83.09236199999854 12.022 90.62978969999831 11.106 83.90744240000006 11.198 80.1220814000003 12.048 87.42658779999978 11.177 83.44316309999896 11.215 83.50562679999904 11.189 86.89304559999997 11.252 88.0092029000009 11.049)
Error minima by case: (0.3075 3 0.3809 5 0.0178 5 0.2417 4 0.2512 4 0.2021 10 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 4 0.4621 4 0.278 5 0.4944 5 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 5 0.0731 8 0.3525 5 0.0319 4 0.2227 4 0.0718 4 0.4354 5)
Average genome size in population (length): 54.607
Average program size in population (points): 55.607
Average percent parens in population: 0.019
Minimum age in population: 46.16307048499584
Maximum age in population: 51.28417466534302
Average age in population: 49.01850412722491
Median age in population: 49.05951046687551
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.831
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.831
Total error diversity:				 0.054
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 49565083
--- Timings ---
Current time: 1529615741248 milliseconds
Total Time:         113.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.9 seconds, 45.6%
Fitness Testing:     48.5 seconds, 42.7%
Report:              13.2 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_sin} {:instruction integer_dup_times} {:instruction float_flush} {:instruction float_max} {:instruction tag_integer_523} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_20} {:instruction float_pop} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_sin})
Best program: (integer_max float_sin integer_dup_times float_flush float_max tag_integer_523 float_yankdup float_frominteger print_integer integer_min float_flush integer_min float_mult float_sub integer_pop integer_sub tag_integer_222 float_tan integer_mod float_add in1 in1 in2 float_min integer_fromfloat integer_stackdepth tagged_20 float_pop float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_sin integer_fromfloat integer_pop integer_dup integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc integer_sub float_sin)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2842.7753594999995
Median total errors in population: 290.2267
Error averages by case: (93.50640339999971 11.202 106.52345380000021 11.363 106.03613769999909 11.385 104.34232679999923 11.3 101.99903520000068 11.32 97.54979240000063 11.235 103.26297889999931 12.142 101.2399090999988 11.328 110.76544799999944 10.463 107.82293749999987 11.249 106.54132150000142 11.325 103.05073410000035 11.286 106.65631059999917 11.13 106.94391490000031 11.237 103.07827829999839 12.009 84.77740469999948 11.19 99.33020239999861 12.025 104.98691709999842 11.117 100.44637740000006 11.198 99.68842959999941 12.049 103.77717749999888 11.179 100.14846559999893 11.222 99.09651529999901 11.194 105.88796860000103 11.267 101.85491910000086 11.047)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 9 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 54.754
Average program size in population (points): 55.754
Average percent parens in population: 0.019
Minimum age in population: 48.01000545080751
Maximum age in population: 52.31489115592558
Average age in population: 50.50182451681374
Median age in population: 50.55562792043202
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.865
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.865
Total error diversity:				 0.06
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 50934983
--- Timings ---
Current time: 1529615744222 milliseconds
Total Time:         116.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.3 seconds, 45.7%
Fitness Testing:     49.7 seconds, 42.6%
Report:              13.6 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_flush} {:instruction float_max} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction integer_pop} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction float_cos} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction float_add} {:instruction integer_yank} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_mod} {:instruction float_min})
Best program: (float_rot float_sin float_dup_times integer_flush float_max integer_dec float_inc print_integer integer_max integer_mod float_shove float_swap integer_min float_flush integer_min integer_pop integer_pop float_flush integer_sub float_sub float_mult tag_integer_222 float_tan integer_mod float_add float_cos in1 in2 float_min in1 float_add integer_yank integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_mod float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2775.486135999999
Median total errors in population: 290.2267
Error averages by case: (89.97847279999964 11.176 107.51724970000032 11.339 106.58307919999898 11.367 106.65225109999916 11.254 103.43105920000075 11.283 97.69156410000086 11.221 98.15849609999923 12.102 95.10812299999857 11.304 109.50146969999938 10.419 104.94684779999992 11.202 107.6568784000019 11.295 106.25482430000046 11.262 101.26485769999906 11.107 100.76481980000031 11.226 96.43336199999844 11.973 81.73647979999905 11.152 98.70948409999835 12.006 109.25306679999815 11.092 92.44342780000005 11.172 98.09136009999894 12.043 98.65499019999866 11.165 89.34831589999885 11.195 97.0027345999989 11.178 101.81239420000102 11.229 93.70552760000093 11.023)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 9 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 9 0.013 1 0.3927 9 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 54.696
Average program size in population (points): 55.696
Average percent parens in population: 0.019
Minimum age in population: 49.54340860061347
Maximum age in population: 53.85682404757245
Average age in population: 51.98714211567695
Median age in population: 52.06210343365092
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.853
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.853
Total error diversity:				 0.066
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 52303672
--- Timings ---
Current time: 1529615747305 milliseconds
Total Time:         119.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.7 seconds, 45.7%
Fitness Testing:     51.0 seconds, 42.6%
Report:              13.9 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_mod} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult})
Best program: (float_sin integer_dec print_integer integer_max integer_pop integer_shove integer_swap integer_stackdepth print_float float_mult float_dec float_dup_times float_pop in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup float_sub float_dup_items float_mod print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2823.8850890999997
Median total errors in population: 290.2267
Error averages by case: (94.44689149999913 11.195 109.32065050000047 11.372 107.37207999999893 11.393 108.46140119999912 11.273 105.73891240000081 11.312 98.82643700000098 11.235 100.17878519999901 12.113 97.12818609999792 11.334 108.64722699999933 10.463 105.92204679999952 11.22 108.5895378000023 11.329 107.8499691000007 11.287 105.3612500999986 11.129 103.94039460000056 11.249 101.05303529999787 11.991 86.14314109999881 11.17 100.18717739999809 12.006 111.49426439999786 11.092 94.81554630000005 11.202 94.06456589999893 12.042 102.09332859999822 11.177 93.73927839999885 11.227 100.95511419999885 11.201 100.91489680000127 11.256 93.33797140000108 11.035)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 4 0.2221 4 0.0828 4 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 4 0.3927 10 0.2994 4 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 5 0.0718 4 0.4354 4)
Average genome size in population (length): 54.738
Average program size in population (points): 55.738
Average percent parens in population: 0.019
Minimum age in population: 51.25125642149942
Maximum age in population: 55.3979248306714
Average age in population: 53.49253478839208
Median age in population: 53.5248719453084
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.059
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 53673522
--- Timings ---
Current time: 1529615750340 milliseconds
Total Time:         122.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.2 seconds, 45.8%
Fitness Testing:     52.2 seconds, 42.5%
Report:              14.3 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_flush} {:instruction float_max} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction integer_pop} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction in1} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc})
Best program: (float_rot float_sin float_dup_times integer_flush float_max integer_dec float_inc print_integer integer_max integer_mod float_shove float_swap integer_min float_flush integer_min integer_pop integer_pop float_flush integer_sub float_sub integer_min float_mult float_sub in1 integer_pop float_flush integer_sub tag_integer_222 float_tan integer_yank in1 in2 float_min float_dec integer_sub float_sub float_mult integer_mult float_inc integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2954.386932199999
Median total errors in population: 290.2267
Error averages by case: (97.09142599999964 11.21 111.47845310000007 11.401 109.55892839999892 11.424 113.0689957999991 11.312 110.85950430000081 11.33 103.22809390000063 11.257 106.51613059999926 12.127 104.27311889999862 11.36 114.6730000999993 10.491 112.37157409999988 11.229 111.38321200000163 11.356 113.37124580000047 11.312 110.99813199999905 11.139 110.21757550000036 11.266 107.58241059999841 11.984 89.29639299999941 11.181 105.58221869999838 12.007 117.56677609999818 11.112 100.38754840000006 11.214 99.08192899999933 12.034 107.75198199999876 11.191 98.43199579999884 11.245 102.79533839999881 11.199 108.15569280000105 11.269 104.98725690000093 11.028)
Error minima by case: (0.3075 4 0.3809 5 0.0178 4 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 9 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 54.215
Average program size in population (points): 55.215
Average percent parens in population: 0.019
Minimum age in population: 52.56401339964941
Maximum age in population: 56.75169996391924
Average age in population: 55.00103564281574
Median age in population: 55.04474437909084
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.847
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.847
Total error diversity:				 0.07
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 55030097
--- Timings ---
Current time: 1529615753373 milliseconds
Total Time:         125.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.7 seconds, 45.8%
Fitness Testing:     53.4 seconds, 42.5%
Report:              14.6 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction float_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sin} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_pop float_sub float_mult integer_mod integer_pop float_flush integer_sub float_flush integer_min float_sub integer_stackdepth print_float float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sin integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod integer_yank integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc integer_pop integer_dup integer_stackdepth tag_float_413)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3094.8925702999995
Median total errors in population: 290.2267
Error averages by case: (104.5809180999987 11.199 117.10281130000112 11.389 117.12284129999894 11.427 120.09669199999915 11.299 118.24883680000075 11.326 107.87528680000162 11.263 111.06632419999916 12.128 111.26446249999738 11.353 121.58611539999934 10.496 119.6037983999989 11.23 118.10717400000271 11.344 118.7776581000013 11.313 114.29512989999819 11.137 112.68283480000113 11.268 112.40292779999749 11.982 98.42468659999786 11.185 110.49120419999826 12.006 122.72395299999808 11.1 105.55384690000005 11.193 106.68238259999826 12.048 110.36699679999788 11.191 104.6239129999989 11.228 108.33238959999885 11.208 112.01832240000206 11.271 107.232063800001 11.045)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 10 0.2914 9 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 9 0.013 1 0.3927 9 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 54.116
Average program size in population (points): 55.116
Average percent parens in population: 0.019
Minimum age in population: 53.64462583392742
Maximum age in population: 58.60282950653345
Average age in population: 56.45021427077334
Median age in population: 56.49627226688244
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.865
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.865
Total error diversity:				 0.061
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 56384197
--- Timings ---
Current time: 1529615756457 milliseconds
Total Time:         128.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.1 seconds, 45.9%
Fitness Testing:     54.7 seconds, 42.5%
Report:              14.9 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_dup_times} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_dup} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc})
Best program: (float_sin integer_max float_sin float_dup_times integer_add float_mult float_sub integer_stackdepth integer_yank float_stackdepth integer_mod float_shove float_swap integer_min float_sub integer_min float_mult float_sub integer_inc integer_dup_times float_flush integer_sub tag_integer_222 float_tan integer_mod in1 in2 float_min integer_fromfloat integer_stackdepth float_mult float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_dup print_integer float_inc float_min integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2884.652717599999
Median total errors in population: 290.2267
Error averages by case: (98.83301649999912 11.171 111.18547690000068 11.348 110.44326009999897 11.382 114.11623649999915 11.266 110.46182840000078 11.289 98.72099650000091 11.249 105.23271839999911 12.136 103.62642599999803 11.32 116.02167229999932 10.444 112.98956239999936 11.225 111.56465950000232 11.312 111.44529390000086 11.264 103.21572179999882 11.123 102.51777110000045 11.233 104.16354919999797 12.009 85.38228499999873 11.156 101.08035539999825 12.026 114.53006079999804 11.091 95.60515210000005 11.18 96.53126749999896 12.05 99.87825429999855 11.166 94.23925159999882 11.213 99.69434179999888 11.176 106.83305460000138 11.247 93.23250500000104 11.032)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 54.194
Average program size in population (points): 55.194
Average percent parens in population: 0.019
Minimum age in population: 54.80061212432338
Maximum age in population: 59.86879941795632
Average age in population: 57.87967613279721
Median age in population: 57.9345873436414
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.847
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.847
Total error diversity:				 0.069
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 57740336
--- Timings ---
Current time: 1529615759471 milliseconds
Total Time:         132.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.6 seconds, 45.9%
Fitness Testing:     56.0 seconds, 42.4%
Report:              15.3 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction integer_dec} {:instruction float_inc} {:instruction float_swap} {:instruction print_integer} {:instruction float_dup} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction tagged_49} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction in1} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_flush} {:instruction float_pop} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_div} {:instruction float_add} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_max} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_min} {:instruction float_tan} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction in1} {:instruction integer_max})
Best program: (float_frominteger integer_dec float_inc float_swap print_integer float_dup float_shove float_swap integer_min float_sub integer_min float_mult tagged_49 integer_pop float_flush integer_sub tag_integer_222 in1 integer_mod integer_yank integer_shove integer_swap integer_stackdepth float_stackdepth integer_mod float_shove float_shove integer_min float_flush float_pop float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan integer_div float_add float_tan in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_max float_dup_items integer_add print_integer float_inc float_min float_sub float_dup_items integer_add float_min float_tan integer_rot float_stackdepth in1 integer_max)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2855.7790117
Median total errors in population: 290.2267
Error averages by case: (94.15491999999927 11.215 108.81566840000076 11.409 109.53226479999894 11.44 107.80879159999915 11.311 105.22535360000073 11.318 99.24381870000113 11.254 103.65024459999921 12.142 99.3306332999981 11.348 110.71911649999936 10.495 107.50446079999936 11.25 110.14184800000238 11.357 107.06465080000078 11.311 105.5464419999985 11.137 104.93676160000078 11.27 102.38479229999797 11.983 84.90785899999904 11.191 100.02309579999836 12.015 110.44684519999815 11.101 97.60775480000005 11.218 101.0258980999987 12.066 101.97384249999838 11.2 95.10756459999888 11.248 98.6949716999989 11.212 105.4172506000014 11.274 100.70616240000096 11.043)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 10 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 9 0.013 1 0.3927 9 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 54.636
Average program size in population (points): 55.636
Average percent parens in population: 0.019
Minimum age in population: 57.04837182024494
Maximum age in population: 61.06042418914512
Average age in population: 59.35167680164574
Median age in population: 59.37883543627959
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.065
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 59108186
--- Timings ---
Current time: 1529615762549 milliseconds
Total Time:         134.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.0 seconds, 45.9%
Fitness Testing:     57.3 seconds, 42.4%
Report:              15.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_min} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_max} {:instruction tag_integer_222} {:instruction float_tan} {:instruction float_cos} {:instruction in2} {:instruction float_min} {:instruction float_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_sin} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_flush} {:instruction float_div} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc})
Best program: (integer_dup float_stackdepth integer_mod float_shove float_min integer_min float_flush integer_min float_mult float_sub float_mult integer_mod integer_pop integer_yankdup float_max tag_integer_222 float_tan float_cos in2 float_min float_rot integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth float_tan float_sin float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_flush float_div integer_add print_integer float_inc float_min integer_inc float_shove integer_shove float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3135.912066199999
Median total errors in population: 290.2267
Error averages by case: (106.63876029999865 11.195 120.07128750000089 11.389 119.84847839999892 11.427 120.76356529999914 11.317 117.51405850000077 11.328 109.46480290000156 11.259 112.66092109999909 12.148 110.83773489999736 11.346 126.22900599999933 10.488 123.06683099999893 11.247 120.58163120000262 11.337 118.51466010000127 11.309 116.44244579999823 11.138 116.05521850000105 11.253 111.66082409999738 11.999 97.27526339999848 11.175 112.75213779999824 12.023 118.77392229999808 11.112 108.07313170000006 11.206 110.80216619999817 12.054 112.17164979999794 11.196 106.32510729999882 11.226 111.54643279999883 11.2 116.24102750000198 11.284 107.89700180000101 11.048)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.2512 4 0.2021 9 0.7086 10 0.0691 5 0.2221 5 0.0828 5 0.5271 5 0.4621 4 0.722 4 0.5056 4 0.3243 10 0.987 2 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 53.784
Average program size in population (points): 54.784
Average percent parens in population: 0.019
Minimum age in population: 58.04837182024494
Maximum age in population: 62.53975938735039
Average age in population: 60.87809328734733
Median age in population: 60.94895711598383
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.826
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.826
Total error diversity:				 0.054
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 60454961
--- Timings ---
Current time: 1529615765688 milliseconds
Total Time:         138.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.5 seconds, 46.0%
Fitness Testing:     58.6 seconds, 42.4%
Report:              16.0 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction float_shove} {:instruction float_yankdup} {:instruction tag_integer_523} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction print_float} {:instruction float_mult} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction integer_min} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction -51.42265598818374} {:instruction integer_mod} {:instruction print_integer} {:instruction float_min} {:instruction float_min} {:instruction float_add} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_20} {:instruction float_div} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_min})
Best program: (float_sin integer_dec integer_max float_sin float_dup_times float_flush float_stackdepth float_dup_items float_shove float_yankdup tag_integer_523 float_sin float_dup_times float_flush float_stackdepth float_dup_items float_shove float_shove integer_min float_sub print_float float_mult float_mult integer_inc integer_rot integer_yank integer_sub tag_integer_222 integer_min integer_sub tag_integer_222 -51.42265598818374 integer_mod print_integer float_min float_min float_add in1 in1 in2 float_min integer_fromfloat integer_stackdepth tagged_20 float_div float_sub float_dup_items integer_add print_integer integer_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2691.6286563999993
Median total errors in population: 290.2267
Error averages by case: (88.8604418999991 11.182 100.99082140000073 11.363 100.57079969999897 11.377 101.66084339999912 11.276 98.67078880000078 11.298 91.30516490000115 11.225 95.14649809999935 12.14 93.16329169999814 11.306 106.99000269999931 10.442 103.27458399999927 11.219 101.89657170000218 11.322 100.25660420000102 11.27 100.02851699999879 11.122 99.85197410000072 11.218 95.64276429999802 12.002 78.6675797999989 11.148 93.32334059999849 12.012 102.51340149999828 11.1 92.13958300000006 11.188 91.30908049999881 12.05 97.36861359999843 11.158 89.66215899999885 11.197 93.35961679999889 11.181 98.65132760000165 11.239 93.26528610000085 11.024)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 3 0.4944 4 0.3243 9 0.013 2 0.3927 9 0.2994 3 0.1057 3 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 52.908
Average program size in population (points): 53.908
Average percent parens in population: 0.019
Minimum age in population: 59.5065330413936
Maximum age in population: 64.12348048234662
Average age in population: 62.36057277365534
Median age in population: 62.37556340813626
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.841
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.841
Total error diversity:				 0.057
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 61779461
--- Timings ---
Current time: 1529615769070 milliseconds
Total Time:         141.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.0 seconds, 46.0%
Fitness Testing:     60.0 seconds, 42.4%
Report:              16.3 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_inc} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction tag_float_258} {:instruction float_sin} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction float_swap} {:instruction float_add} {:instruction float_min} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_min} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_359} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_cos} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div})
Best program: (integer_stackdepth integer_dec float_inc print_float float_stackdepth integer_mod tag_float_258 float_sin integer_min float_flush integer_min float_mult integer_min float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_tan float_swap float_add float_min in1 in2 float_min float_min float_add float_yankdup integer_add in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc integer_inc float_shove float_sin print_integer float_inc float_min integer_inc integer_yankdup integer_div integer_pop integer_dup integer_stackdepth tag_float_359 integer_yank integer_mult float_cos integer_mult integer_fromfloat integer_yankdup integer_flush float_div)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2973.167340499999
Median total errors in population: 290.2267
Error averages by case: (102.46829639999956 11.191 113.57901590000036 11.372 113.36884369999899 11.402 114.53340089999917 11.293 111.81934660000074 11.324 101.86354400000063 11.246 108.4918758999993 12.14 104.42664889999854 11.331 117.70556069999937 10.473 114.01475869999963 11.239 114.8033974000019 11.324 113.88190980000063 11.297 109.13395159999912 11.139 108.43764470000019 11.251 108.59670079999829 11.998 90.7581120999992 11.164 104.43313609999842 12.015 115.50985979999822 11.098 100.11756230000006 11.201 101.56601449999916 12.046 105.69854429999894 11.177 99.12357819999895 11.216 105.12766799999895 11.202 110.71969320000123 11.27 99.5362760000008 11.043)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 52.537
Average program size in population (points): 53.537
Average percent parens in population: 0.019
Minimum age in population: 61.32171352297973
Maximum age in population: 65.7730649846701
Average age in population: 63.80532542386911
Median age in population: 63.8552236561045
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.83
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.83
Total error diversity:				 0.063
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.065
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 63094911
--- Timings ---
Current time: 1529615772041 milliseconds
Total Time:         144.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.4 seconds, 46.0%
Fitness Testing:     61.2 seconds, 42.3%
Report:              16.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction float_mult} {:instruction float_sub} {:instruction float_mult} {:instruction float_stackdepth} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction integer_dup_items} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_mult} {:instruction float_sub} {:instruction float_flush} {:instruction float_tan} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction tagged_23} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_sub} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_cos} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_450} {:instruction float_frominteger} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_mult} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction tag_integer_995})
Best program: (float_sin integer_dec float_inc float_mult float_sub float_mult float_stackdepth integer_min float_flush integer_min integer_dup_items float_sin integer_pop integer_dup_items integer_sub tag_integer_222 float_mult float_sub float_flush float_tan integer_mod float_mod integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 tagged_23 float_tan float_sub float_dup_items integer_add print_integer float_inc float_sub float_dup_items print_integer float_inc float_cos integer_inc integer_shove float_sin integer_pop integer_dup integer_stackdepth tag_float_450 float_frominteger integer_mult integer_pop integer_mult integer_fromfloat integer_yankdup integer_flush integer_mult integer_dec float_rot integer_flush float_div float_shove tag_integer_995)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2979.1750313
Median total errors in population: 290.2267
Error averages by case: (103.32418519999882 11.203 110.53922400000097 11.383 109.285570599999 11.402 112.81311909999917 11.321 110.76483080000075 11.335 105.57114610000164 11.263 106.70711769999909 12.156 107.46694209999728 11.358 115.5284166999994 10.502 113.55109719999885 11.267 110.12411820000266 11.349 111.72747770000136 11.308 110.00242599999815 11.156 109.51373900000112 11.252 106.76593219999731 12.008 93.47196019999816 11.195 106.44936159999823 12.034 113.80050629999798 11.126 104.16993590000006 11.215 102.76714199999823 12.062 107.29097459999782 11.196 103.34968639999884 11.229 104.58335539999891 11.216 110.12457020000205 11.288 105.59119610000108 11.067)
Error minima by case: (0.3075 4 0.3809 5 0.0178 4 0.2417 5 0.2512 5 0.2021 11 0.2914 9 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 9 0.2994 4 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 4)
Average genome size in population (length): 51.378
Average program size in population (points): 52.378
Average percent parens in population: 0.020
Minimum age in population: 62.32171352297973
Maximum age in population: 67.09083954811172
Average age in population: 65.24249626464774
Median age in population: 65.28947764441676
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.841
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.841
Total error diversity:				 0.052
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 64380836
--- Timings ---
Current time: 1529615775027 milliseconds
Total Time:         147.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.9 seconds, 46.0%
Fitness Testing:     62.3 seconds, 42.3%
Report:              17.1 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction float_mult} {:instruction float_sub} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_inc} {:instruction print_integer} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_div} {:instruction float_shove} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_dec} {:instruction tag_integer_222} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_min} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_pop} {:instruction float_min} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_dec} {:instruction float_min} {:instruction integer_inc})
Best program: (float_sin integer_dec float_inc float_mult float_sub float_mult integer_yankdup integer_dup float_dup_times integer_max float_inc print_integer integer_mod integer_yank integer_shove integer_swap integer_stackdepth float_stackdepth integer_mod float_div float_shove integer_min float_flush integer_min float_mult float_sub integer_pop float_flush integer_dec tag_integer_222 integer_mod integer_sub integer_yank in1 in2 float_min float_min float_dec integer_add float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_pop float_min float_sub float_dup_items integer_dec float_min integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3249.910367399999
Median total errors in population: 290.2267
Error averages by case: (108.0411579999992 11.19 122.79156430000059 11.379 122.1686222999989 11.416 125.5007248999991 11.287 122.83978760000083 11.311 115.015372500001 11.244 122.47173659999905 12.138 119.24695759999773 11.34 129.8354501999993 10.464 126.62667459999928 11.231 123.00843720000242 11.333 125.20748320000098 11.292 120.42862649999844 11.119 119.97585150000062 11.249 121.8226161999977 11.987 92.75273639999881 11.177 116.92497889999808 12.013 127.36163849999794 11.091 112.79233940000006 11.185 110.44474579999873 12.06 117.5754114999982 11.162 111.93828889999877 11.221 114.03362759999878 11.181 124.49313050000161 11.256 113.25440670000111 11.032)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 5 0.278 4 0.4944 4 0.3243 9 0.013 3 0.3927 9 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 51.185
Average program size in population (points): 52.185
Average percent parens in population: 0.020
Minimum age in population: 63.32171352297973
Maximum age in population: 68.83826998061897
Average age in population: 66.66788648811212
Median age in population: 66.71331034738975
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.065
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 65661561
--- Timings ---
Current time: 1529615778174 milliseconds
Total Time:         150.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.3 seconds, 46.1%
Fitness Testing:     63.6 seconds, 42.2%
Report:              17.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_div} {:instruction float_pop} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_mod} {:instruction print_integer} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction float_min} {:instruction float_add} {:instruction float_shove} {:instruction float_sin})
Best program: (float_sin integer_max float_sin float_dup_times integer_min float_mult float_sub integer_pop float_dup_times integer_sub tag_integer_222 float_tan integer_mod integer_yankdup float_dup_items in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_div float_pop float_shove float_sin integer_pop integer_dup float_sub float_dup_items float_mod print_integer tagged_80 float_tan float_sub float_dup_items integer_add print_integer in1 float_min float_add float_shove float_sin)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2337.9019200999996
Median total errors in population: 290.2267
Error averages by case: (74.24867750000054 11.138 84.12338079999937 11.292 83.91974859999911 11.314 86.92022719999922 11.215 85.1557696000007 11.243 78.0834905999996 11.197 84.46792619999941 12.113 81.49198269999971 11.26 90.29655629999942 10.365 88.4685628000006 11.163 84.47524230000045 11.253 86.07607359999966 11.216 85.02092800000003 11.083 84.5226143999996 11.166 84.04227739999932 12.006 69.74228700000039 11.118 79.3466577999988 12.005 87.96739019999842 11.065 78.81799110000006 11.145 79.1925765000004 12.05 82.56063999999988 11.119 77.45965059999895 11.153 78.46243429999902 11.137 84.47054820000011 11.193 76.55228640000065 11.007)
Error minima by case: (0.0 2 0.3809 5 0.0178 4 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 3 0.2227 3 0.0718 5 0.4354 3)
Average genome size in population (length): 50.218
Average program size in population (points): 51.218
Average percent parens in population: 0.020
Minimum age in population: 64.32171352297973
Maximum age in population: 70.13468493127766
Average age in population: 68.07287783435866
Median age in population: 68.09496480125509
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 66917986
--- Timings ---
Current time: 1529615781258 milliseconds
Total Time:         153.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.8 seconds, 46.1%
Fitness Testing:     64.9 seconds, 42.2%
Report:              17.9 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction print_integer} {:instruction print_integer} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_max} {:instruction float_mult} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction float_sub} {:instruction float_flush} {:instruction float_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_flush} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_9972} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_shove} {:instruction integer_fromfloat})
Best program: (float_sin print_integer print_integer integer_dec float_inc print_integer integer_max integer_pop integer_max float_mult integer_shove integer_swap integer_flush integer_shove float_cos integer_pop integer_mod float_frominteger integer_stackdepth float_stackdepth integer_mod float_shove float_shove integer_min float_sub float_sub float_flush float_mult integer_div integer_pop float_flush float_sub float_yankdup float_mod in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_9972 float_tan float_sub float_dup_items integer_add print_integer float_inc float_shove integer_fromfloat)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3279.7486268
Median total errors in population: 290.2267
Error averages by case: (112.41857019999829 11.189 125.17618660000163 11.362 124.92593669999894 11.397 123.90570129999908 11.306 121.37855200000082 11.317 116.52082660000188 11.253 118.57574779999901 12.158 115.09763329999704 11.322 125.68233859999931 10.458 124.5582123999984 11.237 126.04852680000346 11.325 123.5825969000019 11.295 125.55841259999738 11.113 123.92137460000176 11.218 118.99635959999702 12.003 102.56926869999751 11.163 118.75487469999813 12.026 124.7704679999979 11.119 116.21655990000005 11.183 117.59797869999777 12.055 121.74784009999699 11.15 114.29396649999877 11.195 119.36383979999884 11.174 120.18881980000229 11.256 114.59903460000116 11.025)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 9 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 2 0.0731 11 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 49.964
Average program size in population (points): 50.964
Average percent parens in population: 0.021
Minimum age in population: 66.31293522140993
Maximum age in population: 71.82664253112823
Average age in population: 69.54885670677201
Median age in population: 69.57970472408076
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.831
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.831
Total error diversity:				 0.058
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 68167861
--- Timings ---
Current time: 1529615784073 milliseconds
Total Time:         156.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.2 seconds, 46.1%
Fitness Testing:     66.0 seconds, 42.2%
Report:              18.2 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_cos} {:instruction print_float} {:instruction integer_pop} {:instruction float_sub} {:instruction float_mult} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_sub} {:instruction in2} {:instruction float_min} {:instruction float_min} {:instruction float_add} {:instruction float_yankdup} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_pop} {:instruction float_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_20} {:instruction float_pop} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_min})
Best program: (float_sin integer_dec float_inc integer_dup float_dup_times float_cos print_float integer_pop float_sub float_mult float_rot integer_pop integer_sub integer_sub in2 float_min float_min float_add float_yankdup in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_pop float_min float_dup_items integer_add print_integer integer_fromfloat integer_stackdepth tagged_20 float_pop float_sub float_dup_items integer_add integer_mult integer_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2297.1119558999994
Median total errors in population: 290.2267
Error averages by case: (78.53161450000034 11.139 85.40873919999935 11.286 84.98246309999888 11.301 86.95081849999907 11.216 84.25865470000083 11.235 77.59161079999996 11.194 79.7431691999996 12.115 79.47091649999986 11.256 90.6635562999993 10.36 88.17586960000067 11.182 85.01659130000061 11.242 84.2005251999998 11.221 80.72950850000032 11.098 80.34178129999944 11.187 79.33265849999952 12.009 68.76950780000034 11.118 76.14672589999861 12.025 85.96513009999839 11.069 74.55728430000005 11.145 77.34415620000034 12.038 77.2871162000001 11.137 74.07012509999882 11.163 77.99913239999889 11.146 83.83476110000038 11.196 73.63153960000056 11.03)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 49.558
Average program size in population (points): 50.558
Average percent parens in population: 0.021
Minimum age in population: 68.81446234895898
Maximum age in population: 73.04419927316422
Average age in population: 70.99820321020371
Median age in population: 71.06100195681498
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.052
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 69407436
--- Timings ---
Current time: 1529615786818 milliseconds
Total Time:         159.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.5 seconds, 46.1%
Fitness Testing:     67.2 seconds, 42.1%
Report:              18.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_rot} {:instruction float_flush} {:instruction integer_min} {:instruction integer_dup_items} {:instruction float_sin} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_mod} {:instruction float_shove} {:instruction float_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction in1} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_217} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_sin} {:instruction float_inc})
Best program: (float_stackdepth float_rot float_flush integer_min integer_dup_items float_sin integer_pop float_flush integer_sub tag_integer_222 integer_max integer_pop integer_shove integer_mult integer_mod float_shove float_mod in1 in2 float_min float_dec integer_sub in1 float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_217 float_tan float_sub float_dup_items integer_add print_integer float_inc float_sin float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2883.3652171999997
Median total errors in population: 290.2267
Error averages by case: (98.2956755999992 11.183 109.89026070000051 11.361 108.98411989999899 11.382 108.08073689999914 11.275 105.76723310000077 11.299 100.45170820000101 11.238 103.14172029999924 12.13 101.30494619999823 11.33 111.85678059999934 10.458 109.77797039999943 11.224 109.66523650000192 11.313 106.69518680000067 11.275 107.93752909999888 11.126 107.45435670000045 11.224 102.67173799999824 12.001 88.98010239999893 11.167 101.62473829999846 12.022 109.18499429999817 11.101 100.67003590000006 11.192 99.57676029999895 12.053 104.31161239999868 11.171 98.18929949999885 11.209 102.79608699999889 11.176 104.33561390000126 11.246 98.53577420000096 11.029)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 49.718
Average program size in population (points): 50.718
Average percent parens in population: 0.021
Minimum age in population: 70.02262808373058
Maximum age in population: 74.31554411824924
Average age in population: 72.47171426219143
Median age in population: 72.52750507146357
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.82
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.82
Total error diversity:				 0.052
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 70651061
--- Timings ---
Current time: 1529615789614 milliseconds
Total Time:         162.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.9 seconds, 46.2%
Fitness Testing:     68.3 seconds, 42.1%
Report:              18.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction float_dec} {:instruction float_min} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_mod} {:instruction integer_swap} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_inc} {:instruction float_sin} {:instruction integer_pop} {:instruction -83.06768277986632} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult})
Best program: (integer_flush float_pop in1 in2 float_min integer_fromfloat float_dec float_dec float_min integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup float_sub float_dup_items float_mod integer_swap float_inc float_min integer_inc float_inc float_sin integer_pop -83.06768277986632 integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2816.4186183999996
Median total errors in population: 290.2267
Error averages by case: (93.26088449999939 11.159 106.16080900000048 11.341 105.16756739999889 11.364 104.35851219999905 11.259 102.54071350000086 11.278 97.62390120000111 11.235 100.64999319999923 12.118 98.06446159999807 11.296 108.21535349999928 10.43 106.52937759999958 11.182 105.88207330000198 11.301 103.76449350000073 11.251 106.94291509999883 11.096 105.62420120000057 11.218 101.49916429999797 11.98 86.38866189999936 11.145 100.46897989999823 12.022 105.39881559999809 11.088 98.54289500000004 11.163 95.71550849999883 12.039 103.41476789999844 11.135 97.6786199999988 11.191 100.55407129999878 11.147 100.44940090000142 11.217 98.85647630000093 11.011)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 3 0.2021 9 0.2914 10 0.0691 4 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 3 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 48.639
Average program size in population (points): 49.639
Average percent parens in population: 0.021
Minimum age in population: 71.50685441560694
Maximum age in population: 76.09998943214615
Average age in population: 73.96950484549617
Median age in population: 74.02783982384759
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.055
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 71867800
--- Timings ---
Current time: 1529615792427 milliseconds
Total Time:         164.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        76.3 seconds, 46.3%
Fitness Testing:     69.4 seconds, 42.1%
Report:              19.1 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_max} {:instruction float_inc} {:instruction print_integer} {:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction print_integer} {:instruction integer_max} {:instruction float_swap} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction tagged_78} {:instruction float_cos} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_add} {:instruction print_integer} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_shove} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_min} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop})
Best program: (float_rot print_integer integer_dec print_integer integer_max float_inc print_integer float_sin integer_dec float_inc integer_dup print_integer integer_max float_swap integer_shove integer_swap integer_stackdepth print_float integer_pop float_sub float_shove in1 in2 float_min float_dec integer_sub float_sub float_mult integer_mult float_inc integer_fromfloat float_stackdepth tagged_78 float_cos float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc integer_add print_integer integer_pop integer_dup integer_stackdepth integer_inc float_shove float_dup_items integer_add print_integer integer_min float_min integer_inc float_shove float_sin integer_pop)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2755.0268223999997
Median total errors in population: 290.2267
Error averages by case: (93.8180674999991 11.199 105.25414370000058 11.376 103.52826479999895 11.401 102.7702510999991 11.29 100.3868128000008 11.318 95.37699980000106 11.247 96.36833059999933 12.151 94.39080799999824 11.332 104.9382247999993 10.472 102.12172199999942 11.234 104.67695640000197 11.335 102.14382430000086 11.291 103.3509359999988 11.143 101.85290720000069 11.241 96.49335959999809 12.0 87.280533999999 11.175 97.58541549999846 12.017 104.78346799999825 11.098 93.91618590000006 11.204 97.02570219999885 12.057 99.01359749999857 11.193 93.20176709999883 11.217 97.16831219999887 11.21 98.59818400000154 11.262 95.47804740000088 11.041)
Error minima by case: (0.3075 1 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 10 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 9 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 48.483
Average program size in population (points): 49.483
Average percent parens in population: 0.021
Minimum age in population: 72.50685441560694
Maximum age in population: 77.38363102338192
Average age in population: 75.38423404358203
Median age in population: 75.40509335612587
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.808
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.808
Total error diversity:				 0.057
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.061
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 73080875
--- Timings ---
Current time: 1529615795517 milliseconds
Total Time:         167.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.9 seconds, 46.4%
Fitness Testing:     70.6 seconds, 42.0%
Report:              19.4 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_max} {:instruction float_max} {:instruction tag_integer_451} {:instruction float_yankdup} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction -9.9687910257487} {:instruction integer_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_flush} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction float_sub} {:instruction float_max} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_mod} {:instruction float_inc} {:instruction float_min} {:instruction float_max} {:instruction integer_sub} {:instruction float_min} {:instruction float_shove} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult})
Best program: (float_inc integer_fromfloat integer_max float_max tag_integer_451 float_yankdup float_sub integer_pop float_flush -9.9687910257487 integer_flush integer_min float_sub integer_flush float_add integer_yank in1 float_sub float_max float_flush integer_sub tag_integer_222 float_tan integer_mod integer_mod float_inc float_min float_max integer_sub float_min float_shove float_tan integer_mod float_add integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2429.9456895999992
Median total errors in population: 290.2267
Error averages by case: (81.32910530000014 11.154 90.35569199999976 11.311 90.21155209999893 11.338 87.93795229999907 11.257 85.44701600000083 11.269 82.39274080000011 11.213 84.50145459999942 12.142 82.65835939999945 11.282 93.76655739999931 10.402 90.4262577000002 11.208 90.56448290000114 11.281 87.40899779999992 11.26 88.87162849999979 11.127 88.46702439999979 11.205 84.33727739999915 12.009 73.31445030000003 11.148 84.8541496999985 12.038 88.1395734999983 11.09 82.22847230000005 11.175 84.09120929999995 12.053 86.03672989999943 11.162 81.82517539999877 11.193 83.34654159999883 11.165 88.18718920000062 11.23 86.48909980000076 11.045)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 4 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 4)
Average genome size in population (length): 48.013
Average program size in population (points): 49.013
Average percent parens in population: 0.021
Minimum age in population: 74.06886272495883
Maximum age in population: 78.84092882978767
Average age in population: 76.87268704223848
Median age in population: 76.91059047125702
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.05
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 74281800
--- Timings ---
Current time: 1529615798449 milliseconds
Total Time:         170.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.3 seconds, 46.4%
Fitness Testing:     71.7 seconds, 42.0%
Report:              19.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_add} {:instruction float_tan} {:instruction integer_mod} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_sub} {:instruction float_swap} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_cos} {:instruction float_max} {:instruction in2} {:instruction integer_pop} {:instruction float_tan} {:instruction float_tan} {:instruction integer_mod} {:instruction float_tan} {:instruction integer_min} {:instruction float_add} {:instruction integer_yank} {:instruction float_min} {:instruction float_min} {:instruction float_add} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_20} {:instruction float_pop} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_dec})
Best program: (float_sin integer_dec float_inc integer_add float_tan integer_mod float_yank integer_stackdepth integer_dec print_float float_stackdepth float_sub float_swap integer_max integer_pop integer_shove float_cos float_max in2 integer_pop float_tan float_tan integer_mod float_tan integer_min float_add integer_yank float_min float_min float_add in1 in1 in2 float_min integer_fromfloat integer_stackdepth tagged_20 float_pop float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_dup_times float_sub float_dup_items integer_add print_integer float_inc float_sin integer_inc integer_pop float_dec)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2651.5970219999995
Median total errors in population: 290.2267
Error averages by case: (84.14552749999997 11.203 101.70014370000031 11.386 99.92906899999886 11.409 99.9322178999991 11.278 97.43030560000082 11.316 92.81736200000077 11.228 91.91421119999931 12.127 88.54077539999896 11.34 102.32700269999927 10.466 99.37372199999972 11.226 101.06275450000179 11.342 99.52113480000067 11.286 99.75382399999906 11.141 99.13343520000039 11.248 92.03819699999845 11.991 78.70666399999989 11.193 94.99326949999836 12.011 102.4320727999982 11.098 88.90513720000006 11.201 91.10487179999946 12.063 96.5697124999988 11.175 85.98857569999875 11.223 93.00242139999878 11.205 93.28826100000106 11.267 93.52535360000081 11.038)
Error minima by case: (0.3075 4 0.3809 6 0.0178 6 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 7 0.0828 5 0.4729 5 0.4621 5 0.278 4 0.4944 4 0.3243 9 0.013 3 0.3927 9 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 47.904
Average program size in population (points): 48.904
Average percent parens in population: 0.021
Minimum age in population: 75.630118212144
Maximum age in population: 80.15499772134613
Average age in population: 78.34041228147846
Median age in population: 78.40372126713075
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.834
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.834
Total error diversity:				 0.06
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 75480150
--- Timings ---
Current time: 1529615801212 milliseconds
Total Time:         173.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        80.7 seconds, 46.5%
Fitness Testing:     72.8 seconds, 41.9%
Report:              20.1 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_pop} {:instruction integer_max} {:instruction float_mult} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_178} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_mod} {:instruction in2} {:instruction float_min} {:instruction float_max} {:instruction integer_sub} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_add} {:instruction float_min} {:instruction tagged_605} {:instruction -67.62049997953739} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_div} {:instruction float_shove} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction in1} {:instruction float_sin})
Best program: (float_rot float_sin float_dup_times float_flush float_mult float_dup_items print_integer float_pop integer_max float_mult integer_pop float_flush integer_sub tag_integer_178 float_shove float_shove integer_min float_sub integer_min integer_rot integer_sub tag_integer_222 float_tan integer_mod integer_mod in2 float_min float_max integer_sub in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_add float_min tagged_605 -67.62049997953739 integer_fromfloat integer_stackdepth tag_float_413 float_inc integer_mult float_tan integer_flush integer_fromfloat integer_yankdup integer_flush float_div float_shove float_dup_items integer_dup_times integer_swap in1 float_sin)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2521.4051854
Median total errors in population: 290.2267
Error averages by case: (83.25883499999996 11.165 94.68562009999995 11.331 93.468211399999 11.35 93.32326039999917 11.254 90.67377440000072 11.284 87.3423305000003 11.207 89.38462839999933 12.105 86.52087709999923 11.298 98.01155849999934 10.404 94.5598048 11.205 94.28948350000128 11.286 92.45083890000022 11.258 93.00354199999953 11.11 92.57104159999997 11.211 88.61284559999892 11.988 74.43570299999968 11.155 87.85001839999852 11.997 94.03177939999829 11.097 85.31151130000006 11.182 87.7166758999995 12.04 90.20870499999921 11.155 83.99422479999889 11.189 87.44297599999895 11.169 91.6851840000007 11.22 83.87475540000085 11.037)
Error minima by case: (0.3075 4 0.3809 6 0.0178 6 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 4 0.278 3 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 3 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 47.668
Average program size in population (points): 48.668
Average percent parens in population: 0.022
Minimum age in population: 77.12548188470905
Maximum age in population: 81.70538540348532
Average age in population: 79.80189383829737
Median age in population: 79.82064102409578
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.824
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.824
Total error diversity:				 0.066
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 76672875
--- Timings ---
Current time: 1529615803997 milliseconds
Total Time:         176.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        82.0 seconds, 46.5%
Fitness Testing:     73.9 seconds, 41.9%
Report:              20.4 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_inc} {:instruction tag_integer_145} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_pop} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_mod} {:instruction print_integer} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction integer_add} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_flush} {:instruction float_inc})
Best program: (float_sin integer_max float_sin float_dup_times integer_min float_mult float_sub integer_pop float_dup_times integer_inc tag_integer_145 integer_min integer_mod integer_yankdup float_dup_items in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_pop float_shove float_sin integer_pop integer_dup float_sub float_dup_items float_mod print_integer tagged_80 float_tan float_sub integer_add float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc integer_sub float_flush float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2739.9615555999994
Median total errors in population: 290.2267
Error averages by case: (92.47134949999983 11.181 101.71700960000027 11.345 100.71247819999898 11.356 104.10125619999909 11.29 101.96820780000084 11.303 95.55722360000074 11.23 97.61781639999917 12.151 97.74241899999816 11.319 106.91467409999932 10.431 104.58288349999947 11.248 101.20336910000177 11.314 103.32313080000081 11.284 99.425912599999 11.151 98.91646450000036 11.218 97.15662589999813 12.023 84.1549186999993 11.167 96.73446199999822 12.043 104.61691649999793 11.128 92.21931500000007 11.182 95.42527339999909 12.057 97.09975499999878 11.175 92.0305867999988 11.203 94.3570339999989 11.193 100.74570380000154 11.26 95.86276960000097 11.052)
Error minima by case: (0.3075 4 0.3809 5 0.0178 4 0.2417 5 0.2512 5 0.2021 10 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 4 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 4 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 3 0.4354 4)
Average genome size in population (length): 47.09
Average program size in population (points): 48.09
Average percent parens in population: 0.022
Minimum age in population: 78.41590811494522
Maximum age in population: 83.31067590697447
Average age in population: 81.21826590621313
Median age in population: 81.25586371256209
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.808
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.808
Total error diversity:				 0.055
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 77850725
--- Timings ---
Current time: 1529615806827 milliseconds
Total Time:         179.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.5 seconds, 46.6%
Fitness Testing:     75.0 seconds, 41.8%
Report:              20.7 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_max} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction integer_max} {:instruction integer_flush} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_mult})
Best program: (float_rot print_integer integer_dec print_integer integer_max integer_inc integer_pop integer_shove integer_mod integer_dup float_dup_times float_flush integer_min float_sub integer_min integer_max integer_flush in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2578.315542099999
Median total errors in population: 290.2267
Error averages by case: (89.38498749999981 11.185 96.03904819999981 11.361 94.19905119999912 11.372 95.84146889999917 11.269 93.7947696000007 11.301 89.36609690000037 11.227 89.81525739999944 12.121 88.84905179999916 11.332 98.07966789999942 10.452 96.33172840000019 11.219 95.38622740000105 11.314 95.0345357000002 11.278 96.52170799999944 11.136 95.45056960000005 11.234 89.62065589999887 11.996 78.80650799999965 11.176 91.03126509999862 12.02 97.62039019999835 11.098 88.92746260000006 11.205 82.8412109999997 12.051 92.93122999999918 11.182 87.92684199999896 11.218 90.291093799999 11.179 90.76847640000068 11.253 90.22423860000075 11.053)
Error minima by case: (0.3075 2 0.3809 3 0.9822 3 0.2417 2 0.7488 2 0.7979 10 0.7086 10 0.0691 9 0.2221 9 0.9172 9 0.5271 3 0.4621 2 0.722 9 0.5056 9 0.3243 10 0.987 1 0.3927 10 0.7006 1 0.1057 9 0.0731 10 0.3525 9 0.9681 10 0.2227 1 0.0718 10 0.4354 9)
Average genome size in population (length): 46.706
Average program size in population (points): 47.706
Average percent parens in population: 0.022
Minimum age in population: 80.13311111263566
Maximum age in population: 84.90860422466537
Average age in population: 82.66783515849784
Median age in population: 82.70584999266796
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.823
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.823
Total error diversity:				 0.051
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 79019050
--- Timings ---
Current time: 1529615809553 milliseconds
Total Time:         182.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.9 seconds, 46.6%
Fitness Testing:     76.0 seconds, 41.8%
Report:              21.1 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction print_integer} {:instruction integer_sub} {:instruction float_shove} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction tagged_20} {:instruction float_mult} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_yank} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer})
Best program: (float_rot print_integer integer_sub float_shove float_sin float_dup_times float_flush float_stackdepth integer_yank float_stackdepth integer_mod float_shove float_swap integer_min float_sub tagged_20 float_mult float_sub integer_inc integer_pop float_flush integer_sub tag_integer_222 float_tan integer_mod in1 in2 float_min integer_fromfloat integer_sub float_pop integer_yank integer_mult in1 integer_fromfloat integer_stackdepth tag_integer_222 float_tan integer_pop in1 in2 float_min integer_fromfloat integer_stackdepth float_tan float_sub float_dup_items integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2199.4708949999995
Median total errors in population: 290.2267
Error averages by case: (68.2551671000008 11.144 80.7993734999995 11.296 79.67989569999901 11.318 83.20161099999915 11.223 81.44550400000077 11.246 71.80065609999967 11.184 79.74534339999947 12.08 76.19432819999965 11.271 82.53511209999938 10.376 80.53839720000049 11.167 80.82147380000072 11.255 84.08908089999987 11.231 78.74133360000013 11.09 77.89862029999964 11.195 79.35627739999921 11.976 62.1049521000006 11.123 73.27208599999868 11.991 88.3703961999983 11.071 70.29435490000004 11.144 69.46249660000076 12.031 75.81234650000002 11.119 69.54258459999883 11.177 72.46688209999893 11.142 79.15376360000036 11.19 71.83185810000053 11.017)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 9 0.2914 10 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 2 0.0731 8 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 47.109
Average program size in population (points): 48.109
Average percent parens in population: 0.022
Minimum age in population: 81.30311827791019
Maximum age in population: 86.19541952441821
Average age in population: 84.11592700123649
Median age in population: 84.18368739691351
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.824
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.824
Total error diversity:				 0.056
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 80197500
--- Timings ---
Current time: 1529615812413 milliseconds
Total Time:         184.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        86.4 seconds, 46.7%
Fitness Testing:     77.1 seconds, 41.7%
Report:              21.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_pop} {:instruction integer_max} {:instruction float_mult} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_178} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction integer_rot} {:instruction float_swap} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_mod} {:instruction in2} {:instruction float_min} {:instruction float_max} {:instruction integer_sub} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_add} {:instruction float_min} {:instruction tagged_605} {:instruction -67.62049997953739} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_yank} {:instruction float_tan} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_div} {:instruction float_shove} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction in1} {:instruction float_sin})
Best program: (float_rot float_dec float_dup_times float_flush float_mult float_dup_items print_integer float_pop integer_max float_mult integer_pop float_flush integer_sub tag_integer_178 float_shove float_shove integer_min float_sub integer_min integer_rot float_swap tag_integer_222 float_tan integer_mod integer_mod in2 float_min float_max integer_sub in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_add float_min tagged_605 -67.62049997953739 integer_fromfloat integer_stackdepth tag_float_413 float_inc integer_yank float_tan integer_flush integer_fromfloat integer_yankdup integer_rot float_div float_shove float_dup_items integer_dup_times integer_swap in1 float_sin)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2689.9590885999996
Median total errors in population: 290.2267
Error averages by case: (90.5931399999992 11.184 99.42904820000064 11.345 97.59214019999904 11.362 99.86588589999918 11.278 98.55925760000072 11.298 92.50709690000102 11.225 99.24154879999926 12.147 96.8734298999981 11.315 101.99011319999944 10.432 100.70339079999918 11.242 98.20464610000201 11.309 100.40069460000112 11.291 97.25142599999863 11.135 97.70065920000062 11.22 97.57135869999787 12.026 85.8714819999986 11.16 92.89269429999841 12.023 101.61359379999817 11.121 93.84473100000005 11.189 92.51421099999878 12.063 95.92240249999853 11.169 92.61636349999884 11.2 94.07464839999895 11.183 99.71461480000158 11.254 89.19451120000095 11.045)
Error minima by case: (0.3075 1 0.3809 3 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 4 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 3 0.2227 3 0.0718 3 0.4354 3)
Average genome size in population (length): 46.814
Average program size in population (points): 47.814
Average percent parens in population: 0.022
Minimum age in population: 82.30311827791019
Maximum age in population: 87.56635929407655
Average age in population: 85.56378923030216
Median age in population: 85.59365825688994
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.84
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.84
Total error diversity:				 0.048
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 81368613
--- Timings ---
Current time: 1529615815287 milliseconds
Total Time:         187.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.8 seconds, 46.8%
Fitness Testing:     78.2 seconds, 41.7%
Report:              21.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction print_integer} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction -65.99204790093485} {:instruction float_mult} {:instruction float_shove} {:instruction integer_pop} {:instruction float_flush} {:instruction float_tan} {:instruction tag_integer_222} {:instruction float_tan} {:instruction float_mult} {:instruction float_frominteger} {:instruction float_div} {:instruction float_shove} {:instruction float_inc} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction integer_rot} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction float_inc})
Best program: (float_frominteger print_integer float_swap integer_min float_sub -65.99204790093485 float_mult float_shove integer_pop float_flush float_tan tag_integer_222 float_tan float_mult float_frominteger float_div float_shove float_inc integer_sub tag_integer_222 integer_rot in1 in2 float_min float_dec integer_sub float_sub in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_sub integer_inc integer_add print_integer float_inc float_min integer_inc float_shove float_sin float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2559.2560913999996
Median total errors in population: 290.2267
Error averages by case: (86.92421749999913 11.155 95.46104820000056 11.295 95.04197999999887 11.316 93.78988589999905 11.228 92.00025760000085 11.245 89.0686822000011 11.197 90.97688639999932 12.105 89.08563719999823 11.266 96.14122369999927 10.371 94.62397679999947 11.18 95.42039000000212 11.257 92.90715670000085 11.229 95.06625999999883 11.096 94.59264800000065 11.189 90.44354749999802 11.994 81.04549499999857 11.131 89.91562129999832 12.007 94.79099499999808 11.088 89.30673100000006 11.16 85.10586889999905 12.047 92.47569749999855 11.131 87.9724591999987 11.175 90.58909379999879 11.147 91.08004560000144 11.2 83.19628640000086 11.025)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 10 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 47.092
Average program size in population (points): 48.092
Average percent parens in population: 0.022
Minimum age in population: 83.88313402658187
Maximum age in population: 88.89431943083811
Average age in population: 87.01419393950529
Median age in population: 87.03689652215172
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.812
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.812
Total error diversity:				 0.044
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 82546713
--- Timings ---
Current time: 1529615818029 milliseconds
Total Time:         190.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        89.2 seconds, 46.8%
Fitness Testing:     79.3 seconds, 41.6%
Report:              21.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction float_dup} {:instruction float_mod} {:instruction float_sub} {:instruction float_flush} {:instruction float_yank} {:instruction float_mult} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_mod} {:instruction integer_dup} {:instruction float_max} {:instruction integer_mod} {:instruction float_shove} {:instruction float_shove} {:instruction print_float} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_sub} {:instruction float_sub} {:instruction integer_pop} {:instruction float_tan} {:instruction integer_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_yank} {:instruction float_mult} {:instruction float_tan} {:instruction integer_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_rot} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction integer_max})
Best program: (float_sin integer_dec float_inc print_integer float_dup float_mod float_sub float_flush float_yank float_mult float_dec float_mult integer_mod integer_pop integer_mod integer_dup float_max integer_mod float_shove float_shove print_float integer_rot float_flush integer_sub float_sub integer_pop float_tan integer_mod in1 in2 float_min integer_fromfloat integer_stackdepth float_tan float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_yank float_mult float_tan integer_dup float_dup_items integer_add print_integer float_rot float_min integer_inc float_shove float_dup_items float_frominteger print_integer float_inc float_min integer_inc float_shove float_sin integer_pop integer_dup integer_stackdepth integer_max)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2820.2954189999996
Median total errors in population: 290.2267
Error averages by case: (89.70158159999994 11.137 105.12747739999975 11.299 103.88933599999896 11.312 108.14795229999915 11.238 105.67526720000076 11.265 97.9408843000005 11.201 102.88750899999914 12.111 100.9535315999988 11.267 110.67711429999936 10.386 108.69130160000014 11.168 104.61479380000131 11.267 106.4245357000002 11.229 104.68737199999937 11.077 104.19362559999998 11.176 102.5323044999985 11.973 81.81783299999935 11.12 98.84044319999829 12.004 107.71358779999804 11.083 98.14730820000005 11.144 96.27779579999931 12.046 101.711754999999 11.103 96.67549109999885 11.159 99.85953059999889 11.122 103.93575320000073 11.176 97.10933420000103 10.999)
Error minima by case: (0.0 2 0.3809 2 0.9822 2 0.2417 3 0.2512 3 0.2021 9 0.7086 10 0.0691 3 0.2221 3 0.0828 3 0.5271 2 0.4621 3 0.722 2 0.5056 2 0.3243 9 0.987 2 0.3927 10 0.2994 3 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 46.818
Average program size in population (points): 47.818
Average percent parens in population: 0.022
Minimum age in population: 85.73119333896533
Maximum age in population: 90.57363434926863
Average age in population: 88.4772026778449
Median age in population: 88.5493093747072
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.816
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.816
Total error diversity:				 0.062
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 83717713
--- Timings ---
Current time: 1529615820988 milliseconds
Total Time:         193.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        90.6 seconds, 46.8%
Fitness Testing:     80.5 seconds, 41.6%
Report:              22.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_dup_items} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_yankdup} {:instruction integer_div} {:instruction in2} {:instruction integer_add} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_add} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_tan} {:instruction float_div} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_sin} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth})
Best program: (float_inc float_dup_items float_sin integer_dec integer_shove print_integer integer_max integer_pop float_rot integer_dec integer_mult float_yankdup integer_div in2 integer_add integer_min float_sub integer_min float_mult float_add integer_pop integer_stackdepth float_dup_items integer_pop float_tan float_div float_add integer_yank in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_sin print_integer integer_dup integer_stackdepth)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2800.7344872999993
Median total errors in population: 290.2267
Error averages by case: (96.20882249999978 11.173 106.58755710000038 11.332 105.76841359999895 11.35 106.83998549999906 11.285 103.35777440000084 11.298 95.7352915000004 11.23 99.1930917999992 12.124 95.38553159999863 11.305 108.7862258999993 10.427 106.46879839999963 11.216 106.82719830000194 11.295 104.25961150000063 11.266 104.79134899999922 11.114 104.39459860000017 11.216 98.9319801999985 11.988 85.19276199999919 11.142 98.24288889999825 12.013 105.48788719999806 11.108 97.79438390000006 11.179 95.12713799999932 12.052 101.39598249999901 11.147 95.77760069999877 11.192 100.35912739999885 11.16 99.26882500000106 11.223 95.68766180000092 11.029)
Error minima by case: (0.3075 2 0.3809 2 0.9822 2 0.2417 3 0.2512 3 0.2021 9 0.2914 9 0.0691 3 0.2221 3 0.0828 3 0.5271 2 0.4621 3 0.722 2 0.5056 2 0.3243 10 0.987 2 0.3927 9 0.2994 3 0.1057 2 0.0731 11 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 47.075
Average program size in population (points): 48.075
Average percent parens in population: 0.022
Minimum age in population: 86.93706783181015
Maximum age in population: 91.80401238562939
Average age in population: 89.9114515549176
Median age in population: 89.97532217626282
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.814
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.814
Total error diversity:				 0.062
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 84895352
--- Timings ---
Current time: 1529615823831 milliseconds
Total Time:         196.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        92.0 seconds, 46.9%
Fitness Testing:     81.5 seconds, 41.5%
Report:              22.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction print_float} {:instruction integer_pop} {:instruction float_sub} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_min} {:instruction float_min} {:instruction float_add} {:instruction float_yankdup} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_mod} {:instruction tag_integer_381} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_pop} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_flush print_float integer_pop float_sub float_mult float_sub integer_pop integer_sub integer_sub integer_dec float_min float_min float_add float_yankdup in1 in2 float_min integer_fromfloat integer_stackdepth integer_dec float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_dup_items integer_dup_times print_integer integer_fromfloat float_dup_items integer_add print_integer float_inc float_min float_dec integer_fromfloat integer_stackdepth tagged_80 float_dup float_sub float_dup_items integer_add print_integer float_inc integer_flush float_dec float_shove float_sin integer_pop integer_dup integer_mod tag_integer_381 float_inc integer_mult integer_dec integer_mult float_pop integer_yankdup integer_flush)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2720.0389009999994
Median total errors in population: 290.2267
Error averages by case: (87.39764900000002 11.167 103.30562130000018 11.324 102.368887099999 11.343 103.77343569999911 11.264 101.43626240000077 11.276 93.02323020000053 11.217 96.73814889999919 12.132 93.7822033999988 11.286 106.20589699999938 10.415 104.16924939999981 11.212 103.3719252000017 11.293 102.27038410000046 11.267 100.67856469999909 11.12 100.2825496000003 11.198 97.21830139999848 12.016 83.05035959999951 11.145 95.12043359999828 12.031 102.32710119999795 11.106 92.31270510000006 11.16 93.24641559999932 12.045 97.14484629999896 11.145 89.76633509999883 11.166 97.66483129999891 11.17 98.38561480000074 11.228 92.24094900000097 11.031)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 9 0.2994 3 0.1057 4 0.0731 8 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 47.122
Average program size in population (points): 48.122
Average percent parens in population: 0.022
Minimum age in population: 88.55471306057044
Maximum age in population: 93.2614114056956
Average age in population: 91.37712573501896
Median age in population: 91.37941617882572
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.817
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.817
Total error diversity:				 0.063
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.065
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 86074027
--- Timings ---
Current time: 1529615826792 milliseconds
Total Time:         199.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        93.5 seconds, 46.9%
Fitness Testing:     82.6 seconds, 41.5%
Report:              23.0 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction print_integer} {:instruction float_swap} {:instruction integer_pop} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction integer_max} {:instruction float_mult} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_flush} {:instruction tagged_547} {:instruction float_swap} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_add} {:instruction print_integer} {:instruction tagged_80} {:instruction integer_dup} {:instruction tagged_305} {:instruction integer_inc} {:instruction float_shove} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_dup})
Best program: (float_sin integer_dec print_integer float_swap integer_pop integer_shove print_integer integer_pop print_integer float_pop integer_max float_mult integer_shove integer_swap integer_flush tagged_547 float_swap integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_dup tagged_80 float_tan float_sub float_yankdup integer_add print_integer tagged_80 integer_dup tagged_305 integer_inc float_shove float_shove float_sin integer_pop integer_dup)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2465.4628008
Median total errors in population: 290.2267
Error averages by case: (86.04196199999973 11.16 93.7112147000002 11.313 91.89665929999887 11.332 90.71017279999906 11.261 87.90754230000084 11.273 83.79954230000057 11.22 83.81027299999931 12.119 82.40243029999884 11.281 93.4810696999993 10.395 91.78074069999985 11.198 93.3157665000019 11.284 88.82432100000031 11.247 91.37385869999925 11.114 90.61870910000002 11.208 83.01622069999866 11.985 75.07702029999969 11.155 85.16333079999829 12.026 90.1322029999981 11.096 83.79956530000005 11.175 85.37457199999925 12.041 87.65417539999892 11.144 82.3791822999987 11.187 87.05222839999878 11.16 86.51034790000104 11.221 86.9996923000009 11.035)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 10 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 9 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 47.001
Average program size in population (points): 48.001
Average percent parens in population: 0.022
Minimum age in population: 89.90948823887513
Maximum age in population: 94.99640971964807
Average age in population: 92.87016849108753
Median age in population: 92.91673713434056
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.825
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.825
Total error diversity:				 0.057
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 87249652
--- Timings ---
Current time: 1529615829633 milliseconds
Total Time:         202.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        95.0 seconds, 47.0%
Fitness Testing:     83.7 seconds, 41.4%
Report:              23.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_mult} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction in1})
Best program: (float_sin integer_dec float_inc print_integer integer_max integer_mod integer_yank integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc integer_sub integer_mult float_yankdup integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_pop print_integer float_inc float_min integer_inc integer_inc integer_add integer_yankdup integer_flush print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult float_shove float_sin integer_pop integer_inc integer_stackdepth in1)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2473.476510199999
Median total errors in population: 290.2267
Error averages by case: (82.769888 11.128 91.55263149999972 11.288 90.31679649999907 11.311 93.1364356999992 11.227 90.85176480000071 11.237 82.44764360000022 11.204 90.0323433999993 12.112 87.20836079999916 11.265 97.64311319999938 10.385 95.5315564000002 11.183 91.17688370000086 11.255 91.63938409999997 11.214 89.09082589999969 11.093 88.70126239999983 11.18 89.28060169999897 11.992 72.43719129999968 11.118 83.97022229999855 12.021 93.0643901999983 11.065 83.29567390000005 11.134 80.58277249999978 12.034 86.36585699999945 11.117 81.90010769999894 11.161 84.45572959999905 11.14 90.54890200000047 11.197 83.40317200000082 11.012)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 7 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 46.972
Average program size in population (points): 47.972
Average percent parens in population: 0.022
Minimum age in population: 91.78976611153387
Maximum age in population: 96.22203477175286
Average age in population: 94.36870090298746
Median age in population: 94.38432769558668
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.823
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.823
Total error diversity:				 0.05
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 88425027
--- Timings ---
Current time: 1529615832419 milliseconds
Total Time:         204.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        96.4 seconds, 47.1%
Fitness Testing:     84.8 seconds, 41.4%
Report:              23.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_flush} {:instruction print_float} {:instruction integer_pop} {:instruction float_sub} {:instruction float_mult} {:instruction tagged_841} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_min} {:instruction float_min} {:instruction float_add} {:instruction float_yankdup} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction tagged_80} {:instruction float_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction 44} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction float_sin})
Best program: (integer_yankdup integer_dup float_dup_times float_flush print_float integer_pop float_sub float_mult tagged_841 integer_pop integer_sub integer_sub integer_dec float_min float_min float_add float_yankdup in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_dup_items integer_add print_integer integer_fromfloat float_dup_items integer_add print_integer float_inc float_min float_dec integer_fromfloat integer_pop tagged_80 float_dup float_sub float_dup_items integer_add print_integer float_inc 44 integer_stackdepth float_shove float_sin)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2258.2395469
Median total errors in population: 290.2267
Error averages by case: (75.1717425000002 11.149 83.10098409999988 11.286 82.18484399999895 11.31 81.79036929999909 11.237 80.36425280000083 11.248 75.51568970000025 11.199 79.92117769999918 12.113 79.20053549999903 11.259 85.4136667999993 10.364 83.67606600000013 11.19 82.81206550000148 11.259 80.96115670000005 11.228 79.98600489999941 11.1 79.54519179999971 11.189 78.96225019999879 12.0 68.7972940000004 11.137 75.71021209999824 12.016 83.43549199999806 11.078 75.47128960000006 11.149 77.42194189999958 12.037 77.61958489999927 11.137 75.10341339999879 11.169 76.45114469999885 11.146 81.64447640000054 11.203 75.73870040000098 11.037)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 10 0.2914 10 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 46.364
Average program size in population (points): 47.364
Average percent parens in population: 0.022
Minimum age in population: 92.8466246369
Maximum age in population: 97.69464380856685
Average age in population: 95.8521577168511
Median age in population: 95.86711437550476
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 89585402
--- Timings ---
Current time: 1529615835254 milliseconds
Total Time:         207.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        97.9 seconds, 47.1%
Fitness Testing:     85.8 seconds, 41.3%
Report:              23.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_min} {:instruction float_rot} {:instruction integer_add} {:instruction integer_min} {:instruction float_mult} {:instruction float_min} {:instruction integer_dup_times} {:instruction float_add} {:instruction integer_dup} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_mod} {:instruction in2} {:instruction float_min} {:instruction float_max} {:instruction integer_sub} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_inc} {:instruction -67.62049997953739} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_min} {:instruction integer_inc} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction integer_pop})
Best program: (float_sin float_rot print_integer integer_dec float_dup integer_inc integer_pop float_sub integer_min float_rot integer_add integer_min float_mult float_min integer_dup_times float_add integer_dup float_sub float_max integer_rot integer_sub tag_integer_222 float_tan integer_mod integer_mod in2 float_min float_max integer_sub in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc integer_rot integer_inc -67.62049997953739 integer_fromfloat integer_stackdepth float_min integer_inc integer_dup integer_fromfloat integer_stackdepth float_sub float_dup_items float_min integer_inc float_shove integer_fromfloat integer_pop)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2379.9852361999997
Median total errors in population: 290.2267
Error averages by case: (79.81132220000032 11.157 88.21119499999955 11.3 88.31616479999894 11.316 86.79881839999912 11.239 85.00345960000078 11.262 82.26262120000023 11.207 82.85927299999942 12.131 80.25797909999959 11.275 87.2897070999994 10.371 87.37816870000033 11.207 88.89041100000095 11.285 86.77324190000009 11.241 86.32052999999965 11.121 85.4932325999997 11.2 81.1476726999993 12.021 74.91939689999994 11.151 82.91254369999851 12.038 88.2791508999983 11.099 80.76137180000006 11.16 84.02165639999986 12.054 83.14038619999957 11.145 80.0784855999988 11.174 82.7356423999989 11.161 83.83041690000032 11.223 79.91138810000076 11.043)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 10 0.2914 10 0.0691 4 0.2221 4 0.0828 4 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 4 0.1057 4 0.0731 11 0.3525 3 0.0319 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 45.771
Average program size in population (points): 46.771
Average percent parens in population: 0.023
Minimum age in population: 94.73048520902373
Maximum age in population: 99.33389216184804
Average age in population: 97.30010334537405
Median age in population: 97.3373496310179
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.802
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.802
Total error diversity:				 0.055
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 90730827
--- Timings ---
Current time: 1529615838094 milliseconds
Total Time:         210.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        99.3 seconds, 47.2%
Fitness Testing:     86.9 seconds, 41.3%
Report:              24.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction tagged_386} {:instruction print_integer} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_rot} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec})
Best program: (float_sin tagged_386 print_integer integer_dec float_inc integer_rot float_tan integer_mod integer_yank integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc integer_sub integer_dec)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2772.0795676999996
Median total errors in population: 290.2267
Error averages by case: (96.50488069999936 11.151 106.01770200000044 11.304 104.23510849999901 11.312 107.47358979999915 11.242 103.65527670000075 11.271 93.21415230000083 11.204 101.11868099999919 12.118 99.48639339999818 11.268 110.58422589999941 10.382 107.62023759999944 11.204 104.68874590000188 11.274 105.27847990000072 11.229 98.47294889999888 11.113 98.23194740000045 11.179 100.23114189999797 12.005 87.78294199999908 11.128 95.03917739999825 12.023 106.08309679999803 11.107 92.35916320000005 11.155 95.38965839999875 12.041 96.31965609999857 11.127 91.67320719999881 11.163 96.36739969999891 11.145 103.44627090000137 11.204 88.43948410000093 11.017)
Error minima by case: (0.0 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 9 0.2914 10 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 2 0.0731 9 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 45.342
Average program size in population (points): 46.342
Average percent parens in population: 0.023
Minimum age in population: 96.44221421976764
Maximum age in population: 100.6051870586555
Average age in population: 98.79236662704452
Median age in population: 98.80594758789361
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.806
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.806
Total error diversity:				 0.065
Error (vector) diversity:			 0.065
Behavioral diversity:				 0.065
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 91865877
--- Timings ---
Current time: 1529615840821 milliseconds
Total Time:         213.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       100.8 seconds, 47.2%
Fitness Testing:     87.9 seconds, 41.2%
Report:              24.5 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_sin} {:instruction float_mult} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_dup} {:instruction float_shove} {:instruction float_dup} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction integer_inc})
Best program: (float_sin float_stackdepth integer_mod float_dec float_dup_times float_pop integer_max integer_shove integer_swap integer_stackdepth float_stackdepth integer_mod float_shove float_frominteger float_mult float_sub integer_pop integer_inc integer_pop integer_sub integer_fromfloat float_shove float_tan in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_min integer_inc integer_sub float_sin float_mult float_sub float_dup_items integer_add print_integer float_inc float_min integer_dup float_shove float_dup print_integer integer_fromfloat integer_flush integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2445.2443273999993
Median total errors in population: 290.2267
Error averages by case: (81.07778540000005 11.11 88.76895249999997 11.225 87.87511619999893 11.25 93.06443279999907 11.198 90.92596060000085 11.217 82.78997650000044 11.175 87.60924809999919 12.095 86.88617559999885 11.222 95.70856579999935 10.326 94.13136539999994 11.163 88.38574750000154 11.203 91.40155230000046 11.188 88.42132499999909 11.079 88.06473580000025 11.133 86.97420879999859 11.993 73.05766879999977 11.076 83.89996239999819 12.004 92.10953589999791 11.069 83.50583230000005 11.134 81.83086849999962 12.027 85.22232149999908 11.101 82.52412049999874 11.127 83.83526069999887 11.094 89.23941350000098 11.158 76.56119500000091 11.006)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 9 0.2914 9 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 9 0.013 2 0.3927 10 0.2994 2 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 44.445
Average program size in population (points): 45.445
Average percent parens in population: 0.023
Minimum age in population: 97.84335532499507
Maximum age in population: 102.3353030997058
Average age in population: 100.2098421028417
Median age in population: 100.2594014262588
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.057
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 92978352
--- Timings ---
Current time: 1529615843623 milliseconds
Total Time:         216.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       102.3 seconds, 47.3%
Fitness Testing:     89.0 seconds, 41.2%
Report:              24.8 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction float_mod} {:instruction integer_pop} {:instruction float_flush} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_min} {:instruction float_rot} {:instruction float_cos} {:instruction float_flush} {:instruction float_mult} {:instruction float_min} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_rot} {:instruction float_dup_times})
Best program: (float_sin integer_dec float_inc print_integer integer_max float_mod integer_pop float_flush float_yank float_rot integer_yankdup integer_dec float_mult float_dup_items print_integer integer_dec float_inc integer_max float_dup integer_inc integer_pop float_flush integer_min float_rot float_cos float_flush float_mult float_min in1 in2 float_min float_dec integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_dup_items integer_add print_integer float_inc integer_mult integer_sub float_rot float_dup_times)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2312.6741887
Median total errors in population: 290.2267
Error averages by case: (76.73710320000059 11.145 84.30807089999945 11.293 83.52811599999907 11.307 86.42409439999923 11.224 84.88600160000067 11.249 78.88378979999959 11.202 80.15959499999931 12.106 80.30018999999943 11.263 86.86155629999949 10.378 85.31339720000061 11.172 84.07398110000071 11.258 85.85546719999988 11.233 82.58026609999992 11.088 82.0317885999995 11.184 79.62654749999925 11.984 69.1705872000003 11.13 80.20209569999844 12.008 87.0293961999982 11.069 76.74595490000006 11.155 79.52242570000004 12.044 80.05498809999968 11.126 76.16657739999891 11.171 79.306657399999 11.141 82.8594764000001 11.186 77.9110648000009 11.019)
Error minima by case: (0.0 1 0.3809 3 0.0178 3 0.2417 3 0.2512 3 0.2021 10 0.2914 10 0.0691 3 0.2221 4 0.0828 3 0.4729 3 0.4621 3 0.278 3 0.4944 3 0.3243 10 0.013 2 0.3927 10 0.2994 2 0.1057 3 0.0731 10 0.3525 3 0.0319 2 0.2227 2 0.0718 3 0.4354 3)
Average genome size in population (length): 43.715
Average program size in population (points): 44.715
Average percent parens in population: 0.024
Minimum age in population: 99.05758782343221
Maximum age in population: 103.8211381199661
Average age in population: 101.6849965903027
Median age in population: 101.733634497153
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.784
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.784
Total error diversity:				 0.057
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 94072977
--- Timings ---
Current time: 1529615846283 milliseconds
Total Time:         218.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       103.6 seconds, 47.4%
Fitness Testing:     90.0 seconds, 41.1%
Report:              25.1 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_yankdup} {:instruction float_max} {:instruction tag_integer_222} {:instruction integer_dup_times} {:instruction float_cos} {:instruction in2} {:instruction float_min} {:instruction float_rot} {:instruction integer_sub} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction integer_sub} {:instruction float_min} {:instruction float_shove} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult})
Best program: (float_sin float_rot print_integer integer_dec integer_dec print_integer integer_flush integer_min float_sub integer_yankdup float_max tag_integer_222 integer_dup_times float_cos in2 float_min float_rot integer_sub in2 integer_fromfloat integer_stackdepth tagged_80 integer_sub float_min float_shove float_tan integer_mod float_add integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2377.1084278
Median total errors in population: 290.2267
Error averages by case: (79.82644749999974 11.144 89.19547629999991 11.282 87.76889099999899 11.308 87.52278629999913 11.233 85.3792432000008 11.251 82.77106540000061 11.209 80.6959723999997 12.11 80.59705179999962 11.266 89.08811209999939 10.371 87.94964560000014 11.179 89.26655260000082 11.252 85.43623980000031 11.232 86.46347999999982 11.108 86.08270400000013 11.188 80.6251418999994 11.995 71.80639100000018 11.137 82.71037019999889 12.018 86.33559979999866 11.095 81.31489370000006 11.154 82.79045369999987 12.046 83.70633749999948 11.139 80.32010829999886 11.165 84.0690980999989 11.138 84.28954820000074 11.201 78.84181740000024 11.034)
Error minima by case: (0.3075 1 0.3809 2 0.9822 4 0.2417 4 0.2512 3 0.2021 10 0.7086 10 0.0691 4 0.2221 5 0.0828 5 0.5271 3 0.4621 4 0.722 6 0.5056 6 0.3243 10 0.987 3 0.3927 10 0.2994 4 0.1057 5 0.0731 10 0.3525 5 0.9681 3 0.2227 3 0.0718 4 0.4354 6)
Average genome size in population (length): 44.007
Average program size in population (points): 45.007
Average percent parens in population: 0.024
Minimum age in population: 100.4949216108469
Maximum age in population: 105.3087251286567
Average age in population: 103.1224800526774
Median age in population: 103.1799680860701
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.791
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.791
Total error diversity:				 0.047
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 95175352
--- Timings ---
Current time: 1529615849100 milliseconds
Total Time:         221.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       105.1 seconds, 47.4%
Fitness Testing:     91.0 seconds, 41.1%
Report:              25.4 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_pop} {:instruction float_sub} {:instruction float_mult} {:instruction float_rot} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_rot integer_dec float_inc integer_dup float_dup_times integer_stackdepth print_float integer_pop float_sub float_mult float_rot integer_pop integer_dup integer_sub integer_pop float_flush float_flush integer_sub integer_mod float_add in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2747.905232
Median total errors in population: 290.2267
Error averages by case: (96.61873699999953 11.18 102.93898640000006 11.336 101.14469629999888 11.359 104.91457779999904 11.29 102.33049920000086 11.307 93.0015900000007 11.216 98.83030359999913 12.154 99.51008439999838 11.31 110.01166899999929 10.437 107.87580479999959 11.241 102.41425080000172 11.314 102.53939140000043 11.277 98.67855689999918 11.142 97.51279010000006 11.211 98.2391960999983 12.028 87.89841839999895 11.16 93.89328639999816 12.04 102.97289919999794 11.133 92.79196750000006 11.178 95.04543829999918 12.06 94.88929589999881 11.156 90.95690029999871 11.192 96.4348840999988 11.181 102.82554300000123 11.251 90.43346510000104 11.049)
Error minima by case: (0.0 1 0.3809 3 0.9822 3 0.2417 3 0.2512 3 0.2021 9 0.7086 10 0.0691 3 0.2221 4 0.0828 3 0.5271 3 0.4621 3 0.722 3 0.5056 3 0.3243 9 0.987 2 0.3927 10 0.2994 2 0.1057 3 0.0731 10 0.3525 3 0.9681 2 0.2227 2 0.0718 3 0.4354 3)
Average genome size in population (length): 43.513
Average program size in population (points): 44.513
Average percent parens in population: 0.024
Minimum age in population: 102.0741609735408
Maximum age in population: 106.4847826317535
Average age in population: 104.5706603701453
Median age in population: 104.5861021516665
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.82
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.82
Total error diversity:				 0.048
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 96265441
--- Timings ---
Current time: 1529615851914 milliseconds
Total Time:         224.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.7 seconds, 47.5%
Fitness Testing:     92.1 seconds, 41.0%
Report:              25.6 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction print_integer} {:instruction integer_dec} {:instruction integer_flush} {:instruction float_add} {:instruction float_pop} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_427} {:instruction float_inc} {:instruction float_min} {:instruction float_mult} {:instruction integer_mult} {:instruction float_shove} {:instruction float_dec} {:instruction tagged_217} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_sin} {:instruction float_inc})
Best program: (integer_yank print_integer integer_dec integer_flush float_add float_pop integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_dup integer_stackdepth tag_float_427 float_inc float_min float_mult integer_mult float_shove float_dec tagged_217 float_tan float_sub float_dup_items integer_add print_integer float_inc float_sin float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2504.1917043999993
Median total errors in population: 290.2267
Error averages by case: (83.41283250000005 11.136 92.00000099999993 11.273 91.89028259999894 11.279 96.18913689999903 11.228 94.37772160000088 11.25 83.06760870000033 11.19 92.0627271999991 12.106 89.43201529999885 11.252 97.31955849999932 10.351 95.89680480000004 11.181 93.22495640000157 11.247 94.96894390000035 11.221 89.33769599999921 11.102 88.77235520000013 11.168 90.62162789999833 11.996 73.84861200000023 11.119 83.9803657999983 12.006 97.13191119999793 11.104 83.32674760000006 11.142 82.26964669999977 12.037 86.41950249999923 11.114 82.50127889999872 11.157 85.09575759999886 11.139 93.14904040000081 11.177 81.89957320000092 11.02)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 9 0.2914 10 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 9 0.2994 3 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 43.471
Average program size in population (points): 44.471
Average percent parens in population: 0.024
Minimum age in population: 103.2718231892875
Maximum age in population: 108.0731554214026
Average age in population: 106.0894678712185
Median age in population: 106.1375541967551
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.055
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 97354141
--- Timings ---
Current time: 1529615854867 milliseconds
Total Time:         227.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.1 seconds, 47.6%
Fitness Testing:     93.2 seconds, 41.0%
Report:              25.9 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction integer_max} {:instruction -74.42713297051277} {:instruction integer_shove} {:instruction float_max} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_shove} {:instruction float_swap} {:instruction float_min} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction tagged_340} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_mult} {:instruction tag_integer_784} {:instruction integer_mult} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (integer_max integer_max -74.42713297051277 integer_shove float_max integer_stackdepth float_stackdepth integer_mod float_shove float_swap float_min in1 in2 float_min float_dec tagged_340 float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_dup_items integer_add print_integer float_inc integer_mult tag_integer_784 integer_mult integer_mod integer_yankdup integer_flush)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2751.607597899999
Median total errors in population: 290.2267
Error averages by case: (95.44143129999998 11.146 104.10973100000001 11.309 103.19628109999896 11.327 104.1230587999991 11.252 101.2958239000008 11.263 95.11548870000045 11.224 97.80248499999905 12.131 96.0229843999986 11.289 106.89802419999936 10.418 104.2845139 11.216 103.92506270000176 11.281 102.0270235000002 11.246 101.1103896999993 11.114 100.7458984999999 11.2 96.19782669999849 11.996 86.71026719999956 11.127 95.70163359999812 12.026 102.29318259999793 11.089 95.39609100000006 11.175 95.61332239999949 12.042 96.7382797999989 11.144 94.4131589999988 11.18 96.93138819999886 11.138 101.27704900000083 11.219 91.65220170000111 11.033)
Error minima by case: (0.0 1 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 10 0.2914 9 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 9 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 43.091
Average program size in population (points): 44.091
Average percent parens in population: 0.024
Minimum age in population: 104.7428052041054
Maximum age in population: 109.6221823513446
Average age in population: 107.5452259926662
Median age in population: 107.597769864312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.776
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.776
Total error diversity:				 0.063
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 98433191
--- Timings ---
Current time: 1529615857541 milliseconds
Total Time:         230.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.5 seconds, 47.6%
Fitness Testing:     94.2 seconds, 41.0%
Report:              26.2 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_yankdup} {:instruction float_max} {:instruction tag_integer_222} {:instruction integer_dup_times} {:instruction float_cos} {:instruction in2} {:instruction float_min} {:instruction float_rot} {:instruction integer_sub} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction integer_sub} {:instruction float_min} {:instruction float_shove} {:instruction float_tan} {:instruction integer_mod} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult})
Best program: (float_sin float_rot print_integer integer_dec integer_dec print_integer integer_flush integer_min float_sub integer_yankdup float_max tag_integer_222 integer_dup_times float_cos in2 float_min float_rot integer_sub in2 integer_fromfloat integer_stackdepth tagged_80 integer_sub float_min float_shove float_tan integer_mod float_add integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2303.6891996
Median total errors in population: 290.2267
Error averages by case: (75.7022303000007 11.155 85.14344429999922 11.294 84.14994189999905 11.316 85.07392839999915 11.25 83.31648000000077 11.268 77.74246369999965 11.207 80.30280679999917 12.111 78.39291359999957 11.264 86.20911209999939 10.364 84.81481120000078 11.199 84.73793240000063 11.272 83.91770919999955 11.232 82.49471510000014 11.121 82.11377519999922 11.199 79.80941199999931 11.996 70.8635103000002 11.151 78.85531249999826 12.018 85.0491087999981 11.1 77.34128310000004 11.152 79.06868830000019 12.047 80.08793519999983 11.127 76.24174069999886 11.173 80.02410909999895 11.163 80.7019071999999 11.197 79.121928200001 11.036)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 42.294
Average program size in population (points): 43.294
Average percent parens in population: 0.024
Minimum age in population: 105.9828669794791
Maximum age in population: 110.9418726778396
Average age in population: 108.9931798619548
Median age in population: 109.0340614174651
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.795
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.795
Total error diversity:				 0.056
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 99492191
--- Timings ---
Current time: 1529615860568 milliseconds
Total Time:         233.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       111.1 seconds, 47.7%
Fitness Testing:     95.3 seconds, 40.9%
Report:              26.5 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction print_integer} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_max} {:instruction integer_flush} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_194} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_mult})
Best program: (integer_min float_sub integer_min float_mult integer_yankdup integer_fromfloat float_flush print_integer integer_dec integer_min integer_max integer_flush in1 in2 float_min integer_fromfloat integer_stackdepth tagged_194 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2441.9522553999996
Median total errors in population: 290.2267
Error averages by case: (85.16169809999957 11.16 91.46649120000014 11.305 89.69780459999892 11.318 94.40475109999905 11.266 91.61351600000086 11.271 78.58387230000025 11.206 88.42483809999901 12.117 87.0201155999981 11.266 97.12736649999931 10.374 94.95075319999951 11.2 90.63917300000192 11.283 91.90842990000066 11.247 84.69456589999928 11.119 84.47572180000003 11.192 87.394380799998 12.006 76.57738239999922 11.144 80.2817799999982 12.026 91.89327509999784 11.111 80.31503830000005 11.166 81.58790649999932 12.033 81.76733379999894 11.136 79.18415509999872 11.175 83.48071729999883 11.148 89.53178960000133 11.203 77.26639920000098 11.031)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.2931 9 0.013 3 0.3927 9 0.2681 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 42.227
Average program size in population (points): 43.227
Average percent parens in population: 0.024
Minimum age in population: 107.9118713048294
Maximum age in population: 112.5692886402467
Average age in population: 110.4243853728251
Median age in population: 110.4548525347532
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.815
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.815
Total error diversity:				 0.05
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 100549391
--- Timings ---
Current time: 1529615863137 milliseconds
Total Time:         235.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.5 seconds, 47.7%
Fitness Testing:     96.3 seconds, 40.9%
Report:              26.8 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_rot} {:instruction print_float} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_min} {:instruction float_mult} {:instruction integer_min} {:instruction integer_pop} {:instruction float_flush} {:instruction print_float} {:instruction integer_flush} {:instruction float_sub} {:instruction float_dec} {:instruction integer_sub} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yankdup} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_mod} {:instruction integer_swap} {:instruction float_inc} {:instruction float_min} {:instruction integer_dup_times} {:instruction float_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_tan} {:instruction float_sin} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_dec} {:instruction float_shove} {:instruction float_cos} {:instruction integer_pop} {:instruction integer_dup} {:instruction float_max} {:instruction tag_float_450} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_flush})
Best program: (float_sin float_rot print_float float_dup_times integer_dup_times integer_min float_mult integer_min integer_pop float_flush print_float integer_flush float_sub float_dec integer_sub float_sub float_mult integer_mult float_inc integer_pop float_flush integer_sub tag_integer_222 integer_stackdepth integer_max float_add float_yankdup in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_mod integer_swap float_inc float_min integer_dup_times float_dup float_sub float_dup_items integer_add print_integer float_tan float_sin float_dup_items integer_add print_integer float_inc float_min integer_dec float_shove float_cos integer_pop integer_dup float_max tag_float_450 integer_max integer_mult integer_pop integer_mult integer_flush)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2201.7773106
Median total errors in population: 290.2267
Error averages by case: (72.12031450000036 11.091 78.44445979999918 11.21 78.36299429999899 11.241 80.7158534999991 11.184 79.0103199000008 11.189 73.43821889999988 11.163 78.89747559999928 12.096 78.24984449999928 11.197 84.51511209999933 10.296 83.0427284000002 11.145 78.53036260000066 11.186 78.9226789999997 11.173 78.18558799999995 11.06 77.80378239999952 11.136 77.78835779999906 11.988 67.94843550000017 11.065 73.7824716999985 12.007 80.77242529999819 11.056 74.16205640000005 11.103 73.98543230000018 12.021 75.93515749999972 11.096 72.90682119999882 11.115 73.8710541999989 11.108 80.31675840000051 11.152 68.98260680000061 11.008)
Error minima by case: (0.0 0 0.3809 2 0.9822 2 0.2417 2 0.2512 2 0.2021 10 0.7086 10 0.0691 2 0.2221 3 0.0828 2 0.4729 2 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 1 0.2227 1 0.0718 2 0.4354 2)
Average genome size in population (length): 42.663
Average program size in population (points): 43.663
Average percent parens in population: 0.024
Minimum age in population: 108.9118713048294
Maximum age in population: 114.0290209223137
Average age in population: 111.8741720229362
Median age in population: 111.9029021289983
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.799
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.799
Total error diversity:				 0.054
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 101617141
--- Timings ---
Current time: 1529615866031 milliseconds
Total Time:         238.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       114.1 seconds, 47.8%
Fitness Testing:     97.3 seconds, 40.8%
Report:              27.0 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction print_integer} {:instruction integer_dec} {:instruction print_integer} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction float_dup_items} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_sub} {:instruction float_max} {:instruction float_swap} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction integer_inc})
Best program: (integer_yank print_integer integer_dec print_integer float_inc float_dup_items float_sin integer_dec integer_shove print_integer integer_max float_inc integer_dup_items print_integer integer_max float_dup_items integer_shove integer_swap integer_stackdepth integer_stackdepth integer_pop float_sub float_max float_swap integer_yank in1 in2 integer_inc integer_sub float_dup_items in1 in2 float_min integer_fromfloat integer_stackdepth float_mult float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc integer_yank float_dup print_integer integer_fromfloat integer_flush integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2350.9889846999995
Median total errors in population: 290.2267
Error averages by case: (82.4432799999994 11.127 87.96084140000019 11.257 86.27786179999902 11.283 87.44617009999914 11.227 83.89247520000077 11.233 78.40299490000032 11.192 82.34652179999946 12.123 80.14477539999926 11.229 91.05000159999936 10.346 88.34822519999982 11.178 87.11953840000136 11.242 85.40724710000039 11.199 85.05278499999935 11.093 84.76381140000018 11.167 81.4548708999988 12.001 70.66437200000016 11.104 79.18056039999857 12.021 86.07910879999831 11.076 79.15529480000006 11.142 77.82376960000002 12.036 81.99378749999903 11.112 77.98642039999876 11.153 81.35336299999894 11.115 83.53583020000093 11.18 79.25207780000068 11.017)
Error minima by case: (0.0 0 0.3809 2 0.9822 2 0.2417 2 0.2512 2 0.2021 9 0.7086 10 0.0691 2 0.2221 2 0.0828 2 0.5271 2 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 1 0.0718 2 0.4354 2)
Average genome size in population (length): 41.973
Average program size in population (points): 42.973
Average percent parens in population: 0.024
Minimum age in population: 109.9118713048294
Maximum age in population: 115.7187232712237
Average age in population: 113.3984435763983
Median age in population: 113.4293428849371
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.791
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.791
Total error diversity:				 0.05
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 102667441
--- Timings ---
Current time: 1529615868826 milliseconds
Total Time:         241.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.6 seconds, 47.9%
Fitness Testing:     98.3 seconds, 40.7%
Report:              27.3 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_sub} {:instruction tag_integer_782} {:instruction integer_mod} {:instruction float_shove} {:instruction in2} {:instruction float_min} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_min} {:instruction float_sub} {:instruction integer_shove} {:instruction integer_max} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_13} {:instruction float_min} {:instruction in1} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_max} {:instruction integer_stackdepth} {:instruction tag_float_413})
Best program: (float_sin float_sub tag_integer_782 integer_mod float_shove in2 float_min integer_yankdup float_add float_min float_sub integer_shove integer_max float_add integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_13 float_min in1 float_dup_items integer_add print_integer float_max integer_stackdepth tag_float_413)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2689.503994699999
Median total errors in population: 290.2267
Error averages by case: (92.29683250000002 11.191 104.66804820000004 11.342 103.487068999999 11.377 103.61343569999914 11.3 101.20176480000076 11.307 92.93151160000032 11.236 95.8110917999992 12.157 95.28466979999898 11.319 104.7601142999994 10.442 102.49838439999981 11.259 104.36633580000165 11.322 101.43038410000058 11.298 93.7448159999996 11.162 93.52663679999978 11.229 94.44265589999873 12.025 82.70958599999943 11.176 93.64612349999832 12.032 101.51779139999807 11.134 89.90083670000006 11.202 91.62877239999952 12.056 91.26122249999925 11.183 89.08855489999881 11.209 94.6053121999989 11.194 97.62696860000048 11.264 89.97407580000097 11.065)
Error minima by case: (0.3075 2 0.3809 2 0.9822 2 0.2417 3 0.2512 3 0.2021 10 0.7086 10 0.0691 3 0.2221 3 0.0828 3 0.5271 2 0.4621 3 0.722 2 0.4944 2 0.3243 9 0.987 2 0.3927 10 0.2994 3 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 41.229
Average program size in population (points): 42.229
Average percent parens in population: 0.025
Minimum age in population: 112.5795338943056
Maximum age in population: 116.7756436829716
Average age in population: 114.843374702678
Median age in population: 114.8809927380372
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.057
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 103699241
--- Timings ---
Current time: 1529615871523 milliseconds
Total Time:         244.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.0 seconds, 47.9%
Fitness Testing:     99.4 seconds, 40.7%
Report:              27.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction float_shove} {:instruction float_swap} {:instruction float_pop} {:instruction float_mod} {:instruction tag_float_297} {:instruction float_mult} {:instruction integer_inc} {:instruction 29} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_min} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction integer_stackdepth})
Best program: (float_rot integer_shove float_max integer_stackdepth float_stackdepth float_dup_items float_shove float_swap float_pop float_mod tag_float_297 float_mult integer_inc 29 integer_sub integer_fromfloat float_shove float_tan in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_min integer_inc float_dup_items integer_add print_integer integer_dup float_min float_frominteger integer_inc float_mult integer_inc integer_rot integer_yank integer_stackdepth integer_stackdepth)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2616.8578008999993
Median total errors in population: 290.2267
Error averages by case: (89.64725969999988 11.167 96.63218989999993 11.309 95.78562079999898 11.329 97.3278194999991 11.262 94.99124800000081 11.288 89.26288620000064 11.219 92.85697239999911 12.14 91.22629169999837 11.284 101.57189109999935 10.403 99.0534735999999 11.21 96.33443780000158 11.285 96.63739140000047 11.251 96.93429709999896 11.111 96.4626031000003 11.19 92.08746619999819 12.004 82.6939870999996 11.138 90.54076089999813 12.034 97.40919859999796 11.106 88.99768670000005 11.168 90.7508808999992 12.057 93.14364959999865 11.136 87.7017905999988 11.171 90.47451669999889 11.151 95.678543000001 11.213 90.00393830000102 11.025)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 2 0.2512 2 0.2021 10 0.2914 9 0.0691 2 0.2221 2 0.0828 2 0.4729 2 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 40.746
Average program size in population (points): 41.746
Average percent parens in population: 0.025
Minimum age in population: 113.6180785109933
Maximum age in population: 118.580486836377
Average age in population: 116.3345319463804
Median age in population: 116.3673156936511
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.052
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 104718816
--- Timings ---
Current time: 1529615874242 milliseconds
Total Time:         246.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.4 seconds, 48.0%
Fitness Testing:    100.3 seconds, 40.7%
Report:              27.9 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_sin} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction float_mult} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_flush} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_swap} {:instruction float_dec} {:instruction integer_yank} {:instruction float_min} {:instruction float_min} {:instruction float_add} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_20} {:instruction float_pop} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_yank} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_dec} {:instruction float_sin} {:instruction integer_shove})
Best program: (float_rot float_sin integer_min float_mult float_sub float_mult integer_mod integer_pop float_flush float_dec integer_min float_dec integer_sub float_swap float_dec integer_yank float_min float_min float_add in1 in1 in2 float_min integer_fromfloat integer_stackdepth tagged_20 float_pop float_sub float_dup_items integer_add print_integer integer_yank tagged_80 float_tan float_sub float_dup_items integer_add float_dec float_sin integer_shove)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2296.7578002
Median total errors in population: 290.2267
Error averages by case: (72.80067750000052 11.134 83.1661436999997 11.282 82.43117579999897 11.28 83.37089519999907 11.217 81.98297280000084 11.248 76.4296191999999 11.192 82.82209819999947 12.093 78.93412089999946 11.236 85.08411209999933 10.348 84.04023160000033 11.149 82.89864610000097 11.251 83.19755760000008 11.218 85.57342199999964 11.072 84.71876 11.167 82.5704390999988 11.976 67.66658600000038 11.126 77.6947949999985 12.017 86.0740129999982 11.087 79.08110510000006 11.146 75.63206190000024 12.038 82.5468049999996 11.104 78.32304449999877 11.156 76.86498029999889 11.121 81.46418920000077 11.168 79.55234840000074 11.011)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 4 0.2221 4 0.0828 5 0.4729 5 0.4621 4 0.278 3 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 40.757
Average program size in population (points): 41.757
Average percent parens in population: 0.025
Minimum age in population: 114.6574939034207
Maximum age in population: 119.6416752614172
Average age in population: 117.8051067019653
Median age in population: 117.8198101882268
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.784
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.784
Total error diversity:				 0.057
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 105738441
--- Timings ---
Current time: 1529615876970 milliseconds
Total Time:         249.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.9 seconds, 48.1%
Fitness Testing:    101.3 seconds, 40.6%
Report:              28.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_mult} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tagged_80} {:instruction float_tan} {:instruction float_dup_times} {:instruction float_add} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction tag_float_27} {:instruction integer_inc} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_615} {:instruction integer_yankdup})
Best program: (float_rot integer_fromfloat float_dup_times float_flush float_mult in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_flush tagged_80 float_tan float_dup_times float_add float_pop in1 in2 float_min integer_fromfloat float_pop integer_stackdepth tagged_80 float_tan float_tan float_sub float_dup_items integer_add print_integer integer_fromfloat tag_float_27 integer_inc float_shove integer_mult tagged_615 integer_yankdup)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2317.9853614999997
Median total errors in population: 290.2267
Error averages by case: (74.65999590000051 11.133 84.94119759999903 11.261 84.10925409999894 11.272 84.01519909999907 11.221 82.59491340000083 11.238 76.38416259999968 11.174 84.74756159999913 12.116 81.09332819999933 11.233 88.05333419999934 10.335 86.12331440000088 11.169 84.52849970000076 11.237 84.26322849999943 11.201 83.98727499999998 11.093 83.46187659999944 11.157 84.30327649999903 12.004 72.34833130000011 11.108 77.11085739999834 12.036 85.74894049999786 11.091 77.67267190000005 11.135 77.01186520000029 12.045 81.85551249999965 11.109 77.06926499999874 11.14 78.51224709999885 11.122 84.30362000000014 11.181 77.26163320000077 11.013)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 9 0.2914 10 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 40.446
Average program size in population (points): 41.446
Average percent parens in population: 0.025
Minimum age in population: 115.8809118307235
Maximum age in population: 121.1418537508539
Average age in population: 119.2623208202336
Median age in population: 119.3306918213039
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.78
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.78
Total error diversity:				 0.06
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 106750116
--- Timings ---
Current time: 1529615879749 milliseconds
Total Time:         252.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.5 seconds, 48.2%
Fitness Testing:    102.3 seconds, 40.5%
Report:              28.4 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_204} {:instruction float_yankdup} {:instruction tagged_685} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_mod} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_max} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_13} {:instruction float_min} {:instruction in1} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_add} {:instruction print_integer} {:instruction float_tan} {:instruction float_sin} {:instruction integer_dup_times} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_dec} {:instruction float_shove} {:instruction float_cos} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_sub} {:instruction tag_float_450} {:instruction float_max} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc})
Best program: (tag_integer_204 float_yankdup tagged_685 integer_max integer_pop integer_mod integer_shove integer_max float_dup_times integer_shove integer_max float_add integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_13 float_min in1 float_dup_items integer_add print_integer integer_add print_integer float_tan float_sin integer_dup_times integer_add print_integer float_inc integer_inc integer_dec float_shove float_cos integer_pop float_dec integer_sub tag_float_450 float_max integer_add print_integer float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2600.3002832
Median total errors in population: 290.2267
Error averages by case: (87.43979779999982 11.168 94.35467390000007 11.306 93.731124399999 11.329 98.4630157999991 11.263 97.2319750000008 11.282 89.21051990000052 11.204 95.48991259999946 12.127 94.83393569999866 11.283 99.78045309999936 10.397 98.6512889999997 11.217 94.1801691000013 11.283 97.7909313000006 11.262 92.60819059999943 11.125 92.21589980000022 11.196 95.44642559999846 12.027 80.43208649999933 11.142 88.63729909999857 12.025 99.06308449999831 11.122 88.83297310000006 11.168 88.43470189999955 12.053 90.62310909999924 11.142 87.7406371999988 11.178 90.18430929999892 11.161 95.83579840000108 11.231 86.3549705000007 11.042)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 9 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 9 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 40.093
Average program size in population (points): 41.093
Average percent parens in population: 0.026
Minimum age in population: 116.8809118307235
Maximum age in population: 122.6446063835332
Average age in population: 120.7196448894889
Median age in population: 120.7792654646199
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.783
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.783
Total error diversity:				 0.051
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 107753091
--- Timings ---
Current time: 1529615882436 milliseconds
Total Time:         254.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.9 seconds, 48.2%
Fitness Testing:    103.2 seconds, 40.5%
Report:              28.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_flush} {:instruction float_dec} {:instruction float_rot} {:instruction print_integer} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_sub} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in1} {:instruction in2} {:instruction tag_float_765} {:instruction print_float} {:instruction float_inc} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin float_flush float_dec float_rot print_integer integer_dup_items float_dup integer_inc float_pop integer_max float_sin float_dup_times float_mult float_sub integer_pop float_flush integer_sub tag_integer_222 float_mod integer_fromfloat in1 in2 tag_float_765 print_float float_inc float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2714.052734
Median total errors in population: 290.2267
Error averages by case: (92.58337249999978 11.165 101.37985830000002 11.294 100.59435379999897 11.305 100.4057198999991 11.258 98.79723360000082 11.284 94.17242760000076 11.2 98.16830999999935 12.134 95.08253159999863 11.272 101.55744799999937 10.385 100.42538439999997 11.211 101.00337510000152 11.27 99.34339870000042 11.25 99.29430999999924 11.12 98.92329920000017 11.193 97.38900639999834 12.013 89.23066399999938 11.143 94.47043879999839 12.038 100.51670759999807 11.122 95.22258490000006 11.166 93.2067694999994 12.057 96.96103499999894 11.14 94.62762979999874 11.165 96.66208949999887 11.141 97.68282500000106 11.215 93.77496080000095 11.036)
Error minima by case: (0.3075 3 0.3809 3 0.0178 3 0.2417 3 0.2512 3 0.2021 9 0.2914 10 0.0691 3 0.2221 3 0.0828 3 0.4729 3 0.4621 3 0.278 3 0.4944 3 0.3243 10 0.013 2 0.3927 10 0.2994 2 0.1057 3 0.0731 10 0.3525 3 0.0319 3 0.2227 3 0.0718 3 0.4354 3)
Average genome size in population (length): 40.052
Average program size in population (points): 41.052
Average percent parens in population: 0.026
Minimum age in population: 117.8809118307235
Maximum age in population: 124.1039746130321
Average age in population: 122.216288132956
Median age in population: 122.2624803178895
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.77
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.77
Total error diversity:				 0.051
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 108755191
--- Timings ---
Current time: 1529615885274 milliseconds
Total Time:         257.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.4 seconds, 48.3%
Fitness Testing:    104.2 seconds, 40.4%
Report:              29.0 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction print_integer} {:instruction integer_max} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_flush} {:instruction float_swap} {:instruction integer_min} {:instruction float_flush} {:instruction integer_min} {:instruction float_swap} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction print_integer} {:instruction float_tan} {:instruction float_shove} {:instruction tag_integer_909})
Best program: (integer_shove print_integer integer_max in1 in2 float_min float_dec float_mult integer_mod integer_pop float_flush float_swap integer_min float_flush integer_min float_swap integer_yank in1 in2 integer_inc integer_sub float_dup_items in1 in2 float_min integer_fromfloat integer_stackdepth float_mult float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc integer_yank float_dup print_integer float_tan float_shove tag_integer_909)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2536.0800818
Median total errors in population: 290.2267
Error averages by case: (88.7422924999996 11.174 95.97352459999988 11.311 94.79308679999897 11.315 95.4851700999991 11.269 93.0144752000008 11.278 86.70100240000055 11.205 88.90727019999913 12.129 87.11036079999872 11.271 95.45455739999936 10.373 93.46447360000009 11.213 95.75175450000155 11.289 93.65617130000025 11.252 90.98775399999923 11.126 90.62529920000004 11.19 87.91592509999833 12.022 81.40253399999936 11.16 87.12915119999819 12.045 93.64240819999799 11.132 85.88169060000006 11.175 88.43020809999908 12.057 88.05032999999898 11.139 84.96059789999883 11.179 90.29998029999892 11.153 89.87597380000088 11.217 85.10209000000106 11.048)
Error minima by case: (0.3075 4 0.3809 6 0.9822 6 0.2417 5 0.2512 5 0.2021 10 0.7086 10 0.0691 5 0.2221 7 0.0828 5 0.5271 5 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 40.235
Average program size in population (points): 41.235
Average percent parens in population: 0.026
Minimum age in population: 120.2496646230299
Maximum age in population: 125.6900927609532
Average age in population: 123.6813427664672
Median age in population: 123.7884254210466
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.756
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.756
Total error diversity:				 0.046
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 109762266
--- Timings ---
Current time: 1529615888106 milliseconds
Total Time:         260.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.0 seconds, 48.4%
Fitness Testing:    105.2 seconds, 40.4%
Report:              29.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_float_558} {:instruction float_inc} {:instruction float_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_swap} {:instruction float_max} {:instruction tag_integer_222} {:instruction float_tan} {:instruction float_cos} {:instruction integer_flush} {:instruction float_min} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sin} {:instruction float_flush} {:instruction float_max} {:instruction float_shove} {:instruction float_tan} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_dup} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction integer_inc})
Best program: (tag_float_558 float_inc float_shove integer_shove integer_shove integer_swap float_max tag_integer_222 float_tan float_cos integer_flush float_min float_dec integer_sub float_dec float_swap integer_min float_sub integer_min float_mult float_sub integer_inc float_sin float_flush float_max float_shove float_tan float_dup_items in1 in2 float_min integer_fromfloat integer_stackdepth float_mult float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc float_shove float_dup print_integer integer_fromfloat integer_flush integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2558.7475213999996
Median total errors in population: 290.2267
Error averages by case: (84.32230260000019 11.177 94.51987689999989 11.322 94.208876999999 11.332 97.63675309999908 11.279 95.96023840000082 11.299 90.50142750000066 11.209 90.74153839999913 12.125 90.80091359999851 11.285 98.85688999999934 10.393 97.32489399999987 11.207 94.63048720000148 11.289 96.66755030000031 11.271 90.06290669999926 11.12 89.69004810000001 11.198 89.90112869999841 12.008 80.27922879999966 11.168 90.82184389999821 12.029 98.12390519999803 11.133 85.49188020000005 11.171 89.35727489999921 12.055 87.60120589999894 11.153 84.31592719999882 11.176 88.09269149999892 11.174 93.37061480000088 11.22 82.63811650000103 11.036)
Error minima by case: (0.3075 10 0.3809 10 0.0178 10 0.2417 9 0.2512 9 0.2021 10 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 9 0.4621 10 0.278 4 0.4944 4 0.3243 10 0.013 9 0.3927 10 0.2994 9 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 9 0.0718 5 0.4354 3)
Average genome size in population (length): 39.968
Average program size in population (points): 40.968
Average percent parens in population: 0.026
Minimum age in population: 122.7076460858266
Maximum age in population: 127.0969972941187
Average age in population: 125.1174510757059
Median age in population: 125.191922534467
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.049
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 110762854
--- Timings ---
Current time: 1529615890795 milliseconds
Total Time:         263.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.5 seconds, 48.4%
Fitness Testing:    106.1 seconds, 40.3%
Report:              29.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_max} {:instruction integer_min} {:instruction float_tan} {:instruction float_sub} {:instruction float_yank} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction print_integer} {:instruction float_tan} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_mult} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction integer_stackdepth} {:instruction tagged_9986} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_pop} {:instruction float_shove} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_dup} {:instruction float_sub})
Best program: (float_inc integer_fromfloat integer_max integer_min float_tan float_sub float_yank integer_mult integer_yankdup integer_dec print_integer float_tan integer_mod float_dup_times float_mult in1 float_flush integer_sub integer_mod float_add in1 in2 float_min integer_fromfloat float_mod integer_stackdepth tagged_9986 float_tan float_sub float_dup_items integer_add print_integer float_inc float_min float_pop float_shove float_sin integer_dec integer_dup float_sub)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2545.3857758999993
Median total errors in population: 290.2267
Error averages by case: (88.98144669999971 11.138 93.11498239999979 11.273 92.73897069999902 11.3 97.16068669999913 11.235 94.98422880000076 11.246 86.75661920000054 11.195 90.62576699999933 12.122 92.01536079999875 11.249 98.50122369999939 10.356 97.15414240000007 11.2 93.42187150000133 11.25 94.53670920000027 11.228 90.88469579999936 11.106 89.60607049999997 11.177 90.85735779999857 12.005 82.3003445999993 11.116 87.0702421999984 12.026 96.30710879999809 11.113 85.12648290000006 11.135 85.77848629999956 12.046 87.55382149999915 11.122 85.7053876999988 11.158 86.62667169999892 11.14 92.66711740000075 11.193 82.75497960000098 11.026)
Error minima by case: (0.3075 4 0.3809 4 0.9822 4 0.2417 5 0.2512 5 0.2021 9 0.7086 10 0.0691 5 0.2221 6 0.0828 5 0.5271 4 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.9681 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 39.408
Average program size in population (points): 40.408
Average percent parens in population: 0.026
Minimum age in population: 123.8969020309843
Maximum age in population: 128.5480075282236
Average age in population: 126.5697849774228
Median age in population: 126.6192673474312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.762
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.762
Total error diversity:				 0.06
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.061
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 111749279
--- Timings ---
Current time: 1529615893490 milliseconds
Total Time:         266.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.9 seconds, 48.5%
Fitness Testing:    107.1 seconds, 40.2%
Report:              29.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction float_mod} {:instruction float_swap} {:instruction float_swap} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_sub} {:instruction float_flush})
Best program: (float_sin integer_dec float_inc print_integer integer_max float_mod float_swap float_swap integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_inc integer_sub float_flush)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2347.7173319
Median total errors in population: 290.2267
Error averages by case: (77.3216168000004 11.118 85.83558669999974 11.228 84.97910989999896 11.249 88.5116866999991 11.195 87.2567264000008 11.21 80.24945150000018 11.16 83.8347713999994 12.071 83.5504989999993 11.207 88.05133529999937 10.294 87.24230800000014 11.145 85.431508700001 11.209 86.9117850000003 11.177 83.83020979999993 11.067 83.42123889999971 11.153 83.33403789999903 11.988 71.14769610000023 11.09 81.8420450999985 11.995 89.36460579999826 11.074 79.88346720000006 11.121 76.87320530000021 12.021 81.78671529999966 11.093 78.56077869999878 11.135 81.72512349999889 11.107 83.35133280000032 11.144 72.16149010000066 11.008)
Error minima by case: (0.0 2 0.3809 6 0.0178 6 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 7 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 9 0.2994 3 0.1057 4 0.0731 8 0.3525 4 0.0319 3 0.2227 3 0.0718 5 0.4354 3)
Average genome size in population (length): 39.548
Average program size in population (points): 40.548
Average percent parens in population: 0.026
Minimum age in population: 124.9935452890136
Maximum age in population: 130.021866404152
Average age in population: 127.9900280554924
Median age in population: 128.0224050589569
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.808
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.808
Total error diversity:				 0.062
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 112739204
--- Timings ---
Current time: 1529615896226 milliseconds
Total Time:         268.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.5 seconds, 48.6%
Fitness Testing:    108.0 seconds, 40.2%
Report:              30.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_204} {:instruction float_yankdup} {:instruction tagged_685} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_mod} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction in2} {:instruction float_mod} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_max} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_add} {:instruction float_tan} {:instruction integer_yank})
Best program: (tag_integer_204 float_yankdup tagged_685 integer_max integer_pop integer_mod integer_shove integer_max float_dup_times integer_shove integer_max integer_pop float_flush integer_sub in2 float_mod integer_yank in1 in2 integer_max integer_sub float_dec float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_add float_tan integer_yank)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2592.4420731999994
Median total errors in population: 290.2267
Error averages by case: (85.1448812999995 11.158 94.82792920000004 11.273 94.37040039999893 11.287 95.66576239999901 11.248 94.81345600000088 11.276 91.24538810000094 11.198 92.96756159999906 12.125 90.76125909999848 11.264 96.30855629999931 10.364 95.68439719999989 11.198 94.89713410000168 11.263 95.19802700000051 11.23 94.9640444999989 11.115 94.59153300000027 11.176 92.7116007999981 12.018 82.35389409999924 11.135 91.80932459999813 12.028 96.17142019999785 11.129 90.68462930000005 11.159 89.94291619999912 12.058 93.13610569999852 11.119 89.68747519999869 11.16 91.69096899999882 11.134 92.77262000000104 11.193 87.69578790000091 11.037)
Error minima by case: (0.3075 2 0.3809 2 0.9822 2 0.2417 3 0.7488 3 0.7979 10 0.7086 9 0.0691 3 0.2221 3 0.9172 3 0.5271 2 0.4621 3 0.722 2 0.5056 2 0.3243 10 0.013 2 0.3927 10 0.7006 3 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 38.933
Average program size in population (points): 39.933
Average percent parens in population: 0.027
Minimum age in population: 126.2585143914923
Maximum age in population: 131.6515149928746
Average age in population: 129.4767751549843
Median age in population: 129.5259159287099
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.054
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 113713329
--- Timings ---
Current time: 1529615898955 milliseconds
Total Time:         271.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.9 seconds, 48.6%
Fitness Testing:    109.0 seconds, 40.2%
Report:              30.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_sub} {:instruction integer_rot} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_sub} {:instruction float_min} {:instruction float_min} {:instruction float_sin} {:instruction in1} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_20} {:instruction float_pop} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction integer_inc})
Best program: (float_mult float_sub integer_rot integer_mod integer_pop float_flush integer_sub float_min float_min float_sin in1 float_add in2 float_min integer_fromfloat integer_stackdepth tagged_20 float_pop float_sub float_dup_items integer_add print_integer print_integer float_inc float_min integer_inc integer_yank float_dup float_add integer_fromfloat integer_flush integer_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2381.1701215999997
Median total errors in population: 290.2267
Error averages by case: (76.7533724999997 11.148 87.06252460000017 11.301 86.24312239999894 11.317 88.91985269999903 11.239 88.01725280000088 11.253 80.5912780000009 11.2 84.94972079999917 12.12 84.03087709999822 11.267 89.1291142999993 10.375 88.38821879999952 11.194 86.79917320000189 11.273 89.09400510000086 11.245 86.13159199999893 11.111 84.79817600000038 11.198 85.48384469999802 11.993 73.27154699999956 11.138 81.28419209999821 12.023 90.85409679999789 11.099 79.91778800000006 11.157 78.53764959999927 12.044 82.96527999999857 11.135 79.39414019999874 11.169 81.55142569999886 11.158 85.49954300000125 11.215 79.101334200001 11.029)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 9 0.2914 10 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 9 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 38.674
Average program size in population (points): 39.674
Average percent parens in population: 0.027
Minimum age in population: 128.5116482126858
Maximum age in population: 133.0674688768886
Average age in population: 130.988716472049
Median age in population: 131.0568207645139
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.765
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.765
Total error diversity:				 0.057
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 114681329
--- Timings ---
Current time: 1529615901564 milliseconds
Total Time:         274.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.4 seconds, 48.7%
Fitness Testing:    109.9 seconds, 40.1%
Report:              30.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_dup_items} {:instruction float_sin} {:instruction integer_dec} {:instruction float_tan} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_pop} {:instruction float_sub} {:instruction float_pop} {:instruction float_add} {:instruction integer_mod} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_max} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_13} {:instruction float_min} {:instruction in1} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_max} {:instruction integer_shove} {:instruction tag_float_405} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_mult} {:instruction float_mult})
Best program: (float_inc float_dup_items float_sin integer_dec float_tan integer_yankdup integer_pop float_dup_times integer_stackdepth print_float integer_pop float_sub float_pop float_add integer_mod integer_shove integer_max integer_pop integer_shove integer_max float_add integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_13 float_min in1 float_dup_items integer_add print_integer float_max integer_shove tag_float_405 float_inc float_dup_items float_mult float_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2783.6205514999997
Median total errors in population: 290.2267
Error averages by case: (94.79259989999942 11.175 103.68230020000031 11.326 103.09965979999895 11.325 103.76261099999911 11.271 102.44050400000079 11.293 96.01441110000069 11.209 101.86755519999907 12.136 98.9974624999983 11.306 104.79400379999936 10.413 104.51654999999968 11.237 103.48971060000194 11.287 103.21354300000053 11.272 101.46362729999895 11.144 101.09476940000032 11.205 101.947817599998 12.032 92.15150059999871 11.153 96.72672949999814 12.026 104.93579739999794 11.137 97.34095960000006 11.181 96.2724793999991 12.051 99.47693229999858 11.164 96.77745429999875 11.196 99.00084959999886 11.189 101.24296860000103 11.247 91.48975480000094 11.053)
Error minima by case: (0.3075 2 0.3809 10 0.9822 9 0.2417 9 0.2512 9 0.2021 10 0.7086 10 0.0691 9 0.2221 9 0.0828 9 0.5271 9 0.4621 9 0.722 9 0.5056 10 0.3243 10 0.987 8 0.3927 10 0.2994 9 0.1057 9 0.0731 9 0.3525 9 0.9681 8 0.2227 10 0.0718 9 0.4354 9)
Average genome size in population (length): 38.757
Average program size in population (points): 39.757
Average percent parens in population: 0.027
Minimum age in population: 129.5974954936903
Maximum age in population: 134.7895062290812
Average age in population: 132.5122902638788
Median age in population: 132.5521753610839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.055
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 115651279
--- Timings ---
Current time: 1529615904129 milliseconds
Total Time:         276.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.7 seconds, 48.7%
Fitness Testing:    110.9 seconds, 40.1%
Report:              31.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_add} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_dec} {:instruction float_swap} {:instruction float_inc} {:instruction integer_div})
Best program: (float_mod float_sin float_dup_times integer_mod integer_mod integer_inc print_integer integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_dec float_dup_items integer_add integer_sub integer_fromfloat float_yankdup integer_add print_integer float_inc float_min float_dec float_swap float_inc integer_div)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2795.7710642999996
Median total errors in population: 290.2267
Error averages by case: (94.01570799999972 11.168 101.51878729999977 11.31 100.79272789999887 11.312 105.067444999999 11.275 103.72973120000091 11.296 96.51718430000064 11.214 103.39255519999907 12.142 102.16308439999855 11.299 105.53789219999928 10.396 104.90880480000034 11.227 101.2278360000013 11.285 104.92886080000011 11.264 101.69813269999939 11.129 101.24979870000001 11.193 103.01516899999835 12.034 91.73717769999926 11.149 97.24740969999824 12.041 106.5980069999978 11.139 98.08504510000006 11.173 96.70996989999931 12.065 99.95111039999895 11.147 98.10763999999864 11.184 97.69772789999878 11.162 103.16247120000078 11.24 93.8307879000009 11.036)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.7488 2 0.7979 9 0.7086 8 0.0691 2 0.2221 2 0.9172 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 9 0.987 1 0.3927 10 0.7006 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 38.902
Average program size in population (points): 39.902
Average percent parens in population: 0.027
Minimum age in population: 131.6260629324257
Maximum age in population: 135.8459415377763
Average age in population: 133.9685327885152
Median age in population: 133.9902205924569
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.783
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.783
Total error diversity:				 0.053
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 116624604
--- Timings ---
Current time: 1529615906885 milliseconds
Total Time:         279.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       136.2 seconds, 48.8%
Fitness Testing:    111.8 seconds, 40.0%
Report:              31.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction print_integer} {:instruction float_swap} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction float_mod} {:instruction float_sub} {:instruction tag_integer_222} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction float_shove} {:instruction integer_stackdepth} {:instruction 11} {:instruction float_tan} {:instruction float_dup_items} {:instruction integer_add} {:instruction 84} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult})
Best program: (in1 integer_yank print_integer float_swap integer_pop integer_shove integer_dec float_inc print_integer integer_max float_mod float_sub tag_integer_222 in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer integer_dup float_shove integer_stackdepth 11 float_tan float_dup_items integer_add 84 integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2357.4516998999998
Median total errors in population: 290.2267
Error averages by case: (76.43006000000032 11.144 85.74109540000006 11.266 84.69280689999893 11.267 90.69255389999901 11.233 88.67520960000087 11.241 80.66254610000004 11.181 84.26561209999926 12.106 83.67926759999874 11.234 92.5948899999993 10.33 90.52789399999982 11.182 85.3314984000015 11.244 89.73410280000058 11.215 82.54030599999963 11.1 82.25938879999984 11.161 83.62859559999823 12.003 68.98248280000028 11.112 80.38240369999826 12.015 90.09661779999803 11.12 78.41580460000006 11.141 80.74578769999972 12.041 80.34426499999957 11.11 77.57523829999867 11.153 79.78342999999887 11.121 84.38412800000127 11.178 73.36371480000096 11.024)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 38.74
Average program size in population (points): 39.74
Average percent parens in population: 0.027
Minimum age in population: 132.8006755486516
Maximum age in population: 137.2534186881997
Average age in population: 135.4286714525483
Median age in population: 135.4842537727286
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.757
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.757
Total error diversity:				 0.056
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 117593829
--- Timings ---
Current time: 1529615909661 milliseconds
Total Time:         282.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.8 seconds, 48.8%
Fitness Testing:    112.7 seconds, 40.0%
Report:              31.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction integer_min} {:instruction 90} {:instruction float_frominteger} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_add float_yankdup integer_stackdepth integer_min 90 float_frominteger float_dup integer_inc integer_pop float_flush integer_mod integer_add integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2379.0581104999997
Median total errors in population: 290.2267
Error averages by case: (78.71076080000003 11.125 86.00540819999952 11.248 85.08386809999894 11.248 89.46567579999906 11.21 88.18014140000084 11.223 80.70588310000032 11.17 86.02924779999927 12.114 84.90286369999905 11.232 90.72466199999934 10.327 89.82242770000023 11.171 85.61287120000092 11.239 88.48799890000019 11.198 83.52861909999972 11.087 83.96274769999978 11.139 86.15811079999875 12.016 74.31135979999965 11.1 80.83004789999835 12.024 88.29723299999813 11.101 80.75563320000005 11.121 80.7834566999996 12.043 81.40784979999943 11.096 79.58203429999878 11.13 81.73343739999886 11.11 86.95899130000073 11.164 75.3717808000008 11.009)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.7488 5 0.7979 9 0.7086 10 0.0691 5 0.2221 6 0.9172 5 0.5271 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.987 3 0.3927 10 0.7006 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 38.555
Average program size in population (points): 39.555
Average percent parens in population: 0.027
Minimum age in population: 133.9560645349884
Maximum age in population: 138.8195128262194
Average age in population: 136.9398537569186
Median age in population: 136.9772703737806
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.772
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.772
Total error diversity:				 0.055
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 118558454
--- Timings ---
Current time: 1529615912283 milliseconds
Total Time:         284.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.3 seconds, 48.9%
Fitness Testing:    113.7 seconds, 39.9%
Report:              31.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_max} {:instruction integer_min} {:instruction 90} {:instruction integer_min} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction tag_integer_222} {:instruction float_tan} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_sub} {:instruction integer_mod} {:instruction float_add} {:instruction float_div} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction tagged_148} {:instruction float_flush} {:instruction integer_stackdepth} {:instruction integer_mod})
Best program: (float_sin integer_dec float_dec integer_div float_max integer_min 90 integer_min float_dup integer_inc integer_pop float_flush integer_mod integer_add integer_yank in1 in2 float_min integer_fromfloat float_mod tag_integer_222 float_tan float_dup_items in1 in2 float_min integer_rot integer_stackdepth float_mult float_sub integer_mod float_add float_div in1 in2 float_min integer_fromfloat float_inc integer_fromfloat integer_add print_integer tagged_148 float_flush integer_stackdepth integer_mod)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2381.725786599999
Median total errors in population: 290.2267
Error averages by case: (82.2139964999997 11.142 87.71790250000012 11.283 86.49863809999893 11.278 88.40868099999906 11.251 86.71996220000081 11.265 80.0440442000005 11.199 85.03465819999926 12.124 83.87661759999865 11.263 89.95840219999936 10.369 88.64936279999986 11.209 87.11476300000146 11.254 86.45710430000044 11.246 83.96454139999936 11.117 83.64547350000011 11.186 84.25947599999832 12.008 77.7056069999995 11.133 79.62580249999833 12.045 87.9685316999981 11.122 80.36776580000006 11.151 80.80748829999933 12.047 81.82096339999903 11.138 80.09608659999873 11.153 81.98357709999885 11.127 85.51161760000097 11.203 78.92772310000092 11.034)
Error minima by case: (0.3075 1 0.3809 3 0.9822 2 0.2417 2 0.2512 2 0.2021 9 0.7086 10 0.0691 2 0.2221 2 0.0828 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 9 0.987 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 38.009
Average program size in population (points): 39.009
Average percent parens in population: 0.027
Minimum age in population: 136.0600185631636
Maximum age in population: 140.4229604402547
Average age in population: 138.4575085088074
Median age in population: 138.443675155107
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.765
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.765
Total error diversity:				 0.058
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 119509879
--- Timings ---
Current time: 1529615914881 milliseconds
Total Time:         287.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.6 seconds, 48.9%
Fitness Testing:    114.6 seconds, 39.9%
Report:              32.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction float_inc} {:instruction integer_dup} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_pop} {:instruction integer_yank} {:instruction integer_pop} {:instruction float_dup} {:instruction tag_integer_222} {:instruction integer_yank} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_rot float_tan float_inc integer_dup float_dup_times integer_stackdepth print_float integer_pop integer_yank integer_pop float_dup tag_integer_222 integer_yank float_tan float_add float_dup_items in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_tan float_sub float_dup_items float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2462.9035850999994
Median total errors in population: 290.2267
Error averages by case: (83.50480200000025 11.142 89.04266519999953 11.26 88.65142499999897 11.27 89.63837859999909 11.236 88.60721920000083 11.242 84.49698780000018 11.186 87.45579069999921 12.125 86.70931089999921 11.237 91.97200159999933 10.342 91.43389400000034 11.188 88.88929010000108 11.236 88.67709550000001 11.226 90.66989909999951 11.097 89.48960439999985 11.17 87.91916809999893 12.004 80.0563108999997 11.111 86.03122219999828 12.028 90.16092149999805 11.1 84.84287120000006 11.148 83.59130969999987 12.033 87.77050039999912 11.128 84.2265464999988 11.154 85.2526387999989 11.135 88.72647120000052 11.185 83.07426050000088 11.03)
Error minima by case: (0.3075 2 0.3809 2 0.9822 2 0.2417 3 0.2512 3 0.2021 10 0.7086 10 0.0691 3 0.2221 3 0.0828 3 0.5271 2 0.4621 3 0.722 2 0.5056 2 0.3243 10 0.987 2 0.3927 9 0.2994 3 0.1057 2 0.0731 9 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 37.45
Average program size in population (points): 38.45
Average percent parens in population: 0.028
Minimum age in population: 137.0600185631636
Maximum age in population: 141.8080745325191
Average age in population: 139.948090552468
Median age in population: 139.9801280184451
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.761
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.761
Total error diversity:				 0.06
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 120447129
--- Timings ---
Current time: 1529615917485 milliseconds
Total Time:         290.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.1 seconds, 49.0%
Fitness Testing:    115.5 seconds, 39.8%
Report:              32.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction in2} {:instruction integer_pop} {:instruction float_add} {:instruction float_yankdup} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_mod} {:instruction float_add} {:instruction float_flush} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_rot in2 integer_pop float_add float_yankdup in1 in2 float_min integer_fromfloat float_dec float_swap integer_mod integer_mod float_add float_flush float_inc integer_stackdepth float_flush integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2345.9568603999996
Median total errors in population: 290.2267
Error averages by case: (75.93213499999997 11.163 86.39428529999992 11.285 85.453873199999 11.293 86.27086199999914 11.244 85.18796800000077 11.27 80.8560234000003 11.188 81.6836475999994 12.107 80.33360459999922 11.269 87.80733419999939 10.364 86.20723159999994 11.189 86.02807970000129 11.265 85.3948681000004 11.233 84.6404719999993 11.12 84.14291680000024 11.177 81.6228437999987 11.988 72.4853519999996 11.137 81.8516168999985 12.006 87.87921059999832 11.105 79.55012170000006 11.166 79.6336963999998 12.032 82.59308499999919 11.129 78.98576849999878 11.166 82.0272115999989 11.145 82.03554820000086 11.191 78.69310420000077 11.034)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.2512 4 0.2021 10 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.5271 5 0.4621 4 0.278 5 0.4944 5 0.3243 10 0.987 2 0.3927 10 0.2994 3 0.1057 5 0.0731 10 0.3525 5 0.0319 4 0.2227 4 0.0718 5 0.4354 5)
Average genome size in population (length): 37.225
Average program size in population (points): 38.225
Average percent parens in population: 0.028
Minimum age in population: 138.0600185631636
Maximum age in population: 143.1671698517272
Average age in population: 141.3519098847835
Median age in population: 141.3999232044082
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.757
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.757
Total error diversity:				 0.057
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 121379129
--- Timings ---
Current time: 1529615920101 milliseconds
Total Time:         292.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.6 seconds, 49.1%
Fitness Testing:    116.4 seconds, 39.8%
Report:              32.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_inc} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_pop} {:instruction float_mult} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction integer_dup} {:instruction in1} {:instruction in2} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_add} {:instruction float_min} {:instruction integer_swap} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_dec} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_sub} {:instruction integer_mult} {:instruction integer_pop})
Best program: (integer_max float_inc float_rot integer_fromfloat float_dup_times integer_div float_pop float_mult integer_dup float_flush integer_sub tag_integer_222 float_tan integer_dup in1 in2 float_rot integer_fromfloat integer_stackdepth float_mult float_dup float_dup_items integer_add print_integer integer_add float_min integer_swap float_dup_items integer_add print_integer float_inc float_min float_dec float_dup float_inc integer_div integer_sub integer_mult integer_pop)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2289.9698937999997
Median total errors in population: 290.2267
Error averages by case: (75.16396750000058 11.143 84.29603129999956 11.261 83.23877279999894 11.27 83.14800409999906 11.228 81.78770720000085 11.247 77.66817600000017 11.173 79.59406479999934 12.09 79.1605354999993 11.24 84.86055519999934 10.319 83.94398320000055 11.171 83.77722810000085 11.244 81.79287539999976 11.211 83.07700499999974 11.099 82.67386739999964 11.17 80.49449239999903 11.994 71.59729400000022 11.128 78.51530929999834 12.018 83.57942019999814 11.111 78.46024610000006 11.135 78.71050059999983 12.035 80.9196074999995 11.112 77.96106949999871 11.146 79.51625809999884 11.123 81.31862000000032 11.166 72.85030260000083 11.03)
Error minima by case: (0.3075 9 0.3809 9 0.9822 9 0.2417 9 0.2512 9 0.2021 10 0.7086 10 0.0691 9 0.2221 9 0.0828 9 0.5271 9 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.013 9 0.3927 10 0.2994 9 0.1057 9 0.0731 10 0.3525 8 0.9681 9 0.2227 8 0.0718 9 0.4354 9)
Average genome size in population (length): 36.683
Average program size in population (points): 37.683
Average percent parens in population: 0.029
Minimum age in population: 140.0049734179145
Maximum age in population: 144.8298804382917
Average age in population: 142.8423455240668
Median age in population: 142.8925211477904
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.728
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.728
Total error diversity:				 0.051
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 122297679
--- Timings ---
Current time: 1529615922743 milliseconds
Total Time:         295.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.1 seconds, 49.1%
Fitness Testing:    117.3 seconds, 39.7%
Report:              32.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction tagged_671} {:instruction print_integer} {:instruction integer_max} {:instruction float_mod} {:instruction float_sub} {:instruction tag_integer_222} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction integer_dec} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_50} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction float_shove} {:instruction float_inc} {:instruction integer_pop})
Best program: (float_sin integer_dec tagged_671 print_integer integer_max float_mod float_sub tag_integer_222 in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add integer_dec in1 in2 integer_fromfloat integer_stackdepth tagged_50 float_dup_items integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult float_shove float_inc integer_pop)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2448.1492226
Median total errors in population: 290.2267
Error averages by case: (79.8994353000002 11.179 89.15115499999962 11.305 89.00945649999906 11.312 90.00696159999917 11.258 89.26648480000074 11.281 85.26986330000027 11.207 87.00722399999933 12.125 85.39763719999934 11.281 89.06833529999943 10.377 88.67122520000039 11.223 89.2628996000009 11.282 90.0779366000001 11.262 88.37027039999965 11.124 87.87425709999985 11.201 86.84741199999897 12.014 78.26298849999965 11.168 85.69356009999849 12.027 92.2106057999983 11.134 84.24725420000006 11.184 85.00994719999963 12.054 86.58754529999942 11.151 83.71244649999885 11.192 85.60731929999893 11.175 86.54418920000037 11.233 82.29281260000076 11.051)
Error minima by case: (0.3075 9 0.3809 9 0.0178 9 0.2417 9 0.2512 9 0.2021 7 0.2914 10 0.0691 9 0.2221 9 0.0828 9 0.4729 8 0.4621 10 0.278 9 0.4944 10 0.3243 9 0.013 9 0.3927 10 0.2994 9 0.1057 9 0.0731 10 0.3525 9 0.0319 10 0.2227 9 0.0718 9 0.4354 10)
Average genome size in population (length): 36.43
Average program size in population (points): 37.43
Average percent parens in population: 0.029
Minimum age in population: 141.173297733777
Maximum age in population: 146.2578063440251
Average age in population: 144.3187546877674
Median age in population: 144.3506935985754
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.745
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.745
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 123209554
--- Timings ---
Current time: 1529615925282 milliseconds
Total Time:         297.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.5 seconds, 49.2%
Fitness Testing:    118.1 seconds, 39.7%
Report:              33.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction float_inc} {:instruction integer_dup} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_flush} {:instruction float_min} {:instruction integer_max} {:instruction integer_yank} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_tan} {:instruction float_min} {:instruction integer_inc} {:instruction float_shove} {:instruction float_dup} {:instruction print_integer} {:instruction integer_fromfloat})
Best program: (float_rot float_tan float_inc integer_dup float_dup_times integer_stackdepth integer_pop float_flush float_min integer_max integer_yank in1 float_flush integer_sub integer_mod float_add in1 in2 float_min integer_fromfloat integer_stackdepth float_yankdup float_sub float_dup_items integer_add print_integer float_inc float_min integer_inc integer_yank float_dup float_sub float_dup_items integer_add print_integer float_tan float_min integer_inc float_shove float_dup print_integer integer_fromfloat)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2454.4268770999997
Median total errors in population: 290.2267
Error averages by case: (81.88070130000013 11.171 87.98922289999963 11.312 87.88589839999908 11.327 89.84047819999914 11.257 88.89348480000076 11.288 84.27883820000032 11.208 87.42084659999942 12.137 86.49477539999914 11.292 90.83866789999941 10.401 90.17089400000037 11.232 88.04454830000084 11.286 89.87293659999996 11.277 89.99616179999954 11.133 88.70501459999986 11.199 87.10349329999897 12.016 78.59227579999975 11.158 84.63409099999855 12.024 91.57980339999834 11.123 84.66789900000006 11.173 84.18646679999968 12.057 87.1028362999994 11.162 84.3668382999989 11.191 84.81821959999897 11.176 88.92926100000052 11.24 83.24722360000078 11.046)
Error minima by case: (0.3075 4 0.3809 5 0.0178 4 0.2417 4 0.2512 4 0.2021 9 0.2914 9 0.0691 4 0.2221 4 0.0828 4 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 11 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 4)
Average genome size in population (length): 36.353
Average program size in population (points): 37.353
Average percent parens in population: 0.029
Minimum age in population: 143.1296043787661
Maximum age in population: 147.8472865017125
Average age in population: 145.7950421355079
Median age in population: 145.8220898227634
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.053
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 124119154
--- Timings ---
Current time: 1529615927900 milliseconds
Total Time:         300.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.0 seconds, 49.3%
Fitness Testing:    119.0 seconds, 39.6%
Report:              33.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_sub} {:instruction integer_dec} {:instruction float_shove} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_div} {:instruction float_swap} {:instruction integer_yank} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction tag_float_450} {:instruction float_frominteger} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_174} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_mod} {:instruction float_mult} {:instruction float_add} {:instruction float_add} {:instruction float_pop} {:instruction integer_add} {:instruction float_sub} {:instruction float_shove} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction integer_yank} {:instruction float_sin} {:instruction float_mod} {:instruction integer_max} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction tagged_9994} {:instruction float_pop} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin float_sub integer_dec float_shove float_inc integer_dec print_integer integer_div float_swap integer_yank float_add in2 float_min integer_fromfloat integer_dup integer_dup_items tag_float_450 float_frominteger integer_mult integer_fromfloat float_shove float_tan in1 in2 integer_fromfloat integer_stackdepth tagged_174 float_yankdup float_sub float_mod float_mult float_add float_add float_pop integer_add float_sub float_shove in1 in2 float_min float_dec integer_yank float_sin float_mod integer_max in1 in1 in2 float_min integer_fromfloat float_stackdepth tagged_9994 float_pop float_sub float_dup_items integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 1998.3716848999993
Median total errors in population: 290.2267
Error averages by case: (65.65507980000098 11.15 72.92293009999933 11.257 71.88625959999895 11.264 71.75817939999905 11.225 70.07944160000086 11.247 64.96691359999912 11.161 68.04585939999915 12.115 65.93474280000027 11.232 71.88677729999934 10.325 71.04290040000123 11.187 72.52869320000067 11.242 70.50057219999924 11.211 70.87685660000024 11.119 70.50691869999903 11.166 67.76005969999977 12.009 63.303888100000705 11.13 65.94620539999843 12.026 71.43452799999795 11.11 67.08986440000007 11.158 65.15151800000098 12.042 68.74272080000026 11.134 66.62158379999873 11.163 68.76594789999885 11.142 67.0320507999993 11.188 65.88619330000077 11.042)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.2512 4 0.2021 10 0.7086 10 0.0691 5 0.2221 5 0.0828 5 0.5271 5 0.4621 4 0.722 5 0.5056 5 0.3243 10 0.987 2 0.3927 10 0.2994 3 0.1057 5 0.0731 11 0.3525 5 0.9681 4 0.2227 4 0.0718 5 0.4354 5)
Average genome size in population (length): 36.289
Average program size in population (points): 37.289
Average percent parens in population: 0.029
Minimum age in population: 145.1451223669249
Maximum age in population: 149.1625811009632
Average age in population: 147.2593039507934
Median age in population: 147.2781401317717
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.726
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.726
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 125027229
--- Timings ---
Current time: 1529615930607 milliseconds
Total Time:         303.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.5 seconds, 49.3%
Fitness Testing:    119.9 seconds, 39.6%
Report:              33.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_dup_times} {:instruction float_add} {:instruction float_rot} {:instruction float_shove} {:instruction float_pop} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_shove} {:instruction float_dec} {:instruction integer_add} {:instruction tagged_174} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_13} {:instruction float_min} {:instruction float_mult} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_yankdup} {:instruction integer_dec} {:instruction tag_float_302})
Best program: (float_sin float_dup_times float_add float_rot float_shove float_pop float_sub integer_min float_mult integer_inc integer_pop float_dup_times integer_shove float_shove float_dec integer_add tagged_174 float_pop in1 in2 integer_fromfloat integer_stackdepth tagged_13 float_min float_mult float_dup_items integer_add print_integer float_yankdup integer_dec tag_float_302)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 1920.0970697999992
Median total errors in population: 290.2267
Error averages by case: (64.25705750000093 11.134 67.9930470999988 11.258 67.13081979999905 11.26 67.66200409999917 11.211 65.79170240000073 11.227 62.63776879999939 11.167 64.72502499999952 12.091 64.14274280000049 11.221 71.26655519999939 10.305 69.24565200000094 11.156 67.48124229999983 11.228 66.51841329999911 11.207 68.3005840000007 11.094 67.89188319999901 11.162 64.79743820000017 11.989 60.266170000000585 11.115 62.99243439999881 12.012 67.96422259999846 11.094 63.76517040000006 11.14 63.62067010000089 12.035 65.59561750000066 11.118 63.295151299998835 11.148 63.98010239999894 11.125 66.76840979999955 11.159 60.32118560000064 11.03)
Error minima by case: (0.3075 3 0.3809 6 0.0178 5 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 6 0.4621 4 0.278 6 0.4944 6 0.3243 10 0.013 3 0.3927 10 0.2994 4 0.1057 5 0.0731 11 0.3525 6 0.0319 5 0.2227 4 0.0718 6 0.4354 6)
Average genome size in population (length): 36.589
Average program size in population (points): 37.589
Average percent parens in population: 0.028
Minimum age in population: 146.4576020345736
Maximum age in population: 150.7726200559211
Average age in population: 148.6798954788192
Median age in population: 148.6847394989446
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.756
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.756
Total error diversity:				 0.054
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 125942879
--- Timings ---
Current time: 1529615933164 milliseconds
Total Time:         305.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.8 seconds, 49.3%
Fitness Testing:    120.8 seconds, 39.5%
Report:              33.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_mult} {:instruction float_mult} {:instruction float_mod} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_rot} {:instruction float_tan} {:instruction float_inc} {:instruction integer_dec} {:instruction tagged_695} {:instruction float_flush} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction float_tan} {:instruction print_integer} {:instruction tagged_9935} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction integer_sub} {:instruction tag_integer_222} {:instruction -100} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_inc} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup})
Best program: (float_sin integer_max float_sin float_dup_times integer_mult float_mult float_mod float_sin float_dup_times float_dec float_rot float_tan float_inc integer_dec tagged_695 float_flush integer_sub tag_integer_222 float_tan print_integer tagged_9935 in1 in2 float_min integer_fromfloat integer_stackdepth float_mult integer_sub tag_integer_222 -100 in1 in1 in2 float_min integer_fromfloat float_mod float_inc float_yank integer_add print_integer integer_dup)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2416.3571892999994
Median total errors in population: 290.2267
Error averages by case: (82.58789499999968 11.153 86.51317510000037 11.286 85.89898639999892 11.28 88.55958709999904 11.254 87.77121440000087 11.269 83.00679280000064 11.203 85.67372719999925 12.134 84.61577539999874 11.269 88.94733529999934 10.365 88.96522519999955 11.207 86.4058487000019 11.275 88.4238681000009 11.236 87.52366499999904 11.124 86.65334860000037 11.178 85.58130359999808 12.032 79.28548899999936 11.143 83.53334579999823 12.039 89.90441419999803 11.125 83.21524910000007 11.162 82.60684269999938 12.054 85.08510249999892 11.138 83.11045639999868 11.167 83.8091402999988 11.153 85.42033280000113 11.219 80.756068600001 11.038)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 9 0.2914 11 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 36.59
Average program size in population (points): 37.59
Average percent parens in population: 0.028
Minimum age in population: 147.7075128640766
Maximum age in population: 152.1415502238518
Average age in population: 150.1275010837901
Median age in population: 150.1175425480868
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.055
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 126858768
--- Timings ---
Current time: 1529615935704 milliseconds
Total Time:         308.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.2 seconds, 49.4%
Fitness Testing:    121.7 seconds, 39.5%
Report:              34.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction integer_swap} {:instruction tagged_412} {:instruction float_sub} {:instruction float_mult} {:instruction tagged_547} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_min} {:instruction float_shove} {:instruction float_yankdup} {:instruction tag_integer_523} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_div} {:instruction integer_sub} {:instruction float_yank} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction float_add} {:instruction float_div} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min} {:instruction float_dec})
Best program: (float_sin integer_dup_times float_dec integer_mult float_sub integer_min float_mult integer_swap tagged_412 float_sub float_mult tagged_547 integer_pop float_flush integer_min float_shove float_yankdup tag_integer_523 float_sin float_dup_times float_div integer_sub float_yank float_stackdepth integer_mod float_add float_div in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_dup_items integer_add print_integer float_inc float_min float_dec)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2201.284925
Median total errors in population: 290.2267
Error averages by case: (72.05406250000041 11.126 78.94961899999944 11.247 79.09381979999903 11.263 79.29865349999915 11.213 78.55972160000076 11.217 74.53201289999991 11.179 77.90334979999925 12.109 76.6299500999996 11.236 80.79433309999938 10.321 80.14565200000061 11.18 79.1547152000007 11.226 79.19409549999988 11.207 78.51642199999995 11.096 78.08626559999969 11.155 77.48203349999912 12.02 69.41233900000017 11.114 75.06918769999857 12.029 80.9352105999982 11.085 75.05716210000006 11.13 73.93506190000014 12.049 76.87015749999982 11.116 74.87285309999885 11.144 75.03176619999893 11.128 78.00269700000028 11.191 69.90078380000062 11.022)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.7488 5 0.7979 9 0.2914 10 0.0691 5 0.2221 6 0.9172 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.7006 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 36.304
Average program size in population (points): 37.304
Average percent parens in population: 0.029
Minimum age in population: 148.7166693708476
Maximum age in population: 153.4878174120515
Average age in population: 151.5900810235522
Median age in population: 151.614696924321
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.045
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 127767668
--- Timings ---
Current time: 1529615938251 milliseconds
Total Time:         310.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.6 seconds, 49.4%
Fitness Testing:    122.6 seconds, 39.5%
Report:              34.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction print_integer} {:instruction float_sin} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_min})
Best program: (float_min print_integer float_sin float_min integer_fromfloat integer_div tagged_80 float_tan float_sub float_dec integer_pop integer_mult in1 integer_fromfloat float_flush integer_min float_sub integer_sub integer_fromfloat float_shove float_tan in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_min integer_inc integer_sub float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2133.0838972999995
Median total errors in population: 290.2267
Error averages by case: (68.84592250000081 11.13 76.48326009999958 11.239 76.512260199999 11.247 79.3815206999991 11.2 78.56320480000079 11.228 71.81234979999981 11.164 75.90135619999936 12.102 74.55295009999924 11.237 78.59244359999944 10.321 78.02532080000036 11.176 76.60301520000081 11.217 78.70302700000009 11.209 73.84800090000002 11.085 73.34778929999949 11.156 75.36416809999893 12.006 66.3856200000002 11.11 71.33186739999854 12.021 80.48701899999826 11.09 69.37585750000005 11.125 70.93698660000024 12.044 71.75508240000009 11.109 68.90934969999886 11.138 71.44084129999897 11.128 76.45605080000048 11.174 67.79363330000082 11.019)
Error minima by case: (0.3075 2 0.3809 2 0.9822 2 0.2417 3 0.2512 3 0.2021 9 0.7086 10 0.0691 3 0.2221 3 0.0828 3 0.5271 2 0.4621 3 0.722 2 0.5056 2 0.3243 10 0.987 2 0.3927 11 0.2994 3 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 35.916
Average program size in population (points): 36.916
Average percent parens in population: 0.029
Minimum age in population: 150.4874106545783
Maximum age in population: 154.9207848429911
Average age in population: 153.0534063932426
Median age in population: 153.1309347017637
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.741
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.741
Total error diversity:				 0.055
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 128666968
--- Timings ---
Current time: 1529615940881 milliseconds
Total Time:         313.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.1 seconds, 49.5%
Fitness Testing:    123.5 seconds, 39.4%
Report:              34.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_tan} {:instruction float_div} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_168} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction print_integer} {:instruction integer_sub} {:instruction integer_mult} {:instruction float_flush} {:instruction integer_yankdup} {:instruction integer_shove})
Best program: (integer_yankdup integer_dup float_dec integer_fromfloat float_sub integer_dup_items float_tan float_div float_add integer_yank in1 in2 integer_dup_times float_dec integer_sub float_mult float_mult integer_mult in1 integer_fromfloat integer_stackdepth tagged_168 float_dup_items integer_add print_integer float_inc print_integer integer_sub integer_mult float_flush integer_yankdup integer_shove)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2573.5867515
Median total errors in population: 290.2267
Error averages by case: (86.06967749999984 11.18 95.63385829999989 11.311 95.20412239999895 11.317 94.90262029999906 11.276 93.46372160000085 11.286 88.58180030000052 11.212 90.82768739999958 12.144 89.23856809999924 11.283 96.71377949999933 10.392 95.69914239999999 11.227 95.45970030000119 11.29 93.90901970000043 11.269 93.95930999999943 11.137 93.63128800000024 11.196 90.72357369999884 12.031 82.74463799999951 11.175 89.91532929999852 12.05 94.93571359999828 11.147 89.68958490000006 11.179 88.05571979999974 12.066 92.0529774999993 11.15 88.46253409999872 11.192 91.10642139999887 11.171 90.73926100000075 11.235 88.89470240000068 11.056)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 35.307
Average program size in population (points): 36.307
Average percent parens in population: 0.030
Minimum age in population: 151.798156924591
Maximum age in population: 156.4837703116521
Average age in population: 154.56213675088
Median age in population: 154.6028067148247
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.723
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.723
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 129550943
--- Timings ---
Current time: 1529615943480 milliseconds
Total Time:         316.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.6 seconds, 49.6%
Fitness Testing:    124.3 seconds, 39.3%
Report:              35.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_min} {:instruction integer_max} {:instruction integer_yank} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_stackdepth} {:instruction float_min} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup})
Best program: (integer_pop float_sub float_flush float_min integer_max integer_yank in1 float_flush integer_sub integer_mod float_add in1 in2 float_min integer_fromfloat integer_stackdepth float_yankdup float_sub float_dup_items integer_add print_integer float_stackdepth float_min integer_inc integer_yank float_dup)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2385.3950605999994
Median total errors in population: 290.2267
Error averages by case: (80.73196999999986 11.172 86.3964604999996 11.297 84.94498639999901 11.303 87.63945429999899 11.276 86.01369760000088 11.296 81.80379730000038 11.199 83.94223039999933 12.126 82.58939729999916 11.265 88.17266679999929 10.38 87.17523160000037 11.213 85.66084870000088 11.279 86.67918590000005 11.247 86.98649499999962 11.127 86.43193259999988 11.188 83.57684379999881 12.004 78.66029399999961 11.147 82.08949089999848 12.038 88.381126799998 11.146 82.21883460000006 11.17 81.50523139999966 12.045 83.60133249999929 11.138 81.70088219999874 11.174 82.92369919999888 11.154 83.56554820000055 11.201 79.37542260000076 11.043)
Error minima by case: (0.3075 4 0.3809 5 0.0178 4 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 4 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 4)
Average genome size in population (length): 35.079
Average program size in population (points): 36.079
Average percent parens in population: 0.030
Minimum age in population: 153.2949846498966
Maximum age in population: 157.8166137630677
Average age in population: 156.0078695369022
Median age in population: 156.0691839068295
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.738
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.738
Total error diversity:				 0.049
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 130429293
--- Timings ---
Current time: 1529615945987 milliseconds
Total Time:         318.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.0 seconds, 49.6%
Fitness Testing:    125.2 seconds, 39.3%
Report:              35.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_min} {:instruction float_mult} {:instruction 53.491676886706074} {:instruction float_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_min})
Best program: (integer_rot integer_min float_mult 53.491676886706074 float_flush integer_min float_sub integer_sub integer_fromfloat float_shove float_tan in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_min integer_inc integer_sub float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2109.3983660999993
Median total errors in population: 290.2267
Error averages by case: (72.7627475000007 11.136 75.54533249999902 11.235 75.9386595999991 11.242 75.4055963999992 11.21 73.29918080000068 11.223 71.86133309999956 11.156 71.52394539999936 12.092 71.49301919999998 11.223 76.84999829999948 10.299 76.16623800000094 11.172 76.1739320000002 11.224 73.61965529999944 11.196 76.5533020000003 11.099 75.26299519999927 11.154 71.9076269999997 12.001 67.81014400000007 11.117 72.78971759999854 12.031 73.65123459999836 11.111 71.41381290000007 11.135 70.29091280000037 12.042 71.91796250000017 11.111 72.33035379999889 11.145 72.18043859999904 11.12 72.60676879999974 11.165 68.36945820000061 11.035)
Error minima by case: (0.3075 10 0.3809 9 0.9822 8 0.2417 9 0.2512 9 0.2021 10 0.7086 10 0.0691 10 0.2221 8 0.0828 9 0.5271 9 0.4621 9 0.722 9 0.5056 9 0.3243 9 0.987 9 0.3927 11 0.2994 9 0.1057 9 0.0731 10 0.3525 8 0.9681 9 0.2227 9 0.0718 9 0.4354 9)
Average genome size in population (length): 35.002
Average program size in population (points): 36.002
Average percent parens in population: 0.030
Minimum age in population: 154.2949846498966
Maximum age in population: 159.3683006021178
Average age in population: 157.4859443724372
Median age in population: 157.5363517935237
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.732
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.732
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 131305693
--- Timings ---
Current time: 1529615948412 milliseconds
Total Time:         321.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.4 seconds, 49.7%
Fitness Testing:    126.1 seconds, 39.3%
Report:              35.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction print_integer} {:instruction float_sin} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dec} {:instruction print_integer} {:instruction integer_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_min} {:instruction float_sub} {:instruction integer_sub} {:instruction tagged_887} {:instruction float_shove} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction tagged_417} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_min})
Best program: (float_min print_integer float_sin float_min integer_fromfloat integer_div tagged_80 float_tan float_sub float_dec print_integer integer_mult in1 integer_fromfloat float_flush integer_min float_sub integer_sub tagged_887 float_shove float_tan in1 in2 integer_fromfloat integer_stackdepth tagged_80 tagged_417 float_sub float_dup_items integer_add print_integer float_min integer_inc integer_sub float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2398.6686960999996
Median total errors in population: 290.2267
Error averages by case: (80.42461569999999 11.159 88.22843409999999 11.309 86.67759699999908 11.311 89.06010619999918 11.252 87.33365780000071 11.276 80.63380490000027 11.192 85.14032729999938 12.119 83.39458729999912 11.272 91.02255629999941 10.385 89.77456280000004 11.209 87.51202280000115 11.281 86.25588700000031 11.243 87.48228449999935 11.121 86.27832180000013 11.194 85.53500639999866 11.993 74.95641499999985 11.15 81.6312950999986 12.021 88.67889569999836 11.114 81.77790650000006 11.173 81.37970479999964 12.041 84.02296779999911 11.147 79.94678149999886 11.177 82.90977009999898 11.151 85.70790200000077 11.209 80.36328570000079 11.041)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 34.759
Average program size in population (points): 35.759
Average percent parens in population: 0.030
Minimum age in population: 156.3049663926236
Maximum age in population: 160.7658224030802
Average age in population: 158.9945448237185
Median age in population: 159.0127980966988
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.741
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.741
Total error diversity:				 0.061
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.061
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 132176193
--- Timings ---
Current time: 1529615950956 milliseconds
Total Time:         323.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.9 seconds, 49.7%
Fitness Testing:    126.9 seconds, 39.2%
Report:              35.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction integer_flush} {:instruction tagged_302} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_sub} {:instruction float_shove} {:instruction float_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction float_tan} {:instruction float_tan} {:instruction integer_mod} {:instruction float_yankdup} {:instruction integer_rot} {:instruction in2} {:instruction integer_inc} {:instruction integer_sub} {:instruction tagged_151} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min})
Best program: (float_div integer_flush tagged_302 integer_add integer_yank in1 in2 float_min integer_fromfloat float_inc float_flush integer_sub integer_mod float_add in1 in2 float_min integer_fromfloat float_stackdepth float_yankdup float_sub float_dup_items float_tan float_sub float_shove float_swap integer_dup float_sub float_tan float_tan integer_mod float_yankdup integer_rot in2 integer_inc integer_sub tagged_151 in1 in2 float_min integer_fromfloat integer_stackdepth float_mult float_sub float_dup_items integer_add print_integer float_inc float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2270.1573845
Median total errors in population: 290.2267
Error averages by case: (77.77473750000009 11.15 81.36626949999948 11.281 80.24177279999897 11.288 82.65586199999909 11.238 80.99796800000081 11.26 77.11102040000023 11.187 79.23801859999953 12.123 78.5900882999997 11.255 84.72999939999934 10.363 83.27156920000058 11.192 80.87222810000073 11.251 81.12794389999975 11.225 81.62366499999987 11.109 81.16834859999967 11.171 78.58897929999944 12.01 73.04516399999999 11.129 77.46217119999858 12.028 83.49311479999825 11.099 77.03203770000006 11.149 77.73850039999998 12.052 79.28710249999962 11.129 76.74258399999879 11.159 77.21470349999886 11.139 79.50533800000025 11.195 77.06319780000062 11.033)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.7488 2 0.7979 9 0.7086 10 0.0691 2 0.2221 2 0.9172 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 10 0.7006 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 34.459
Average program size in population (points): 35.459
Average percent parens in population: 0.030
Minimum age in population: 158.1265345102896
Maximum age in population: 162.2731816725679
Average age in population: 160.4877606654321
Median age in population: 160.5511110256897
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.729
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.729
Total error diversity:				 0.042
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 133039018
--- Timings ---
Current time: 1529615953743 milliseconds
Total Time:         326.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.3 seconds, 49.8%
Fitness Testing:    127.9 seconds, 39.2%
Report:              35.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_rot} {:instruction float_min} {:instruction integer_yankdup} {:instruction float_dec} {:instruction in1} {:instruction in2} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction float_add} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_yank} {:instruction float_mod} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_13} {:instruction float_min} {:instruction float_mult} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_yankdup} {:instruction integer_dec} {:instruction tag_float_302})
Best program: (float_sin integer_dec float_rot float_min integer_yankdup float_dec in1 in2 float_mod integer_fromfloat float_sin float_add in1 in2 float_min float_yank float_mod float_flush integer_fromfloat integer_stackdepth tagged_13 float_min float_mult float_dup_items integer_add print_integer float_yankdup integer_dec tag_float_302)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2631.9785741
Median total errors in population: 290.2267
Error averages by case: (91.39851669999953 11.163 98.97938190000002 11.305 98.314104599999 11.304 97.75873509999914 11.264 96.15876540000075 11.279 89.89495940000063 11.206 94.7445900999993 12.143 94.33933979999868 11.286 100.37566899999942 10.382 99.02966779999996 11.22 98.74070030000148 11.281 96.38285470000035 11.254 93.82934379999932 11.128 93.55126940000017 11.182 94.45291659999849 12.043 86.59110479999894 11.146 90.06897049999846 12.048 96.84464049999823 11.13 90.69058810000007 11.156 91.7248625999993 12.06 91.10368929999906 11.14 90.3222891999988 11.165 91.89562119999891 11.152 96.36329010000095 11.227 85.7247032000008 11.034)
Error minima by case: (0.3075 4 0.3809 5 0.0178 4 0.2417 5 0.7488 5 0.7979 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 5 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 11 0.7006 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 34.533
Average program size in population (points): 35.533
Average percent parens in population: 0.030
Minimum age in population: 159.1265345102896
Maximum age in population: 163.9148840017694
Average age in population: 161.9606724345758
Median age in population: 162.0082532850746
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.726
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.726
Total error diversity:				 0.048
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 133903593
--- Timings ---
Current time: 1529615956401 milliseconds
Total Time:         329.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.8 seconds, 49.8%
Fitness Testing:    128.9 seconds, 39.2%
Report:              36.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_dup_times} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction float_sub} {:instruction float_pop} {:instruction float_add} {:instruction integer_mod} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_cos} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_13} {:instruction integer_dec} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction tagged_50} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_add} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_mult} {:instruction float_shove} {:instruction float_sin} {:instruction integer_pop})
Best program: (float_flush float_mod float_yankdup float_dup_times integer_max float_dup_times print_integer integer_max integer_pop float_sub float_pop float_add integer_mod integer_shove integer_max integer_pop integer_shove float_cos float_add integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_13 integer_dec in1 in2 integer_fromfloat in1 in2 integer_fromfloat integer_fromfloat tagged_50 float_dup_items integer_add print_integer integer_add integer_stackdepth tag_float_413 float_inc integer_mult float_mult integer_mult float_shove float_sin integer_pop)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2296.5389913999998
Median total errors in population: 290.2267
Error averages by case: (76.09205520000032 11.153 82.26971449999948 11.28 81.6015088999991 11.281 83.38210369999919 11.238 82.17021920000072 11.256 77.42335860000016 11.191 81.2589960999993 12.128 78.87079459999929 11.26 85.69711209999939 10.363 84.25539720000039 11.199 82.0471339000008 11.256 83.48140600000002 11.235 83.34047599999965 11.119 82.3070875999998 11.187 81.93460079999886 12.012 70.68600080000012 11.148 78.85715119999844 12.039 84.64832279999818 11.107 77.30996420000007 11.163 77.12895559999976 12.048 80.91684319999939 11.128 77.84156599999888 11.172 78.54342999999899 11.148 81.3996200000004 11.215 80.7131732000009 11.036)
Error minima by case: (0.3075 3 0.3809 6 0.0178 5 0.2417 4 0.2512 4 0.2021 9 0.2914 10 0.0691 5 0.2221 5 0.0828 5 0.4729 6 0.4621 4 0.278 4 0.4944 4 0.3243 9 0.013 3 0.3927 11 0.2994 3 0.1057 4 0.0731 9 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 34.12
Average program size in population (points): 35.12
Average percent parens in population: 0.031
Minimum age in population: 160.4691487725271
Maximum age in population: 165.3265368802125
Average age in population: 163.4545730563164
Median age in population: 163.5084817082976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.054
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 134758143
--- Timings ---
Current time: 1529615958899 milliseconds
Total Time:         331.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.1 seconds, 49.8%
Fitness Testing:    129.7 seconds, 39.1%
Report:              36.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction in1} {:instruction float_rot} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction float_pop} {:instruction float_add} {:instruction integer_min} {:instruction float_mult} {:instruction float_mod} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_pop} {:instruction float_add} {:instruction in1} {:instruction in1} {:instruction float_shove} {:instruction integer_inc} {:instruction float_frominteger} {:instruction tagged_9956} {:instruction integer_dup_times} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_tan} {:instruction float_inc})
Best program: (float_sin in1 float_rot integer_yankdup integer_pop float_yank float_mult integer_sub float_pop float_add integer_min float_mult float_mod integer_dup_items float_dup_times integer_sub float_pop float_add in1 in1 float_shove integer_inc float_frominteger tagged_9956 integer_dup_times float_tan in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_min integer_inc integer_sub float_tan float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2426.4252594999994
Median total errors in population: 290.2267
Error averages by case: (84.5295224999997 11.147 88.78633359999985 11.281 88.33783759999903 11.297 90.14155389999912 11.248 87.9584608000008 11.261 84.27239610000055 11.193 84.03435619999938 12.13 84.80425909999893 11.262 91.0045562999994 10.363 90.14139720000014 11.21 88.73960680000127 11.269 89.37371650000024 11.237 86.9934179999994 11.123 85.88887200000006 11.178 83.49481669999868 12.024 80.3133389999993 11.147 84.61232929999845 12.043 89.49831839999827 11.124 81.89906470000007 11.164 82.98071979999943 12.062 83.23155999999916 11.139 81.42815129999883 11.167 84.85365269999895 11.151 86.01783540000082 11.213 80.61618560000075 11.04)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 9 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 34.104
Average program size in population (points): 35.104
Average percent parens in population: 0.031
Minimum age in population: 162.3835356773182
Maximum age in population: 166.8687326364426
Average age in population: 164.9320682098205
Median age in population: 164.9848219904616
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.721
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.721
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 135612193
--- Timings ---
Current time: 1529615961386 milliseconds
Total Time:         333.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.5 seconds, 49.9%
Fitness Testing:    130.5 seconds, 39.1%
Report:              36.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction float_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_13} {:instruction float_min} {:instruction float_mult} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_yankdup} {:instruction integer_dec} {:instruction tag_float_413})
Best program: (float_pop float_flush float_dec float_yankdup integer_dup_times integer_max integer_shove integer_yank in1 in2 float_min integer_fromfloat integer_stackdepth float_dec float_dec float_swap float_dec float_add integer_yank in1 in2 integer_fromfloat integer_stackdepth tagged_13 float_min float_mult float_dup_items integer_add print_integer float_yankdup integer_dec tag_float_413)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2354.6732479999996
Median total errors in population: 290.2267
Error averages by case: (78.89690750000014 11.162 85.68690549999997 11.293 84.81603339999906 11.294 86.87513689999916 11.244 85.49372160000073 11.265 82.18861920000029 11.201 79.28672719999939 12.125 80.00691359999956 11.272 86.19011209999944 10.372 85.37348000000041 11.203 85.22386290000117 11.259 86.32401970000001 11.245 85.49930999999935 11.126 85.03428800000017 11.19 81.02030359999908 12.017 76.0684949999997 11.154 83.18179499999856 12.034 88.2260129999983 11.114 80.11937350000007 11.174 80.16191569999968 12.043 82.45632999999945 11.141 79.44669359999885 11.182 82.52020299999896 11.153 80.33369180000011 11.218 81.71839620000085 11.043)
Error minima by case: (0.3075 4 0.3809 5 0.9822 4 0.2417 5 0.2512 5 0.2021 11 0.7086 10 0.0691 5 0.2221 5 0.0828 5 0.5271 5 0.4621 5 0.278 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.2994 4 0.1057 4 0.0731 10 0.3525 4 0.9681 4 0.2227 4 0.0718 4 0.4354 4)
Average genome size in population (length): 34.481
Average program size in population (points): 35.481
Average percent parens in population: 0.031
Minimum age in population: 163.3835356773182
Maximum age in population: 168.4514127666778
Average age in population: 166.3817088944549
Median age in population: 166.3974565054914
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.74
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.74
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 136475693
--- Timings ---
Current time: 1529615964067 milliseconds
Total Time:         336.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.9 seconds, 49.9%
Fitness Testing:    131.4 seconds, 39.1%
Report:              37.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction float_flush} {:instruction integer_min} {:instruction float_mult} {:instruction float_stackdepth} {:instruction float_pop} {:instruction integer_max} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction float_tan} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_max} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction integer_inc} {:instruction integer_dec} {:instruction float_min})
Best program: (float_dup_times float_flush integer_min float_mult float_stackdepth float_pop integer_max float_mult integer_inc integer_pop float_mod integer_fromfloat integer_dup float_tan in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_max float_dup_items integer_add print_integer in1 integer_inc integer_dec float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2788.9501527999996
Median total errors in population: 290.2267
Error averages by case: (99.44004749999938 11.176 104.7738897000002 11.31 103.35023559999911 11.319 104.06886199999911 11.291 102.14496800000077 11.311 96.69002040000058 11.211 100.37868739999927 12.155 98.2044989999986 11.293 105.1440015999994 10.411 103.95005959999973 11.235 103.01899640000158 11.3 102.70540600000054 11.275 102.25710899999908 11.143 101.87335980000036 11.2 99.88192509999826 12.026 91.97143699999907 11.158 97.20856389999841 12.044 103.82001299999816 11.143 97.70935480000006 11.174 96.5745734999992 12.065 100.0697499999989 11.152 97.14945639999888 11.183 99.122804099999 11.169 99.06311220000106 11.228 95.36102080000093 11.046)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.7488 3 0.7979 10 0.2914 10 0.0691 3 0.2221 3 0.9172 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 10 0.7006 3 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 33.825
Average program size in population (points): 34.825
Average percent parens in population: 0.031
Minimum age in population: 165.4367580698227
Maximum age in population: 169.7807456430888
Average age in population: 167.8646808617567
Median age in population: 167.9123981593585
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.752
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.752
Total error diversity:				 0.043
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 137322293
--- Timings ---
Current time: 1529615966771 milliseconds
Total Time:         339.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.4 seconds, 49.9%
Fitness Testing:    132.4 seconds, 39.0%
Report:              37.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction in2} {:instruction integer_pop} {:instruction float_add} {:instruction float_yankdup} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction float_swap} {:instruction float_min} {:instruction integer_mod} {:instruction float_add} {:instruction float_flush} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction float_tan} {:instruction float_swap} {:instruction tag_integer_174} {:instruction float_dup} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_sub} {:instruction tagged_151} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_min})
Best program: (float_rot in2 integer_pop float_add float_yankdup in1 in2 float_min integer_fromfloat float_dec float_swap float_min integer_mod float_add float_flush float_inc integer_stackdepth float_flush float_tan float_swap tag_integer_174 float_dup float_dup_items in1 in2 float_min integer_fromfloat integer_stackdepth integer_sub tagged_151 in1 in2 float_min integer_fromfloat integer_stackdepth float_mult float_sub float_dup_items integer_add print_integer float_inc float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2217.1436080999997
Median total errors in population: 290.2267
Error averages by case: (74.22152000000051 11.159 79.65466619999958 11.29 80.02074859999892 11.292 78.23782879999905 11.236 77.3749632000008 11.261 75.6872150000001 11.188 76.77539599999932 12.12 76.50722649999938 11.265 81.23366569999929 10.361 80.41115520000042 11.189 80.43524230000111 11.263 77.01671649999966 11.232 81.24541799999955 11.12 79.1443663999998 11.184 77.02592509999907 12.015 70.06823500000023 11.152 75.85979499999839 12.023 78.64321659999817 11.108 76.15864190000006 11.157 75.69335429999991 12.052 77.66491249999957 11.142 77.03531079999874 11.171 76.02077049999885 11.151 77.73369700000022 11.204 74.88962100000082 11.049)
Error minima by case: (0.3075 9 0.3809 9 0.9822 9 0.2417 9 0.7488 10 0.7979 11 0.7086 10 0.0691 10 0.2221 9 0.9172 9 0.5271 9 0.4621 9 0.278 9 0.4944 10 0.3243 10 0.013 9 0.3927 10 0.7006 9 0.1057 9 0.0731 11 0.3525 9 0.0319 10 0.2227 9 0.0718 8 0.4354 10)
Average genome size in population (length): 33.432
Average program size in population (points): 34.432
Average percent parens in population: 0.032
Minimum age in population: 166.4367580698227
Maximum age in population: 171.4935351931991
Average age in population: 169.3333254435672
Median age in population: 169.3824350690146
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.7
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.7
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 138159418
--- Timings ---
Current time: 1529615969344 milliseconds
Total Time:         341.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.8 seconds, 50.0%
Fitness Testing:    133.2 seconds, 39.0%
Report:              37.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction float_dup} {:instruction float_mod} {:instruction float_tan} {:instruction float_tan} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_dup_times} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction float_sub} {:instruction float_pop} {:instruction float_add} {:instruction integer_mod} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_shove} {:instruction float_dec} {:instruction integer_add} {:instruction tagged_79} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_float_770} {:instruction float_inc})
Best program: (float_sin integer_dec float_inc print_integer float_dup float_mod float_tan float_tan float_dup float_dup_times integer_max float_dup_times print_integer integer_max integer_pop float_sub float_pop float_add integer_mod integer_shove integer_max integer_pop integer_shove float_cos integer_inc integer_pop float_dup_times integer_shove float_shove float_dec integer_add tagged_79 float_pop in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer float_min integer_inc integer_sub tag_float_770 float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2247.2411156999997
Median total errors in population: 290.2267
Error averages by case: (76.81205750000048 11.156 81.44138079999931 11.268 80.3548375999989 11.278 82.651146199999 11.247 80.9764368000009 11.254 76.91215200000003 11.178 78.98173359999926 12.12 77.58274279999924 11.25 82.68311099999929 10.343 81.86881760000055 11.199 80.86860680000076 11.257 81.50842059999994 11.236 79.29752599999996 11.115 78.95044479999947 11.171 77.340411099999 12.017 73.49126100000011 11.139 77.13357599999824 12.028 82.65203099999803 11.133 76.00543880000006 11.162 77.03710869999996 12.05 77.43478999999962 11.131 74.90176849999867 11.159 77.40943429999882 11.141 79.3989072000003 11.201 71.27097500000092 11.043)
Error minima by case: (0.3075 9 0.3809 9 0.9822 10 0.2417 10 0.2512 9 0.2021 11 0.7086 11 0.0691 10 0.2221 9 0.0828 9 0.5271 10 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 10 0.2994 9 0.1057 9 0.0731 11 0.3525 9 0.9681 9 0.2227 9 0.0718 10 0.4354 9)
Average genome size in population (length): 33.29
Average program size in population (points): 34.29
Average percent parens in population: 0.032
Minimum age in population: 167.9638536402244
Maximum age in population: 172.7779207272485
Average age in population: 170.7840892937884
Median age in population: 170.8396669620034
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.706
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.706
Total error diversity:				 0.043
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 138993043
--- Timings ---
Current time: 1529615971815 milliseconds
Total Time:         344.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.2 seconds, 50.0%
Fitness Testing:    134.1 seconds, 38.9%
Report:              37.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yankdup} {:instruction float_flush} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction float_mod} {:instruction integer_dup} {:instruction integer_sub} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_sin} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_frominteger} {:instruction float_mult})
Best program: (float_sin integer_yankdup float_flush float_inc print_integer integer_max float_mod integer_dup integer_sub integer_yank in1 in2 float_min integer_fromfloat float_dec integer_fromfloat integer_stackdepth tagged_80 float_sin float_sub float_dup_items integer_add print_integer float_dup_items float_swap float_frominteger float_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2607.8694576
Median total errors in population: 290.2267
Error averages by case: (91.63337250000001 11.166 99.1790009999999 11.295 97.54222919999901 11.321 97.7532032999991 11.276 94.56423360000079 11.292 90.14543810000026 11.206 91.6489325999992 12.125 90.23560069999905 11.284 100.40266899999935 10.391 97.62472200000006 11.228 98.36701060000168 11.28 95.86986080000038 11.248 94.78792399999915 11.138 94.46971520000011 11.194 90.51641199999881 12.002 82.49066399999982 11.144 90.58147529999826 12.031 96.48200699999805 11.119 89.35710510000006 11.167 89.65911159999959 12.051 91.62609999999921 11.143 88.30004449999882 11.182 92.11675329999892 11.163 93.64518400000081 11.221 86.15968820000087 11.044)
Error minima by case: (0.3075 9 0.3809 9 0.0178 9 0.2417 9 0.7488 9 0.7979 9 0.2914 10 0.0691 10 0.2221 8 0.9172 9 0.4729 9 0.4621 9 0.278 9 0.4944 9 0.3243 9 0.013 8 0.3927 10 0.7006 9 0.1057 9 0.0731 11 0.3525 9 0.0319 9 0.2227 9 0.0718 9 0.4354 9)
Average genome size in population (length): 33.099
Average program size in population (points): 34.099
Average percent parens in population: 0.032
Minimum age in population: 168.9638536402244
Maximum age in population: 174.0809091125797
Average age in population: 172.2476738313112
Median age in population: 172.3022740980069
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.716
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.716
Total error diversity:				 0.051
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 139821493
--- Timings ---
Current time: 1529615974288 milliseconds
Total Time:         346.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.6 seconds, 50.1%
Fitness Testing:    134.9 seconds, 38.9%
Report:              38.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction print_integer} {:instruction float_dup} {:instruction float_mod} {:instruction float_tan} {:instruction float_tan} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_dup_times} {:instruction print_integer} {:instruction tagged_302} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction integer_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_max integer_max float_inc print_integer float_dup float_mod float_tan float_tan float_dup float_dup_times integer_max float_dup_times print_integer tagged_302 integer_add integer_yank in1 in2 float_min integer_fromfloat float_mod integer_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2310.4374340999993
Median total errors in population: 290.2267
Error averages by case: (78.03797999999946 11.16 85.36485720000009 11.277 83.93692659999898 11.28 82.85766279999908 11.248 81.86144160000082 11.263 78.0545877000008 11.187 81.60427019999948 12.125 80.29767369999888 11.263 84.70811099999936 10.358 84.70281759999989 11.224 85.07755260000133 11.266 81.59711010000034 11.246 82.98602799999932 11.131 82.34441120000022 11.179 80.94192509999864 12.025 76.0962999999991 11.155 78.3101146999986 12.037 83.23592919999832 11.14 78.68759320000007 11.159 78.45886599999945 12.052 81.00302749999905 11.14 78.44808749999876 11.162 79.79476619999888 11.16 82.51233800000101 11.22 77.00105640000064 11.059)
Error minima by case: (0.3075 9 0.3809 9 0.0178 9 0.2417 9 0.7488 9 0.7979 11 0.2914 10 0.0691 10 0.2221 9 0.9172 9 0.4729 9 0.4621 9 0.278 9 0.4944 10 0.3243 9 0.013 9 0.3927 11 0.7006 9 0.1057 9 0.0731 11 0.3525 9 0.0319 9 0.2227 9 0.0718 9 0.4354 9)
Average genome size in population (length): 32.822
Average program size in population (points): 33.822
Average percent parens in population: 0.032
Minimum age in population: 171.2530551363494
Maximum age in population: 175.4441896348451
Average age in population: 173.7922657732189
Median age in population: 173.8225577985911
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.704
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.704
Total error diversity:				 0.044
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 140643030
--- Timings ---
Current time: 1529615976953 milliseconds
Total Time:         349.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.3 seconds, 50.1%
Fitness Testing:    135.7 seconds, 38.8%
Report:              38.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_max} {:instruction integer_shove} {:instruction float_dup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction in1} {:instruction integer_stackdepth} {:instruction integer_min} {:instruction 90} {:instruction integer_min} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction integer_pop} {:instruction integer_div} {:instruction integer_sub} {:instruction float_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_sub} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth})
Best program: (float_sin float_dup_times float_flush float_max integer_shove float_dup float_sub float_dec integer_mod in1 integer_stackdepth integer_min 90 integer_min float_inc integer_inc integer_pop float_flush integer_mod integer_add integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add integer_pop integer_div integer_sub float_pop float_add float_dup_times float_sub integer_dup_times integer_dup_times in2 in1 in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2247.2032222999997
Median total errors in population: 290.2267
Error averages by case: (74.23275000000024 11.146 81.72076169999953 11.253 81.24178419999896 11.258 81.80493769999909 11.23 81.15369280000083 11.248 78.26658770000031 11.177 78.40793899999923 12.121 78.12274279999893 11.249 81.35966679999935 10.33 80.87281760000045 11.196 81.50318810000108 11.241 81.54011009999999 11.229 78.79796999999961 11.117 78.47645599999969 11.176 77.77251949999894 12.027 72.70832599999956 11.13 78.32090009999817 12.035 82.75042619999799 11.118 76.03943880000006 11.14 77.67393909999954 12.042 77.26455249999935 11.129 75.68873659999875 11.156 77.93721159999888 11.14 78.15705080000033 11.201 73.26171660000095 11.038)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.2512 2 0.2021 9 0.7086 10 0.0691 2 0.2221 2 0.0828 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 9 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 32.675
Average program size in population (points): 33.675
Average percent parens in population: 0.032
Minimum age in population: 172.8206032048947
Maximum age in population: 176.958836617611
Average age in population: 175.2519395626556
Median age in population: 175.2966781241473
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.704
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.704
Total error diversity:				 0.046
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 141460803
--- Timings ---
Current time: 1529615979510 milliseconds
Total Time:         352.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.7 seconds, 50.2%
Fitness Testing:    136.5 seconds, 38.8%
Report:              38.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yankdup} {:instruction float_div} {:instruction tag_integer_782} {:instruction float_yank} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction tagged_307} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction tagged_174} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction in1} {:instruction integer_inc} {:instruction float_cos})
Best program: (float_sin integer_yankdup float_div tag_integer_782 float_yank integer_mult integer_swap integer_flush integer_flush integer_stackdepth float_stackdepth tagged_307 float_shove integer_min float_sub integer_sub integer_fromfloat float_shove tagged_174 float_pop in1 in2 integer_fromfloat integer_stackdepth tagged_80 float_tan float_sub float_dup_items integer_add print_integer in1 integer_inc float_cos)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2260.3473736999995
Median total errors in population: 290.2267
Error averages by case: (77.70167250000043 11.171 81.27476169999915 11.284 80.75885539999894 11.288 81.30314619999905 11.264 80.14393920000086 11.282 77.54254569999993 11.183 78.97931639999914 12.137 77.72274279999937 11.273 82.31655519999933 10.366 81.51681760000064 11.229 81.0070797000007 11.267 80.36542059999958 11.261 80.62674999999997 11.139 80.26939999999938 11.187 78.23343819999913 12.029 74.69333899999984 11.159 77.59775409999813 12.037 81.02443219999795 11.147 77.45148750000006 11.176 77.17010869999999 12.061 78.91973249999965 11.159 77.46299179999872 11.182 78.31743429999887 11.167 78.73854820000007 11.23 76.47310420000103 11.058)
Error minima by case: (0.3075 10 0.3809 10 0.9822 10 0.2417 10 0.2512 10 0.2021 9 0.7086 10 0.0691 10 0.2221 9 0.0828 9 0.5271 10 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 10 0.2994 9 0.1057 10 0.0731 11 0.3525 9 0.9681 10 0.2227 9 0.0718 9 0.4354 10)
Average genome size in population (length): 32.279
Average program size in population (points): 33.279
Average percent parens in population: 0.033
Minimum age in population: 174.1454927868102
Maximum age in population: 178.6861521093548
Average age in population: 176.757127433491
Median age in population: 176.8098793132256
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.042
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 142268501
--- Timings ---
Current time: 1529615982006 milliseconds
Total Time:         354.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.2 seconds, 50.3%
Fitness Testing:    137.3 seconds, 38.7%
Report:              38.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction in2} {:instruction float_min} {:instruction float_dec} {:instruction float_min} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_flush} {:instruction float_mod} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction tagged_67} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_flush in2 float_min float_dec float_min integer_inc integer_pop float_flush float_mod integer_div integer_yank in1 in2 float_min integer_fromfloat float_add integer_yank in1 in2 integer_fromfloat float_yankdup tagged_67 float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2112.137709599999
Median total errors in population: 290.2267
Error averages by case: (70.49621000000046 11.143 74.83704709999934 11.253 74.44789099999913 11.261 75.75090449999917 11.228 74.8216880000007 11.247 71.68875829999978 11.164 74.33731639999945 12.119 72.39736470000001 11.242 76.50288779999946 10.331 75.30990680000063 11.186 74.67507970000041 11.237 76.15749639999979 11.229 74.64908200000006 11.104 74.20143359999962 11.164 73.97511389999953 12.019 68.6811700000002 11.122 71.84139789999878 12.023 77.88622859999845 11.109 70.25401600000006 11.142 71.55388940000033 12.046 73.02508499999999 11.129 70.37089609999889 11.148 70.862547799999 11.137 74.05819439999996 11.192 67.35310420000056 11.028)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 31.554
Average program size in population (points): 32.554
Average percent parens in population: 0.034
Minimum age in population: 175.3898359801436
Maximum age in population: 180.2759566924786
Average age in population: 178.2311121856536
Median age in population: 178.2706308799209
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.695
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.695
Total error diversity:				 0.039
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 143058076
--- Timings ---
Current time: 1529615984450 milliseconds
Total Time:         357.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.6 seconds, 50.3%
Fitness Testing:    138.1 seconds, 38.7%
Report:              39.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_max} {:instruction integer_shove} {:instruction print_integer} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction float_mult} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction -83.93700200954612} {:instruction float_min} {:instruction float_dec} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec})
Best program: (float_sin integer_max float_sin float_dup_times integer_dec float_min integer_fromfloat integer_min integer_shove integer_max integer_max integer_shove print_integer in1 in2 float_min integer_fromfloat integer_stackdepth tagged_80 float_tan float_dec float_dup_items integer_add print_integer float_inc float_mult float_dup_items integer_add float_min float_stackdepth float_dup_items integer_add print_integer -83.93700200954612 float_min float_dec float_dup float_inc integer_div integer_dec)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1925.3749199999995
Median total errors in population: 290.2267
Error averages by case: (62.210977500000645 11.126 65.76076059999903 11.222 65.76655279999913 11.233 67.9028712999992 11.196 67.61918560000069 11.207 65.26394989999966 11.148 66.4179851999999 12.111 66.09791750000034 11.21 68.1798866999995 10.294 68.00841000000085 11.172 65.75920299999963 11.207 67.97180689999956 11.198 66.31358000000081 11.096 65.91098399999929 11.137 65.91003260000006 12.032 62.92898800000049 11.112 65.26096869999915 12.029 69.32483339999885 11.095 63.50586160000006 11.128 65.43040110000084 12.047 65.16831500000067 11.12 63.88160899999888 11.132 63.76922019999901 11.122 67.11998419999989 11.178 62.30663520000028 11.032)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 10 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 10 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 30.952
Average program size in population (points): 31.952
Average percent parens in population: 0.034
Minimum age in population: 177.0659929780844
Maximum age in population: 181.5313153603577
Average age in population: 179.7028717521427
Median age in population: 179.7617642133304
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.666
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.666
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 143832551
--- Timings ---
Current time: 1529615986954 milliseconds
Total Time:         359.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.1 seconds, 50.4%
Fitness Testing:    138.9 seconds, 38.6%
Report:              39.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_flush} {:instruction integer_add} {:instruction float_div} {:instruction integer_flush} {:instruction tagged_302} {:instruction integer_swap} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times integer_fromfloat float_dup_times float_flush integer_add float_div integer_flush tagged_302 integer_swap integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2225.9418186
Median total errors in population: 290.2267
Error averages by case: (74.82967810000034 11.154 79.88072159999945 11.273 78.74424169999901 11.279 79.57069599999912 11.244 78.19294400000078 11.255 74.59798699999996 11.176 76.2310249999993 12.125 76.64522649999923 11.262 82.5768877999994 10.356 81.62215520000046 11.204 79.33977140000076 11.258 77.79433749999981 11.23 80.42449939999973 11.127 80.8390905999998 11.179 77.08108679999894 12.01 69.87899010000007 11.152 75.5093071999984 12.034 79.93932439999824 11.12 77.10763570000006 11.151 75.50048249999968 12.053 79.26200729999938 11.134 76.46656629999879 11.164 76.44548709999891 11.148 77.4358406000004 11.214 77.67182880000088 11.052)
Error minima by case: (0.3075 9 0.3809 10 0.0178 9 0.2417 9 0.7488 9 0.7979 10 0.2914 10 0.0691 10 0.2221 8 0.9172 9 0.4729 9 0.4621 9 0.278 9 0.4944 10 0.3243 9 0.013 9 0.3927 10 0.7006 9 0.1057 9 0.0731 10 0.3525 9 0.0319 10 0.2227 10 0.0718 9 0.4354 9)
Average genome size in population (length): 30.815
Average program size in population (points): 31.815
Average percent parens in population: 0.035
Minimum age in population: 178.6194149765332
Maximum age in population: 183.217804073658
Average age in population: 181.1751013720552
Median age in population: 181.2216454625447
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.699
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.699
Total error diversity:				 0.045
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 144603526
--- Timings ---
Current time: 1529615989368 milliseconds
Total Time:         362.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.5 seconds, 50.4%
Fitness Testing:    139.7 seconds, 38.6%
Report:              39.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_dup} {:instruction float_sub} {:instruction print_integer} {:instruction integer_max} {:instruction float_inc} {:instruction integer_shove} {:instruction float_mult} {:instruction tagged_302} {:instruction integer_add} {:instruction integer_yank} {:instruction float_min} {:instruction float_mult} {:instruction float_inc} {:instruction float_mult} {:instruction integer_dup_times} {:instruction tagged_812} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction float_swap} {:instruction tag_integer_222} {:instruction float_dup} {:instruction in2} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction tagged_80} {:instruction float_sub} {:instruction in1} {:instruction in1} {:instruction in2})
Best program: (integer_dup_times integer_rot float_shove integer_dup float_sub print_integer integer_max float_inc integer_shove float_mult tagged_302 integer_add integer_yank float_min float_mult float_inc float_mult integer_dup_times tagged_812 integer_sub integer_fromfloat float_shove in2 float_swap tag_integer_222 float_dup in2 in1 in2 float_min integer_fromfloat integer_stackdepth float_sub float_sub float_dup_items integer_add print_integer tagged_80 float_sub in1 in1 in2)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2276.0035071999996
Median total errors in population: 290.2267
Error averages by case: (76.47551750000075 11.162 80.9447616999989 11.288 80.32574859999892 11.285 82.98997089999904 11.242 82.29869760000086 11.263 77.93898139999955 11.194 80.53164759999918 12.127 79.31915739999974 11.27 83.35977729999934 10.361 82.895403600001 11.213 80.64424230000044 11.265 81.8477237999994 11.248 80.97608200000018 11.133 80.5784335999992 11.18 80.39449239999924 12.029 74.99717000000018 11.155 78.42247089999817 12.043 84.28132439999798 11.128 77.40701600000006 11.162 76.99008530000033 12.054 79.48808499999974 11.141 76.40189609999871 11.17 78.35165699999885 11.159 80.06662519999995 11.214 75.54053960000101 11.05)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.7488 5 0.7979 9 0.2914 10 0.0691 5 0.2221 6 0.9172 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 11 0.7006 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 30.283
Average program size in population (points): 31.283
Average percent parens in population: 0.035
Minimum age in population: 179.6194149765332
Maximum age in population: 184.5785761569343
Average age in population: 182.6534530547042
Median age in population: 182.7059691294275
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.699
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.699
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 145361026
--- Timings ---
Current time: 1529615991810 milliseconds
Total Time:         364.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.9 seconds, 50.5%
Fitness Testing:    140.5 seconds, 38.6%
Report:              39.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_pop} {:instruction float_cos} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_max float_sin float_dup_times integer_min integer_pop float_cos print_integer integer_yank in1 in2 float_min integer_fromfloat float_dec integer_add integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2281.1443681999995
Median total errors in population: 290.2267
Error averages by case: (78.19006700000034 11.144 80.9927489999994 11.256 80.76843279999898 11.269 83.49769599999907 11.231 82.88994400000084 11.245 76.52825809999962 11.173 82.29406479999905 12.136 80.31750289999927 11.252 84.20310989999935 10.342 83.75298960000062 11.207 80.91499850000105 11.25 83.1796479999998 11.229 80.47806189999957 11.122 80.13062989999938 11.162 81.99914099999869 12.042 74.59784589999985 11.125 76.88549259999807 12.044 84.21052799999784 11.117 77.71750660000006 11.147 74.1358107000002 12.057 79.07543439999952 11.137 77.67669369999876 11.158 78.3966951999989 11.146 81.19469700000013 11.21 74.87437070000107 11.041)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.7488 5 0.7979 9 0.2914 10 0.0691 5 0.2221 6 0.9172 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.7006 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 30.408
Average program size in population (points): 31.408
Average percent parens in population: 0.035
Minimum age in population: 181.2046699587728
Maximum age in population: 186.0087815779748
Average age in population: 184.1609613800327
Median age in population: 184.1971333259201
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.034
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 146121801
--- Timings ---
Current time: 1529615994124 milliseconds
Total Time:         366.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.3 seconds, 50.5%
Fitness Testing:    141.2 seconds, 38.5%
Report:              40.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_flush} {:instruction integer_add} {:instruction float_div} {:instruction integer_flush} {:instruction tagged_302} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_20} {:instruction float_pop} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_mult} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times integer_fromfloat float_dup_times float_flush integer_add float_div integer_flush tagged_302 integer_add integer_yank in1 in2 float_min integer_fromfloat integer_stackdepth tagged_20 float_pop float_sub float_dup_items float_tan float_mult integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1936.5616177999993
Median total errors in population: 290.2267
Error averages by case: (64.52343750000084 11.137 66.23109429999877 11.227 66.35671299999917 11.229 67.98418869999914 11.208 67.58965920000077 11.215 66.03489739999952 11.139 65.93140879999966 12.105 65.63036470000036 11.207 67.67199829999944 10.281 67.82074120000112 11.186 66.23135069999961 11.217 68.03612469999926 11.209 67.84563000000084 11.108 67.42462399999903 11.152 65.6371130000001 12.016 63.197001000000554 11.124 66.05778619999882 12.026 69.55484539999863 11.113 64.63850410000006 11.139 65.32115550000091 12.052 66.35207000000057 11.121 64.9018433999989 11.142 64.73744289999905 11.133 66.37040979999965 11.177 62.77421400000053 11.044)
Error minima by case: (0.3075 10 0.3809 9 0.9822 9 0.2417 10 0.2512 9 0.2021 9 0.7086 10 0.0691 9 0.2221 9 0.0828 10 0.5271 10 0.4621 10 0.722 9 0.5056 9 0.3243 10 0.987 9 0.3927 10 0.2994 8 0.1057 8 0.0731 10 0.3525 9 0.9681 9 0.2227 9 0.0718 9 0.4354 9)
Average genome size in population (length): 29.941
Average program size in population (points): 30.941
Average percent parens in population: 0.036
Minimum age in population: 182.2046699587728
Maximum age in population: 187.531520801148
Average age in population: 185.6583377375917
Median age in population: 185.6987339316316
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.037
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 146870726
--- Timings ---
Current time: 1529615996523 milliseconds
Total Time:         369.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.7 seconds, 50.6%
Fitness Testing:    142.0 seconds, 38.5%
Report:              40.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_mod} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_inc} {:instruction float_add} {:instruction float_shove} {:instruction float_dup_items} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_shove} {:instruction print_integer} {:instruction float_max} {:instruction integer_pop} {:instruction float_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_174} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_13} {:instruction float_min} {:instruction float_dup_items} {:instruction in1} {:instruction in2} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_shove})
Best program: (float_flush integer_yank integer_add integer_mod in1 in2 float_min integer_fromfloat float_dup_times float_frominteger integer_add float_inc float_add float_shove float_dup_items float_sin integer_dec integer_shove print_integer float_max integer_pop float_rot float_dec integer_swap tagged_174 float_pop in1 in2 integer_fromfloat integer_stackdepth tagged_13 float_min float_dup_items in1 in2 in2 in1 in1 integer_fromfloat integer_add print_integer integer_shove)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 1865.9929030999995
Median total errors in population: 290.2267
Error averages by case: (63.454977500000744 11.15 65.36514149999866 11.252 65.30160619999913 11.266 64.12962959999916 11.225 63.33643680000074 11.233 61.58354569999964 11.161 62.64498519999975 12.123 61.22298660000043 11.241 64.73477509999942 10.326 64.10216160000131 11.188 65.38451329999951 11.244 63.945344799998956 11.227 65.46758000000098 11.12 65.03398399999894 11.172 63.01335690000019 12.022 60.896923000000584 11.136 61.73575409999909 12.025 65.6164321999986 11.115 61.91386160000006 11.154 61.585474200000824 12.054 63.806020000000615 11.143 62.12567279999891 11.164 62.546556399999 11.149 61.79998419999955 11.194 63.10919980000044 11.052)
Error minima by case: (0.3075 10 0.3809 9 0.9822 9 0.2417 8 0.2512 10 0.2021 10 0.7086 10 0.0691 10 0.2221 9 0.0828 9 0.5271 9 0.4621 8 0.722 9 0.5056 10 0.3243 10 0.987 8 0.3927 10 0.2994 9 0.1057 8 0.0731 11 0.3525 8 0.9681 10 0.2227 9 0.0718 9 0.4354 9)
Average genome size in population (length): 29.803
Average program size in population (points): 30.803
Average percent parens in population: 0.036
Minimum age in population: 183.2046699587728
Maximum age in population: 188.8291552272361
Average age in population: 187.1029973993162
Median age in population: 187.1463024117425
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.65
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.65
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 147616390
--- Timings ---
Current time: 1529615999094 milliseconds
Total Time:         371.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.2 seconds, 50.7%
Fitness Testing:    142.8 seconds, 38.4%
Report:              40.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction in2} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_mod} {:instruction float_dup} {:instruction integer_dup_times} {:instruction integer_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_flush} {:instruction float_min} {:instruction integer_max} {:instruction integer_yank} {:instruction in1} {:instruction float_flush} {:instruction float_swap} {:instruction integer_min} {:instruction float_sub} {:instruction in1} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_pop} {:instruction integer_mod} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_302} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_flush in2 float_dup_items float_dec float_dup_times float_flush float_mod float_dup integer_dup_times integer_max float_dup_times float_dec float_flush float_min integer_max integer_yank in1 float_flush float_swap integer_min float_sub in1 float_frominteger float_dup_times integer_pop integer_mod integer_shove float_pop integer_add integer_dup_items integer_flush tagged_302 integer_add integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2135.8322017999994
Median total errors in population: 290.2267
Error averages by case: (68.10251750000064 11.135 73.54166619999886 11.251 73.923748599999 11.244 77.80142109999912 11.217 77.08869280000079 11.228 73.30196039999986 11.169 74.47556799999956 12.129 75.14201919999968 11.242 78.44122149999941 10.326 77.98532080000088 11.19 73.73971520000006 11.236 76.27103429999978 11.216 75.56230200000016 11.112 75.07248959999934 11.162 74.04338399999958 12.028 68.52817000000027 11.121 73.3580051999986 12.048 78.67092919999818 11.103 71.78296730000007 11.141 73.31610870000033 12.055 73.879315 11.123 70.16954519999874 11.151 71.0475477999989 11.127 76.24048160000002 11.202 72.34907060000089 11.041)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.7488 4 0.7979 9 0.7086 10 0.0691 5 0.2221 5 0.9172 5 0.5271 5 0.4621 4 0.722 4 0.5056 4 0.3243 10 0.987 2 0.3927 11 0.7006 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 29.716
Average program size in population (points): 30.716
Average percent parens in population: 0.036
Minimum age in population: 184.2046699587728
Maximum age in population: 190.5881214191813
Average age in population: 188.5692781420712
Median age in population: 188.6028549195637
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.656
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.656
Total error diversity:				 0.042
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 148359965
--- Timings ---
Current time: 1529616001611 milliseconds
Total Time:         374.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.7 seconds, 50.7%
Fitness Testing:    143.5 seconds, 38.4%
Report:              40.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction integer_max} {:instruction float_sub} {:instruction integer_min} {:instruction float_mult} {:instruction integer_sub} {:instruction tagged_412} {:instruction float_flush} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction tag_integer_204} {:instruction float_yankdup} {:instruction tagged_685} {:instruction float_dup_times} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_min} {:instruction integer_max} {:instruction integer_yank} {:instruction in1} {:instruction float_flush} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction in1} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tagged_302} {:instruction integer_add} {:instruction tag_integer_448} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dec integer_max float_sub integer_min float_mult integer_sub tagged_412 float_flush integer_dec integer_add integer_fromfloat integer_yankdup tag_integer_204 float_yankdup tagged_685 float_dup_times integer_pop float_dup_times integer_pop float_flush integer_min integer_max integer_yank in1 float_flush integer_sub integer_dup_times in1 integer_dup_items integer_flush tagged_302 integer_add tag_integer_448 in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 1776.4109825999992
Median total errors in population: 290.2267
Error averages by case: (58.63351020000115 11.146 60.88044279999828 11.25 60.630917099999 11.256 60.961354699999085 11.218 60.23768320000081 11.233 58.51040209999925 11.162 59.41269379999956 12.104 57.939193900000525 11.229 61.03366349999939 10.313 60.62491320000169 11.178 60.73072839999945 11.232 60.95380689999878 11.209 61.947818500001084 11.104 61.46819549999859 11.165 59.0833569000002 12.014 57.28023520000061 11.137 58.68384199999861 12.025 63.12703099999835 11.105 58.023905100000064 11.146 58.792361200000954 12.042 60.23691670000071 11.128 58.15789329999875 11.153 58.42071039999888 11.136 59.117984199999334 11.19 59.60142280000073 11.045)
Error minima by case: (0.3075 9 0.3809 10 0.9822 9 0.2417 9 0.2512 9 0.2021 11 0.7086 10 0.0691 11 0.2221 9 0.0828 9 0.5271 9 0.4621 9 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 10 0.2994 9 0.1057 9 0.0731 10 0.3525 9 0.9681 10 0.2227 10 0.0718 9 0.4354 10)
Average genome size in population (length): 29.701
Average program size in population (points): 30.701
Average percent parens in population: 0.036
Minimum age in population: 186.60581922257
Maximum age in population: 191.946394734066
Average age in population: 190.065819976449
Median age in population: 190.0490625545377
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.675
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.675
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 149103040
--- Timings ---
Current time: 1529616003998 milliseconds
Total Time:         376.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       191.1 seconds, 50.7%
Fitness Testing:    144.3 seconds, 38.3%
Report:              41.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_frominteger} {:instruction float_sin} {:instruction integer_dec} {:instruction float_rot} {:instruction float_min} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction float_pop} {:instruction integer_dec} {:instruction float_min} {:instruction in1} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_min} {:instruction integer_div} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_50} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_flush} {:instruction float_mult} {:instruction integer_mult} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_pop})
Best program: (float_sin float_frominteger float_sin integer_dec float_rot float_min integer_yankdup float_stackdepth float_pop integer_dec float_min in1 float_mod integer_dup_items integer_min integer_div in1 in2 integer_fromfloat integer_stackdepth tagged_50 float_dup_items integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_flush float_mult integer_mult float_yankdup integer_yank integer_pop)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2268.6382221999993
Median total errors in population: 290.2267
Error averages by case: (77.26822890000048 11.164 80.75622259999912 11.282 80.38139399999906 11.287 82.08117939999912 11.252 81.27794400000074 11.267 77.37333569999983 11.185 80.43956799999928 12.148 79.12360459999951 11.249 82.59577729999943 10.353 82.1098176000008 11.211 80.60021740000043 11.267 81.6965721999996 11.251 80.4790240000001 11.121 80.17799519999939 11.167 79.90038399999928 12.034 73.9447004 11.146 77.4518126999985 12.047 82.85822859999823 11.13 77.22728440000006 11.164 77.07964170000017 12.061 78.85537249999976 11.14 77.16444949999882 11.16 77.99877229999898 11.157 80.33518920000004 11.213 76.96550600000081 11.04)
Error minima by case: (0.0 2 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 11 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 3 0.2227 3 0.0718 5 0.4354 3)
Average genome size in population (length): 29.08
Average program size in population (points): 30.08
Average percent parens in population: 0.036
Minimum age in population: 187.60581922257
Maximum age in population: 193.4434642836714
Average age in population: 191.5495126844304
Median age in population: 191.5825065246413
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.684
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.684
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 149830515
--- Timings ---
Current time: 1529616006404 milliseconds
Total Time:         378.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.5 seconds, 50.8%
Fitness Testing:    145.0 seconds, 38.3%
Report:              41.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction float_dup} {:instruction float_mod} {:instruction float_tan} {:instruction float_tan} {:instruction integer_dup_times} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction float_tan} {:instruction float_div} {:instruction in2} {:instruction in2} {:instruction print_float} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc})
Best program: (float_sin integer_dec float_inc print_integer float_dup float_mod float_tan float_tan integer_dup_times in2 float_min integer_fromfloat integer_pop integer_shove integer_max integer_dup_items integer_yank float_tan float_div in2 in2 print_float in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_mult float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2279.7153390999997
Median total errors in population: 290.2267
Error averages by case: (76.6232186000001 11.158 79.8077661999998 11.276 79.34053239999908 11.29 82.19017939999918 11.247 81.43244160000071 11.261 77.1689986000004 11.18 81.62202499999941 12.135 80.19353549999919 11.258 84.07966679999946 10.356 83.72081760000006 11.209 79.58217620000094 11.26 81.99464800000037 11.239 82.62587149999955 11.123 82.19757390000005 11.177 81.53276249999871 12.015 73.67184559999981 11.15 77.65827259999864 12.032 83.5967255999983 11.125 78.58395670000007 11.165 75.60685510000002 12.052 80.9361184999994 11.14 78.43042399999884 11.172 77.45705789999897 11.145 81.07883540000074 11.209 76.16503390000071 11.044)
Error minima by case: (0.0 2 0.3809 6 0.0178 6 0.2417 5 0.2512 5 0.2021 10 0.2914 11 0.0691 5 0.2221 7 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 3 0.2227 3 0.0718 5 0.4354 3)
Average genome size in population (length): 29.099
Average program size in population (points): 30.099
Average percent parens in population: 0.036
Minimum age in population: 189.9617707625249
Maximum age in population: 194.9617202995661
Average age in population: 193.0099497494365
Median age in population: 193.0419506459484
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.694
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.694
Total error diversity:				 0.042
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 150558590
--- Timings ---
Current time: 1529616008885 milliseconds
Total Time:         381.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       194.0 seconds, 50.9%
Fitness Testing:    145.8 seconds, 38.2%
Report:              41.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_sin} {:instruction tag_float_849} {:instruction in1} {:instruction float_tan} {:instruction integer_pop} {:instruction -48.6901930929491} {:instruction float_tan} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_sub} {:instruction integer_dup_times} {:instruction -25.623553999269078} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin float_frominteger integer_add float_sin tag_float_849 in1 float_tan integer_pop -48.6901930929491 float_tan integer_dup_times float_dec float_sub integer_dup_times -25.623553999269078 in2 in1 in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2104.0737507999993
Median total errors in population: 290.2267
Error averages by case: (67.51044000000084 11.167 72.62842799999876 11.271 71.70489099999914 11.267 75.0988048999992 11.249 74.35567360000071 11.263 72.00992889999954 11.169 72.65707119999948 12.137 71.9870883000001 11.243 75.56355519999947 10.343 75.5674864000008 11.206 72.62655259999988 11.252 75.00250369999938 11.246 75.87735600000025 11.128 75.41802879999936 11.177 72.56627559999981 12.022 67.13211800000036 11.146 72.54928839999864 12.045 76.8064381999984 11.133 71.63881290000006 11.166 71.64398590000052 12.06 73.71248750000017 11.141 71.2952580999989 11.174 70.15343859999902 11.153 72.90897899999982 11.213 73.23586000000076 11.052)
Error minima by case: (0.3075 6 0.3809 8 0.9822 6 0.2417 7 0.2512 7 0.2021 10 0.7086 11 0.0691 8 0.2221 9 0.0828 8 0.5271 8 0.4621 7 0.722 7 0.5056 7 0.3243 10 0.987 4 0.3927 11 0.2994 7 0.1057 7 0.0731 11 0.3525 7 0.9681 6 0.2227 6 0.0718 8 0.4354 6)
Average genome size in population (length): 28.908
Average program size in population (points): 29.908
Average percent parens in population: 0.037
Minimum age in population: 192.0365222902025
Maximum age in population: 196.3143250780383
Average age in population: 194.4912618050592
Median age in population: 194.5552067029921
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.693
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.693
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 151281840
--- Timings ---
Current time: 1529616011216 milliseconds
Total Time:         383.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       195.3 seconds, 50.9%
Fitness Testing:    146.5 seconds, 38.2%
Report:              41.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_dup_times} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction float_add} {:instruction integer_yank} {:instruction float_tan} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction tagged_80} {:instruction 74} {:instruction integer_dup_times} {:instruction in2} {:instruction float_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_pop} {:instruction integer_mult} {:instruction in1})
Best program: (float_flush float_mod float_yankdup float_dup_times integer_max float_dup_times print_integer integer_max integer_pop float_add integer_yank float_tan in2 in2 integer_dec integer_fromfloat tagged_80 74 integer_dup_times in2 float_mod in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_pop integer_mult in1)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1996.6862012999993
Median total errors in population: 290.2267
Error averages by case: (65.49243750000105 11.14 68.82576059999876 11.228 68.61748159999904 11.234 71.49618869999911 11.214 71.26665920000077 11.223 66.73909949999951 11.147 70.5477001999995 12.12 69.70177930000008 11.217 71.59644249999943 10.287 71.68057560000103 11.193 68.63714879999982 11.223 71.39397309999936 11.208 68.54751800000074 11.122 68.243646399999 11.153 70.2211400999998 12.037 64.94593600000063 11.122 66.60839349999863 12.042 72.24114479999844 11.13 66.42692690000007 11.141 66.46700930000075 12.053 67.4278325000004 11.125 66.73468389999879 11.145 66.75233369999893 11.135 70.06212779999974 11.189 64.13326180000067 11.051)
Error minima by case: (0.3075 10 0.3809 10 0.9822 9 0.2417 9 0.2512 10 0.2021 10 0.7086 11 0.0691 10 0.2221 9 0.0828 10 0.5271 10 0.4621 9 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 11 0.2994 9 0.1057 9 0.0731 11 0.3525 9 0.9681 10 0.2227 10 0.0718 10 0.4354 10)
Average genome size in population (length): 28.956
Average program size in population (points): 29.956
Average percent parens in population: 0.037
Minimum age in population: 193.0752631722177
Maximum age in population: 198.0262910311303
Average age in population: 195.9654052904496
Median age in population: 196.0256904540598
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.656
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.656
Total error diversity:				 0.026
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 152006115
--- Timings ---
Current time: 1529616013809 milliseconds
Total Time:         386.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.8 seconds, 50.9%
Fitness Testing:    147.4 seconds, 38.1%
Report:              42.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction float_sin} {:instruction integer_max} {:instruction float_sin} {:instruction integer_max} {:instruction integer_min} {:instruction integer_pop} {:instruction float_cos} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_add} {:instruction integer_yank} {:instruction float_tan} {:instruction in2} {:instruction in2} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction tagged_80} {:instruction 74} {:instruction integer_dup_times} {:instruction in2} {:instruction float_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_pop} {:instruction integer_mult})
Best program: (float_flush float_sin integer_max float_sin integer_max integer_min integer_pop float_cos print_integer integer_yank in1 in2 float_min float_add integer_yank float_tan in2 in2 integer_sub integer_fromfloat tagged_80 74 integer_dup_times in2 float_mod in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_pop integer_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 1867.2158666999994
Median total errors in population: 290.2267
Error averages by case: (60.65813000000094 11.152 64.14828419999854 11.258 64.39873079999919 11.273 66.08448749999917 11.227 64.99020000000073 11.243 63.11258769999933 11.171 61.98744219999963 12.119 62.22305570000046 11.236 66.33010879999945 10.341 65.74924440000142 11.192 64.39676939999951 11.241 65.857337499999 11.235 64.95297000000095 11.108 64.44946719999886 11.175 61.38941110000019 11.993 57.64388400000052 11.135 63.43590009999884 12.021 68.01392319999852 11.094 60.51196730000006 11.155 63.9438660000008 12.049 62.83196250000065 11.142 60.41760899999893 11.161 61.12166989999906 11.146 64.05983539999941 11.194 62.405022800000616 11.041)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 29.082
Average program size in population (points): 30.082
Average percent parens in population: 0.036
Minimum age in population: 194.3300119398746
Maximum age in population: 199.4384348721489
Average age in population: 197.4717396621312
Median age in population: 197.5148230403607
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.691
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.691
Total error diversity:				 0.042
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 152733690
--- Timings ---
Current time: 1529616016202 milliseconds
Total Time:         388.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.1 seconds, 51.0%
Fitness Testing:    148.1 seconds, 38.1%
Report:              42.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_cos} {:instruction in2} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction integer_flush} {:instruction 43} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_pop} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank})
Best program: (float_sub float_cos in2 integer_fromfloat float_mult integer_flush 43 integer_dup_times integer_dup_times in2 in1 integer_fromfloat integer_add print_integer float_inc integer_stackdepth tag_float_413 float_inc integer_pop integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2031.7140551999994
Median total errors in population: 290.2267
Error averages by case: (70.30123690000042 11.156 73.17001289999902 11.251 72.62991119999896 11.257 73.62580489999903 11.238 71.85117600000083 11.247 67.86203749999913 11.17 67.27132279999913 12.118 68.73967369999981 11.225 74.75777729999933 10.314 73.81273480000091 11.195 72.84731810000059 11.238 72.01750369999942 11.226 70.60670000000009 11.117 70.32093469999924 11.166 68.12122139999998 12.021 65.57603580000057 11.142 68.00255329999824 12.036 72.46533639999795 11.13 67.28311990000006 11.158 68.39626500000075 12.051 68.40063220000043 11.127 66.98452209999878 11.161 68.84700329999892 11.138 69.54133799999957 11.186 66.16288330000097 11.051)
Error minima by case: (0.3075 10 0.3809 10 0.9822 10 0.2417 9 0.2512 10 0.2021 10 0.7086 10 0.0691 10 0.2221 9 0.0828 9 0.5271 9 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 10 0.2994 10 0.1057 10 0.0731 11 0.3525 9 0.9681 9 0.2227 9 0.0718 9 0.4354 10)
Average genome size in population (length): 28.658
Average program size in population (points): 29.658
Average percent parens in population: 0.037
Minimum age in population: 196.32265757838
Maximum age in population: 200.9927588451248
Average age in population: 198.9763576889567
Median age in population: 199.0038204805226
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.68
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.68
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 153450565
--- Timings ---
Current time: 1529616018507 milliseconds
Total Time:         391.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.5 seconds, 51.0%
Fitness Testing:    148.9 seconds, 38.1%
Report:              42.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_float_519} {:instruction integer_shove} {:instruction float_dup_times} {:instruction float_flush} {:instruction in2} {:instruction float_min} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_flush} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction integer_yank} {:instruction in1} {:instruction -72.12793344548743} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_shove} {:instruction float_flush} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup_times} {:instruction in2} {:instruction float_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_div} {:instruction integer_yankdup} {:instruction integer_mult})
Best program: (tag_float_519 integer_shove float_dup_times float_flush in2 float_min float_tan integer_yankdup float_add float_flush float_inc integer_stackdepth float_flush integer_stackdepth float_flush integer_yank in1 -72.12793344548743 float_tan integer_shove integer_shove float_flush integer_mult integer_dup integer_dup_times in2 float_mod in1 integer_fromfloat integer_add print_integer float_rot integer_stackdepth tag_float_413 float_div integer_yankdup integer_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2461.175268199999
Median total errors in population: 290.2267
Error averages by case: (86.76319589999954 11.174 89.66403309999991 11.305 88.53564849999896 11.303 90.00669599999902 11.286 88.14044640000087 11.298 84.92233670000074 11.202 86.0310249999993 12.132 85.75436079999871 11.268 91.84677949999931 10.379 90.81230800000004 11.228 89.04684940000129 11.289 87.65218590000029 11.266 89.54772579999936 11.132 89.20429380000013 11.195 85.41576249999844 12.018 82.95975689999916 11.162 85.17640759999829 12.04 89.70452799999808 11.154 85.53938190000007 11.184 86.44303599999927 12.062 87.09874579999891 11.145 84.07522999999873 11.185 85.88045969999885 11.166 87.28804040000084 11.219 80.82203460000085 11.052)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.7488 4 0.7979 10 0.2914 10 0.0691 5 0.2221 5 0.9172 5 0.4729 5 0.4621 4 0.278 5 0.4944 5 0.3243 10 0.013 2 0.3927 11 0.7006 3 0.1057 5 0.0731 11 0.3525 5 0.0319 4 0.2227 4 0.0718 5 0.4354 5)
Average genome size in population (length): 29.053
Average program size in population (points): 30.053
Average percent parens in population: 0.036
Minimum age in population: 198.0291403301553
Maximum age in population: 202.5986085470874
Average age in population: 200.4844508123114
Median age in population: 200.5080383808545
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.711
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.711
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 154177415
--- Timings ---
Current time: 1529616021009 milliseconds
Total Time:         393.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.0 seconds, 51.1%
Fitness Testing:    149.6 seconds, 38.0%
Report:              42.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction integer_dup_times} {:instruction float_add} {:instruction integer_mult} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_inc} {:instruction tagged_412} {:instruction float_flush} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_mod} {:instruction float_shove} {:instruction integer_inc} {:instruction tagged_662} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_yank} {:instruction float_swap} {:instruction tag_integer_222} {:instruction float_dup} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_139} {:instruction float_min} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_pop} {:instruction print_integer} {:instruction float_tan} {:instruction float_min})
Best program: (float_yank integer_dup_times float_add integer_mult float_frominteger integer_min float_mult integer_inc tagged_412 float_flush integer_dec integer_add integer_mod float_shove integer_inc tagged_662 float_add float_dup_times integer_pop integer_sub integer_fromfloat float_div integer_yank float_swap tag_integer_222 float_dup in1 in2 integer_fromfloat integer_stackdepth tagged_139 float_min float_dup_items integer_add print_integer integer_pop print_integer float_tan float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2227.8698760999996
Median total errors in population: 290.2267
Error averages by case: (76.57290190000057 11.153 79.55116409999913 11.248 79.57321569999908 11.25 80.07338789999918 11.227 79.64518560000073 11.241 78.05403669999981 11.171 76.8782765999992 12.128 75.60808829999965 11.231 77.79822149999946 10.327 77.79240360000102 11.2 79.54280530000048 11.237 80.16488269999957 11.227 78.7059989 11.118 78.30726849999925 11.166 76.58070829999939 12.032 76.57692809999982 11.139 78.11383979999836 12.039 81.74603099999813 11.117 75.60995720000007 11.157 78.20078120000001 12.053 77.28554059999982 11.138 75.88549349999883 11.161 77.79551859999897 11.142 76.3942661999998 11.207 73.25397430000092 11.05)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.2512 3 0.2021 10 0.2914 10 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.278 2 0.4944 2 0.3243 10 0.013 2 0.3927 10 0.2994 3 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 28.957
Average program size in population (points): 29.957
Average percent parens in population: 0.037
Minimum age in population: 199.0291403301553
Maximum age in population: 203.9050802987459
Average age in population: 201.9435993616092
Median age in population: 201.9611257616446
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.669
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.669
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 154902102
--- Timings ---
Current time: 1529616023641 milliseconds
Total Time:         396.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.5 seconds, 51.1%
Fitness Testing:    150.4 seconds, 38.0%
Report:              43.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_mult} {:instruction integer_flush} {:instruction 43} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction float_tan} {:instruction integer_dup_times} {:instruction in2} {:instruction float_min} {:instruction float_pop} {:instruction integer_sub} {:instruction float_pop} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_yank} {:instruction float_swap} {:instruction float_pop} {:instruction integer_dup_times} {:instruction -24.556393915914782} {:instruction in2} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap})
Best program: (integer_fromfloat float_mult integer_flush 43 integer_dup_times integer_dup_times in2 in1 float_tan integer_dup_times in2 float_min float_pop integer_sub float_pop float_sin float_dup_times float_yank float_swap float_pop integer_dup_times -24.556393915914782 in2 integer_dup_times in2 in1 in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth tag_float_413 float_inc integer_mult integer_swap)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2078.4998299999993
Median total errors in population: 290.2267
Error averages by case: (67.21607290000058 11.144 72.52465879999919 11.267 72.08360639999893 11.271 77.55921259999903 11.239 76.31944640000088 11.252 70.00494810000001 11.176 72.68348199999933 12.12 72.28481189999937 11.244 76.59655519999932 10.349 75.98656920000069 11.181 72.32122410000059 11.251 77.07472379999977 11.231 71.66691300000005 11.101 71.21868229999947 11.161 72.22014099999909 12.013 65.45829940000071 11.133 70.2961873999983 12.029 78.91612679999801 11.11 67.60361030000006 11.14 69.68184170000005 12.048 69.63726589999972 11.115 67.3405075999987 11.153 69.33484439999881 11.136 73.57269180000027 11.187 66.82340700000074 11.023)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.7488 5 0.7979 9 0.2914 10 0.0691 5 0.2221 6 0.9172 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.7006 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 28.458
Average program size in population (points): 29.458
Average percent parens in population: 0.037
Minimum age in population: 201.0883528060319
Maximum age in population: 205.6399748684944
Average age in population: 203.4760853536198
Median age in population: 203.5243741401812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.68
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.68
Total error diversity:				 0.045
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 155614376
--- Timings ---
Current time: 1529616026135 milliseconds
Total Time:         398.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.0 seconds, 51.2%
Fitness Testing:    151.1 seconds, 37.9%
Report:              43.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction float_inc} {:instruction float_yank} {:instruction integer_max} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_mod} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times float_inc float_yank integer_max in1 in2 float_min integer_fromfloat integer_inc float_swap integer_mod float_min integer_fromfloat float_add integer_yank in1 in2 integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2100.0644675999997
Median total errors in population: 290.2267
Error averages by case: (69.09121000000049 11.141 75.17128529999948 11.24 75.04074859999912 11.234 75.60573849999916 11.214 75.31316640000074 11.225 71.57091839999984 11.158 73.7354883999996 12.124 72.64315739999982 11.223 74.60377619999947 10.307 74.63982400000047 11.191 75.02535070000044 11.225 75.61020049999992 11.214 72.48252200000037 11.11 72.14754559999942 11.147 73.38492419999953 12.041 68.28420900000017 11.135 71.49664459999876 12.043 75.90964179999852 11.123 70.06402430000006 11.147 70.61935140000035 12.056 71.31689750000015 11.121 70.30422619999887 11.151 71.38654779999904 11.131 73.31333800000007 11.193 69.36173080000049 11.048)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.7488 5 0.7979 9 0.7086 10 0.0691 5 0.2221 6 0.9172 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.7006 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 28.372
Average program size in population (points): 29.372
Average percent parens in population: 0.037
Minimum age in population: 202.5181233139538
Maximum age in population: 207.0045701896617
Average age in population: 204.9429640590601
Median age in population: 205.0080942919396
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 156325162
--- Timings ---
Current time: 1529616028431 milliseconds
Total Time:         401.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.3 seconds, 51.2%
Fitness Testing:    151.9 seconds, 37.9%
Report:              43.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_mod} {:instruction integer_add} {:instruction integer_max} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_dec} {:instruction tagged_685} {:instruction float_dup_times} {:instruction integer_pop} {:instruction integer_mod} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_add} {:instruction float_shove} {:instruction integer_flush} {:instruction float_shove} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin float_mod integer_add integer_max integer_dec float_flush integer_rot float_flush integer_dec tagged_685 float_dup_times integer_pop integer_mod integer_shove float_pop integer_add float_shove integer_flush float_shove integer_add integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2249.6054101999994
Median total errors in population: 290.2267
Error averages by case: (75.94750860000015 11.166 78.66544729999943 11.281 78.12320599999919 11.284 79.49962519999922 11.258 78.6050355000007 11.267 75.44430239999993 11.176 80.34488919999949 12.152 78.72601919999943 11.264 81.4155551999995 10.363 80.90965890000042 11.237 77.45465420000042 11.265 79.27560289999983 11.255 81.04119299999985 11.149 81.67970109999986 11.183 80.75811389999916 12.037 73.94373579999983 11.153 75.17541569999874 12.049 81.07319039999845 11.137 78.68158800000006 11.178 74.67121500000012 12.065 80.55221169999957 11.152 78.87998899999893 11.18 77.04836559999907 11.173 80.00276360000038 11.233 78.97142280000071 11.058)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.7488 4 0.7979 10 0.2914 10 0.0691 5 0.2221 5 0.9172 5 0.4729 5 0.4621 4 0.278 5 0.4944 5 0.3243 9 0.013 2 0.3927 11 0.7006 3 0.1057 5 0.0731 11 0.3525 5 0.0319 4 0.2227 4 0.0718 5 0.4354 5)
Average genome size in population (length): 28.446
Average program size in population (points): 29.446
Average percent parens in population: 0.037
Minimum age in population: 203.738777575133
Maximum age in population: 208.7452311908334
Average age in population: 206.4365463401785
Median age in population: 206.4700978838749
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.683
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.683
Total error diversity:				 0.043
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 157037360
--- Timings ---
Current time: 1529616030737 milliseconds
Total Time:         403.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.7 seconds, 51.2%
Fitness Testing:    152.6 seconds, 37.8%
Report:              43.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yankdup} {:instruction float_min} {:instruction float_tan} {:instruction float_min} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction print_float} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_min} {:instruction integer_div} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_sub} {:instruction in1} {:instruction float_yank} {:instruction integer_fromfloat} {:instruction float_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction tagged_67} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_yankdup float_min float_tan float_min float_stackdepth float_dup_times integer_stackdepth print_float integer_pop integer_shove integer_yankdup integer_min integer_div float_sub float_dup_items float_sub in1 float_yank integer_fromfloat float_add integer_yank in1 in2 integer_fromfloat float_yankdup tagged_67 float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 1773.7021948999995
Median total errors in population: 290.2267
Error averages by case: (57.14626520000095 11.12 60.33090339999849 11.215 60.19794129999921 11.222 63.4675299999992 11.191 62.90792000000069 11.204 57.01116099999929 11.144 61.45077979999954 12.094 59.92233210000043 11.199 63.34255299999952 10.276 63.20299600000149 11.16 60.29265999999952 11.203 63.51788999999884 11.187 60.06845950000091 11.094 59.641235699998816 11.135 61.28259990000019 12.017 55.65024220000051 11.111 57.52053439999882 12.018 65.31253999999845 11.094 56.27524920000006 11.119 57.035238500000766 12.04 58.537726700000626 11.101 56.27749249999895 11.133 57.07797529999908 11.116 60.92355859999931 11.16 53.9254106000005 11.03)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.7488 5 0.7979 9 0.7086 10 0.0691 5 0.2221 6 0.9172 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.7006 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 28.369
Average program size in population (points): 29.369
Average percent parens in population: 0.037
Minimum age in population: 205.0818096194581
Maximum age in population: 209.80578387249
Average age in population: 207.9042618070393
Median age in population: 207.9834670293388
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.664
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.664
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 157747509
--- Timings ---
Current time: 1529616033187 milliseconds
Total Time:         405.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.1 seconds, 51.3%
Fitness Testing:    153.4 seconds, 37.8%
Report:              44.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_mod} {:instruction integer_add} {:instruction integer_max} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_dec} {:instruction tagged_685} {:instruction float_dup_times} {:instruction integer_pop} {:instruction integer_mod} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_add} {:instruction float_shove} {:instruction integer_flush} {:instruction float_shove} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin float_mod integer_add integer_max integer_dec float_flush integer_rot float_flush integer_dec tagged_685 float_dup_times integer_pop integer_mod integer_shove float_pop integer_add float_shove integer_flush float_shove integer_add integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2262.6648845999994
Median total errors in population: 290.2267
Error averages by case: (73.72269200000062 11.143 80.74659559999907 11.263 80.71510619999896 11.266 81.63010369999904 11.219 80.96271680000085 11.24 76.29584769999974 11.184 80.99485299999921 12.131 80.27995009999948 11.253 84.43277729999933 10.354 83.86048640000064 11.2 80.79397750000051 11.24 81.46686809999964 11.226 80.42523750000004 11.111 80.01773439999931 11.16 80.55127649999916 12.035 72.72708559999997 11.128 76.92050279999839 12.032 83.18541419999805 11.095 76.60399030000006 11.149 75.52220900000027 12.059 78.96501879999978 11.132 76.50363899999873 11.152 75.79814829999886 11.14 81.83412260000038 11.213 75.54653120000089 11.037)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.7488 4 0.7979 9 0.2914 10 0.0691 5 0.2221 5 0.9172 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 10 0.7006 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 27.695
Average program size in population (points): 28.695
Average percent parens in population: 0.038
Minimum age in population: 206.0818096194581
Maximum age in population: 211.4772897324612
Average age in population: 209.3808823711354
Median age in population: 209.4463576855682
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.688
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.688
Total error diversity:				 0.042
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 158441020
--- Timings ---
Current time: 1529616035509 milliseconds
Total Time:         408.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.5 seconds, 51.3%
Fitness Testing:    154.1 seconds, 37.8%
Report:              44.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_frominteger} {:instruction integer_add} {:instruction float_sin} {:instruction integer_yank} {:instruction in1} {:instruction float_tan} {:instruction integer_pop} {:instruction -48.6901930929491} {:instruction float_tan} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_sub} {:instruction integer_dup_times} {:instruction -25.623553999269078} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin float_frominteger integer_add float_sin integer_yank in1 float_tan integer_pop -48.6901930929491 float_tan integer_dup_times float_dec float_sub integer_dup_times -25.623553999269078 in2 in1 in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 1778.6788306999995
Median total errors in population: 290.2267
Error averages by case: (57.51151500000095 11.117 60.15461789999857 11.216 60.036534999999034 11.212 62.222288299999136 11.174 61.73117120000075 11.19 60.20132259999935 11.151 59.17365399999969 12.082 58.70653940000053 11.188 61.37744139999943 10.266 61.21666480000142 11.134 60.12056749999943 11.196 61.29488999999905 11.176 61.92819000000103 11.08 61.42951199999889 11.144 58.8646270000002 11.993 55.656936000000535 11.11 60.2928591999988 12.023 63.98313879999862 11.077 57.88160150000006 11.116 58.82720520000086 12.036 60.171782500000724 11.097 58.077449499998814 11.127 58.00633369999892 11.103 59.63791759999948 11.145 58.98707060000047 11.034)
Error minima by case: (0.3075 5 0.3809 6 0.0178 4 0.2417 6 0.7488 6 0.7979 11 0.2914 10 0.0691 5 0.2221 6 0.9172 6 0.4729 6 0.4621 6 0.278 5 0.4944 5 0.3243 10 0.013 3 0.3927 10 0.7006 5 0.1057 4 0.0731 10 0.3525 5 0.0319 4 0.2227 4 0.0718 4 0.4354 5)
Average genome size in population (length): 27.585
Average program size in population (points): 28.585
Average percent parens in population: 0.039
Minimum age in population: 207.0818096194581
Maximum age in population: 212.7981001853305
Average age in population: 210.8068960825315
Median age in population: 210.8590063144096
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.667
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.667
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 159131794
--- Timings ---
Current time: 1529616037786 milliseconds
Total Time:         410.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       210.8 seconds, 51.4%
Fitness Testing:    154.8 seconds, 37.7%
Report:              44.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_sin} {:instruction integer_max} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_min} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction float_mult} {:instruction in2} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_tan} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_sub} {:instruction integer_dup_times} {:instruction -25.623553999269078} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_sub float_sin integer_max integer_pop float_dup_times integer_mod integer_min float_sin integer_stackdepth float_flush float_mult in2 integer_yank in1 in2 float_min float_tan integer_dup_times float_dec float_sub integer_dup_times -25.623553999269078 in2 in1 in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1783.3678398999996
Median total errors in population: 290.2267
Error averages by case: (59.36943750000056 11.141 63.5493796999988 11.249 63.03953499999914 11.249 62.79556319999918 11.206 62.13792480000066 11.221 59.90392889999957 11.161 57.651236799999914 12.107 56.16340120000041 11.213 60.152775099999516 10.293 59.76791320000098 11.154 63.317621699999556 11.228 62.788041599999225 11.208 60.89163400000087 11.097 60.35152319999913 11.152 57.53397840000018 12.017 58.7649490000005 11.132 60.42228839999916 12.029 64.60803699999884 11.099 56.427707200000064 11.142 59.553132100000724 12.048 59.01078250000058 11.12 56.354481399999045 11.145 61.08211099999908 11.127 57.117773999999784 11.167 58.88068300000027 11.027)
Error minima by case: (0.3075 3 0.3809 4 0.9822 3 0.2417 3 0.2512 3 0.2021 9 0.7086 11 0.0691 3 0.2221 3 0.0828 3 0.5271 4 0.4621 3 0.722 3 0.5056 3 0.3243 10 0.987 2 0.3927 11 0.2994 2 0.1057 3 0.0731 10 0.3525 3 0.9681 3 0.2227 3 0.0718 3 0.4354 3)
Average genome size in population (length): 27.38
Average program size in population (points): 28.38
Average percent parens in population: 0.039
Minimum age in population: 209.5357172166609
Maximum age in population: 214.0892413185908
Average age in population: 212.2928246757434
Median age in population: 212.3759559962956
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.658
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.658
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 159817492
--- Timings ---
Current time: 1529616040205 milliseconds
Total Time:         412.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.2 seconds, 51.4%
Fitness Testing:    155.6 seconds, 37.7%
Report:              44.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dec} {:instruction float_rot} {:instruction float_div} {:instruction integer_flush} {:instruction float_mult} {:instruction integer_inc} {:instruction tagged_729} {:instruction tagged_302} {:instruction integer_swap} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_dec float_rot float_div integer_flush float_mult integer_inc tagged_729 tagged_302 integer_swap integer_yank in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1974.6854000999997
Median total errors in population: 290.2267
Error averages by case: (64.00151500000096 11.153 69.93071339999881 11.26 69.59564179999904 11.266 70.25969599999917 11.227 69.47894400000074 11.249 66.95136459999956 11.167 67.78177339999948 12.123 66.36577930000014 11.248 70.07366459999942 10.336 69.34157560000118 11.197 69.85398619999992 11.244 69.04818589999925 11.224 68.86336000000063 11.118 68.43192799999905 11.168 67.16881669999982 12.027 63.796040000000595 11.136 67.4172197999986 12.025 71.53412679999843 11.102 65.18380460000006 11.158 66.96637770000054 12.054 67.11979000000028 11.14 64.27299179999885 11.161 66.93599749999895 11.153 67.91069699999963 11.199 64.22041040000059 11.046)
Error minima by case: (0.3075 5 0.3809 8 0.0178 7 0.2417 8 0.2512 8 0.2021 10 0.2914 11 0.0691 8 0.2221 9 0.0828 8 0.4729 8 0.4621 8 0.278 6 0.4944 6 0.3243 10 0.013 4 0.3927 11 0.2994 5 0.1057 6 0.0731 11 0.3525 6 0.0319 6 0.2227 6 0.0718 7 0.4354 4)
Average genome size in population (length): 27.087
Average program size in population (points): 28.087
Average percent parens in population: 0.040
Minimum age in population: 211.1194894515307
Maximum age in population: 216.0540497701145
Average age in population: 213.8167472388766
Median age in population: 213.8769062197831
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.677
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.677
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 160495542
--- Timings ---
Current time: 1529616042614 milliseconds
Total Time:         415.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       213.7 seconds, 51.5%
Fitness Testing:    156.4 seconds, 37.7%
Report:              45.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_dec} {:instruction integer_add} {:instruction float_sin} {:instruction integer_yank} {:instruction in1} {:instruction float_tan} {:instruction integer_pop} {:instruction -99.76394449529009} {:instruction float_tan} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_min} {:instruction float_sub} {:instruction integer_sub} {:instruction float_pop} {:instruction in2} {:instruction tagged_174} {:instruction integer_max} {:instruction float_inc} {:instruction in2} {:instruction integer_fromfloat} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_323} {:instruction float_inc} {:instruction integer_mult})
Best program: (integer_rot integer_dec integer_add float_sin integer_yank in1 float_tan integer_pop -99.76394449529009 float_tan integer_dup_times float_dec integer_pop float_shove integer_min float_sub integer_sub float_pop in2 tagged_174 integer_max float_inc in2 integer_fromfloat in1 in2 integer_fromfloat integer_stackdepth float_pop float_dup_items integer_add print_integer integer_dup integer_stackdepth tag_float_323 float_inc integer_mult)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2121.588260599999
Median total errors in population: 290.2267
Error averages by case: (73.61728500000046 11.158 73.92918979999922 11.253 73.15185539999906 11.25 74.79307979999913 11.232 74.44043200000078 11.242 72.96313099999976 11.168 73.0420313999994 12.135 72.55615739999983 11.234 74.3428877999994 10.322 74.51298960000074 11.205 73.9360797000003 11.24 74.92411739999967 11.239 75.93479999999998 11.129 75.50603999999953 11.175 72.77754569999952 12.031 69.82605300000013 11.145 73.00050299999846 12.045 76.4976357999982 11.125 71.78402430000007 11.162 72.1448397000003 12.06 74.4675449999997 11.144 72.07032189999879 11.164 71.81310669999894 11.151 73.31261999999997 11.208 73.97498920000082 11.052)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 11 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 26.955
Average program size in population (points): 27.955
Average percent parens in population: 0.040
Minimum age in population: 212.1194894515307
Maximum age in population: 217.114360188367
Average age in population: 215.2843434458733
Median age in population: 215.2990598551997
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.691
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.691
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 161170242
--- Timings ---
Current time: 1529616044926 milliseconds
Total Time:         417.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.0 seconds, 51.5%
Fitness Testing:    157.1 seconds, 37.6%
Report:              45.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction integer_flush} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_flush} {:instruction in2} {:instruction float_min} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_flush} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction integer_max} {:instruction integer_div} {:instruction integer_stackdepth} {:instruction tagged_80} {:instruction float_tan} {:instruction float_sub} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup})
Best program: (print_integer integer_fromfloat float_mult integer_flush float_add integer_dup_times integer_dup_times in2 in1 integer_sub integer_fromfloat float_dup_times float_flush in2 float_min float_tan integer_yankdup float_add float_flush float_inc integer_stackdepth integer_fromfloat float_sub integer_max integer_div integer_stackdepth tagged_80 float_tan float_sub in2 in1 in1 integer_fromfloat integer_add print_integer integer_dup)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2079.7462928999994
Median total errors in population: 290.2267
Error averages by case: (68.32198000000051 11.145 73.36880889999927 11.253 73.21364179999902 11.264 74.63307049999915 11.212 73.97271200000075 11.23 69.54199189999979 11.166 72.64348199999931 12.119 71.33860459999936 11.24 75.39955519999941 10.328 74.86856920000066 11.19 73.33045910000065 11.234 74.50271649999976 11.218 73.30572699999992 11.113 72.15286739999955 11.17 71.9731409999991 12.03 65.98314400000044 11.138 69.6879000999985 12.037 74.99091719999822 11.099 69.16135180000006 11.152 70.93493909999997 12.051 70.76872249999968 11.137 69.04106949999881 11.162 70.61488399999891 11.142 73.42012260000035 11.203 70.49791500000077 11.045)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4786 4 0.3243 10 0.013 3 0.3927 11 0.2994 3 0.0757 4 0.0731 11 0.3425 4 0.0319 4 0.2227 4 0.0718 5 0.3754 3)
Average genome size in population (length): 26.752
Average program size in population (points): 27.752
Average percent parens in population: 0.040
Minimum age in population: 213.1194894515307
Maximum age in population: 218.8431410453363
Average age in population: 216.761841561695
Median age in population: 216.8051439492935
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.669
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.669
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 161839742
--- Timings ---
Current time: 1529616047227 milliseconds
Total Time:         419.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.4 seconds, 51.5%
Fitness Testing:    157.8 seconds, 37.6%
Report:              45.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_frominteger} {:instruction float_min} {:instruction integer_max} {:instruction integer_yank} {:instruction in1} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_dup_times} {:instruction print_integer} {:instruction integer_max} {:instruction integer_pop} {:instruction float_add} {:instruction integer_yank} {:instruction float_tan} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction tagged_80} {:instruction float_add} {:instruction integer_dup_times} {:instruction in2} {:instruction float_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction tag_float_413})
Best program: (float_sin float_frominteger float_min integer_max integer_yank in1 float_yankdup float_dup_times integer_max float_dup_times print_integer integer_max integer_pop float_add integer_yank float_tan in2 in2 integer_dec integer_fromfloat tagged_80 float_add integer_dup_times in2 float_mod in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth tag_float_413)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2145.0345808999996
Median total errors in population: 290.2267
Error averages by case: (72.24682500000046 11.162 75.24128529999894 11.274 75.31281979999906 11.279 76.59548749999914 11.234 75.97720000000074 11.252 72.59198139999981 11.178 75.2873561999996 12.141 73.80122649999991 11.252 76.57866569999942 10.352 76.34107240000105 11.208 75.27918810000003 11.252 76.66933749999939 11.244 75.81502800000045 11.121 75.3328943999992 11.17 74.89816809999964 12.035 70.50014400000018 11.15 72.75186359999877 12.043 78.5893243999984 11.112 71.96317040000007 11.161 73.06415840000044 12.063 74.15002750000014 11.145 72.13115129999883 11.167 72.25754779999895 11.157 74.9885534 11.222 74.24610420000072 11.05)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.7488 5 0.7979 9 0.2914 10 0.0691 5 0.2221 6 0.9172 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 11 0.7006 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 26.625
Average program size in population (points): 27.625
Average percent parens in population: 0.040
Minimum age in population: 215.1039331836058
Maximum age in population: 220.1209524683509
Average age in population: 218.2412189410542
Median age in population: 218.2940518496968
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.639
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.639
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 162505942
--- Timings ---
Current time: 1529616049779 milliseconds
Total Time:         422.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       217.7 seconds, 51.6%
Fitness Testing:    158.7 seconds, 37.6%
Report:              45.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_yank} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_div} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction tagged_20} {:instruction float_pop} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_mult} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_rot integer_dec float_inc integer_swap float_yank integer_dup_times integer_rot float_div float_flush integer_mod integer_add integer_yank in1 in2 float_min integer_fromfloat float_shove float_dec in1 in1 in2 float_min integer_fromfloat integer_stackdepth tagged_20 float_pop float_sub float_dup_items float_tan float_mult integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2199.1149471999993
Median total errors in population: 290.2267
Error averages by case: (74.65698140000043 11.127 77.55158769999899 11.241 76.74640039999902 11.243 81.57487129999909 11.212 80.70318560000081 11.223 74.69514109999986 11.171 78.3055679999994 12.131 77.05229559999974 11.215 79.80433199999938 10.32 79.54898960000094 11.179 77.17762190000025 11.231 81.3208826999996 11.206 76.54504730000053 11.097 76.11458979999927 11.135 77.94338399999943 12.034 73.10265540000032 11.107 74.8701888999987 12.043 82.97243219999822 11.093 73.06687080000006 11.134 74.32337260000045 12.052 74.0338814000002 11.112 73.29911959999879 11.126 74.87925989999891 11.119 77.96290720000002 11.169 69.12038080000045 11.023)
Error minima by case: (0.3075 4 0.3809 4 0.9822 4 0.2417 5 0.7488 5 0.7979 9 0.7086 10 0.0691 5 0.2221 6 0.9172 5 0.5271 4 0.4621 5 0.722 4 0.5056 4 0.3243 9 0.987 3 0.3927 10 0.7006 3 0.1057 4 0.0731 10 0.3525 4 0.9681 4 0.2227 4 0.0718 4 0.4354 3)
Average genome size in population (length): 26.307
Average program size in population (points): 27.307
Average percent parens in population: 0.041
Minimum age in population: 216.8061544771666
Maximum age in population: 221.8006254616052
Average age in population: 219.7136418496656
Median age in population: 219.7784108364221
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.648
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.648
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 163164367
--- Timings ---
Current time: 1529616052246 milliseconds
Total Time:         424.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.2 seconds, 51.6%
Fitness Testing:    159.5 seconds, 37.5%
Report:              46.1 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yankdup} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_sub} {:instruction tagged_80} {:instruction integer_stackdepth} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_flush} {:instruction float_min} {:instruction float_mult} {:instruction tagged_220} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_yankdup in2 float_min in1 float_rot integer_fromfloat float_sub float_mod integer_fromfloat in1 in2 float_min float_sub tagged_80 integer_stackdepth integer_mod integer_pop float_flush float_min float_mult tagged_220 integer_add integer_yank in1 integer_yank in1 in2 float_min integer_fromfloat float_mod integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2022.1976428999992
Median total errors in population: 290.2267
Error averages by case: (67.05590000000082 11.148 70.43557069999906 11.247 69.95983759999903 11.251 71.5914967999991 11.225 70.99241760000078 11.238 67.4825246999995 11.154 70.22548839999965 12.13 67.99150290000027 11.215 71.24677619999943 10.315 71.25782400000081 11.187 70.36460680000009 11.23 71.44173839999965 11.216 72.01241000000032 11.115 71.59856799999939 11.157 70.06892419999954 12.028 65.23809200000058 11.128 67.71468109999874 12.039 72.85064179999844 11.112 68.55934140000006 11.154 65.25135140000093 12.057 70.46430750000005 11.126 68.40816239999877 11.152 68.73688399999892 11.139 68.5231225999997 11.186 70.73647240000066 11.04)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 10 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 25.898
Average program size in population (points): 26.898
Average percent parens in population: 0.042
Minimum age in population: 218.5587768343575
Maximum age in population: 223.1104618915134
Average age in population: 221.1958699269468
Median age in population: 221.2643146569969
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.6
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.6
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 163812492
--- Timings ---
Current time: 1529616054585 milliseconds
Total Time:         427.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       220.6 seconds, 51.6%
Fitness Testing:    160.2 seconds, 37.5%
Report:              46.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dup} {:instruction float_add} {:instruction integer_max} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction print_float} {:instruction integer_dup_items} {:instruction float_swap} {:instruction in1} {:instruction in2} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_rot float_dup float_add integer_max integer_inc integer_shove integer_yankdup print_float integer_dup_items float_swap in1 in2 integer_swap integer_fromfloat float_yank float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1689.0676591999995
Median total errors in population: 290.2267
Error averages by case: (54.336122700000686 11.102 56.58858549999867 11.198 56.04979249999907 11.198 59.59843039999917 11.159 58.64990560000073 11.179 53.146349599999674 11.137 56.79199159999966 12.105 55.6301248000005 11.173 60.98377509999945 10.257 60.62599600000156 11.126 56.30047229999949 11.184 59.09951099999899 11.161 57.59103450000102 11.069 57.22535229999896 11.115 57.5151401000002 12.006 51.9362352000006 11.096 53.64305219999902 12.027 60.49174359999851 11.07 53.763759000000064 11.106 52.38026180000088 12.038 55.85513920000071 11.076 53.61612769999884 11.109 53.872933099998974 11.092 56.436773999999446 11.129 56.02104940000041 11.006)
Error minima by case: (0.3075 2 0.3809 2 0.9822 2 0.2417 3 0.2512 3 0.2021 9 0.7086 10 0.0691 3 0.2221 3 0.0828 3 0.5271 2 0.4621 3 0.722 2 0.5056 2 0.3243 10 0.987 2 0.3927 11 0.2994 3 0.1057 2 0.0731 11 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 25.846
Average program size in population (points): 26.846
Average percent parens in population: 0.042
Minimum age in population: 219.6109034265659
Maximum age in population: 224.6588476741398
Average age in population: 222.6788665281302
Median age in population: 222.6772793377179
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.638
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.638
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 164459467
--- Timings ---
Current time: 1529616056887 milliseconds
Total Time:         429.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       222.0 seconds, 51.7%
Fitness Testing:    160.8 seconds, 37.5%
Report:              46.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_sin} {:instruction integer_max} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_min} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction integer_flush} {:instruction tagged_302} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_sin} {:instruction integer_max} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_min} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction float_mult} {:instruction in2} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction float_tan} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_sub} {:instruction integer_dup_times} {:instruction -25.623553999269078} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_sub float_sin integer_max integer_pop float_dup_times integer_mod integer_min float_sin integer_stackdepth float_flush integer_flush tagged_302 integer_swap integer_yank float_sin integer_max integer_pop float_dup_times integer_mod integer_min float_sin integer_stackdepth float_flush float_mult in2 integer_yank in1 in2 float_min float_tan integer_dup_times float_dec float_sub integer_dup_times -25.623553999269078 in2 in1 in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1725.6588833999992
Median total errors in population: 290.2267
Error averages by case: (57.123822500000415 11.12 59.71809429999873 11.198 59.8006061999991 11.202 58.23239719999916 11.177 57.387900800000715 11.192 55.7414826999998 11.132 58.03415719999974 12.092 55.92174670000044 11.189 58.81132979999949 10.249 58.84749920000126 11.159 59.69745909999951 11.182 57.52428359999945 11.175 60.65729800000098 11.095 60.30759039999892 11.133 57.89451860000019 12.02 54.15211800000058 11.116 56.10892779999931 12.027 58.1833483999991 11.091 57.78418700000007 11.123 53.90930170000071 12.037 59.480660000000654 11.11 57.95097099999889 11.128 57.581883999999015 11.117 56.421132999999784 11.156 57.12316620000021 11.043)
Error minima by case: (0.3075 10 0.3809 10 0.0178 10 0.2417 9 0.7488 10 0.7979 11 0.2914 10 0.0691 11 0.2221 9 0.9172 9 0.4729 9 0.4621 10 0.278 9 0.4944 10 0.3243 10 0.013 9 0.3927 10 0.7006 9 0.1057 10 0.0731 11 0.3525 10 0.0319 10 0.2227 10 0.0718 10 0.4354 9)
Average genome size in population (length): 25.461
Average program size in population (points): 26.461
Average percent parens in population: 0.043
Minimum age in population: 220.6109034265659
Maximum age in population: 226.086645782618
Average age in population: 224.1762787262719
Median age in population: 224.2241545787681
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.618
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.618
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 165096642
--- Timings ---
Current time: 1529616059174 milliseconds
Total Time:         431.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.3 seconds, 51.7%
Fitness Testing:    161.5 seconds, 37.4%
Report:              46.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_frominteger} {:instruction float_tan} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_mod} {:instruction integer_min} {:instruction float_swap} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin float_frominteger float_tan float_inc integer_dup integer_mod integer_min float_swap in1 in2 float_min in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 2171.257024399999
Median total errors in population: 290.2267
Error averages by case: (72.55836250000026 11.161 77.2759043999994 11.28 76.82787319999895 11.28 77.02162959999905 11.25 75.97843680000081 11.264 74.8235562000002 11.182 73.18173359999972 12.131 73.63301919999984 11.254 78.29344359999936 10.355 77.5474036000006 11.207 77.10655260000037 11.26 76.68334479999983 11.246 78.43513600000014 11.126 77.97797279999968 11.182 73.75141109999952 12.021 71.21717000000014 11.156 75.0497905999987 12.038 78.45943219999846 11.123 74.21754450000006 11.163 74.48103560000031 12.053 76.5166099999998 11.143 73.9257365999987 11.174 74.10632509999888 11.152 74.11083540000016 11.209 75.61376440000053 11.053)
Error minima by case: (0.3075 2 0.3809 2 0.9822 2 0.2417 3 0.2512 3 0.2021 11 0.7086 10 0.0691 3 0.2221 3 0.0828 3 0.5271 2 0.4621 3 0.722 2 0.5056 2 0.3243 10 0.987 2 0.3927 11 0.2994 3 0.1057 2 0.0731 11 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 24.958
Average program size in population (points): 25.958
Average percent parens in population: 0.043
Minimum age in population: 222.9964912541756
Maximum age in population: 227.6080220454222
Average age in population: 225.7206736954317
Median age in population: 225.7638068890529
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.039
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 165721442
--- Timings ---
Current time: 1529616061430 milliseconds
Total Time:         434.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.8 seconds, 51.8%
Fitness Testing:    162.2 seconds, 37.4%
Report:              47.0 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_stackdepth} {:instruction integer_add} {:instruction float_sin} {:instruction integer_yank} {:instruction in1} {:instruction float_rot} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_stackdepth integer_add float_sin integer_yank in1 float_rot float_pop in1 in2 float_min integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 1843.8595587999994
Median total errors in population: 290.2267
Error averages by case: (61.0094375000013 11.119 63.11299879999807 11.224 63.98457059999893 11.218 65.65852339999903 11.19 65.00087080000085 11.207 62.30073729999919 11.148 60.342528199999606 12.107 61.955401200000516 11.208 65.03832919999935 10.297 64.6250256000019 11.167 64.08551329999943 11.204 64.43802309999856 11.201 63.764858000001134 11.09 62.4199839999986 11.145 61.728005500000194 12.024 58.42997500000064 11.112 62.37627399999852 12.03 66.66449159999814 11.083 59.643073000000065 11.129 59.88640110000098 12.044 61.34202000000072 11.12 60.89264089999872 11.133 60.44833369999882 11.115 61.446343199999426 11.174 61.74619980000059 11.03)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 5 0.7488 5 0.7979 9 0.2914 11 0.0691 2 0.2221 6 0.9172 5 0.4729 3 0.4621 5 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 11 0.7006 3 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 25.078
Average program size in population (points): 26.078
Average percent parens in population: 0.043
Minimum age in population: 224.4946196801869
Maximum age in population: 229.017271845569
Average age in population: 227.204600378103
Median age in population: 227.2483456921019
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.613
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.613
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 166349292
--- Timings ---
Current time: 1529616063640 milliseconds
Total Time:         436.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       226.1 seconds, 51.8%
Fitness Testing:    162.9 seconds, 37.3%
Report:              47.1 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_yank} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_div} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_rot integer_dec float_inc integer_swap float_yank integer_dup_times integer_rot float_div float_flush integer_mod integer_add integer_yank in1 in2 float_min integer_fromfloat float_yank float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2058.531851699999
Median total errors in population: 290.2267
Error averages by case: (70.64997750000083 11.17 72.61033249999872 11.266 72.433855399999 11.273 73.71052999999907 11.252 72.97792000000082 11.266 71.68073729999945 11.17 67.85777979999925 12.134 68.29750290000028 11.248 72.71855409999938 10.348 72.57874120000125 11.214 72.4710797000002 11.251 72.85542789999928 11.251 72.37919000000038 11.135 71.992511999999 11.182 69.47459989999983 12.02 67.99604000000026 11.155 71.27089569999828 12.041 74.12973759999804 11.138 68.62291860000006 11.168 68.87176660000057 12.066 70.79813500000016 11.157 68.50035379999873 11.173 70.88732939999889 11.163 69.0591225999994 11.214 71.19381220000102 11.058)
Error minima by case: (0.3075 10 0.3809 10 0.0178 9 0.2417 9 0.2512 10 0.2021 10 0.2914 11 0.0691 10 0.2221 9 0.0828 9 0.4729 9 0.4621 10 0.278 9 0.4944 10 0.3243 10 0.013 9 0.3927 11 0.2994 10 0.1057 10 0.0731 11 0.3525 9 0.0319 10 0.2227 9 0.0718 9 0.4354 9)
Average genome size in population (length): 24.646
Average program size in population (points): 25.646
Average percent parens in population: 0.044
Minimum age in population: 225.99861417878
Maximum age in population: 230.58845289315
Average age in population: 228.6408628788039
Median age in population: 228.7149103204947
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.624
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.624
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 166966392
--- Timings ---
Current time: 1529616066018 milliseconds
Total Time:         438.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       227.6 seconds, 51.9%
Fitness Testing:    163.5 seconds, 37.3%
Report:              47.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction float_inc} {:instruction float_yank} {:instruction integer_dup_times} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction in2} {:instruction integer_yank} {:instruction in1} {:instruction float_mod} {:instruction float_flush} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times float_inc float_yank integer_dup_times in1 in2 float_min integer_mult in2 integer_yank in1 float_mod float_flush in1 integer_fromfloat integer_fromfloat float_mod float_add in2 integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2089.9319288999995
Median total errors in population: 290.2267
Error averages by case: (70.17982500000026 11.137 73.84390439999945 11.253 73.19773079999895 11.248 76.00993769999903 11.212 74.85169280000083 11.226 70.57716250000027 11.164 72.42331639999925 12.129 72.2075028999991 11.233 76.13210989999929 10.321 75.47707240000047 11.191 73.52782360000087 11.233 75.2701101 11.217 71.91524799999979 11.108 71.58295039999967 11.153 71.69508679999889 12.038 68.3441570000001 11.132 70.7546124999983 12.044 76.40482739999804 11.096 68.92722740000006 11.142 71.88296249999965 12.054 70.31319999999934 11.124 69.06092799999877 11.147 70.43554779999887 11.13 73.72084060000049 11.196 69.22915200000091 11.039)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 10 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 24.377
Average program size in population (points): 25.377
Average percent parens in population: 0.045
Minimum age in population: 227.2969264794782
Maximum age in population: 232.1522982389784
Average age in population: 230.1704932655382
Median age in population: 230.2191428406958
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.622
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.622
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 167576642
--- Timings ---
Current time: 1529616068267 milliseconds
Total Time:         440.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       229.0 seconds, 52.0%
Fitness Testing:    164.2 seconds, 37.2%
Report:              47.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction float_dup_times} {:instruction float_dup} {:instruction float_mod} {:instruction float_tan} {:instruction float_tan} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction float_swap} {:instruction in1} {:instruction in2} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_stackdepth float_dup_times float_dup float_mod float_tan float_tan integer_dup_times integer_dup_items float_swap in1 in2 integer_swap integer_fromfloat float_yank float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2144.407479399999
Median total errors in population: 290.2267
Error averages by case: (72.36936250000089 11.167 76.21380889999898 11.268 76.58292659999904 11.274 74.96628829999912 11.252 74.22117120000077 11.265 74.25172679999982 11.171 74.13965399999925 12.143 71.69264110000003 11.245 74.13299829999944 10.346 74.10257560000097 11.211 76.4389713000004 11.258 74.57650369999942 11.254 76.8018000000001 11.133 76.38103999999935 11.179 73.73162699999934 12.029 71.35613100000018 11.158 74.33428839999836 12.037 77.2357375999981 11.129 73.57791860000006 11.168 73.4651321000004 12.064 75.35054499999983 11.154 72.84535379999879 11.171 74.06443859999895 11.161 72.79697899999958 11.217 76.26186000000095 11.062)
Error minima by case: (0.3075 10 0.3809 9 0.9822 9 0.2417 9 0.7488 9 0.7979 9 0.7086 10 0.0691 10 0.2221 9 0.9172 9 0.5271 9 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 10 0.7006 9 0.1057 9 0.0731 11 0.3525 9 0.9681 10 0.2227 9 0.0718 9 0.4354 10)
Average genome size in population (length): 24.403
Average program size in population (points): 25.403
Average percent parens in population: 0.045
Minimum age in population: 228.8496387998845
Maximum age in population: 233.6370487674478
Average age in population: 231.6606999654786
Median age in population: 231.6988388235113
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.626
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.626
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 168187717
--- Timings ---
Current time: 1529616070546 milliseconds
Total Time:         443.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       230.5 seconds, 52.0%
Fitness Testing:    164.9 seconds, 37.2%
Report:              47.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction integer_swap} {:instruction integer_yank} {:instruction in1} {:instruction float_flush} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_mult} {:instruction integer_stackdepth})
Best program: (integer_yankdup float_dup_times integer_inc float_mult integer_fromfloat integer_swap integer_yank in1 float_flush in2 in1 in1 integer_fromfloat integer_add print_integer float_mult integer_stackdepth)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 2118.6390504999995
Median total errors in population: 290.2267
Error averages by case: (70.19051500000054 11.153 74.65433249999899 11.258 74.75067739999899 11.262 74.95145429999906 11.22 74.60019520000084 11.244 73.2031624999998 11.174 73.14131639999958 12.131 71.87184839999993 11.24 74.35022039999934 10.337 74.11549280000101 11.193 74.71140490000008 11.241 75.1461858999992 11.224 74.74980400000051 11.119 74.29293919999927 11.163 72.71743819999965 12.034 70.90109200000013 11.14 73.27239789999865 12.035 76.79612679999828 11.108 71.37859320000005 11.155 72.96688940000044 12.059 73.30849500000011 11.134 71.65699179999878 11.158 72.62610669999889 11.141 72.88791239999995 11.201 73.2284582000006 11.045)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.2512 2 0.2021 9 0.7086 10 0.0691 2 0.2221 2 0.0828 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 24.687
Average program size in population (points): 25.687
Average percent parens in population: 0.044
Minimum age in population: 230.6085544849322
Maximum age in population: 235.2844249581887
Average age in population: 233.1121363282551
Median age in population: 233.1400635379463
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.652
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.652
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 168806017
--- Timings ---
Current time: 1529616072937 milliseconds
Total Time:         445.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.8 seconds, 52.0%
Fitness Testing:    165.7 seconds, 37.2%
Report:              47.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_mod} {:instruction float_dup} {:instruction float_add} {:instruction float_min} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_tan} {:instruction float_yank} {:instruction float_shove} {:instruction integer_dup_times} {:instruction print_integer} {:instruction integer_mod} {:instruction float_tan} {:instruction float_yank} {:instruction float_shove} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_stackdepth float_sub integer_mod integer_mod float_dup float_add float_min integer_inc integer_pop integer_yankdup integer_yankdup float_tan float_yank float_shove integer_dup_times print_integer integer_mod float_tan float_yank float_shove integer_dup_times integer_dup_times in2 in1 in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2084.5721605999997
Median total errors in population: 290.2267
Error averages by case: (70.32526760000033 11.15 72.77171809999912 11.239 73.04405649999907 11.241 73.88159639999911 11.219 73.20092960000076 11.237 72.21132259999986 11.163 71.04681829999979 12.11 71.04343380000003 11.232 73.98910989999945 10.316 73.79198960000093 11.199 72.92200530000001 11.23 73.57619319999944 11.236 72.42531410000049 11.125 72.88079089999937 11.164 70.58394419999978 12.035 69.31947310000012 11.143 72.23007379999879 12.035 74.70123459999857 11.119 70.67604610000006 11.148 72.45835140000041 12.051 71.8319001000002 11.137 70.99199479999886 11.157 71.144615299999 11.143 71.8310559999999 11.203 69.60292530000042 11.058)
Error minima by case: (0.3075 10 0.3809 10 0.0178 9 0.2417 9 0.2512 10 0.2021 10 0.2914 9 0.0691 9 0.2221 8 0.0828 10 0.4729 10 0.4621 10 0.278 9 0.4944 10 0.3243 10 0.013 9 0.3927 10 0.2994 10 0.1057 10 0.0731 10 0.3525 10 0.0319 10 0.2227 9 0.0718 9 0.4354 10)
Average genome size in population (length): 24.645
Average program size in population (points): 25.645
Average percent parens in population: 0.044
Minimum age in population: 232.0003892816837
Maximum age in population: 236.4968154966636
Average age in population: 234.6418376636054
Median age in population: 234.7371941802751
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.645
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.645
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 169423317
--- Timings ---
Current time: 1529616075443 milliseconds
Total Time:         448.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       233.3 seconds, 52.1%
Fitness Testing:    166.5 seconds, 37.2%
Report:              48.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction float_flush} {:instruction float_mult} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction in2} {:instruction in1} {:instruction in2} {:instruction integer_yankdup} {:instruction tag_integer_204} {:instruction in2} {:instruction float_max} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth})
Best program: (integer_rot float_flush float_mult integer_flush integer_dup_items integer_dup_times integer_flush in2 in1 in2 integer_yankdup tag_integer_204 in2 float_max integer_dup_times integer_flush integer_dup_times in2 in1 in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2118.6323026999994
Median total errors in population: 290.2267
Error averages by case: (69.6243500000007 11.148 74.76641219999941 11.25 74.47561259999915 11.248 75.0621461999992 11.22 74.6484368000007 11.233 72.02356369999968 11.166 74.28515079999933 12.114 71.98436469999977 11.231 75.08933199999944 10.312 74.93682400000063 11.194 74.60991780000063 11.235 75.10442059999976 11.214 75.5832709999999 11.111 75.18697739999966 11.154 74.14638399999912 12.029 69.9550989999999 11.136 72.06577409999852 12.037 76.65362979999833 11.111 72.02878590000006 11.149 71.97847410000014 12.055 74.20785749999959 11.126 71.97165889999893 11.15 72.79437159999905 11.132 72.9538406000002 11.198 70.50564740000084 11.037)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.7488 5 0.7979 9 0.2914 11 0.0691 5 0.2221 6 0.9172 5 0.5271 6 0.4621 5 0.278 4 0.4944 4 0.3243 9 0.987 3 0.3927 10 0.7006 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 24.704
Average program size in population (points): 25.704
Average percent parens in population: 0.044
Minimum age in population: 233.0003892816837
Maximum age in population: 238.0819505385229
Average age in population: 236.0921458537037
Median age in population: 236.1281928213945
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.629
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.629
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 170042242
--- Timings ---
Current time: 1529616077835 milliseconds
Total Time:         450.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.7 seconds, 52.1%
Fitness Testing:    167.3 seconds, 37.1%
Report:              48.4 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_yank} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_div} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction -40} {:instruction float_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction print_integer} {:instruction float_min})
Best program: (integer_rot integer_dec float_inc integer_swap float_yank integer_dup_times integer_rot float_div float_flush integer_mod integer_add integer_yank in1 in2 float_min integer_fromfloat -40 float_sub float_dup_items integer_add print_integer float_min)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1810.8674887999994
Median total errors in population: 290.2267
Error averages by case: (58.311205000001024 11.123 61.18166509999846 11.213 61.462534999999015 11.216 61.803182099999134 11.194 61.45910760000076 11.21 60.00750369999932 11.145 61.95690559999956 12.112 60.61653940000055 11.201 62.581885599999445 10.283 62.55366480000162 11.168 61.33356749999942 11.198 61.90464409999887 11.197 63.41563400000108 11.095 62.9705231999987 11.134 61.535572800000196 12.025 57.68788400000056 11.116 60.0497717999987 12.03 63.41949759999836 11.101 60.259024300000064 11.128 60.131863100000956 12.049 62.099487500000755 11.114 60.55225809999876 11.126 59.494669899998904 11.114 61.61134319999933 11.164 60.97755380000058 11.034)
Error minima by case: (0.3075 2 0.3809 2 0.0178 2 0.2417 3 0.7488 3 0.7979 10 0.7086 11 0.0691 3 0.2221 3 0.0828 3 0.4729 2 0.4621 3 0.722 2 0.5056 2 0.3243 10 0.013 2 0.3927 11 0.7006 3 0.1057 2 0.0731 11 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 24.197
Average program size in population (points): 25.197
Average percent parens in population: 0.045
Minimum age in population: 234.0003892816837
Maximum age in population: 239.4890428909006
Average age in population: 237.5760343998144
Median age in population: 237.6358392855734
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.631
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 170648492
--- Timings ---
Current time: 1529616080101 milliseconds
Total Time:         452.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.1 seconds, 52.1%
Fitness Testing:    167.9 seconds, 37.1%
Report:              48.6 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_flush} {:instruction 43} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_pop} {:instruction integer_stackdepth})
Best program: (float_sin integer_max float_sin float_dup_times integer_flush 43 integer_dup_times integer_dup_times in2 in1 float_swap integer_fromfloat integer_add print_integer integer_pop integer_stackdepth)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1760.2967446999994
Median total errors in population: 290.2267
Error averages by case: (57.901130000000784 11.146 58.88237969999856 11.243 59.63465959999899 11.243 59.186705299999055 11.226 58.46065920000084 11.233 57.41750369999946 11.16 59.2504485999997 12.114 57.94219390000048 11.214 60.77521929999934 10.302 60.60991320000148 11.18 59.65093199999947 11.237 59.06004889999899 11.22 62.60396600000113 11.112 62.13655679999875 11.167 58.955194300000194 12.014 54.90597500000065 11.137 57.53260809999882 12.031 61.87634239999849 11.112 58.903447100000065 11.151 56.030716900000954 12.049 60.955250000000696 11.127 58.21116239999875 11.157 57.06644289999891 11.142 58.7725585999995 11.186 61.623730800000544 11.048)
Error minima by case: (0.3075 10 0.3809 10 0.9822 9 0.2417 10 0.7488 10 0.7979 11 0.7086 11 0.0691 10 0.2221 9 0.9172 10 0.5271 10 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 11 0.7006 9 0.1057 10 0.0731 11 0.3525 10 0.9681 10 0.2227 10 0.0718 10 0.4354 10)
Average genome size in population (length): 23.341
Average program size in population (points): 24.341
Average percent parens in population: 0.046
Minimum age in population: 236.4025151337827
Maximum age in population: 240.9895858613028
Average age in population: 239.0589535722406
Median age in population: 239.1032797923246
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.6
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.6
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 171232767
--- Timings ---
Current time: 1529616082296 milliseconds
Total Time:         454.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.5 seconds, 52.2%
Fitness Testing:    168.6 seconds, 37.1%
Report:              48.8 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_max} {:instruction float_sin} {:instruction integer_max} {:instruction float_frominteger} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_shove} {:instruction float_pop} {:instruction integer_dup_times} {:instruction -24.556393915914782} {:instruction in2} {:instruction integer_dup_times} {:instruction in2} {:instruction tag_float_646} {:instruction float_yank} {:instruction integer_shove} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction print_float} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (float_shove integer_max float_sin integer_max float_frominteger float_mult integer_inc integer_pop float_dup_times integer_shove float_shove float_pop integer_dup_times -24.556393915914782 in2 integer_dup_times in2 tag_float_646 float_yank integer_shove float_max in2 integer_inc float_pop in1 in2 float_min integer_fromfloat float_mod print_float float_dup_times integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 1612.6136279999994
Median total errors in population: 290.2267
Error averages by case: (52.859991400000844 11.129 55.57822149999889 11.209 54.843020199999316 11.217 55.01691379999936 11.189 53.88240320000051 11.193 51.427464299999556 11.139 52.38699159999978 12.089 51.083401200000424 11.187 55.222107699999654 10.265 54.737499200001096 11.159 55.16023229999945 11.202 54.38335939999932 11.192 55.093186300000816 11.099 54.69318039999918 11.146 51.983464400000194 12.009 50.89840140000022 11.123 51.55994989999931 12.027 55.76554599999892 11.096 51.43906050000007 11.13 50.912273300000564 12.03 53.19168390000069 11.123 51.46743169999914 11.136 53.021003599999204 11.124 52.06719959999976 11.158 52.523641200000256 11.045)
Error minima by case: (0.3075 10 0.3809 10 0.9822 10 0.2417 10 0.2512 10 0.2021 10 0.7086 10 0.0691 9 0.2221 9 0.0828 9 0.5271 9 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 11 0.2994 10 0.1057 9 0.0731 11 0.3525 10 0.9681 10 0.2227 10 0.0718 10 0.4354 10)
Average genome size in population (length): 23.23
Average program size in population (points): 24.23
Average percent parens in population: 0.047
Minimum age in population: 237.4025151337827
Maximum age in population: 242.7214312719133
Average age in population: 240.5359294780092
Median age in population: 240.5797553888925
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.568
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.568
Total error diversity:				 0.032
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 171814017
--- Timings ---
Current time: 1529616084594 milliseconds
Total Time:         457.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       238.9 seconds, 52.3%
Fitness Testing:    169.2 seconds, 37.0%
Report:              49.0 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_shove} {:instruction print_float} {:instruction integer_mod} {:instruction -24.556393915914782} {:instruction in2} {:instruction integer_dup_times} {:instruction in2} {:instruction tag_float_646} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_yank} {:instruction in2} {:instruction integer_rot} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_mod})
Best program: (integer_flush float_mult integer_inc integer_pop float_dup_times integer_shove float_shove print_float integer_mod -24.556393915914782 in2 integer_dup_times in2 tag_float_646 float_sub integer_dup_times float_yank in2 integer_rot in1 integer_fromfloat integer_add print_integer float_mod)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 1727.4575912999994
Median total errors in population: 290.2267
Error averages by case: (57.60543500000111 11.151 59.01742689999826 11.25 58.791428199999 11.256 58.945288299999085 11.218 58.1781712000008 11.233 56.264514199999574 11.158 57.21703139999945 12.113 55.976746700000476 11.231 59.43332979999935 10.314 58.94641640000171 11.178 58.912730099999486 11.232 58.68442789999873 11.221 60.17596600000108 11.113 59.773556799998566 11.163 56.70954570000019 12.024 54.81279300000067 11.149 56.39264459999894 12.028 60.15383939999834 11.115 55.836341400000066 11.157 56.418570700000934 12.052 57.60595500000065 11.134 56.01322619999879 11.156 56.4753379999989 11.136 57.133702199999256 11.188 59.95316620000074 11.06)
Error minima by case: (0.3075 10 0.3809 11 0.9822 10 0.2417 10 0.2512 10 0.2021 11 0.7086 11 0.0691 10 0.2221 9 0.0828 10 0.5271 10 0.4621 10 0.722 10 0.5056 10 0.3243 10 0.987 10 0.3927 11 0.2994 10 0.1057 11 0.0731 11 0.3525 10 0.9681 10 0.2227 10 0.0718 10 0.4354 11)
Average genome size in population (length): 23.251
Average program size in population (points): 24.251
Average percent parens in population: 0.047
Minimum age in population: 238.4025151337827
Maximum age in population: 244.0575821904874
Average age in population: 242.054042372319
Median age in population: 242.1170269072456
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.6
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.6
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 172395517
--- Timings ---
Current time: 1529616086961 milliseconds
Total Time:         459.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       240.4 seconds, 52.3%
Fitness Testing:    169.8 seconds, 37.0%
Report:              49.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_inc} {:instruction print_integer} {:instruction integer_max} {:instruction float_mod} {:instruction integer_add} {:instruction float_div} {:instruction integer_flush} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_add} {:instruction float_cos} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_dec float_inc print_integer integer_max float_mod integer_add float_div integer_flush integer_mod integer_add integer_yank in1 in2 float_min integer_fromfloat float_yank float_add float_cos integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2012.3280802999993
Median total errors in population: 290.2267
Error averages by case: (65.67921230000081 11.144 69.74480889999896 11.24 70.12281979999914 11.244 71.35369599999913 11.207 70.86544640000078 11.233 67.61371029999952 11.154 70.35773359999965 12.114 68.76971020000018 11.225 70.18244249999941 10.311 70.05257560000106 11.189 69.94518809999991 11.224 71.53972379999932 11.213 71.4449700000005 11.109 70.21772769999922 11.149 69.93673539999989 12.02 65.3096758000006 11.127 68.60261249999886 12.022 73.52752799999858 11.093 67.02560670000007 11.146 67.86678310000067 12.049 68.96124580000037 11.126 68.02076849999888 11.149 67.89310669999902 11.139 70.07319439999979 11.184 65.37105820000053 11.039)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 10 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 23.33
Average program size in population (points): 24.33
Average percent parens in population: 0.046
Minimum age in population: 240.6999481398421
Maximum age in population: 245.5224734316578
Average age in population: 243.5047506007302
Median age in population: 243.5824484192532
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.601
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.601
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 172979092
--- Timings ---
Current time: 1529616089298 milliseconds
Total Time:         461.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.9 seconds, 52.4%
Fitness Testing:    170.5 seconds, 36.9%
Report:              49.4 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_flush} {:instruction float_add} {:instruction integer_max} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_pop} {:instruction in1} {:instruction in2} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_mod} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_div} {:instruction float_div})
Best program: (float_shove integer_sub integer_dec integer_flush float_add integer_max integer_dup_times float_add float_stackdepth integer_fromfloat integer_max integer_flush integer_pop in1 in2 in2 float_min in1 in1 integer_fromfloat integer_add print_integer float_mod integer_yank float_stackdepth float_dup_times float_div float_div)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1676.2868181999993
Median total errors in population: 290.2267
Error averages by case: (53.82197500000104 11.13 56.17214149999845 11.218 56.08139259999912 11.215 58.069913799999185 11.201 57.31940320000071 11.213 55.153482699999124 11.141 55.24870019999944 12.099 55.01753940000051 11.198 58.252663499999485 10.279 58.00666480000164 11.16 56.076784299999446 11.201 56.73882149999883 11.194 57.02546400000099 11.098 56.64710719999865 11.141 54.7611401000002 12.017 53.235923000000504 11.126 55.18353509999858 12.03 58.81394719999841 11.106 53.90239840000007 11.13 55.39659410000086 12.042 55.454775000000694 11.107 53.08290719999889 11.138 54.331556399999016 11.123 56.10977399999924 11.167 54.86521400000072 11.043)
Error minima by case: (0.3075 10 0.3809 10 0.9822 10 0.2417 10 0.7488 10 0.7979 11 0.7086 10 0.0691 10 0.2221 9 0.9172 10 0.5271 10 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.987 9 0.3927 11 0.7006 10 0.1057 10 0.0731 10 0.3525 10 0.9681 10 0.2227 10 0.0718 10 0.4354 10)
Average genome size in population (length): 22.907
Average program size in population (points): 23.907
Average percent parens in population: 0.047
Minimum age in population: 241.6999481398421
Maximum age in population: 246.9517958785094
Average age in population: 244.9773465606298
Median age in population: 245.0177389145499
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.599
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.599
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 173552167
--- Timings ---
Current time: 1529616091778 milliseconds
Total Time:         464.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       243.3 seconds, 52.4%
Fitness Testing:    171.3 seconds, 36.9%
Report:              49.6 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_div} {:instruction integer_swap} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction print_float} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sub integer_stackdepth integer_yank float_div integer_swap integer_pop integer_fromfloat float_shove integer_inc float_dec in1 in2 float_min integer_fromfloat float_mod print_float float_dup_times integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1601.5438842999993
Median total errors in population: 290.2267
Error averages by case: (49.80551250000068 11.109 53.505284199998975 11.185 53.91555279999917 11.194 53.00367209999936 11.166 52.28765440000054 11.177 51.936099499999564 11.123 52.9797797999998 12.097 50.26695400000044 11.173 54.39932979999967 10.246 53.52241640000103 11.142 53.75504039999951 11.172 53.59143519999935 11.17 56.376800000000934 11.076 55.883039999999205 11.122 52.64627560000018 12.006 49.202923000000354 11.092 52.424786199999225 12.015 55.38054599999895 11.062 51.353130000000064 11.112 51.180936200000644 12.036 54.83348750000065 11.094 51.295258099999074 11.12 51.07700179999924 11.111 52.57041499999966 11.144 53.385553800000224 11.021)
Error minima by case: (0.3075 2 0.3809 3 0.0178 3 0.2417 2 0.2512 2 0.2021 10 0.2914 10 0.0691 2 0.2221 3 0.0828 2 0.4729 2 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 1 0.4354 2)
Average genome size in population (length): 22.834
Average program size in population (points): 23.834
Average percent parens in population: 0.048
Minimum age in population: 242.6999481398421
Maximum age in population: 248.5468179452184
Average age in population: 246.4727731732034
Median age in population: 246.5109233980834
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.588
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.588
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 174123242
--- Timings ---
Current time: 1529616094201 milliseconds
Total Time:         466.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.8 seconds, 52.4%
Fitness Testing:    171.9 seconds, 36.8%
Report:              49.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction float_inc} {:instruction float_yank} {:instruction integer_dup_times} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction in2} {:instruction integer_yank} {:instruction in1} {:instruction float_mod} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_stackdepth} {:instruction float_inc})
Best program: (float_dup_times float_inc float_yank integer_dup_times in1 in2 float_min integer_mult in2 integer_yank in1 float_mod in1 in1 integer_fromfloat integer_add print_integer float_inc integer_stackdepth float_inc float_stackdepth float_inc)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1944.9995911999995
Median total errors in population: 290.2267
Error averages by case: (63.90783750000102 11.133 68.47018979999841 11.234 68.39565959999896 11.241 69.29687129999908 11.207 68.70968320000081 11.214 65.2985666999993 11.164 66.01398519999968 12.125 64.32029560000052 11.231 67.2604424999994 10.305 67.20257560000144 11.189 68.49587779999965 11.23 68.86988269999891 11.216 68.06199300000088 11.115 66.86398859999888 11.156 65.57468120000014 12.025 63.89709200000065 11.132 65.31282709999866 12.041 70.37122859999829 11.095 63.531997300000064 11.136 66.40467010000089 12.047 65.67826750000066 11.126 62.48469079999876 11.148 66.09521589999885 11.143 66.41355339999942 11.19 66.18251820000053 11.042)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 9 0.7086 11 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.013 1 0.3927 10 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 22.228
Average program size in population (points): 23.228
Average percent parens in population: 0.049
Minimum age in population: 244.6331950825964
Maximum age in population: 250.0602212059934
Average age in population: 247.970973836564
Median age in population: 248.011329933839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.568
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.568
Total error diversity:				 0.044
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 174679117
--- Timings ---
Current time: 1529616096641 milliseconds
Total Time:         469.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.2 seconds, 52.5%
Fitness Testing:    172.7 seconds, 36.8%
Report:              50.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_add} {:instruction float_flush} {:instruction integer_add} {:instruction float_dec} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction float_dec} {:instruction integer_flush} {:instruction float_max} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth})
Best program: (float_dup_times integer_fromfloat float_add float_flush integer_add float_dec float_flush integer_fromfloat float_sin float_dec integer_flush float_max integer_dup_times integer_flush integer_dup_times in2 in1 in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1694.0366788999995
Median total errors in population: 290.2267
Error averages by case: (50.79851250000067 11.119 57.54666509999863 11.211 57.457428199998965 11.21 58.928430399999066 11.185 58.56515680000083 11.196 56.19389739999959 11.131 55.70853459999994 12.09 54.970608500000495 11.192 58.96888559999938 10.266 58.81458200000138 11.147 57.48573009999946 11.193 58.932435199999055 11.176 58.07929800000113 11.092 57.67760159999892 11.128 55.776437300000204 12.02 52.211884000000616 11.116 56.991786199998856 12.028 60.35614479999864 11.091 54.16739840000007 11.124 55.29608240000097 12.044 56.830717500000716 11.103 53.75684339999873 11.125 55.56477909999889 11.11 55.83406119999975 11.163 55.83477860000027 11.028)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.7488 5 0.7979 9 0.7086 10 0.0691 5 0.2221 6 0.9172 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.7006 3 0.1057 4 0.0731 10 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 22.305
Average program size in population (points): 23.305
Average percent parens in population: 0.049
Minimum age in population: 246.803749296477
Maximum age in population: 251.2336299516403
Average age in population: 249.448087124323
Median age in population: 249.499119956189
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.588
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.588
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 175236967
--- Timings ---
Current time: 1529616099007 milliseconds
Total Time:         471.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       247.7 seconds, 52.5%
Fitness Testing:    173.4 seconds, 36.8%
Report:              50.4 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dec} {:instruction float_sin} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_tan} {:instruction integer_dup_times} {:instruction float_add} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_tan} {:instruction float_add} {:instruction float_sub} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_yank} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_add} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_tan} {:instruction in2} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_dup_times float_inc integer_dec float_sin float_sub integer_dup_items integer_rot float_tan integer_dup_times float_add integer_sub integer_fromfloat float_tan float_tan float_add float_sub float_min integer_fromfloat integer_pop integer_shove integer_pop float_sub integer_yank float_tan integer_mod integer_add float_pop in1 in2 float_stackdepth integer_fromfloat float_mod float_tan in2 integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 1530.3961606999994
Median total errors in population: 290.2267
Error averages by case: (49.08497250000049 11.122 50.125331399999354 11.205 50.368445999999416 11.206 49.40508909999945 11.184 48.901142400000374 11.197 48.1738658999998 11.129 49.66478620000008 12.108 48.615230400000435 11.184 50.945106599999754 10.264 51.005836800000814 11.154 50.205257199999544 11.193 48.53405619999978 11.185 53.42435200000069 11.096 52.951129599999405 11.138 49.6843831000002 12.009 48.00971500000021 11.115 48.22467669999961 12.025 51.26425259999938 11.091 49.711244000000065 11.13 48.14217890000048 12.046 51.82859500000061 11.11 49.009683899999196 11.133 48.7392287999994 11.118 49.61777399999993 11.156 53.42382640000028 11.038)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.2512 4 0.2021 10 0.7086 11 0.0691 5 0.2221 5 0.0828 5 0.5271 5 0.4621 4 0.722 5 0.5056 5 0.3243 10 0.987 2 0.3927 11 0.2994 3 0.1057 5 0.0731 11 0.3525 5 0.9681 4 0.2227 4 0.0718 5 0.4354 5)
Average genome size in population (length): 22.158
Average program size in population (points): 23.158
Average percent parens in population: 0.050
Minimum age in population: 248.2720642647258
Maximum age in population: 252.7577113632309
Average age in population: 250.9573809661521
Median age in population: 250.9766373375277
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.579
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.579
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 175791192
--- Timings ---
Current time: 1529616101389 milliseconds
Total Time:         473.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       249.2 seconds, 52.6%
Fitness Testing:    174.0 seconds, 36.7%
Report:              50.7 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_mult} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_max float_dup_times float_inc float_mult in1 in2 float_min in2 float_min integer_fromfloat float_mod in2 float_dup_times integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2045.0364251999995
Median total errors in population: 290.2267
Error averages by case: (65.27055790000114 11.13 72.47150279999894 11.232 72.37710909999907 11.227 72.58787129999915 11.187 71.90668320000074 11.208 70.32273729999946 11.157 69.02419659999937 12.111 68.31971020000027 11.216 72.76155409999939 10.294 72.45582400000106 11.169 72.36696200000014 11.207 72.30680689999937 11.193 72.80802880000013 11.1 72.4429475999992 11.137 68.92885969999993 12.02 65.05075090000054 11.129 71.14611029999848 12.036 73.65113279999832 11.087 68.79804740000006 11.133 69.36376660000063 12.048 71.24970280000022 11.111 68.47527139999882 11.142 70.10871449999897 11.123 69.60548679999958 11.178 69.62309020000077 11.038)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.7488 2 0.7979 10 0.2914 11 0.0691 2 0.2221 2 0.9172 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 10 0.7006 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 21.979
Average program size in population (points): 22.979
Average percent parens in population: 0.050
Minimum age in population: 249.5065213476372
Maximum age in population: 254.2737932795642
Average age in population: 252.4050638247525
Median age in population: 252.4643827221563
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 38
Genome diversity (% unique Plush genomes):	 0.598
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 38
Syntactic diversity (% unique Push programs):	 0.598
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 176340842
--- Timings ---
Current time: 1529616103702 milliseconds
Total Time:         476.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       250.7 seconds, 52.6%
Fitness Testing:    174.6 seconds, 36.7%
Report:              50.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_yank} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_div} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_add} {:instruction float_cos} {:instruction integer_add} {:instruction print_integer})
Best program: (in2 integer_yank integer_dup_times integer_rot float_div float_flush integer_mod integer_add integer_yank in1 in2 float_min integer_fromfloat float_yank float_add float_cos integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1757.4095649999992
Median total errors in population: 290.2267
Error averages by case: (57.52913000000065 11.137 59.044856099998746 11.229 59.23264179999895 11.235 59.765804899999054 11.195 59.11367360000084 11.209 57.05834359999967 11.147 58.6089056 12.117 56.91257200000053 11.198 60.32899829999935 10.282 60.28990680000125 11.165 59.17740489999943 11.209 59.751579499999245 11.203 62.78780000000115 11.101 62.32103999999865 11.147 58.46057280000019 12.018 55.58496200000066 11.121 57.640539499998994 12.026 61.58033639999879 11.088 58.451658500000065 11.146 57.10762040000099 12.045 61.05354500000074 11.123 58.37913049999867 11.145 57.013220199998834 11.129 58.07576879999978 11.174 60.51755380000023 11.033)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.2512 4 0.2021 9 0.7086 11 0.0691 5 0.2221 5 0.0828 5 0.5271 5 0.4621 4 0.722 4 0.5056 4 0.3243 10 0.987 2 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 22.278
Average program size in population (points): 23.278
Average percent parens in population: 0.049
Minimum age in population: 250.8561794098784
Maximum age in population: 255.8406372166727
Average age in population: 253.9065702656287
Median age in population: 253.9306432038865
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.593
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.593
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 176897942
--- Timings ---
Current time: 1529616106096 milliseconds
Total Time:         478.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       252.3 seconds, 52.7%
Fitness Testing:    175.2 seconds, 36.6%
Report:              51.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_pop} {:instruction float_tan} {:instruction in2} {:instruction integer_yank} {:instruction in1} {:instruction integer_shove} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_inc} {:instruction integer_yankdup})
Best program: (integer_dup_items float_sub integer_dup_items integer_pop float_tan in2 integer_yank in1 integer_shove in1 in1 integer_fromfloat integer_add print_integer float_inc integer_yankdup)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1966.8719303999994
Median total errors in population: 290.2267
Error averages by case: (63.41977390000104 11.136 68.78610689999861 11.244 68.34877689999901 11.246 70.49187129999903 11.202 69.16468800000084 11.229 64.21617939999919 11.172 68.67877979999933 12.106 65.95695010000018 11.228 71.76388779999935 10.315 71.28507240000121 11.168 68.58510279999994 11.221 70.11680689999912 11.203 69.77245410000064 11.105 69.37377369999888 11.16 67.48027559999974 12.009 60.571393600000675 11.129 65.3603563999985 12.026 71.27873159999817 11.101 64.55817220000006 11.145 64.34726760000095 12.048 67.11490190000025 11.121 63.98536439999877 11.14 65.8965326999989 11.129 67.82897899999958 11.179 66.70673140000086 11.021)
Error minima by case: (0.3075 3 0.3809 6 0.9822 5 0.2417 4 0.2512 4 0.2021 9 0.7086 10 0.0691 5 0.2221 5 0.0828 5 0.5271 6 0.4621 4 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 22.371
Average program size in population (points): 23.371
Average percent parens in population: 0.049
Minimum age in population: 252.9086860931644
Maximum age in population: 257.1622628035
Average age in population: 255.3610830746117
Median age in population: 255.3962050825407
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.599
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.599
Total error diversity:				 0.042
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 177457292
--- Timings ---
Current time: 1529616108334 milliseconds
Total Time:         481.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       253.7 seconds, 52.8%
Fitness Testing:    175.8 seconds, 36.6%
Report:              51.3 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_div} {:instruction integer_shove} {:instruction integer_max} {:instruction float_pop} {:instruction integer_dup_times} {:instruction -24.556393915914782} {:instruction float_shove} {:instruction -24.556393915914782} {:instruction in2} {:instruction integer_dup_times} {:instruction in2} {:instruction integer_dup} {:instruction float_yank} {:instruction integer_shove} {:instruction float_max} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_rot} {:instruction float_mod} {:instruction print_integer} {:instruction integer_yank})
Best program: (integer_yankdup float_mult integer_inc integer_pop integer_div integer_shove integer_max float_pop integer_dup_times -24.556393915914782 float_shove -24.556393915914782 in2 integer_dup_times in2 integer_dup float_yank integer_shove float_max in1 integer_fromfloat integer_add float_rot float_mod print_integer integer_yank)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2041.5083938999994
Median total errors in population: 290.2267
Error averages by case: (67.63973250000103 11.153 71.67007849999898 11.254 71.70770159999925 11.253 72.09083809999922 11.226 71.63118080000059 11.243 69.14992139999944 11.16 70.90036259999941 12.127 68.63398660000009 11.235 70.89666459999958 10.325 70.84432720000099 11.197 71.6703365 11.242 72.1806552999994 11.227 71.52744500000034 11.12 71.10097939999928 11.156 70.52895129999985 12.035 68.6499560000001 11.141 69.22491219999877 12.038 73.87663579999855 11.117 68.41867720000006 11.152 69.3976936000004 12.056 70.13912500000023 11.137 68.65133579999905 11.153 69.81737589999915 11.143 69.56276879999956 11.204 69.45575220000073 11.047)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.7488 5 0.7979 9 0.2914 10 0.0691 5 0.2221 6 0.9172 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.7006 3 0.1057 4 0.0731 10 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 22.046
Average program size in population (points): 23.046
Average percent parens in population: 0.050
Minimum age in population: 254.2095065428218
Maximum age in population: 258.5288928742776
Average age in population: 256.825204769733
Median age in population: 256.8125544865346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.581
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.581
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 178008517
--- Timings ---
Current time: 1529616110868 milliseconds
Total Time:         483.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.4 seconds, 52.8%
Fitness Testing:    176.5 seconds, 36.5%
Report:              51.4 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times in1 in2 integer_fromfloat float_mod float_add integer_mult integer_flush integer_fromfloat integer_yank in1 in2 float_swap integer_fromfloat float_mod float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1715.7922794999995
Median total errors in population: 290.2267
Error averages by case: (56.48690410000085 11.133 57.96823359999876 11.227 57.57234489999912 11.225 57.59494879999925 11.203 56.61890270000059 11.212 56.21686639999955 11.138 57.14227499999984 12.108 54.97550650000046 11.204 58.7190185999995 10.281 57.84907390000117 11.166 57.728742699999465 11.21 57.914830299999196 11.199 60.59842550000097 11.105 60.16472729999893 11.147 56.84446500000019 12.016 54.641679500000414 11.133 56.31618649999901 12.028 59.60798719999869 11.093 56.146097900000065 11.133 56.124546500000854 12.042 58.944711400000685 11.122 56.27598269999901 11.149 55.61464479999913 11.136 56.553371399999676 11.178 59.53380630000041 11.05)
Error minima by case: (0.3075 10 0.3809 10 0.9822 10 0.2417 10 0.7488 10 0.7979 10 0.7086 11 0.0691 10 0.2221 9 0.9172 10 0.5271 10 0.4621 10 0.278 10 0.5056 9 0.3243 8 0.987 9 0.3927 9 0.7006 8 0.1057 9 0.0731 10 0.3525 9 0.9681 10 0.2227 10 0.0718 10 0.4354 10)
Average genome size in population (length): 22.223
Average program size in population (points): 23.223
Average percent parens in population: 0.050
Minimum age in population: 255.2095065428218
Maximum age in population: 260.3943719050803
Average age in population: 258.2970031100592
Median age in population: 258.3497788979149
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.575
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.575
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 178564142
--- Timings ---
Current time: 1529616113019 milliseconds
Total Time:         485.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       256.8 seconds, 52.9%
Fitness Testing:    177.1 seconds, 36.5%
Report:              51.6 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_pop} {:instruction float_frominteger} {:instruction -29.47344666355778} {:instruction float_sin} {:instruction integer_yank} {:instruction in1} {:instruction integer_flush} {:instruction integer_pop} {:instruction -48.6901930929491} {:instruction float_tan} {:instruction integer_dup_times} {:instruction float_shove} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction integer_mult} {:instruction float_flush} {:instruction float_mod} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_add} {:instruction integer_dec} {:instruction in1} {:instruction in2} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction tagged_18} {:instruction float_mod} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_dup_items float_pop float_frominteger -29.47344666355778 float_sin integer_yank in1 integer_flush integer_pop -48.6901930929491 float_tan integer_dup_times float_shove float_sub integer_dup_times float_add integer_fromfloat integer_add integer_mult float_flush float_mod integer_div integer_yank in1 in2 float_min integer_fromfloat float_add integer_dec in1 in2 integer_fromfloat float_yankdup tagged_18 float_mod integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1467.1492666999995
Median total errors in population: 290.2267
Error averages by case: (45.56789500000044 11.111 47.77861679999902 11.195 47.83326799999927 11.192 49.24394699999928 11.161 48.78540800000059 11.175 45.87709949999975 11.128 47.64211739999989 12.088 45.26964500000044 11.172 49.389439199999565 10.246 49.17517440000096 11.123 47.82052819999954 11.172 49.35351099999937 11.167 49.32246400000082 11.067 48.8371071999993 11.121 47.441788700000195 12.004 44.56366300000042 11.097 46.34578619999941 12.02 51.06514479999905 11.058 45.08950410000006 11.107 45.66915550000064 12.034 47.75112750000061 11.096 45.17487529999908 11.112 45.75878769999921 11.096 47.09456379999991 11.134 48.406649400000276 11.016)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 11 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 21.799
Average program size in population (points): 22.799
Average percent parens in population: 0.051
Minimum age in population: 256.2095065428218
Maximum age in population: 261.6529396946434
Average age in population: 259.7822494904117
Median age in population: 259.8539516476962
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.59
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.59
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 179109142
--- Timings ---
Current time: 1529616115413 milliseconds
Total Time:         488.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.3 seconds, 52.9%
Fitness Testing:    177.7 seconds, 36.4%
Report:              51.8 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction tagged_302} {:instruction -40} {:instruction in1} {:instruction float_pop} {:instruction float_tan} {:instruction integer_dup_times} {:instruction in2} {:instruction float_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer tagged_302 -40 in1 float_pop float_tan integer_dup_times in2 float_mod in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1567.1644962999994
Median total errors in population: 290.2267
Error averages by case: (49.829050000000514 11.096 51.56542689999902 11.2 51.08335699999919 11.191 54.1117716999992 11.162 53.08617120000068 11.18 48.97452469999963 11.136 51.85332279999992 12.095 51.47291750000044 11.169 56.3799971999995 10.258 54.9740788000012 11.125 51.49583849999951 11.182 53.675427899999306 11.162 52.308244000000926 11.062 51.8720623999992 11.12 51.29587000000019 12.0 47.193832000000434 11.092 49.19646649999925 12.028 55.356438199998735 11.055 48.636764200000066 11.104 49.89798590000068 12.034 50.62719250000066 11.077 48.809162399998954 11.104 48.51233799999917 11.089 52.65670219999974 11.136 51.443553800000274 10.999)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.2512 2 0.2021 9 0.7086 10 0.0691 2 0.2221 2 0.0828 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 11 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 21.353
Average program size in population (points): 22.353
Average percent parens in population: 0.052
Minimum age in population: 258.9730879167925
Maximum age in population: 263.1065055749447
Average age in population: 261.2903113672645
Median age in population: 261.3285810276039
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.56
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.56
Total error diversity:				 0.04
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 179642992
--- Timings ---
Current time: 1529616117785 milliseconds
Total Time:         490.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       259.9 seconds, 53.0%
Fitness Testing:    178.3 seconds, 36.4%
Report:              52.1 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dec} {:instruction float_mod} {:instruction integer_max} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction float_cos} {:instruction float_dup_items} {:instruction in2} {:instruction float_cos} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_add} {:instruction float_sin} {:instruction in2} {:instruction integer_yank} {:instruction in1} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction tag_float_413})
Best program: (integer_dec float_mod integer_max integer_inc integer_dup_items float_cos float_dup_items in2 float_cos in1 integer_fromfloat integer_stackdepth integer_add float_sin in2 integer_yank in1 in2 in1 in1 integer_fromfloat integer_add print_integer float_stackdepth integer_stackdepth tag_float_413)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 1492.9262718999994
Median total errors in population: 290.2267
Error averages by case: (43.199357500000566 11.107 48.78833139999865 11.186 48.83637479999907 11.19 49.25284739999914 11.155 48.95014240000076 11.171 48.122482699999495 11.108 49.13803779999985 12.075 47.81374670000049 11.163 50.751218199999435 10.225 50.06891960000131 11.115 48.817311399999475 11.168 48.5611319999991 11.154 51.343572000001046 11.062 50.89218559999891 11.111 48.78100460000019 11.991 42.29076700000053 11.097 48.160535099998874 12.011 51.71555199999866 11.074 46.94598390000006 11.11 48.00181340000091 12.031 49.748767500000696 11.088 45.96333299999882 11.112 46.38589689999897 11.095 49.584343199999594 11.123 50.07061580000044 11.02)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.2512 4 0.2021 10 0.7086 10 0.0691 5 0.2221 5 0.0828 5 0.5271 5 0.4621 4 0.722 5 0.5056 5 0.3243 10 0.987 2 0.3927 10 0.2994 3 0.1057 5 0.0731 10 0.3525 5 0.9681 4 0.2227 4 0.0718 5 0.4354 5)
Average genome size in population (length): 21.35
Average program size in population (points): 22.35
Average percent parens in population: 0.052
Minimum age in population: 260.5443318018621
Maximum age in population: 264.8980964619709
Average age in population: 262.7683470562859
Median age in population: 262.8089325709137
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.54
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.54
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 180176742
--- Timings ---
Current time: 1529616119983 milliseconds
Total Time:         492.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       261.3 seconds, 53.1%
Fitness Testing:    178.9 seconds, 36.3%
Report:              52.2 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yankdup} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_yankdup in2 float_min in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 8
Size: 9
Percent parens: 0.111
--- Population Statistics ---
Average total errors in population: 1567.4413546999992
Median total errors in population: 290.2267
Error averages by case: (51.38166500000035 11.116 52.128188699998994 11.193 52.05835699999901 11.194 52.90139719999908 11.178 52.17890080000082 11.191 50.122876399999925 11.132 51.09466040000023 12.103 49.92881580000048 11.176 53.03955189999939 10.249 52.80833360000098 11.138 52.065838499999465 11.186 52.53128359999944 11.174 52.73690800000107 11.092 52.36411839999928 11.126 50.622410200000196 12.021 49.5637800000006 11.111 50.15071319999929 12.035 53.68374959999894 11.083 49.756609800000064 11.115 50.38781340000096 12.039 51.2381850000007 11.1 50.00484339999876 11.119 50.174337999998905 11.106 50.89306119999986 11.15 52.46495560000014 11.033)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.7488 2 0.7979 9 0.7086 11 0.0691 2 0.2221 2 0.9172 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 11 0.7006 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 20.99
Average program size in population (points): 21.99
Average percent parens in population: 0.053
Minimum age in population: 261.6411428713932
Maximum age in population: 266.160584455101
Average age in population: 264.2337223227232
Median age in population: 264.248661178262
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.549
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.549
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 180701492
--- Timings ---
Current time: 1529616122351 milliseconds
Total Time:         495.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       262.9 seconds, 53.1%
Fitness Testing:    179.5 seconds, 36.3%
Report:              52.4 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_flush} {:instruction integer_add} {:instruction float_div} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction in1} {:instruction in2} {:instruction float_cos} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup_times integer_add float_dup_times float_flush integer_add float_div integer_flush float_inc integer_dup integer_mod integer_inc float_swap in1 in2 float_cos in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1979.5829033999992
Median total errors in population: 290.2267
Error averages by case: (66.9802075000009 11.161 68.82680889999881 11.267 68.97971299999918 11.266 68.16514619999921 11.228 67.47893920000068 11.243 67.31016249999932 11.17 67.42769379999949 12.122 65.41301920000045 11.24 68.2716656999995 10.334 67.89098960000125 11.203 68.92529649999987 11.245 68.46095849999915 11.237 70.36841400000043 11.125 69.9004671999992 11.175 67.04735690000005 12.026 65.11105300000052 11.156 67.37218329999871 12.034 70.2343303999985 11.116 66.26565020000007 11.17 67.54581630000052 12.057 68.82766750000025 11.155 66.46673659999892 11.171 66.91588399999904 11.163 66.99397899999944 11.215 70.06476440000075 11.059)
Error minima by case: (0.3075 10 0.3809 10 0.9822 10 0.2417 9 0.2512 10 0.2021 11 0.7086 10 0.0691 10 0.2221 9 0.0828 9 0.5271 9 0.4621 10 0.722 9 0.5056 10 0.3243 10 0.987 10 0.3927 10 0.2994 10 0.1057 10 0.0731 11 0.3525 9 0.9681 10 0.2227 9 0.0718 9 0.4354 10)
Average genome size in population (length): 20.694
Average program size in population (points): 21.694
Average percent parens in population: 0.053
Minimum age in population: 262.871429278718
Maximum age in population: 267.7021596534877
Average age in population: 265.7243288501047
Median age in population: 265.798501822817
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.553
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.553
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 181218842
--- Timings ---
Current time: 1529616124578 milliseconds
Total Time:         497.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       264.4 seconds, 53.2%
Fitness Testing:    180.1 seconds, 36.2%
Report:              52.6 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin in2 float_min in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 7
Size: 8
Percent parens: 0.125
--- Population Statistics ---
Average total errors in population: 1867.4155565999993
Median total errors in population: 290.2267
Error averages by case: (59.3391291000008 11.13 62.19726649999868 11.239 62.15489219999911 11.243 63.77750279999917 11.208 63.12277160000073 11.223 60.41465639999947 11.157 65.23636259999971 12.119 63.75933210000046 11.209 67.25121929999946 10.318 66.31274760000137 11.17 62.41994799999951 11.228 63.76735319999906 11.205 66.58046830000099 11.104 66.10358519999889 11.153 64.83159990000019 12.011 59.171376300000546 11.132 60.643506299998926 12.037 65.82555419999866 11.095 62.866475000000065 11.14 60.755827200000844 12.046 65.05039640000065 11.122 63.12387829999888 11.144 60.228484499999 11.126 64.6769841999995 11.178 66.02823940000047 11.039)
Error minima by case: (0.3075 3 0.3809 5 0.0178 4 0.2417 4 0.7488 4 0.7979 9 0.2914 10 0.0691 5 0.2221 5 0.9172 5 0.4729 5 0.4621 4 0.278 4 0.4944 4 0.3243 10 0.013 2 0.3927 11 0.7006 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 20.517
Average program size in population (points): 21.517
Average percent parens in population: 0.054
Minimum age in population: 263.871429278718
Maximum age in population: 269.3877751606112
Average age in population: 267.1709865919374
Median age in population: 267.2313691779853
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.56
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.56
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 181731767
--- Timings ---
Current time: 1529616126761 milliseconds
Total Time:         499.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       265.8 seconds, 53.2%
Fitness Testing:    180.7 seconds, 36.2%
Report:              52.8 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_fromfloat} {:instruction -35} {:instruction float_flush} {:instruction float_dup} {:instruction integer_dup_times} {:instruction integer_max} {:instruction float_shove} {:instruction integer_max} {:instruction float_sin} {:instruction integer_dup_times} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_fromfloat -35 float_flush float_dup integer_dup_times integer_max float_shove integer_max float_sin integer_dup_times in1 in2 float_min in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1952.5659233999995
Median total errors in population: 290.2267
Error averages by case: (65.22057750000093 11.138 67.4199829999988 11.23 67.49147019999906 11.229 67.34977169999914 11.202 67.23166880000078 11.218 66.01190039999963 11.154 66.95403139999972 12.121 66.74498660000027 11.221 68.43410879999942 10.3 68.46116160000116 11.183 67.46213459999969 11.221 67.56735209999928 11.205 67.99066500000079 11.11 67.61903539999912 11.146 66.57754569999996 12.035 64.6789040000006 11.135 65.95583919999882 12.04 68.91124059999862 11.106 65.40652280000006 11.138 65.45035150000092 12.056 66.83329750000048 11.124 65.8501443999988 11.142 65.72748939999894 11.131 67.53119959999972 11.191 65.86354160000046 11.045)
Error minima by case: (0.3075 2 0.3809 2 0.9822 2 0.2417 3 0.7488 3 0.7979 10 0.7086 10 0.0691 3 0.2221 3 0.9172 3 0.5271 2 0.4621 3 0.722 2 0.5056 2 0.3243 10 0.987 2 0.3927 10 0.7006 3 0.1057 2 0.0731 11 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 20.595
Average program size in population (points): 21.595
Average percent parens in population: 0.054
Minimum age in population: 265.7997427704701
Maximum age in population: 270.6842337910706
Average age in population: 268.6078168338578
Median age in population: 268.6532680533302
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.539
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.539
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 182246642
--- Timings ---
Current time: 1529616129107 milliseconds
Total Time:         501.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       267.4 seconds, 53.3%
Fitness Testing:    181.3 seconds, 36.1%
Report:              52.9 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_sub} {:instruction in1} {:instruction in2} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_add} {:instruction float_add} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup})
Best program: (float_dup_times integer_fromfloat float_dup_times float_flush float_sub in1 in2 integer_swap integer_fromfloat float_yank float_add float_add integer_dup_times in2 in1 in1 integer_fromfloat integer_add print_integer integer_dup)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 1310.2427907999993
Median total errors in population: 290.2267
Error averages by case: (39.468047500000274 11.106 41.608378599999426 11.182 41.4481255999994 11.18 42.75678099999928 11.156 42.45438400000051 11.169 40.95646169999994 11.115 40.744203400000224 12.077 40.72164500000043 11.165 43.124883399999554 10.219 42.94800880000065 11.127 41.52969079999953 11.164 42.770828799999705 11.156 41.82101600000069 11.082 41.459196799999674 11.11 40.34568030000018 12.021 39.07966300000032 11.104 40.90146209999966 12.015 44.1251567999992 11.082 39.243512400000064 11.108 40.94447130000057 12.032 40.588120000000586 11.091 39.633237299999195 11.107 39.66901039999934 11.103 41.42921000000004 11.133 39.63461579999995 11.033)
Error minima by case: (0.3075 10 0.3809 10 0.0178 10 0.2417 10 0.7488 10 0.7979 11 0.2914 11 0.0691 11 0.2221 9 0.9172 11 0.4729 10 0.4621 10 0.278 10 0.4944 10 0.3243 10 0.013 9 0.3927 11 0.7006 10 0.1057 10 0.0731 11 0.3525 10 0.0319 10 0.2227 10 0.0718 10 0.4354 10)
Average genome size in population (length): 20.451
Average program size in population (points): 21.451
Average percent parens in population: 0.054
Minimum age in population: 267.1421824271708
Maximum age in population: 271.9082771493314
Average age in population: 270.04857779823
Median age in population: 270.0898984239188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.532
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.532
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 182757967
--- Timings ---
Current time: 1529616131317 milliseconds
Total Time:         503.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       268.8 seconds, 53.4%
Fitness Testing:    181.9 seconds, 36.1%
Report:              53.1 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_dec} {:instruction float_sin} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_flush} {:instruction float_max} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction in1} {:instruction float_tan} {:instruction integer_pop} {:instruction -99.76394449529009} {:instruction float_tan} {:instruction float_min} {:instruction in2} {:instruction float_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction -25})
Best program: (integer_fromfloat integer_dec float_sin float_dup_items float_dec integer_flush float_max integer_dup_times integer_flush in1 float_tan integer_pop -99.76394449529009 float_tan float_min in2 float_mod in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth -25)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 1783.8914584999995
Median total errors in population: 290.2267
Error averages by case: (57.4701641000008 11.142 61.67455219999843 11.245 61.54430879999902 11.25 61.52483799999913 11.202 61.02814280000077 11.221 58.626355199999495 11.147 60.27335929999979 12.105 58.07426410000046 11.228 61.687649799999406 10.308 61.38737000000153 11.169 61.67088619999946 11.228 61.594553199998934 11.214 61.21945250000105 11.111 59.81475779999895 11.155 59.84124100000018 12.016 57.48974660000066 11.133 58.74735109999888 12.02 63.30634129999853 11.092 57.97036610000006 11.148 59.50826570000092 12.043 59.62264900000069 11.128 58.13954619999879 11.153 58.764746899998904 11.137 60.001982399999584 11.184 61.091568200000395 11.038)
Error minima by case: (0.3075 4 0.3809 6 0.0178 5 0.2417 5 0.2512 5 0.2021 9 0.2914 9 0.0691 5 0.2221 6 0.0828 5 0.4729 6 0.4621 5 0.278 4 0.4944 4 0.3243 10 0.013 3 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.0319 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 20.215
Average program size in population (points): 21.215
Average percent parens in population: 0.055
Minimum age in population: 269.1972663479545
Maximum age in population: 273.6047105172893
Average age in population: 271.5825870001524
Median age in population: 271.641138398745
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.568
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.568
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 183263392
--- Timings ---
Current time: 1529616133627 milliseconds
Total Time:         506.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       270.3 seconds, 53.4%
Fitness Testing:    182.5 seconds, 36.0%
Report:              53.3 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_div} {:instruction integer_pop} {:instruction float_dup_times} {:instruction float_yank} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_swap} {:instruction in1} {:instruction in2} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_add} {:instruction float_yank} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_yankdup integer_swap integer_inc integer_pop integer_div integer_pop float_dup_times float_yank integer_dup_times integer_dec integer_dec float_inc integer_swap float_swap in1 in2 integer_swap integer_fromfloat float_yank float_add float_yank integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2021.0125013999996
Median total errors in population: 290.2267
Error averages by case: (66.77997750000102 11.171 70.62090439999842 11.278 70.67376639999897 11.281 70.62100409999908 11.229 69.93370240000081 11.255 69.37699189999938 11.182 69.42010459999946 12.126 68.03408830000032 11.27 70.54199829999935 10.347 70.41074120000144 11.209 70.77471519999975 11.26 70.66548909999902 11.251 71.24414000000081 11.131 70.78787199999876 11.185 68.93589799999995 12.027 66.17909200000067 11.17 69.48290009999852 12.034 73.29322259999823 11.118 66.84006470000006 11.166 70.10793910000069 12.049 69.72432250000043 11.154 66.16121509999878 11.176 67.51921589999888 11.167 70.18433799999956 11.222 70.18179800000082 11.059)
Error minima by case: (0.3075 10 0.3809 10 0.0178 10 0.2417 10 0.7488 10 0.7979 9 0.2914 11 0.0691 10 0.2221 9 0.9172 10 0.4729 9 0.4621 10 0.278 9 0.4944 10 0.3243 10 0.013 9 0.3927 10 0.7006 10 0.1057 10 0.0731 10 0.3525 9 0.0319 10 0.2227 10 0.0718 10 0.4354 9)
Average genome size in population (length): 19.97
Average program size in population (points): 20.97
Average percent parens in population: 0.056
Minimum age in population: 270.6524754558642
Maximum age in population: 275.1303840453586
Average age in population: 273.0543783352098
Median age in population: 273.0963929745679
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.594
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.594
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 183762667
--- Timings ---
Current time: 1529616135901 milliseconds
Total Time:         508.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       271.8 seconds, 53.5%
Fitness Testing:    183.0 seconds, 36.0%
Report:              53.5 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yankdup} {:instruction in2} {:instruction float_max} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction in2} {:instruction float_dec} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_yankdup in2 float_max integer_dup_times integer_flush integer_dup_times in2 float_dec in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1852.2402009999994
Median total errors in population: 290.2267
Error averages by case: (59.4780004000012 11.144 65.01903929999794 11.235 65.04488829999892 11.235 64.60952699999906 11.206 63.91847500000083 11.225 61.299017899999086 11.14 62.76882599999944 12.115 60.352608500000535 11.22 65.40466349999933 10.297 64.51958200000195 11.185 64.98117359999944 11.22 64.90731959999843 11.212 64.23902000000113 11.118 63.904095999998326 11.152 62.6427887000002 12.021 58.4239472000006 11.138 62.03178879999827 12.04 65.90660419999799 11.113 59.851292700000066 11.142 60.99119610000097 12.05 62.92177500000075 11.137 59.568939099998744 11.148 61.54407489999889 11.143 62.26534319999931 11.191 63.770214000000955 11.049)
Error minima by case: (0.3075 10 0.3809 10 0.0178 11 0.2417 10 0.7488 11 0.7979 9 0.2914 11 0.0691 10 0.2221 9 0.9172 11 0.4729 10 0.4621 10 0.278 11 0.4944 10 0.3243 10 0.013 10 0.3927 11 0.7006 10 0.1057 10 0.0731 11 0.3525 11 0.0319 10 0.2227 11 0.0718 10 0.4354 9)
Average genome size in population (length): 20.215
Average program size in population (points): 21.215
Average percent parens in population: 0.056
Minimum age in population: 272.0436998214754
Maximum age in population: 276.5752982105866
Average age in population: 274.5647863778416
Median age in population: 274.6316141748847
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.551
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.551
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 184268092
--- Timings ---
Current time: 1529616138180 milliseconds
Total Time:         510.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       273.2 seconds, 53.5%
Fitness Testing:    183.8 seconds, 36.0%
Report:              53.7 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_dup} {:instruction float_add} {:instruction integer_max} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction float_mult} {:instruction float_min} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction integer_inc} {:instruction float_pop} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction print_float} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (float_flush float_sin integer_fromfloat float_dup_times float_flush float_dup float_add integer_max integer_inc integer_shove integer_yankdup float_mult float_min integer_dup_items integer_sub integer_fromfloat float_shove integer_inc float_pop in1 in2 float_min integer_fromfloat float_mod print_float float_dup_times integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1664.9247327999994
Median total errors in population: 290.2267
Error averages by case: (54.301745000001105 11.103 55.2746178999984 11.186 55.353392599999175 11.186 56.18870529999918 11.164 55.68216160000071 11.17 54.03129109999911 11.13 55.87753459999923 12.097 54.62619390000041 11.169 56.84477509999952 10.236 56.83591320000177 11.129 55.237784299999554 11.172 56.21204889999859 11.164 57.84774200000091 11.073 57.4196015999985 11.116 55.5590859000002 12.019 51.67997500000055 11.094 54.08596429999861 12.031 57.82914479999826 11.07 54.54229270000006 11.114 53.33437480000079 12.043 56.338070000000606 11.084 54.85993909999893 11.114 53.68733369999907 11.096 55.484702199999006 11.135 54.87734320000096 11.018)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.2512 2 0.2021 9 0.7086 11 0.0691 2 0.2221 2 0.0828 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 11 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 20.2
Average program size in population (points): 21.2
Average percent parens in population: 0.056
Minimum age in population: 273.2921256692809
Maximum age in population: 278.1507327840221
Average age in population: 276.0312273573777
Median age in population: 276.0574104030583
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.555
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.555
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 184773192
--- Timings ---
Current time: 1529616140293 milliseconds
Total Time:         512.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       274.5 seconds, 53.5%
Fitness Testing:    184.3 seconds, 35.9%
Report:              53.9 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yankdup} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_yankdup in2 float_min in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 8
Size: 9
Percent parens: 0.111
--- Population Statistics ---
Average total errors in population: 1852.2265136999995
Median total errors in population: 290.2267
Error averages by case: (61.361912500001054 11.139 64.32285609999846 11.231 64.61249939999914 11.229 63.72332149999921 11.191 63.404678400000705 11.206 62.30534059999927 11.144 62.99161419999952 12.104 61.59391750000043 11.213 63.566886699999486 10.286 63.539244400001515 11.162 64.4736216999995 11.205 63.991655299998875 11.197 64.16676900000095 11.103 63.74953899999875 11.148 62.644897100000186 12.02 60.357981000000535 11.127 62.39509379999875 12.021 65.8446357999985 11.091 60.91563150000006 11.143 61.834278200000824 12.051 62.60979250000065 11.122 61.10143559999891 11.149 61.41750989999905 11.134 62.5692713999993 11.177 61.093130600000656 11.046)
Error minima by case: (0.3075 10 0.3809 9 0.9822 10 0.2417 9 0.7488 10 0.7979 9 0.7086 10 0.0691 9 0.2221 8 0.9172 9 0.5271 9 0.4621 9 0.722 9 0.5056 9 0.3243 10 0.987 8 0.3927 10 0.7006 9 0.1057 9 0.0731 11 0.3525 10 0.9681 10 0.2227 10 0.0718 9 0.4354 10)
Average genome size in population (length): 19.996
Average program size in population (points): 20.996
Average percent parens in population: 0.056
Minimum age in population: 274.5974627473604
Maximum age in population: 279.7167662875336
Average age in population: 277.5101104125017
Median age in population: 277.5515826816138
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.554
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.554
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 185273142
--- Timings ---
Current time: 1529616142462 milliseconds
Total Time:         515.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       276.0 seconds, 53.6%
Fitness Testing:    184.9 seconds, 35.9%
Report:              54.1 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yankdup} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sin integer_yankdup in2 float_min in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 8
Size: 9
Percent parens: 0.111
--- Population Statistics ---
Average total errors in population: 1810.6844190999996
Median total errors in population: 290.2267
Error averages by case: (59.74781000000089 11.136 61.974208199998486 11.225 61.88034519999897 11.229 60.815068599999066 11.196 60.50094180000087 11.207 59.43189389999942 11.145 61.069031399999716 12.102 59.99219390000047 11.208 62.79344139999932 10.282 62.69099600000149 11.16 61.934170199999485 11.209 60.92407959999894 11.194 64.38424400000113 11.094 63.97806239999875 11.138 61.01154570000019 12.023 57.52681100000068 11.126 59.758850699998746 12.022 62.423222799998534 11.1 61.48676420000006 11.136 58.660837800000955 12.045 63.073897500000676 11.115 61.55516239999872 11.136 60.00987159999885 11.124 60.45841499999951 11.168 61.043553800000474 11.039)
Error minima by case: (0.3075 9 0.3809 10 0.9822 9 0.2417 9 0.2512 10 0.2021 10 0.7086 10 0.0691 5 0.2221 5 0.0828 5 0.5271 9 0.4621 10 0.722 5 0.5056 5 0.3243 10 0.987 9 0.3927 10 0.2994 9 0.1057 5 0.0731 11 0.3525 5 0.9681 4 0.2227 10 0.0718 5 0.4354 5)
Average genome size in population (length): 19.804
Average program size in population (points): 20.804
Average percent parens in population: 0.056
Minimum age in population: 276.6017703881602
Maximum age in population: 280.9180286691946
Average age in population: 278.9907295277958
Median age in population: 279.0535967220797
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.553
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.553
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 185768342
--- Timings ---
Current time: 1529616144707 milliseconds
Total Time:         517.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       277.5 seconds, 53.6%
Fitness Testing:    185.5 seconds, 35.9%
Report:              54.2 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction tagged_302} {:instruction -40} {:instruction in1} {:instruction float_div} {:instruction integer_pop} {:instruction in2} {:instruction float_min} {:instruction integer_rot} {:instruction float_div} {:instruction float_flush} {:instruction integer_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer tagged_302 -40 in1 float_div integer_pop in2 float_min integer_rot float_div float_flush integer_mod in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1572.2202705999994
Median total errors in population: 290.2267
Error averages by case: (50.87212750000099 11.113 53.111792599998324 11.205 52.76718019999908 11.211 52.31994849999917 11.151 51.51272200000072 11.175 49.71087989999935 11.133 51.44377979999957 12.085 50.195917500000476 11.19 53.698552999999436 10.254 53.20924440000167 11.123 53.00556499999949 11.183 52.167034499998934 11.17 53.60030200000101 11.08 53.166500799998616 11.127 50.95659990000019 12.014 48.89075500000058 11.108 49.89866409999875 12.013 53.95704779999841 11.055 50.10281290000006 11.117 50.64123990000087 12.031 51.89378250000066 11.101 50.27038569999885 11.119 49.962518699998974 11.109 51.34684579999937 11.153 52.47107060000064 11.027)
Error minima by case: (0.3075 3 0.3809 6 0.9822 5 0.2417 4 0.2512 4 0.2021 9 0.7086 10 0.0691 5 0.2221 5 0.0828 5 0.5271 6 0.4621 4 0.722 4 0.5056 4 0.3243 10 0.987 3 0.3927 10 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 19.814
Average program size in population (points): 20.814
Average percent parens in population: 0.057
Minimum age in population: 277.7507847717082
Maximum age in population: 282.5905949513754
Average age in population: 280.4647099837947
Median age in population: 280.4796903446271
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.544
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.544
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 186263842
--- Timings ---
Current time: 1529616146916 milliseconds
Total Time:         519.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       279.0 seconds, 53.7%
Fitness Testing:    186.1 seconds, 35.8%
Report:              54.4 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_143} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_rot} {:instruction integer_yank} {:instruction in1} {:instruction integer_yank} {:instruction in1} {:instruction integer_dup} {:instruction integer_mod} {:instruction float_swap} {:instruction in1} {:instruction float_dec} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_add} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction print_float} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (tag_integer_143 in1 in2 float_min integer_fromfloat in1 float_rot integer_yank in1 integer_yank in1 integer_dup integer_mod float_swap in1 float_dec float_flush integer_fromfloat float_min integer_fromfloat integer_mult float_add integer_yankdup integer_add integer_dup_times float_dup_times in2 integer_yankdup integer_add in1 in2 float_min integer_fromfloat float_mod print_float float_dup_times integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1649.1313685999994
Median total errors in population: 290.2267
Error averages by case: (55.00174250000045 11.132 55.947426899998895 11.208 55.68341039999898 11.208 54.95567209999905 11.19 54.57516160000085 11.198 53.3827057999998 11.14 53.91228300000006 12.098 52.94047030000048 11.195 56.04077399999934 10.266 55.821333600001076 11.156 55.80978429999947 11.202 54.376586799999366 11.187 57.257464000001114 11.097 56.8991071999992 11.141 53.87914010000019 12.024 52.37279300000069 11.111 53.70221539999913 12.024 56.33044419999895 11.096 54.56260980000006 11.128 53.12193620000093 12.043 55.931422500000686 11.115 53.78384339999872 11.131 53.98356069999886 11.118 53.24770219999986 11.164 54.20577860000009 11.034)
Error minima by case: (0.3075 2 0.3809 3 0.0178 2 0.2417 2 0.2512 2 0.2021 10 0.2914 11 0.0691 2 0.2221 2 0.0828 2 0.4729 3 0.4621 2 0.278 2 0.4944 2 0.3243 10 0.013 1 0.3927 11 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.0319 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 19.702
Average program size in population (points): 20.702
Average percent parens in population: 0.057
Minimum age in population: 278.7507847717082
Maximum age in population: 283.7868085871617
Average age in population: 281.9168274123422
Median age in population: 281.9733247888328
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.536
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.536
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 186756492
--- Timings ---
Current time: 1529616149091 milliseconds
Total Time:         521.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       280.3 seconds, 53.7%
Fitness Testing:    186.6 seconds, 35.8%
Report:              54.5 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_flush} {:instruction float_max} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction float_pop} {:instruction integer_stackdepth})
Best program: (float_sin integer_dec float_dec integer_flush float_max integer_dup_times integer_flush integer_dup_times in2 in1 in1 integer_fromfloat integer_add print_integer float_pop integer_stackdepth)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1711.2409250999995
Median total errors in population: 290.2267
Error averages by case: (55.02565250000091 11.139 57.47941109999838 11.227 57.71445239999897 11.23 58.38898019999906 11.199 57.85841760000083 11.216 55.4872940999993 11.147 56.84082599999974 12.111 55.080092200000536 11.207 58.96421819999937 10.288 58.885168000001556 11.161 57.616661699999426 11.207 58.52573839999888 11.204 60.069275000001134 11.107 59.6235633999987 11.145 56.93946440000019 12.013 53.52877400000063 11.124 56.35280269999867 12.026 60.470941199998414 11.096 55.64826270000007 11.139 54.88079010000096 12.048 58.564355000000745 11.123 55.40998489999875 11.143 55.58604829999887 11.131 56.077773999999515 11.17 58.58197700000058 11.039)
Error minima by case: (0.3075 4 0.3809 5 0.9822 5 0.2417 5 0.2512 5 0.2021 10 0.7086 11 0.0691 6 0.2221 6 0.0828 6 0.5271 5 0.4621 5 0.722 6 0.5056 6 0.3243 10 0.987 3 0.3927 10 0.2994 4 0.1057 6 0.0731 11 0.3525 6 0.0319 5 0.2227 5 0.0718 6 0.4354 6)
Average genome size in population (length): 19.567
Average program size in population (points): 20.567
Average percent parens in population: 0.057
Minimum age in population: 280.7911037021503
Maximum age in population: 285.4476103465526
Average age in population: 283.382535030344
Median age in population: 283.4108884657373
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.545
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.545
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 187245792
--- Timings ---
Current time: 1529616151333 milliseconds
Total Time:         523.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       281.7 seconds, 53.8%
Fitness Testing:    187.3 seconds, 35.7%
Report:              54.8 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction tagged_579} {:instruction float_rot} {:instruction integer_dup} {:instruction integer_div} {:instruction integer_shove} {:instruction float_sin} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_min tagged_579 float_rot integer_dup integer_div integer_shove float_sin in2 float_min in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1582.7644444999996
Median total errors in population: 290.2267
Error averages by case: (52.258435000000425 11.138 52.880665099999014 11.228 52.54521459999906 11.226 52.739705299999095 11.19 52.03965920000081 11.206 51.137503699999804 11.143 51.03970020000013 12.098 49.673608500000476 11.201 52.49455189999941 10.275 52.33725080000096 11.15 52.6461094999995 11.206 52.652124699999405 11.189 54.61029800000103 11.097 54.15459039999918 11.145 50.7871401000002 12.015 50.49379300000062 11.136 51.237608099999235 12.027 54.45344419999892 11.091 50.87508130000006 11.142 51.0780093000009 12.047 52.90707000000068 11.111 51.0730028999988 11.148 51.03211529999896 11.124 50.52042019999994 11.165 53.555343200000095 11.044)
Error minima by case: (0.3075 10 0.3809 10 0.9822 10 0.2417 10 0.7488 10 0.7979 11 0.7086 11 0.0691 11 0.2221 9 0.9172 11 0.5271 10 0.4621 10 0.722 10 0.5056 10 0.3243 10 0.987 9 0.3927 11 0.7006 9 0.1057 10 0.0731 11 0.3525 10 0.9681 10 0.2227 10 0.0718 10 0.4354 10)
Average genome size in population (length): 18.989
Average program size in population (points): 19.989
Average percent parens in population: 0.058
Minimum age in population: 282.3196835897917
Maximum age in population: 286.7277167876986
Average age in population: 284.8801062873842
Median age in population: 284.9095315610541
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.522
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.522
Total error diversity:				 0.019
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 187720542
--- Timings ---
Current time: 1529616153640 milliseconds
Total Time:         526.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       283.2 seconds, 53.8%
Fitness Testing:    187.9 seconds, 35.7%
Report:              55.0 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction in1} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_dup_times} {:instruction integer_yankdup} {:instruction in1} {:instruction float_div} {:instruction integer_yankdup} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_sub in1 float_pop float_dup_times integer_max integer_dup_times integer_yankdup in1 float_div integer_yankdup in2 float_min in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1522.3871399999994
Median total errors in population: 290.2267
Error averages by case: (48.66728000000059 11.105 50.562188699998934 11.186 50.33632139999922 11.184 49.894572499999235 11.159 49.46164000000063 11.166 48.47587639999968 11.125 49.46649479999992 12.093 47.87509220000048 11.17 51.14799609999955 10.23 50.9219196000011 11.142 50.48094689999947 11.173 49.81951829999934 11.16 52.10485000000092 11.083 51.72967999999916 11.119 49.055004600000196 12.016 47.46175400000043 11.1 49.02132049999926 12.029 51.2602525999989 11.079 48.89587820000006 11.11 47.43574030000073 12.039 50.9046525000007 11.095 49.15146059999895 11.111 48.68878339999912 11.1 48.556348399999806 11.14 50.06756800000033 11.03)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.2512 2 0.2021 10 0.7086 11 0.0691 2 0.2221 2 0.0828 2 0.5271 3 0.4621 2 0.722 2 0.5056 2 0.3243 10 0.987 1 0.3927 11 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 19.102
Average program size in population (points): 20.102
Average percent parens in population: 0.058
Minimum age in population: 283.8330560578679
Maximum age in population: 288.5422366304376
Average age in population: 286.3638131252034
Median age in population: 286.3703884633277
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.526
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.526
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 188198092
--- Timings ---
Current time: 1529616155989 milliseconds
Total Time:         528.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       284.6 seconds, 53.8%
Fitness Testing:    188.6 seconds, 35.7%
Report:              55.2 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction tagged_302} {:instruction -40} {:instruction in1} {:instruction float_pop} {:instruction in2} {:instruction float_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer tagged_302 -40 in1 float_pop in2 float_mod in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 1630.6060247999992
Median total errors in population: 290.2267
Error averages by case: (52.35396580000095 11.112 55.13426919999843 11.188 55.097420099998956 11.194 54.30017399999905 11.16 54.09667760000086 11.175 53.74726999999933 11.127 53.61318559999963 12.093 52.62545440000047 11.182 54.42799499999934 10.241 54.45094470000157 11.141 55.08285989999947 11.174 54.33613609999885 11.163 55.43424080000111 11.089 55.0848839999987 11.12 53.244241200000175 12.032 52.598621800000686 11.109 53.647348299998654 12.029 55.487125199998395 11.082 53.13438650000007 11.116 53.724451900001 12.04 54.350904300000686 11.098 53.561652099998724 11.118 53.495561299998876 11.108 53.235699599999656 11.154 53.25755540000035 11.038)
Error minima by case: (0.3075 4 0.3809 5 0.0178 6 0.2417 6 0.7488 6 0.7979 11 0.2914 10 0.0691 8 0.2221 7 0.9172 8 0.4729 6 0.4621 6 0.278 7 0.4944 8 0.3243 10 0.013 3 0.3927 10 0.7006 5 0.1057 8 0.0731 9 0.3525 8 0.0319 6 0.2227 6 0.0718 6 0.4354 8)
Average genome size in population (length): 18.826
Average program size in population (points): 19.826
Average percent parens in population: 0.060
Minimum age in population: 285.2602178209364
Maximum age in population: 289.9110676751029
Average age in population: 287.8316262802361
Median age in population: 287.8967028117976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.522
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.522
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 188668742
--- Timings ---
Current time: 1529616158083 milliseconds
Total Time:         530.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       286.0 seconds, 53.9%
Fitness Testing:    189.2 seconds, 35.6%
Report:              55.5 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_div} {:instruction integer_max} {:instruction float_pop} {:instruction integer_dup_times} {:instruction in2} {:instruction integer_pop} {:instruction float_pop} {:instruction float_shove} {:instruction integer_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction in1} {:instruction in2} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction -25})
Best program: (float_sin integer_max float_mod float_mod integer_yankdup integer_dec float_div integer_max float_pop integer_dup_times in2 integer_pop float_pop float_shove integer_dup_times integer_add integer_inc in1 in2 float_min in1 integer_fromfloat integer_add print_integer integer_dup integer_stackdepth -25)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 1912.6711751999994
Median total errors in population: 290.2267
Error averages by case: (64.21374500000098 11.152 66.23914149999844 11.245 66.52046379999905 11.251 65.39828829999914 11.215 65.17817120000076 11.229 64.93233309999924 11.154 64.83919699999953 12.126 63.59019390000048 11.23 65.50721929999942 10.314 65.47591320000157 11.195 66.41067589999953 11.227 65.57442789999888 11.215 66.82207800000087 11.124 66.42653439999876 11.159 64.3962485000002 12.039 63.967858000000604 11.14 64.90311029999869 12.039 67.01483939999841 11.111 64.15644710000007 11.15 63.25576660000087 12.061 65.63460250000065 11.138 64.55716239999883 11.155 64.52722449999897 11.148 64.55941499999938 11.202 66.49411840000066 11.057)
Error minima by case: (0.3075 11 0.3809 9 0.9822 10 0.2417 10 0.7488 10 0.7979 11 0.7086 10 0.0691 10 0.2221 9 0.9172 10 0.5271 9 0.4621 10 0.722 9 0.5056 11 0.3243 10 0.987 9 0.3927 11 0.7006 10 0.1057 10 0.0731 11 0.3525 9 0.9681 10 0.2227 11 0.0718 9 0.4354 10)
Average genome size in population (length): 18.351
Average program size in population (points): 19.351
Average percent parens in population: 0.060
Minimum age in population: 286.9874919611998
Maximum age in population: 291.7004531202885
Average age in population: 289.3517990292988
Median age in population: 289.3875600313194
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.541
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.541
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 189127517
--- Timings ---
Current time: 1529616160199 milliseconds
Total Time:         532.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       287.3 seconds, 53.9%
Fitness Testing:    189.7 seconds, 35.6%
Report:              55.6 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_sub} {:instruction integer_min} {:instruction integer_yank} {:instruction in1} {:instruction float_flush} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_mult float_sub integer_min integer_yank in1 float_flush in2 in1 in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 1708.6737198999997
Median total errors in population: 290.2267
Error averages by case: (56.21789750000084 11.141 59.20337969999854 11.235 59.073463799999054 11.234 57.856838099999166 11.19 57.54867840000073 11.212 56.76113099999947 11.143 55.51894539999975 12.101 55.04467760000048 11.222 58.07910769999944 10.285 57.8325820000013 11.167 59.163675899999475 11.209 58.05565529999909 11.197 58.39458000000098 11.109 57.98998399999893 11.148 55.28830270000019 12.029 55.62991000000061 11.139 57.20811029999886 12.02 59.762234599998614 11.093 55.01139010000006 11.144 56.73076660000089 12.043 57.09166750000063 11.128 55.1215132999989 11.142 56.83311099999895 11.137 56.054917599999506 11.184 55.504199800000336 11.045)
Error minima by case: (0.3075 10 0.3809 10 0.0178 9 0.2417 10 0.7488 10 0.7979 11 0.2914 11 0.0691 11 0.2221 9 0.9172 10 0.4729 10 0.4621 10 0.278 10 0.4944 10 0.3243 10 0.013 9 0.3927 11 0.7006 9 0.1057 10 0.0731 11 0.3525 10 0.0319 10 0.2227 10 0.0718 10 0.4354 9)
Average genome size in population (length): 18.098
Average program size in population (points): 19.098
Average percent parens in population: 0.061
Minimum age in population: 287.9874919611998
Maximum age in population: 292.6428565187569
Average age in population: 290.8034536182321
Median age in population: 290.848552945247
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.529
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.529
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 189579967
--- Timings ---
Current time: 1529616162339 milliseconds
Total Time:         535.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       288.8 seconds, 54.0%
Fitness Testing:    190.3 seconds, 35.6%
Report:              55.8 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction tagged_302} {:instruction -40} {:instruction in1} {:instruction float_pop} {:instruction float_tan} {:instruction integer_dup_times} {:instruction in2} {:instruction in2} {:instruction float_yank} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer tagged_302 -40 in1 float_pop float_tan integer_dup_times in2 in2 float_yank in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 1480.7901744999995
Median total errors in population: 290.2267
Error averages by case: (43.64761340000038 11.106 48.1114493999991 11.174 48.85880269999915 11.182 49.8409801999992 11.141 49.51791520000067 11.154 47.00670579999987 11.113 48.58936900000003 12.08 46.76660850000043 11.147 49.30877399999949 10.219 49.47033360000105 11.114 48.518218499999506 11.157 50.15181419999936 11.147 49.85546860000094 11.072 49.3840924999993 11.109 48.40273450000019 11.999 42.96775230000051 11.088 47.484608099999356 12.008 52.140240599998855 11.051 46.095880600000065 11.108 47.062936200000806 12.033 48.473850000000624 11.093 46.08738239999892 11.114 46.573112899999074 11.104 47.939558599999835 11.123 47.878972700000055 11.019)
Error minima by case: (0.3075 2 0.3809 3 0.9822 2 0.2417 2 0.2512 2 0.2021 9 0.7086 10 0.0691 2 0.2221 2 0.0828 2 0.5271 3 0.4621 2 0.722 2 0.4944 2 0.3243 10 0.987 1 0.3927 11 0.2994 1 0.1057 2 0.0731 10 0.3525 2 0.9681 2 0.2227 2 0.0718 2 0.4354 2)
Average genome size in population (length): 18.258
Average program size in population (points): 19.258
Average percent parens in population: 0.059
Minimum age in population: 289.6832654945178
Maximum age in population: 294.1775949106402
Average age in population: 292.2831641648708
Median age in population: 292.3723996435094
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.508
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.508
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 190036417
--- Timings ---
Current time: 1529616164538 milliseconds
Total Time:         537.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       290.3 seconds, 54.0%
Fitness Testing:    190.8 seconds, 35.5%
Report:              56.0 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dup} {:instruction float_add} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_pop} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_div} {:instruction float_flush} {:instruction integer_mod} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer})
Best program: (float_rot float_dup float_add integer_max integer_flush integer_pop in2 integer_dup_times integer_rot float_div float_flush integer_mod in1 integer_fromfloat integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1728.7342491999996
Median total errors in population: 290.2267
Error averages by case: (54.53997250000088 11.123 58.35342689999826 11.199 58.52532139999905 11.202 60.04336399999911 11.181 59.947896000000796 11.19 56.767078499999286 11.128 58.30049479999933 12.106 56.919954000000494 11.187 60.02332979999943 10.256 60.21933360000183 11.154 58.37489269999946 11.185 60.10213199999857 11.178 59.03851800000105 11.101 58.70064639999853 11.123 58.343707400000206 12.035 53.584845000000584 11.113 57.41610589999847 12.035 61.02785139999816 11.099 55.98734970000007 11.122 55.74388650000091 12.053 58.05224250000071 11.107 55.98662009999878 11.127 56.93866989999895 11.113 57.483348399999116 11.161 56.999261800000625 11.036)
Error minima by case: (0.3075 4 0.3809 6 0.9822 5 0.2417 5 0.2512 5 0.2021 9 0.7086 11 0.0691 5 0.2221 6 0.0828 5 0.5271 6 0.4621 5 0.722 4 0.5056 4 0.3243 9 0.987 3 0.3927 11 0.2994 3 0.1057 4 0.0731 11 0.3525 4 0.9681 4 0.2227 4 0.0718 5 0.4354 3)
Average genome size in population (length): 18.073
Average program size in population (points): 19.073
Average percent parens in population: 0.060
Minimum age in population: 290.6832654945178
Maximum age in population: 296.0269953026412
Average age in population: 293.7845375095404
Median age in population: 293.8169995357976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.506
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.506
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 190488267
--- Timings ---
Current time: 1529616166788 milliseconds
Total Time:         539.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       291.8 seconds, 54.1%
Fitness Testing:    191.3 seconds, 35.5%
Report:              56.1 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 11479.381000000005
Test mean error for best: 5.73969
;;------------------------------
Outputs of best individual on training cases:
Correct output: 90.3075248315  | Program output: 90            
Correct output: 158.3808965757 | Program output: 158           
Correct output: 114.9822216852 | Program output: 114           
Correct output: -73.2417159775 | Program output: -73           
Correct output: -46.7487881284 | Program output: -46           
Correct output: 17.2020579278  | Program output: 18            
Correct output: -26.2914451352 | Program output: -27           
Correct output: -28.0690930702 | Program output: -28           
Correct output: -131.222093374 | Program output: -131          
Correct output: -89.9171675317 | Program output: -89           
Correct output: 142.5271218035 | Program output: 142           
Correct output: -38.4620782332 | Program output: -38           
Correct output: 23.7219549711  | Program output: 23            
Correct output: 27.5055885525  | Program output: 27            
Correct output: -9.6757274332  | Program output: -10           
Correct output: 19.9870160592  | Program output: 19            
Correct output: 19.6073368825  | Program output: 20            
Correct output: -9.7006438671  | Program output: -9            
Correct output: 30.1057413444  | Program output: 30            
Correct output: 72.9269281064  | Program output: 73            
Correct output: 10.3524641447  | Program output: 10            
Correct output: 18.9681003325  | Program output: 18            
Correct output: 67.2227499194  | Program output: 67            
Correct output: -58.0718231545 | Program output: -58           
Correct output: 6.4353776154   | Program output: 6             
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction float_mod} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction in1} {:instruction in1} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction print_integer} {:instruction integer_add} {:instruction print_integer})
Best program: (float_flush float_mod integer_dup_times integer_flush in1 in1 in2 in1 in1 integer_fromfloat integer_add print_integer integer_add print_integer)
Errors: [0.3075 11 0.3809 11 0.9822 11 0.2417 11 0.7488 11 0.7979 11 0.7086 12 0.0691 11 0.2221 10 0.9172 11 0.5271 11 0.4621 11 0.722 11 0.5056 11 0.3243 12 0.987 11 0.3927 12 0.7006 11 0.1057 11 0.0731 12 0.3525 11 0.9681 11 0.2227 11 0.0718 11 0.4354 11]
Total: 290.2267
Mean: 5.804534
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 1662.6041529999995
Median total errors in population: 290.2267
Error averages by case: (54.181050000000845 11.128 56.267188699998755 11.22 56.09249939999923 11.223 56.63467209999931 11.197 55.70315680000059 11.213 53.574088999999425 11.136 54.42382599999968 12.104 53.16867760000048 11.196 56.87099609999955 10.283 56.6161680000013 11.152 57.05509459999949 11.206 56.251048899999184 11.193 57.68402000000093 11.096 57.09011839999894 11.139 53.95411300000019 12.003 51.52488400000038 11.119 53.70435699999902 12.026 56.85054599999874 11.091 54.110398400000065 11.131 52.84408240000069 12.042 55.801775000000646 11.113 54.210939099999 11.135 54.71411529999918 11.124 55.0965585999995 11.159 56.711778600000486 11.039)
Error minima by case: (0.3075 3 0.3809 5 0.9822 4 0.2417 4 0.7488 4 0.7979 10 0.7086 10 0.0691 5 0.2221 5 0.9172 5 0.5271 5 0.4621 4 0.722 5 0.5056 5 0.3243 10 0.987 2 0.3927 10 0.7006 3 0.1057 5 0.0731 10 0.3525 5 0.9681 5 0.2227 4 0.0718 5 0.4354 5)
Average genome size in population (length): 17.735
Average program size in population (points): 18.735
Average percent parens in population: 0.061
Minimum age in population: 291.6832654945178
Maximum age in population: 297.2697148996773
Average age in population: 295.2512292673483
Median age in population: 295.2936273161291
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.533
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.533
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 190931642
--- Timings ---
Current time: 1529616168904 milliseconds
Total Time:         541.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       293.1 seconds, 54.1%
Fitness Testing:    192.0 seconds, 35.5%
Report:              56.3 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
