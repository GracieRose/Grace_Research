Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-65.5270099208604 -89] -154.5270099208604]
Train Case:   1 | Input/Output: [[21.148204943172203 35] 56.1482049431722]
Train Case:   2 | Input/Output: [[31.90606096095877 88] 119.90606096095877]
Train Case:   3 | Input/Output: [[27.535827892179228 23] 50.53582789217923]
Train Case:   4 | Input/Output: [[-38.92315040511174 -58] -96.92315040511174]
Train Case:   5 | Input/Output: [[33.95803469544791 73] 106.9580346954479]
Train Case:   6 | Input/Output: [[44.108496428356574 -47] -2.891503571643426]
Train Case:   7 | Input/Output: [[45.92807930721824 21] 66.92807930721824]
Train Case:   8 | Input/Output: [[-12.737020421269051 43] 30.26297957873095]
Train Case:   9 | Input/Output: [[9.348848883530962 -95] -85.65115111646904]
Train Case:  10 | Input/Output: [[18.50087228696576 7] 25.50087228696576]
Train Case:  11 | Input/Output: [[-11.399106144585616 67] 55.600893855414384]
Train Case:  12 | Input/Output: [[10.415935298763742 73] 83.41593529876374]
Train Case:  13 | Input/Output: [[9.838925934030996 92] 101.838925934031]
Train Case:  14 | Input/Output: [[74.76906698239489 -49] 25.76906698239489]
Train Case:  15 | Input/Output: [[18.520290805766223 -39] -20.479709194233777]
Train Case:  16 | Input/Output: [[-24.1461208419735 -7] -31.1461208419735]
Train Case:  17 | Input/Output: [[60.39755923072164 -47] 13.39755923072164]
Train Case:  18 | Input/Output: [[9.172057352158049 -2] 7.172057352158049]
Train Case:  19 | Input/Output: [[-8.468016292809708 14] 5.531983707190292]
Train Case:  20 | Input/Output: [[30.344409462865002 -33] -2.655590537134998]
Train Case:  21 | Input/Output: [[-27.628206272337536 73] 45.371793727662464]
Train Case:  22 | Input/Output: [[-18.23298678716006 -49] -67.23298678716006]
Train Case:  23 | Input/Output: [[57.290292077060855 -12] 45.290292077060855]
Train Case:  24 | Input/Output: [[-20.141806457514136 -69] -89.14180645751414]
Test Case:   0 | Input/Output: [[58.58655043430397 -57] 1.5865504343039731]
Test Case:   1 | Input/Output: [[-54.42939142665042 -32] -86.42939142665043]
Test Case:   2 | Input/Output: [[-58.22443612217949 45] -13.22443612217949]
Test Case:   3 | Input/Output: [[48.31354997477112 25] 73.31354997477112]
Test Case:   4 | Input/Output: [[18.540949526160546 88] 106.54094952616055]
Test Case:   5 | Input/Output: [[18.211062960612963 5] 23.211062960612963]
Test Case:   6 | Input/Output: [[38.87997551791443 -18] 20.87997551791443]
Test Case:   7 | Input/Output: [[5.318179550592944 -22] -16.681820449407056]
Test Case:   8 | Input/Output: [[5.062377350266573 25] 30.062377350266573]
Test Case:   9 | Input/Output: [[-23.9555284385669 28] 4.044471561433099]
Test Case:  10 | Input/Output: [[-66.20008797392259 33] -33.20008797392259]
Test Case:  11 | Input/Output: [[98.87271783522064 -79] 19.87271783522064]
Test Case:  12 | Input/Output: [[-86.6589105347815 11] -75.6589105347815]
Test Case:  13 | Input/Output: [[-66.78270256168088 -57] -123.78270256168088]
Test Case:  14 | Input/Output: [[57.98142165776878 19] 76.98142165776878]
Test Case:  15 | Input/Output: [[-19.49110970435062 6] -13.49110970435062]
Test Case:  16 | Input/Output: [[50.979868851059905 -81] -30.020131148940095]
Test Case:  17 | Input/Output: [[-43.17745235115895 32] -11.177452351158948]
Test Case:  18 | Input/Output: [[-86.31348910414721 3] -83.31348910414721]
Test Case:  19 | Input/Output: [[-94.42387427399295 -56] -150.42387427399296]
Test Case:  20 | Input/Output: [[34.24583951406004 -57] -22.754160485939963]
Test Case:  21 | Input/Output: [[-87.17813009647502 35] -52.178130096475016]
Test Case:  22 | Input/Output: [[-96.0547547887231 -95] -191.0547547887231]
Test Case:  23 | Input/Output: [[15.998159343548934 38] 53.998159343548934]
Test Case:  24 | Input/Output: [[-79.34080524745333 -99] -178.34080524745332]
Test Case:  25 | Input/Output: [[-94.28351245967173 -89] -183.28351245967173]
Test Case:  26 | Input/Output: [[-6.362869320722737 16] 9.637130679277263]
Test Case:  27 | Input/Output: [[64.68224466098542 -66] -1.3177553390145818]
Test Case:  28 | Input/Output: [[-14.611952882557745 15] 0.3880471174422553]
Test Case:  29 | Input/Output: [[-46.06953660722275 33] -13.069536607222751]
Test Case:  30 | Input/Output: [[43.255305298336964 -77] -33.744694701663036]
Test Case:  31 | Input/Output: [[-35.732521433877665 -13] -48.732521433877665]
Test Case:  32 | Input/Output: [[-27.70168790931264 -75] -102.70168790931264]
Test Case:  33 | Input/Output: [[-86.10045447396921 -93] -179.1004544739692]
Test Case:  34 | Input/Output: [[35.626362941446246 -59] -23.373637058553754]
Test Case:  35 | Input/Output: [[-31.31139291910368 65] 33.68860708089632]
Test Case:  36 | Input/Output: [[60.26508083619282 40] 100.26508083619282]
Test Case:  37 | Input/Output: [[-65.74708923741105 5] -60.747089237411046]
Test Case:  38 | Input/Output: [[-22.115873845448263 -60] -82.11587384544826]
Test Case:  39 | Input/Output: [[-5.219596912198682 89] 83.78040308780132]
Test Case:  40 | Input/Output: [[94.76667389018343 47] 141.76667389018343]
Test Case:  41 | Input/Output: [[63.1010511917184 5] 68.1010511917184]
Test Case:  42 | Input/Output: [[-62.745381308154414 43] -19.745381308154414]
Test Case:  43 | Input/Output: [[38.853181825163915 43] 81.85318182516392]
Test Case:  44 | Input/Output: [[45.842589867275706 -78] -32.157410132724294]
Test Case:  45 | Input/Output: [[-20.640446530606 66] 45.359553469394]
Test Case:  46 | Input/Output: [[97.73505100042016 -52] 45.73505100042016]
Test Case:  47 | Input/Output: [[37.30873914139033 95] 132.30873914139033]
Test Case:  48 | Input/Output: [[48.14774586053531 -50] -1.8522541394646908]
Test Case:  49 | Input/Output: [[-10.307751749346266 80] 69.69224825065373]
Test Case:  50 | Input/Output: [[-27.964407032453778 -43] -70.96440703245378]
Test Case:  51 | Input/Output: [[66.30056031469232 29] 95.30056031469232]
Test Case:  52 | Input/Output: [[-67.85528480555303 99] 31.144715194446974]
Test Case:  53 | Input/Output: [[73.8894832334324 67] 140.8894832334324]
Test Case:  54 | Input/Output: [[34.33518309371155 54] 88.33518309371155]
Test Case:  55 | Input/Output: [[-36.86219141675622 57] 20.137808583243782]
Test Case:  56 | Input/Output: [[-46.4143955075675 -93] -139.4143955075675]
Test Case:  57 | Input/Output: [[7.946106564587566 -79] -71.05389343541243]
Test Case:  58 | Input/Output: [[-75.67239681471484 -87] -162.67239681471483]
Test Case:  59 | Input/Output: [[70.19128582473664 13] 83.19128582473664]
Test Case:  60 | Input/Output: [[25.11365224892714 -51] -25.88634775107286]
Test Case:  61 | Input/Output: [[52.728690368455005 22] 74.728690368455]
Test Case:  62 | Input/Output: [[76.074357886147 39] 115.074357886147]
Test Case:  63 | Input/Output: [[-85.47855613293657 -16] -101.47855613293657]
Test Case:  64 | Input/Output: [[57.8912323379154 -31] 26.891232337915397]
Test Case:  65 | Input/Output: [[97.14948969866163 -80] 17.149489698661625]
Test Case:  66 | Input/Output: [[92.92572437707292 -11] 81.92572437707292]
Test Case:  67 | Input/Output: [[-25.731966143068092 -89] -114.73196614306809]
Test Case:  68 | Input/Output: [[-93.90758437265205 37] -56.90758437265205]
Test Case:  69 | Input/Output: [[50.66503294784718 -92] -41.33496705215282]
Test Case:  70 | Input/Output: [[99.90311861567466 74] 173.90311861567466]
Test Case:  71 | Input/Output: [[-36.94610699133458 -88] -124.94610699133457]
Test Case:  72 | Input/Output: [[82.48353175523269 44] 126.48353175523269]
Test Case:  73 | Input/Output: [[-31.39218228840575 -16] -47.39218228840575]
Test Case:  74 | Input/Output: [[93.19480270238066 -54] 39.194802702380656]
Test Case:  75 | Input/Output: [[-72.14809546650855 56] -16.14809546650855]
Test Case:  76 | Input/Output: [[39.09981487276707 56] 95.09981487276707]
Test Case:  77 | Input/Output: [[-23.8488271689219 -38] -61.8488271689219]
Test Case:  78 | Input/Output: [[65.49935189163702 -41] 24.49935189163702]
Test Case:  79 | Input/Output: [[73.34700284153234 -2] 71.34700284153234]
Test Case:  80 | Input/Output: [[-40.57676728926014 -66] -106.57676728926015]
Test Case:  81 | Input/Output: [[7.3437748319745 -55] -47.6562251680255]
Test Case:  82 | Input/Output: [[-99.89096070509085 -62] -161.89096070509083]
Test Case:  83 | Input/Output: [[33.496430635706815 27] 60.496430635706815]
Test Case:  84 | Input/Output: [[54.47697494897818 91] 145.47697494897818]
Test Case:  85 | Input/Output: [[-69.4929968228464 -29] -98.4929968228464]
Test Case:  86 | Input/Output: [[-89.8427878785727 0] -89.8427878785727]
Test Case:  87 | Input/Output: [[63.57775857439242 -99] -35.42224142560758]
Test Case:  88 | Input/Output: [[83.08612738825295 -57] 26.086127388252947]
Test Case:  89 | Input/Output: [[95.27632995382095 -39] 56.27632995382095]
Test Case:  90 | Input/Output: [[-24.721019729973335 -89] -113.72101972997334]
Test Case:  91 | Input/Output: [[-8.579805471929404 89] 80.4201945280706]
Test Case:  92 | Input/Output: [[53.6794708205185 -34] 19.679470820518503]
Test Case:  93 | Input/Output: [[58.805082731980264 -94] -35.194917268019736]
Test Case:  94 | Input/Output: [[-11.250016363658702 -96] -107.2500163636587]
Test Case:  95 | Input/Output: [[62.32462858224426 86] 148.32462858224426]
Test Case:  96 | Input/Output: [[29.614159025621348 28] 57.61415902562135]
Test Case:  97 | Input/Output: [[-18.79141750880933 46] 27.20858249119067]
Test Case:  98 | Input/Output: [[25.1362358775268 -77] -51.8637641224732]
Test Case:  99 | Input/Output: [[-54.02997631552691 99] 44.97002368447309]
Test Case: 100 | Input/Output: [[43.211015932604624 -28] 15.211015932604624]
Test Case: 101 | Input/Output: [[-91.05908964383539 -33] -124.05908964383539]
Test Case: 102 | Input/Output: [[29.739200724541064 -17] 12.739200724541064]
Test Case: 103 | Input/Output: [[-55.88697684959922 94] 38.11302315040078]
Test Case: 104 | Input/Output: [[-93.68110995846719 -95] -188.68110995846718]
Test Case: 105 | Input/Output: [[-25.334098216059672 -78] -103.33409821605967]
Test Case: 106 | Input/Output: [[59.114363951389976 84] 143.11436395138998]
Test Case: 107 | Input/Output: [[71.60756404281943 -34] 37.60756404281943]
Test Case: 108 | Input/Output: [[40.545742543535 -99] -58.454257456465]
Test Case: 109 | Input/Output: [[21.656085319982196 -21] 0.6560853199821963]
Test Case: 110 | Input/Output: [[-8.27749270265845 94] 85.72250729734155]
Test Case: 111 | Input/Output: [[65.86255814058754 -85] -19.137441859412462]
Test Case: 112 | Input/Output: [[84.56141893981516 73] 157.56141893981516]
Test Case: 113 | Input/Output: [[-4.547856760184345 -89] -93.54785676018435]
Test Case: 114 | Input/Output: [[-92.6044117254766 -90] -182.6044117254766]
Test Case: 115 | Input/Output: [[91.17799789676974 -97] -5.822002103230261]
Test Case: 116 | Input/Output: [[16.12077156433898 -10] 6.12077156433898]
Test Case: 117 | Input/Output: [[40.229338917744286 5] 45.229338917744286]
Test Case: 118 | Input/Output: [[95.38324318052051 -17] 78.38324318052051]
Test Case: 119 | Input/Output: [[-38.974628442728964 72] 33.025371557271036]
Test Case: 120 | Input/Output: [[-78.09150154517243 -55] -133.09150154517243]
Test Case: 121 | Input/Output: [[-75.34343395405519 90] 14.656566045944814]
Test Case: 122 | Input/Output: [[-54.50566679608934 -95] -149.50566679608934]
Test Case: 123 | Input/Output: [[-7.464705966929458 -84] -91.46470596692946]
Test Case: 124 | Input/Output: [[14.105848859643629 5] 19.10584885964363]
Test Case: 125 | Input/Output: [[61.09227578461585 -92] -30.90772421538415]
Test Case: 126 | Input/Output: [[38.099234069482634 -50] -11.900765930517366]
Test Case: 127 | Input/Output: [[-33.369340144150385 47] 13.630659855849615]
Test Case: 128 | Input/Output: [[-13.389916780183441 -15] -28.38991678018344]
Test Case: 129 | Input/Output: [[76.5215619385389 93] 169.5215619385389]
Test Case: 130 | Input/Output: [[28.814831966068 -33] -4.185168033932001]
Test Case: 131 | Input/Output: [[84.63380749204765 -48] 36.63380749204765]
Test Case: 132 | Input/Output: [[-23.224156688831442 -32] -55.22415668883144]
Test Case: 133 | Input/Output: [[-97.22178152525834 18] -79.22178152525834]
Test Case: 134 | Input/Output: [[83.13570264945344 -1] 82.13570264945344]
Test Case: 135 | Input/Output: [[-73.5721152921845 -71] -144.5721152921845]
Test Case: 136 | Input/Output: [[-89.93716530842899 93] 3.0628346915710125]
Test Case: 137 | Input/Output: [[-63.623664179464015 -89] -152.62366417946401]
Test Case: 138 | Input/Output: [[10.58865088449879 60] 70.58865088449879]
Test Case: 139 | Input/Output: [[-5.9343750233311425 29] 23.065624976668857]
Test Case: 140 | Input/Output: [[-45.44737266387986 -38] -83.44737266387986]
Test Case: 141 | Input/Output: [[-39.71544559769566 -7] -46.71544559769566]
Test Case: 142 | Input/Output: [[81.5028971992808 -85] -3.4971028007192047]
Test Case: 143 | Input/Output: [[-39.84539312825215 64] 24.154606871747852]
Test Case: 144 | Input/Output: [[88.37516985082777 59] 147.37516985082777]
Test Case: 145 | Input/Output: [[36.28457456885255 -64] -27.71542543114745]
Test Case: 146 | Input/Output: [[-98.25931817855933 -68] -166.25931817855934]
Test Case: 147 | Input/Output: [[-28.830503691645077 54] 25.169496308354923]
Test Case: 148 | Input/Output: [[81.80106084036936 15] 96.80106084036936]
Test Case: 149 | Input/Output: [[-75.5206575272691 -100] -175.5206575272691]
Test Case: 150 | Input/Output: [[42.18397778904753 -68] -25.816022210952468]
Test Case: 151 | Input/Output: [[-16.19606368086643 -66] -82.19606368086643]
Test Case: 152 | Input/Output: [[69.12901098644468 -44] 25.129010986444683]
Test Case: 153 | Input/Output: [[-28.111617772909952 -95] -123.11161777290995]
Test Case: 154 | Input/Output: [[92.040111914399 -23] 69.040111914399]
Test Case: 155 | Input/Output: [[71.62610231903741 15] 86.62610231903741]
Test Case: 156 | Input/Output: [[31.07376122656268 -87] -55.92623877343732]
Test Case: 157 | Input/Output: [[-54.91794731969355 -11] -65.91794731969355]
Test Case: 158 | Input/Output: [[43.71068414179936 29] 72.71068414179936]
Test Case: 159 | Input/Output: [[7.300596087890156 25] 32.300596087890156]
Test Case: 160 | Input/Output: [[69.56182758847805 44] 113.56182758847805]
Test Case: 161 | Input/Output: [[30.521390567808027 -30] 0.5213905678080266]
Test Case: 162 | Input/Output: [[23.91878880592884 73] 96.91878880592884]
Test Case: 163 | Input/Output: [[34.46090233229464 93] 127.46090233229464]
Test Case: 164 | Input/Output: [[89.75777683620893 -93] -3.242223163791067]
Test Case: 165 | Input/Output: [[-48.87965565731245 -13] -61.87965565731245]
Test Case: 166 | Input/Output: [[86.59055617114356 83] 169.59055617114356]
Test Case: 167 | Input/Output: [[-43.82148881017014 -57] -100.82148881017014]
Test Case: 168 | Input/Output: [[-26.535876175918787 -82] -108.53587617591879]
Test Case: 169 | Input/Output: [[56.8615236504574 5] 61.8615236504574]
Test Case: 170 | Input/Output: [[42.301729250259 -27] 15.301729250259001]
Test Case: 171 | Input/Output: [[-27.329226437924376 -22] -49.329226437924376]
Test Case: 172 | Input/Output: [[49.95029864350653 -60] -10.049701356493472]
Test Case: 173 | Input/Output: [[10.382230961285018 96] 106.38223096128502]
Test Case: 174 | Input/Output: [[-9.270616981909981 -84] -93.27061698190998]
Test Case: 175 | Input/Output: [[-67.71130460215625 38] -29.711304602156247]
Test Case: 176 | Input/Output: [[75.13077101488574 15] 90.13077101488574]
Test Case: 177 | Input/Output: [[81.32920217702784 -60] 21.329202177027838]
Test Case: 178 | Input/Output: [[76.50657724580518 90] 166.50657724580518]
Test Case: 179 | Input/Output: [[-74.7005494319605 65] -9.700549431960496]
Test Case: 180 | Input/Output: [[-52.929734465767694 59] 6.0702655342323055]
Test Case: 181 | Input/Output: [[16.477942523470617 -26] -9.522057476529383]
Test Case: 182 | Input/Output: [[-42.76554994253967 -20] -62.76554994253967]
Test Case: 183 | Input/Output: [[30.570806470339534 64] 94.57080647033953]
Test Case: 184 | Input/Output: [[98.22822334558475 9] 107.22822334558475]
Test Case: 185 | Input/Output: [[-17.56560876108155 24] 6.434391238918451]
Test Case: 186 | Input/Output: [[-64.18518621609934 -89] -153.18518621609934]
Test Case: 187 | Input/Output: [[90.65079818580153 84] 174.65079818580153]
Test Case: 188 | Input/Output: [[-87.7250491723677 28] -59.725049172367704]
Test Case: 189 | Input/Output: [[-84.53507472255588 -8] -92.53507472255588]
Test Case: 190 | Input/Output: [[58.54004712484303 -13] 45.54004712484303]
Test Case: 191 | Input/Output: [[65.29498820873164 -76] -10.705011791268362]
Test Case: 192 | Input/Output: [[0.8152308071716448 -32] -31.184769192828355]
Test Case: 193 | Input/Output: [[-37.93510311213606 16] -21.935103112136062]
Test Case: 194 | Input/Output: [[54.490406880265766 -52] 2.490406880265766]
Test Case: 195 | Input/Output: [[29.31301415348412 -98] -68.68698584651588]
Test Case: 196 | Input/Output: [[-94.33176333452798 -89] -183.33176333452798]
Test Case: 197 | Input/Output: [[52.25237351236831 -45] 7.252373512368308]
Test Case: 198 | Input/Output: [[9.414374992309817 -49] -39.58562500769018]
Test Case: 199 | Input/Output: [[-53.629382277633184 16] -37.629382277633184]
Test Case: 200 | Input/Output: [[-4.098999074709965 78] 73.90100092529003]
Test Case: 201 | Input/Output: [[-22.12239259608711 -4] -26.12239259608711]
Test Case: 202 | Input/Output: [[-10.512254467281409 -86] -96.51225446728141]
Test Case: 203 | Input/Output: [[-58.69054277546735 86] 27.30945722453265]
Test Case: 204 | Input/Output: [[-75.01913795736607 -58] -133.01913795736607]
Test Case: 205 | Input/Output: [[74.57371821971986 71] 145.57371821971986]
Test Case: 206 | Input/Output: [[-32.81455888188232 -76] -108.81455888188232]
Test Case: 207 | Input/Output: [[-11.479898903880965 79] 67.52010109611903]
Test Case: 208 | Input/Output: [[-70.79322880905892 3] -67.79322880905892]
Test Case: 209 | Input/Output: [[-18.886725405439947 40] 21.113274594560053]
Test Case: 210 | Input/Output: [[-66.80515646573946 -50] -116.80515646573946]
Test Case: 211 | Input/Output: [[-34.23470252472268 -49] -83.23470252472268]
Test Case: 212 | Input/Output: [[-32.65809050259149 -92] -124.65809050259149]
Test Case: 213 | Input/Output: [[83.13820101146757 76] 159.13820101146757]
Test Case: 214 | Input/Output: [[-36.21315891776349 25] -11.213158917763486]
Test Case: 215 | Input/Output: [[15.919660558236188 -45] -29.08033944176381]
Test Case: 216 | Input/Output: [[25.752428501770353 -45] -19.247571498229647]
Test Case: 217 | Input/Output: [[-35.37900193904913 -82] -117.37900193904913]
Test Case: 218 | Input/Output: [[81.5273251253852 46] 127.5273251253852]
Test Case: 219 | Input/Output: [[-40.143342576262576 81] 40.856657423737424]
Test Case: 220 | Input/Output: [[-98.61084125902941 44] -54.610841259029414]
Test Case: 221 | Input/Output: [[-50.01951798716868 -70] -120.01951798716868]
Test Case: 222 | Input/Output: [[-73.44687222633628 15] -58.44687222633628]
Test Case: 223 | Input/Output: [[-41.92663999658479 15] -26.92663999658479]
Test Case: 224 | Input/Output: [[32.2375765486716 -80] -47.7624234513284]
Test Case: 225 | Input/Output: [[-1.0773891443071477 -14] -15.077389144307148]
Test Case: 226 | Input/Output: [[-62.094136779400145 -7] -69.09413677940015]
Test Case: 227 | Input/Output: [[29.142670968489142 9] 38.14267096848914]
Test Case: 228 | Input/Output: [[-59.577001517032244 24] -35.577001517032244]
Test Case: 229 | Input/Output: [[61.11601099344378 14] 75.11601099344378]
Test Case: 230 | Input/Output: [[0.11889728405452615 42] 42.118897284054526]
Test Case: 231 | Input/Output: [[81.54221562541144 28] 109.54221562541144]
Test Case: 232 | Input/Output: [[-3.7813702612975675 0] -3.7813702612975675]
Test Case: 233 | Input/Output: [[-12.473357338143785 -20] -32.473357338143785]
Test Case: 234 | Input/Output: [[-60.04082529901304 68] 7.9591747009869565]
Test Case: 235 | Input/Output: [[-76.19976295077826 28] -48.199762950778265]
Test Case: 236 | Input/Output: [[-51.25509377230113 -80] -131.25509377230114]
Test Case: 237 | Input/Output: [[-18.60837631031096 -28] -46.60837631031096]
Test Case: 238 | Input/Output: [[-86.80642679562077 -34] -120.80642679562077]
Test Case: 239 | Input/Output: [[-96.93906833124308 -26] -122.93906833124308]
Test Case: 240 | Input/Output: [[-94.02033412744358 -87] -181.02033412744356]
Test Case: 241 | Input/Output: [[-60.08066597947772 -91] -151.08066597947771]
Test Case: 242 | Input/Output: [[1.6604676988662703 29] 30.66046769886627]
Test Case: 243 | Input/Output: [[73.84104415220264 -45] 28.84104415220264]
Test Case: 244 | Input/Output: [[94.07349780112185 -83] 11.073497801121846]
Test Case: 245 | Input/Output: [[-19.77288410500408 100] 80.22711589499592]
Test Case: 246 | Input/Output: [[48.20376125839147 5] 53.20376125839147]
Test Case: 247 | Input/Output: [[49.25768327617891 24] 73.25768327617891]
Test Case: 248 | Input/Output: [[-96.65516700418222 -25] -121.65516700418222]
Test Case: 249 | Input/Output: [[28.26071177013293 -34] -5.739288229867071]
Test Case: 250 | Input/Output: [[48.437284682643934 54] 102.43728468264393]
Test Case: 251 | Input/Output: [[41.86482693574328 -27] 14.864826935743281]
Test Case: 252 | Input/Output: [[-37.214851981767126 -26] -63.214851981767126]
Test Case: 253 | Input/Output: [[89.74678889803204 -100] -10.253211101967963]
Test Case: 254 | Input/Output: [[-98.89334997582925 32] -66.89334997582925]
Test Case: 255 | Input/Output: [[15.769421479915565 89] 104.76942147991556]
Test Case: 256 | Input/Output: [[94.37030101028563 -4] 90.37030101028563]
Test Case: 257 | Input/Output: [[-8.404334372390892 -66] -74.40433437239089]
Test Case: 258 | Input/Output: [[36.35946683827382 -78] -41.64053316172618]
Test Case: 259 | Input/Output: [[-76.13162476369955 -21] -97.13162476369955]
Test Case: 260 | Input/Output: [[42.69003226558311 -56] -13.309967734416887]
Test Case: 261 | Input/Output: [[76.19947745546526 -13] 63.19947745546526]
Test Case: 262 | Input/Output: [[5.192647674399268 -77] -71.80735232560073]
Test Case: 263 | Input/Output: [[-86.23143656718875 -57] -143.23143656718875]
Test Case: 264 | Input/Output: [[46.98556920580933 2] 48.98556920580933]
Test Case: 265 | Input/Output: [[38.19782481512709 81] 119.19782481512709]
Test Case: 266 | Input/Output: [[3.3053295365573945 -23] -19.694670463442606]
Test Case: 267 | Input/Output: [[21.61601117271171 -37] -15.383988827288292]
Test Case: 268 | Input/Output: [[26.999633493334542 26] 52.99963349333454]
Test Case: 269 | Input/Output: [[32.53047155078738 27] 59.53047155078738]
Test Case: 270 | Input/Output: [[90.77961983270714 -27] 63.77961983270714]
Test Case: 271 | Input/Output: [[-44.85627440409328 -43] -87.85627440409328]
Test Case: 272 | Input/Output: [[-49.68143086203276 -89] -138.68143086203276]
Test Case: 273 | Input/Output: [[-0.6856919876612153 16] 15.314308012338785]
Test Case: 274 | Input/Output: [[51.33458978453166 90] 141.33458978453166]
Test Case: 275 | Input/Output: [[1.6763034683610698 -31] -29.32369653163893]
Test Case: 276 | Input/Output: [[43.4664729751768 54] 97.4664729751768]
Test Case: 277 | Input/Output: [[75.1461130809426 -97] -21.853886919057402]
Test Case: 278 | Input/Output: [[-75.16974503554572 -24] -99.16974503554572]
Test Case: 279 | Input/Output: [[-95.176093261321 42] -53.176093261321]
Test Case: 280 | Input/Output: [[75.01380732993732 31] 106.01380732993732]
Test Case: 281 | Input/Output: [[54.45903465045001 8] 62.45903465045001]
Test Case: 282 | Input/Output: [[-94.31983006126916 -15] -109.31983006126916]
Test Case: 283 | Input/Output: [[-9.398205250447546 68] 58.601794749552454]
Test Case: 284 | Input/Output: [[-57.59823736930476 -66] -123.59823736930477]
Test Case: 285 | Input/Output: [[-93.3557260706459 0] -93.3557260706459]
Test Case: 286 | Input/Output: [[-46.838087173481945 -72] -118.83808717348194]
Test Case: 287 | Input/Output: [[12.840570208629003 -68] -55.159429791371]
Test Case: 288 | Input/Output: [[-28.67808104506335 -52] -80.67808104506335]
Test Case: 289 | Input/Output: [[-22.774579453083945 -16] -38.774579453083945]
Test Case: 290 | Input/Output: [[-63.50177731083204 52] -11.50177731083204]
Test Case: 291 | Input/Output: [[79.93662856745217 46] 125.93662856745217]
Test Case: 292 | Input/Output: [[-69.32029326336631 94] 24.67970673663369]
Test Case: 293 | Input/Output: [[40.45137073316582 59] 99.45137073316582]
Test Case: 294 | Input/Output: [[87.20932127651628 -62] 25.209321276516278]
Test Case: 295 | Input/Output: [[87.20580331582465 -87] 0.20580331582465305]
Test Case: 296 | Input/Output: [[4.3699667228951995 84] 88.3699667228952]
Test Case: 297 | Input/Output: [[5.842945050982124 95] 100.84294505098212]
Test Case: 298 | Input/Output: [[93.65924416541063 -60] 33.65924416541063]
Test Case: 299 | Input/Output: [[87.56098481034928 -58] 29.560984810349282]
Test Case: 300 | Input/Output: [[-47.19586374398486 14] -33.19586374398486]
Test Case: 301 | Input/Output: [[15.597786935639263 39] 54.59778693563926]
Test Case: 302 | Input/Output: [[34.16388995401263 38] 72.16388995401263]
Test Case: 303 | Input/Output: [[29.464004874539853 -33] -3.535995125460147]
Test Case: 304 | Input/Output: [[98.12324451291025 34] 132.12324451291025]
Test Case: 305 | Input/Output: [[40.51774229244086 -6] 34.51774229244086]
Test Case: 306 | Input/Output: [[-87.23579752719873 52] -35.23579752719873]
Test Case: 307 | Input/Output: [[50.59489661432289 -61] -10.405103385677108]
Test Case: 308 | Input/Output: [[83.11888271701696 23] 106.11888271701696]
Test Case: 309 | Input/Output: [[-64.8443803799256 -4] -68.8443803799256]
Test Case: 310 | Input/Output: [[7.377506387541757 -76] -68.62249361245824]
Test Case: 311 | Input/Output: [[-44.85884235818289 36] -8.85884235818289]
Test Case: 312 | Input/Output: [[-71.40438543859256 12] -59.404385438592556]
Test Case: 313 | Input/Output: [[-32.74790585695217 55] 22.252094143047827]
Test Case: 314 | Input/Output: [[29.65601724523961 15] 44.65601724523961]
Test Case: 315 | Input/Output: [[3.5995207597969454 -1] 2.5995207597969454]
Test Case: 316 | Input/Output: [[6.727143539541174 70] 76.72714353954117]
Test Case: 317 | Input/Output: [[58.603804707146224 -53] 5.6038047071462245]
Test Case: 318 | Input/Output: [[31.878892690039862 86] 117.87889269003986]
Test Case: 319 | Input/Output: [[76.14707704610305 -25] 51.14707704610305]
Test Case: 320 | Input/Output: [[47.96281213178932 -47] 0.9628121317893203]
Test Case: 321 | Input/Output: [[-42.96922842441819 25] -17.96922842441819]
Test Case: 322 | Input/Output: [[79.81399841268998 37] 116.81399841268998]
Test Case: 323 | Input/Output: [[-68.26863347241408 42] -26.26863347241408]
Test Case: 324 | Input/Output: [[41.266145598007796 -54] -12.733854401992204]
Test Case: 325 | Input/Output: [[-74.59134986651014 4] -70.59134986651014]
Test Case: 326 | Input/Output: [[-74.7184139557791 -90] -164.7184139557791]
Test Case: 327 | Input/Output: [[-35.49432183780495 -1] -36.49432183780495]
Test Case: 328 | Input/Output: [[56.67669184911236 23] 79.67669184911236]
Test Case: 329 | Input/Output: [[-61.37599861279004 99] 37.62400138720996]
Test Case: 330 | Input/Output: [[-17.060846593662006 -20] -37.060846593662006]
Test Case: 331 | Input/Output: [[66.7341006403787 92] 158.7341006403787]
Test Case: 332 | Input/Output: [[26.893618801123978 -58] -31.106381198876022]
Test Case: 333 | Input/Output: [[-17.08987106416788 86] 68.91012893583212]
Test Case: 334 | Input/Output: [[-56.1821426635091 -89] -145.1821426635091]
Test Case: 335 | Input/Output: [[18.970772789437532 76] 94.97077278943753]
Test Case: 336 | Input/Output: [[24.46086959394364 63] 87.46086959394364]
Test Case: 337 | Input/Output: [[67.58424914994654 64] 131.58424914994654]
Test Case: 338 | Input/Output: [[-97.46514425157855 -100] -197.46514425157855]
Test Case: 339 | Input/Output: [[71.44521636738784 -72] -0.5547836326121569]
Test Case: 340 | Input/Output: [[-0.593299784959811 -58] -58.59329978495981]
Test Case: 341 | Input/Output: [[-54.83373145951538 77] 22.166268540484623]
Test Case: 342 | Input/Output: [[3.565392364062035 12] 15.565392364062035]
Test Case: 343 | Input/Output: [[-49.851325795174105 98] 48.148674204825895]
Test Case: 344 | Input/Output: [[67.16569499028958 95] 162.16569499028958]
Test Case: 345 | Input/Output: [[-65.53397004963713 59] -6.533970049637134]
Test Case: 346 | Input/Output: [[80.01477496346595 67] 147.01477496346595]
Test Case: 347 | Input/Output: [[-29.973911991265112 5] -24.973911991265112]
Test Case: 348 | Input/Output: [[2.138047710758542 79] 81.13804771075854]
Test Case: 349 | Input/Output: [[-37.41143683447392 -50] -87.41143683447392]
Test Case: 350 | Input/Output: [[-31.6834292117464 -55] -86.6834292117464]
Test Case: 351 | Input/Output: [[-63.45434099353591 -17] -80.45434099353591]
Test Case: 352 | Input/Output: [[70.10352364719773 -9] 61.10352364719773]
Test Case: 353 | Input/Output: [[63.47170881182902 -35] 28.471708811829018]
Test Case: 354 | Input/Output: [[46.32349285495221 86] 132.3234928549522]
Test Case: 355 | Input/Output: [[-87.01543911745964 -98] -185.01543911745964]
Test Case: 356 | Input/Output: [[34.92107106574656 53] 87.92107106574656]
Test Case: 357 | Input/Output: [[35.194676377877414 97] 132.1946763778774]
Test Case: 358 | Input/Output: [[-77.3602690047479 -99] -176.36026900474792]
Test Case: 359 | Input/Output: [[-7.193561608480792 45] 37.80643839151921]
Test Case: 360 | Input/Output: [[24.876494445972213 -13] 11.876494445972213]
Test Case: 361 | Input/Output: [[3.1783277475535385 80] 83.17832774755354]
Test Case: 362 | Input/Output: [[-29.5483701729339 -47] -76.5483701729339]
Test Case: 363 | Input/Output: [[70.08073243377584 78] 148.08073243377584]
Test Case: 364 | Input/Output: [[49.487816036844066 50] 99.48781603684407]
Test Case: 365 | Input/Output: [[40.97001572846895 95] 135.97001572846895]
Test Case: 366 | Input/Output: [[12.92624204443213 -58] -45.07375795556787]
Test Case: 367 | Input/Output: [[82.11417424003548 -38] 44.11417424003548]
Test Case: 368 | Input/Output: [[17.68923444908914 18] 35.68923444908914]
Test Case: 369 | Input/Output: [[-8.015044686254114 73] 64.98495531374589]
Test Case: 370 | Input/Output: [[-97.87288178996434 -29] -126.87288178996434]
Test Case: 371 | Input/Output: [[91.45150407429367 17] 108.45150407429367]
Test Case: 372 | Input/Output: [[-71.76396666263966 -71] -142.76396666263966]
Test Case: 373 | Input/Output: [[-52.654968471429584 63] 10.345031528570416]
Test Case: 374 | Input/Output: [[-95.53936356221932 -21] -116.53936356221932]
Test Case: 375 | Input/Output: [[1.1921149491835479 25] 26.192114949183548]
Test Case: 376 | Input/Output: [[57.87531787050335 -17] 40.87531787050335]
Test Case: 377 | Input/Output: [[2.669272898241502 -49] -46.3307271017585]
Test Case: 378 | Input/Output: [[-15.61909147316041 -33] -48.61909147316041]
Test Case: 379 | Input/Output: [[-81.8085062058558 99] 17.191493794144193]
Test Case: 380 | Input/Output: [[-44.09050417856386 31] -13.090504178563862]
Test Case: 381 | Input/Output: [[58.82274016469739 -93] -34.17725983530261]
Test Case: 382 | Input/Output: [[73.77210957594323 -84] -10.227890424056767]
Test Case: 383 | Input/Output: [[-35.67308440470059 -75] -110.67308440470059]
Test Case: 384 | Input/Output: [[15.234128267336501 91] 106.2341282673365]
Test Case: 385 | Input/Output: [[59.480708199081874 -64] -4.5192918009181255]
Test Case: 386 | Input/Output: [[-40.23577891758412 15] -25.23577891758412]
Test Case: 387 | Input/Output: [[-71.95593823252707 -3] -74.95593823252707]
Test Case: 388 | Input/Output: [[-94.10990416260358 86] -8.109904162603584]
Test Case: 389 | Input/Output: [[-42.63047191890499 -33] -75.63047191890499]
Test Case: 390 | Input/Output: [[41.05445477805523 -92] -50.94554522194477]
Test Case: 391 | Input/Output: [[-94.19688435496872 -79] -173.19688435496872]
Test Case: 392 | Input/Output: [[-42.34361112201681 -37] -79.34361112201681]
Test Case: 393 | Input/Output: [[81.49000659085351 -83] -1.5099934091464888]
Test Case: 394 | Input/Output: [[-20.802075963103036 -63] -83.80207596310304]
Test Case: 395 | Input/Output: [[61.872317444034366 94] 155.87231744403437]
Test Case: 396 | Input/Output: [[-35.93593637514414 -88] -123.93593637514414]
Test Case: 397 | Input/Output: [[-24.264717093503222 -48] -72.26471709350322]
Test Case: 398 | Input/Output: [[26.68094040735454 -4] 22.68094040735454]
Test Case: 399 | Input/Output: [[-69.84137725553705 -98] -167.84137725553705]
Test Case: 400 | Input/Output: [[81.46183544875112 37] 118.46183544875112]
Test Case: 401 | Input/Output: [[-23.063664128265614 89] 65.93633587173439]
Test Case: 402 | Input/Output: [[-96.32805450263642 -97] -193.3280545026364]
Test Case: 403 | Input/Output: [[42.19048801500486 4] 46.19048801500486]
Test Case: 404 | Input/Output: [[50.133260600327674 -18] 32.133260600327674]
Test Case: 405 | Input/Output: [[71.32160120204873 61] 132.32160120204873]
Test Case: 406 | Input/Output: [[-43.171670136222005 100] 56.828329863777995]
Test Case: 407 | Input/Output: [[-76.26890959388373 -57] -133.26890959388373]
Test Case: 408 | Input/Output: [[20.47943791109752 79] 99.47943791109752]
Test Case: 409 | Input/Output: [[17.009548628866582 -23] -5.9904513711334175]
Test Case: 410 | Input/Output: [[-54.03310381711519 -45] -99.03310381711519]
Test Case: 411 | Input/Output: [[-85.86755226094508 27] -58.867552260945075]
Test Case: 412 | Input/Output: [[14.998395604060818 71] 85.99839560406082]
Test Case: 413 | Input/Output: [[-93.9134115373798 -48] -141.9134115373798]
Test Case: 414 | Input/Output: [[27.937336405622545 -41] -13.062663594377455]
Test Case: 415 | Input/Output: [[31.68762303305681 50] 81.68762303305681]
Test Case: 416 | Input/Output: [[35.13611165832589 29] 64.13611165832589]
Test Case: 417 | Input/Output: [[3.2692206295669877 24] 27.269220629566988]
Test Case: 418 | Input/Output: [[-34.03294122069252 -87] -121.03294122069252]
Test Case: 419 | Input/Output: [[-50.94643366325244 -70] -120.94643366325244]
Test Case: 420 | Input/Output: [[13.106398094345835 90] 103.10639809434583]
Test Case: 421 | Input/Output: [[-6.659044839883464 -89] -95.65904483988346]
Test Case: 422 | Input/Output: [[-7.0425472255867305 -86] -93.04254722558673]
Test Case: 423 | Input/Output: [[68.64356486761477 3] 71.64356486761477]
Test Case: 424 | Input/Output: [[70.1611343555353 -16] 54.161134355535296]
Test Case: 425 | Input/Output: [[65.03500162517867 23] 88.03500162517867]
Test Case: 426 | Input/Output: [[57.592467002247474 -98] -40.407532997752526]
Test Case: 427 | Input/Output: [[-90.13915723313781 -57] -147.1391572331378]
Test Case: 428 | Input/Output: [[50.42871298290558 99] 149.42871298290558]
Test Case: 429 | Input/Output: [[-25.584335923838466 63] 37.415664076161534]
Test Case: 430 | Input/Output: [[-52.99574594305434 -48] -100.99574594305435]
Test Case: 431 | Input/Output: [[-58.413257227099514 34] -24.413257227099514]
Test Case: 432 | Input/Output: [[21.455145174762322 -34] -12.544854825237678]
Test Case: 433 | Input/Output: [[23.959549130669018 -9] 14.959549130669018]
Test Case: 434 | Input/Output: [[93.4902254514653 61] 154.4902254514653]
Test Case: 435 | Input/Output: [[21.20992155659573 -29] -7.790078443404269]
Test Case: 436 | Input/Output: [[-42.7241251422289 94] 51.2758748577711]
Test Case: 437 | Input/Output: [[39.999621605151816 17] 56.999621605151816]
Test Case: 438 | Input/Output: [[-0.17508855615258767 -6] -6.175088556152588]
Test Case: 439 | Input/Output: [[60.46073806419216 90] 150.46073806419216]
Test Case: 440 | Input/Output: [[-68.83397800673904 -32] -100.83397800673904]
Test Case: 441 | Input/Output: [[-69.80948881045745 66] -3.8094888104574522]
Test Case: 442 | Input/Output: [[-72.331998507241 26] -46.331998507240996]
Test Case: 443 | Input/Output: [[-59.57311272865016 72] 12.426887271349841]
Test Case: 444 | Input/Output: [[-81.90592728751518 2] -79.90592728751518]
Test Case: 445 | Input/Output: [[-68.46374080279342 -2] -70.46374080279342]
Test Case: 446 | Input/Output: [[89.98641270700648 -11] 78.98641270700648]
Test Case: 447 | Input/Output: [[-94.61590007708097 33] -61.615900077080966]
Test Case: 448 | Input/Output: [[-17.50139308158161 -88] -105.50139308158161]
Test Case: 449 | Input/Output: [[40.44563253066755 17] 57.44563253066755]
Test Case: 450 | Input/Output: [[3.0103811214263345 26] 29.010381121426335]
Test Case: 451 | Input/Output: [[7.624204018995044 -72] -64.37579598100496]
Test Case: 452 | Input/Output: [[-22.963890051992593 -84] -106.96389005199259]
Test Case: 453 | Input/Output: [[-77.18620216314018 -45] -122.18620216314018]
Test Case: 454 | Input/Output: [[-58.802223568727975 64] 5.197776431272025]
Test Case: 455 | Input/Output: [[-81.635432600618 13] -68.635432600618]
Test Case: 456 | Input/Output: [[-80.97395390989686 -1] -81.97395390989686]
Test Case: 457 | Input/Output: [[49.39406248298454 53] 102.39406248298454]
Test Case: 458 | Input/Output: [[-93.74643174776259 60] -33.746431747762585]
Test Case: 459 | Input/Output: [[-86.59174147199498 21] -65.59174147199498]
Test Case: 460 | Input/Output: [[23.418209765246758 -57] -33.58179023475324]
Test Case: 461 | Input/Output: [[-9.76063522474928 -69] -78.76063522474928]
Test Case: 462 | Input/Output: [[-9.444347258430327 -95] -104.44434725843033]
Test Case: 463 | Input/Output: [[9.178301793348353 43] 52.17830179334835]
Test Case: 464 | Input/Output: [[41.770104858458325 25] 66.77010485845832]
Test Case: 465 | Input/Output: [[53.70402383018532 -49] 4.704023830185321]
Test Case: 466 | Input/Output: [[99.36158626162137 -86] 13.361586261621369]
Test Case: 467 | Input/Output: [[-95.50999890588183 69] -26.50999890588183]
Test Case: 468 | Input/Output: [[53.24497939872981 -58] -4.755020601270189]
Test Case: 469 | Input/Output: [[72.71775489037597 39] 111.71775489037597]
Test Case: 470 | Input/Output: [[-66.80380350104312 21] -45.80380350104312]
Test Case: 471 | Input/Output: [[-43.78034428566573 9] -34.78034428566573]
Test Case: 472 | Input/Output: [[-26.92490643622459 -95] -121.92490643622459]
Test Case: 473 | Input/Output: [[83.30490186974055 -44] 39.30490186974055]
Test Case: 474 | Input/Output: [[-47.20223628253264 -70] -117.20223628253264]
Test Case: 475 | Input/Output: [[-2.019670282642821 -61] -63.01967028264282]
Test Case: 476 | Input/Output: [[-91.57166700986468 71] -20.571667009864683]
Test Case: 477 | Input/Output: [[6.280628802903891 -51] -44.71937119709611]
Test Case: 478 | Input/Output: [[-95.62284161392935 34] -61.62284161392935]
Test Case: 479 | Input/Output: [[-99.74275779500981 -75] -174.74275779500982]
Test Case: 480 | Input/Output: [[-85.32263305427517 -9] -94.32263305427517]
Test Case: 481 | Input/Output: [[-5.894248400594179 52] 46.10575159940582]
Test Case: 482 | Input/Output: [[-60.44305485782735 14] -46.44305485782735]
Test Case: 483 | Input/Output: [[79.91402315025752 45] 124.91402315025752]
Test Case: 484 | Input/Output: [[-30.107874779322046 -69] -99.10787477932205]
Test Case: 485 | Input/Output: [[99.47039755061721 30] 129.4703975506172]
Test Case: 486 | Input/Output: [[-77.75332073913253 -75] -152.75332073913253]
Test Case: 487 | Input/Output: [[0.375101190318631 8] 8.375101190318631]
Test Case: 488 | Input/Output: [[43.39622131968804 19] 62.39622131968804]
Test Case: 489 | Input/Output: [[-96.05172280146247 -25] -121.05172280146247]
Test Case: 490 | Input/Output: [[60.90839604577931 -70] -9.091603954220687]
Test Case: 491 | Input/Output: [[-8.511111147199756 -47] -55.511111147199756]
Test Case: 492 | Input/Output: [[-75.98021060888458 -69] -144.9802106088846]
Test Case: 493 | Input/Output: [[56.42198757536906 -5] 51.42198757536906]
Test Case: 494 | Input/Output: [[-70.01197509758123 39] -31.011975097581228]
Test Case: 495 | Input/Output: [[4.497699148430684 -50] -45.502300851569316]
Test Case: 496 | Input/Output: [[59.78939763759786 30] 89.78939763759786]
Test Case: 497 | Input/Output: [[-78.6406904279151 -44] -122.6406904279151]
Test Case: 498 | Input/Output: [[-90.63517235072726 62] -28.63517235072726]
Test Case: 499 | Input/Output: [[65.85986331205999 -40] 25.859863312059986]
Test Case: 500 | Input/Output: [[-55.15102075950187 32] -23.15102075950187]
Test Case: 501 | Input/Output: [[-55.79023313431719 33] -22.79023313431719]
Test Case: 502 | Input/Output: [[75.89159307695931 7] 82.89159307695931]
Test Case: 503 | Input/Output: [[91.2469452648821 -59] 32.2469452648821]
Test Case: 504 | Input/Output: [[31.168151543898347 62] 93.16815154389835]
Test Case: 505 | Input/Output: [[1.6431104240031544 -18] -16.356889575996846]
Test Case: 506 | Input/Output: [[82.45327528367156 -71] 11.453275283671559]
Test Case: 507 | Input/Output: [[-22.201233564148424 -92] -114.20123356414842]
Test Case: 508 | Input/Output: [[62.634744404095926 0] 62.634744404095926]
Test Case: 509 | Input/Output: [[-26.164228129388746 25] -1.1642281293887464]
Test Case: 510 | Input/Output: [[-78.84615128961656 -60] -138.84615128961656]
Test Case: 511 | Input/Output: [[87.46820177248418 87] 174.46820177248418]
Test Case: 512 | Input/Output: [[5.980367866429106 65] 70.9803678664291]
Test Case: 513 | Input/Output: [[-46.32916334509336 -17] -63.32916334509336]
Test Case: 514 | Input/Output: [[18.735306958595288 -31] -12.264693041404712]
Test Case: 515 | Input/Output: [[5.0892425167984925 -61] -55.91075748320151]
Test Case: 516 | Input/Output: [[86.12261369128177 -16] 70.12261369128177]
Test Case: 517 | Input/Output: [[9.53227726281473 84] 93.53227726281473]
Test Case: 518 | Input/Output: [[39.012520878604164 98] 137.01252087860416]
Test Case: 519 | Input/Output: [[-39.88332134811399 75] 35.11667865188601]
Test Case: 520 | Input/Output: [[51.85858676140248 -10] 41.85858676140248]
Test Case: 521 | Input/Output: [[14.501719834960383 -69] -54.49828016503962]
Test Case: 522 | Input/Output: [[-7.917419865006181 -21] -28.91741986500618]
Test Case: 523 | Input/Output: [[17.489506936624522 -49] -31.510493063375478]
Test Case: 524 | Input/Output: [[41.399775392647 42] 83.399775392647]
Test Case: 525 | Input/Output: [[-7.7636780610426115 -20] -27.76367806104261]
Test Case: 526 | Input/Output: [[-53.29342377527262 -49] -102.29342377527263]
Test Case: 527 | Input/Output: [[45.24488450984455 74] 119.24488450984455]
Test Case: 528 | Input/Output: [[-48.59324766604014 -64] -112.59324766604014]
Test Case: 529 | Input/Output: [[-40.59581032910473 -43] -83.59581032910472]
Test Case: 530 | Input/Output: [[46.84111478226106 38] 84.84111478226106]
Test Case: 531 | Input/Output: [[87.6689986231815 53] 140.6689986231815]
Test Case: 532 | Input/Output: [[61.03142726996589 -12] 49.03142726996589]
Test Case: 533 | Input/Output: [[69.32245963758973 -49] 20.32245963758973]
Test Case: 534 | Input/Output: [[-2.5200753828342357 5] 2.4799246171657643]
Test Case: 535 | Input/Output: [[69.21482706316854 -3] 66.21482706316854]
Test Case: 536 | Input/Output: [[-76.31886993602863 -40] -116.31886993602863]
Test Case: 537 | Input/Output: [[93.65446632096544 65] 158.65446632096544]
Test Case: 538 | Input/Output: [[-29.72997101346604 -72] -101.72997101346604]
Test Case: 539 | Input/Output: [[87.19917218624823 20] 107.19917218624823]
Test Case: 540 | Input/Output: [[-27.71881434860539 -75] -102.71881434860539]
Test Case: 541 | Input/Output: [[12.233883754823523 65] 77.23388375482352]
Test Case: 542 | Input/Output: [[17.096317821493884 61] 78.09631782149388]
Test Case: 543 | Input/Output: [[-84.15584283050448 47] -37.15584283050448]
Test Case: 544 | Input/Output: [[92.71896042337545 -94] -1.2810395766245506]
Test Case: 545 | Input/Output: [[-71.1902725061878 13] -58.190272506187796]
Test Case: 546 | Input/Output: [[-88.42814075662173 79] -9.42814075662173]
Test Case: 547 | Input/Output: [[39.90765411459017 74] 113.90765411459017]
Test Case: 548 | Input/Output: [[10.190188888470871 -63] -52.80981111152913]
Test Case: 549 | Input/Output: [[-38.83419659785257 12] -26.834196597852568]
Test Case: 550 | Input/Output: [[5.938679815860866 62] 67.93867981586087]
Test Case: 551 | Input/Output: [[-37.520035669736785 -54] -91.52003566973679]
Test Case: 552 | Input/Output: [[8.254441012998655 93] 101.25444101299865]
Test Case: 553 | Input/Output: [[-11.453437339468735 -27] -38.453437339468735]
Test Case: 554 | Input/Output: [[-38.138844927741914 -81] -119.13884492774191]
Test Case: 555 | Input/Output: [[-95.50133701908985 62] -33.501337019089846]
Test Case: 556 | Input/Output: [[-40.99487380931808 77] 36.00512619068192]
Test Case: 557 | Input/Output: [[-37.462996994366634 -29] -66.46299699436663]
Test Case: 558 | Input/Output: [[38.779939738607595 -9] 29.779939738607595]
Test Case: 559 | Input/Output: [[-30.088004549800544 57] 26.911995450199456]
Test Case: 560 | Input/Output: [[14.778100120248652 85] 99.77810012024865]
Test Case: 561 | Input/Output: [[-39.579343703827895 -15] -54.579343703827895]
Test Case: 562 | Input/Output: [[-33.12890084316649 -36] -69.12890084316649]
Test Case: 563 | Input/Output: [[-75.95738371884977 38] -37.95738371884977]
Test Case: 564 | Input/Output: [[13.310736559919363 65] 78.31073655991936]
Test Case: 565 | Input/Output: [[41.703233404157004 -28] 13.703233404157004]
Test Case: 566 | Input/Output: [[-92.40487888812052 -22] -114.40487888812052]
Test Case: 567 | Input/Output: [[-69.34672807471864 -74] -143.34672807471864]
Test Case: 568 | Input/Output: [[-75.98536517618078 -18] -93.98536517618078]
Test Case: 569 | Input/Output: [[-51.91539878137097 -78] -129.91539878137098]
Test Case: 570 | Input/Output: [[99.06940579041174 -40] 59.069405790411736]
Test Case: 571 | Input/Output: [[-17.36442640937996 -55] -72.36442640937996]
Test Case: 572 | Input/Output: [[43.66207976968545 -22] 21.662079769685448]
Test Case: 573 | Input/Output: [[-48.32656228386916 98] 49.67343771613084]
Test Case: 574 | Input/Output: [[50.72648597590171 -17] 33.72648597590171]
Test Case: 575 | Input/Output: [[6.489120844252412 70] 76.48912084425241]
Test Case: 576 | Input/Output: [[-52.50872940967566 85] 32.49127059032434]
Test Case: 577 | Input/Output: [[21.165709558215866 28] 49.165709558215866]
Test Case: 578 | Input/Output: [[0.19978302888101496 97] 97.19978302888101]
Test Case: 579 | Input/Output: [[-43.54022335683116 5] -38.54022335683116]
Test Case: 580 | Input/Output: [[59.49434578085234 -65] -5.505654219147658]
Test Case: 581 | Input/Output: [[-77.08721993651827 40] -37.08721993651827]
Test Case: 582 | Input/Output: [[90.53654863193461 -75] 15.536548631934608]
Test Case: 583 | Input/Output: [[-41.80814859529536 -43] -84.80814859529536]
Test Case: 584 | Input/Output: [[60.11131165832592 76] 136.11131165832592]
Test Case: 585 | Input/Output: [[47.95758870634975 -40] 7.957588706349753]
Test Case: 586 | Input/Output: [[64.72636559004044 0] 64.72636559004044]
Test Case: 587 | Input/Output: [[78.0622373613275 68] 146.0622373613275]
Test Case: 588 | Input/Output: [[-99.2600668699346 -34] -133.2600668699346]
Test Case: 589 | Input/Output: [[53.44668228496246 92] 145.44668228496246]
Test Case: 590 | Input/Output: [[-68.53126862377184 31] -37.53126862377184]
Test Case: 591 | Input/Output: [[-43.08359235398769 45] 1.9164076460123098]
Test Case: 592 | Input/Output: [[-66.57046168269869 -68] -134.5704616826987]
Test Case: 593 | Input/Output: [[59.57677700328844 25] 84.57677700328844]
Test Case: 594 | Input/Output: [[17.310301838986092 -84] -66.68969816101391]
Test Case: 595 | Input/Output: [[58.93060373680257 93] 151.93060373680257]
Test Case: 596 | Input/Output: [[76.46793009435794 -70] 6.467930094357939]
Test Case: 597 | Input/Output: [[-33.096144720955834 -37] -70.09614472095583]
Test Case: 598 | Input/Output: [[-23.2782460392108 -35] -58.2782460392108]
Test Case: 599 | Input/Output: [[54.6239360301083 -32] 22.623936030108297]
Test Case: 600 | Input/Output: [[-96.05039055051783 98] 1.9496094494821676]
Test Case: 601 | Input/Output: [[11.005392893828486 -38] -26.994607106171514]
Test Case: 602 | Input/Output: [[-33.47912730262847 38] 4.52087269737153]
Test Case: 603 | Input/Output: [[17.342116830837483 66] 83.34211683083748]
Test Case: 604 | Input/Output: [[33.37875118528996 8] 41.37875118528996]
Test Case: 605 | Input/Output: [[27.465698468547757 -38] -10.534301531452243]
Test Case: 606 | Input/Output: [[-56.550246852568065 -37] -93.55024685256807]
Test Case: 607 | Input/Output: [[2.1456392350724514 99] 101.14563923507245]
Test Case: 608 | Input/Output: [[1.4787583031598928 76] 77.47875830315989]
Test Case: 609 | Input/Output: [[81.9742268790695 -86] -4.025773120930495]
Test Case: 610 | Input/Output: [[58.088261253046284 -72] -13.911738746953716]
Test Case: 611 | Input/Output: [[-22.811794178095184 -19] -41.811794178095184]
Test Case: 612 | Input/Output: [[63.9734185601763 44] 107.9734185601763]
Test Case: 613 | Input/Output: [[-68.24428991652081 18] -50.24428991652081]
Test Case: 614 | Input/Output: [[-61.284961136954564 -99] -160.28496113695456]
Test Case: 615 | Input/Output: [[-72.15194707742494 10] -62.151947077424936]
Test Case: 616 | Input/Output: [[61.49743119739537 -27] 34.49743119739537]
Test Case: 617 | Input/Output: [[28.853296471997538 -25] 3.853296471997538]
Test Case: 618 | Input/Output: [[34.76446377867467 85] 119.76446377867467]
Test Case: 619 | Input/Output: [[70.49947489709194 -56] 14.499474897091943]
Test Case: 620 | Input/Output: [[-64.01977667991486 13] -51.019776679914855]
Test Case: 621 | Input/Output: [[15.157238005459007 66] 81.157238005459]
Test Case: 622 | Input/Output: [[-67.70456783701111 13] -54.70456783701111]
Test Case: 623 | Input/Output: [[-33.29203445162936 20] -13.292034451629362]
Test Case: 624 | Input/Output: [[39.38586927679489 -33] 6.385869276794892]
Test Case: 625 | Input/Output: [[78.82244915640547 -39] 39.82244915640547]
Test Case: 626 | Input/Output: [[-9.486625756485338 -20] -29.48662575648534]
Test Case: 627 | Input/Output: [[-37.27676599830745 59] 21.723234001692553]
Test Case: 628 | Input/Output: [[87.13503883849916 26] 113.13503883849916]
Test Case: 629 | Input/Output: [[78.82986460304957 -19] 59.82986460304957]
Test Case: 630 | Input/Output: [[-26.08600468782936 -54] -80.08600468782936]
Test Case: 631 | Input/Output: [[57.69405972692317 -70] -12.305940273076828]
Test Case: 632 | Input/Output: [[25.792738573506966 -38] -12.207261426493034]
Test Case: 633 | Input/Output: [[-60.32020536256157 -2] -62.32020536256157]
Test Case: 634 | Input/Output: [[4.880571441602143 68] 72.88057144160214]
Test Case: 635 | Input/Output: [[45.430857502609854 -36] 9.430857502609854]
Test Case: 636 | Input/Output: [[36.96509023376382 -24] 12.965090233763817]
Test Case: 637 | Input/Output: [[40.3959755653612 -24] 16.395975565361198]
Test Case: 638 | Input/Output: [[28.20807028320735 -97] -68.79192971679265]
Test Case: 639 | Input/Output: [[86.3523412045507 39] 125.3523412045507]
Test Case: 640 | Input/Output: [[0.19151158063831986 42] 42.19151158063832]
Test Case: 641 | Input/Output: [[20.42828238978325 -28] -7.571717610216751]
Test Case: 642 | Input/Output: [[86.1230764386658 -65] 21.123076438665805]
Test Case: 643 | Input/Output: [[-88.94680309817198 -38] -126.94680309817198]
Test Case: 644 | Input/Output: [[80.50398581081885 -59] 21.503985810818847]
Test Case: 645 | Input/Output: [[28.440031576475377 -31] -2.559968423524623]
Test Case: 646 | Input/Output: [[30.198035912305073 -26] 4.198035912305073]
Test Case: 647 | Input/Output: [[-68.54665828290756 -78] -146.54665828290757]
Test Case: 648 | Input/Output: [[71.21887841902742 72] 143.21887841902742]
Test Case: 649 | Input/Output: [[-67.23267561922162 -28] -95.23267561922162]
Test Case: 650 | Input/Output: [[-2.966949677954318 -73] -75.96694967795432]
Test Case: 651 | Input/Output: [[98.64490363648548 -46] 52.64490363648548]
Test Case: 652 | Input/Output: [[69.79438520778626 99] 168.79438520778626]
Test Case: 653 | Input/Output: [[78.16587858440732 -73] 5.165878584407324]
Test Case: 654 | Input/Output: [[-59.66374684324647 83] 23.33625315675353]
Test Case: 655 | Input/Output: [[-70.50562540849143 -8] -78.50562540849143]
Test Case: 656 | Input/Output: [[-99.07337296307396 -21] -120.07337296307396]
Test Case: 657 | Input/Output: [[-82.56391361454165 -60] -142.56391361454166]
Test Case: 658 | Input/Output: [[-58.09503390594961 50] -8.095033905949613]
Test Case: 659 | Input/Output: [[9.770936397609262 62] 71.77093639760926]
Test Case: 660 | Input/Output: [[62.8805852520461 -89] -26.119414747953897]
Test Case: 661 | Input/Output: [[-3.189508549062907 -51] -54.18950854906291]
Test Case: 662 | Input/Output: [[-76.19708348447169 -19] -95.19708348447169]
Test Case: 663 | Input/Output: [[-13.129692627816581 79] 65.87030737218342]
Test Case: 664 | Input/Output: [[-80.18295011998218 -6] -86.18295011998218]
Test Case: 665 | Input/Output: [[63.916861994680886 83] 146.9168619946809]
Test Case: 666 | Input/Output: [[-14.243768012829733 55] 40.75623198717027]
Test Case: 667 | Input/Output: [[3.966640213991383 -70] -66.03335978600862]
Test Case: 668 | Input/Output: [[-24.108704191909823 -93] -117.10870419190982]
Test Case: 669 | Input/Output: [[-58.27671060949613 55] -3.276710609496128]
Test Case: 670 | Input/Output: [[-60.90742288466504 -40] -100.90742288466504]
Test Case: 671 | Input/Output: [[3.1017215667566944 91] 94.1017215667567]
Test Case: 672 | Input/Output: [[19.374259676982362 1] 20.374259676982362]
Test Case: 673 | Input/Output: [[83.02792840560963 -56] 27.02792840560963]
Test Case: 674 | Input/Output: [[83.31173426410237 48] 131.31173426410237]
Test Case: 675 | Input/Output: [[-25.633637400299648 86] 60.36636259970035]
Test Case: 676 | Input/Output: [[-82.78746914899028 28] -54.78746914899028]
Test Case: 677 | Input/Output: [[-38.758961317598526 -63] -101.75896131759853]
Test Case: 678 | Input/Output: [[-50.51835789512433 -82] -132.51835789512432]
Test Case: 679 | Input/Output: [[43.1944188913011 -54] -10.805581108698902]
Test Case: 680 | Input/Output: [[33.8877761716287 -80] -46.1122238283713]
Test Case: 681 | Input/Output: [[73.09747345595133 -49] 24.09747345595133]
Test Case: 682 | Input/Output: [[-88.39228204056369 37] -51.392282040563686]
Test Case: 683 | Input/Output: [[-85.99559536465134 55] -30.995595364651336]
Test Case: 684 | Input/Output: [[64.87216552245167 -51] 13.872165522451667]
Test Case: 685 | Input/Output: [[-4.890317927393113 -47] -51.89031792739311]
Test Case: 686 | Input/Output: [[46.66755517882663 84] 130.66755517882663]
Test Case: 687 | Input/Output: [[-39.152937398091446 69] 29.847062601908554]
Test Case: 688 | Input/Output: [[-65.47127534958707 -33] -98.47127534958707]
Test Case: 689 | Input/Output: [[-62.38919748653689 -88] -150.3891974865369]
Test Case: 690 | Input/Output: [[40.425126457443696 -32] 8.425126457443696]
Test Case: 691 | Input/Output: [[69.5116616448824 -94] -24.488338355117605]
Test Case: 692 | Input/Output: [[-96.40943122891845 71] -25.40943122891845]
Test Case: 693 | Input/Output: [[83.4497381033554 11] 94.4497381033554]
Test Case: 694 | Input/Output: [[-46.26464004198627 -93] -139.26464004198627]
Test Case: 695 | Input/Output: [[53.142919713457246 32] 85.14291971345725]
Test Case: 696 | Input/Output: [[-16.500809411169072 -10] -26.500809411169072]
Test Case: 697 | Input/Output: [[83.388617451062 -69] 14.388617451062004]
Test Case: 698 | Input/Output: [[54.71020702605074 -51] 3.710207026050739]
Test Case: 699 | Input/Output: [[48.82375470234658 72] 120.82375470234658]
Test Case: 700 | Input/Output: [[96.10395882717299 -59] 37.10395882717299]
Test Case: 701 | Input/Output: [[-18.404990401755896 -33] -51.404990401755896]
Test Case: 702 | Input/Output: [[14.316286479753742 30] 44.31628647975374]
Test Case: 703 | Input/Output: [[-42.90811144508591 -90] -132.90811144508592]
Test Case: 704 | Input/Output: [[87.52418635955718 99] 186.52418635955718]
Test Case: 705 | Input/Output: [[-54.31220297927241 62] 7.6877970207275865]
Test Case: 706 | Input/Output: [[-80.05223275387057 8] -72.05223275387057]
Test Case: 707 | Input/Output: [[87.59033292061414 25] 112.59033292061414]
Test Case: 708 | Input/Output: [[55.75943926496231 -22] 33.75943926496231]
Test Case: 709 | Input/Output: [[79.24330409552024 59] 138.24330409552024]
Test Case: 710 | Input/Output: [[39.84296487646236 35] 74.84296487646236]
Test Case: 711 | Input/Output: [[24.241922912938335 51] 75.24192291293834]
Test Case: 712 | Input/Output: [[-91.24113981736603 74] -17.241139817366033]
Test Case: 713 | Input/Output: [[-71.79223565806099 11] -60.79223565806099]
Test Case: 714 | Input/Output: [[30.990430982158614 81] 111.99043098215861]
Test Case: 715 | Input/Output: [[27.04198723083428 -64] -36.95801276916572]
Test Case: 716 | Input/Output: [[-39.007400505652036 84] 44.992599494347964]
Test Case: 717 | Input/Output: [[78.97094300933011 -61] 17.970943009330114]
Test Case: 718 | Input/Output: [[85.74915417418308 79] 164.74915417418308]
Test Case: 719 | Input/Output: [[51.81282539220368 -56] -4.187174607796322]
Test Case: 720 | Input/Output: [[99.99796940718741 -46] 53.99796940718741]
Test Case: 721 | Input/Output: [[0.02804647798109272 -26] -25.971953522018907]
Test Case: 722 | Input/Output: [[11.295794582966522 76] 87.29579458296652]
Test Case: 723 | Input/Output: [[69.69228949599932 -37] 32.69228949599932]
Test Case: 724 | Input/Output: [[46.74931537204591 -78] -31.250684627954087]
Test Case: 725 | Input/Output: [[-99.66502199085431 36] -63.665021990854314]
Test Case: 726 | Input/Output: [[-71.51812277596368 93] 21.481877224036324]
Test Case: 727 | Input/Output: [[53.74620088807208 95] 148.74620088807208]
Test Case: 728 | Input/Output: [[37.000793883120764 -40] -2.999206116879236]
Test Case: 729 | Input/Output: [[94.8412723084256 34] 128.8412723084256]
Test Case: 730 | Input/Output: [[50.17187206646389 -64] -13.82812793353611]
Test Case: 731 | Input/Output: [[80.97001091466177 56] 136.97001091466177]
Test Case: 732 | Input/Output: [[-5.057695292495467 -56] -61.05769529249547]
Test Case: 733 | Input/Output: [[-5.869981437197168 -11] -16.86998143719717]
Test Case: 734 | Input/Output: [[14.362355185838595 78] 92.3623551858386]
Test Case: 735 | Input/Output: [[-45.2486273507974 -59] -104.24862735079739]
Test Case: 736 | Input/Output: [[-83.27555365655724 36] -47.275553656557236]
Test Case: 737 | Input/Output: [[-61.53437763432985 10] -51.53437763432985]
Test Case: 738 | Input/Output: [[49.86350249732493 -32] 17.86350249732493]
Test Case: 739 | Input/Output: [[93.08438945880201 -12] 81.08438945880201]
Test Case: 740 | Input/Output: [[5.416140543201294 -87] -81.5838594567987]
Test Case: 741 | Input/Output: [[-19.995881184534397 -10] -29.995881184534397]
Test Case: 742 | Input/Output: [[-80.40935218367792 69] -11.409352183677925]
Test Case: 743 | Input/Output: [[67.9048925105084 -21] 46.904892510508404]
Test Case: 744 | Input/Output: [[-90.93243872539163 -57] -147.93243872539165]
Test Case: 745 | Input/Output: [[15.52715362141484 75] 90.52715362141484]
Test Case: 746 | Input/Output: [[31.43755486686058 -22] 9.43755486686058]
Test Case: 747 | Input/Output: [[87.4535110657686 -25] 62.453511065768595]
Test Case: 748 | Input/Output: [[-62.57136852518643 -21] -83.57136852518643]
Test Case: 749 | Input/Output: [[-3.0096994041555405 30] 26.99030059584446]
Test Case: 750 | Input/Output: [[44.062684707909455 -50] -5.937315292090545]
Test Case: 751 | Input/Output: [[-72.65906977497576 71] -1.6590697749757624]
Test Case: 752 | Input/Output: [[4.305106228354006 69] 73.305106228354]
Test Case: 753 | Input/Output: [[-61.96814404424171 89] 27.03185595575829]
Test Case: 754 | Input/Output: [[-44.323471350245484 -93] -137.32347135024548]
Test Case: 755 | Input/Output: [[-12.297135221860714 42] 29.702864778139286]
Test Case: 756 | Input/Output: [[53.145448567424665 -26] 27.145448567424665]
Test Case: 757 | Input/Output: [[3.4568210129089323 -88] -84.54317898709107]
Test Case: 758 | Input/Output: [[-67.6788102375562 -5] -72.6788102375562]
Test Case: 759 | Input/Output: [[-37.543845845733 68] 30.456154154266997]
Test Case: 760 | Input/Output: [[-61.253781554001364 -1] -62.253781554001364]
Test Case: 761 | Input/Output: [[48.08601067600358 44] 92.08601067600358]
Test Case: 762 | Input/Output: [[37.32477128301866 -91] -53.67522871698134]
Test Case: 763 | Input/Output: [[-20.93489171267315 -10] -30.93489171267315]
Test Case: 764 | Input/Output: [[-46.605446814765706 -54] -100.60544681476571]
Test Case: 765 | Input/Output: [[-11.351555850910785 -18] -29.351555850910785]
Test Case: 766 | Input/Output: [[-15.871478715067624 23] 7.128521284932376]
Test Case: 767 | Input/Output: [[-27.395002511774607 -41] -68.3950025117746]
Test Case: 768 | Input/Output: [[40.10835656183869 -53] -12.89164343816131]
Test Case: 769 | Input/Output: [[63.54429357862139 3] 66.54429357862139]
Test Case: 770 | Input/Output: [[15.03151363930779 89] 104.03151363930779]
Test Case: 771 | Input/Output: [[-12.353034807232646 -32] -44.353034807232646]
Test Case: 772 | Input/Output: [[67.70978330690309 65] 132.7097833069031]
Test Case: 773 | Input/Output: [[22.063266720684965 -32] -9.936733279315035]
Test Case: 774 | Input/Output: [[73.83643162665675 -6] 67.83643162665675]
Test Case: 775 | Input/Output: [[5.747292256829354 -2] 3.747292256829354]
Test Case: 776 | Input/Output: [[-66.12249733351274 -24] -90.12249733351274]
Test Case: 777 | Input/Output: [[17.37899621793275 -64] -46.62100378206725]
Test Case: 778 | Input/Output: [[-78.53105749797959 -29] -107.53105749797959]
Test Case: 779 | Input/Output: [[-1.631638428503777 -98] -99.63163842850378]
Test Case: 780 | Input/Output: [[-26.585192821100748 -55] -81.58519282110075]
Test Case: 781 | Input/Output: [[7.124027213988526 -18] -10.875972786011474]
Test Case: 782 | Input/Output: [[-62.53089028618311 68] 5.469109713816891]
Test Case: 783 | Input/Output: [[73.53423981638417 -79] -5.465760183615828]
Test Case: 784 | Input/Output: [[-49.441354134184266 -9] -58.441354134184266]
Test Case: 785 | Input/Output: [[-68.23140724273486 71] 2.7685927572651394]
Test Case: 786 | Input/Output: [[-12.89095726802303 96] 83.10904273197697]
Test Case: 787 | Input/Output: [[-90.46724538915416 77] -13.467245389154158]
Test Case: 788 | Input/Output: [[58.80291071238068 -98] -39.19708928761932]
Test Case: 789 | Input/Output: [[55.70858907813292 -63] -7.291410921867083]
Test Case: 790 | Input/Output: [[-1.6732244151183409 -34] -35.67322441511834]
Test Case: 791 | Input/Output: [[93.2456343026468 26] 119.2456343026468]
Test Case: 792 | Input/Output: [[-74.41122461841891 99] 24.588775381581087]
Test Case: 793 | Input/Output: [[32.7942193579149 60] 92.7942193579149]
Test Case: 794 | Input/Output: [[-26.708729613957203 75] 48.2912703860428]
Test Case: 795 | Input/Output: [[-73.94610193852009 4] -69.94610193852009]
Test Case: 796 | Input/Output: [[8.453656272893966 -55] -46.546343727106034]
Test Case: 797 | Input/Output: [[-22.807993047623285 92] 69.19200695237672]
Test Case: 798 | Input/Output: [[3.4729909965576837 -67] -63.527009003442316]
Test Case: 799 | Input/Output: [[-46.99310876481589 -65] -111.99310876481589]
Test Case: 800 | Input/Output: [[-42.03716430234466 39] -3.0371643023446566]
Test Case: 801 | Input/Output: [[2.3622133482026584 -35] -32.63778665179734]
Test Case: 802 | Input/Output: [[-12.851712450677553 -54] -66.85171245067755]
Test Case: 803 | Input/Output: [[-54.098372837479715 -13] -67.09837283747972]
Test Case: 804 | Input/Output: [[-1.4187224929359274 -14] -15.418722492935927]
Test Case: 805 | Input/Output: [[-60.46393134346091 -30] -90.4639313434609]
Test Case: 806 | Input/Output: [[-50.62247983904171 -50] -100.62247983904172]
Test Case: 807 | Input/Output: [[30.972329106536392 54] 84.97232910653639]
Test Case: 808 | Input/Output: [[-13.122201020182473 82] 68.87779897981753]
Test Case: 809 | Input/Output: [[41.519199795094266 79] 120.51919979509427]
Test Case: 810 | Input/Output: [[-57.68494603859753 0] -57.68494603859753]
Test Case: 811 | Input/Output: [[-59.917084608489546 -20] -79.91708460848955]
Test Case: 812 | Input/Output: [[-13.943682335431618 -87] -100.94368233543162]
Test Case: 813 | Input/Output: [[45.42457745101916 10] 55.42457745101916]
Test Case: 814 | Input/Output: [[-37.29863918069276 -64] -101.29863918069276]
Test Case: 815 | Input/Output: [[-63.74809910454524 13] -50.74809910454524]
Test Case: 816 | Input/Output: [[10.98798492391873 -22] -11.01201507608127]
Test Case: 817 | Input/Output: [[-95.37944167204537 -47] -142.37944167204537]
Test Case: 818 | Input/Output: [[-67.16498010678747 -40] -107.16498010678747]
Test Case: 819 | Input/Output: [[25.9480883408105 50] 75.9480883408105]
Test Case: 820 | Input/Output: [[-90.84280977764345 -4] -94.84280977764345]
Test Case: 821 | Input/Output: [[28.887078849492696 22] 50.887078849492696]
Test Case: 822 | Input/Output: [[78.18412428262548 96] 174.18412428262548]
Test Case: 823 | Input/Output: [[-7.141811074535013 -50] -57.14181107453501]
Test Case: 824 | Input/Output: [[4.834601555969684 -51] -46.165398444030316]
Test Case: 825 | Input/Output: [[-47.38787858760796 100] 52.61212141239204]
Test Case: 826 | Input/Output: [[-91.33692797228868 13] -78.33692797228868]
Test Case: 827 | Input/Output: [[87.05944239550664 57] 144.05944239550664]
Test Case: 828 | Input/Output: [[-56.74403744170162 -99] -155.7440374417016]
Test Case: 829 | Input/Output: [[-48.846567929187245 50] 1.1534320708127552]
Test Case: 830 | Input/Output: [[-84.02670595286881 -42] -126.02670595286881]
Test Case: 831 | Input/Output: [[51.882742415534835 14] 65.88274241553484]
Test Case: 832 | Input/Output: [[26.63141585654651 -48] -21.36858414345349]
Test Case: 833 | Input/Output: [[-35.310617867960985 92] 56.689382132039015]
Test Case: 834 | Input/Output: [[93.93582002829555 -50] 43.93582002829555]
Test Case: 835 | Input/Output: [[-13.565817495867321 -7] -20.56581749586732]
Test Case: 836 | Input/Output: [[77.95320214750902 17] 94.95320214750902]
Test Case: 837 | Input/Output: [[35.88327686184223 51] 86.88327686184223]
Test Case: 838 | Input/Output: [[-24.418713072737376 48] 23.581286927262624]
Test Case: 839 | Input/Output: [[-84.2301069355313 57] -27.230106935531296]
Test Case: 840 | Input/Output: [[-45.31660323858833 34] -11.316603238588328]
Test Case: 841 | Input/Output: [[12.661019424391 19] 31.661019424391]
Test Case: 842 | Input/Output: [[-85.13124376417831 -45] -130.1312437641783]
Test Case: 843 | Input/Output: [[46.83011224009371 69] 115.83011224009371]
Test Case: 844 | Input/Output: [[-54.564788965867095 32] -22.564788965867095]
Test Case: 845 | Input/Output: [[-78.57796572900912 40] -38.57796572900912]
Test Case: 846 | Input/Output: [[-55.890601596935355 -31] -86.89060159693535]
Test Case: 847 | Input/Output: [[-35.6237379705135 60] 24.376262029486497]
Test Case: 848 | Input/Output: [[-76.59981905770576 82] 5.4001809422942415]
Test Case: 849 | Input/Output: [[-57.81368774936517 0] -57.81368774936517]
Test Case: 850 | Input/Output: [[-2.390201064470034 96] 93.60979893552997]
Test Case: 851 | Input/Output: [[32.628302824859986 -12] 20.628302824859986]
Test Case: 852 | Input/Output: [[-69.19226906091961 -91] -160.1922690609196]
Test Case: 853 | Input/Output: [[-47.9394076200379 -21] -68.9394076200379]
Test Case: 854 | Input/Output: [[-79.19313322873688 5] -74.19313322873688]
Test Case: 855 | Input/Output: [[-47.59565619719186 35] -12.595656197191857]
Test Case: 856 | Input/Output: [[55.39478941596562 23] 78.39478941596562]
Test Case: 857 | Input/Output: [[-92.45304893259735 12] -80.45304893259735]
Test Case: 858 | Input/Output: [[-74.58699319225164 100] 25.41300680774836]
Test Case: 859 | Input/Output: [[-49.23742026702733 51] 1.762579732972668]
Test Case: 860 | Input/Output: [[78.41562403483445 26] 104.41562403483445]
Test Case: 861 | Input/Output: [[52.65877574506624 -50] 2.6587757450662366]
Test Case: 862 | Input/Output: [[-50.25725717732696 -36] -86.25725717732696]
Test Case: 863 | Input/Output: [[31.161727265532363 63] 94.16172726553236]
Test Case: 864 | Input/Output: [[-23.409001851947536 65] 41.59099814805246]
Test Case: 865 | Input/Output: [[-4.8577181465120844 20] 15.142281853487916]
Test Case: 866 | Input/Output: [[-30.68510753510283 -79] -109.68510753510283]
Test Case: 867 | Input/Output: [[-86.64650462197264 -45] -131.64650462197264]
Test Case: 868 | Input/Output: [[-83.66008108076602 -11] -94.66008108076602]
Test Case: 869 | Input/Output: [[-26.49696753413717 -96] -122.49696753413717]
Test Case: 870 | Input/Output: [[52.32559104066357 26] 78.32559104066357]
Test Case: 871 | Input/Output: [[83.5509376142048 -21] 62.5509376142048]
Test Case: 872 | Input/Output: [[-0.6348112621381148 78] 77.36518873786189]
Test Case: 873 | Input/Output: [[93.41572564797082 98] 191.41572564797082]
Test Case: 874 | Input/Output: [[-64.73713320660917 -76] -140.73713320660917]
Test Case: 875 | Input/Output: [[82.83329757168377 62] 144.83329757168377]
Test Case: 876 | Input/Output: [[-99.54168655766821 54] -45.541686557668214]
Test Case: 877 | Input/Output: [[-21.276571535782224 43] 21.723428464217776]
Test Case: 878 | Input/Output: [[-29.837632719107503 -78] -107.8376327191075]
Test Case: 879 | Input/Output: [[64.75588650435847 -34] 30.75588650435847]
Test Case: 880 | Input/Output: [[-25.929454764423184 40] 14.070545235576816]
Test Case: 881 | Input/Output: [[45.73488074243207 -17] 28.73488074243207]
Test Case: 882 | Input/Output: [[-13.588623428934326 -40] -53.588623428934326]
Test Case: 883 | Input/Output: [[27.01568354596904 99] 126.01568354596904]
Test Case: 884 | Input/Output: [[8.340481139661591 -20] -11.659518860338409]
Test Case: 885 | Input/Output: [[56.514080692324114 33] 89.51408069232411]
Test Case: 886 | Input/Output: [[92.30253071669182 -48] 44.30253071669182]
Test Case: 887 | Input/Output: [[-15.50894476728557 85] 69.49105523271443]
Test Case: 888 | Input/Output: [[71.55518995950959 0] 71.55518995950959]
Test Case: 889 | Input/Output: [[45.47441738986231 60] 105.47441738986231]
Test Case: 890 | Input/Output: [[-42.25822139035604 64] 21.74177860964396]
Test Case: 891 | Input/Output: [[71.91465675960796 -6] 65.91465675960796]
Test Case: 892 | Input/Output: [[83.04423374246574 33] 116.04423374246574]
Test Case: 893 | Input/Output: [[-75.03339856245255 -97] -172.03339856245253]
Test Case: 894 | Input/Output: [[1.786156967048342 -50] -48.21384303295166]
Test Case: 895 | Input/Output: [[57.860934137710785 -91] -33.139065862289215]
Test Case: 896 | Input/Output: [[62.64775803094739 56] 118.64775803094739]
Test Case: 897 | Input/Output: [[-28.311467692219793 96] 67.6885323077802]
Test Case: 898 | Input/Output: [[35.91442100162374 -54] -18.085578998376263]
Test Case: 899 | Input/Output: [[21.928540522598766 -14] 7.928540522598766]
Test Case: 900 | Input/Output: [[-79.59426253081307 90] 10.405737469186931]
Test Case: 901 | Input/Output: [[61.03760161602253 17] 78.03760161602253]
Test Case: 902 | Input/Output: [[92.10220203038969 -9] 83.10220203038969]
Test Case: 903 | Input/Output: [[-35.98884206446429 67] 31.011157935535707]
Test Case: 904 | Input/Output: [[44.23292756922797 12] 56.23292756922797]
Test Case: 905 | Input/Output: [[24.47601471689616 -43] -18.52398528310384]
Test Case: 906 | Input/Output: [[1.4446961932327724 2] 3.4446961932327724]
Test Case: 907 | Input/Output: [[-23.685757395123602 48] 24.314242604876398]
Test Case: 908 | Input/Output: [[24.632127143279675 86] 110.63212714327967]
Test Case: 909 | Input/Output: [[-76.29638069252289 74] -2.296380692522888]
Test Case: 910 | Input/Output: [[-22.2965968068967 -8] -30.2965968068967]
Test Case: 911 | Input/Output: [[-92.25248779701975 7] -85.25248779701975]
Test Case: 912 | Input/Output: [[-73.70879333863422 82] 8.291206661365777]
Test Case: 913 | Input/Output: [[85.37250674159725 85] 170.37250674159725]
Test Case: 914 | Input/Output: [[-41.51631002839253 -18] -59.51631002839253]
Test Case: 915 | Input/Output: [[72.77906042052308 -6] 66.77906042052308]
Test Case: 916 | Input/Output: [[-33.33977166836996 -24] -57.33977166836996]
Test Case: 917 | Input/Output: [[-17.696247767590023 79] 61.30375223240998]
Test Case: 918 | Input/Output: [[28.188839059132363 48] 76.18883905913236]
Test Case: 919 | Input/Output: [[-35.80497206750579 -100] -135.8049720675058]
Test Case: 920 | Input/Output: [[-57.03904261292785 -57] -114.03904261292786]
Test Case: 921 | Input/Output: [[-44.91500602635872 -68] -112.91500602635872]
Test Case: 922 | Input/Output: [[-94.17489929448996 0] -94.17489929448996]
Test Case: 923 | Input/Output: [[9.66345715388772 -69] -59.33654284611228]
Test Case: 924 | Input/Output: [[-50.6625652076448 -31] -81.6625652076448]
Test Case: 925 | Input/Output: [[-73.07871595561318 95] 21.921284044386823]
Test Case: 926 | Input/Output: [[-28.364846571721117 33] 4.635153428278883]
Test Case: 927 | Input/Output: [[9.332532261671034 -55] -45.667467738328966]
Test Case: 928 | Input/Output: [[54.069481589828456 -37] 17.069481589828456]
Test Case: 929 | Input/Output: [[13.820375340605423 27] 40.82037534060542]
Test Case: 930 | Input/Output: [[-40.25148664213993 31] -9.25148664213993]
Test Case: 931 | Input/Output: [[35.08628778322728 -97] -61.91371221677272]
Test Case: 932 | Input/Output: [[-75.02683442041842 -65] -140.02683442041842]
Test Case: 933 | Input/Output: [[-30.729195482348274 93] 62.270804517651726]
Test Case: 934 | Input/Output: [[-82.41030375670937 20] -62.41030375670937]
Test Case: 935 | Input/Output: [[59.998989216094 95] 154.998989216094]
Test Case: 936 | Input/Output: [[71.08947412441984 56] 127.08947412441984]
Test Case: 937 | Input/Output: [[-92.99145040589465 -75] -167.99145040589465]
Test Case: 938 | Input/Output: [[-19.73169808200221 -100] -119.73169808200221]
Test Case: 939 | Input/Output: [[25.186884592703123 4] 29.186884592703123]
Test Case: 940 | Input/Output: [[20.520858804444146 46] 66.52085880444415]
Test Case: 941 | Input/Output: [[-37.05871829934304 36] -1.0587182993430417]
Test Case: 942 | Input/Output: [[-83.72549055773288 -83] -166.72549055773288]
Test Case: 943 | Input/Output: [[-39.58210845729408 -42] -81.58210845729408]
Test Case: 944 | Input/Output: [[-45.02672835818555 -63] -108.02672835818555]
Test Case: 945 | Input/Output: [[33.15390152852899 -20] 13.15390152852899]
Test Case: 946 | Input/Output: [[13.46116459794888 -45] -31.53883540205112]
Test Case: 947 | Input/Output: [[-26.217975182686715 -21] -47.217975182686715]
Test Case: 948 | Input/Output: [[66.0164519271344 -59] 7.016451927134398]
Test Case: 949 | Input/Output: [[-40.957564510540024 65] 24.042435489459976]
Test Case: 950 | Input/Output: [[-75.52747295741025 18] -57.527472957410254]
Test Case: 951 | Input/Output: [[17.118316811404497 80] 97.1183168114045]
Test Case: 952 | Input/Output: [[-91.60983357467272 52] -39.60983357467272]
Test Case: 953 | Input/Output: [[4.056908049852481 55] 59.05690804985248]
Test Case: 954 | Input/Output: [[24.219804913190288 -99] -74.78019508680971]
Test Case: 955 | Input/Output: [[-13.273481350236779 39] 25.72651864976322]
Test Case: 956 | Input/Output: [[-25.570432401334585 -37] -62.570432401334585]
Test Case: 957 | Input/Output: [[40.65980621859882 -59] -18.340193781401183]
Test Case: 958 | Input/Output: [[-4.7499070443238764 7] 2.2500929556761236]
Test Case: 959 | Input/Output: [[74.17103610223211 -76] -1.828963897767892]
Test Case: 960 | Input/Output: [[49.300992813832465 52] 101.30099281383247]
Test Case: 961 | Input/Output: [[-24.087689522273934 25] 0.9123104777260664]
Test Case: 962 | Input/Output: [[29.35478479393771 -25] 4.354784793937711]
Test Case: 963 | Input/Output: [[74.17004690479624 43] 117.17004690479624]
Test Case: 964 | Input/Output: [[23.198884312730556 71] 94.19888431273056]
Test Case: 965 | Input/Output: [[-64.64326228140308 43] -21.643262281403082]
Test Case: 966 | Input/Output: [[72.74318698173687 20] 92.74318698173687]
Test Case: 967 | Input/Output: [[-87.48858330542369 91] 3.5114166945763117]
Test Case: 968 | Input/Output: [[49.62440731842159 0] 49.62440731842159]
Test Case: 969 | Input/Output: [[-26.529999341966317 69] 42.47000065803368]
Test Case: 970 | Input/Output: [[-25.699504755011475 7] -18.699504755011475]
Test Case: 971 | Input/Output: [[-23.197414311118465 49] 25.802585688881535]
Test Case: 972 | Input/Output: [[0.9424338287097953 37] 37.942433828709795]
Test Case: 973 | Input/Output: [[-40.52988833334447 33] -7.5298883333444735]
Test Case: 974 | Input/Output: [[23.57572999902237 -64] -40.42427000097763]
Test Case: 975 | Input/Output: [[-40.31983614515981 -18] -58.31983614515981]
Test Case: 976 | Input/Output: [[-12.536779854429653 20] 7.463220145570347]
Test Case: 977 | Input/Output: [[-24.23683935519638 1] -23.23683935519638]
Test Case: 978 | Input/Output: [[2.8541230329878715 5] 7.8541230329878715]
Test Case: 979 | Input/Output: [[41.952955037213 -94] -52.047044962787]
Test Case: 980 | Input/Output: [[-52.96185056225517 44] -8.961850562255172]
Test Case: 981 | Input/Output: [[24.2485731098528 -54] -29.7514268901472]
Test Case: 982 | Input/Output: [[-46.84834371425526 -11] -57.84834371425526]
Test Case: 983 | Input/Output: [[63.94207156726256 45] 108.94207156726256]
Test Case: 984 | Input/Output: [[-29.68966116635427 -62] -91.68966116635427]
Test Case: 985 | Input/Output: [[-85.49422661972457 -21] -106.49422661972457]
Test Case: 986 | Input/Output: [[-61.43893870705337 59] -2.4389387070533672]
Test Case: 987 | Input/Output: [[44.17702339841338 -66] -21.822976601586618]
Test Case: 988 | Input/Output: [[89.86248058488354 96] 185.86248058488354]
Test Case: 989 | Input/Output: [[-46.58661065278882 19] -27.58661065278882]
Test Case: 990 | Input/Output: [[-34.97279611959418 48] 13.027203880405821]
Test Case: 991 | Input/Output: [[-37.258272632920054 19] -18.258272632920054]
Test Case: 992 | Input/Output: [[-78.74536640610445 -37] -115.74536640610445]
Test Case: 993 | Input/Output: [[47.544318939443 -73] -25.455681060556998]
Test Case: 994 | Input/Output: [[-76.87456570525828 7] -69.87456570525828]
Test Case: 995 | Input/Output: [[21.224457662706115 43] 64.22445766270612]
Test Case: 996 | Input/Output: [[65.46388481782398 61] 126.46388481782398]
Test Case: 997 | Input/Output: [[77.20547634434357 51] 128.20547634434357]
Test Case: 998 | Input/Output: [[-62.928123685926884 89] 26.071876314073116]
Test Case: 999 | Input/Output: [[51.74356884944996 3] 54.74356884944996]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -58 70 106 -50 -57 76 -114 -26 -31 51 -67 -37 53 -31 -104 -25
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 63704.9107999999
Test mean error for best: 31.85246
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -63.7029109089
Correct output: 56.1482049432  | Program output: 60.2970890911 
Correct output: 119.906060961  | Program output: 113.2970890911
Correct output: 50.5358278922  | Program output: 48.2970890911 
Correct output: -96.9231504051 | Program output: -32.7029109089
Correct output: 106.9580346954 | Program output: 98.2970890911 
Correct output: -2.8915035716  | Program output: -21.7029109089
Correct output: 66.9280793072  | Program output: 46.2970890911 
Correct output: 30.2629795787  | Program output: 68.2970890911 
Correct output: -85.6511511165 | Program output: -69.7029109089
Correct output: 25.500872287   | Program output: 32.2970890911 
Correct output: 55.6008938554  | Program output: 92.2970890911 
Correct output: 83.4159352988  | Program output: 98.2970890911 
Correct output: 101.838925934  | Program output: 117.2970890911
Correct output: 25.7690669824  | Program output: -23.7029109089
Correct output: -20.4797091942 | Program output: -13.7029109089
Correct output: -31.146120842  | Program output: 18.2970890911 
Correct output: 13.3975592307  | Program output: -21.7029109089
Correct output: 7.1720573522   | Program output: 23.2970890911 
Correct output: 5.5319837072   | Program output: 39.2970890911 
Correct output: -2.6555905371  | Program output: -7.7029109089 
Correct output: 45.3717937277  | Program output: 98.2970890911 
Correct output: -67.2329867872 | Program output: -23.7029109089
Correct output: 45.2902920771  | Program output: 13.2970890911 
Correct output: -89.1418064575 | Program output: -43.7029109089
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_mod} {:instruction in2} {:instruction integer_mod} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 25.297089091107395} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_mod in2 integer_mod float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 25.297089091107395 integer_shove integer_shove integer_max integer_dec integer_yank float_add print_float integer_div)
Errors: [90.8241 10 4.1489 11 6.609 7 2.2387 11 64.2202 9 8.6609 11 18.8114 10 20.631 9 38.0341 10 15.9482 12 6.7962 10 36.6962 10 14.8812 11 15.4582 10 49.472 10 6.7768 10 49.4432 12 35.1005 12 16.125 11 33.7651 11 5.0473 10 52.9253 11 43.5301 10 31.9932 7 45.4389 12]
Total: 970.5756999999998
Mean: 19.411514
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 18161.566684999998
Median total errors in population: 25330.0
Error averages by case: (743.2701865000007 14.123 709.9011116000016 12.576 725.236785000002 12.664 706.3886708999992 12.558 727.2412519999991 13.289 723.7225030999986 13.358 705.3522243000009 13.088 708.4783219000016 12.625 711.1206182000002 13.38 722.8299240999997 14.056 693.5546293999989 11.822 716.7492060999992 13.363 718.1154302000019 12.634 722.066294899997 12.502 709.6405798000003 12.618 705.8674347000009 13.896 708.4657252000015 12.469 709.1424807000016 12.622 696.1144866 11.74 702.4476613 12.392 704.2674539000009 13.162 716.2168679999993 13.275 720.8093560000011 13.405 705.3077639999991 12.559 725.8107165999984 13.273)
Error minima by case: (21.527 2 2.795 2 6.609 2 0.7232 2 1.3256 2 7.958 3 1.2717 8 0.0719 1 0.263 8 1.3488 9 1.9389 2 2.6009 8 1.1383 2 2.0 1 1.6707 1 1.7001 7 2.1461 2 0.6024 2 0.9916 1 1.1659 8 0.178 7 0.4647 8 0.233 1 0.5462 2 2.1418 1)
Average genome size in population (length): 50.941
Average program size in population (points): 51.941
Average percent parens in population: 0.041
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.322
Error (vector) diversity:			 0.351
Behavioral diversity:				 0.371
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1278278
--- Timings ---
Current time: 1529615972072 milliseconds
Total Time:           3.4 seconds
Initialization:       0.1 seconds,  3.3%
Reproduction:         0.5 seconds, 15.3%
Fitness Testing:      2.8 seconds, 81.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 63704.9107999999
Test mean error for best: 31.85246
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -63.7029109089
Correct output: 56.1482049432  | Program output: 60.2970890911 
Correct output: 119.906060961  | Program output: 113.2970890911
Correct output: 50.5358278922  | Program output: 48.2970890911 
Correct output: -96.9231504051 | Program output: -32.7029109089
Correct output: 106.9580346954 | Program output: 98.2970890911 
Correct output: -2.8915035716  | Program output: -21.7029109089
Correct output: 66.9280793072  | Program output: 46.2970890911 
Correct output: 30.2629795787  | Program output: 68.2970890911 
Correct output: -85.6511511165 | Program output: -69.7029109089
Correct output: 25.500872287   | Program output: 32.2970890911 
Correct output: 55.6008938554  | Program output: 92.2970890911 
Correct output: 83.4159352988  | Program output: 98.2970890911 
Correct output: 101.838925934  | Program output: 117.2970890911
Correct output: 25.7690669824  | Program output: -23.7029109089
Correct output: -20.4797091942 | Program output: -13.7029109089
Correct output: -31.146120842  | Program output: 18.2970890911 
Correct output: 13.3975592307  | Program output: -21.7029109089
Correct output: 7.1720573522   | Program output: 23.2970890911 
Correct output: 5.5319837072   | Program output: 39.2970890911 
Correct output: -2.6555905371  | Program output: -7.7029109089 
Correct output: 45.3717937277  | Program output: 98.2970890911 
Correct output: -67.2329867872 | Program output: -23.7029109089
Correct output: 45.2902920771  | Program output: 13.2970890911 
Correct output: -89.1418064575 | Program output: -43.7029109089
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_mod} {:instruction in2} {:instruction integer_mod} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_max} {:instruction 25.297089091107395} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_mod in2 integer_mod float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger float_max 25.297089091107395 integer_shove integer_shove integer_max integer_dec integer_yank float_add print_float integer_div)
Errors: [90.8241 10 4.1489 11 6.609 7 2.2387 11 64.2202 9 8.6609 11 18.8114 10 20.631 9 38.0341 10 15.9482 12 6.7962 10 36.6962 10 14.8812 11 15.4582 10 49.472 10 6.7768 10 49.4432 12 35.1005 12 16.125 11 33.7651 11 5.0473 10 52.9253 11 43.5301 10 31.9932 7 45.4389 12]
Total: 970.5756999999998
Mean: 19.411514
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 6580.432007100005
Median total errors in population: 1658.4872
Error averages by case: (313.18231210000073 11.659 242.19840009999933 10.516 277.37315399999864 10.736 238.75040630000188 10.456 278.0424161999991 10.932 271.6929377000021 11.174 240.95667060000022 11.974 246.95603129999853 10.508 239.09142100000008 12.57 273.1984114999999 12.927 216.69411030000168 9.882 251.36450630000027 12.401 257.6964917999995 10.619 266.92885810000064 10.292 253.1423383000011 10.551 237.8118975 12.657 238.2520165000019 10.388 249.32977789999921 10.57 218.59580039999952 9.767 221.53094159999975 11.455 236.4004899000002 11.988 251.84899440000015 12.097 262.14795810000055 11.149 244.78038319999843 10.458 273.8102820000018 10.929)
Error minima by case: (22.527 2 2.795 2 6.609 2 1.0151 2 1.3256 2 6.958 3 0.7161 8 0.0719 1 0.263 8 6.6512 9 1.9389 2 3.0023 8 3.5841 2 1.8389 1 1.6707 1 1.4797 7 2.1461 2 0.6024 2 0.9916 1 1.1659 8 0.178 8 1.3718 8 1.1953 1 1.2903 2 6.4557 1)
Average genome size in population (length): 58.583
Average program size in population (points): 59.583
Average percent parens in population: 0.022
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.489
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.775
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.775
Total error diversity:				 0.285
Error (vector) diversity:			 0.305
Behavioral diversity:				 0.322
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2749693
--- Timings ---
Current time: 1529615975826 milliseconds
Total Time:           7.3 seconds
Initialization:       0.1 seconds,  1.5%
Reproduction:         2.3 seconds, 31.2%
Fitness Testing:      4.4 seconds, 59.9%
Report:               0.5 seconds,  7.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 63704.9107999999
Test mean error for best: 31.85246
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -63.7029109089
Correct output: 56.1482049432  | Program output: 60.2970890911 
Correct output: 119.906060961  | Program output: 113.2970890911
Correct output: 50.5358278922  | Program output: 48.2970890911 
Correct output: -96.9231504051 | Program output: -32.7029109089
Correct output: 106.9580346954 | Program output: 98.2970890911 
Correct output: -2.8915035716  | Program output: -21.7029109089
Correct output: 66.9280793072  | Program output: 46.2970890911 
Correct output: 30.2629795787  | Program output: 68.2970890911 
Correct output: -85.6511511165 | Program output: -69.7029109089
Correct output: 25.500872287   | Program output: 32.2970890911 
Correct output: 55.6008938554  | Program output: 92.2970890911 
Correct output: 83.4159352988  | Program output: 98.2970890911 
Correct output: 101.838925934  | Program output: 117.2970890911
Correct output: 25.7690669824  | Program output: -23.7029109089
Correct output: -20.4797091942 | Program output: -13.7029109089
Correct output: -31.146120842  | Program output: 18.2970890911 
Correct output: 13.3975592307  | Program output: -21.7029109089
Correct output: 7.1720573522   | Program output: 23.2970890911 
Correct output: 5.5319837072   | Program output: 39.2970890911 
Correct output: -2.6555905371  | Program output: -7.7029109089 
Correct output: 45.3717937277  | Program output: 98.2970890911 
Correct output: -67.2329867872 | Program output: -23.7029109089
Correct output: 45.2902920771  | Program output: 13.2970890911 
Correct output: -89.1418064575 | Program output: -43.7029109089
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_mod} {:instruction in2} {:instruction integer_mod} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 25.297089091107395} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_mod in2 integer_mod float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 25.297089091107395 integer_shove integer_shove integer_max integer_dec integer_yank float_add print_float integer_div)
Errors: [90.8241 10 4.1489 11 6.609 7 2.2387 11 64.2202 9 8.6609 11 18.8114 10 20.631 9 38.0341 10 15.9482 12 6.7962 10 36.6962 10 14.8812 11 15.4582 10 49.472 10 6.7768 10 49.4432 12 35.1005 12 16.125 11 33.7651 11 5.0473 10 52.9253 11 43.5301 10 31.9932 7 45.4389 12]
Total: 970.5756999999998
Mean: 19.411514
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 4370.204093199996
Median total errors in population: 1028.3863999999999
Error averages by case: (204.26243400000092 11.842 153.37884559999873 10.818 172.0452224999968 11.134 155.60170100000096 10.798 177.82368869999902 10.949 170.65069890000174 11.616 174.7399307000012 11.711 167.9815521999991 10.606 148.89388619999784 12.871 162.19969610000288 12.477 134.32199219999964 9.872 153.01496070000033 12.157 153.37115940000103 10.74 156.27561320000115 10.146 196.80955970000224 10.788 155.99843230000104 12.494 155.85797000000127 10.738 186.70802119999814 10.871 136.11422079999898 9.882 140.0529398999977 11.257 162.55052560000112 11.649 166.1166640000026 11.55 160.48499919999952 11.085 178.726147099997 10.585 166.64923200000123 10.938)
Error minima by case: (23.473 2 4.1489 2 6.609 2 2.2387 2 19.0768 2 8.6609 3 1.8915 8 19.0 1 0.263 8 8.3488 9 0.2038 2 8.1765 9 9.4159 2 8.8389 1 0.472 1 6.2571 8 5.4485 2 3.3976 2 1.0 1 2.2454 8 0.178 8 15.3718 10 6.7502 1 7.7373 2 15.1586 1)
Average genome size in population (length): 46.571
Average program size in population (points): 47.571
Average percent parens in population: 0.029
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9835
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.618
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.618
Total error diversity:				 0.1
Error (vector) diversity:			 0.105
Behavioral diversity:				 0.116
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3916968
--- Timings ---
Current time: 1529615978657 milliseconds
Total Time:          10.1 seconds
Initialization:       0.1 seconds,  1.1%
Reproduction:         3.6 seconds, 35.4%
Fitness Testing:      5.5 seconds, 54.5%
Report:               0.9 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 63704.9107999999
Test mean error for best: 31.85246
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -63.7029109089
Correct output: 56.1482049432  | Program output: 60.2970890911 
Correct output: 119.906060961  | Program output: 113.2970890911
Correct output: 50.5358278922  | Program output: 48.2970890911 
Correct output: -96.9231504051 | Program output: -32.7029109089
Correct output: 106.9580346954 | Program output: 98.2970890911 
Correct output: -2.8915035716  | Program output: -21.7029109089
Correct output: 66.9280793072  | Program output: 46.2970890911 
Correct output: 30.2629795787  | Program output: 68.2970890911 
Correct output: -85.6511511165 | Program output: -69.7029109089
Correct output: 25.500872287   | Program output: 32.2970890911 
Correct output: 55.6008938554  | Program output: 92.2970890911 
Correct output: 83.4159352988  | Program output: 98.2970890911 
Correct output: 101.838925934  | Program output: 117.2970890911
Correct output: 25.7690669824  | Program output: -23.7029109089
Correct output: -20.4797091942 | Program output: -13.7029109089
Correct output: -31.146120842  | Program output: 18.2970890911 
Correct output: 13.3975592307  | Program output: -21.7029109089
Correct output: 7.1720573522   | Program output: 23.2970890911 
Correct output: 5.5319837072   | Program output: 39.2970890911 
Correct output: -2.6555905371  | Program output: -7.7029109089 
Correct output: 45.3717937277  | Program output: 98.2970890911 
Correct output: -67.2329867872 | Program output: -23.7029109089
Correct output: 45.2902920771  | Program output: 13.2970890911 
Correct output: -89.1418064575 | Program output: -43.7029109089
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_mod} {:instruction in2} {:instruction integer_mod} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 25.297089091107395} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_mod in2 integer_mod float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 25.297089091107395 integer_shove integer_shove integer_max integer_dec integer_yank float_add print_float integer_div)
Errors: [90.8241 10 4.1489 11 6.609 7 2.2387 11 64.2202 9 8.6609 11 18.8114 10 20.631 9 38.0341 10 15.9482 12 6.7962 10 36.6962 10 14.8812 11 15.4582 10 49.472 10 6.7768 10 49.4432 12 35.1005 12 16.125 11 33.7651 11 5.0473 10 52.9253 11 43.5301 10 31.9932 7 45.4389 12]
Total: 970.5756999999998
Mean: 19.411514
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3511.273071099989
Median total errors in population: 1020.3863999999999
Error averages by case: (173.4757956000005 12.416 115.12562079999947 11.564 125.57222859999739 10.992 118.76424069999942 11.826 148.6365982000006 11.328 126.90716339999966 12.306 141.01804980000134 11.141 135.1207920000003 11.059 115.37553459999879 12.127 119.61221930000168 12.079 108.10808849999907 10.5 114.95172579999935 11.31 111.6069690000023 11.594 111.88660880000069 10.991 168.12382290000187 11.672 122.19322110000093 11.631 126.49447039999879 11.28 155.61660349999832 11.847 106.54213169999993 11.07 111.63631859999875 10.769 129.49912960000134 11.089 129.72903980000206 11.357 128.76922959999837 11.85 148.31647859999737 10.818 132.0159901999986 11.559)
Error minima by case: (63.527 2 4.1489 2 4.9358 2 0.0584 2 29.5578 2 6.9878 3 0.9068 9 4.2971 1 4.9659 10 7.3488 10 0.2038 2 5.0067 9 8.4159 2 7.8389 1 0.472 1 6.7768 8 7.0 2 11.3976 2 2.0 1 3.532 8 0.6899 8 5.2224 9 0.1323 1 5.3039 2 18.1418 1)
Average genome size in population (length): 35.016
Average program size in population (points): 36.016
Average percent parens in population: 0.034
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.4135
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 102
Genome diversity (% unique Plush genomes):	 0.495
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 102
Syntactic diversity (% unique Push programs):	 0.495
Total error diversity:				 0.053
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4792893
--- Timings ---
Current time: 1529615981287 milliseconds
Total Time:          12.8 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         4.9 seconds, 38.3%
Fitness Testing:      6.5 seconds, 50.8%
Report:               1.3 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 63704.9107999999
Test mean error for best: 31.85246
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -63.7029109089
Correct output: 56.1482049432  | Program output: 60.2970890911 
Correct output: 119.906060961  | Program output: 113.2970890911
Correct output: 50.5358278922  | Program output: 48.2970890911 
Correct output: -96.9231504051 | Program output: -32.7029109089
Correct output: 106.9580346954 | Program output: 98.2970890911 
Correct output: -2.8915035716  | Program output: -21.7029109089
Correct output: 66.9280793072  | Program output: 46.2970890911 
Correct output: 30.2629795787  | Program output: 68.2970890911 
Correct output: -85.6511511165 | Program output: -69.7029109089
Correct output: 25.500872287   | Program output: 32.2970890911 
Correct output: 55.6008938554  | Program output: 92.2970890911 
Correct output: 83.4159352988  | Program output: 98.2970890911 
Correct output: 101.838925934  | Program output: 117.2970890911
Correct output: 25.7690669824  | Program output: -23.7029109089
Correct output: -20.4797091942 | Program output: -13.7029109089
Correct output: -31.146120842  | Program output: 18.2970890911 
Correct output: 13.3975592307  | Program output: -21.7029109089
Correct output: 7.1720573522   | Program output: 23.2970890911 
Correct output: 5.5319837072   | Program output: 39.2970890911 
Correct output: -2.6555905371  | Program output: -7.7029109089 
Correct output: 45.3717937277  | Program output: 98.2970890911 
Correct output: -67.2329867872 | Program output: -23.7029109089
Correct output: 45.2902920771  | Program output: 13.2970890911 
Correct output: -89.1418064575 | Program output: -43.7029109089
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_mod} {:instruction in2} {:instruction integer_mod} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 25.297089091107395} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_mod in2 integer_mod float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 25.297089091107395 integer_shove integer_shove integer_max integer_dec integer_yank float_add print_float integer_div)
Errors: [90.8241 10 4.1489 11 6.609 7 2.2387 11 64.2202 9 8.6609 11 18.8114 10 20.631 9 38.0341 10 15.9482 12 6.7962 10 36.6962 10 14.8812 11 15.4582 10 49.472 10 6.7768 10 49.4432 12 35.1005 12 16.125 11 33.7651 11 5.0473 10 52.9253 11 43.5301 10 31.9932 7 45.4389 12]
Total: 970.5756999999998
Mean: 19.411514
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3796.728657299985
Median total errors in population: 970.5756999999998
Error averages by case: (197.4752205999993 11.017 122.31555149999978 11.219 130.89390919999758 8.748 121.85776750000068 11.399 171.60663730000104 10.173 131.5965562000009 11.564 139.1520022000018 10.623 137.90953099999854 9.986 139.2760534999997 10.793 135.9914986000007 12.044 118.53514799999876 10.161 139.60428790000105 10.591 128.3762411000023 11.251 129.93844619999885 10.665 162.30158680000045 10.806 127.64606080000252 10.56 149.27388419999937 11.649 151.3437541999996 11.776 121.29051219999971 11.154 135.86478799999975 10.878 127.90610510000151 10.626 152.22350690000184 11.241 152.62201290000124 10.971 145.5243986999978 8.594 155.8561966999991 11.858)
Error minima by case: (40.2299 2 4.1489 2 4.9358 2 0.0584 2 13.6261 2 6.9878 3 2.8915 8 16.3339 2 3.2927 9 8.3488 10 0.2038 2 5.0067 9 4.7914 2 8.8389 3 0.472 2 6.6995 8 1.151 2 11.8995 2 2.0 1 4.5435 6 1.6899 9 2.3311 9 7.0641 2 5.3039 2 5.1553 2)
Average genome size in population (length): 38.227
Average program size in population (points): 39.227
Average percent parens in population: 0.027
Minimum age in population: 4.0
Maximum age in population: 7.5
Average age in population: 5.888875
Median age in population: 5.9375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 207
Genome diversity (% unique Plush genomes):	 0.512
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 207
Syntactic diversity (% unique Push programs):	 0.512
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5748593
--- Timings ---
Current time: 1529615984130 milliseconds
Total Time:          15.6 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.1 seconds, 39.3%
Fitness Testing:      7.7 seconds, 49.5%
Report:               1.6 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 63209.362299999906
Test mean error for best: 31.60468
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -65.6818741185
Correct output: 56.1482049432  | Program output: 58.3181258815 
Correct output: 119.906060961  | Program output: 111.3181258815
Correct output: 50.5358278922  | Program output: 46.3181258815 
Correct output: -96.9231504051 | Program output: -34.6818741185
Correct output: 106.9580346954 | Program output: 96.3181258815 
Correct output: -2.8915035716  | Program output: -23.6818741185
Correct output: 66.9280793072  | Program output: 44.3181258815 
Correct output: 30.2629795787  | Program output: 66.3181258815 
Correct output: -85.6511511165 | Program output: -71.6818741185
Correct output: 25.500872287   | Program output: 30.3181258815 
Correct output: 55.6008938554  | Program output: 90.3181258815 
Correct output: 83.4159352988  | Program output: 96.3181258815 
Correct output: 101.838925934  | Program output: 115.3181258815
Correct output: 25.7690669824  | Program output: -25.6818741185
Correct output: -20.4797091942 | Program output: -15.6818741185
Correct output: -31.146120842  | Program output: 16.3181258815 
Correct output: 13.3975592307  | Program output: -23.6818741185
Correct output: 7.1720573522   | Program output: 21.3181258815 
Correct output: 5.5319837072   | Program output: 37.3181258815 
Correct output: -2.6555905371  | Program output: -9.6818741185 
Correct output: 45.3717937277  | Program output: 96.3181258815 
Correct output: -67.2329867872 | Program output: -25.6818741185
Correct output: 45.2902920771  | Program output: 11.3181258815 
Correct output: -89.1418064575 | Program output: -45.6818741185
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_mod} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 23.31812588153409} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_mod in2 integer_flush float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 23.31812588153409 integer_shove integer_max integer_dec integer_yank float_add print_float integer_div)
Errors: [88.8451 12 2.1699 10 8.5879 10 4.2177 9 62.2413 11 10.6399 11 20.7904 10 22.61 11 36.0551 11 13.9693 7 4.8173 10 34.7172 11 12.9022 10 13.4792 9 51.4509 11 4.7978 11 47.4642 10 37.0794 12 14.1461 11 31.7861 11 7.0263 10 50.9463 11 41.5511 12 33.9722 11 43.4599 9]
Total: 960.7228
Mean: 19.214457
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2288.871673200004
Median total errors in population: 970.5756999999998
Error averages by case: (148.0413917999988 10.333 56.91230120000012 11.087 65.34641749999881 7.608 54.810165900000996 11.096 119.87987309999932 9.497 65.78056020000088 11.184 73.29361079999968 10.179 72.0616215000004 9.353 83.03432750000022 10.196 78.29439259999928 12.087 56.3175901999992 9.981 84.03902570000038 10.129 68.39958260000114 11.108 70.70765740000029 10.284 97.16660629999912 10.137 64.51431069999968 10.09 96.84683639999894 11.982 85.82303180000025 11.781 64.86666160000007 11.058 80.41999639999979 10.961 61.61259739999917 10.194 96.96536200000118 11.041 99.40811930000204 10.342 79.87354329999887 7.396 103.2070899999983 12.145)
Error minima by case: (40.2299 8 2.1699 7 5.609 7 0.0584 6 13.6261 9 7.6609 10 1.8915 8 4.2971 9 1.9659 9 8.3488 7 0.2038 8 2.0092 9 9.4159 9 8.8389 9 0.472 9 4.7978 8 1.151 8 9.411 7 3.1855 9 1.5455 8 1.6556 9 2.3311 10 1.6911 9 5.3039 6 5.1553 9)
Average genome size in population (length): 41.663
Average program size in population (points): 42.663
Average percent parens in population: 0.024
Minimum age in population: 5.0
Maximum age in population: 9.1875
Average age in population: 7.3119375
Median age in population: 7.375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 222
Genome diversity (% unique Plush genomes):	 0.589
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 222
Syntactic diversity (% unique Push programs):	 0.589
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6790168
--- Timings ---
Current time: 1529615987197 milliseconds
Total Time:          18.7 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.4 seconds, 39.6%
Fitness Testing:      9.2 seconds, 49.2%
Report:               2.0 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 63209.362299999906
Test mean error for best: 31.60468
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -65.6818741185
Correct output: 56.1482049432  | Program output: 58.3181258815 
Correct output: 119.906060961  | Program output: 111.3181258815
Correct output: 50.5358278922  | Program output: 46.3181258815 
Correct output: -96.9231504051 | Program output: -34.6818741185
Correct output: 106.9580346954 | Program output: 96.3181258815 
Correct output: -2.8915035716  | Program output: -23.6818741185
Correct output: 66.9280793072  | Program output: 44.3181258815 
Correct output: 30.2629795787  | Program output: 66.3181258815 
Correct output: -85.6511511165 | Program output: -71.6818741185
Correct output: 25.500872287   | Program output: 30.3181258815 
Correct output: 55.6008938554  | Program output: 90.3181258815 
Correct output: 83.4159352988  | Program output: 96.3181258815 
Correct output: 101.838925934  | Program output: 115.3181258815
Correct output: 25.7690669824  | Program output: -25.6818741185
Correct output: -20.4797091942 | Program output: -15.6818741185
Correct output: -31.146120842  | Program output: 16.3181258815 
Correct output: 13.3975592307  | Program output: -23.6818741185
Correct output: 7.1720573522   | Program output: 21.3181258815 
Correct output: 5.5319837072   | Program output: 37.3181258815 
Correct output: -2.6555905371  | Program output: -9.6818741185 
Correct output: 45.3717937277  | Program output: 96.3181258815 
Correct output: -67.2329867872 | Program output: -25.6818741185
Correct output: 45.2902920771  | Program output: 11.3181258815 
Correct output: -89.1418064575 | Program output: -45.6818741185
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction float_dec} {:instruction float_shove} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 23.31812588153409} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (float_sub integer_sub float_tan integer_pop float_sin integer_mod float_dec float_shove float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 23.31812588153409 integer_shove integer_max integer_dec integer_yank float_add print_float integer_div)
Errors: [88.8451 12 2.1699 10 8.5879 10 4.2177 9 62.2413 11 10.6399 11 20.7904 10 22.61 11 36.0551 11 13.9693 7 4.8173 10 34.7172 11 12.9022 10 13.4792 9 51.4509 11 4.7978 11 47.4642 10 37.0794 12 14.1461 11 31.7861 11 7.0263 10 50.9463 11 41.5511 12 33.9722 11 43.4599 9]
Total: 960.7228
Mean: 19.214457
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2187.3865610000034
Median total errors in population: 970.5756999999998
Error averages by case: (144.9610543999988 10.321 52.680735300000116 11.064 60.986545599998756 7.595 50.618483400001026 11.056 116.60663199999921 9.488 61.4731640000009 11.154 69.2574563999996 10.168 67.94069200000041 9.348 79.04066379999989 10.184 74.6506822999993 12.041 50.83835289999942 9.952 79.9797507000001 10.109 64.1268843000012 11.086 66.39295470000035 10.265 92.83914119999906 10.103 60.5961761999997 10.067 93.05301239999899 11.972 81.63422300000029 11.775 60.17197640000004 11.05 76.69718859999936 10.945 57.5773276999992 10.173 92.99468570000124 11.019 96.00422400000207 10.317 75.6886067999988 7.369 99.82894719999838 12.126)
Error minima by case: (65.527 9 2.1699 9 5.609 7 0.0584 6 38.9232 9 7.6609 9 1.0336 8 16.3339 9 1.4869 9 9.183 7 0.1346 8 5.0067 9 1.6437 8 9.6731 9 0.1336 8 4.7978 8 24.1461 8 8.3704 9 6.4615 7 4.8214 8 1.3511 8 2.3311 9 18.233 8 5.3039 6 20.1418 8)
Average genome size in population (length): 41.526
Average program size in population (points): 42.526
Average percent parens in population: 0.024
Minimum age in population: 6.25
Maximum age in population: 10.5625
Average age in population: 8.794625
Median age in population: 8.8125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 127
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 127
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7828318
--- Timings ---
Current time: 1529615990253 milliseconds
Total Time:          21.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         8.7 seconds, 39.9%
Fitness Testing:     10.6 seconds, 48.8%
Report:               2.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 63209.362299999906
Test mean error for best: 31.60468
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -65.6818741185
Correct output: 56.1482049432  | Program output: 58.3181258815 
Correct output: 119.906060961  | Program output: 111.3181258815
Correct output: 50.5358278922  | Program output: 46.3181258815 
Correct output: -96.9231504051 | Program output: -34.6818741185
Correct output: 106.9580346954 | Program output: 96.3181258815 
Correct output: -2.8915035716  | Program output: -23.6818741185
Correct output: 66.9280793072  | Program output: 44.3181258815 
Correct output: 30.2629795787  | Program output: 66.3181258815 
Correct output: -85.6511511165 | Program output: -71.6818741185
Correct output: 25.500872287   | Program output: 30.3181258815 
Correct output: 55.6008938554  | Program output: 90.3181258815 
Correct output: 83.4159352988  | Program output: 96.3181258815 
Correct output: 101.838925934  | Program output: 115.3181258815
Correct output: 25.7690669824  | Program output: -25.6818741185
Correct output: -20.4797091942 | Program output: -15.6818741185
Correct output: -31.146120842  | Program output: 16.3181258815 
Correct output: 13.3975592307  | Program output: -23.6818741185
Correct output: 7.1720573522   | Program output: 21.3181258815 
Correct output: 5.5319837072   | Program output: 37.3181258815 
Correct output: -2.6555905371  | Program output: -9.6818741185 
Correct output: 45.3717937277  | Program output: 96.3181258815 
Correct output: -67.2329867872 | Program output: -25.6818741185
Correct output: 45.2902920771  | Program output: 11.3181258815 
Correct output: -89.1418064575 | Program output: -45.6818741185
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_mod} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 23.31812588153409} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_mod in2 integer_flush float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 23.31812588153409 integer_shove integer_max integer_dec integer_yank float_add print_float integer_div)
Errors: [88.8451 12 2.1699 10 8.5879 10 4.2177 9 62.2413 11 10.6399 11 20.7904 10 22.61 11 36.0551 11 13.9693 7 4.8173 10 34.7172 11 12.9022 10 13.4792 9 51.4509 11 4.7978 11 47.4642 10 37.0794 12 14.1461 11 31.7861 11 7.0263 10 50.9463 11 41.5511 12 33.9722 11 43.4599 9]
Total: 960.7228
Mean: 19.214457
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2056.9555593000046
Median total errors in population: 970.5756999999998
Error averages by case: (141.56416089999888 10.335 45.49522640000012 10.965 53.86559939999913 7.683 43.62171660000101 10.947 113.38474789999943 9.521 54.37608990000058 11.144 66.71589719999938 10.161 60.93617480000079 9.427 72.42036149999946 10.219 71.36038129999926 11.836 45.122127299999576 9.945 73.24217199999956 10.172 57.083679200000894 11.023 59.29697180000047 10.204 90.60229589999919 10.135 57.588291699999715 10.111 86.60232019999926 11.858 79.24693170000033 11.762 54.09663390000002 11.033 70.0018292999992 10.962 54.88493699999911 10.174 86.48948070000108 11.031 92.87874090000194 10.364 68.96764609999903 7.527 96.59614569999864 11.976)
Error minima by case: (39.2299 2 2.1699 2 5.609 2 0.0584 2 12.6261 2 2.6609 3 0.9571 8 4.2971 2 2.9659 9 8.3623 7 0.2038 2 5.0067 9 8.4159 2 2.4582 3 0.472 2 4.7978 8 2.151 2 9.8034 2 2.0 1 4.9558 8 1.2974 8 1.3311 9 8.0641 2 4.3039 2 6.1553 2)
Average genome size in population (length): 41.607
Average program size in population (points): 42.607
Average percent parens in population: 0.024
Minimum age in population: 8.0
Maximum age in population: 12.15625
Average age in population: 10.24740625
Median age in population: 10.3203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 81
Genome diversity (% unique Plush genomes):	 0.707
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 81
Syntactic diversity (% unique Push programs):	 0.707
Total error diversity:				 0.045
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 8868493
--- Timings ---
Current time: 1529615993254 milliseconds
Total Time:          24.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:         9.8 seconds, 39.8%
Fitness Testing:     12.1 seconds, 48.8%
Report:               2.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 62620.88960000007
Test mean error for best: 31.31044
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -67.096800022 
Correct output: 56.1482049432  | Program output: 56.903199978  
Correct output: 119.906060961  | Program output: 109.903199978 
Correct output: 50.5358278922  | Program output: 44.903199978  
Correct output: -96.9231504051 | Program output: -36.096800022 
Correct output: 106.9580346954 | Program output: 94.903199978  
Correct output: -2.8915035716  | Program output: -25.096800022 
Correct output: 66.9280793072  | Program output: 42.903199978  
Correct output: 30.2629795787  | Program output: 64.903199978  
Correct output: -85.6511511165 | Program output: -73.096800022 
Correct output: 25.500872287   | Program output: 28.903199978  
Correct output: 55.6008938554  | Program output: 88.903199978  
Correct output: 83.4159352988  | Program output: 94.903199978  
Correct output: 101.838925934  | Program output: 113.903199978 
Correct output: 25.7690669824  | Program output: -27.096800022 
Correct output: -20.4797091942 | Program output: -17.096800022 
Correct output: -31.146120842  | Program output: 14.903199978  
Correct output: 13.3975592307  | Program output: -25.096800022 
Correct output: 7.1720573522   | Program output: 19.903199978  
Correct output: 5.5319837072   | Program output: 35.903199978  
Correct output: -2.6555905371  | Program output: -11.096800022 
Correct output: 45.3717937277  | Program output: 94.903199978  
Correct output: -67.2329867872 | Program output: -27.096800022 
Correct output: 45.2902920771  | Program output: 9.903199978   
Correct output: -89.1418064575 | Program output: -47.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_dec integer_rot float_add print_float integer_div)
Errors: [87.4302 11 0.755 9 10.0029 7 5.6326 11 60.8264 9 12.0548 10 22.2053 9 24.0249 9 34.6402 9 12.5544 12 3.4023 9 33.3023 10 11.4873 10 12.0643 9 52.8659 10 3.3829 10 46.0493 11 38.4944 12 12.7311 12 30.3712 8 8.4412 11 49.5314 10 40.1362 9 35.3871 9 42.045 10]
Total: 935.8186
Mean: 18.716372
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2341.5917858000066
Median total errors in population: 970.5756999999998
Error averages by case: (148.50804609999994 10.771 58.3088942000002 10.674 66.5356527999986 8.373 57.550330200001085 10.57 121.13249659999879 9.956 67.35237770000103 11.21 76.39262979999965 10.173 74.77642630000027 9.982 86.0613266999995 10.452 78.68953509999896 10.8 58.152007799999566 10.053 86.51586730000011 10.429 69.63334490000071 10.849 71.50147170000045 10.011 101.22303709999925 10.407 65.85459729999985 10.462 98.8953601999997 11.468 89.42814430000054 11.852 66.36033419999978 11.086 83.20816679999919 11.004 64.43261609999902 10.185 100.0066694000009 11.087 100.96717950000107 10.826 83.25422789999865 8.503 104.29204579999936 11.376)
Error minima by case: (64.527 9 0.755 7 6.5459 7 0.0584 6 37.9232 9 8.5978 10 1.8915 8 2.3181 8 3.9028 8 9.3488 7 0.1407 8 5.0067 8 10.4159 9 9.8389 9 0.4089 8 3.3829 7 5.849 9 9.8034 9 7.1721 10 5.532 8 1.6556 8 1.2645 9 17.233 9 1.346 6 19.1418 9)
Average genome size in population (length): 40.984
Average program size in population (points): 41.984
Average percent parens in population: 0.024
Minimum age in population: 9.125
Maximum age in population: 13.7109375
Average age in population: 11.821765625
Median age in population: 11.875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.653
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.653
Total error diversity:				 0.048
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 9893093
--- Timings ---
Current time: 1529615996257 milliseconds
Total Time:          27.8 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.1 seconds, 40.0%
Fitness Testing:     13.5 seconds, 48.5%
Report:               3.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 62620.88960000007
Test mean error for best: 31.31044
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -67.096800022 
Correct output: 56.1482049432  | Program output: 56.903199978  
Correct output: 119.906060961  | Program output: 109.903199978 
Correct output: 50.5358278922  | Program output: 44.903199978  
Correct output: -96.9231504051 | Program output: -36.096800022 
Correct output: 106.9580346954 | Program output: 94.903199978  
Correct output: -2.8915035716  | Program output: -25.096800022 
Correct output: 66.9280793072  | Program output: 42.903199978  
Correct output: 30.2629795787  | Program output: 64.903199978  
Correct output: -85.6511511165 | Program output: -73.096800022 
Correct output: 25.500872287   | Program output: 28.903199978  
Correct output: 55.6008938554  | Program output: 88.903199978  
Correct output: 83.4159352988  | Program output: 94.903199978  
Correct output: 101.838925934  | Program output: 113.903199978 
Correct output: 25.7690669824  | Program output: -27.096800022 
Correct output: -20.4797091942 | Program output: -17.096800022 
Correct output: -31.146120842  | Program output: 14.903199978  
Correct output: 13.3975592307  | Program output: -25.096800022 
Correct output: 7.1720573522   | Program output: 19.903199978  
Correct output: 5.5319837072   | Program output: 35.903199978  
Correct output: -2.6555905371  | Program output: -11.096800022 
Correct output: 45.3717937277  | Program output: 94.903199978  
Correct output: -67.2329867872 | Program output: -27.096800022 
Correct output: 45.2902920771  | Program output: 9.903199978   
Correct output: -89.1418064575 | Program output: -47.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_dec integer_rot float_add print_float integer_div)
Errors: [87.4302 11 0.755 9 10.0029 7 5.6326 11 60.8264 9 12.0548 10 22.2053 9 24.0249 9 34.6402 9 12.5544 12 3.4023 9 33.3023 10 11.4873 10 12.0643 9 52.8659 10 3.3829 10 46.0493 11 38.4944 12 12.7311 12 30.3712 8 8.4412 11 49.5314 10 40.1362 9 35.3871 9 42.045 10]
Total: 935.8186
Mean: 18.716372
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1952.9233717999953
Median total errors in population: 960.7228
Error averages by case: (134.35120840000175 11.829 40.472546700000436 10.203 50.46653559999925 9.839 41.65734780000047 9.49 106.75506999999901 10.859 51.338562199999956 11.171 63.86434379999976 10.132 59.154766500000484 10.9 68.82122309999944 10.938 63.719353699999125 8.214 40.753601100000054 10.038 69.15854069999942 10.933 51.76276639999968 10.256 53.50660960000078 9.418 89.39302830000021 10.899 51.05161270000015 11.016 81.9298469000007 10.373 77.21532590000075 11.878 49.37529950000017 11.04 65.67783069999925 10.999 51.68266179999984 10.17 83.04349600000033 11.063 86.37763539999888 11.791 67.97637129999879 10.519 89.67878770000092 9.771)
Error minima by case: (64.5566 9 0.755 8 6.5459 7 0.3181 8 37.9527 9 8.5978 10 1.8915 8 2.3181 8 3.9449 9 5.329 7 0.1407 8 6.9857 9 6.3961 9 5.8191 8 0.4089 8 3.3829 8 23.1757 9 6.4179 8 4.987 9 1.7126 8 1.6556 8 0.1505 9 17.2626 9 0.069 6 19.1714 9)
Average genome size in population (length): 40.038
Average program size in population (points): 41.038
Average percent parens in population: 0.025
Minimum age in population: 10.9375
Maximum age in population: 15.43359375
Average age in population: 13.347203125
Median age in population: 13.37109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 93
Genome diversity (% unique Plush genomes):	 0.564
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.564
Total error diversity:				 0.047
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 10894043
--- Timings ---
Current time: 1529615999175 milliseconds
Total Time:          30.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.2 seconds, 39.9%
Fitness Testing:     14.9 seconds, 48.6%
Report:               3.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 62620.88960000007
Test mean error for best: 31.31044
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -67.096800022 
Correct output: 56.1482049432  | Program output: 56.903199978  
Correct output: 119.906060961  | Program output: 109.903199978 
Correct output: 50.5358278922  | Program output: 44.903199978  
Correct output: -96.9231504051 | Program output: -36.096800022 
Correct output: 106.9580346954 | Program output: 94.903199978  
Correct output: -2.8915035716  | Program output: -25.096800022 
Correct output: 66.9280793072  | Program output: 42.903199978  
Correct output: 30.2629795787  | Program output: 64.903199978  
Correct output: -85.6511511165 | Program output: -73.096800022 
Correct output: 25.500872287   | Program output: 28.903199978  
Correct output: 55.6008938554  | Program output: 88.903199978  
Correct output: 83.4159352988  | Program output: 94.903199978  
Correct output: 101.838925934  | Program output: 113.903199978 
Correct output: 25.7690669824  | Program output: -27.096800022 
Correct output: -20.4797091942 | Program output: -17.096800022 
Correct output: -31.146120842  | Program output: 14.903199978  
Correct output: 13.3975592307  | Program output: -25.096800022 
Correct output: 7.1720573522   | Program output: 19.903199978  
Correct output: 5.5319837072   | Program output: 35.903199978  
Correct output: -2.6555905371  | Program output: -11.096800022 
Correct output: 45.3717937277  | Program output: 94.903199978  
Correct output: -67.2329867872 | Program output: -27.096800022 
Correct output: 45.2902920771  | Program output: 9.903199978   
Correct output: -89.1418064575 | Program output: -47.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_dec integer_rot float_add print_float integer_div)
Errors: [87.4302 11 0.755 9 10.0029 7 5.6326 11 60.8264 9 12.0548 10 22.2053 9 24.0249 9 34.6402 9 12.5544 12 3.4023 9 33.3023 10 11.4873 10 12.0643 9 52.8659 10 3.3829 10 46.0493 11 38.4944 12 12.7311 12 30.3712 8 8.4412 11 49.5314 10 40.1362 9 35.3871 9 42.045 10]
Total: 935.8186
Mean: 18.716372
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2216.605695099989
Median total errors in population: 960.7228
Error averages by case: (143.91438310000237 12.167 51.62771800000044 10.205 62.91876899999913 10.14 52.75614820000062 9.415 116.23948979999827 11.04 63.60200550000057 11.184 73.80253129999956 10.146 70.03019630000033 11.026 78.95435009999923 11.056 74.02800699999872 7.971 51.02186600000032 10.044 79.74702569999945 11.054 63.33800039999903 10.17 65.3765592000008 9.369 98.60025879999965 10.989 60.98209660000021 11.163 92.56251910000086 10.212 86.69705350000083 11.891 60.846748399999676 11.077 75.30616259999891 10.992 61.607729299999335 10.275 93.0445804999999 11.081 95.98255359999847 11.94 79.11020789999948 10.912 99.39873520000094 9.591)
Error minima by case: (23.473 8 0.755 8 5.3318 7 0.9615 8 13.6261 9 7.3837 9 1.8915 8 0.7082 9 5.9449 9 9.3488 7 1.1827 8 7.9857 10 10.4159 9 9.8389 8 1.4509 9 3.3829 8 0.828 8 3.1669 8 3.1523 9 1.5122 8 1.6556 9 1.2645 7 5.0851 8 1.346 7 3.1763 7)
Average genome size in population (length): 39.824
Average program size in population (points): 40.824
Average percent parens in population: 0.025
Minimum age in population: 12.71875
Maximum age in population: 16.591796875
Average age in population: 14.80696875
Median age in population: 14.8359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 58
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 58
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.045
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 11889643
--- Timings ---
Current time: 1529616002190 milliseconds
Total Time:          33.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.4 seconds, 40.0%
Fitness Testing:     16.3 seconds, 48.5%
Report:               3.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 62405.70580000007
Test mean error for best: 31.20285
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -68.096800022 
Correct output: 56.1482049432  | Program output: 55.903199978  
Correct output: 119.906060961  | Program output: 108.903199978 
Correct output: 50.5358278922  | Program output: 43.903199978  
Correct output: -96.9231504051 | Program output: -37.096800022 
Correct output: 106.9580346954 | Program output: 93.903199978  
Correct output: -2.8915035716  | Program output: -26.096800022 
Correct output: 66.9280793072  | Program output: 41.903199978  
Correct output: 30.2629795787  | Program output: 63.903199978  
Correct output: -85.6511511165 | Program output: -74.096800022 
Correct output: 25.500872287   | Program output: 27.903199978  
Correct output: 55.6008938554  | Program output: 87.903199978  
Correct output: 83.4159352988  | Program output: 93.903199978  
Correct output: 101.838925934  | Program output: 112.903199978 
Correct output: 25.7690669824  | Program output: -28.096800022 
Correct output: -20.4797091942 | Program output: -18.096800022 
Correct output: -31.146120842  | Program output: 13.903199978  
Correct output: 13.3975592307  | Program output: -26.096800022 
Correct output: 7.1720573522   | Program output: 18.903199978  
Correct output: 5.5319837072   | Program output: 34.903199978  
Correct output: -2.6555905371  | Program output: -12.096800022 
Correct output: 45.3717937277  | Program output: 93.903199978  
Correct output: -67.2329867872 | Program output: -28.096800022 
Correct output: 45.2902920771  | Program output: 8.903199978   
Correct output: -89.1418064575 | Program output: -48.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_yank float_stackdepth float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_shove integer_max float_dec integer_yank float_add print_float integer_div)
Errors: [86.4302 11 0.245 10 11.0029 8 6.6326 11 59.8264 10 13.0548 10 23.2053 9 25.0249 9 33.6402 9 11.5544 12 2.4023 9 32.3023 10 10.4873 9 11.0643 9 53.8659 10 2.3829 10 45.0493 10 39.4944 12 11.7311 12 29.3712 9 9.4412 10 48.5314 10 39.1362 10 36.3871 9 41.045 10]
Total: 931.3086
Mean: 18.626171
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2264.9361432999895
Median total errors in population: 960.7228
Error averages by case: (144.82927950000158 11.694 54.23212810000025 10.071 65.26762379999924 9.47 55.86369950000044 10.002 117.48794989999888 10.631 66.13356000000037 10.975 75.75754529999978 10.024 73.09465970000008 10.723 81.83762679999931 10.803 74.94562329999901 9.145 53.218347500000476 9.937 82.40828769999969 10.836 65.60231499999948 10.327 67.41836950000041 9.529 101.00379489999966 10.697 62.34319960000001 10.904 93.58251780000043 10.615 88.91383320000061 11.834 60.96474639999965 11.189 78.03407479999913 10.731 63.49618069999955 10.447 95.92215670000026 10.965 97.32951139999899 11.393 81.4034982999996 10.252 100.56861390000033 10.083)
Error minima by case: (25.5545 8 0.245 8 7.5879 7 3.2177 9 36.9232 8 9.6399 9 0.7856 7 0.7082 9 5.9449 9 8.3488 7 1.1827 8 8.8309 9 9.4159 8 8.8389 8 1.4509 8 2.3829 8 22.1461 9 8.5056 8 7.1721 8 2.9904 8 1.177 8 1.2645 7 16.233 9 1.346 7 18.1418 8)
Average genome size in population (length): 39.88
Average program size in population (points): 40.88
Average percent parens in population: 0.025
Minimum age in population: 13.71875
Maximum age in population: 18.01953125
Average age in population: 16.127462890625
Median age in population: 16.18017578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.623
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.623
Total error diversity:				 0.058
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 12886643
--- Timings ---
Current time: 1529616005136 milliseconds
Total Time:          36.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.6 seconds, 40.0%
Fitness Testing:     17.7 seconds, 48.2%
Report:               4.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 62405.70580000007
Test mean error for best: 31.20285
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -68.096800022 
Correct output: 56.1482049432  | Program output: 55.903199978  
Correct output: 119.906060961  | Program output: 108.903199978 
Correct output: 50.5358278922  | Program output: 43.903199978  
Correct output: -96.9231504051 | Program output: -37.096800022 
Correct output: 106.9580346954 | Program output: 93.903199978  
Correct output: -2.8915035716  | Program output: -26.096800022 
Correct output: 66.9280793072  | Program output: 41.903199978  
Correct output: 30.2629795787  | Program output: 63.903199978  
Correct output: -85.6511511165 | Program output: -74.096800022 
Correct output: 25.500872287   | Program output: 27.903199978  
Correct output: 55.6008938554  | Program output: 87.903199978  
Correct output: 83.4159352988  | Program output: 93.903199978  
Correct output: 101.838925934  | Program output: 112.903199978 
Correct output: 25.7690669824  | Program output: -28.096800022 
Correct output: -20.4797091942 | Program output: -18.096800022 
Correct output: -31.146120842  | Program output: 13.903199978  
Correct output: 13.3975592307  | Program output: -26.096800022 
Correct output: 7.1720573522   | Program output: 18.903199978  
Correct output: 5.5319837072   | Program output: 34.903199978  
Correct output: -2.6555905371  | Program output: -12.096800022 
Correct output: 45.3717937277  | Program output: 93.903199978  
Correct output: -67.2329867872 | Program output: -28.096800022 
Correct output: 45.2902920771  | Program output: 8.903199978   
Correct output: -89.1418064575 | Program output: -48.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub integer_sub float_tan in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_shove integer_max float_dec integer_yank float_add print_float integer_div)
Errors: [86.4302 11 0.245 10 11.0029 8 6.6326 11 59.8264 10 13.0548 10 23.2053 9 25.0249 9 33.6402 9 11.5544 12 2.4023 9 32.3023 10 10.4873 9 11.0643 9 53.8659 10 2.3829 10 45.0493 10 39.4944 12 11.7311 12 29.3712 9 9.4412 10 48.5314 10 39.1362 10 36.3871 9 41.045 10]
Total: 931.3086
Mean: 18.626171
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2347.043398700004
Median total errors in population: 952.5756999999998
Error averages by case: (148.98534130000067 10.81 56.588264599999526 9.723 69.56222379999944 7.878 58.905156099999694 10.986 121.7445285000007 9.653 69.71674310000002 10.422 81.22830260000048 9.7 75.86030469999959 9.771 84.29891219999969 9.82 79.73322179999938 11.722 55.60310520000023 9.507 85.05130670000011 10.301 68.30506250000052 10.477 70.82620999999946 9.676 106.18663959999998 10.017 66.79742429999921 10.266 95.69322679999925 11.26 94.16839289999972 11.63 64.16641329999938 11.489 79.82725849999959 9.566 68.75699890000013 10.74 98.51265200000162 10.517 101.75856339999933 9.986 84.0435473000002 8.891 105.04659859999865 10.869)
Error minima by case: (43.6238 2 0.0321 2 3.0886 2 0.4381 2 17.02 2 8.6609 3 1.0918 7 0.7278 2 5.3598 7 9.3488 7 0.5977 2 9.3991 7 10.2834 2 7.0886 3 0.8659 2 2.1791 8 2.2429 2 5.312 2 2.0 1 6.468 8 0.9139 8 0.1505 7 3.6702 2 0.09 2 1.7614 2)
Average genome size in population (length): 40.024
Average program size in population (points): 41.024
Average percent parens in population: 0.025
Minimum age in population: 14.78125
Maximum age in population: 19.720703125
Average age in population: 17.604912109375
Median age in population: 17.659912109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 106
Genome diversity (% unique Plush genomes):	 0.574
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 106
Syntactic diversity (% unique Push programs):	 0.574
Total error diversity:				 0.07
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 13887243
--- Timings ---
Current time: 1529616008082 milliseconds
Total Time:          39.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.8 seconds, 40.0%
Fitness Testing:     19.0 seconds, 48.2%
Report:               4.6 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 62405.70580000007
Test mean error for best: 31.20285
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -68.096800022 
Correct output: 56.1482049432  | Program output: 55.903199978  
Correct output: 119.906060961  | Program output: 108.903199978 
Correct output: 50.5358278922  | Program output: 43.903199978  
Correct output: -96.9231504051 | Program output: -37.096800022 
Correct output: 106.9580346954 | Program output: 93.903199978  
Correct output: -2.8915035716  | Program output: -26.096800022 
Correct output: 66.9280793072  | Program output: 41.903199978  
Correct output: 30.2629795787  | Program output: 63.903199978  
Correct output: -85.6511511165 | Program output: -74.096800022 
Correct output: 25.500872287   | Program output: 27.903199978  
Correct output: 55.6008938554  | Program output: 87.903199978  
Correct output: 83.4159352988  | Program output: 93.903199978  
Correct output: 101.838925934  | Program output: 112.903199978 
Correct output: 25.7690669824  | Program output: -28.096800022 
Correct output: -20.4797091942 | Program output: -18.096800022 
Correct output: -31.146120842  | Program output: 13.903199978  
Correct output: 13.3975592307  | Program output: -26.096800022 
Correct output: 7.1720573522   | Program output: 18.903199978  
Correct output: 5.5319837072   | Program output: 34.903199978  
Correct output: -2.6555905371  | Program output: -12.096800022 
Correct output: 45.3717937277  | Program output: 93.903199978  
Correct output: -67.2329867872 | Program output: -28.096800022 
Correct output: 45.2902920771  | Program output: 8.903199978   
Correct output: -89.1418064575 | Program output: -48.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub integer_sub float_tan in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_shove integer_max float_dec integer_yank float_add print_float integer_div)
Errors: [86.4302 11 0.245 10 11.0029 8 6.6326 11 59.8264 10 13.0548 10 23.2053 9 25.0249 9 33.6402 9 11.5544 12 2.4023 9 32.3023 10 10.4873 9 11.0643 9 53.8659 10 2.3829 10 45.0493 10 39.4944 12 11.7311 12 29.3712 9 9.4412 10 48.5314 10 39.1362 10 36.3871 9 41.045 10]
Total: 931.3086
Mean: 18.626171
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 1995.2943109999978
Median total errors in population: 935.8186
Error averages by case: (132.1837445000017 11.184 44.5997369000001 9.384 57.613667699999574 7.448 48.45862949999988 11.098 104.35388420000118 9.364 58.4118783 10.195 63.87942240000088 9.354 65.86838299999867 9.225 72.1327791000007 9.236 61.43669010000074 12.08 44.43414290000085 9.164 72.77255780000078 10.157 55.90609270000048 10.136 57.8191142999989 9.238 89.44598899999977 10.09 48.559248799999644 10.188 85.03764179999905 10.989 77.10940330000086 11.883 52.703540599999755 11.909 68.90015020000082 8.364 51.83746940000061 10.996 86.32712140000098 10.158 83.9119997999997 9.392 73.5239075000004 9.206 87.28711579999863 10.342)
Error minima by case: (23.473 8 0.0863 7 8.609 7 1.0968 7 17.02 8 9.8484 7 0.3021 8 0.9032 7 5.3598 7 9.3488 9 0.5977 7 10.403 7 10.4159 7 9.8389 8 0.693 7 2.3829 9 2.2429 7 7.5056 7 7.1721 7 4.8928 8 1.149 8 1.5654 7 3.6702 9 1.4839 7 1.7614 8)
Average genome size in population (length): 40.406
Average program size in population (points): 41.406
Average percent parens in population: 0.024
Minimum age in population: 16.86328125
Maximum age in population: 21.151123046875
Average age in population: 19.20254370117188
Median age in population: 19.2491455078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 138
Genome diversity (% unique Plush genomes):	 0.565
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 138
Syntactic diversity (% unique Push programs):	 0.565
Total error diversity:				 0.032
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 14897393
--- Timings ---
Current time: 1529616011036 milliseconds
Total Time:          42.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.0 seconds, 40.1%
Fitness Testing:     20.4 seconds, 48.0%
Report:               5.0 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 62405.70580000007
Test mean error for best: 31.20285
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -68.096800022 
Correct output: 56.1482049432  | Program output: 55.903199978  
Correct output: 119.906060961  | Program output: 108.903199978 
Correct output: 50.5358278922  | Program output: 43.903199978  
Correct output: -96.9231504051 | Program output: -37.096800022 
Correct output: 106.9580346954 | Program output: 93.903199978  
Correct output: -2.8915035716  | Program output: -26.096800022 
Correct output: 66.9280793072  | Program output: 41.903199978  
Correct output: 30.2629795787  | Program output: 63.903199978  
Correct output: -85.6511511165 | Program output: -74.096800022 
Correct output: 25.500872287   | Program output: 27.903199978  
Correct output: 55.6008938554  | Program output: 87.903199978  
Correct output: 83.4159352988  | Program output: 93.903199978  
Correct output: 101.838925934  | Program output: 112.903199978 
Correct output: 25.7690669824  | Program output: -28.096800022 
Correct output: -20.4797091942 | Program output: -18.096800022 
Correct output: -31.146120842  | Program output: 13.903199978  
Correct output: 13.3975592307  | Program output: -26.096800022 
Correct output: 7.1720573522   | Program output: 18.903199978  
Correct output: 5.5319837072   | Program output: 34.903199978  
Correct output: -2.6555905371  | Program output: -12.096800022 
Correct output: 45.3717937277  | Program output: 93.903199978  
Correct output: -67.2329867872 | Program output: -28.096800022 
Correct output: 45.2902920771  | Program output: 8.903199978   
Correct output: -89.1418064575 | Program output: -48.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_dup_items in2 integer_flush float_dec float_shove print_integer integer_sub integer_sub float_tan in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_shove integer_max float_dec integer_yank float_add print_float integer_div)
Errors: [86.4302 11 0.245 10 11.0029 8 6.6326 11 59.8264 10 13.0548 10 23.2053 9 25.0249 9 33.6402 9 11.5544 12 2.4023 9 32.3023 10 10.4873 9 11.0643 9 53.8659 10 2.3829 10 45.0493 10 39.4944 12 11.7311 12 29.3712 9 9.4412 10 48.5314 10 39.1362 10 36.3871 9 41.045 10]
Total: 931.3086
Mean: 18.626171
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2015.7018662999976
Median total errors in population: 935.8186
Error averages by case: (135.93524910000173 11.217 43.46206849999938 9.455 56.58234349999964 7.537 47.06404669999911 11.101 108.16948280000219 9.442 57.39523069999943 10.186 68.02464500000085 9.344 64.36084739999839 9.23 71.06271850000026 9.243 65.34011100000072 12.08 42.788936700000725 9.173 71.53677860000056 10.157 54.581088000000435 10.047 56.47848139999893 9.245 93.4699731000009 10.12 52.52526029999865 10.193 83.5303134999991 10.912 81.18456129999997 11.91 51.49348869999908 11.934 67.06539790000082 8.422 55.90401980000064 10.933 85.12964810000169 10.171 87.78565799999839 9.472 72.60823980000075 9.226 91.14327789999867 10.33)
Error minima by case: (43.6238 8 0.2094 8 9.4456 7 1.0968 7 17.02 8 11.4976 9 2.8033 8 0.9032 8 6.3598 7 9.3488 9 1.6907 7 10.3991 7 1.0496 7 9.8389 8 2.8659 8 1.6713 8 2.2429 7 3.539 7 1.7311 7 3.3712 8 2.5674 8 1.5654 9 3.6702 9 1.4839 7 1.7614 10)
Average genome size in population (length): 40.85
Average program size in population (points): 41.85
Average percent parens in population: 0.024
Minimum age in population: 17.86328125
Maximum age in population: 22.8876953125
Average age in population: 20.68365795898438
Median age in population: 20.732177734375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 105
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 105
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.04
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 15918643
--- Timings ---
Current time: 1529616013940 milliseconds
Total Time:          45.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        18.2 seconds, 40.1%
Fitness Testing:     21.8 seconds, 47.9%
Report:               5.4 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 62197.14380000008
Test mean error for best: 31.09857
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -69.096800022 
Correct output: 56.1482049432  | Program output: 54.903199978  
Correct output: 119.906060961  | Program output: 107.903199978 
Correct output: 50.5358278922  | Program output: 42.903199978  
Correct output: -96.9231504051 | Program output: -38.096800022 
Correct output: 106.9580346954 | Program output: 92.903199978  
Correct output: -2.8915035716  | Program output: -27.096800022 
Correct output: 66.9280793072  | Program output: 40.903199978  
Correct output: 30.2629795787  | Program output: 62.903199978  
Correct output: -85.6511511165 | Program output: -75.096800022 
Correct output: 25.500872287   | Program output: 26.903199978  
Correct output: 55.6008938554  | Program output: 86.903199978  
Correct output: 83.4159352988  | Program output: 92.903199978  
Correct output: 101.838925934  | Program output: 111.903199978 
Correct output: 25.7690669824  | Program output: -29.096800022 
Correct output: -20.4797091942 | Program output: -19.096800022 
Correct output: -31.146120842  | Program output: 12.903199978  
Correct output: 13.3975592307  | Program output: -27.096800022 
Correct output: 7.1720573522   | Program output: 17.903199978  
Correct output: 5.5319837072   | Program output: 33.903199978  
Correct output: -2.6555905371  | Program output: -13.096800022 
Correct output: 45.3717937277  | Program output: 92.903199978  
Correct output: -67.2329867872 | Program output: -29.096800022 
Correct output: 45.2902920771  | Program output: 7.903199978   
Correct output: -89.1418064575 | Program output: -49.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dec} {:instruction integer_shove} {:instruction -63} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction float_pop})
Best program: (print_integer integer_yank float_stackdepth float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_inc integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_div integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_shove integer_max float_dec integer_shove -63 float_dec integer_yank float_add print_float float_pop)
Errors: [85.4302 11 1.245 10 12.0029 8 7.6326 11 58.8264 10 14.0548 10 24.2053 9 26.0249 9 32.6402 9 10.5544 11 1.4023 9 31.3023 10 9.4873 10 10.0643 8 54.8659 10 1.3829 10 44.0493 11 40.4944 12 10.7311 11 28.3712 9 10.4412 11 47.5314 10 38.1362 10 37.3871 9 40.045 9]
Total: 925.3086
Mean: 18.506172
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2385.6215239999956
Median total errors in population: 935.8186
Error averages by case: (148.16318670000175 11.302 59.70434870000009 9.885 74.18755790000046 8.022 63.72774519999889 11.102 120.48644460000212 9.884 74.74468529999915 10.242 81.23694150000088 9.465 80.75926269999987 9.315 86.03677709999931 9.285 79.06841279999952 12.125 58.077463000000854 9.244 87.09250259999948 10.228 71.15728639999985 9.796 73.29663049999897 9.308 105.74806240000117 10.164 65.61920919999854 10.233 98.81377299999906 10.653 93.81507209999944 11.903 66.56952089999884 11.966 82.22191269999932 8.848 69.22338600000059 10.667 100.1124490000021 10.238 100.38025169999791 9.91 87.89456260000222 9.321 103.95307939999861 10.425)
Error minima by case: (24.473 7 0.091 8 9.6824 7 2.0968 7 17.02 8 9.8484 7 0.3021 8 0.0968 7 5.2161 7 9.3488 10 0.454 7 10.3991 7 9.0087 7 9.5857 8 0.7222 7 0.9043 8 2.2429 6 1.869 7 4.3565 7 4.532 8 2.1913 9 1.5654 10 3.6702 9 1.4839 7 1.7614 8)
Average genome size in population (length): 42.516
Average program size in population (points): 43.516
Average percent parens in population: 0.023
Minimum age in population: 19.650390625
Maximum age in population: 24.2288818359375
Average age in population: 22.09322845458984
Median age in population: 22.0821533203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.657
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.657
Total error diversity:				 0.049
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 16981543
--- Timings ---
Current time: 1529616016818 milliseconds
Total Time:          48.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.4 seconds, 40.1%
Fitness Testing:     23.1 seconds, 47.8%
Report:               5.7 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 62197.14380000008
Test mean error for best: 31.09857
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -69.096800022 
Correct output: 56.1482049432  | Program output: 54.903199978  
Correct output: 119.906060961  | Program output: 107.903199978 
Correct output: 50.5358278922  | Program output: 42.903199978  
Correct output: -96.9231504051 | Program output: -38.096800022 
Correct output: 106.9580346954 | Program output: 92.903199978  
Correct output: -2.8915035716  | Program output: -27.096800022 
Correct output: 66.9280793072  | Program output: 40.903199978  
Correct output: 30.2629795787  | Program output: 62.903199978  
Correct output: -85.6511511165 | Program output: -75.096800022 
Correct output: 25.500872287   | Program output: 26.903199978  
Correct output: 55.6008938554  | Program output: 86.903199978  
Correct output: 83.4159352988  | Program output: 92.903199978  
Correct output: 101.838925934  | Program output: 111.903199978 
Correct output: 25.7690669824  | Program output: -29.096800022 
Correct output: -20.4797091942 | Program output: -19.096800022 
Correct output: -31.146120842  | Program output: 12.903199978  
Correct output: 13.3975592307  | Program output: -27.096800022 
Correct output: 7.1720573522   | Program output: 17.903199978  
Correct output: 5.5319837072   | Program output: 33.903199978  
Correct output: -2.6555905371  | Program output: -13.096800022 
Correct output: 45.3717937277  | Program output: 92.903199978  
Correct output: -67.2329867872 | Program output: -29.096800022 
Correct output: 45.2902920771  | Program output: 7.903199978   
Correct output: -89.1418064575 | Program output: -49.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_yank float_stackdepth float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_yankdup float_dec integer_yankdup float_div float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove integer_max integer_shove integer_max float_dec integer_yank float_dec integer_yank float_add print_float integer_div)
Errors: [85.4302 11 1.245 10 12.0029 8 7.6326 11 58.8264 10 14.0548 10 24.2053 9 26.0249 9 32.6402 9 10.5544 11 1.4023 9 31.3023 10 9.4873 10 10.0643 8 54.8659 10 1.3829 10 44.0493 11 40.4944 12 10.7311 11 28.3712 9 10.4412 11 47.5314 10 38.1362 10 37.3871 9 40.045 9]
Total: 925.3086
Mean: 18.506172
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2117.3149374999925
Median total errors in population: 931.3086
Error averages by case: (137.53118770000168 11.279 48.48369510000067 10.207 63.174756099999655 8.368 53.532113999999055 11.06 109.60121580000184 10.227 63.80818569999944 10.176 70.76851850000082 9.374 70.73761109999904 9.273 75.42939430000013 9.223 67.12678120000047 12.069 47.84192860000083 9.217 76.1494618000005 10.195 59.55658030000038 9.43 61.61399439999897 9.246 96.02084160000072 10.125 53.92971629999883 10.176 88.26743559999912 10.315 83.7949554000002 11.93 56.07230989999906 11.933 72.13918630000008 9.187 58.739878500000614 10.262 89.45066920000151 10.205 89.24459579999875 10.262 78.16642110000109 9.278 92.75350319999875 10.363)
Error minima by case: (2.5698 7 0.026 8 8.6314 7 2.0968 7 1.8264 8 6.1986 7 1.8915 7 0.0968 7 6.3598 7 9.8132 9 1.4023 7 9.3991 7 9.4873 7 1.0795 8 2.8659 7 1.3829 9 4.8397 6 4.312 7 7.1721 7 2.3712 8 1.6556 8 1.5654 9 5.4254 8 1.4839 7 16.4835 9)
Average genome size in population (length): 44.263
Average program size in population (points): 45.263
Average percent parens in population: 0.022
Minimum age in population: 20.8046875
Maximum age in population: 25.66552734375
Average age in population: 23.48904119873047
Median age in population: 23.52116394042969
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 66
Genome diversity (% unique Plush genomes):	 0.567
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.567
Total error diversity:				 0.045
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 18088118
--- Timings ---
Current time: 1529616019728 milliseconds
Total Time:          51.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.5 seconds, 40.1%
Fitness Testing:     24.5 seconds, 47.8%
Report:               6.1 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 61926.640399999975
Test mean error for best: 30.96332
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -69.760752143 
Correct output: 56.1482049432  | Program output: 54.239247857  
Correct output: 119.906060961  | Program output: 107.239247857 
Correct output: 50.5358278922  | Program output: 42.239247857  
Correct output: -96.9231504051 | Program output: -38.760752143 
Correct output: 106.9580346954 | Program output: 92.239247857  
Correct output: -2.8915035716  | Program output: -27.760752143 
Correct output: 66.9280793072  | Program output: 40.239247857  
Correct output: 30.2629795787  | Program output: 62.239247857  
Correct output: -85.6511511165 | Program output: -75.760752143 
Correct output: 25.500872287   | Program output: 26.239247857  
Correct output: 55.6008938554  | Program output: 86.239247857  
Correct output: 83.4159352988  | Program output: 92.239247857  
Correct output: 101.838925934  | Program output: 111.239247857 
Correct output: 25.7690669824  | Program output: -29.760752143 
Correct output: -20.4797091942 | Program output: -19.760752143 
Correct output: -31.146120842  | Program output: 12.239247857  
Correct output: 13.3975592307  | Program output: -27.760752143 
Correct output: 7.1720573522   | Program output: 17.239247857  
Correct output: 5.5319837072   | Program output: 33.239247857  
Correct output: -2.6555905371  | Program output: -13.760752143 
Correct output: 45.3717937277  | Program output: 92.239247857  
Correct output: -67.2329867872 | Program output: -29.760752143 
Correct output: 45.2902920771  | Program output: 7.239247857   
Correct output: -89.1418064575 | Program output: -49.760752143 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_dup_items} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction float_shove} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.23924785701895} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_max} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot float_stackdepth float_dup_items in2 integer_flush float_dec float_shove float_sub integer_sub float_tan integer_pop float_sin integer_mod integer_inc integer_yankdup float_dec float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup float_shove in2 float_mod float_shove float_frominteger in2 21.23924785701895 integer_shove integer_max integer_shove integer_max float_dec integer_yank float_add float_dec integer_yank float_add print_float integer_div)
Errors: [84.7663 11 1.909 9 12.6668 11 8.2966 9 58.1624 11 14.7188 11 24.8692 9 26.6888 10 31.9763 8 9.8904 9 0.7384 9 30.6384 10 8.8233 11 9.4003 8 55.5298 9 0.719 9 43.3854 11 41.1583 11 10.0672 9 27.7073 9 11.1052 10 46.8675 10 37.4722 12 38.051 9 39.3811 11]
Total: 920.989
Mean: 18.41978
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2481.663144599992
Median total errors in population: 931.3086
Error averages by case: (150.92215560000147 11.301 64.53310070000109 10.145 79.34500230000118 8.538 69.23863439999892 10.964 122.83061460000229 10.263 79.9861385999993 10.283 85.64304160000079 9.43 86.14150280000021 9.344 90.23567709999904 9.239 81.98604369999917 11.836 62.571028300000805 9.246 91.21134409999954 10.219 75.23959709999937 9.684 77.26556279999899 9.14 110.31265470000125 10.106 68.12216729999857 10.211 101.42256199999917 10.458 98.28667139999938 11.82 69.06761659999958 11.641 85.49147299999898 9.177 73.00822750000059 10.417 104.25616860000184 10.235 103.24609739999818 10.347 90.80889270000203 9.303 106.82516969999872 10.319)
Error minima by case: (41.6238 3 0.091 2 9.1859 3 2.0968 2 15.02 2 7.8484 3 0.2543 8 0.0968 2 6.3598 7 9.3488 9 0.7384 2 9.3991 7 8.8233 2 9.4003 3 1.693 2 0.719 8 0.2429 2 4.312 2 1.0 1 3.3299 8 0.149 9 1.5654 9 5.6702 2 1.4839 2 3.7614 2)
Average genome size in population (length): 43.245
Average program size in population (points): 44.245
Average percent parens in population: 0.023
Minimum age in population: 21.8046875
Maximum age in population: 27.04658508300781
Average age in population: 25.06864677429199
Median age in population: 25.15570068359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.678
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.678
Total error diversity:				 0.049
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 19169243
--- Timings ---
Current time: 1529616022555 milliseconds
Total Time:          54.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.7 seconds, 40.2%
Fitness Testing:     25.8 seconds, 47.7%
Report:               6.5 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 61771.77660000007
Test mean error for best: 30.88589
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -71.096800022 
Correct output: 56.1482049432  | Program output: 52.903199978  
Correct output: 119.906060961  | Program output: 105.903199978 
Correct output: 50.5358278922  | Program output: 40.903199978  
Correct output: -96.9231504051 | Program output: -40.096800022 
Correct output: 106.9580346954 | Program output: 90.903199978  
Correct output: -2.8915035716  | Program output: -29.096800022 
Correct output: 66.9280793072  | Program output: 38.903199978  
Correct output: 30.2629795787  | Program output: 60.903199978  
Correct output: -85.6511511165 | Program output: -77.096800022 
Correct output: 25.500872287   | Program output: 24.903199978  
Correct output: 55.6008938554  | Program output: 84.903199978  
Correct output: 83.4159352988  | Program output: 90.903199978  
Correct output: 101.838925934  | Program output: 109.903199978 
Correct output: 25.7690669824  | Program output: -31.096800022 
Correct output: -20.4797091942 | Program output: -21.096800022 
Correct output: -31.146120842  | Program output: 10.903199978  
Correct output: 13.3975592307  | Program output: -29.096800022 
Correct output: 7.1720573522   | Program output: 15.903199978  
Correct output: 5.5319837072   | Program output: 31.903199978  
Correct output: -2.6555905371  | Program output: -15.096800022 
Correct output: 45.3717937277  | Program output: 90.903199978  
Correct output: -67.2329867872 | Program output: -31.096800022 
Correct output: 45.2902920771  | Program output: 5.903199978   
Correct output: -89.1418064575 | Program output: -51.096800022 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_pop} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction -63} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (float_dec float_shove float_sub integer_sub integer_sub float_tan in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_inc integer_yankdup integer_yankdup float_dec integer_yankdup integer_mult float_pop float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_dup integer_dup_items in2 float_mod float_shove float_frominteger float_dec 21.90319997799472 integer_shove integer_max integer_shove -63 float_dec integer_max float_dec float_dec integer_yank float_add print_float integer_div)
Errors: [83.4302 11 3.245 10 14.0029 8 9.6326 10 56.8264 10 16.0548 9 26.2053 9 28.0249 9 30.6402 8 8.5544 12 0.5977 9 29.3023 10 7.4873 10 8.0643 8 56.8659 11 0.6171 9 42.0493 11 42.4944 12 8.7311 12 26.3712 9 12.4412 11 45.5314 10 36.1362 10 39.3871 8 38.045 10]
Total: 916.7382
Mean: 18.334764
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2533.9329183999903
Median total errors in population: 925.3086
Error averages by case: (152.09485140000135 11.313 65.65276350000092 10.109 79.71344750000091 8.599 70.38743609999904 10.954 125.38697740000197 10.284 80.6804768999994 10.36 89.72686970000088 9.411 87.34496650000027 9.416 92.06775199999939 9.246 83.15543799999936 11.369 63.51464120000083 9.273 92.65848109999972 10.228 75.55934749999962 10.182 77.21391969999895 8.723 115.57778680000098 10.151 70.93159939999859 10.214 102.87362659999913 10.946 103.10575419999958 11.86 71.72191949999963 11.205 87.37390849999919 9.186 77.09008060000065 10.849 106.28438160000184 10.252 105.45426749999845 10.407 95.92805490000207 9.339 108.62617029999872 9.932)
Error minima by case: (24.473 7 0.091 8 10.0029 7 0.2936 7 20.0768 8 12.0548 9 0.1008 8 1.0968 8 7.3598 7 8.5544 9 0.4023 7 4.7715 7 7.4873 7 8.0643 8 2.8659 8 0.3829 8 2.0509 7 6.1433 7 6.489 7 0.3712 7 0.6423 8 2.8933 8 16.233 8 2.8118 7 18.1418 8)
Average genome size in population (length): 42.168
Average program size in population (points): 43.168
Average percent parens in population: 0.023
Minimum age in population: 22.8046875
Maximum age in population: 28.39215850830078
Average age in population: 26.63964496612549
Median age in population: 26.71529388427734
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 100
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 100
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.053
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 20223443
--- Timings ---
Current time: 1529616025385 milliseconds
Total Time:          56.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.9 seconds, 40.2%
Fitness Testing:     27.1 seconds, 47.6%
Report:               6.8 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 27083.200000000426
Test mean error for best: 13.54160
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -134.6238099429
Correct output: 56.1482049432  | Program output: 76.0514049212 
Correct output: 119.906060961  | Program output: 139.809260939 
Correct output: 50.5358278922  | Program output: 70.4390278702 
Correct output: -96.9231504051 | Program output: -77.0199504271
Correct output: 106.9580346954 | Program output: 126.8612346734
Correct output: -2.8915035716  | Program output: 17.0116964064 
Correct output: 66.9280793072  | Program output: 86.8312792852 
Correct output: 30.2629795787  | Program output: 50.1661795567 
Correct output: -85.6511511165 | Program output: -65.7479511385
Correct output: 25.500872287   | Program output: 45.404072265  
Correct output: 55.6008938554  | Program output: 75.5040938334 
Correct output: 83.4159352988  | Program output: 103.3191352768
Correct output: 101.838925934  | Program output: 121.742125912 
Correct output: 25.7690669824  | Program output: 45.6722669604 
Correct output: -20.4797091942 | Program output: -0.5765092162 
Correct output: -31.146120842  | Program output: -11.242920864 
Correct output: 13.3975592307  | Program output: 33.3007592087 
Correct output: 7.1720573522   | Program output: 27.0752573302 
Correct output: 5.5319837072   | Program output: 25.4351836852 
Correct output: -2.6555905371  | Program output: 17.2476094409 
Correct output: 45.3717937277  | Program output: 65.2749937057 
Correct output: -67.2329867872 | Program output: -47.3297868092
Correct output: 45.2902920771  | Program output: 65.1934920551 
Correct output: -89.1418064575 | Program output: -69.2386064795
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_mult} {:instruction float_yank} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction in1} {:instruction integer_shove} {:instruction -63} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_mult float_yank float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_swap integer_dup_items in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove in1 integer_shove -63 float_dec integer_yank float_add integer_mod float_dec integer_yank float_add print_float integer_div)
Errors: [19.9032 6 19.9032 7 19.9032 6 19.9032 6 19.9032 8 19.9032 7 19.9032 11 19.9032 8 19.9032 6 19.9032 7 19.9032 6 19.9032 6 19.9032 7 19.9032 7 19.9032 7 19.9032 7 19.9032 6 19.9032 6 19.9032 6 19.9032 7 19.9032 12 19.9032 6 19.9032 6 19.9032 6 19.9032 7]
Total: 671.5799999999996
Mean: 13.4316
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2349.1968140999916
Median total errors in population: 925.3086
Error averages by case: (147.5522614000017 11.242 58.07265750000041 10.24 73.55606540000002 8.417 62.53679709999957 11.03 119.85561710000145 10.234 74.07351979999962 10.195 83.57574520000082 9.434 79.4602768999997 9.298 82.43679510000003 9.292 78.6170324999999 11.284 54.3361714000007 9.21 83.54702710000018 10.14 67.70229790000026 10.24 69.84390809999894 8.51 108.24397640000032 10.211 65.06859819999929 10.207 93.70219109999917 11.012 96.17743830000019 11.807 61.912455299999614 11.107 77.84789620000011 9.242 71.19756930000064 11.025 96.58760660000111 10.219 99.77601249999917 10.327 87.34673840000119 9.281 103.36415929999873 9.602)
Error minima by case: (19.9032 3 0.091 2 10.0029 2 2.0968 2 15.02 2 12.0548 3 0.3 8 0.0968 2 7.3598 6 4.1672 7 0.2025 2 9.3991 6 7.3214 1 7.8984 3 2.8659 2 0.2219 7 0.2429 2 3.312 2 0.0 0 1.3712 7 0.1033 8 3.5654 6 5.6702 2 3.4839 1 3.7614 2)
Average genome size in population (length): 42.47
Average program size in population (points): 43.47
Average percent parens in population: 0.023
Minimum age in population: 25.16030883789062
Maximum age in population: 30.16869735717773
Average age in population: 28.21598394775391
Median age in population: 28.23108673095703
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 92
Genome diversity (% unique Plush genomes):	 0.627
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 92
Syntactic diversity (% unique Push programs):	 0.627
Total error diversity:				 0.061
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 21285193
--- Timings ---
Current time: 1529616028289 milliseconds
Total Time:          59.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.1 seconds, 40.3%
Fitness Testing:     28.4 seconds, 47.6%
Report:               7.2 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 27083.200000000426
Test mean error for best: 13.54160
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -134.6238099429
Correct output: 56.1482049432  | Program output: 76.0514049212 
Correct output: 119.906060961  | Program output: 139.809260939 
Correct output: 50.5358278922  | Program output: 70.4390278702 
Correct output: -96.9231504051 | Program output: -77.0199504271
Correct output: 106.9580346954 | Program output: 126.8612346734
Correct output: -2.8915035716  | Program output: 17.0116964064 
Correct output: 66.9280793072  | Program output: 86.8312792852 
Correct output: 30.2629795787  | Program output: 50.1661795567 
Correct output: -85.6511511165 | Program output: -65.7479511385
Correct output: 25.500872287   | Program output: 45.404072265  
Correct output: 55.6008938554  | Program output: 75.5040938334 
Correct output: 83.4159352988  | Program output: 103.3191352768
Correct output: 101.838925934  | Program output: 121.742125912 
Correct output: 25.7690669824  | Program output: 45.6722669604 
Correct output: -20.4797091942 | Program output: -0.5765092162 
Correct output: -31.146120842  | Program output: -11.242920864 
Correct output: 13.3975592307  | Program output: 33.3007592087 
Correct output: 7.1720573522   | Program output: 27.0752573302 
Correct output: 5.5319837072   | Program output: 25.4351836852 
Correct output: -2.6555905371  | Program output: 17.2476094409 
Correct output: 45.3717937277  | Program output: 65.2749937057 
Correct output: -67.2329867872 | Program output: -47.3297868092
Correct output: 45.2902920771  | Program output: 65.1934920551 
Correct output: -89.1418064575 | Program output: -69.2386064795
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_mult} {:instruction float_yank} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction integer_shove} {:instruction in1} {:instruction integer_shove} {:instruction -63} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_mult float_yank float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_swap integer_dup_items in2 float_mod float_shove float_frominteger in2 21.90319997799472 integer_shove in1 integer_shove -63 float_dec integer_yank float_add integer_mod float_dec integer_yank float_add print_float integer_div)
Errors: [19.9032 6 19.9032 7 19.9032 6 19.9032 6 19.9032 8 19.9032 7 19.9032 11 19.9032 8 19.9032 6 19.9032 7 19.9032 6 19.9032 6 19.9032 7 19.9032 7 19.9032 7 19.9032 7 19.9032 6 19.9032 6 19.9032 6 19.9032 7 19.9032 12 19.9032 6 19.9032 6 19.9032 6 19.9032 7]
Total: 671.5799999999996
Mean: 13.4316
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2528.8665157999926
Median total errors in population: 925.3086
Error averages by case: (152.3047996000018 11.287 66.50848430000107 10.224 81.13454320000054 8.61 71.2990111999987 10.901 124.93415450000202 10.318 81.78912849999921 10.211 89.54248690000085 9.453 88.06426029999959 9.373 90.43946569999967 9.247 83.68020049999946 11.365 63.00172030000071 9.072 91.22260410000015 10.01 75.1353789999999 10.343 77.11938649999898 8.702 114.26490810000084 10.379 70.7653114999986 9.826 102.55875149999918 10.913 102.15581780000001 11.737 71.56392059999902 11.153 86.44910639999964 9.278 77.65105130000056 10.993 104.22931610000163 10.291 105.12965049999843 10.429 96.10910300000184 9.255 108.54595439999879 9.898)
Error minima by case: (19.9032 6 0.245 7 7.9003 6 4.0968 6 16.9232 8 5.8484 7 0.5301 9 2.0968 8 8.3598 6 5.6512 7 0.4023 6 1.3023 6 5.4873 7 6.0643 7 3.8659 7 0.3829 7 2.2429 6 0.312 6 4.987 6 1.7126 7 0.9976 8 1.5654 6 3.6702 6 1.4839 6 1.7614 7)
Average genome size in population (length): 43.195
Average program size in population (points): 44.195
Average percent parens in population: 0.023
Minimum age in population: 27.46632957458496
Maximum age in population: 31.75236320495605
Average age in population: 29.75241839027405
Median age in population: 29.80357933044434
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.667
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.667
Total error diversity:				 0.062
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 22365068
--- Timings ---
Current time: 1529616031144 milliseconds
Total Time:          62.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.3 seconds, 40.3%
Fitness Testing:     29.8 seconds, 47.5%
Report:               7.5 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 3302.0
Test mean error for best: 1.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -156.5270099209
Correct output: 56.1482049432  | Program output: 54.1482049432 
Correct output: 119.906060961  | Program output: 117.906060961 
Correct output: 50.5358278922  | Program output: 48.5358278922 
Correct output: -96.9231504051 | Program output: -98.9231504051
Correct output: 106.9580346954 | Program output: 104.9580346954
Correct output: -2.8915035716  | Program output: -4.8915035716 
Correct output: 66.9280793072  | Program output: 64.9280793072 
Correct output: 30.2629795787  | Program output: 28.2629795787 
Correct output: -85.6511511165 | Program output: -87.6511511165
Correct output: 25.500872287   | Program output: 23.500872287  
Correct output: 55.6008938554  | Program output: 53.6008938554 
Correct output: 83.4159352988  | Program output: 81.4159352988 
Correct output: 101.838925934  | Program output: 99.838925934  
Correct output: 25.7690669824  | Program output: 23.7690669824 
Correct output: -20.4797091942 | Program output: -22.4797091942
Correct output: -31.146120842  | Program output: -33.146120842 
Correct output: 13.3975592307  | Program output: 11.3975592307 
Correct output: 7.1720573522   | Program output: 5.1720573522  
Correct output: 5.5319837072   | Program output: 3.5319837072  
Correct output: -2.6555905371  | Program output: -4.6555905371 
Correct output: 45.3717937277  | Program output: 43.3717937277 
Correct output: -67.2329867872 | Program output: -69.2329867872
Correct output: 45.2902920771  | Program output: 43.2902920771 
Correct output: -89.1418064575 | Program output: -91.1418064575
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_mult} {:instruction float_yank} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction float_pop} {:instruction in1} {:instruction integer_shove} {:instruction -63} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_yank} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_mult float_yank float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_swap integer_dup_items in2 float_mod float_shove float_frominteger in2 21.90319997799472 float_pop in1 integer_shove -63 float_dec integer_yank float_add integer_mod float_dec integer_yank float_add print_float integer_div)
Errors: [2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 3 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2]
Total: 80.0
Mean: 1.6
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2414.2046643999947
Median total errors in population: 920.3086
Error averages by case: (142.72169110000178 11.225 65.48825180000061 10.153 79.13893110000063 8.688 70.29345729999937 10.515 116.34949910000162 10.247 80.01240949999966 9.86 83.91805750000071 9.476 86.7467356000002 9.329 87.58139199999952 9.1 75.5023912999999 11.657 60.54863049999989 8.767 88.33957599999972 9.798 72.20020269999993 10.386 73.89608989999911 8.847 109.32569320000079 10.663 63.28114219999996 9.228 97.65719809999938 10.674 96.93637699999981 11.535 66.28098309999952 11.268 83.27477089999935 9.333 71.31047240000048 10.959 101.32626320000121 10.377 96.82841919999885 10.264 93.7865319000017 8.895 100.04449779999902 10.171)
Error minima by case: (2.0 1 0.245 1 2.0 1 2.0 2 2.0 1 2.0 1 0.1085 1 1.0968 1 2.0 2 2.0 1 0.1562 1 2.0 1 2.0 1 2.0 3 2.0 1 0.1757 1 0.7571 1 1.312 1 0.0 0 1.6288 1 0.3444 1 1.725 1 2.0 1 2.0 1 1.0974 2)
Average genome size in population (length): 44.454
Average program size in population (points): 45.454
Average percent parens in population: 0.022
Minimum age in population: 28.70306396484375
Maximum age in population: 33.48360443115234
Average age in population: 31.36689985942841
Median age in population: 31.40463638305664
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 65
Genome diversity (% unique Plush genomes):	 0.621
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 65
Syntactic diversity (% unique Push programs):	 0.621
Total error diversity:				 0.084
Error (vector) diversity:			 0.085
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 23476418
--- Timings ---
Current time: 1529616033990 milliseconds
Total Time:          65.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.4 seconds, 40.3%
Fitness Testing:     31.2 seconds, 47.5%
Report:               7.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -154.5270099209
Correct output: 56.1482049432  | Program output: 56.1482049432 
Correct output: 119.906060961  | Program output: 119.906060961 
Correct output: 50.5358278922  | Program output: 50.5358278922 
Correct output: -96.9231504051 | Program output: -96.9231504051
Correct output: 106.9580346954 | Program output: 106.9580346954
Correct output: -2.8915035716  | Program output: -2.8915035716 
Correct output: 66.9280793072  | Program output: 66.9280793072 
Correct output: 30.2629795787  | Program output: 30.2629795787 
Correct output: -85.6511511165 | Program output: -85.6511511165
Correct output: 25.500872287   | Program output: 25.500872287  
Correct output: 55.6008938554  | Program output: 55.6008938554 
Correct output: 83.4159352988  | Program output: 83.4159352988 
Correct output: 101.838925934  | Program output: 101.838925934 
Correct output: 25.7690669824  | Program output: 25.7690669824 
Correct output: -20.4797091942 | Program output: -20.4797091942
Correct output: -31.146120842  | Program output: -31.146120842 
Correct output: 13.3975592307  | Program output: 13.3975592307 
Correct output: 7.1720573522   | Program output: 7.1720573522  
Correct output: 5.5319837072   | Program output: 5.5319837072  
Correct output: -2.6555905371  | Program output: -2.6555905371 
Correct output: 45.3717937277  | Program output: 45.3717937277 
Correct output: -67.2329867872 | Program output: -67.2329867872
Correct output: 45.2902920771  | Program output: 45.2902920771 
Correct output: -89.1418064575 | Program output: -89.1418064575
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_rot} {:instruction in2} {:instruction integer_flush} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction float_tan} {:instruction print_float} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_mult} {:instruction float_yank} {:instruction float_frominteger} {:instruction float_rot} {:instruction integer_mult} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction in2} {:instruction float_mod} {:instruction float_shove} {:instruction float_frominteger} {:instruction in2} {:instruction 21.90319997799472} {:instruction float_pop} {:instruction in1} {:instruction integer_shove} {:instruction -63} {:instruction float_add} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_rot in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_mult float_yank float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_swap integer_dup_items in2 float_mod float_shove float_frominteger in2 21.90319997799472 float_pop in1 integer_shove -63 float_add print_float integer_div)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2311.1269437000074
Median total errors in population: 916.7382
Error averages by case: (131.7418646000015 10.598 64.81755000000092 9.797 77.95477880000065 8.28 68.77156939999907 9.745 108.24922210000162 9.897 78.10306299999928 9.216 80.83502500000054 9.685 82.75884689999971 9.141 81.64378729999979 8.446 75.09812309999981 11.284 60.707346599999376 8.72 82.91543890000017 9.579 70.21804610000014 9.852 72.33150409999934 8.444 101.65112600000074 10.359 64.04626570000076 9.207 91.73547479999948 10.34 91.33590339999995 10.795 65.8465728999993 10.789 78.32603989999983 9.056 70.86686140000037 11.007 93.72601930000141 9.796 91.44945529999879 9.707 88.93178260000153 8.277 95.14027649999919 9.908)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 46.326
Average program size in population (points): 47.326
Average percent parens in population: 0.021
Minimum age in population: 30.44850158691406
Maximum age in population: 35.02208232879639
Average age in population: 32.86114380979538
Median age in population: 32.90824437141418
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 74
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 74
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.076
Error (vector) diversity:			 0.077
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 24634568
--- Timings ---
Current time: 1529616036902 milliseconds
Total Time:          68.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.5 seconds, 40.3%
Fitness Testing:     32.6 seconds, 47.6%
Report:               8.2 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 22
Successful program: (print_integer integer_rot in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_mult float_yank float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_swap integer_dup_items in2 float_mod float_shove float_frominteger in2 21.90319997799472 float_pop in1 integer_shove -63 float_add print_float integer_div)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 35


Auto-simplifying with starting size: 35
step: 0
program: (print_integer integer_rot in2 integer_flush float_dec float_shove float_sub integer_sub float_tan print_float float_sin integer_mod integer_mult float_yank float_frominteger float_rot integer_mult float_yank integer_stackdepth integer_swap integer_dup_items in2 float_mod float_shove float_frominteger in2 21.90319997799472 float_pop in1 integer_shove -63 float_add print_float integer_div)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 35

step: 500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -154.5270099209 | Program output: -154.5270099209
Correct output: 56.1482049432  | Program output: 56.1482049432 
Correct output: 119.906060961  | Program output: 119.906060961 
Correct output: 50.5358278922  | Program output: 50.5358278922 
Correct output: -96.9231504051 | Program output: -96.9231504051
Correct output: 106.9580346954 | Program output: 106.9580346954
Correct output: -2.8915035716  | Program output: -2.8915035716 
Correct output: 66.9280793072  | Program output: 66.9280793072 
Correct output: 30.2629795787  | Program output: 30.2629795787 
Correct output: -85.6511511165 | Program output: -85.6511511165
Correct output: 25.500872287   | Program output: 25.500872287  
Correct output: 55.6008938554  | Program output: 55.6008938554 
Correct output: 83.4159352988  | Program output: 83.4159352988 
Correct output: 101.838925934  | Program output: 101.838925934 
Correct output: 25.7690669824  | Program output: 25.7690669824 
Correct output: -20.4797091942 | Program output: -20.4797091942
Correct output: -31.146120842  | Program output: -31.146120842 
Correct output: 13.3975592307  | Program output: 13.3975592307 
Correct output: 7.1720573522   | Program output: 7.1720573522  
Correct output: 5.5319837072   | Program output: 5.5319837072  
Correct output: -2.6555905371  | Program output: -2.6555905371 
Correct output: 45.3717937277  | Program output: 45.3717937277 
Correct output: -67.2329867872 | Program output: -67.2329867872
Correct output: 45.2902920771  | Program output: 45.2902920771 
Correct output: -89.1418064575 | Program output: -89.1418064575
;;******************************
